package org.telegram.messenger;

import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.AssetFileDescriptor;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.drawable.BitmapDrawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.media.MediaCodecInfo;
import android.media.MediaMetadataRetriever;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.TextUtils;
import android.util.Base64;
import android.util.SparseArray;
import android.webkit.MimeTypeMap;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.collection.LongSparseArray;
import androidx.core.view.inputmethod.InputContentInfoCompat;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.json.JSONObject;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.audioinfo.AudioInfo;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.QuickAckDelegate;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.SerializedData;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC$BotInlineMessage;
import org.telegram.tgnet.TLRPC$BotInlineResult;
import org.telegram.tgnet.TLRPC$Chat;
import org.telegram.tgnet.TLRPC$ChatFull;
import org.telegram.tgnet.TLRPC$DecryptedMessage;
import org.telegram.tgnet.TLRPC$DecryptedMessageAction;
import org.telegram.tgnet.TLRPC$DecryptedMessageMedia;
import org.telegram.tgnet.TLRPC$Document;
import org.telegram.tgnet.TLRPC$DocumentAttribute;
import org.telegram.tgnet.TLRPC$EncryptedChat;
import org.telegram.tgnet.TLRPC$FileLocation;
import org.telegram.tgnet.TLRPC$GeoPoint;
import org.telegram.tgnet.TLRPC$InputCheckPasswordSRP;
import org.telegram.tgnet.TLRPC$InputDocument;
import org.telegram.tgnet.TLRPC$InputEncryptedFile;
import org.telegram.tgnet.TLRPC$InputFile;
import org.telegram.tgnet.TLRPC$InputMedia;
import org.telegram.tgnet.TLRPC$InputPeer;
import org.telegram.tgnet.TLRPC$InputStickerSet;
import org.telegram.tgnet.TLRPC$KeyboardButton;
import org.telegram.tgnet.TLRPC$Message;
import org.telegram.tgnet.TLRPC$MessageAction;
import org.telegram.tgnet.TLRPC$MessageEntity;
import org.telegram.tgnet.TLRPC$MessageFwdHeader;
import org.telegram.tgnet.TLRPC$MessageMedia;
import org.telegram.tgnet.TLRPC$MessageReplies;
import org.telegram.tgnet.TLRPC$Peer;
import org.telegram.tgnet.TLRPC$Photo;
import org.telegram.tgnet.TLRPC$PhotoSize;
import org.telegram.tgnet.TLRPC$PollResults;
import org.telegram.tgnet.TLRPC$ReplyMarkup;
import org.telegram.tgnet.TLRPC$TL_account_getPassword;
import org.telegram.tgnet.TLRPC$TL_account_password;
import org.telegram.tgnet.TLRPC$TL_botInlineMediaResult;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaAuto;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaContact;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaGeo;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageText;
import org.telegram.tgnet.TLRPC$TL_dataJSON;
import org.telegram.tgnet.TLRPC$TL_decryptedMessage;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionAbortKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionAcceptKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionCommitKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionDeleteMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionFlushHistory;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionNoop;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionNotifyLayer;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionReadMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionRequestKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionResend;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionScreenshotMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionTyping;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaContact;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaGeoPoint;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_decryptedMessage_layer45;
import org.telegram.tgnet.TLRPC$TL_document;
import org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated;
import org.telegram.tgnet.TLRPC$TL_documentAttributeAudio;
import org.telegram.tgnet.TLRPC$TL_documentAttributeFilename;
import org.telegram.tgnet.TLRPC$TL_documentAttributeHasStickers;
import org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize;
import org.telegram.tgnet.TLRPC$TL_documentAttributeSticker;
import org.telegram.tgnet.TLRPC$TL_documentAttributeSticker_layer55;
import org.telegram.tgnet.TLRPC$TL_documentAttributeVideo;
import org.telegram.tgnet.TLRPC$TL_document_layer82;
import org.telegram.tgnet.TLRPC$TL_error;
import org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC$TL_fileLocation_layer82;
import org.telegram.tgnet.TLRPC$TL_game;
import org.telegram.tgnet.TLRPC$TL_geoPoint;
import org.telegram.tgnet.TLRPC$TL_inputCheckPasswordEmpty;
import org.telegram.tgnet.TLRPC$TL_inputDocument;
import org.telegram.tgnet.TLRPC$TL_inputEncryptedFile;
import org.telegram.tgnet.TLRPC$TL_inputGeoPoint;
import org.telegram.tgnet.TLRPC$TL_inputInvoiceMessage;
import org.telegram.tgnet.TLRPC$TL_inputMediaContact;
import org.telegram.tgnet.TLRPC$TL_inputMediaDice;
import org.telegram.tgnet.TLRPC$TL_inputMediaDocument;
import org.telegram.tgnet.TLRPC$TL_inputMediaGame;
import org.telegram.tgnet.TLRPC$TL_inputMediaGeoLive;
import org.telegram.tgnet.TLRPC$TL_inputMediaGeoPoint;
import org.telegram.tgnet.TLRPC$TL_inputMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_inputMediaPoll;
import org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument;
import org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto;
import org.telegram.tgnet.TLRPC$TL_inputMediaVenue;
import org.telegram.tgnet.TLRPC$TL_inputPeerChannel;
import org.telegram.tgnet.TLRPC$TL_inputPeerChat;
import org.telegram.tgnet.TLRPC$TL_inputPeerEmpty;
import org.telegram.tgnet.TLRPC$TL_inputPeerSelf;
import org.telegram.tgnet.TLRPC$TL_inputPeerUser;
import org.telegram.tgnet.TLRPC$TL_inputPhoto;
import org.telegram.tgnet.TLRPC$TL_inputSingleMedia;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetID;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetItem;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC$TL_inputUserSelf;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonRow;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonSwitchInline;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonUrl;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonUrlAuth;
import org.telegram.tgnet.TLRPC$TL_message;
import org.telegram.tgnet.TLRPC$TL_messageActionScreenshotTaken;
import org.telegram.tgnet.TLRPC$TL_messageEncryptedAction;
import org.telegram.tgnet.TLRPC$TL_messageEntityBold;
import org.telegram.tgnet.TLRPC$TL_messageEntityCode;
import org.telegram.tgnet.TLRPC$TL_messageEntityCustomEmoji;
import org.telegram.tgnet.TLRPC$TL_messageEntityItalic;
import org.telegram.tgnet.TLRPC$TL_messageEntityPre;
import org.telegram.tgnet.TLRPC$TL_messageEntitySpoiler;
import org.telegram.tgnet.TLRPC$TL_messageEntityTextUrl;
import org.telegram.tgnet.TLRPC$TL_messageEntityUrl;
import org.telegram.tgnet.TLRPC$TL_messageFwdHeader;
import org.telegram.tgnet.TLRPC$TL_messageMediaContact;
import org.telegram.tgnet.TLRPC$TL_messageMediaDice;
import org.telegram.tgnet.TLRPC$TL_messageMediaDocument;
import org.telegram.tgnet.TLRPC$TL_messageMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_messageMediaGame;
import org.telegram.tgnet.TLRPC$TL_messageMediaGeo;
import org.telegram.tgnet.TLRPC$TL_messageMediaGeoLive;
import org.telegram.tgnet.TLRPC$TL_messageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_messageMediaPoll;
import org.telegram.tgnet.TLRPC$TL_messageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_messageReplies;
import org.telegram.tgnet.TLRPC$TL_messageReplyHeader;
import org.telegram.tgnet.TLRPC$TL_messageService;
import org.telegram.tgnet.TLRPC$TL_message_secret;
import org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer;
import org.telegram.tgnet.TLRPC$TL_messages_editMessage;
import org.telegram.tgnet.TLRPC$TL_messages_forwardMessages;
import org.telegram.tgnet.TLRPC$TL_messages_getBotCallbackAnswer;
import org.telegram.tgnet.TLRPC$TL_messages_getStickerSet;
import org.telegram.tgnet.TLRPC$TL_messages_historyImport;
import org.telegram.tgnet.TLRPC$TL_messages_initHistoryImport;
import org.telegram.tgnet.TLRPC$TL_messages_messages;
import org.telegram.tgnet.TLRPC$TL_messages_requestUrlAuth;
import org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendInlineBotResult;
import org.telegram.tgnet.TLRPC$TL_messages_sendMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendMessage;
import org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendReaction;
import org.telegram.tgnet.TLRPC$TL_messages_sendScreenshotNotification;
import org.telegram.tgnet.TLRPC$TL_messages_sendVote;
import org.telegram.tgnet.TLRPC$TL_messages_startHistoryImport;
import org.telegram.tgnet.TLRPC$TL_messages_stickerSet;
import org.telegram.tgnet.TLRPC$TL_messages_uploadImportedMedia;
import org.telegram.tgnet.TLRPC$TL_messages_uploadMedia;
import org.telegram.tgnet.TLRPC$TL_payments_getPaymentForm;
import org.telegram.tgnet.TLRPC$TL_payments_getPaymentReceipt;
import org.telegram.tgnet.TLRPC$TL_payments_paymentForm;
import org.telegram.tgnet.TLRPC$TL_payments_paymentReceipt;
import org.telegram.tgnet.TLRPC$TL_peerChannel;
import org.telegram.tgnet.TLRPC$TL_peerUser;
import org.telegram.tgnet.TLRPC$TL_photo;
import org.telegram.tgnet.TLRPC$TL_photoCachedSize;
import org.telegram.tgnet.TLRPC$TL_photoEmpty;
import org.telegram.tgnet.TLRPC$TL_photoPathSize;
import org.telegram.tgnet.TLRPC$TL_photoSize;
import org.telegram.tgnet.TLRPC$TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC$TL_photoSizeProgressive;
import org.telegram.tgnet.TLRPC$TL_photoSize_layer127;
import org.telegram.tgnet.TLRPC$TL_photoStrippedSize;
import org.telegram.tgnet.TLRPC$TL_pollAnswer;
import org.telegram.tgnet.TLRPC$TL_replyInlineMarkup;
import org.telegram.tgnet.TLRPC$TL_restrictionReason;
import org.telegram.tgnet.TLRPC$TL_stickers_createStickerSet;
import org.telegram.tgnet.TLRPC$TL_updateEditChannelMessage;
import org.telegram.tgnet.TLRPC$TL_updateEditMessage;
import org.telegram.tgnet.TLRPC$TL_updateMessageID;
import org.telegram.tgnet.TLRPC$TL_updateNewChannelMessage;
import org.telegram.tgnet.TLRPC$TL_updateNewMessage;
import org.telegram.tgnet.TLRPC$TL_updateNewScheduledMessage;
import org.telegram.tgnet.TLRPC$TL_updateShortSentMessage;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultAccepted;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultDefault;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultRequest;
import org.telegram.tgnet.TLRPC$TL_user;
import org.telegram.tgnet.TLRPC$TL_userContact_old2;
import org.telegram.tgnet.TLRPC$TL_userRequest_old2;
import org.telegram.tgnet.TLRPC$TL_webDocument;
import org.telegram.tgnet.TLRPC$TL_webPagePending;
import org.telegram.tgnet.TLRPC$TL_webPageUrlPending;
import org.telegram.tgnet.TLRPC$Update;
import org.telegram.tgnet.TLRPC$Updates;
import org.telegram.tgnet.TLRPC$User;
import org.telegram.tgnet.TLRPC$UserFull;
import org.telegram.tgnet.TLRPC$WebDocument;
import org.telegram.tgnet.TLRPC$WebPage;
import org.telegram.tgnet.TLRPC$messages_Messages;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.ChatActivity;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.Point;
import org.telegram.ui.PaymentFormActivity;
import org.telegram.ui.TwoStepVerificationActivity;
import org.telegram.ui.TwoStepVerificationSetupActivity;
/* loaded from: classes.dex */
public class SendMessagesHelper extends BaseController implements NotificationCenter.NotificationCenterDelegate {
    private static final int ERROR_TYPE_FILE_TOO_LARGE = 2;
    private static final int ERROR_TYPE_UNSUPPORTED = 1;
    private static volatile SendMessagesHelper[] Instance;
    private static DispatchQueue mediaSendQueue = new DispatchQueue("mediaSendQueue");
    private static ThreadPoolExecutor mediaSendThreadPool;
    private HashMap<String, ArrayList<DelayedMessage>> delayedMessages = new HashMap<>();
    private SparseArray<MessageObject> unsentMessages = new SparseArray<>();
    private SparseArray<TLRPC$Message> sendingMessages = new SparseArray<>();
    private SparseArray<TLRPC$Message> editingMessages = new SparseArray<>();
    private SparseArray<TLRPC$Message> uploadMessages = new SparseArray<>();
    private LongSparseArray<Integer> sendingMessagesIdDialogs = new LongSparseArray<>();
    private LongSparseArray<Integer> uploadingMessagesIdDialogs = new LongSparseArray<>();
    private HashMap<String, MessageObject> waitingForLocation = new HashMap<>();
    private HashMap<String, Boolean> waitingForCallback = new HashMap<>();
    private HashMap<String, byte[]> waitingForVote = new HashMap<>();
    private LongSparseArray<Long> voteSendTime = new LongSparseArray<>();
    private HashMap<String, ImportingHistory> importingHistoryFiles = new HashMap<>();
    private LongSparseArray<ImportingHistory> importingHistoryMap = new LongSparseArray<>();
    private HashMap<String, ImportingStickers> importingStickersFiles = new HashMap<>();
    private HashMap<String, ImportingStickers> importingStickersMap = new HashMap<>();
    private LocationProvider locationProvider = new LocationProvider(new AnonymousClass1());

    /* loaded from: classes.dex */
    public static class SendingMediaInfo {
        public boolean canDeleteAfter;
        public String caption;
        public ArrayList<TLRPC$MessageEntity> entities;
        public boolean forceImage;
        public TLRPC$BotInlineResult inlineResult;
        public boolean isVideo;
        public ArrayList<TLRPC$InputDocument> masks;
        public String paintPath;
        public HashMap<String, String> params;
        public String path;
        public MediaController.SearchImage searchImage;
        public String thumbPath;
        public int ttl;
        public Uri uri;
        public VideoEditedInfo videoEditedInfo;
    }

    /* loaded from: classes.dex */
    public class ImportingHistory {
        public long dialogId;
        public double estimatedUploadSpeed;
        public String historyPath;
        public long importId;
        private long lastUploadSize;
        private long lastUploadTime;
        public TLRPC$InputPeer peer;
        public long totalSize;
        public int uploadProgress;
        public long uploadedSize;
        public ArrayList<Uri> mediaPaths = new ArrayList<>();
        public HashSet<String> uploadSet = new HashSet<>();
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public ArrayList<String> uploadMedia = new ArrayList<>();
        public int timeUntilFinish = Integer.MAX_VALUE;

        public ImportingHistory() {
            SendMessagesHelper.this = r1;
        }

        public void initImport(TLRPC$InputFile tLRPC$InputFile) {
            TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport = new TLRPC$TL_messages_initHistoryImport();
            tLRPC$TL_messages_initHistoryImport.file = tLRPC$InputFile;
            tLRPC$TL_messages_initHistoryImport.media_count = this.mediaPaths.size();
            tLRPC$TL_messages_initHistoryImport.peer = this.peer;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_initHistoryImport, new AnonymousClass1(tLRPC$TL_messages_initHistoryImport), 2);
        }

        /* renamed from: org.telegram.messenger.SendMessagesHelper$ImportingHistory$1 */
        /* loaded from: classes.dex */
        public class AnonymousClass1 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_messages_initHistoryImport val$req;

            AnonymousClass1(TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport) {
                ImportingHistory.this = r1;
                this.val$req = tLRPC$TL_messages_initHistoryImport;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingHistory$1$$ExternalSyntheticLambda0(this, tLObject, this.val$req, tLRPC$TL_error));
            }

            public /* synthetic */ void lambda$run$0(TLObject tLObject, TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport, TLRPC$TL_error tLRPC$TL_error) {
                if (!(tLObject instanceof TLRPC$TL_messages_historyImport)) {
                    SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), tLRPC$TL_messages_initHistoryImport, tLRPC$TL_error);
                    return;
                }
                ImportingHistory importingHistory = ImportingHistory.this;
                importingHistory.importId = ((TLRPC$TL_messages_historyImport) tLObject).id;
                importingHistory.uploadSet.remove(importingHistory.historyPath);
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                if (ImportingHistory.this.uploadSet.isEmpty()) {
                    ImportingHistory.this.startImport();
                }
                ImportingHistory.this.lastUploadTime = SystemClock.elapsedRealtime();
                int size = ImportingHistory.this.uploadMedia.size();
                for (int i = 0; i < size; i++) {
                    SendMessagesHelper.this.getFileLoader().uploadFile(ImportingHistory.this.uploadMedia.get(i), false, true, 67108864);
                }
            }
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        public void onFileFailedToUpload(String str) {
            if (str.equals(this.historyPath)) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
                TLRPC$TL_error tLRPC$TL_error = new TLRPC$TL_error();
                tLRPC$TL_error.code = 400;
                tLRPC$TL_error.text = "IMPORT_UPLOAD_FAILED";
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId), new TLRPC$TL_messages_initHistoryImport(), tLRPC$TL_error);
                return;
            }
            this.uploadSet.remove(str);
        }

        public void addUploadProgress(String str, long j, float f) {
            this.uploadProgresses.put(str, Float.valueOf(f));
            this.uploadSize.put(str, Long.valueOf(j));
            this.uploadedSize = 0L;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long elapsedRealtime = SystemClock.elapsedRealtime();
            if (!str.equals(this.historyPath)) {
                long j2 = this.uploadedSize;
                long j3 = this.lastUploadSize;
                if (j2 != j3) {
                    long j4 = this.lastUploadTime;
                    if (elapsedRealtime != j4) {
                        double d = elapsedRealtime - j4;
                        Double.isNaN(d);
                        double d2 = j2 - j3;
                        Double.isNaN(d2);
                        double d3 = d2 / (d / 1000.0d);
                        double d4 = this.estimatedUploadSpeed;
                        if (d4 == 0.0d) {
                            this.estimatedUploadSpeed = d3;
                        } else {
                            this.estimatedUploadSpeed = (d3 * 0.01d) + (0.99d * d4);
                        }
                        double d5 = (this.totalSize - j2) * 1000;
                        double d6 = this.estimatedUploadSpeed;
                        Double.isNaN(d5);
                        this.timeUntilFinish = (int) (d5 / d6);
                        this.lastUploadSize = j2;
                        this.lastUploadTime = elapsedRealtime;
                    }
                }
            }
            int uploadedCount = (int) ((((float) getUploadedCount()) / ((float) getTotalCount())) * 100.0f);
            if (this.uploadProgress != uploadedCount) {
                this.uploadProgress = uploadedCount;
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
            }
        }

        public void onMediaImport(String str, long j, TLRPC$InputFile tLRPC$InputFile) {
            addUploadProgress(str, j, 1.0f);
            TLRPC$TL_messages_uploadImportedMedia tLRPC$TL_messages_uploadImportedMedia = new TLRPC$TL_messages_uploadImportedMedia();
            tLRPC$TL_messages_uploadImportedMedia.peer = this.peer;
            tLRPC$TL_messages_uploadImportedMedia.import_id = this.importId;
            tLRPC$TL_messages_uploadImportedMedia.file_name = new File(str).getName();
            MimeTypeMap singleton = MimeTypeMap.getSingleton();
            int lastIndexOf = tLRPC$TL_messages_uploadImportedMedia.file_name.lastIndexOf(46);
            String lowerCase = lastIndexOf != -1 ? tLRPC$TL_messages_uploadImportedMedia.file_name.substring(lastIndexOf + 1).toLowerCase() : "txt";
            String mimeTypeFromExtension = singleton.getMimeTypeFromExtension(lowerCase);
            if (mimeTypeFromExtension == null) {
                if ("opus".equals(lowerCase)) {
                    mimeTypeFromExtension = "audio/opus";
                } else {
                    mimeTypeFromExtension = "webp".equals(lowerCase) ? "image/webp" : "text/plain";
                }
            }
            if (mimeTypeFromExtension.equals("image/jpg") || mimeTypeFromExtension.equals("image/jpeg")) {
                TLRPC$TL_inputMediaUploadedPhoto tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                tLRPC$TL_inputMediaUploadedPhoto.file = tLRPC$InputFile;
                tLRPC$TL_messages_uploadImportedMedia.media = tLRPC$TL_inputMediaUploadedPhoto;
            } else {
                TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                tLRPC$TL_inputMediaUploadedDocument.file = tLRPC$InputFile;
                tLRPC$TL_inputMediaUploadedDocument.mime_type = mimeTypeFromExtension;
                tLRPC$TL_messages_uploadImportedMedia.media = tLRPC$TL_inputMediaUploadedDocument;
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_uploadImportedMedia, new AnonymousClass2(str), 2);
        }

        /* renamed from: org.telegram.messenger.SendMessagesHelper$ImportingHistory$2 */
        /* loaded from: classes.dex */
        public class AnonymousClass2 implements RequestDelegate {
            final /* synthetic */ String val$path;

            AnonymousClass2(String str) {
                ImportingHistory.this = r1;
                this.val$path = str;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingHistory$2$$ExternalSyntheticLambda0(this, this.val$path));
            }

            public /* synthetic */ void lambda$run$0(String str) {
                ImportingHistory.this.uploadSet.remove(str);
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                if (ImportingHistory.this.uploadSet.isEmpty()) {
                    ImportingHistory.this.startImport();
                }
            }
        }

        public void startImport() {
            TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport = new TLRPC$TL_messages_startHistoryImport();
            tLRPC$TL_messages_startHistoryImport.peer = this.peer;
            tLRPC$TL_messages_startHistoryImport.import_id = this.importId;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_startHistoryImport, new AnonymousClass3(tLRPC$TL_messages_startHistoryImport));
        }

        /* renamed from: org.telegram.messenger.SendMessagesHelper$ImportingHistory$3 */
        /* loaded from: classes.dex */
        public class AnonymousClass3 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_messages_startHistoryImport val$req;

            AnonymousClass3(TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport) {
                ImportingHistory.this = r1;
                this.val$req = tLRPC$TL_messages_startHistoryImport;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingHistory$3$$ExternalSyntheticLambda0(this, tLRPC$TL_error, this.val$req));
            }

            public /* synthetic */ void lambda$run$0(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport) {
                SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                if (tLRPC$TL_error == null) {
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                } else {
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), tLRPC$TL_messages_startHistoryImport, tLRPC$TL_error);
                }
            }
        }

        public void setImportProgress(int i) {
            if (i == 100) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
            }
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
        }
    }

    /* loaded from: classes.dex */
    public static class ImportingSticker {
        public boolean animated;
        public String emoji;
        public TLRPC$TL_inputStickerSetItem item;
        public String mimeType;
        public String path;
        public boolean validated;

        public void uploadMedia(int i, TLRPC$InputFile tLRPC$InputFile, Runnable runnable) {
            TLRPC$TL_messages_uploadMedia tLRPC$TL_messages_uploadMedia = new TLRPC$TL_messages_uploadMedia();
            tLRPC$TL_messages_uploadMedia.peer = new TLRPC$TL_inputPeerSelf();
            TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
            tLRPC$TL_messages_uploadMedia.media = tLRPC$TL_inputMediaUploadedDocument;
            tLRPC$TL_inputMediaUploadedDocument.file = tLRPC$InputFile;
            tLRPC$TL_inputMediaUploadedDocument.mime_type = this.mimeType;
            ConnectionsManager.getInstance(i).sendRequest(tLRPC$TL_messages_uploadMedia, new AnonymousClass1(runnable), 2);
        }

        /* renamed from: org.telegram.messenger.SendMessagesHelper$ImportingSticker$1 */
        /* loaded from: classes.dex */
        public class AnonymousClass1 implements RequestDelegate {
            final /* synthetic */ Runnable val$onFinish;

            AnonymousClass1(Runnable runnable) {
                ImportingSticker.this = r1;
                this.val$onFinish = runnable;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingSticker$1$$ExternalSyntheticLambda0(this, tLObject, this.val$onFinish));
            }

            public /* synthetic */ void lambda$run$0(TLObject tLObject, Runnable runnable) {
                if (tLObject instanceof TLRPC$TL_messageMediaDocument) {
                    ImportingSticker.this.item = new TLRPC$TL_inputStickerSetItem();
                    ImportingSticker.this.item.document = new TLRPC$TL_inputDocument();
                    ImportingSticker importingSticker = ImportingSticker.this;
                    TLRPC$TL_inputStickerSetItem tLRPC$TL_inputStickerSetItem = importingSticker.item;
                    TLRPC$InputDocument tLRPC$InputDocument = tLRPC$TL_inputStickerSetItem.document;
                    TLRPC$Document tLRPC$Document = ((TLRPC$TL_messageMediaDocument) tLObject).document;
                    tLRPC$InputDocument.id = tLRPC$Document.id;
                    tLRPC$InputDocument.access_hash = tLRPC$Document.access_hash;
                    tLRPC$InputDocument.file_reference = tLRPC$Document.file_reference;
                    String str = importingSticker.emoji;
                    if (str == null) {
                        str = "";
                    }
                    tLRPC$TL_inputStickerSetItem.emoji = str;
                    importingSticker.mimeType = tLRPC$Document.mime_type;
                } else {
                    ImportingSticker importingSticker2 = ImportingSticker.this;
                    if (importingSticker2.animated) {
                        importingSticker2.mimeType = "application/x-bad-tgsticker";
                    }
                }
                runnable.run();
            }
        }
    }

    /* loaded from: classes.dex */
    public class ImportingStickers {
        public double estimatedUploadSpeed;
        private long lastUploadSize;
        private long lastUploadTime;
        public String shortName;
        public String software;
        public String title;
        public long totalSize;
        public int uploadProgress;
        public long uploadedSize;
        public HashMap<String, ImportingSticker> uploadSet = new HashMap<>();
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public ArrayList<ImportingSticker> uploadMedia = new ArrayList<>();
        public int timeUntilFinish = Integer.MAX_VALUE;

        public ImportingStickers() {
            SendMessagesHelper.this = r1;
        }

        public void initImport() {
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
            this.lastUploadTime = SystemClock.elapsedRealtime();
            int size = this.uploadMedia.size();
            for (int i = 0; i < size; i++) {
                SendMessagesHelper.this.getFileLoader().uploadFile(this.uploadMedia.get(i).path, false, true, 67108864);
            }
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        public void onFileFailedToUpload(String str) {
            ImportingSticker remove = this.uploadSet.remove(str);
            if (remove != null) {
                this.uploadMedia.remove(remove);
            }
        }

        public void addUploadProgress(String str, long j, float f) {
            this.uploadProgresses.put(str, Float.valueOf(f));
            this.uploadSize.put(str, Long.valueOf(j));
            this.uploadedSize = 0L;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long elapsedRealtime = SystemClock.elapsedRealtime();
            long j2 = this.uploadedSize;
            long j3 = this.lastUploadSize;
            if (j2 != j3) {
                long j4 = this.lastUploadTime;
                if (elapsedRealtime != j4) {
                    double d = elapsedRealtime - j4;
                    Double.isNaN(d);
                    double d2 = j2 - j3;
                    Double.isNaN(d2);
                    double d3 = d2 / (d / 1000.0d);
                    double d4 = this.estimatedUploadSpeed;
                    if (d4 == 0.0d) {
                        this.estimatedUploadSpeed = d3;
                    } else {
                        this.estimatedUploadSpeed = (d3 * 0.01d) + (0.99d * d4);
                    }
                    double d5 = (this.totalSize - j2) * 1000;
                    double d6 = this.estimatedUploadSpeed;
                    Double.isNaN(d5);
                    this.timeUntilFinish = (int) (d5 / d6);
                    this.lastUploadSize = j2;
                    this.lastUploadTime = elapsedRealtime;
                }
            }
            int uploadedCount = (int) ((((float) getUploadedCount()) / ((float) getTotalCount())) * 100.0f);
            if (this.uploadProgress != uploadedCount) {
                this.uploadProgress = uploadedCount;
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
            }
        }

        public void onMediaImport(String str, long j, TLRPC$InputFile tLRPC$InputFile) {
            addUploadProgress(str, j, 1.0f);
            ImportingSticker importingSticker = this.uploadSet.get(str);
            if (importingSticker == null) {
                return;
            }
            importingSticker.uploadMedia(SendMessagesHelper.this.currentAccount, tLRPC$InputFile, new SendMessagesHelper$ImportingStickers$$ExternalSyntheticLambda0(this, str));
        }

        public /* synthetic */ void lambda$onMediaImport$0(String str) {
            this.uploadSet.remove(str);
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
            if (this.uploadSet.isEmpty()) {
                startImport();
            }
        }

        public void startImport() {
            TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet = new TLRPC$TL_stickers_createStickerSet();
            tLRPC$TL_stickers_createStickerSet.user_id = new TLRPC$TL_inputUserSelf();
            tLRPC$TL_stickers_createStickerSet.title = this.title;
            tLRPC$TL_stickers_createStickerSet.short_name = this.shortName;
            tLRPC$TL_stickers_createStickerSet.animated = this.uploadMedia.get(0).animated;
            String str = this.software;
            if (str != null) {
                tLRPC$TL_stickers_createStickerSet.software = str;
                tLRPC$TL_stickers_createStickerSet.flags |= 8;
            }
            int size = this.uploadMedia.size();
            for (int i = 0; i < size; i++) {
                TLRPC$TL_inputStickerSetItem tLRPC$TL_inputStickerSetItem = this.uploadMedia.get(i).item;
                if (tLRPC$TL_inputStickerSetItem != null) {
                    tLRPC$TL_stickers_createStickerSet.stickers.add(tLRPC$TL_inputStickerSetItem);
                }
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_stickers_createStickerSet, new AnonymousClass1(tLRPC$TL_stickers_createStickerSet));
        }

        /* renamed from: org.telegram.messenger.SendMessagesHelper$ImportingStickers$1 */
        /* loaded from: classes.dex */
        public class AnonymousClass1 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_stickers_createStickerSet val$req;

            AnonymousClass1(TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet) {
                ImportingStickers.this = r1;
                this.val$req = tLRPC$TL_stickers_createStickerSet;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingStickers$1$$ExternalSyntheticLambda0(this, tLRPC$TL_error, this.val$req, tLObject));
            }

            public /* synthetic */ void lambda$run$0(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet, TLObject tLObject) {
                SendMessagesHelper.this.importingStickersMap.remove(ImportingStickers.this.shortName);
                if (tLRPC$TL_error == null) {
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName);
                } else {
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName, tLRPC$TL_stickers_createStickerSet, tLRPC$TL_error);
                }
                if (tLObject instanceof TLRPC$TL_messages_stickerSet) {
                    NotificationCenter notificationCenter = SendMessagesHelper.this.getNotificationCenter();
                    int i = NotificationCenter.stickersImportComplete;
                    if (notificationCenter.hasObservers(i)) {
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(i, tLObject);
                    } else {
                        SendMessagesHelper.this.getMediaDataController().toggleStickerSet(null, tLObject, 2, null, false, false);
                    }
                }
            }
        }

        public void setImportProgress(int i) {
            if (i == 100) {
                SendMessagesHelper.this.importingStickersMap.remove(this.shortName);
            }
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
        }
    }

    static {
        int availableProcessors = Build.VERSION.SDK_INT >= 17 ? Runtime.getRuntime().availableProcessors() : 2;
        mediaSendThreadPool = new ThreadPoolExecutor(availableProcessors, availableProcessors, 60L, TimeUnit.SECONDS, new LinkedBlockingQueue());
        Instance = new SendMessagesHelper[4];
    }

    /* loaded from: classes.dex */
    public static class MediaSendPrepareWorker {
        public volatile String parentObject;
        public volatile TLRPC$TL_photo photo;
        public CountDownLatch sync;

        private MediaSendPrepareWorker() {
        }

        /* synthetic */ MediaSendPrepareWorker(AnonymousClass1 anonymousClass1) {
            this();
        }
    }

    /* renamed from: org.telegram.messenger.SendMessagesHelper$1 */
    /* loaded from: classes.dex */
    public class AnonymousClass1 implements LocationProvider.LocationProviderDelegate {
        AnonymousClass1() {
            SendMessagesHelper.this = r1;
        }

        @Override // org.telegram.messenger.SendMessagesHelper.LocationProvider.LocationProviderDelegate
        public void onLocationAcquired(Location location) {
            SendMessagesHelper.this.sendLocation(location);
            SendMessagesHelper.this.waitingForLocation.clear();
        }

        @Override // org.telegram.messenger.SendMessagesHelper.LocationProvider.LocationProviderDelegate
        public void onUnableLocationAcquire() {
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.wasUnableToFindCurrentLocation, new HashMap(SendMessagesHelper.this.waitingForLocation));
            SendMessagesHelper.this.waitingForLocation.clear();
        }
    }

    /* loaded from: classes.dex */
    public static class LocationProvider {
        private LocationProviderDelegate delegate;
        private Location lastKnownLocation;
        private LocationManager locationManager;
        private Runnable locationQueryCancelRunnable;
        private GpsLocationListener gpsLocationListener = new GpsLocationListener(this, null);
        private GpsLocationListener networkLocationListener = new GpsLocationListener(this, null);

        /* loaded from: classes.dex */
        public interface LocationProviderDelegate {
            void onLocationAcquired(Location location);

            void onUnableLocationAcquire();
        }

        /* loaded from: classes.dex */
        public class GpsLocationListener implements LocationListener {
            @Override // android.location.LocationListener
            public void onProviderDisabled(String str) {
            }

            @Override // android.location.LocationListener
            public void onProviderEnabled(String str) {
            }

            @Override // android.location.LocationListener
            public void onStatusChanged(String str, int i, Bundle bundle) {
            }

            private GpsLocationListener() {
                LocationProvider.this = r1;
            }

            /* synthetic */ GpsLocationListener(LocationProvider locationProvider, AnonymousClass1 anonymousClass1) {
                this();
            }

            @Override // android.location.LocationListener
            public void onLocationChanged(Location location) {
                if (location == null || LocationProvider.this.locationQueryCancelRunnable == null) {
                    return;
                }
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("found location " + location);
                }
                LocationProvider.this.lastKnownLocation = location;
                if (location.getAccuracy() >= 100.0f) {
                    return;
                }
                if (LocationProvider.this.delegate != null) {
                    LocationProvider.this.delegate.onLocationAcquired(location);
                }
                if (LocationProvider.this.locationQueryCancelRunnable != null) {
                    AndroidUtilities.cancelRunOnUIThread(LocationProvider.this.locationQueryCancelRunnable);
                }
                LocationProvider.this.cleanup();
            }
        }

        public LocationProvider() {
        }

        public LocationProvider(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        public void setDelegate(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        public void cleanup() {
            this.locationManager.removeUpdates(this.gpsLocationListener);
            this.locationManager.removeUpdates(this.networkLocationListener);
            this.lastKnownLocation = null;
            this.locationQueryCancelRunnable = null;
        }

        public void start() {
            if (this.locationManager == null) {
                this.locationManager = (LocationManager) ApplicationLoader.applicationContext.getSystemService("location");
            }
            try {
                this.locationManager.requestLocationUpdates("gps", 1L, 0.0f, this.gpsLocationListener);
            } catch (Exception e) {
                FileLog.e(e);
            }
            try {
                this.locationManager.requestLocationUpdates("network", 1L, 0.0f, this.networkLocationListener);
            } catch (Exception e2) {
                FileLog.e(e2);
            }
            try {
                Location lastKnownLocation = this.locationManager.getLastKnownLocation("gps");
                this.lastKnownLocation = lastKnownLocation;
                if (lastKnownLocation == null) {
                    this.lastKnownLocation = this.locationManager.getLastKnownLocation("network");
                }
            } catch (Exception e3) {
                FileLog.e(e3);
            }
            Runnable runnable = this.locationQueryCancelRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            SendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0 sendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0 = new SendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0(this);
            this.locationQueryCancelRunnable = sendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0;
            AndroidUtilities.runOnUIThread(sendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0, 5000L);
        }

        public /* synthetic */ void lambda$start$0() {
            LocationProviderDelegate locationProviderDelegate = this.delegate;
            if (locationProviderDelegate != null) {
                Location location = this.lastKnownLocation;
                if (location != null) {
                    locationProviderDelegate.onLocationAcquired(location);
                } else {
                    locationProviderDelegate.onUnableLocationAcquire();
                }
            }
            cleanup();
        }

        public void stop() {
            if (this.locationManager == null) {
                return;
            }
            Runnable runnable = this.locationQueryCancelRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            cleanup();
        }
    }

    /* loaded from: classes.dex */
    public class DelayedMessageSendAfterRequest {
        public DelayedMessage delayedMessage;
        public MessageObject msgObj;
        public ArrayList<MessageObject> msgObjs;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public TLObject request;
        public boolean scheduled;

        protected DelayedMessageSendAfterRequest() {
            SendMessagesHelper.this = r1;
        }
    }

    /* loaded from: classes.dex */
    public class DelayedMessage {
        public TLRPC$EncryptedChat encryptedChat;
        public HashMap<Object, Object> extraHashMap;
        public int finalGroupMessage;
        public long groupId;
        public String httpLocation;
        public ArrayList<String> httpLocations;
        public ArrayList<TLRPC$InputMedia> inputMedias;
        public TLRPC$InputMedia inputUploadMedia;
        public TLObject locationParent;
        public ArrayList<TLRPC$PhotoSize> locations;
        public ArrayList<MessageObject> messageObjects;
        public ArrayList<TLRPC$Message> messages;
        public MessageObject obj;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public long peer;
        public boolean performMediaUpload;
        public TLRPC$PhotoSize photoSize;
        ArrayList<DelayedMessageSendAfterRequest> requests;
        public boolean retriedToSend;
        public boolean scheduled;
        public TLObject sendEncryptedRequest;
        public TLObject sendRequest;
        public int topMessageId;
        public int type;
        public VideoEditedInfo videoEditedInfo;
        public ArrayList<VideoEditedInfo> videoEditedInfos;

        public DelayedMessage(long j) {
            SendMessagesHelper.this = r1;
            this.peer = j;
        }

        public void initForGroup(long j) {
            this.type = 4;
            this.groupId = j;
            this.messageObjects = new ArrayList<>();
            this.messages = new ArrayList<>();
            this.inputMedias = new ArrayList<>();
            this.originalPaths = new ArrayList<>();
            this.parentObjects = new ArrayList<>();
            this.extraHashMap = new HashMap<>();
            this.locations = new ArrayList<>();
            this.httpLocations = new ArrayList<>();
            this.videoEditedInfos = new ArrayList<>();
        }

        public void addDelayedRequest(TLObject tLObject, MessageObject messageObject, String str, Object obj, DelayedMessage delayedMessage, boolean z) {
            DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = new DelayedMessageSendAfterRequest();
            delayedMessageSendAfterRequest.request = tLObject;
            delayedMessageSendAfterRequest.msgObj = messageObject;
            delayedMessageSendAfterRequest.originalPath = str;
            delayedMessageSendAfterRequest.delayedMessage = delayedMessage;
            delayedMessageSendAfterRequest.parentObject = obj;
            delayedMessageSendAfterRequest.scheduled = z;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(delayedMessageSendAfterRequest);
        }

        public void addDelayedRequest(TLObject tLObject, ArrayList<MessageObject> arrayList, ArrayList<String> arrayList2, ArrayList<Object> arrayList3, DelayedMessage delayedMessage, boolean z) {
            DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = new DelayedMessageSendAfterRequest();
            delayedMessageSendAfterRequest.request = tLObject;
            delayedMessageSendAfterRequest.msgObjs = arrayList;
            delayedMessageSendAfterRequest.originalPaths = arrayList2;
            delayedMessageSendAfterRequest.delayedMessage = delayedMessage;
            delayedMessageSendAfterRequest.parentObjects = arrayList3;
            delayedMessageSendAfterRequest.scheduled = z;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(delayedMessageSendAfterRequest);
        }

        public void sendDelayedRequests() {
            ArrayList<DelayedMessageSendAfterRequest> arrayList = this.requests;
            if (arrayList != null) {
                int i = this.type;
                if (i != 4 && i != 0) {
                    return;
                }
                int size = arrayList.size();
                for (int i2 = 0; i2 < size; i2++) {
                    DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = this.requests.get(i2);
                    TLObject tLObject = delayedMessageSendAfterRequest.request;
                    if (tLObject instanceof TLRPC$TL_messages_sendEncryptedMultiMedia) {
                        SendMessagesHelper.this.getSecretChatHelper().performSendEncryptedRequest((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessageSendAfterRequest.request, this);
                    } else if (!(tLObject instanceof TLRPC$TL_messages_sendMultiMedia)) {
                        SendMessagesHelper.this.performSendMessageRequest(tLObject, delayedMessageSendAfterRequest.msgObj, delayedMessageSendAfterRequest.originalPath, delayedMessageSendAfterRequest.delayedMessage, delayedMessageSendAfterRequest.parentObject, null, delayedMessageSendAfterRequest.scheduled);
                    } else {
                        SendMessagesHelper.this.performSendMessageRequestMulti((TLRPC$TL_messages_sendMultiMedia) tLObject, delayedMessageSendAfterRequest.msgObjs, delayedMessageSendAfterRequest.originalPaths, delayedMessageSendAfterRequest.parentObjects, delayedMessageSendAfterRequest.delayedMessage, delayedMessageSendAfterRequest.scheduled);
                    }
                }
                this.requests = null;
            }
        }

        public void markAsError() {
            if (this.type == 4) {
                for (int i = 0; i < this.messageObjects.size(); i++) {
                    MessageObject messageObject = this.messageObjects.get(i);
                    SendMessagesHelper.this.getMessagesStorage().markMessageAsSendError(messageObject.messageOwner, messageObject.scheduled);
                    messageObject.messageOwner.send_state = 2;
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                    SendMessagesHelper.this.processSentMessage(messageObject.getId());
                    SendMessagesHelper.this.removeFromUploadingMessages(messageObject.getId(), this.scheduled);
                }
                HashMap hashMap = SendMessagesHelper.this.delayedMessages;
                hashMap.remove("group_" + this.groupId);
            } else {
                MessagesStorage messagesStorage = SendMessagesHelper.this.getMessagesStorage();
                MessageObject messageObject2 = this.obj;
                messagesStorage.markMessageAsSendError(messageObject2.messageOwner, messageObject2.scheduled);
                this.obj.messageOwner.send_state = 2;
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(this.obj.getId()));
                SendMessagesHelper.this.processSentMessage(this.obj.getId());
                SendMessagesHelper.this.removeFromUploadingMessages(this.obj.getId(), this.scheduled);
            }
            sendDelayedRequests();
        }
    }

    public static SendMessagesHelper getInstance(int i) {
        SendMessagesHelper sendMessagesHelper = Instance[i];
        if (sendMessagesHelper == null) {
            synchronized (SendMessagesHelper.class) {
                sendMessagesHelper = Instance[i];
                if (sendMessagesHelper == null) {
                    SendMessagesHelper[] sendMessagesHelperArr = Instance;
                    SendMessagesHelper sendMessagesHelper2 = new SendMessagesHelper(i);
                    sendMessagesHelperArr[i] = sendMessagesHelper2;
                    sendMessagesHelper = sendMessagesHelper2;
                }
            }
        }
        return sendMessagesHelper;
    }

    public SendMessagesHelper(int i) {
        super(i);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda22(this));
    }

    public /* synthetic */ void lambda$new$0() {
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadProgressChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingStarted);
        getNotificationCenter().addObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidFailedLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoadFailed);
    }

    public void cleanup() {
        this.delayedMessages.clear();
        this.unsentMessages.clear();
        this.sendingMessages.clear();
        this.editingMessages.clear();
        this.sendingMessagesIdDialogs.clear();
        this.uploadMessages.clear();
        this.uploadingMessagesIdDialogs.clear();
        this.waitingForLocation.clear();
        this.waitingForCallback.clear();
        this.waitingForVote.clear();
        this.importingHistoryFiles.clear();
        this.importingHistoryMap.clear();
        this.importingStickersFiles.clear();
        this.importingStickersMap.clear();
        this.locationProvider.stop();
    }

    @Override // org.telegram.messenger.NotificationCenter.NotificationCenterDelegate
    public void didReceivedNotification(int i, int i2, Object... objArr) {
        String str;
        ArrayList<DelayedMessage> arrayList;
        MessageObject messageObject;
        char c;
        MessageObject messageObject2;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$InputFile tLRPC$InputFile;
        String str2;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile;
        ArrayList<DelayedMessage> arrayList2;
        TLObject tLObject;
        TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile2;
        int i3;
        ArrayList<DelayedMessage> arrayList3;
        int i4;
        String str3;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$PhotoSize tLRPC$PhotoSize2;
        int i5 = 0;
        boolean z = true;
        if (i == NotificationCenter.fileUploadProgressChanged) {
            String str4 = (String) objArr[0];
            ImportingHistory importingHistory = this.importingHistoryFiles.get(str4);
            if (importingHistory != null) {
                Long l = (Long) objArr[1];
                importingHistory.addUploadProgress(str4, l.longValue(), ((float) l.longValue()) / ((float) ((Long) objArr[2]).longValue()));
            }
            ImportingStickers importingStickers = this.importingStickersFiles.get(str4);
            if (importingStickers == null) {
                return;
            }
            Long l2 = (Long) objArr[1];
            importingStickers.addUploadProgress(str4, l2.longValue(), ((float) l2.longValue()) / ((float) ((Long) objArr[2]).longValue()));
        } else if (i == NotificationCenter.fileUploaded) {
            String str5 = (String) objArr[0];
            TLRPC$InputFile tLRPC$InputFile2 = (TLRPC$InputFile) objArr[1];
            TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile3 = (TLRPC$InputEncryptedFile) objArr[2];
            ImportingHistory importingHistory2 = this.importingHistoryFiles.get(str5);
            if (importingHistory2 != null) {
                if (str5.equals(importingHistory2.historyPath)) {
                    importingHistory2.initImport(tLRPC$InputFile2);
                } else {
                    importingHistory2.onMediaImport(str5, ((Long) objArr[5]).longValue(), tLRPC$InputFile2);
                }
            }
            ImportingStickers importingStickers2 = this.importingStickersFiles.get(str5);
            if (importingStickers2 != null) {
                importingStickers2.onMediaImport(str5, ((Long) objArr[5]).longValue(), tLRPC$InputFile2);
            }
            ArrayList<DelayedMessage> arrayList4 = this.delayedMessages.get(str5);
            if (arrayList4 == null) {
                return;
            }
            while (i5 < arrayList4.size()) {
                DelayedMessage delayedMessage = arrayList4.get(i5);
                TLObject tLObject2 = delayedMessage.sendRequest;
                if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
                    tLRPC$InputMedia = ((TLRPC$TL_messages_sendMedia) tLObject2).media;
                } else if (tLObject2 instanceof TLRPC$TL_messages_editMessage) {
                    tLRPC$InputMedia = ((TLRPC$TL_messages_editMessage) tLObject2).media;
                } else {
                    tLRPC$InputMedia = tLObject2 instanceof TLRPC$TL_messages_sendMultiMedia ? (TLRPC$InputMedia) delayedMessage.extraHashMap.get(str5) : null;
                }
                if (tLRPC$InputFile2 == null || tLRPC$InputMedia == null) {
                    arrayList2 = arrayList4;
                    TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile4 = tLRPC$InputEncryptedFile3;
                    tLRPC$InputFile = tLRPC$InputFile2;
                    str2 = str5;
                    tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile4;
                    if (tLRPC$InputEncryptedFile != null && (tLObject = delayedMessage.sendEncryptedRequest) != null) {
                        if (delayedMessage.type == 4) {
                            TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) tLObject;
                            TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile5 = (TLRPC$InputEncryptedFile) delayedMessage.extraHashMap.get(str2);
                            int indexOf = tLRPC$TL_messages_sendEncryptedMultiMedia.files.indexOf(tLRPC$InputEncryptedFile5);
                            if (indexOf >= 0) {
                                tLRPC$TL_messages_sendEncryptedMultiMedia.files.set(indexOf, tLRPC$InputEncryptedFile);
                                if (tLRPC$InputEncryptedFile5.id == 1) {
                                    MessageObject messageObject3 = (MessageObject) delayedMessage.extraHashMap.get(str2 + "_i");
                                    delayedMessage.photoSize = (TLRPC$PhotoSize) delayedMessage.extraHashMap.get(str2 + "_t");
                                    stopVideoService(delayedMessage.messageObjects.get(indexOf).messageOwner.attachPath);
                                }
                                tLRPC$TL_decryptedMessage = tLRPC$TL_messages_sendEncryptedMultiMedia.messages.get(indexOf);
                            } else {
                                tLRPC$TL_decryptedMessage = null;
                            }
                        } else {
                            tLRPC$TL_decryptedMessage = (TLRPC$TL_decryptedMessage) tLObject;
                        }
                        if (tLRPC$TL_decryptedMessage != null) {
                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                            if ((tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaVideo) || (tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaPhoto) || (tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaDocument)) {
                                tLRPC$TL_decryptedMessage.media.size = ((Long) objArr[5]).longValue();
                            }
                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia2 = tLRPC$TL_decryptedMessage.media;
                            tLRPC$DecryptedMessageMedia2.key = (byte[]) objArr[3];
                            tLRPC$DecryptedMessageMedia2.iv = (byte[]) objArr[4];
                            if (delayedMessage.type == 4) {
                                uploadMultiMedia(delayedMessage, null, tLRPC$InputEncryptedFile, str2);
                            } else {
                                SecretChatHelper secretChatHelper = getSecretChatHelper();
                                MessageObject messageObject4 = delayedMessage.obj;
                                secretChatHelper.performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject4.messageOwner, delayedMessage.encryptedChat, tLRPC$InputEncryptedFile, delayedMessage.originalPath, messageObject4);
                            }
                        }
                        arrayList2.remove(i5);
                        i5--;
                    }
                } else {
                    int i6 = delayedMessage.type;
                    if (i6 == 0) {
                        tLRPC$InputMedia.file = tLRPC$InputFile2;
                        arrayList3 = arrayList4;
                        tLRPC$InputEncryptedFile2 = tLRPC$InputEncryptedFile3;
                        i4 = i5;
                        tLRPC$InputFile = tLRPC$InputFile2;
                        str3 = str5;
                        performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, delayedMessage, true, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                    } else {
                        arrayList3 = arrayList4;
                        tLRPC$InputEncryptedFile2 = tLRPC$InputEncryptedFile3;
                        i4 = i5;
                        tLRPC$InputFile = tLRPC$InputFile2;
                        str3 = str5;
                        if (i6 == z) {
                            if (tLRPC$InputMedia.file == null) {
                                tLRPC$InputMedia.file = tLRPC$InputFile;
                                if (tLRPC$InputMedia.thumb == null && (tLRPC$PhotoSize2 = delayedMessage.photoSize) != null && tLRPC$PhotoSize2.location != null) {
                                    performSendDelayedMessage(delayedMessage);
                                } else {
                                    performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                }
                            } else {
                                tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                tLRPC$InputMedia.flags |= 4;
                                performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                            }
                        } else if (i6 == 2) {
                            if (tLRPC$InputMedia.file == null) {
                                tLRPC$InputMedia.file = tLRPC$InputFile;
                                if (tLRPC$InputMedia.thumb == null && (tLRPC$PhotoSize = delayedMessage.photoSize) != null && tLRPC$PhotoSize.location != null) {
                                    performSendDelayedMessage(delayedMessage);
                                } else {
                                    performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                }
                            } else {
                                tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                tLRPC$InputMedia.flags |= 4;
                                performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                            }
                        } else if (i6 == 3) {
                            tLRPC$InputMedia.file = tLRPC$InputFile;
                            performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                        } else {
                            if (i6 != 4) {
                                str2 = str3;
                            } else if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument) {
                                if (tLRPC$InputMedia.file == null) {
                                    tLRPC$InputMedia.file = tLRPC$InputFile;
                                    HashMap<Object, Object> hashMap = delayedMessage.extraHashMap;
                                    StringBuilder sb = new StringBuilder();
                                    str2 = str3;
                                    sb.append(str2);
                                    sb.append("_i");
                                    int indexOf2 = delayedMessage.messageObjects.indexOf((MessageObject) hashMap.get(sb.toString()));
                                    if (indexOf2 >= 0) {
                                        stopVideoService(delayedMessage.messageObjects.get(indexOf2).messageOwner.attachPath);
                                    }
                                    TLRPC$PhotoSize tLRPC$PhotoSize3 = (TLRPC$PhotoSize) delayedMessage.extraHashMap.get(str2 + "_t");
                                    delayedMessage.photoSize = tLRPC$PhotoSize3;
                                    if (tLRPC$InputMedia.thumb == null && tLRPC$PhotoSize3 != null && tLRPC$PhotoSize3.location != null) {
                                        delayedMessage.performMediaUpload = z;
                                        performSendDelayedMessage(delayedMessage, indexOf2);
                                    } else {
                                        uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, str2);
                                    }
                                } else {
                                    str2 = str3;
                                    tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                    tLRPC$InputMedia.flags |= 4;
                                    uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, (String) delayedMessage.extraHashMap.get(str2 + "_o"));
                                }
                            } else {
                                str2 = str3;
                                tLRPC$InputMedia.file = tLRPC$InputFile;
                                uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, str2);
                            }
                            arrayList2 = arrayList3;
                            i3 = i4;
                            arrayList2.remove(i3);
                            i5 = i3 - 1;
                            tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                        }
                    }
                    arrayList2 = arrayList3;
                    i3 = i4;
                    str2 = str3;
                    arrayList2.remove(i3);
                    i5 = i3 - 1;
                    tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                }
                i5++;
                arrayList4 = arrayList2;
                str5 = str2;
                tLRPC$InputFile2 = tLRPC$InputFile;
                z = true;
                tLRPC$InputEncryptedFile3 = tLRPC$InputEncryptedFile;
            }
            String str6 = str5;
            if (!arrayList4.isEmpty()) {
                return;
            }
            this.delayedMessages.remove(str6);
        } else if (i == NotificationCenter.fileUploadFailed) {
            String str7 = (String) objArr[0];
            boolean booleanValue = ((Boolean) objArr[1]).booleanValue();
            ImportingHistory importingHistory3 = this.importingHistoryFiles.get(str7);
            if (importingHistory3 != null) {
                importingHistory3.onFileFailedToUpload(str7);
            }
            ImportingStickers importingStickers3 = this.importingStickersFiles.get(str7);
            if (importingStickers3 != null) {
                importingStickers3.onFileFailedToUpload(str7);
            }
            ArrayList<DelayedMessage> arrayList5 = this.delayedMessages.get(str7);
            if (arrayList5 == null) {
                return;
            }
            while (i5 < arrayList5.size()) {
                DelayedMessage delayedMessage2 = arrayList5.get(i5);
                if ((booleanValue && delayedMessage2.sendEncryptedRequest != null) || (!booleanValue && delayedMessage2.sendRequest != null)) {
                    delayedMessage2.markAsError();
                    arrayList5.remove(i5);
                    i5--;
                }
                i5++;
            }
            if (!arrayList5.isEmpty()) {
                return;
            }
            this.delayedMessages.remove(str7);
        } else if (i == NotificationCenter.filePreparingStarted) {
            MessageObject messageObject5 = (MessageObject) objArr[0];
            if (messageObject5.getId() == 0) {
                return;
            }
            String str8 = (String) objArr[1];
            ArrayList<DelayedMessage> arrayList6 = this.delayedMessages.get(messageObject5.messageOwner.attachPath);
            if (arrayList6 == null) {
                return;
            }
            while (true) {
                if (i5 >= arrayList6.size()) {
                    break;
                }
                DelayedMessage delayedMessage3 = arrayList6.get(i5);
                if (delayedMessage3.type == 4) {
                    int indexOf3 = delayedMessage3.messageObjects.indexOf(messageObject5);
                    delayedMessage3.photoSize = (TLRPC$PhotoSize) delayedMessage3.extraHashMap.get(messageObject5.messageOwner.attachPath + "_t");
                    delayedMessage3.performMediaUpload = true;
                    performSendDelayedMessage(delayedMessage3, indexOf3);
                    arrayList6.remove(i5);
                    break;
                } else if (delayedMessage3.obj == messageObject5) {
                    delayedMessage3.videoEditedInfo = null;
                    performSendDelayedMessage(delayedMessage3);
                    arrayList6.remove(i5);
                    break;
                } else {
                    i5++;
                }
            }
            if (!arrayList6.isEmpty()) {
                return;
            }
            this.delayedMessages.remove(messageObject5.messageOwner.attachPath);
        } else {
            MessageObject messageObject6 = null;
            if (i == NotificationCenter.fileNewChunkAvailable) {
                MessageObject messageObject7 = (MessageObject) objArr[0];
                if (messageObject7.getId() == 0) {
                    return;
                }
                long longValue = ((Long) objArr[2]).longValue();
                long longValue2 = ((Long) objArr[3]).longValue();
                getFileLoader().checkUploadNewDataAvailable((String) objArr[1], DialogObject.isEncryptedDialog(messageObject7.getDialogId()), longValue, longValue2);
                if (longValue2 == 0) {
                    return;
                }
                stopVideoService(messageObject7.messageOwner.attachPath);
                ArrayList<DelayedMessage> arrayList7 = this.delayedMessages.get(messageObject7.messageOwner.attachPath);
                if (arrayList7 == null) {
                    return;
                }
                for (int i7 = 0; i7 < arrayList7.size(); i7++) {
                    DelayedMessage delayedMessage4 = arrayList7.get(i7);
                    if (delayedMessage4.type == 4) {
                        int i8 = 0;
                        while (true) {
                            if (i8 >= delayedMessage4.messageObjects.size()) {
                                break;
                            }
                            MessageObject messageObject8 = delayedMessage4.messageObjects.get(i8);
                            if (messageObject8 == messageObject7) {
                                delayedMessage4.obj.shouldRemoveVideoEditedInfo = true;
                                messageObject8.messageOwner.params.remove("ve");
                                messageObject8.messageOwner.media.document.size = longValue2;
                                ArrayList<TLRPC$Message> arrayList8 = new ArrayList<>();
                                arrayList8.add(messageObject8.messageOwner);
                                getMessagesStorage().putMessages(arrayList8, false, true, false, 0, messageObject8.scheduled);
                                break;
                            }
                            i8++;
                        }
                    } else {
                        MessageObject messageObject9 = delayedMessage4.obj;
                        if (messageObject9 == messageObject7) {
                            messageObject9.shouldRemoveVideoEditedInfo = true;
                            messageObject9.messageOwner.params.remove("ve");
                            delayedMessage4.obj.messageOwner.media.document.size = longValue2;
                            ArrayList<TLRPC$Message> arrayList9 = new ArrayList<>();
                            arrayList9.add(delayedMessage4.obj.messageOwner);
                            getMessagesStorage().putMessages(arrayList9, false, true, false, 0, delayedMessage4.obj.scheduled);
                            return;
                        }
                    }
                }
            } else if (i == NotificationCenter.filePreparingFailed) {
                MessageObject messageObject10 = (MessageObject) objArr[0];
                if (messageObject10.getId() == 0) {
                    return;
                }
                String str9 = (String) objArr[1];
                stopVideoService(messageObject10.messageOwner.attachPath);
                ArrayList<DelayedMessage> arrayList10 = this.delayedMessages.get(str9);
                if (arrayList10 == null) {
                    return;
                }
                int i9 = 0;
                while (i9 < arrayList10.size()) {
                    DelayedMessage delayedMessage5 = arrayList10.get(i9);
                    if (delayedMessage5.type == 4) {
                        for (int i10 = 0; i10 < delayedMessage5.messages.size(); i10++) {
                            if (delayedMessage5.messageObjects.get(i10) == messageObject10) {
                                delayedMessage5.markAsError();
                                arrayList10.remove(i9);
                                i9--;
                                break;
                            }
                        }
                        i9++;
                    } else if (delayedMessage5.obj == messageObject10) {
                        delayedMessage5.markAsError();
                        arrayList10.remove(i9);
                        i9--;
                        break;
                        i9++;
                    } else {
                        i9++;
                    }
                }
                if (!arrayList10.isEmpty()) {
                    return;
                }
                this.delayedMessages.remove(str9);
            } else if (i == NotificationCenter.httpFileDidLoad) {
                String str10 = (String) objArr[0];
                ArrayList<DelayedMessage> arrayList11 = this.delayedMessages.get(str10);
                if (arrayList11 == null) {
                    return;
                }
                int i11 = 0;
                while (i11 < arrayList11.size()) {
                    DelayedMessage delayedMessage6 = arrayList11.get(i11);
                    int i12 = delayedMessage6.type;
                    if (i12 == 0) {
                        messageObject = delayedMessage6.obj;
                        c = 0;
                    } else {
                        if (i12 == 2) {
                            messageObject2 = delayedMessage6.obj;
                        } else if (i12 == 4) {
                            messageObject2 = (MessageObject) delayedMessage6.extraHashMap.get(str10);
                            if (messageObject2.getDocument() == null) {
                                messageObject = messageObject2;
                                c = 0;
                            }
                        } else {
                            c = 65535;
                            messageObject = messageObject6;
                        }
                        messageObject = messageObject2;
                        c = 1;
                    }
                    if (c == 0) {
                        Utilities.globalQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda25(this, new File(FileLoader.getDirectory(4), Utilities.MD5(str10) + "." + ImageLoader.getHttpUrlExtension(str10, "file")), messageObject, delayedMessage6, str10));
                    } else if (c == 1) {
                        Utilities.globalQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda39(this, delayedMessage6, new File(FileLoader.getDirectory(4), Utilities.MD5(str10) + ".gif"), messageObject));
                        i11++;
                        messageObject6 = null;
                    }
                    i11++;
                    messageObject6 = null;
                }
                this.delayedMessages.remove(str10);
            } else if (i == NotificationCenter.fileLoaded) {
                String str11 = (String) objArr[0];
                ArrayList<DelayedMessage> arrayList12 = this.delayedMessages.get(str11);
                if (arrayList12 == null) {
                    return;
                }
                while (i5 < arrayList12.size()) {
                    performSendDelayedMessage(arrayList12.get(i5));
                    i5++;
                }
                this.delayedMessages.remove(str11);
            } else if ((i == NotificationCenter.httpFileDidFailedLoad || i == NotificationCenter.fileLoadFailed) && (arrayList = this.delayedMessages.get((str = (String) objArr[0]))) != null) {
                while (i5 < arrayList.size()) {
                    arrayList.get(i5).markAsError();
                    i5++;
                }
                this.delayedMessages.remove(str);
            }
        }
    }

    public /* synthetic */ void lambda$didReceivedNotification$2(File file, MessageObject messageObject, DelayedMessage delayedMessage, String str) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda62(this, generatePhotoSizes(file.toString(), null), messageObject, file, delayedMessage, str));
    }

    public /* synthetic */ void lambda$didReceivedNotification$1(TLRPC$TL_photo tLRPC$TL_photo, MessageObject messageObject, File file, DelayedMessage delayedMessage, String str) {
        if (tLRPC$TL_photo != null) {
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            tLRPC$Message.media.photo = tLRPC$TL_photo;
            tLRPC$Message.attachPath = file.toString();
            ArrayList<TLRPC$Message> arrayList = new ArrayList<>();
            arrayList.add(messageObject.messageOwner);
            getMessagesStorage().putMessages(arrayList, false, true, false, 0, messageObject.scheduled);
            getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, messageObject.messageOwner);
            ArrayList<TLRPC$PhotoSize> arrayList2 = tLRPC$TL_photo.sizes;
            delayedMessage.photoSize = arrayList2.get(arrayList2.size() - 1);
            delayedMessage.locationParent = tLRPC$TL_photo;
            delayedMessage.httpLocation = null;
            if (delayedMessage.type == 4) {
                delayedMessage.performMediaUpload = true;
                performSendDelayedMessage(delayedMessage, delayedMessage.messageObjects.indexOf(messageObject));
                return;
            }
            performSendDelayedMessage(delayedMessage);
            return;
        }
        if (BuildVars.LOGS_ENABLED) {
            FileLog.e("can't load image " + str + " to file " + file.toString());
        }
        delayedMessage.markAsError();
    }

    public /* synthetic */ void lambda$didReceivedNotification$4(DelayedMessage delayedMessage, File file, MessageObject messageObject) {
        TLRPC$Document document = delayedMessage.obj.getDocument();
        boolean z = false;
        if (document.thumbs.isEmpty() || (document.thumbs.get(0).location instanceof TLRPC$TL_fileLocationUnavailable)) {
            try {
                Bitmap loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                if (loadBitmap != null) {
                    document.thumbs.clear();
                    ArrayList<TLRPC$PhotoSize> arrayList = document.thumbs;
                    if (delayedMessage.sendEncryptedRequest != null) {
                        z = true;
                    }
                    arrayList.add(ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z));
                    loadBitmap.recycle();
                }
            } catch (Exception e) {
                document.thumbs.clear();
                FileLog.e(e);
            }
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda40(this, delayedMessage, file, document, messageObject));
    }

    public /* synthetic */ void lambda$didReceivedNotification$3(DelayedMessage delayedMessage, File file, TLRPC$Document tLRPC$Document, MessageObject messageObject) {
        delayedMessage.httpLocation = null;
        delayedMessage.obj.messageOwner.attachPath = file.toString();
        if (!tLRPC$Document.thumbs.isEmpty()) {
            TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$Document.thumbs.get(0);
            if (!(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                delayedMessage.photoSize = tLRPC$PhotoSize;
                delayedMessage.locationParent = tLRPC$Document;
            }
        }
        ArrayList<TLRPC$Message> arrayList = new ArrayList<>();
        arrayList.add(messageObject.messageOwner);
        getMessagesStorage().putMessages(arrayList, false, true, false, 0, messageObject.scheduled);
        delayedMessage.performMediaUpload = true;
        performSendDelayedMessage(delayedMessage);
        getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, delayedMessage.obj.messageOwner);
    }

    private void revertEditingMessageObject(MessageObject messageObject) {
        messageObject.cancelEditing = true;
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        tLRPC$Message.media = messageObject.previousMedia;
        tLRPC$Message.message = messageObject.previousMessage;
        ArrayList<TLRPC$MessageEntity> arrayList = messageObject.previousMessageEntities;
        tLRPC$Message.entities = arrayList;
        tLRPC$Message.attachPath = messageObject.previousAttachPath;
        tLRPC$Message.send_state = 0;
        if (arrayList != null) {
            tLRPC$Message.flags |= 128;
        } else {
            tLRPC$Message.flags &= -129;
        }
        messageObject.previousMedia = null;
        messageObject.previousMessage = null;
        messageObject.previousMessageEntities = null;
        messageObject.previousAttachPath = null;
        messageObject.videoEditedInfo = null;
        messageObject.type = -1;
        messageObject.setType();
        messageObject.caption = null;
        if (messageObject.type != 0) {
            messageObject.generateCaption();
        } else {
            messageObject.resetLayout();
            messageObject.checkLayout();
        }
        ArrayList<TLRPC$Message> arrayList2 = new ArrayList<>();
        arrayList2.add(messageObject.messageOwner);
        getMessagesStorage().putMessages(arrayList2, false, true, false, 0, messageObject.scheduled);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(messageObject);
        getNotificationCenter().postNotificationName(NotificationCenter.replaceMessagesObjects, Long.valueOf(messageObject.getDialogId()), arrayList3);
    }

    public void cancelSendingMessage(MessageObject messageObject) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(messageObject);
        cancelSendingMessage(arrayList);
    }

    /* JADX WARN: Code restructure failed: missing block: B:56:0x019d, code lost:
        r23 = r9;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void cancelSendingMessage(ArrayList<MessageObject> arrayList) {
        boolean z;
        long j;
        ArrayList arrayList2 = new ArrayList();
        ArrayList arrayList3 = new ArrayList();
        ArrayList<Integer> arrayList4 = new ArrayList<>();
        long j2 = 0;
        int i = 0;
        boolean z2 = false;
        boolean z3 = false;
        while (i < arrayList.size()) {
            MessageObject messageObject = arrayList.get(i);
            if (messageObject.scheduled) {
                z3 = true;
            }
            long dialogId = messageObject.getDialogId();
            arrayList4.add(Integer.valueOf(messageObject.getId()));
            TLRPC$Message removeFromSendingMessages = removeFromSendingMessages(messageObject.getId(), messageObject.scheduled);
            if (removeFromSendingMessages != null) {
                getConnectionsManager().cancelRequest(removeFromSendingMessages.reqId, true);
            }
            for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
                ArrayList<DelayedMessage> value = entry.getValue();
                int i2 = 0;
                while (true) {
                    if (i2 >= value.size()) {
                        z = z2;
                        break;
                    }
                    DelayedMessage delayedMessage = value.get(i2);
                    z = z2;
                    if (delayedMessage.type == 4) {
                        int i3 = -1;
                        MessageObject messageObject2 = null;
                        int i4 = 0;
                        while (true) {
                            if (i4 >= delayedMessage.messageObjects.size()) {
                                break;
                            }
                            messageObject2 = delayedMessage.messageObjects.get(i4);
                            if (messageObject2.getId() == messageObject.getId()) {
                                removeFromUploadingMessages(messageObject.getId(), messageObject.scheduled);
                                i3 = i4;
                                break;
                            }
                            i4++;
                        }
                        if (i3 >= 0) {
                            delayedMessage.messageObjects.remove(i3);
                            delayedMessage.messages.remove(i3);
                            delayedMessage.originalPaths.remove(i3);
                            if (!delayedMessage.parentObjects.isEmpty()) {
                                delayedMessage.parentObjects.remove(i3);
                            }
                            TLObject tLObject = delayedMessage.sendRequest;
                            if (tLObject != null) {
                                ((TLRPC$TL_messages_sendMultiMedia) tLObject).multi_media.remove(i3);
                            } else {
                                TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                                tLRPC$TL_messages_sendEncryptedMultiMedia.messages.remove(i3);
                                tLRPC$TL_messages_sendEncryptedMultiMedia.files.remove(i3);
                            }
                            MediaController.getInstance().cancelVideoConvert(messageObject);
                            String str = (String) delayedMessage.extraHashMap.get(messageObject2);
                            if (str != null) {
                                arrayList2.add(str);
                            }
                            if (delayedMessage.messageObjects.isEmpty()) {
                                delayedMessage.sendDelayedRequests();
                            } else {
                                if (delayedMessage.finalGroupMessage == messageObject.getId()) {
                                    ArrayList<MessageObject> arrayList5 = delayedMessage.messageObjects;
                                    MessageObject messageObject3 = arrayList5.get(arrayList5.size() - 1);
                                    delayedMessage.finalGroupMessage = messageObject3.getId();
                                    messageObject3.messageOwner.params.put("final", "1");
                                    TLRPC$TL_messages_messages tLRPC$TL_messages_messages = new TLRPC$TL_messages_messages();
                                    tLRPC$TL_messages_messages.messages.add(messageObject3.messageOwner);
                                    j = dialogId;
                                    getMessagesStorage().putMessages((TLRPC$messages_Messages) tLRPC$TL_messages_messages, delayedMessage.peer, -2, 0, false, z3);
                                } else {
                                    j = dialogId;
                                }
                                if (!arrayList3.contains(delayedMessage)) {
                                    arrayList3.add(delayedMessage);
                                }
                            }
                        }
                    } else {
                        j = dialogId;
                        if (delayedMessage.obj.getId() == messageObject.getId()) {
                            removeFromUploadingMessages(messageObject.getId(), messageObject.scheduled);
                            value.remove(i2);
                            delayedMessage.sendDelayedRequests();
                            MediaController.getInstance().cancelVideoConvert(delayedMessage.obj);
                            if (value.size() == 0) {
                                arrayList2.add(entry.getKey());
                                if (delayedMessage.sendEncryptedRequest != null) {
                                    z2 = true;
                                }
                            }
                        } else {
                            i2++;
                            z2 = z;
                            dialogId = j;
                        }
                    }
                }
                z2 = z;
                dialogId = j;
            }
            i++;
            j2 = dialogId;
        }
        for (int i5 = 0; i5 < arrayList2.size(); i5++) {
            String str2 = (String) arrayList2.get(i5);
            if (str2.startsWith("http")) {
                ImageLoader.getInstance().cancelLoadHttpFile(str2);
            } else {
                getFileLoader().cancelFileUpload(str2, z2);
            }
            stopVideoService(str2);
            this.delayedMessages.remove(str2);
        }
        int size = arrayList3.size();
        for (int i6 = 0; i6 < size; i6++) {
            sendReadyToSendGroup((DelayedMessage) arrayList3.get(i6), false, true);
        }
        if (arrayList.size() == 1 && arrayList.get(0).isEditing() && arrayList.get(0).previousMedia != null) {
            revertEditingMessageObject(arrayList.get(0));
        } else {
            getMessagesController().deleteMessages(arrayList4, null, null, j2, false, z3);
        }
    }

    public boolean retrySendMessage(MessageObject messageObject, boolean z) {
        if (messageObject.getId() >= 0) {
            if (messageObject.isEditing()) {
                editMessage(messageObject, null, null, null, null, null, true, messageObject);
            }
            return false;
        }
        TLRPC$MessageAction tLRPC$MessageAction = messageObject.messageOwner.action;
        if (tLRPC$MessageAction instanceof TLRPC$TL_messageEncryptedAction) {
            TLRPC$EncryptedChat encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(messageObject.getDialogId())));
            if (encryptedChat == null) {
                getMessagesStorage().markMessageAsSendError(messageObject.messageOwner, messageObject.scheduled);
                messageObject.messageOwner.send_state = 2;
                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                processSentMessage(messageObject.getId());
                return false;
            }
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            if (tLRPC$Message.random_id == 0) {
                tLRPC$Message.random_id = getNextRandomId();
            }
            TLRPC$DecryptedMessageAction tLRPC$DecryptedMessageAction = messageObject.messageOwner.action.encryptedAction;
            if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionSetMessageTTL) {
                getSecretChatHelper().sendTTLMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionDeleteMessages) {
                getSecretChatHelper().sendMessagesDeleteMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionFlushHistory) {
                getSecretChatHelper().sendClearHistoryMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionNotifyLayer) {
                getSecretChatHelper().sendNotifyLayerMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionReadMessages) {
                getSecretChatHelper().sendMessagesReadMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionScreenshotMessages) {
                getSecretChatHelper().sendScreenshotMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (!(tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionTyping)) {
                if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionResend) {
                    getSecretChatHelper().sendResendMessage(encryptedChat, 0, 0, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionCommitKey) {
                    getSecretChatHelper().sendCommitKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionAbortKey) {
                    getSecretChatHelper().sendAbortKeyMessage(encryptedChat, messageObject.messageOwner, 0L);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionRequestKey) {
                    getSecretChatHelper().sendRequestKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionAcceptKey) {
                    getSecretChatHelper().sendAcceptKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionNoop) {
                    getSecretChatHelper().sendNoopMessage(encryptedChat, messageObject.messageOwner);
                }
            }
            return true;
        }
        if (tLRPC$MessageAction instanceof TLRPC$TL_messageActionScreenshotTaken) {
            sendScreenshotMessage(getMessagesController().getUser(Long.valueOf(messageObject.getDialogId())), messageObject.getReplyMsgId(), messageObject.messageOwner);
        }
        if (z) {
            this.unsentMessages.put(messageObject.getId(), messageObject);
        }
        sendMessage(messageObject);
        return true;
    }

    public void processSentMessage(int i) {
        int size = this.unsentMessages.size();
        this.unsentMessages.remove(i);
        if (size == 0 || this.unsentMessages.size() != 0) {
            return;
        }
        checkUnsentMessages();
    }

    /* JADX WARN: Removed duplicated region for block: B:27:0x0070  */
    /* JADX WARN: Removed duplicated region for block: B:28:0x008e  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void processForwardFromMyName(MessageObject messageObject, long j) {
        HashMap<String, String> hashMap;
        TLRPC$Photo tLRPC$Photo;
        if (messageObject == null) {
            return;
        }
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
        ArrayList<TLRPC$MessageEntity> arrayList = null;
        if (tLRPC$MessageMedia != null && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaEmpty) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGame) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaInvoice)) {
            if (DialogObject.isEncryptedDialog(j)) {
                TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
                if (tLRPC$Message2.peer_id != null) {
                    TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$Message2.media;
                    if ((tLRPC$MessageMedia2.photo instanceof TLRPC$TL_photo) || (tLRPC$MessageMedia2.document instanceof TLRPC$TL_document)) {
                        HashMap<String, String> hashMap2 = new HashMap<>();
                        hashMap2.put("parentObject", "sent_" + messageObject.messageOwner.peer_id.channel_id + "_" + messageObject.getId());
                        hashMap = hashMap2;
                        TLRPC$Message tLRPC$Message3 = messageObject.messageOwner;
                        TLRPC$MessageMedia tLRPC$MessageMedia3 = tLRPC$Message3.media;
                        tLRPC$Photo = tLRPC$MessageMedia3.photo;
                        if (!(tLRPC$Photo instanceof TLRPC$TL_photo)) {
                            sendMessage((TLRPC$TL_photo) tLRPC$Photo, null, j, messageObject.replyMessageObject, null, tLRPC$Message3.message, tLRPC$Message3.entities, null, hashMap, true, 0, tLRPC$MessageMedia3.ttl_seconds, messageObject);
                            return;
                        }
                        TLRPC$Document tLRPC$Document = tLRPC$MessageMedia3.document;
                        if (tLRPC$Document instanceof TLRPC$TL_document) {
                            sendMessage((TLRPC$TL_document) tLRPC$Document, null, tLRPC$Message3.attachPath, j, messageObject.replyMessageObject, null, tLRPC$Message3.message, tLRPC$Message3.entities, null, hashMap, true, 0, tLRPC$MessageMedia3.ttl_seconds, messageObject, null);
                            return;
                        } else if ((tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaVenue) || (tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaGeo)) {
                            sendMessage(tLRPC$MessageMedia3, j, messageObject.replyMessageObject, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                            return;
                        } else if (tLRPC$MessageMedia3.phone_number != null) {
                            TLRPC$TL_userContact_old2 tLRPC$TL_userContact_old2 = new TLRPC$TL_userContact_old2();
                            TLRPC$MessageMedia tLRPC$MessageMedia4 = messageObject.messageOwner.media;
                            tLRPC$TL_userContact_old2.phone = tLRPC$MessageMedia4.phone_number;
                            tLRPC$TL_userContact_old2.first_name = tLRPC$MessageMedia4.first_name;
                            tLRPC$TL_userContact_old2.last_name = tLRPC$MessageMedia4.last_name;
                            tLRPC$TL_userContact_old2.id = tLRPC$MessageMedia4.user_id;
                            sendMessage((TLRPC$User) tLRPC$TL_userContact_old2, j, messageObject.replyMessageObject, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                            return;
                        } else if (DialogObject.isEncryptedDialog(j)) {
                            return;
                        } else {
                            ArrayList<MessageObject> arrayList2 = new ArrayList<>();
                            arrayList2.add(messageObject);
                            sendMessage(arrayList2, j, true, false, true, 0);
                            return;
                        }
                    }
                }
            }
            hashMap = null;
            TLRPC$Message tLRPC$Message32 = messageObject.messageOwner;
            TLRPC$MessageMedia tLRPC$MessageMedia32 = tLRPC$Message32.media;
            tLRPC$Photo = tLRPC$MessageMedia32.photo;
            if (!(tLRPC$Photo instanceof TLRPC$TL_photo)) {
            }
        } else if (tLRPC$Message.message != null) {
            TLRPC$WebPage tLRPC$WebPage = tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage ? tLRPC$MessageMedia.webpage : null;
            ArrayList<TLRPC$MessageEntity> arrayList3 = tLRPC$Message.entities;
            if (arrayList3 != null && !arrayList3.isEmpty()) {
                arrayList = new ArrayList<>();
                for (int i = 0; i < messageObject.messageOwner.entities.size(); i++) {
                    TLRPC$MessageEntity tLRPC$MessageEntity = messageObject.messageOwner.entities.get(i);
                    if ((tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityBold) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityItalic) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityPre) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityCode) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityTextUrl) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntitySpoiler) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityCustomEmoji)) {
                        arrayList.add(tLRPC$MessageEntity);
                    }
                }
            }
            sendMessage(messageObject.messageOwner.message, j, messageObject.replyMessageObject, null, tLRPC$WebPage, true, arrayList, null, null, true, 0, null);
        } else if (DialogObject.isEncryptedDialog(j)) {
            ArrayList<MessageObject> arrayList4 = new ArrayList<>();
            arrayList4.add(messageObject);
            sendMessage(arrayList4, j, true, false, true, 0);
        }
    }

    public void sendScreenshotMessage(TLRPC$User tLRPC$User, int i, TLRPC$Message tLRPC$Message) {
        TLRPC$Message tLRPC$Message2 = tLRPC$Message;
        if (tLRPC$User == null || i == 0 || tLRPC$User.id == getUserConfig().getClientUserId()) {
            return;
        }
        TLRPC$TL_messages_sendScreenshotNotification tLRPC$TL_messages_sendScreenshotNotification = new TLRPC$TL_messages_sendScreenshotNotification();
        TLRPC$TL_inputPeerUser tLRPC$TL_inputPeerUser = new TLRPC$TL_inputPeerUser();
        tLRPC$TL_messages_sendScreenshotNotification.peer = tLRPC$TL_inputPeerUser;
        tLRPC$TL_inputPeerUser.access_hash = tLRPC$User.access_hash;
        tLRPC$TL_inputPeerUser.user_id = tLRPC$User.id;
        if (tLRPC$Message2 != null) {
            tLRPC$TL_messages_sendScreenshotNotification.reply_to_msg_id = i;
            tLRPC$TL_messages_sendScreenshotNotification.random_id = tLRPC$Message2.random_id;
        } else {
            tLRPC$Message2 = new TLRPC$TL_messageService();
            tLRPC$Message2.random_id = getNextRandomId();
            tLRPC$Message2.dialog_id = tLRPC$User.id;
            tLRPC$Message2.unread = true;
            tLRPC$Message2.out = true;
            int newMessageId = getUserConfig().getNewMessageId();
            tLRPC$Message2.id = newMessageId;
            tLRPC$Message2.local_id = newMessageId;
            TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
            tLRPC$Message2.from_id = tLRPC$TL_peerUser;
            tLRPC$TL_peerUser.user_id = getUserConfig().getClientUserId();
            int i2 = tLRPC$Message2.flags | 256;
            tLRPC$Message2.flags = i2;
            tLRPC$Message2.flags = i2 | 8;
            TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
            tLRPC$Message2.reply_to = tLRPC$TL_messageReplyHeader;
            tLRPC$TL_messageReplyHeader.reply_to_msg_id = i;
            TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
            tLRPC$Message2.peer_id = tLRPC$TL_peerUser2;
            tLRPC$TL_peerUser2.user_id = tLRPC$User.id;
            tLRPC$Message2.date = getConnectionsManager().getCurrentTime();
            tLRPC$Message2.action = new TLRPC$TL_messageActionScreenshotTaken();
            getUserConfig().saveConfig(false);
        }
        tLRPC$TL_messages_sendScreenshotNotification.random_id = tLRPC$Message2.random_id;
        MessageObject messageObject = new MessageObject(this.currentAccount, tLRPC$Message2, false, true);
        messageObject.messageOwner.send_state = 1;
        messageObject.wasJustSent = true;
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(messageObject);
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message2.dialog_id, arrayList, false);
        getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
        ArrayList<TLRPC$Message> arrayList2 = new ArrayList<>();
        arrayList2.add(tLRPC$Message2);
        getMessagesStorage().putMessages(arrayList2, false, true, false, 0, false);
        performSendMessageRequest(tLRPC$TL_messages_sendScreenshotNotification, messageObject, null, null, null, null, false);
    }

    public void sendSticker(TLRPC$Document tLRPC$Document, String str, long j, MessageObject messageObject, MessageObject messageObject2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z, int i) {
        TLRPC$TL_document_layer82 tLRPC$TL_document_layer82;
        HashMap<String, String> hashMap;
        if (tLRPC$Document == null) {
            return;
        }
        if (DialogObject.isEncryptedDialog(j)) {
            if (getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                return;
            }
            TLRPC$TL_document_layer82 tLRPC$TL_document_layer822 = new TLRPC$TL_document_layer82();
            tLRPC$TL_document_layer822.id = tLRPC$Document.id;
            tLRPC$TL_document_layer822.access_hash = tLRPC$Document.access_hash;
            tLRPC$TL_document_layer822.date = tLRPC$Document.date;
            tLRPC$TL_document_layer822.mime_type = tLRPC$Document.mime_type;
            byte[] bArr = tLRPC$Document.file_reference;
            tLRPC$TL_document_layer822.file_reference = bArr;
            if (bArr == null) {
                tLRPC$TL_document_layer822.file_reference = new byte[0];
            }
            tLRPC$TL_document_layer822.size = tLRPC$Document.size;
            tLRPC$TL_document_layer822.dc_id = tLRPC$Document.dc_id;
            tLRPC$TL_document_layer822.attributes = new ArrayList<>(tLRPC$Document.attributes);
            if (tLRPC$TL_document_layer822.mime_type == null) {
                tLRPC$TL_document_layer822.mime_type = "";
            }
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 90);
            if ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoSize) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoSizeProgressive)) {
                File pathToAttach = FileLoader.getInstance(this.currentAccount).getPathToAttach(closestPhotoSizeWithSize, true);
                if (pathToAttach.exists()) {
                    try {
                        pathToAttach.length();
                        byte[] bArr2 = new byte[(int) pathToAttach.length()];
                        new RandomAccessFile(pathToAttach, "r").readFully(bArr2);
                        TLRPC$TL_photoCachedSize tLRPC$TL_photoCachedSize = new TLRPC$TL_photoCachedSize();
                        TLRPC$TL_fileLocation_layer82 tLRPC$TL_fileLocation_layer82 = new TLRPC$TL_fileLocation_layer82();
                        TLRPC$FileLocation tLRPC$FileLocation = closestPhotoSizeWithSize.location;
                        tLRPC$TL_fileLocation_layer82.dc_id = tLRPC$FileLocation.dc_id;
                        tLRPC$TL_fileLocation_layer82.volume_id = tLRPC$FileLocation.volume_id;
                        tLRPC$TL_fileLocation_layer82.local_id = tLRPC$FileLocation.local_id;
                        tLRPC$TL_fileLocation_layer82.secret = tLRPC$FileLocation.secret;
                        tLRPC$TL_photoCachedSize.location = tLRPC$TL_fileLocation_layer82;
                        tLRPC$TL_photoCachedSize.size = closestPhotoSizeWithSize.size;
                        tLRPC$TL_photoCachedSize.w = closestPhotoSizeWithSize.w;
                        tLRPC$TL_photoCachedSize.h = closestPhotoSizeWithSize.h;
                        tLRPC$TL_photoCachedSize.type = closestPhotoSizeWithSize.type;
                        tLRPC$TL_photoCachedSize.bytes = bArr2;
                        tLRPC$TL_document_layer822.thumbs.add(tLRPC$TL_photoCachedSize);
                        tLRPC$TL_document_layer822.flags |= 1;
                    } catch (Exception e) {
                        FileLog.e(e);
                    }
                }
            }
            if (tLRPC$TL_document_layer822.thumbs.isEmpty()) {
                TLRPC$TL_photoSizeEmpty tLRPC$TL_photoSizeEmpty = new TLRPC$TL_photoSizeEmpty();
                tLRPC$TL_photoSizeEmpty.type = "s";
                tLRPC$TL_document_layer822.thumbs.add(tLRPC$TL_photoSizeEmpty);
            }
            tLRPC$TL_document_layer82 = tLRPC$TL_document_layer822;
        } else {
            tLRPC$TL_document_layer82 = tLRPC$Document;
        }
        if (MessageObject.isGifDocument(tLRPC$TL_document_layer82)) {
            mediaSendQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda44(this, tLRPC$TL_document_layer82, j, messageObject, messageObject2, z, i, obj, sendAnimationData));
            return;
        }
        if (!TextUtils.isEmpty(str)) {
            hashMap = new HashMap<>();
            hashMap.put("query", str);
        } else {
            hashMap = null;
        }
        sendMessage((TLRPC$TL_document) tLRPC$TL_document_layer82, null, null, j, messageObject, messageObject2, null, null, null, hashMap, z, i, 0, obj, sendAnimationData);
    }

    public /* synthetic */ void lambda$sendSticker$6(TLRPC$Document tLRPC$Document, long j, MessageObject messageObject, MessageObject messageObject2, boolean z, int i, Object obj, MessageObject.SendAnimationData sendAnimationData) {
        String str;
        Bitmap[] bitmapArr = new Bitmap[1];
        String[] strArr = new String[1];
        String key = ImageLocation.getForDocument(tLRPC$Document).getKey(null, null, false);
        if ("video/mp4".equals(tLRPC$Document.mime_type)) {
            str = ".mp4";
        } else {
            str = "video/x-matroska".equals(tLRPC$Document.mime_type) ? ".mkv" : "";
        }
        File directory = FileLoader.getDirectory(3);
        File file = new File(directory, key + str);
        if (!file.exists()) {
            File directory2 = FileLoader.getDirectory(2);
            file = new File(directory2, key + str);
        }
        ensureMediaThumbExists(getAccountInstance(), false, tLRPC$Document, file.getAbsolutePath(), null, 0L);
        strArr[0] = getKeyForPhotoSize(getAccountInstance(), FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 320), bitmapArr, true, true);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda72(this, bitmapArr, strArr, tLRPC$Document, j, messageObject, messageObject2, z, i, obj, sendAnimationData));
    }

    public /* synthetic */ void lambda$sendSticker$5(Bitmap[] bitmapArr, String[] strArr, TLRPC$Document tLRPC$Document, long j, MessageObject messageObject, MessageObject messageObject2, boolean z, int i, Object obj, MessageObject.SendAnimationData sendAnimationData) {
        if (bitmapArr[0] != null && strArr[0] != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
        }
        sendMessage((TLRPC$TL_document) tLRPC$Document, null, null, j, messageObject, messageObject2, null, null, null, null, z, i, 0, obj, sendAnimationData);
    }

    /* JADX WARN: Removed duplicated region for block: B:108:0x0249  */
    /* JADX WARN: Removed duplicated region for block: B:129:0x02d3  */
    /* JADX WARN: Removed duplicated region for block: B:157:0x0390  */
    /* JADX WARN: Removed duplicated region for block: B:161:0x03ae  */
    /* JADX WARN: Removed duplicated region for block: B:225:0x054a  */
    /* JADX WARN: Removed duplicated region for block: B:228:0x0554  */
    /* JADX WARN: Removed duplicated region for block: B:231:0x056d  */
    /* JADX WARN: Removed duplicated region for block: B:244:0x05c7  */
    /* JADX WARN: Removed duplicated region for block: B:245:0x05d9  */
    /* JADX WARN: Removed duplicated region for block: B:250:0x05f6  */
    /* JADX WARN: Removed duplicated region for block: B:253:0x061d  */
    /* JADX WARN: Removed duplicated region for block: B:254:0x061f  */
    /* JADX WARN: Removed duplicated region for block: B:278:0x0690  */
    /* JADX WARN: Removed duplicated region for block: B:279:0x0692  */
    /* JADX WARN: Removed duplicated region for block: B:282:0x06ad  */
    /* JADX WARN: Removed duplicated region for block: B:290:0x06e1  */
    /* JADX WARN: Removed duplicated region for block: B:292:0x06e7  */
    /* JADX WARN: Removed duplicated region for block: B:293:0x06e9  */
    /* JADX WARN: Removed duplicated region for block: B:296:0x06f1  */
    /* JADX WARN: Removed duplicated region for block: B:299:0x072d  */
    /* JADX WARN: Removed duplicated region for block: B:306:0x0768  */
    /* JADX WARN: Removed duplicated region for block: B:309:0x077d  */
    /* JADX WARN: Removed duplicated region for block: B:310:0x0780  */
    /* JADX WARN: Removed duplicated region for block: B:313:0x078d  */
    /* JADX WARN: Removed duplicated region for block: B:314:0x078f  */
    /* JADX WARN: Removed duplicated region for block: B:317:0x07af  */
    /* JADX WARN: Removed duplicated region for block: B:323:0x07d5  */
    /* JADX WARN: Removed duplicated region for block: B:326:0x07e5  */
    /* JADX WARN: Removed duplicated region for block: B:329:0x0810  */
    /* JADX WARN: Removed duplicated region for block: B:332:0x082d  */
    /* JADX WARN: Removed duplicated region for block: B:338:0x084b  */
    /* JADX WARN: Removed duplicated region for block: B:339:0x084d  */
    /* JADX WARN: Removed duplicated region for block: B:342:0x0899  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public int sendMessage(ArrayList<MessageObject> arrayList, long j, boolean z, boolean z2, boolean z3, int i) {
        boolean z4;
        boolean z5;
        boolean z6;
        boolean z7;
        boolean z8;
        boolean z9;
        boolean z10;
        TLRPC$Peer tLRPC$Peer;
        TLRPC$Chat tLRPC$Chat;
        String str;
        long j2;
        ArrayList arrayList2;
        TLRPC$Chat tLRPC$Chat2;
        long j3;
        String str2;
        long j4;
        LongSparseArray longSparseArray;
        TLRPC$Peer tLRPC$Peer2;
        TLRPC$InputPeer tLRPC$InputPeer;
        LongSparseArray longSparseArray2;
        int i2;
        ArrayList<Integer> arrayList3;
        ArrayList<Long> arrayList4;
        ArrayList<MessageObject> arrayList5;
        ArrayList<Integer> arrayList6;
        long j5;
        TLRPC$Chat tLRPC$Chat3;
        String str3;
        ArrayList<Long> arrayList7;
        LongSparseArray longSparseArray3;
        long j6;
        long j7;
        TLRPC$Peer tLRPC$Peer3;
        String str4;
        TLRPC$Chat tLRPC$Chat4;
        boolean z11;
        boolean z12;
        ArrayList arrayList8;
        ArrayList<MessageObject> arrayList9;
        int i3;
        boolean z13;
        int i4;
        ArrayList arrayList10;
        TLRPC$Message tLRPC$Message;
        long sendAsPeerId;
        TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow;
        boolean z14;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        TLRPC$Peer tLRPC$Peer4;
        TLRPC$User user;
        int i5;
        long j8;
        boolean z15;
        boolean z16;
        boolean z17;
        String str5;
        TLRPC$UserFull userFull;
        ArrayList<MessageObject> arrayList11 = arrayList;
        long j9 = j;
        boolean z18 = z;
        boolean z19 = z2;
        if (arrayList11 == null || arrayList.isEmpty()) {
            return 0;
        }
        long clientUserId = getUserConfig().getClientUserId();
        if (!DialogObject.isEncryptedDialog(j)) {
            TLRPC$Peer peer = getMessagesController().getPeer(j9);
            if (DialogObject.isUserDialog(j)) {
                if (getMessagesController().getUser(Long.valueOf(j)) == null) {
                    return 0;
                }
                z10 = getMessagesController().getUserFull(j9) != null ? !userFull.voice_messages_forbidden : true;
                tLRPC$Peer = peer;
                j2 = 0;
                str = null;
                tLRPC$Chat = null;
                z9 = false;
                z8 = true;
                z7 = false;
                z6 = true;
                z5 = true;
                z4 = true;
            } else {
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(-j9));
                if (ChatObject.isChannel(chat)) {
                    z16 = chat.signatures;
                    z15 = !chat.megagroup;
                    if (!z15 || !chat.has_link) {
                        tLRPC$Peer = peer;
                    } else {
                        tLRPC$Peer = peer;
                        TLRPC$ChatFull chatFull = getMessagesController().getChatFull(chat.id);
                        if (chatFull != null) {
                            j8 = chatFull.linked_chat_id;
                        }
                    }
                    j8 = 0;
                } else {
                    tLRPC$Peer = peer;
                    j8 = 0;
                    z16 = false;
                    z15 = false;
                }
                if (chat != null) {
                    z17 = z15;
                    str5 = getMessagesController().getAdminRank(chat.id, clientUserId);
                } else {
                    z17 = z15;
                    str5 = null;
                }
                boolean canSendStickers = ChatObject.canSendStickers(chat);
                z6 = ChatObject.canSendMedia(chat);
                z7 = z17;
                z5 = ChatObject.canSendEmbed(chat);
                z4 = ChatObject.canSendPolls(chat);
                z10 = true;
                tLRPC$Chat = chat;
                z9 = z16;
                z8 = canSendStickers;
                str = str5;
                j2 = j8;
            }
            LongSparseArray longSparseArray4 = new LongSparseArray();
            ArrayList<MessageObject> arrayList12 = new ArrayList<>();
            ArrayList arrayList13 = new ArrayList();
            ArrayList<Long> arrayList14 = new ArrayList<>();
            ArrayList<Integer> arrayList15 = new ArrayList<>();
            LongSparseArray longSparseArray5 = new LongSparseArray();
            TLRPC$InputPeer inputPeer = getMessagesController().getInputPeer(j9);
            boolean z20 = j9 == clientUserId;
            ArrayList<Integer> arrayList16 = arrayList15;
            LongSparseArray longSparseArray6 = longSparseArray5;
            ArrayList<MessageObject> arrayList17 = arrayList12;
            int i6 = 0;
            TLRPC$InputPeer tLRPC$InputPeer2 = inputPeer;
            ArrayList arrayList18 = arrayList13;
            int i7 = 0;
            TLRPC$Peer tLRPC$Peer5 = tLRPC$Peer;
            ArrayList<Long> arrayList19 = arrayList14;
            while (i7 < arrayList.size()) {
                MessageObject messageObject = arrayList11.get(i7);
                int i8 = i7;
                if (messageObject.getId() <= 0 || messageObject.needDrawBluredPreview()) {
                    j3 = j2;
                    longSparseArray2 = longSparseArray4;
                    str2 = str;
                    tLRPC$Chat2 = tLRPC$Chat;
                    arrayList4 = arrayList19;
                    arrayList2 = arrayList18;
                    arrayList5 = arrayList17;
                    tLRPC$InputPeer = tLRPC$InputPeer2;
                    arrayList6 = arrayList16;
                    j4 = clientUserId;
                    longSparseArray = longSparseArray6;
                    tLRPC$Peer2 = tLRPC$Peer5;
                    i2 = i8;
                    if (messageObject.type == 0 && !TextUtils.isEmpty(messageObject.messageText)) {
                        TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
                        TLRPC$WebPage tLRPC$WebPage = tLRPC$MessageMedia != null ? tLRPC$MessageMedia.webpage : null;
                        sendMessage(messageObject.messageText.toString(), j, null, null, tLRPC$WebPage, tLRPC$WebPage != null, messageObject.messageOwner.entities, null, null, z3, i, null);
                    }
                } else {
                    boolean z21 = messageObject.isSticker() || messageObject.isAnimatedSticker() || messageObject.isGif() || messageObject.isGame();
                    if (z8 || !z21) {
                        if (!z6) {
                            TLRPC$MessageMedia tLRPC$MessageMedia2 = messageObject.messageOwner.media;
                            if (((tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaPhoto) || (tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaDocument)) && !z21) {
                                if (i6 == 0) {
                                    i5 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 7) ? 5 : 2;
                                    i6 = i5;
                                    j3 = j2;
                                    longSparseArray2 = longSparseArray4;
                                    str2 = str;
                                    tLRPC$Chat2 = tLRPC$Chat;
                                    arrayList2 = arrayList18;
                                    tLRPC$InputPeer = tLRPC$InputPeer2;
                                    arrayList3 = arrayList16;
                                    j4 = clientUserId;
                                    longSparseArray = longSparseArray6;
                                    tLRPC$Peer2 = tLRPC$Peer5;
                                    i2 = i8;
                                }
                                j3 = j2;
                                longSparseArray2 = longSparseArray4;
                                str2 = str;
                                tLRPC$Chat2 = tLRPC$Chat;
                                arrayList4 = arrayList19;
                                arrayList2 = arrayList18;
                                arrayList5 = arrayList17;
                                tLRPC$InputPeer = tLRPC$InputPeer2;
                                arrayList6 = arrayList16;
                                j4 = clientUserId;
                                longSparseArray = longSparseArray6;
                                tLRPC$Peer2 = tLRPC$Peer5;
                                i2 = i8;
                            }
                        }
                        if (z4 || !(messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaPoll)) {
                            if (z10 || !MessageObject.isVoiceMessage(messageObject.messageOwner)) {
                                if (z10 || !MessageObject.isRoundVideoMessage(messageObject.messageOwner)) {
                                    TLRPC$TL_message tLRPC$TL_message = new TLRPC$TL_message();
                                    if (!z18) {
                                        if (messageObject.getDialogId() != clientUserId || !messageObject.isFromUser()) {
                                            longSparseArray3 = longSparseArray6;
                                        } else {
                                            longSparseArray3 = longSparseArray6;
                                            if (messageObject.messageOwner.from_id.user_id == clientUserId) {
                                                z14 = true;
                                                if (!messageObject.isForwarded()) {
                                                    TLRPC$TL_messageFwdHeader tLRPC$TL_messageFwdHeader = new TLRPC$TL_messageFwdHeader();
                                                    tLRPC$TL_message.fwd_from = tLRPC$TL_messageFwdHeader;
                                                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2 = messageObject.messageOwner.fwd_from;
                                                    if ((tLRPC$MessageFwdHeader2.flags & 1) != 0) {
                                                        tLRPC$TL_messageFwdHeader.flags |= 1;
                                                        tLRPC$TL_messageFwdHeader.from_id = tLRPC$MessageFwdHeader2.from_id;
                                                    }
                                                    if ((tLRPC$MessageFwdHeader2.flags & 32) != 0) {
                                                        tLRPC$TL_messageFwdHeader.flags |= 32;
                                                        tLRPC$TL_messageFwdHeader.from_name = tLRPC$MessageFwdHeader2.from_name;
                                                    }
                                                    if ((tLRPC$MessageFwdHeader2.flags & 4) != 0) {
                                                        tLRPC$TL_messageFwdHeader.flags |= 4;
                                                        tLRPC$TL_messageFwdHeader.channel_post = tLRPC$MessageFwdHeader2.channel_post;
                                                    }
                                                    if ((tLRPC$MessageFwdHeader2.flags & 8) != 0) {
                                                        tLRPC$TL_messageFwdHeader.flags |= 8;
                                                        tLRPC$TL_messageFwdHeader.post_author = tLRPC$MessageFwdHeader2.post_author;
                                                    }
                                                    if ((j9 == clientUserId || z7) && (tLRPC$MessageFwdHeader2.flags & 16) != 0 && !UserObject.isReplyUser(messageObject.getDialogId())) {
                                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader3 = tLRPC$TL_message.fwd_from;
                                                        tLRPC$MessageFwdHeader3.flags |= 16;
                                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader4 = messageObject.messageOwner.fwd_from;
                                                        tLRPC$MessageFwdHeader3.saved_from_peer = tLRPC$MessageFwdHeader4.saved_from_peer;
                                                        tLRPC$MessageFwdHeader3.saved_from_msg_id = tLRPC$MessageFwdHeader4.saved_from_msg_id;
                                                    }
                                                    tLRPC$TL_message.fwd_from.date = messageObject.messageOwner.fwd_from.date;
                                                    tLRPC$TL_message.flags = 4;
                                                } else if (!z14) {
                                                    long fromChatId = messageObject.getFromChatId();
                                                    TLRPC$TL_messageFwdHeader tLRPC$TL_messageFwdHeader2 = new TLRPC$TL_messageFwdHeader();
                                                    tLRPC$TL_message.fwd_from = tLRPC$TL_messageFwdHeader2;
                                                    arrayList7 = arrayList19;
                                                    tLRPC$TL_messageFwdHeader2.channel_post = messageObject.getId();
                                                    tLRPC$TL_message.fwd_from.flags |= 4;
                                                    if (messageObject.isFromUser()) {
                                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader5 = tLRPC$TL_message.fwd_from;
                                                        tLRPC$MessageFwdHeader5.from_id = messageObject.messageOwner.from_id;
                                                        tLRPC$MessageFwdHeader5.flags |= 1;
                                                        j5 = j2;
                                                        str3 = str;
                                                        tLRPC$Chat3 = tLRPC$Chat;
                                                    } else {
                                                        tLRPC$TL_message.fwd_from.from_id = new TLRPC$TL_peerChannel();
                                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader6 = tLRPC$TL_message.fwd_from;
                                                        TLRPC$Peer tLRPC$Peer6 = tLRPC$MessageFwdHeader6.from_id;
                                                        str3 = str;
                                                        TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
                                                        tLRPC$Chat3 = tLRPC$Chat;
                                                        TLRPC$Peer tLRPC$Peer7 = tLRPC$Message2.peer_id;
                                                        j5 = j2;
                                                        tLRPC$Peer6.channel_id = tLRPC$Peer7.channel_id;
                                                        tLRPC$MessageFwdHeader6.flags |= 1;
                                                        if (tLRPC$Message2.post && fromChatId > 0) {
                                                            TLRPC$Peer tLRPC$Peer8 = tLRPC$Message2.from_id;
                                                            if (tLRPC$Peer8 != null) {
                                                                tLRPC$Peer7 = tLRPC$Peer8;
                                                            }
                                                            tLRPC$MessageFwdHeader6.from_id = tLRPC$Peer7;
                                                        }
                                                    }
                                                    if (messageObject.messageOwner.post_author == null && !messageObject.isOutOwner() && fromChatId > 0 && messageObject.messageOwner.post && (user = getMessagesController().getUser(Long.valueOf(fromChatId))) != null) {
                                                        tLRPC$TL_message.fwd_from.post_author = ContactsController.formatName(user.first_name, user.last_name);
                                                        tLRPC$TL_message.fwd_from.flags |= 8;
                                                    }
                                                    tLRPC$TL_message.date = messageObject.messageOwner.date;
                                                    tLRPC$TL_message.flags = 4;
                                                    if (j9 == clientUserId && (tLRPC$MessageFwdHeader = tLRPC$TL_message.fwd_from) != null) {
                                                        tLRPC$MessageFwdHeader.flags |= 16;
                                                        tLRPC$MessageFwdHeader.saved_from_msg_id = messageObject.getId();
                                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader7 = tLRPC$TL_message.fwd_from;
                                                        tLRPC$Peer4 = messageObject.messageOwner.peer_id;
                                                        tLRPC$MessageFwdHeader7.saved_from_peer = tLRPC$Peer4;
                                                        if (tLRPC$Peer4.user_id == clientUserId) {
                                                            tLRPC$Peer4.user_id = messageObject.getDialogId();
                                                        }
                                                    }
                                                }
                                                j5 = j2;
                                                str3 = str;
                                                tLRPC$Chat3 = tLRPC$Chat;
                                                arrayList7 = arrayList19;
                                                if (j9 == clientUserId) {
                                                    tLRPC$MessageFwdHeader.flags |= 16;
                                                    tLRPC$MessageFwdHeader.saved_from_msg_id = messageObject.getId();
                                                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader72 = tLRPC$TL_message.fwd_from;
                                                    tLRPC$Peer4 = messageObject.messageOwner.peer_id;
                                                    tLRPC$MessageFwdHeader72.saved_from_peer = tLRPC$Peer4;
                                                    if (tLRPC$Peer4.user_id == clientUserId) {
                                                    }
                                                }
                                            }
                                        }
                                        z14 = false;
                                        if (!messageObject.isForwarded()) {
                                        }
                                        j5 = j2;
                                        str3 = str;
                                        tLRPC$Chat3 = tLRPC$Chat;
                                        arrayList7 = arrayList19;
                                        if (j9 == clientUserId) {
                                        }
                                    } else {
                                        j5 = j2;
                                        str3 = str;
                                        tLRPC$Chat3 = tLRPC$Chat;
                                        arrayList7 = arrayList19;
                                        longSparseArray3 = longSparseArray6;
                                    }
                                    HashMap<String, String> hashMap = new HashMap<>();
                                    tLRPC$TL_message.params = hashMap;
                                    hashMap.put("fwd_id", "" + messageObject.getId());
                                    tLRPC$TL_message.params.put("fwd_peer", "" + messageObject.getDialogId());
                                    if (!messageObject.messageOwner.restriction_reason.isEmpty()) {
                                        tLRPC$TL_message.restriction_reason = messageObject.messageOwner.restriction_reason;
                                        tLRPC$TL_message.flags |= 4194304;
                                    }
                                    if (!z5 && (messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaWebPage)) {
                                        tLRPC$TL_message.media = new TLRPC$TL_messageMediaEmpty();
                                    } else {
                                        tLRPC$TL_message.media = messageObject.messageOwner.media;
                                    }
                                    if (tLRPC$TL_message.media != null) {
                                        tLRPC$TL_message.flags |= 512;
                                    }
                                    long j10 = messageObject.messageOwner.via_bot_id;
                                    if (j10 != 0) {
                                        tLRPC$TL_message.via_bot_id = j10;
                                        tLRPC$TL_message.flags |= 2048;
                                    }
                                    if (j5 != 0) {
                                        TLRPC$TL_messageReplies tLRPC$TL_messageReplies = new TLRPC$TL_messageReplies();
                                        tLRPC$TL_message.replies = tLRPC$TL_messageReplies;
                                        tLRPC$TL_messageReplies.comments = true;
                                        j6 = j5;
                                        tLRPC$TL_messageReplies.channel_id = j6;
                                        tLRPC$TL_messageReplies.flags |= 1;
                                        tLRPC$TL_message.flags |= 8388608;
                                    } else {
                                        j6 = j5;
                                    }
                                    if (!z19 || tLRPC$TL_message.media == null) {
                                        tLRPC$TL_message.message = messageObject.messageOwner.message;
                                    }
                                    if (tLRPC$TL_message.message == null) {
                                        tLRPC$TL_message.message = "";
                                    }
                                    tLRPC$TL_message.fwd_msg_id = messageObject.getId();
                                    TLRPC$Message tLRPC$Message3 = messageObject.messageOwner;
                                    tLRPC$TL_message.attachPath = tLRPC$Message3.attachPath;
                                    tLRPC$TL_message.entities = tLRPC$Message3.entities;
                                    if (tLRPC$Message3.reply_markup instanceof TLRPC$TL_replyInlineMarkup) {
                                        tLRPC$TL_message.reply_markup = new TLRPC$TL_replyInlineMarkup();
                                        int size = messageObject.messageOwner.reply_markup.rows.size();
                                        int i9 = 0;
                                        boolean z22 = false;
                                        while (true) {
                                            if (i9 >= size) {
                                                j3 = j6;
                                                break;
                                            }
                                            TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow2 = messageObject.messageOwner.reply_markup.rows.get(i9);
                                            int size2 = tLRPC$TL_keyboardButtonRow2.buttons.size();
                                            int i10 = size;
                                            int i11 = 0;
                                            TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow3 = null;
                                            while (true) {
                                                j3 = j6;
                                                if (i11 >= size2) {
                                                    break;
                                                }
                                                TLRPC$KeyboardButton tLRPC$KeyboardButton = tLRPC$TL_keyboardButtonRow2.buttons.get(i11);
                                                boolean z23 = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth;
                                                boolean z24 = z22;
                                                if (!z23 && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrl) && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonSwitchInline) && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy)) {
                                                    z22 = true;
                                                    break;
                                                }
                                                if (z23) {
                                                    TLRPC$TL_keyboardButtonUrlAuth tLRPC$TL_keyboardButtonUrlAuth = new TLRPC$TL_keyboardButtonUrlAuth();
                                                    tLRPC$TL_keyboardButtonUrlAuth.flags = tLRPC$KeyboardButton.flags;
                                                    String str6 = tLRPC$KeyboardButton.fwd_text;
                                                    if (str6 != null) {
                                                        tLRPC$TL_keyboardButtonUrlAuth.fwd_text = str6;
                                                        tLRPC$TL_keyboardButtonUrlAuth.text = str6;
                                                    } else {
                                                        tLRPC$TL_keyboardButtonUrlAuth.text = tLRPC$KeyboardButton.text;
                                                    }
                                                    tLRPC$TL_keyboardButtonUrlAuth.url = tLRPC$KeyboardButton.url;
                                                    tLRPC$TL_keyboardButtonUrlAuth.button_id = tLRPC$KeyboardButton.button_id;
                                                    tLRPC$KeyboardButton = tLRPC$TL_keyboardButtonUrlAuth;
                                                }
                                                if (tLRPC$TL_keyboardButtonRow3 == null) {
                                                    tLRPC$TL_keyboardButtonRow = new TLRPC$TL_keyboardButtonRow();
                                                    tLRPC$TL_message.reply_markup.rows.add(tLRPC$TL_keyboardButtonRow);
                                                } else {
                                                    tLRPC$TL_keyboardButtonRow = tLRPC$TL_keyboardButtonRow3;
                                                }
                                                tLRPC$TL_keyboardButtonRow.buttons.add(tLRPC$KeyboardButton);
                                                i11++;
                                                tLRPC$TL_keyboardButtonRow3 = tLRPC$TL_keyboardButtonRow;
                                                j6 = j3;
                                                z22 = z24;
                                            }
                                            if (z22) {
                                                break;
                                            }
                                            i9++;
                                            size = i10;
                                            j6 = j3;
                                        }
                                        if (!z22) {
                                            tLRPC$TL_message.flags |= 64;
                                        } else {
                                            messageObject.messageOwner.reply_markup = null;
                                            tLRPC$TL_message.flags &= -65;
                                            if (!tLRPC$TL_message.entities.isEmpty()) {
                                                tLRPC$TL_message.flags |= 128;
                                            }
                                            if (tLRPC$TL_message.attachPath == null) {
                                                tLRPC$TL_message.attachPath = "";
                                            }
                                            int newMessageId = getUserConfig().getNewMessageId();
                                            tLRPC$TL_message.id = newMessageId;
                                            tLRPC$TL_message.local_id = newMessageId;
                                            tLRPC$TL_message.out = true;
                                            j7 = messageObject.messageOwner.grouped_id;
                                            if (j7 != 0) {
                                                Long l = (Long) longSparseArray4.get(j7);
                                                if (l == null) {
                                                    l = Long.valueOf(Utilities.random.nextLong());
                                                    longSparseArray4.put(messageObject.messageOwner.grouped_id, l);
                                                }
                                                tLRPC$TL_message.grouped_id = l.longValue();
                                                tLRPC$TL_message.flags |= 131072;
                                            }
                                            tLRPC$Peer3 = tLRPC$Peer5;
                                            if (tLRPC$Peer3.channel_id == 0 && z7) {
                                                if (z9) {
                                                    TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
                                                    tLRPC$TL_message.from_id = tLRPC$TL_peerUser;
                                                    tLRPC$TL_peerUser.user_id = clientUserId;
                                                } else {
                                                    tLRPC$TL_message.from_id = tLRPC$Peer3;
                                                }
                                                tLRPC$TL_message.post = true;
                                                str4 = str3;
                                                tLRPC$Chat4 = tLRPC$Chat3;
                                            } else {
                                                tLRPC$Chat4 = tLRPC$Chat3;
                                                sendAsPeerId = ChatObject.getSendAsPeerId(tLRPC$Chat4, getMessagesController().getChatFull(-j9), true);
                                                if (sendAsPeerId != clientUserId) {
                                                    TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
                                                    tLRPC$TL_message.from_id = tLRPC$TL_peerUser2;
                                                    tLRPC$TL_peerUser2.user_id = clientUserId;
                                                    tLRPC$TL_message.flags |= 256;
                                                    str4 = str3;
                                                } else {
                                                    tLRPC$TL_message.from_id = getMessagesController().getPeer(sendAsPeerId);
                                                    str4 = str3;
                                                    if (str3 != null) {
                                                        tLRPC$TL_message.post_author = str4;
                                                        tLRPC$TL_message.flags |= 65536;
                                                    }
                                                }
                                            }
                                            if (tLRPC$TL_message.random_id == 0) {
                                                tLRPC$TL_message.random_id = getNextRandomId();
                                            }
                                            ArrayList<Long> arrayList20 = arrayList7;
                                            arrayList20.add(Long.valueOf(tLRPC$TL_message.random_id));
                                            LongSparseArray longSparseArray7 = longSparseArray3;
                                            longSparseArray7.put(tLRPC$TL_message.random_id, tLRPC$TL_message);
                                            ArrayList<Integer> arrayList21 = arrayList16;
                                            arrayList21.add(Integer.valueOf(tLRPC$TL_message.fwd_msg_id));
                                            tLRPC$TL_message.date = i == 0 ? i : getConnectionsManager().getCurrentTime();
                                            longSparseArray2 = longSparseArray4;
                                            TLRPC$InputPeer tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                            z11 = tLRPC$InputPeer3 instanceof TLRPC$TL_inputPeerChannel;
                                            if (z11 || !z7) {
                                                j4 = clientUserId;
                                                tLRPC$Message = messageObject.messageOwner;
                                                if ((tLRPC$Message.flags & 1024) != 0 && i == 0) {
                                                    tLRPC$TL_message.views = tLRPC$Message.views;
                                                    tLRPC$TL_message.flags |= 1024;
                                                }
                                                tLRPC$TL_message.unread = true;
                                            } else {
                                                j4 = clientUserId;
                                                if (i == 0) {
                                                    tLRPC$TL_message.views = 1;
                                                    tLRPC$TL_message.flags |= 1024;
                                                }
                                            }
                                            tLRPC$TL_message.dialog_id = j9;
                                            tLRPC$TL_message.peer_id = tLRPC$Peer3;
                                            if (!MessageObject.isVoiceMessage(tLRPC$TL_message) || MessageObject.isRoundVideoMessage(tLRPC$TL_message)) {
                                                if (!z11 && messageObject.getChannelId() != 0) {
                                                    tLRPC$TL_message.media_unread = messageObject.isContentUnread();
                                                } else {
                                                    z12 = true;
                                                    tLRPC$TL_message.media_unread = true;
                                                    longSparseArray = longSparseArray7;
                                                    MessageObject messageObject2 = new MessageObject(this.currentAccount, tLRPC$TL_message, z12, z12);
                                                    messageObject2.scheduled = i != 0;
                                                    TLRPC$Message tLRPC$Message4 = messageObject2.messageOwner;
                                                    int i12 = z12 ? 1 : 0;
                                                    int i13 = z12 ? 1 : 0;
                                                    tLRPC$Message4.send_state = i12;
                                                    messageObject2.wasJustSent = z12;
                                                    ArrayList<MessageObject> arrayList22 = arrayList17;
                                                    arrayList22.add(messageObject2);
                                                    arrayList8 = arrayList18;
                                                    arrayList8.add(tLRPC$TL_message);
                                                    tLRPC$Peer2 = tLRPC$Peer3;
                                                    TLRPC$Chat tLRPC$Chat5 = tLRPC$Chat4;
                                                    if (messageObject.replyMessageObject != null) {
                                                        int i14 = 0;
                                                        while (true) {
                                                            if (i14 >= arrayList.size()) {
                                                                arrayList9 = arrayList;
                                                                str2 = str4;
                                                                break;
                                                            }
                                                            arrayList9 = arrayList;
                                                            str2 = str4;
                                                            if (arrayList9.get(i14).getId() == messageObject.replyMessageObject.getId()) {
                                                                TLRPC$Message tLRPC$Message5 = messageObject2.messageOwner;
                                                                MessageObject messageObject3 = messageObject.replyMessageObject;
                                                                tLRPC$Message5.replyMessage = messageObject3.messageOwner;
                                                                messageObject2.replyMessageObject = messageObject3;
                                                                break;
                                                            }
                                                            i14++;
                                                            str4 = str2;
                                                        }
                                                    } else {
                                                        str2 = str4;
                                                        arrayList9 = arrayList;
                                                    }
                                                    putToSendingMessages(tLRPC$TL_message, i != 0);
                                                    if (BuildVars.LOGS_ENABLED) {
                                                        FileLog.d("forward message user_id = " + tLRPC$InputPeer3.user_id + " chat_id = " + tLRPC$InputPeer3.chat_id + " channel_id = " + tLRPC$InputPeer3.channel_id + " access_hash = " + tLRPC$InputPeer3.access_hash);
                                                    }
                                                    if (arrayList8.size() != 100) {
                                                        i3 = i8;
                                                        if (i3 != arrayList.size() - 1 && (i3 == arrayList.size() - 1 || arrayList9.get(i3 + 1).getDialogId() == messageObject.getDialogId())) {
                                                            arrayList6 = arrayList21;
                                                            arrayList5 = arrayList22;
                                                            arrayList2 = arrayList8;
                                                            tLRPC$InputPeer = tLRPC$InputPeer3;
                                                            tLRPC$Chat2 = tLRPC$Chat5;
                                                            arrayList4 = arrayList20;
                                                            i2 = i3;
                                                        }
                                                    } else {
                                                        i3 = i8;
                                                    }
                                                    getMessagesStorage().putMessages(new ArrayList<>(arrayList8), false, true, false, 0, i != 0);
                                                    getMessagesController().updateInterfaceWithMessages(j9, arrayList22, i != 0);
                                                    getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                    getUserConfig().saveConfig(false);
                                                    TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages = new TLRPC$TL_messages_forwardMessages();
                                                    tLRPC$TL_messages_forwardMessages.to_peer = tLRPC$InputPeer3;
                                                    if (z3) {
                                                        if (!MessagesController.getNotificationsSettings(this.currentAccount).getBoolean("silent_" + j9, false)) {
                                                            z13 = false;
                                                            tLRPC$TL_messages_forwardMessages.silent = z13;
                                                            if (i != 0) {
                                                                tLRPC$TL_messages_forwardMessages.schedule_date = i;
                                                                tLRPC$TL_messages_forwardMessages.flags |= 1024;
                                                            }
                                                            if (!(messageObject.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                                                i4 = i3;
                                                                TLRPC$Chat chat2 = getMessagesController().getChat(Long.valueOf(messageObject.messageOwner.peer_id.channel_id));
                                                                TLRPC$TL_inputPeerChannel tLRPC$TL_inputPeerChannel = new TLRPC$TL_inputPeerChannel();
                                                                tLRPC$TL_messages_forwardMessages.from_peer = tLRPC$TL_inputPeerChannel;
                                                                arrayList10 = arrayList8;
                                                                tLRPC$TL_inputPeerChannel.channel_id = messageObject.messageOwner.peer_id.channel_id;
                                                                if (chat2 != null) {
                                                                    tLRPC$TL_inputPeerChannel.access_hash = chat2.access_hash;
                                                                }
                                                            } else {
                                                                i4 = i3;
                                                                arrayList10 = arrayList8;
                                                                tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                            }
                                                            tLRPC$TL_messages_forwardMessages.random_id = arrayList20;
                                                            tLRPC$TL_messages_forwardMessages.id = arrayList21;
                                                            tLRPC$TL_messages_forwardMessages.drop_author = z;
                                                            tLRPC$TL_messages_forwardMessages.drop_media_captions = z2;
                                                            tLRPC$TL_messages_forwardMessages.with_my_score = arrayList.size() != 1 && arrayList9.get(0).messageOwner.with_my_score;
                                                            tLRPC$InputPeer = tLRPC$InputPeer3;
                                                            arrayList6 = arrayList21;
                                                            arrayList5 = arrayList22;
                                                            tLRPC$Chat2 = tLRPC$Chat5;
                                                            arrayList4 = arrayList20;
                                                            i2 = i4;
                                                            arrayList2 = arrayList10;
                                                            getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new SendMessagesHelper$$ExternalSyntheticLambda79(this, j, i, i != 2147483646, z20, longSparseArray, arrayList10, new ArrayList(arrayList22), messageObject, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages), 68);
                                                            if (i2 != arrayList.size() - 1) {
                                                                ArrayList<MessageObject> arrayList23 = new ArrayList<>();
                                                                ArrayList arrayList24 = new ArrayList();
                                                                ArrayList<Long> arrayList25 = new ArrayList<>();
                                                                arrayList3 = new ArrayList<>();
                                                                arrayList17 = arrayList23;
                                                                arrayList2 = arrayList24;
                                                                arrayList19 = arrayList25;
                                                                longSparseArray = new LongSparseArray();
                                                            }
                                                        }
                                                    }
                                                    z13 = true;
                                                    tLRPC$TL_messages_forwardMessages.silent = z13;
                                                    if (i != 0) {
                                                    }
                                                    if (!(messageObject.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                                    }
                                                    tLRPC$TL_messages_forwardMessages.random_id = arrayList20;
                                                    tLRPC$TL_messages_forwardMessages.id = arrayList21;
                                                    tLRPC$TL_messages_forwardMessages.drop_author = z;
                                                    tLRPC$TL_messages_forwardMessages.drop_media_captions = z2;
                                                    tLRPC$TL_messages_forwardMessages.with_my_score = arrayList.size() != 1 && arrayList9.get(0).messageOwner.with_my_score;
                                                    tLRPC$InputPeer = tLRPC$InputPeer3;
                                                    arrayList6 = arrayList21;
                                                    arrayList5 = arrayList22;
                                                    tLRPC$Chat2 = tLRPC$Chat5;
                                                    arrayList4 = arrayList20;
                                                    i2 = i4;
                                                    arrayList2 = arrayList10;
                                                    getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new SendMessagesHelper$$ExternalSyntheticLambda79(this, j, i, i != 2147483646, z20, longSparseArray, arrayList10, new ArrayList(arrayList22), messageObject, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages), 68);
                                                    if (i2 != arrayList.size() - 1) {
                                                    }
                                                }
                                            }
                                            z12 = true;
                                            longSparseArray = longSparseArray7;
                                            MessageObject messageObject22 = new MessageObject(this.currentAccount, tLRPC$TL_message, z12, z12);
                                            messageObject22.scheduled = i != 0;
                                            TLRPC$Message tLRPC$Message42 = messageObject22.messageOwner;
                                            int i122 = z12 ? 1 : 0;
                                            int i132 = z12 ? 1 : 0;
                                            tLRPC$Message42.send_state = i122;
                                            messageObject22.wasJustSent = z12;
                                            ArrayList<MessageObject> arrayList222 = arrayList17;
                                            arrayList222.add(messageObject22);
                                            arrayList8 = arrayList18;
                                            arrayList8.add(tLRPC$TL_message);
                                            tLRPC$Peer2 = tLRPC$Peer3;
                                            TLRPC$Chat tLRPC$Chat52 = tLRPC$Chat4;
                                            if (messageObject.replyMessageObject != null) {
                                            }
                                            putToSendingMessages(tLRPC$TL_message, i != 0);
                                            if (BuildVars.LOGS_ENABLED) {
                                            }
                                            if (arrayList8.size() != 100) {
                                            }
                                            getMessagesStorage().putMessages(new ArrayList<>(arrayList8), false, true, false, 0, i != 0);
                                            getMessagesController().updateInterfaceWithMessages(j9, arrayList222, i != 0);
                                            getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                            getUserConfig().saveConfig(false);
                                            TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages2 = new TLRPC$TL_messages_forwardMessages();
                                            tLRPC$TL_messages_forwardMessages2.to_peer = tLRPC$InputPeer3;
                                            if (z3) {
                                            }
                                            z13 = true;
                                            tLRPC$TL_messages_forwardMessages2.silent = z13;
                                            if (i != 0) {
                                            }
                                            if (!(messageObject.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                            }
                                            tLRPC$TL_messages_forwardMessages2.random_id = arrayList20;
                                            tLRPC$TL_messages_forwardMessages2.id = arrayList21;
                                            tLRPC$TL_messages_forwardMessages2.drop_author = z;
                                            tLRPC$TL_messages_forwardMessages2.drop_media_captions = z2;
                                            tLRPC$TL_messages_forwardMessages2.with_my_score = arrayList.size() != 1 && arrayList9.get(0).messageOwner.with_my_score;
                                            tLRPC$InputPeer = tLRPC$InputPeer3;
                                            arrayList6 = arrayList21;
                                            arrayList5 = arrayList222;
                                            tLRPC$Chat2 = tLRPC$Chat52;
                                            arrayList4 = arrayList20;
                                            i2 = i4;
                                            arrayList2 = arrayList10;
                                            getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages2, new SendMessagesHelper$$ExternalSyntheticLambda79(this, j, i, i != 2147483646, z20, longSparseArray, arrayList10, new ArrayList(arrayList222), messageObject, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages2), 68);
                                            if (i2 != arrayList.size() - 1) {
                                            }
                                        }
                                    } else {
                                        j3 = j6;
                                    }
                                    if (!tLRPC$TL_message.entities.isEmpty()) {
                                    }
                                    if (tLRPC$TL_message.attachPath == null) {
                                    }
                                    int newMessageId2 = getUserConfig().getNewMessageId();
                                    tLRPC$TL_message.id = newMessageId2;
                                    tLRPC$TL_message.local_id = newMessageId2;
                                    tLRPC$TL_message.out = true;
                                    j7 = messageObject.messageOwner.grouped_id;
                                    if (j7 != 0) {
                                    }
                                    tLRPC$Peer3 = tLRPC$Peer5;
                                    if (tLRPC$Peer3.channel_id == 0) {
                                    }
                                    tLRPC$Chat4 = tLRPC$Chat3;
                                    sendAsPeerId = ChatObject.getSendAsPeerId(tLRPC$Chat4, getMessagesController().getChatFull(-j9), true);
                                    if (sendAsPeerId != clientUserId) {
                                    }
                                    if (tLRPC$TL_message.random_id == 0) {
                                    }
                                    ArrayList<Long> arrayList202 = arrayList7;
                                    arrayList202.add(Long.valueOf(tLRPC$TL_message.random_id));
                                    LongSparseArray longSparseArray72 = longSparseArray3;
                                    longSparseArray72.put(tLRPC$TL_message.random_id, tLRPC$TL_message);
                                    ArrayList<Integer> arrayList212 = arrayList16;
                                    arrayList212.add(Integer.valueOf(tLRPC$TL_message.fwd_msg_id));
                                    tLRPC$TL_message.date = i == 0 ? i : getConnectionsManager().getCurrentTime();
                                    longSparseArray2 = longSparseArray4;
                                    TLRPC$InputPeer tLRPC$InputPeer32 = tLRPC$InputPeer2;
                                    z11 = tLRPC$InputPeer32 instanceof TLRPC$TL_inputPeerChannel;
                                    if (z11) {
                                    }
                                    j4 = clientUserId;
                                    tLRPC$Message = messageObject.messageOwner;
                                    if ((tLRPC$Message.flags & 1024) != 0) {
                                        tLRPC$TL_message.views = tLRPC$Message.views;
                                        tLRPC$TL_message.flags |= 1024;
                                    }
                                    tLRPC$TL_message.unread = true;
                                    tLRPC$TL_message.dialog_id = j9;
                                    tLRPC$TL_message.peer_id = tLRPC$Peer3;
                                    if (!MessageObject.isVoiceMessage(tLRPC$TL_message)) {
                                    }
                                    if (!z11) {
                                    }
                                    z12 = true;
                                    tLRPC$TL_message.media_unread = true;
                                    longSparseArray = longSparseArray72;
                                    MessageObject messageObject222 = new MessageObject(this.currentAccount, tLRPC$TL_message, z12, z12);
                                    messageObject222.scheduled = i != 0;
                                    TLRPC$Message tLRPC$Message422 = messageObject222.messageOwner;
                                    int i1222 = z12 ? 1 : 0;
                                    int i1322 = z12 ? 1 : 0;
                                    tLRPC$Message422.send_state = i1222;
                                    messageObject222.wasJustSent = z12;
                                    ArrayList<MessageObject> arrayList2222 = arrayList17;
                                    arrayList2222.add(messageObject222);
                                    arrayList8 = arrayList18;
                                    arrayList8.add(tLRPC$TL_message);
                                    tLRPC$Peer2 = tLRPC$Peer3;
                                    TLRPC$Chat tLRPC$Chat522 = tLRPC$Chat4;
                                    if (messageObject.replyMessageObject != null) {
                                    }
                                    putToSendingMessages(tLRPC$TL_message, i != 0);
                                    if (BuildVars.LOGS_ENABLED) {
                                    }
                                    if (arrayList8.size() != 100) {
                                    }
                                    getMessagesStorage().putMessages(new ArrayList<>(arrayList8), false, true, false, 0, i != 0);
                                    getMessagesController().updateInterfaceWithMessages(j9, arrayList2222, i != 0);
                                    getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                    getUserConfig().saveConfig(false);
                                    TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages22 = new TLRPC$TL_messages_forwardMessages();
                                    tLRPC$TL_messages_forwardMessages22.to_peer = tLRPC$InputPeer32;
                                    if (z3) {
                                    }
                                    z13 = true;
                                    tLRPC$TL_messages_forwardMessages22.silent = z13;
                                    if (i != 0) {
                                    }
                                    if (!(messageObject.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                    }
                                    tLRPC$TL_messages_forwardMessages22.random_id = arrayList202;
                                    tLRPC$TL_messages_forwardMessages22.id = arrayList212;
                                    tLRPC$TL_messages_forwardMessages22.drop_author = z;
                                    tLRPC$TL_messages_forwardMessages22.drop_media_captions = z2;
                                    tLRPC$TL_messages_forwardMessages22.with_my_score = arrayList.size() != 1 && arrayList9.get(0).messageOwner.with_my_score;
                                    tLRPC$InputPeer = tLRPC$InputPeer32;
                                    arrayList6 = arrayList212;
                                    arrayList5 = arrayList2222;
                                    tLRPC$Chat2 = tLRPC$Chat522;
                                    arrayList4 = arrayList202;
                                    i2 = i4;
                                    arrayList2 = arrayList10;
                                    getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages22, new SendMessagesHelper$$ExternalSyntheticLambda79(this, j, i, i != 2147483646, z20, longSparseArray, arrayList10, new ArrayList(arrayList2222), messageObject, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages22), 68);
                                    if (i2 != arrayList.size() - 1) {
                                    }
                                } else if (i6 == 0) {
                                    j3 = j2;
                                    longSparseArray2 = longSparseArray4;
                                    str2 = str;
                                    tLRPC$Chat2 = tLRPC$Chat;
                                    arrayList2 = arrayList18;
                                    tLRPC$InputPeer = tLRPC$InputPeer2;
                                    arrayList3 = arrayList16;
                                    i6 = 8;
                                    j4 = clientUserId;
                                    longSparseArray = longSparseArray6;
                                    tLRPC$Peer2 = tLRPC$Peer5;
                                    i2 = i8;
                                }
                            } else if (i6 == 0) {
                                j3 = j2;
                                longSparseArray2 = longSparseArray4;
                                str2 = str;
                                tLRPC$Chat2 = tLRPC$Chat;
                                arrayList2 = arrayList18;
                                tLRPC$InputPeer = tLRPC$InputPeer2;
                                arrayList3 = arrayList16;
                                i6 = 7;
                                j4 = clientUserId;
                                longSparseArray = longSparseArray6;
                                tLRPC$Peer2 = tLRPC$Peer5;
                                i2 = i8;
                            }
                        } else if (i6 == 0) {
                            i5 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 10) ? 6 : 3;
                            i6 = i5;
                            j3 = j2;
                            longSparseArray2 = longSparseArray4;
                            str2 = str;
                            tLRPC$Chat2 = tLRPC$Chat;
                            arrayList2 = arrayList18;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            arrayList3 = arrayList16;
                            j4 = clientUserId;
                            longSparseArray = longSparseArray6;
                            tLRPC$Peer2 = tLRPC$Peer5;
                            i2 = i8;
                        }
                        j3 = j2;
                        longSparseArray2 = longSparseArray4;
                        str2 = str;
                        tLRPC$Chat2 = tLRPC$Chat;
                        arrayList4 = arrayList19;
                        arrayList2 = arrayList18;
                        arrayList5 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList6 = arrayList16;
                        j4 = clientUserId;
                        longSparseArray = longSparseArray6;
                        tLRPC$Peer2 = tLRPC$Peer5;
                        i2 = i8;
                    } else {
                        if (i6 == 0) {
                            i5 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 8) ? 4 : 1;
                            i6 = i5;
                            j3 = j2;
                            longSparseArray2 = longSparseArray4;
                            str2 = str;
                            tLRPC$Chat2 = tLRPC$Chat;
                            arrayList2 = arrayList18;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            arrayList3 = arrayList16;
                            j4 = clientUserId;
                            longSparseArray = longSparseArray6;
                            tLRPC$Peer2 = tLRPC$Peer5;
                            i2 = i8;
                        }
                        j3 = j2;
                        longSparseArray2 = longSparseArray4;
                        str2 = str;
                        tLRPC$Chat2 = tLRPC$Chat;
                        arrayList4 = arrayList19;
                        arrayList2 = arrayList18;
                        arrayList5 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList6 = arrayList16;
                        j4 = clientUserId;
                        longSparseArray = longSparseArray6;
                        tLRPC$Peer2 = tLRPC$Peer5;
                        i2 = i8;
                    }
                    i7 = i2 + 1;
                    arrayList11 = arrayList;
                    j9 = j;
                    z18 = z;
                    z19 = z2;
                    longSparseArray4 = longSparseArray2;
                    tLRPC$Peer5 = tLRPC$Peer2;
                    longSparseArray6 = longSparseArray;
                    clientUserId = j4;
                    str = str2;
                    tLRPC$Chat = tLRPC$Chat2;
                    arrayList18 = arrayList2;
                    arrayList16 = arrayList3;
                    tLRPC$InputPeer2 = tLRPC$InputPeer;
                    j2 = j3;
                }
                arrayList3 = arrayList6;
                arrayList17 = arrayList5;
                arrayList19 = arrayList4;
                i7 = i2 + 1;
                arrayList11 = arrayList;
                j9 = j;
                z18 = z;
                z19 = z2;
                longSparseArray4 = longSparseArray2;
                tLRPC$Peer5 = tLRPC$Peer2;
                longSparseArray6 = longSparseArray;
                clientUserId = j4;
                str = str2;
                tLRPC$Chat = tLRPC$Chat2;
                arrayList18 = arrayList2;
                arrayList16 = arrayList3;
                tLRPC$InputPeer2 = tLRPC$InputPeer;
                j2 = j3;
            }
            return i6;
        }
        for (int i15 = 0; i15 < arrayList.size(); i15++) {
            processForwardFromMyName(arrayList.get(i15), j);
        }
        return 0;
    }

    /* JADX WARN: Removed duplicated region for block: B:43:0x00ed  */
    /* JADX WARN: Removed duplicated region for block: B:49:0x00fc  */
    /* JADX WARN: Removed duplicated region for block: B:50:0x0104  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$sendMessage$14(long j, int i, boolean z, boolean z2, LongSparseArray longSparseArray, ArrayList arrayList, ArrayList arrayList2, MessageObject messageObject, TLRPC$Peer tLRPC$Peer, TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        SparseLongArray sparseLongArray;
        TLRPC$Updates tLRPC$Updates;
        int i2;
        boolean z3;
        TLRPC$Message tLRPC$Message;
        boolean z4;
        long j2;
        TLRPC$Message tLRPC$Message2;
        int indexOf;
        int i3 = i;
        ArrayList arrayList3 = arrayList;
        ArrayList arrayList4 = arrayList2;
        boolean z5 = true;
        if (tLRPC$TL_error == null) {
            SparseLongArray sparseLongArray2 = new SparseLongArray();
            TLRPC$Updates tLRPC$Updates2 = (TLRPC$Updates) tLObject;
            int i4 = 0;
            while (i4 < tLRPC$Updates2.updates.size()) {
                TLRPC$Update tLRPC$Update = tLRPC$Updates2.updates.get(i4);
                if (tLRPC$Update instanceof TLRPC$TL_updateMessageID) {
                    TLRPC$TL_updateMessageID tLRPC$TL_updateMessageID = (TLRPC$TL_updateMessageID) tLRPC$Update;
                    sparseLongArray2.put(tLRPC$TL_updateMessageID.id, tLRPC$TL_updateMessageID.random_id);
                    tLRPC$Updates2.updates.remove(i4);
                    i4--;
                }
                i4++;
            }
            Integer num = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(j));
            if (num == null) {
                num = Integer.valueOf(getMessagesStorage().getDialogReadMax(true, j));
                getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(j), num);
            }
            Integer num2 = num;
            int i5 = 0;
            int i6 = 0;
            while (i5 < tLRPC$Updates2.updates.size()) {
                TLRPC$Update tLRPC$Update2 = tLRPC$Updates2.updates.get(i5);
                boolean z6 = tLRPC$Update2 instanceof TLRPC$TL_updateNewMessage;
                if (z6 || (tLRPC$Update2 instanceof TLRPC$TL_updateNewChannelMessage) || (tLRPC$Update2 instanceof TLRPC$TL_updateNewScheduledMessage)) {
                    boolean z7 = i3 != 0;
                    tLRPC$Updates2.updates.remove(i5);
                    int i7 = i5 - 1;
                    if (z6) {
                        TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update2;
                        TLRPC$Message tLRPC$Message3 = tLRPC$TL_updateNewMessage.message;
                        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
                        tLRPC$Message = tLRPC$Message3;
                    } else if (tLRPC$Update2 instanceof TLRPC$TL_updateNewScheduledMessage) {
                        tLRPC$Message = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update2).message;
                    } else {
                        TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update2;
                        TLRPC$Message tLRPC$Message4 = tLRPC$TL_updateNewChannelMessage.message;
                        z3 = z7;
                        getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$Message4.peer_id.channel_id);
                        tLRPC$Message = tLRPC$Message4;
                        z4 = (z || tLRPC$Message.date == 2147483646) ? z3 : false;
                        ImageLoader.saveMessageThumbs(tLRPC$Message);
                        if (!z4) {
                            tLRPC$Message.unread = num2.intValue() < tLRPC$Message.id;
                        }
                        if (!z2) {
                            tLRPC$Message.out = z5;
                            tLRPC$Message.unread = false;
                            tLRPC$Message.media_unread = false;
                        }
                        j2 = sparseLongArray2.get(tLRPC$Message.id);
                        if (j2 != 0 || (tLRPC$Message2 = (TLRPC$Message) longSparseArray.get(j2)) == null || (indexOf = arrayList3.indexOf(tLRPC$Message2)) == -1) {
                            tLRPC$Updates = tLRPC$Updates2;
                            sparseLongArray = sparseLongArray2;
                            i5 = i7;
                        } else {
                            MessageObject messageObject2 = (MessageObject) arrayList4.get(indexOf);
                            arrayList3.remove(indexOf);
                            arrayList4.remove(indexOf);
                            int i8 = tLRPC$Message2.id;
                            ArrayList arrayList5 = new ArrayList();
                            arrayList5.add(tLRPC$Message);
                            TLRPC$Message tLRPC$Message5 = messageObject2.messageOwner;
                            tLRPC$Message5.post_author = tLRPC$Message.post_author;
                            if ((tLRPC$Message.flags & 33554432) != 0) {
                                tLRPC$Message5.ttl_period = tLRPC$Message.ttl_period;
                                tLRPC$Message5.flags |= 33554432;
                            }
                            updateMediaPaths(messageObject2, tLRPC$Message, tLRPC$Message.id, null, true);
                            int mediaExistanceFlags = messageObject2.getMediaExistanceFlags();
                            tLRPC$Message2.id = tLRPC$Message.id;
                            int i9 = i6 + 1;
                            if (i3 != 0 && !z4) {
                                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda23(this, i8, tLRPC$Message2, arrayList5, messageObject, i));
                                tLRPC$Updates = tLRPC$Updates2;
                                sparseLongArray = sparseLongArray2;
                            } else {
                                tLRPC$Updates = tLRPC$Updates2;
                                sparseLongArray = sparseLongArray2;
                                getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda52(this, tLRPC$Message2, tLRPC$Peer, i8, i, arrayList5, j, tLRPC$Message, mediaExistanceFlags));
                            }
                            i5 = i7;
                            i6 = i9;
                        }
                        i2 = 1;
                    }
                    z3 = z7;
                    if (z) {
                    }
                    ImageLoader.saveMessageThumbs(tLRPC$Message);
                    if (!z4) {
                    }
                    if (!z2) {
                    }
                    j2 = sparseLongArray2.get(tLRPC$Message.id);
                    if (j2 != 0) {
                    }
                    tLRPC$Updates = tLRPC$Updates2;
                    sparseLongArray = sparseLongArray2;
                    i5 = i7;
                    i2 = 1;
                } else {
                    tLRPC$Updates = tLRPC$Updates2;
                    sparseLongArray = sparseLongArray2;
                    i2 = 1;
                }
                i5 += i2;
                i3 = i;
                arrayList3 = arrayList;
                arrayList4 = arrayList2;
                tLRPC$Updates2 = tLRPC$Updates;
                sparseLongArray2 = sparseLongArray;
                z5 = true;
            }
            TLRPC$Updates tLRPC$Updates3 = tLRPC$Updates2;
            if (!tLRPC$Updates3.updates.isEmpty()) {
                getMessagesController().processUpdates(tLRPC$Updates3, false);
            }
            getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, i6);
        } else {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda59(this, tLRPC$TL_error, tLRPC$TL_messages_forwardMessages));
        }
        for (int i10 = 0; i10 < arrayList.size(); i10++) {
            TLRPC$Message tLRPC$Message6 = (TLRPC$Message) arrayList.get(i10);
            getMessagesStorage().markMessageAsSendError(tLRPC$Message6, i != 0);
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda45(this, tLRPC$Message6, i));
        }
    }

    public /* synthetic */ void lambda$sendMessage$9(int i, TLRPC$Message tLRPC$Message, ArrayList arrayList, MessageObject messageObject, int i2) {
        ArrayList<Integer> arrayList2 = new ArrayList<>();
        arrayList2.add(Integer.valueOf(i));
        getMessagesController().deleteMessages(arrayList2, null, null, tLRPC$Message.dialog_id, false, true);
        getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda34(this, arrayList, messageObject, tLRPC$Message, i, i2));
    }

    public /* synthetic */ void lambda$sendMessage$8(ArrayList arrayList, MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, int i2) {
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, false);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda37(this, messageObject, tLRPC$Message, i, i2));
    }

    public /* synthetic */ void lambda$sendMessage$7(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, int i2) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        boolean z = true;
        arrayList.add(new MessageObject(messageObject.currentAccount, messageObject.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message.dialog_id, arrayList, false);
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        processSentMessage(i);
        if (i2 == 0) {
            z = false;
        }
        removeFromSendingMessages(i, z);
    }

    public /* synthetic */ void lambda$sendMessage$11(TLRPC$Message tLRPC$Message, TLRPC$Peer tLRPC$Peer, int i, int i2, ArrayList arrayList, long j, TLRPC$Message tLRPC$Message2, int i3) {
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message.random_id, MessageObject.getPeerId(tLRPC$Peer), Integer.valueOf(i), tLRPC$Message.id, 0, false, i2 != 0 ? 1 : 0);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, i2 != 0);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda51(this, tLRPC$Message, j, i, tLRPC$Message2, i3, i2));
    }

    public /* synthetic */ void lambda$sendMessage$10(TLRPC$Message tLRPC$Message, long j, int i, TLRPC$Message tLRPC$Message2, int i2, int i3) {
        boolean z = false;
        tLRPC$Message.send_state = 0;
        getMediaDataController().increasePeerRaiting(j);
        NotificationCenter notificationCenter = getNotificationCenter();
        int i4 = NotificationCenter.messageReceivedByServer;
        Object[] objArr = new Object[7];
        objArr[0] = Integer.valueOf(i);
        objArr[1] = Integer.valueOf(tLRPC$Message2.id);
        objArr[2] = tLRPC$Message2;
        objArr[3] = Long.valueOf(j);
        objArr[4] = 0L;
        objArr[5] = Integer.valueOf(i2);
        objArr[6] = Boolean.valueOf(i3 != 0);
        notificationCenter.postNotificationName(i4, objArr);
        processSentMessage(i);
        if (i3 != 0) {
            z = true;
        }
        removeFromSendingMessages(i, z);
    }

    public /* synthetic */ void lambda$sendMessage$12(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages) {
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLRPC$TL_messages_forwardMessages, new Object[0]);
    }

    public /* synthetic */ void lambda$sendMessage$13(TLRPC$Message tLRPC$Message, int i) {
        tLRPC$Message.send_state = 2;
        boolean z = true;
        getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
        processSentMessage(tLRPC$Message.id);
        int i2 = tLRPC$Message.id;
        if (i == 0) {
            z = false;
        }
        removeFromSendingMessages(i2, z);
    }

    private void writePreviousMessageData(TLRPC$Message tLRPC$Message, SerializedData serializedData) {
        TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
        if (tLRPC$MessageMedia == null) {
            new TLRPC$TL_messageMediaEmpty().serializeToStream(serializedData);
        } else {
            tLRPC$MessageMedia.serializeToStream(serializedData);
        }
        String str = tLRPC$Message.message;
        String str2 = "";
        if (str == null) {
            str = str2;
        }
        serializedData.writeString(str);
        String str3 = tLRPC$Message.attachPath;
        if (str3 != null) {
            str2 = str3;
        }
        serializedData.writeString(str2);
        int size = tLRPC$Message.entities.size();
        serializedData.writeInt32(size);
        for (int i = 0; i < size; i++) {
            tLRPC$Message.entities.get(i).serializeToStream(serializedData);
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:218:0x0486 A[Catch: Exception -> 0x057d, TryCatch #0 {Exception -> 0x057d, blocks: (B:9:0x0020, B:11:0x002b, B:13:0x003d, B:20:0x004e, B:23:0x0058, B:26:0x005d, B:28:0x0061, B:29:0x0069, B:31:0x006d, B:37:0x007d, B:40:0x0087, B:43:0x008d, B:45:0x0093, B:47:0x009a, B:48:0x00a7, B:50:0x00b9, B:51:0x00be, B:53:0x00e5, B:55:0x00f6, B:57:0x00fc, B:59:0x0102, B:60:0x0105, B:63:0x0129, B:70:0x0146, B:71:0x014f, B:73:0x0153, B:74:0x015f, B:76:0x0163, B:77:0x0167, B:82:0x0176, B:84:0x017e, B:85:0x0181, B:90:0x018a, B:92:0x018e, B:94:0x019e, B:96:0x01a2, B:97:0x01ab, B:99:0x01b1, B:100:0x01b8, B:102:0x01bc, B:103:0x01c5, B:105:0x01d8, B:107:0x01de, B:108:0x01e7, B:110:0x01ef, B:111:0x01f5, B:113:0x01fb, B:115:0x0221, B:117:0x0229, B:120:0x022e, B:121:0x0235, B:122:0x0238, B:125:0x0263, B:127:0x0269, B:141:0x028a, B:143:0x0291, B:145:0x0299, B:147:0x02aa, B:148:0x02c3, B:150:0x02d1, B:153:0x02dc, B:155:0x02f6, B:157:0x02fd, B:159:0x0311, B:161:0x0317, B:163:0x031d, B:164:0x0320, B:168:0x033a, B:170:0x0343, B:172:0x034b, B:174:0x035c, B:175:0x036d, B:176:0x0376, B:179:0x0388, B:183:0x0391, B:185:0x0398, B:187:0x03a0, B:190:0x03ad, B:192:0x03c9, B:194:0x03cf, B:196:0x03e9, B:198:0x03f6, B:199:0x03fa, B:202:0x0405, B:205:0x041d, B:207:0x0437, B:209:0x043e, B:211:0x0452, B:213:0x045f, B:214:0x0463, B:216:0x046f, B:218:0x0486, B:219:0x048e, B:221:0x0492, B:222:0x04a0, B:224:0x04a4, B:228:0x04b7, B:230:0x04bd, B:232:0x04c6, B:234:0x04da, B:236:0x04e0, B:237:0x04ea, B:239:0x04f0, B:242:0x04f5, B:246:0x050b, B:247:0x0510, B:251:0x0526, B:252:0x052b, B:255:0x053d, B:259:0x0551, B:260:0x0555, B:264:0x056a, B:265:0x056e), top: B:269:0x0020 }] */
    /* JADX WARN: Removed duplicated region for block: B:221:0x0492 A[Catch: Exception -> 0x057d, TryCatch #0 {Exception -> 0x057d, blocks: (B:9:0x0020, B:11:0x002b, B:13:0x003d, B:20:0x004e, B:23:0x0058, B:26:0x005d, B:28:0x0061, B:29:0x0069, B:31:0x006d, B:37:0x007d, B:40:0x0087, B:43:0x008d, B:45:0x0093, B:47:0x009a, B:48:0x00a7, B:50:0x00b9, B:51:0x00be, B:53:0x00e5, B:55:0x00f6, B:57:0x00fc, B:59:0x0102, B:60:0x0105, B:63:0x0129, B:70:0x0146, B:71:0x014f, B:73:0x0153, B:74:0x015f, B:76:0x0163, B:77:0x0167, B:82:0x0176, B:84:0x017e, B:85:0x0181, B:90:0x018a, B:92:0x018e, B:94:0x019e, B:96:0x01a2, B:97:0x01ab, B:99:0x01b1, B:100:0x01b8, B:102:0x01bc, B:103:0x01c5, B:105:0x01d8, B:107:0x01de, B:108:0x01e7, B:110:0x01ef, B:111:0x01f5, B:113:0x01fb, B:115:0x0221, B:117:0x0229, B:120:0x022e, B:121:0x0235, B:122:0x0238, B:125:0x0263, B:127:0x0269, B:141:0x028a, B:143:0x0291, B:145:0x0299, B:147:0x02aa, B:148:0x02c3, B:150:0x02d1, B:153:0x02dc, B:155:0x02f6, B:157:0x02fd, B:159:0x0311, B:161:0x0317, B:163:0x031d, B:164:0x0320, B:168:0x033a, B:170:0x0343, B:172:0x034b, B:174:0x035c, B:175:0x036d, B:176:0x0376, B:179:0x0388, B:183:0x0391, B:185:0x0398, B:187:0x03a0, B:190:0x03ad, B:192:0x03c9, B:194:0x03cf, B:196:0x03e9, B:198:0x03f6, B:199:0x03fa, B:202:0x0405, B:205:0x041d, B:207:0x0437, B:209:0x043e, B:211:0x0452, B:213:0x045f, B:214:0x0463, B:216:0x046f, B:218:0x0486, B:219:0x048e, B:221:0x0492, B:222:0x04a0, B:224:0x04a4, B:228:0x04b7, B:230:0x04bd, B:232:0x04c6, B:234:0x04da, B:236:0x04e0, B:237:0x04ea, B:239:0x04f0, B:242:0x04f5, B:246:0x050b, B:247:0x0510, B:251:0x0526, B:252:0x052b, B:255:0x053d, B:259:0x0551, B:260:0x0555, B:264:0x056a, B:265:0x056e), top: B:269:0x0020 }] */
    /* JADX WARN: Removed duplicated region for block: B:224:0x04a4 A[Catch: Exception -> 0x057d, TryCatch #0 {Exception -> 0x057d, blocks: (B:9:0x0020, B:11:0x002b, B:13:0x003d, B:20:0x004e, B:23:0x0058, B:26:0x005d, B:28:0x0061, B:29:0x0069, B:31:0x006d, B:37:0x007d, B:40:0x0087, B:43:0x008d, B:45:0x0093, B:47:0x009a, B:48:0x00a7, B:50:0x00b9, B:51:0x00be, B:53:0x00e5, B:55:0x00f6, B:57:0x00fc, B:59:0x0102, B:60:0x0105, B:63:0x0129, B:70:0x0146, B:71:0x014f, B:73:0x0153, B:74:0x015f, B:76:0x0163, B:77:0x0167, B:82:0x0176, B:84:0x017e, B:85:0x0181, B:90:0x018a, B:92:0x018e, B:94:0x019e, B:96:0x01a2, B:97:0x01ab, B:99:0x01b1, B:100:0x01b8, B:102:0x01bc, B:103:0x01c5, B:105:0x01d8, B:107:0x01de, B:108:0x01e7, B:110:0x01ef, B:111:0x01f5, B:113:0x01fb, B:115:0x0221, B:117:0x0229, B:120:0x022e, B:121:0x0235, B:122:0x0238, B:125:0x0263, B:127:0x0269, B:141:0x028a, B:143:0x0291, B:145:0x0299, B:147:0x02aa, B:148:0x02c3, B:150:0x02d1, B:153:0x02dc, B:155:0x02f6, B:157:0x02fd, B:159:0x0311, B:161:0x0317, B:163:0x031d, B:164:0x0320, B:168:0x033a, B:170:0x0343, B:172:0x034b, B:174:0x035c, B:175:0x036d, B:176:0x0376, B:179:0x0388, B:183:0x0391, B:185:0x0398, B:187:0x03a0, B:190:0x03ad, B:192:0x03c9, B:194:0x03cf, B:196:0x03e9, B:198:0x03f6, B:199:0x03fa, B:202:0x0405, B:205:0x041d, B:207:0x0437, B:209:0x043e, B:211:0x0452, B:213:0x045f, B:214:0x0463, B:216:0x046f, B:218:0x0486, B:219:0x048e, B:221:0x0492, B:222:0x04a0, B:224:0x04a4, B:228:0x04b7, B:230:0x04bd, B:232:0x04c6, B:234:0x04da, B:236:0x04e0, B:237:0x04ea, B:239:0x04f0, B:242:0x04f5, B:246:0x050b, B:247:0x0510, B:251:0x0526, B:252:0x052b, B:255:0x053d, B:259:0x0551, B:260:0x0555, B:264:0x056a, B:265:0x056e), top: B:269:0x0020 }] */
    /* JADX WARN: Removed duplicated region for block: B:239:0x04f0 A[Catch: Exception -> 0x057d, TryCatch #0 {Exception -> 0x057d, blocks: (B:9:0x0020, B:11:0x002b, B:13:0x003d, B:20:0x004e, B:23:0x0058, B:26:0x005d, B:28:0x0061, B:29:0x0069, B:31:0x006d, B:37:0x007d, B:40:0x0087, B:43:0x008d, B:45:0x0093, B:47:0x009a, B:48:0x00a7, B:50:0x00b9, B:51:0x00be, B:53:0x00e5, B:55:0x00f6, B:57:0x00fc, B:59:0x0102, B:60:0x0105, B:63:0x0129, B:70:0x0146, B:71:0x014f, B:73:0x0153, B:74:0x015f, B:76:0x0163, B:77:0x0167, B:82:0x0176, B:84:0x017e, B:85:0x0181, B:90:0x018a, B:92:0x018e, B:94:0x019e, B:96:0x01a2, B:97:0x01ab, B:99:0x01b1, B:100:0x01b8, B:102:0x01bc, B:103:0x01c5, B:105:0x01d8, B:107:0x01de, B:108:0x01e7, B:110:0x01ef, B:111:0x01f5, B:113:0x01fb, B:115:0x0221, B:117:0x0229, B:120:0x022e, B:121:0x0235, B:122:0x0238, B:125:0x0263, B:127:0x0269, B:141:0x028a, B:143:0x0291, B:145:0x0299, B:147:0x02aa, B:148:0x02c3, B:150:0x02d1, B:153:0x02dc, B:155:0x02f6, B:157:0x02fd, B:159:0x0311, B:161:0x0317, B:163:0x031d, B:164:0x0320, B:168:0x033a, B:170:0x0343, B:172:0x034b, B:174:0x035c, B:175:0x036d, B:176:0x0376, B:179:0x0388, B:183:0x0391, B:185:0x0398, B:187:0x03a0, B:190:0x03ad, B:192:0x03c9, B:194:0x03cf, B:196:0x03e9, B:198:0x03f6, B:199:0x03fa, B:202:0x0405, B:205:0x041d, B:207:0x0437, B:209:0x043e, B:211:0x0452, B:213:0x045f, B:214:0x0463, B:216:0x046f, B:218:0x0486, B:219:0x048e, B:221:0x0492, B:222:0x04a0, B:224:0x04a4, B:228:0x04b7, B:230:0x04bd, B:232:0x04c6, B:234:0x04da, B:236:0x04e0, B:237:0x04ea, B:239:0x04f0, B:242:0x04f5, B:246:0x050b, B:247:0x0510, B:251:0x0526, B:252:0x052b, B:255:0x053d, B:259:0x0551, B:260:0x0555, B:264:0x056a, B:265:0x056e), top: B:269:0x0020 }] */
    /* JADX WARN: Removed duplicated region for block: B:242:0x04f5 A[Catch: Exception -> 0x057d, TryCatch #0 {Exception -> 0x057d, blocks: (B:9:0x0020, B:11:0x002b, B:13:0x003d, B:20:0x004e, B:23:0x0058, B:26:0x005d, B:28:0x0061, B:29:0x0069, B:31:0x006d, B:37:0x007d, B:40:0x0087, B:43:0x008d, B:45:0x0093, B:47:0x009a, B:48:0x00a7, B:50:0x00b9, B:51:0x00be, B:53:0x00e5, B:55:0x00f6, B:57:0x00fc, B:59:0x0102, B:60:0x0105, B:63:0x0129, B:70:0x0146, B:71:0x014f, B:73:0x0153, B:74:0x015f, B:76:0x0163, B:77:0x0167, B:82:0x0176, B:84:0x017e, B:85:0x0181, B:90:0x018a, B:92:0x018e, B:94:0x019e, B:96:0x01a2, B:97:0x01ab, B:99:0x01b1, B:100:0x01b8, B:102:0x01bc, B:103:0x01c5, B:105:0x01d8, B:107:0x01de, B:108:0x01e7, B:110:0x01ef, B:111:0x01f5, B:113:0x01fb, B:115:0x0221, B:117:0x0229, B:120:0x022e, B:121:0x0235, B:122:0x0238, B:125:0x0263, B:127:0x0269, B:141:0x028a, B:143:0x0291, B:145:0x0299, B:147:0x02aa, B:148:0x02c3, B:150:0x02d1, B:153:0x02dc, B:155:0x02f6, B:157:0x02fd, B:159:0x0311, B:161:0x0317, B:163:0x031d, B:164:0x0320, B:168:0x033a, B:170:0x0343, B:172:0x034b, B:174:0x035c, B:175:0x036d, B:176:0x0376, B:179:0x0388, B:183:0x0391, B:185:0x0398, B:187:0x03a0, B:190:0x03ad, B:192:0x03c9, B:194:0x03cf, B:196:0x03e9, B:198:0x03f6, B:199:0x03fa, B:202:0x0405, B:205:0x041d, B:207:0x0437, B:209:0x043e, B:211:0x0452, B:213:0x045f, B:214:0x0463, B:216:0x046f, B:218:0x0486, B:219:0x048e, B:221:0x0492, B:222:0x04a0, B:224:0x04a4, B:228:0x04b7, B:230:0x04bd, B:232:0x04c6, B:234:0x04da, B:236:0x04e0, B:237:0x04ea, B:239:0x04f0, B:242:0x04f5, B:246:0x050b, B:247:0x0510, B:251:0x0526, B:252:0x052b, B:255:0x053d, B:259:0x0551, B:260:0x0555, B:264:0x056a, B:265:0x056e), top: B:269:0x0020 }] */
    /* JADX WARN: Removed duplicated region for block: B:243:0x0506  */
    /* JADX WARN: Removed duplicated region for block: B:70:0x0146 A[Catch: Exception -> 0x057d, TryCatch #0 {Exception -> 0x057d, blocks: (B:9:0x0020, B:11:0x002b, B:13:0x003d, B:20:0x004e, B:23:0x0058, B:26:0x005d, B:28:0x0061, B:29:0x0069, B:31:0x006d, B:37:0x007d, B:40:0x0087, B:43:0x008d, B:45:0x0093, B:47:0x009a, B:48:0x00a7, B:50:0x00b9, B:51:0x00be, B:53:0x00e5, B:55:0x00f6, B:57:0x00fc, B:59:0x0102, B:60:0x0105, B:63:0x0129, B:70:0x0146, B:71:0x014f, B:73:0x0153, B:74:0x015f, B:76:0x0163, B:77:0x0167, B:82:0x0176, B:84:0x017e, B:85:0x0181, B:90:0x018a, B:92:0x018e, B:94:0x019e, B:96:0x01a2, B:97:0x01ab, B:99:0x01b1, B:100:0x01b8, B:102:0x01bc, B:103:0x01c5, B:105:0x01d8, B:107:0x01de, B:108:0x01e7, B:110:0x01ef, B:111:0x01f5, B:113:0x01fb, B:115:0x0221, B:117:0x0229, B:120:0x022e, B:121:0x0235, B:122:0x0238, B:125:0x0263, B:127:0x0269, B:141:0x028a, B:143:0x0291, B:145:0x0299, B:147:0x02aa, B:148:0x02c3, B:150:0x02d1, B:153:0x02dc, B:155:0x02f6, B:157:0x02fd, B:159:0x0311, B:161:0x0317, B:163:0x031d, B:164:0x0320, B:168:0x033a, B:170:0x0343, B:172:0x034b, B:174:0x035c, B:175:0x036d, B:176:0x0376, B:179:0x0388, B:183:0x0391, B:185:0x0398, B:187:0x03a0, B:190:0x03ad, B:192:0x03c9, B:194:0x03cf, B:196:0x03e9, B:198:0x03f6, B:199:0x03fa, B:202:0x0405, B:205:0x041d, B:207:0x0437, B:209:0x043e, B:211:0x0452, B:213:0x045f, B:214:0x0463, B:216:0x046f, B:218:0x0486, B:219:0x048e, B:221:0x0492, B:222:0x04a0, B:224:0x04a4, B:228:0x04b7, B:230:0x04bd, B:232:0x04c6, B:234:0x04da, B:236:0x04e0, B:237:0x04ea, B:239:0x04f0, B:242:0x04f5, B:246:0x050b, B:247:0x0510, B:251:0x0526, B:252:0x052b, B:255:0x053d, B:259:0x0551, B:260:0x0555, B:264:0x056a, B:265:0x056e), top: B:269:0x0020 }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void editMessage(MessageObject messageObject, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str, HashMap<String, String> hashMap, boolean z, Object obj) {
        HashMap<String, String> hashMap2;
        Object obj2;
        String str2;
        VideoEditedInfo videoEditedInfo2;
        char c;
        VideoEditedInfo videoEditedInfo3;
        boolean z2;
        HashMap<String, String> hashMap3;
        DelayedMessage delayedMessage;
        TLRPC$InputMedia tLRPC$InputMedia;
        boolean z3;
        CharSequence charSequence;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument;
        boolean z4;
        VideoEditedInfo videoEditedInfo4;
        boolean z5;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument2;
        String str3;
        TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto;
        String str4;
        char c2;
        TLRPC$EncryptedChat encryptedChat;
        TLRPC$TL_photo tLRPC$TL_photo2 = tLRPC$TL_photo;
        TLRPC$TL_document tLRPC$TL_document2 = tLRPC$TL_document;
        if (messageObject == null) {
            return;
        }
        HashMap<String, String> hashMap4 = hashMap == null ? new HashMap<>() : hashMap;
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        messageObject.cancelEditing = false;
        try {
            long dialogId = messageObject.getDialogId();
            boolean z6 = !DialogObject.isEncryptedDialog(dialogId) || ((encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(dialogId)))) != null && AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 101);
            if (z) {
                TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
                if (!(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) && tLRPC$MessageMedia != null && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaEmpty)) {
                    if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto) {
                        tLRPC$TL_photo2 = (TLRPC$TL_photo) tLRPC$MessageMedia.photo;
                        videoEditedInfo2 = videoEditedInfo;
                        c = 2;
                    } else if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument) {
                        tLRPC$TL_document2 = (TLRPC$TL_document) tLRPC$MessageMedia.document;
                        if (!MessageObject.isVideoDocument(tLRPC$TL_document2) && videoEditedInfo == null) {
                            c = 7;
                            videoEditedInfo2 = messageObject.videoEditedInfo;
                        }
                        c = 3;
                        videoEditedInfo2 = messageObject.videoEditedInfo;
                    } else {
                        videoEditedInfo2 = videoEditedInfo;
                        c = 65535;
                    }
                    hashMap2 = tLRPC$Message.params;
                    Object obj3 = (obj == null || hashMap2 == null || !hashMap2.containsKey("parentObject")) ? obj : hashMap2.get("parentObject");
                    messageObject.editingMessage = tLRPC$Message.message;
                    messageObject.editingMessageEntities = tLRPC$Message.entities;
                    str2 = tLRPC$Message.attachPath;
                    obj2 = obj3;
                }
                videoEditedInfo2 = videoEditedInfo;
                c = 1;
                hashMap2 = tLRPC$Message.params;
                if (obj == null) {
                }
                messageObject.editingMessage = tLRPC$Message.message;
                messageObject.editingMessageEntities = tLRPC$Message.entities;
                str2 = tLRPC$Message.attachPath;
                obj2 = obj3;
            } else {
                TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$Message.media;
                messageObject.previousMedia = tLRPC$MessageMedia2;
                messageObject.previousMessage = tLRPC$Message.message;
                messageObject.previousMessageEntities = tLRPC$Message.entities;
                messageObject.previousAttachPath = tLRPC$Message.attachPath;
                if (tLRPC$MessageMedia2 == null) {
                    new TLRPC$TL_messageMediaEmpty();
                }
                SerializedData serializedData = new SerializedData(true);
                writePreviousMessageData(tLRPC$Message, serializedData);
                SerializedData serializedData2 = new SerializedData(serializedData.length());
                writePreviousMessageData(tLRPC$Message, serializedData2);
                hashMap4.put("prevMedia", Base64.encodeToString(serializedData2.toByteArray(), 0));
                serializedData2.cleanup();
                if (tLRPC$TL_photo2 != null) {
                    TLRPC$TL_messageMediaPhoto tLRPC$TL_messageMediaPhoto = new TLRPC$TL_messageMediaPhoto();
                    tLRPC$Message.media = tLRPC$TL_messageMediaPhoto;
                    tLRPC$TL_messageMediaPhoto.flags |= 3;
                    tLRPC$TL_messageMediaPhoto.photo = tLRPC$TL_photo2;
                    if (str != null && str.length() > 0 && str.startsWith("http")) {
                        tLRPC$Message.attachPath = str;
                    } else {
                        ArrayList<TLRPC$PhotoSize> arrayList = tLRPC$TL_photo2.sizes;
                        tLRPC$Message.attachPath = FileLoader.getInstance(this.currentAccount).getPathToAttach(arrayList.get(arrayList.size() - 1).location, true).toString();
                    }
                    c2 = 2;
                } else if (tLRPC$TL_document2 != null) {
                    TLRPC$TL_messageMediaDocument tLRPC$TL_messageMediaDocument = new TLRPC$TL_messageMediaDocument();
                    tLRPC$Message.media = tLRPC$TL_messageMediaDocument;
                    tLRPC$TL_messageMediaDocument.flags |= 3;
                    tLRPC$TL_messageMediaDocument.document = tLRPC$TL_document2;
                    if (!MessageObject.isVideoDocument(tLRPC$TL_document) && videoEditedInfo == null) {
                        c2 = 7;
                        if (videoEditedInfo != null) {
                            hashMap4.put("ve", videoEditedInfo.getString());
                        }
                        tLRPC$Message.attachPath = str;
                    }
                    c2 = 3;
                    if (videoEditedInfo != null) {
                    }
                    tLRPC$Message.attachPath = str;
                } else {
                    c2 = 1;
                }
                tLRPC$Message.params = hashMap4;
                tLRPC$Message.send_state = 3;
                obj2 = obj;
                str2 = str;
                c = c2;
                hashMap2 = hashMap4;
                videoEditedInfo2 = videoEditedInfo;
            }
            if (tLRPC$Message.attachPath == null) {
                tLRPC$Message.attachPath = "";
            }
            tLRPC$Message.local_id = 0;
            int i = messageObject.type;
            TLRPC$TL_document tLRPC$TL_document3 = tLRPC$TL_document2;
            if ((i == 3 || videoEditedInfo2 != null || i == 2) && !TextUtils.isEmpty(tLRPC$Message.attachPath)) {
                messageObject.attachPathExists = true;
            }
            VideoEditedInfo videoEditedInfo5 = messageObject.videoEditedInfo;
            if (videoEditedInfo5 != null && videoEditedInfo2 == null) {
                videoEditedInfo2 = videoEditedInfo5;
            }
            if (!z) {
                CharSequence charSequence2 = messageObject.editingMessage;
                if (charSequence2 != null) {
                    String str5 = tLRPC$Message.message;
                    String charSequence3 = charSequence2.toString();
                    tLRPC$Message.message = charSequence3;
                    videoEditedInfo3 = videoEditedInfo2;
                    messageObject.caption = null;
                    if (c == 1) {
                        ArrayList<TLRPC$MessageEntity> arrayList2 = messageObject.editingMessageEntities;
                        if (arrayList2 != null) {
                            tLRPC$Message.entities = arrayList2;
                            tLRPC$Message.flags |= 128;
                        } else if (!TextUtils.equals(str5, charSequence3)) {
                            tLRPC$Message.flags &= -129;
                        }
                    } else {
                        ArrayList<TLRPC$MessageEntity> arrayList3 = messageObject.editingMessageEntities;
                        if (arrayList3 != null) {
                            tLRPC$Message.entities = arrayList3;
                            tLRPC$Message.flags |= 128;
                        } else {
                            ArrayList<TLRPC$MessageEntity> entities = getMediaDataController().getEntities(new CharSequence[]{messageObject.editingMessage}, z6);
                            if (entities != null && !entities.isEmpty()) {
                                tLRPC$Message.entities = entities;
                                tLRPC$Message.flags |= 128;
                            } else if (!TextUtils.equals(str5, tLRPC$Message.message)) {
                                tLRPC$Message.flags &= -129;
                            }
                        }
                        messageObject.generateCaption();
                    }
                } else {
                    videoEditedInfo3 = videoEditedInfo2;
                }
                ArrayList<TLRPC$Message> arrayList4 = new ArrayList<>();
                arrayList4.add(tLRPC$Message);
                getMessagesStorage().putMessages(arrayList4, false, true, false, 0, messageObject.scheduled);
                messageObject.type = -1;
                messageObject.setType();
                if (c == 1) {
                    TLRPC$MessageMedia tLRPC$MessageMedia3 = messageObject.messageOwner.media;
                    if (!(tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaPhoto) && !(tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaDocument)) {
                        messageObject.resetLayout();
                        messageObject.checkLayout();
                    }
                    messageObject.generateCaption();
                }
                messageObject.createMessageSendInfo();
                ArrayList arrayList5 = new ArrayList();
                arrayList5.add(messageObject);
                z2 = z6;
                getNotificationCenter().postNotificationName(NotificationCenter.replaceMessagesObjects, Long.valueOf(dialogId), arrayList5);
            } else {
                videoEditedInfo3 = videoEditedInfo2;
                z2 = z6;
            }
            String str6 = (hashMap2 == null || !hashMap2.containsKey("originalPath")) ? null : hashMap2.get("originalPath");
            if ((c < 1 || c > 3) && (c < 5 || c > '\b')) {
                return;
            }
            if (c != 1) {
                if (c == 2) {
                    TLRPC$InputMedia tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                    if (hashMap2 == null || (str4 = hashMap2.get("masks")) == null) {
                        hashMap3 = hashMap2;
                    } else {
                        SerializedData serializedData3 = new SerializedData(Utilities.hexToBytes(str4));
                        boolean z7 = false;
                        int readInt32 = serializedData3.readInt32(false);
                        int i2 = 0;
                        while (i2 < readInt32) {
                            tLRPC$TL_inputMediaUploadedPhoto.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData3, serializedData3.readInt32(z7), z7));
                            i2++;
                            readInt32 = readInt32;
                            hashMap2 = hashMap2;
                            z7 = false;
                        }
                        hashMap3 = hashMap2;
                        tLRPC$TL_inputMediaUploadedPhoto.flags |= 1;
                        serializedData3.cleanup();
                    }
                    if (tLRPC$TL_photo2.access_hash == 0) {
                        tLRPC$TL_inputMediaPhoto = tLRPC$TL_inputMediaUploadedPhoto;
                        z3 = true;
                    } else {
                        TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto2 = new TLRPC$TL_inputMediaPhoto();
                        TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                        tLRPC$TL_inputMediaPhoto2.id = tLRPC$TL_inputPhoto;
                        tLRPC$TL_inputPhoto.id = tLRPC$TL_photo2.id;
                        tLRPC$TL_inputPhoto.access_hash = tLRPC$TL_photo2.access_hash;
                        byte[] bArr = tLRPC$TL_photo2.file_reference;
                        tLRPC$TL_inputPhoto.file_reference = bArr;
                        if (bArr == null) {
                            tLRPC$TL_inputPhoto.file_reference = new byte[0];
                        }
                        tLRPC$TL_inputMediaPhoto = tLRPC$TL_inputMediaPhoto2;
                        z3 = false;
                    }
                    DelayedMessage delayedMessage2 = new DelayedMessage(dialogId);
                    delayedMessage2.type = 0;
                    delayedMessage2.obj = messageObject;
                    delayedMessage2.originalPath = str6;
                    delayedMessage2.parentObject = obj2;
                    delayedMessage2.inputUploadMedia = tLRPC$TL_inputMediaUploadedPhoto;
                    delayedMessage2.performMediaUpload = z3;
                    if (str2 != null && str2.length() > 0 && str2.startsWith("http")) {
                        delayedMessage2.httpLocation = str2;
                    } else {
                        ArrayList<TLRPC$PhotoSize> arrayList6 = tLRPC$TL_photo2.sizes;
                        delayedMessage2.photoSize = arrayList6.get(arrayList6.size() - 1);
                        delayedMessage2.locationParent = tLRPC$TL_photo2;
                    }
                    delayedMessage = delayedMessage2;
                    tLRPC$InputMedia = tLRPC$TL_inputMediaPhoto;
                } else {
                    hashMap3 = hashMap2;
                    if (c == 3) {
                        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                        if (hashMap3 != null && (str3 = hashMap3.get("masks")) != null) {
                            SerializedData serializedData4 = new SerializedData(Utilities.hexToBytes(str3));
                            boolean z8 = false;
                            int readInt322 = serializedData4.readInt32(false);
                            int i3 = 0;
                            while (i3 < readInt322) {
                                tLRPC$TL_inputMediaUploadedDocument.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData4, serializedData4.readInt32(z8), z8));
                                i3++;
                                z8 = false;
                            }
                            tLRPC$TL_inputMediaUploadedDocument.flags |= 1;
                            serializedData4.cleanup();
                        }
                        tLRPC$TL_inputMediaUploadedDocument.mime_type = tLRPC$TL_document3.mime_type;
                        tLRPC$TL_inputMediaUploadedDocument.attributes = tLRPC$TL_document3.attributes;
                        if (!messageObject.isGif()) {
                            if (videoEditedInfo3 != null) {
                                videoEditedInfo4 = videoEditedInfo3;
                                if (!videoEditedInfo4.muted) {
                                }
                            } else {
                                videoEditedInfo4 = videoEditedInfo3;
                            }
                            tLRPC$TL_inputMediaUploadedDocument.nosound_video = true;
                            if (BuildVars.DEBUG_VERSION) {
                                FileLog.d("nosound_video = true");
                            }
                        } else {
                            videoEditedInfo4 = videoEditedInfo3;
                        }
                        if (tLRPC$TL_document3.access_hash == 0) {
                            tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaUploadedDocument;
                            hashMap3 = hashMap3;
                            z5 = true;
                        } else {
                            TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument3 = new TLRPC$TL_inputMediaDocument();
                            TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                            tLRPC$TL_inputMediaDocument3.id = tLRPC$TL_inputDocument;
                            hashMap3 = hashMap3;
                            tLRPC$TL_inputDocument.id = tLRPC$TL_document3.id;
                            tLRPC$TL_inputDocument.access_hash = tLRPC$TL_document3.access_hash;
                            byte[] bArr2 = tLRPC$TL_document3.file_reference;
                            tLRPC$TL_inputDocument.file_reference = bArr2;
                            if (bArr2 == null) {
                                tLRPC$TL_inputDocument.file_reference = new byte[0];
                            }
                            z5 = false;
                            tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaDocument3;
                        }
                        delayedMessage = new DelayedMessage(dialogId);
                        delayedMessage.type = 1;
                        delayedMessage.obj = messageObject;
                        delayedMessage.originalPath = str6;
                        delayedMessage.parentObject = obj2;
                        delayedMessage.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument;
                        delayedMessage.performMediaUpload = z5;
                        if (!tLRPC$TL_document3.thumbs.isEmpty()) {
                            TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$TL_document3.thumbs.get(0);
                            if (!(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                                delayedMessage.photoSize = tLRPC$PhotoSize;
                                delayedMessage.locationParent = tLRPC$TL_document3;
                            }
                        }
                        delayedMessage.videoEditedInfo = videoEditedInfo4;
                        tLRPC$InputMedia = tLRPC$TL_inputMediaDocument2;
                        z3 = z5;
                    } else if (c == 7) {
                        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument2 = new TLRPC$TL_inputMediaUploadedDocument();
                        tLRPC$TL_inputMediaUploadedDocument2.mime_type = tLRPC$TL_document3.mime_type;
                        tLRPC$TL_inputMediaUploadedDocument2.attributes = tLRPC$TL_document3.attributes;
                        if (tLRPC$TL_document3.access_hash == 0) {
                            tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaUploadedDocument2;
                            z4 = true;
                        } else {
                            TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument4 = new TLRPC$TL_inputMediaDocument();
                            TLRPC$TL_inputDocument tLRPC$TL_inputDocument2 = new TLRPC$TL_inputDocument();
                            tLRPC$TL_inputMediaDocument4.id = tLRPC$TL_inputDocument2;
                            tLRPC$TL_inputDocument2.id = tLRPC$TL_document3.id;
                            tLRPC$TL_inputDocument2.access_hash = tLRPC$TL_document3.access_hash;
                            byte[] bArr3 = tLRPC$TL_document3.file_reference;
                            tLRPC$TL_inputDocument2.file_reference = bArr3;
                            if (bArr3 == null) {
                                tLRPC$TL_inputDocument2.file_reference = new byte[0];
                            }
                            tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument4;
                            z4 = false;
                        }
                        DelayedMessage delayedMessage3 = new DelayedMessage(dialogId);
                        delayedMessage3.originalPath = str6;
                        delayedMessage3.type = 2;
                        delayedMessage3.obj = messageObject;
                        if (!tLRPC$TL_document3.thumbs.isEmpty()) {
                            TLRPC$PhotoSize tLRPC$PhotoSize2 = tLRPC$TL_document3.thumbs.get(0);
                            if (!(tLRPC$PhotoSize2 instanceof TLRPC$TL_photoStrippedSize)) {
                                delayedMessage3.photoSize = tLRPC$PhotoSize2;
                                delayedMessage3.locationParent = tLRPC$TL_document3;
                            }
                        }
                        delayedMessage3.parentObject = obj2;
                        delayedMessage3.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument2;
                        delayedMessage3.performMediaUpload = z4;
                        z3 = z4;
                        delayedMessage = delayedMessage3;
                        tLRPC$InputMedia = tLRPC$TL_inputMediaDocument;
                    }
                }
                TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = new TLRPC$TL_messages_editMessage();
                tLRPC$TL_messages_editMessage.id = messageObject.getId();
                tLRPC$TL_messages_editMessage.peer = getMessagesController().getInputPeer(dialogId);
                if (tLRPC$InputMedia != null) {
                    tLRPC$TL_messages_editMessage.flags |= 16384;
                    tLRPC$TL_messages_editMessage.media = tLRPC$InputMedia;
                }
                if (messageObject.scheduled) {
                    tLRPC$TL_messages_editMessage.schedule_date = messageObject.messageOwner.date;
                    tLRPC$TL_messages_editMessage.flags |= 32768;
                }
                charSequence = messageObject.editingMessage;
                if (charSequence != null) {
                    tLRPC$TL_messages_editMessage.message = charSequence.toString();
                    int i4 = tLRPC$TL_messages_editMessage.flags | 2048;
                    tLRPC$TL_messages_editMessage.flags = i4;
                    tLRPC$TL_messages_editMessage.no_webpage = !messageObject.editingMessageSearchWebPage;
                    ArrayList<TLRPC$MessageEntity> arrayList7 = messageObject.editingMessageEntities;
                    if (arrayList7 != null) {
                        tLRPC$TL_messages_editMessage.entities = arrayList7;
                        tLRPC$TL_messages_editMessage.flags = i4 | 8;
                    } else {
                        ArrayList<TLRPC$MessageEntity> entities2 = getMediaDataController().getEntities(new CharSequence[]{messageObject.editingMessage}, z2);
                        if (entities2 != null && !entities2.isEmpty()) {
                            tLRPC$TL_messages_editMessage.entities = entities2;
                            tLRPC$TL_messages_editMessage.flags |= 8;
                        }
                    }
                    messageObject.editingMessage = null;
                    messageObject.editingMessageEntities = null;
                }
                if (delayedMessage != null) {
                    delayedMessage.sendRequest = tLRPC$TL_messages_editMessage;
                }
                if (c != 1) {
                    performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, null, delayedMessage, obj2, hashMap3, messageObject.scheduled);
                    return;
                } else if (c == 2) {
                    if (z3) {
                        performSendDelayedMessage(delayedMessage);
                        return;
                    } else {
                        performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str6, null, true, delayedMessage, obj2, hashMap3, messageObject.scheduled);
                        return;
                    }
                } else if (c == 3) {
                    if (z3) {
                        performSendDelayedMessage(delayedMessage);
                        return;
                    } else {
                        performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str6, delayedMessage, obj2, hashMap3, messageObject.scheduled);
                        return;
                    }
                } else if (c == 6) {
                    performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str6, delayedMessage, obj2, hashMap3, messageObject.scheduled);
                    return;
                } else if (c == 7) {
                    if (z3) {
                        performSendDelayedMessage(delayedMessage);
                        return;
                    } else {
                        performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str6, delayedMessage, obj2, hashMap3, messageObject.scheduled);
                        return;
                    }
                } else if (c != '\b') {
                    return;
                } else {
                    if (z3) {
                        performSendDelayedMessage(delayedMessage);
                        return;
                    } else {
                        performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str6, delayedMessage, obj2, hashMap3, messageObject.scheduled);
                        return;
                    }
                }
            }
            hashMap3 = hashMap2;
            z3 = false;
            tLRPC$InputMedia = null;
            delayedMessage = null;
            TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage2 = new TLRPC$TL_messages_editMessage();
            tLRPC$TL_messages_editMessage2.id = messageObject.getId();
            tLRPC$TL_messages_editMessage2.peer = getMessagesController().getInputPeer(dialogId);
            if (tLRPC$InputMedia != null) {
            }
            if (messageObject.scheduled) {
            }
            charSequence = messageObject.editingMessage;
            if (charSequence != null) {
            }
            if (delayedMessage != null) {
            }
            if (c != 1) {
            }
        } catch (Exception e) {
            FileLog.e(e);
            revertEditingMessageObject(messageObject);
        }
    }

    public int editMessage(MessageObject messageObject, String str, boolean z, BaseFragment baseFragment, ArrayList<TLRPC$MessageEntity> arrayList, int i) {
        if (baseFragment == null || baseFragment.getParentActivity() == null) {
            return 0;
        }
        TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = new TLRPC$TL_messages_editMessage();
        tLRPC$TL_messages_editMessage.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (str != null) {
            tLRPC$TL_messages_editMessage.message = str;
            tLRPC$TL_messages_editMessage.flags |= 2048;
            tLRPC$TL_messages_editMessage.no_webpage = !z;
        }
        tLRPC$TL_messages_editMessage.id = messageObject.getId();
        if (arrayList != null) {
            tLRPC$TL_messages_editMessage.entities = arrayList;
            tLRPC$TL_messages_editMessage.flags |= 8;
        }
        if (i != 0) {
            tLRPC$TL_messages_editMessage.schedule_date = i;
            tLRPC$TL_messages_editMessage.flags |= 32768;
        }
        return getConnectionsManager().sendRequest(tLRPC$TL_messages_editMessage, new SendMessagesHelper$$ExternalSyntheticLambda88(this, baseFragment, tLRPC$TL_messages_editMessage));
    }

    public /* synthetic */ void lambda$editMessage$16(BaseFragment baseFragment, TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
        } else {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda60(this, tLRPC$TL_error, baseFragment, tLRPC$TL_messages_editMessage));
        }
    }

    public /* synthetic */ void lambda$editMessage$15(TLRPC$TL_error tLRPC$TL_error, BaseFragment baseFragment, TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage) {
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, baseFragment, tLRPC$TL_messages_editMessage, new Object[0]);
    }

    public void sendLocation(Location location) {
        TLRPC$TL_messageMediaGeo tLRPC$TL_messageMediaGeo = new TLRPC$TL_messageMediaGeo();
        TLRPC$TL_geoPoint tLRPC$TL_geoPoint = new TLRPC$TL_geoPoint();
        tLRPC$TL_messageMediaGeo.geo = tLRPC$TL_geoPoint;
        tLRPC$TL_geoPoint.lat = AndroidUtilities.fixLocationCoord(location.getLatitude());
        tLRPC$TL_messageMediaGeo.geo._long = AndroidUtilities.fixLocationCoord(location.getLongitude());
        for (Map.Entry<String, MessageObject> entry : this.waitingForLocation.entrySet()) {
            MessageObject value = entry.getValue();
            sendMessage((TLRPC$MessageMedia) tLRPC$TL_messageMediaGeo, value.getDialogId(), value, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
        }
    }

    public void sendCurrentLocation(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(messageObject.getDialogId());
        sb.append("_");
        sb.append(messageObject.getId());
        sb.append("_");
        sb.append(Utilities.bytesToHex(tLRPC$KeyboardButton.data));
        sb.append("_");
        sb.append(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame ? "1" : "0");
        this.waitingForLocation.put(sb.toString(), messageObject);
        this.locationProvider.start();
    }

    public boolean isSendingCurrentLocation(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return false;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(messageObject.getDialogId());
        sb.append("_");
        sb.append(messageObject.getId());
        sb.append("_");
        sb.append(Utilities.bytesToHex(tLRPC$KeyboardButton.data));
        sb.append("_");
        sb.append(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame ? "1" : "0");
        return this.waitingForLocation.containsKey(sb.toString());
    }

    public void sendNotificationCallback(long j, int i, byte[] bArr) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda24(this, j, i, bArr));
    }

    public /* synthetic */ void lambda$sendNotificationCallback$19(long j, int i, byte[] bArr) {
        TLRPC$Chat chatSync;
        TLRPC$User userSync;
        String str = j + "_" + i + "_" + Utilities.bytesToHex(bArr) + "_0";
        this.waitingForCallback.put(str, Boolean.TRUE);
        if (DialogObject.isUserDialog(j)) {
            if (getMessagesController().getUser(Long.valueOf(j)) == null && (userSync = getMessagesStorage().getUserSync(j)) != null) {
                getMessagesController().putUser(userSync, true);
            }
        } else {
            long j2 = -j;
            if (getMessagesController().getChat(Long.valueOf(j2)) == null && (chatSync = getMessagesStorage().getChatSync(j2)) != null) {
                getMessagesController().putChat(chatSync, true);
            }
        }
        TLRPC$TL_messages_getBotCallbackAnswer tLRPC$TL_messages_getBotCallbackAnswer = new TLRPC$TL_messages_getBotCallbackAnswer();
        tLRPC$TL_messages_getBotCallbackAnswer.peer = getMessagesController().getInputPeer(j);
        tLRPC$TL_messages_getBotCallbackAnswer.msg_id = i;
        tLRPC$TL_messages_getBotCallbackAnswer.game = false;
        if (bArr != null) {
            tLRPC$TL_messages_getBotCallbackAnswer.flags |= 1;
            tLRPC$TL_messages_getBotCallbackAnswer.data = bArr;
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_getBotCallbackAnswer, new SendMessagesHelper$$ExternalSyntheticLambda81(this, str), 2);
        getMessagesController().markDialogAsRead(j, i, i, 0, false, 0, 0, true, 0);
    }

    public /* synthetic */ void lambda$sendNotificationCallback$17(String str) {
        this.waitingForCallback.remove(str);
    }

    public /* synthetic */ void lambda$sendNotificationCallback$18(String str, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda27(this, str));
    }

    public byte[] isSendingVote(MessageObject messageObject) {
        if (messageObject == null) {
            return null;
        }
        return this.waitingForVote.get("poll_" + messageObject.getPollId());
    }

    public int sendVote(MessageObject messageObject, ArrayList<TLRPC$TL_pollAnswer> arrayList, Runnable runnable) {
        byte[] bArr;
        if (messageObject == null) {
            return 0;
        }
        String str = "poll_" + messageObject.getPollId();
        if (this.waitingForCallback.containsKey(str)) {
            return 0;
        }
        TLRPC$TL_messages_sendVote tLRPC$TL_messages_sendVote = new TLRPC$TL_messages_sendVote();
        tLRPC$TL_messages_sendVote.msg_id = messageObject.getId();
        tLRPC$TL_messages_sendVote.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (arrayList != null) {
            bArr = new byte[arrayList.size()];
            for (int i = 0; i < arrayList.size(); i++) {
                TLRPC$TL_pollAnswer tLRPC$TL_pollAnswer = arrayList.get(i);
                tLRPC$TL_messages_sendVote.options.add(tLRPC$TL_pollAnswer.option);
                bArr[i] = tLRPC$TL_pollAnswer.option[0];
            }
        } else {
            bArr = new byte[0];
        }
        this.waitingForVote.put(str, bArr);
        return getConnectionsManager().sendRequest(tLRPC$TL_messages_sendVote, new SendMessagesHelper$$ExternalSyntheticLambda84(this, messageObject, str, runnable));
    }

    public /* synthetic */ void lambda$sendVote$21(MessageObject messageObject, String str, Runnable runnable, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            this.voteSendTime.put(messageObject.getPollId(), 0L);
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
            this.voteSendTime.put(messageObject.getPollId(), Long.valueOf(SystemClock.elapsedRealtime()));
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda29(this, str, runnable));
    }

    public /* synthetic */ void lambda$sendVote$20(String str, Runnable runnable) {
        this.waitingForVote.remove(str);
        if (runnable != null) {
            runnable.run();
        }
    }

    public long getVoteSendTime(long j) {
        return this.voteSendTime.get(j, 0L).longValue();
    }

    public void sendReaction(MessageObject messageObject, CharSequence charSequence, boolean z, ChatActivity chatActivity, Runnable runnable) {
        if (messageObject == null || chatActivity == null) {
            return;
        }
        TLRPC$TL_messages_sendReaction tLRPC$TL_messages_sendReaction = new TLRPC$TL_messages_sendReaction();
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        if (tLRPC$Message.isThreadMessage && tLRPC$Message.fwd_from != null) {
            tLRPC$TL_messages_sendReaction.peer = getMessagesController().getInputPeer(messageObject.getFromChatId());
            tLRPC$TL_messages_sendReaction.msg_id = messageObject.messageOwner.fwd_from.saved_from_msg_id;
        } else {
            tLRPC$TL_messages_sendReaction.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
            tLRPC$TL_messages_sendReaction.msg_id = messageObject.getId();
        }
        if (charSequence != null) {
            tLRPC$TL_messages_sendReaction.reaction = charSequence.toString();
            tLRPC$TL_messages_sendReaction.flags |= 1;
        }
        if (z) {
            tLRPC$TL_messages_sendReaction.flags |= 2;
            tLRPC$TL_messages_sendReaction.big = true;
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendReaction, new SendMessagesHelper$$ExternalSyntheticLambda80(this, runnable));
    }

    public /* synthetic */ void lambda$sendReaction$22(Runnable runnable, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLObject != null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
            if (runnable == null) {
                return;
            }
            AndroidUtilities.runOnUIThread(runnable);
        }
    }

    public void requestUrlAuth(String str, ChatActivity chatActivity, boolean z) {
        TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth = new TLRPC$TL_messages_requestUrlAuth();
        tLRPC$TL_messages_requestUrlAuth.url = str;
        tLRPC$TL_messages_requestUrlAuth.flags |= 4;
        getConnectionsManager().sendRequest(tLRPC$TL_messages_requestUrlAuth, new SendMessagesHelper$$ExternalSyntheticLambda90(chatActivity, tLRPC$TL_messages_requestUrlAuth, str, z), 2);
    }

    public static /* synthetic */ void lambda$requestUrlAuth$23(ChatActivity chatActivity, TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth, String str, boolean z, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLObject != null) {
            if (tLObject instanceof TLRPC$TL_urlAuthResultRequest) {
                chatActivity.showRequestUrlAlert((TLRPC$TL_urlAuthResultRequest) tLObject, tLRPC$TL_messages_requestUrlAuth, str, z);
                return;
            } else if (tLObject instanceof TLRPC$TL_urlAuthResultAccepted) {
                AlertsCreator.showOpenUrlAlert(chatActivity, ((TLRPC$TL_urlAuthResultAccepted) tLObject).url, false, false);
                return;
            } else if (!(tLObject instanceof TLRPC$TL_urlAuthResultDefault)) {
                return;
            } else {
                AlertsCreator.showOpenUrlAlert(chatActivity, str, false, z);
                return;
            }
        }
        AlertsCreator.showOpenUrlAlert(chatActivity, str, false, z);
    }

    public void sendCallback(boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity) {
        lambda$sendCallback$24(z, messageObject, tLRPC$KeyboardButton, null, null, chatActivity);
    }

    /* JADX WARN: Removed duplicated region for block: B:19:0x007f  */
    /* JADX WARN: Removed duplicated region for block: B:20:0x0088  */
    /* renamed from: sendCallback */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void lambda$sendCallback$24(boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, TwoStepVerificationActivity twoStepVerificationActivity, ChatActivity chatActivity) {
        boolean z2;
        int i;
        if (messageObject == null || tLRPC$KeyboardButton == null || chatActivity == null) {
            return;
        }
        boolean z3 = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth;
        if (z3) {
            i = 3;
        } else if (!(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame)) {
            if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                z2 = z;
                i = 2;
            } else {
                z2 = z;
                i = 0;
            }
            String str = messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i;
            this.waitingForCallback.put(str, Boolean.TRUE);
            TLObject[] tLObjectArr = new TLObject[1];
            SendMessagesHelper$$ExternalSyntheticLambda82 sendMessagesHelper$$ExternalSyntheticLambda82 = new SendMessagesHelper$$ExternalSyntheticLambda82(this, str, z2, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr, tLRPC$InputCheckPasswordSRP, z);
            if (!z2) {
                getMessagesStorage().getBotCache(str, sendMessagesHelper$$ExternalSyntheticLambda82);
                return;
            } else if (z3) {
                TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth = new TLRPC$TL_messages_requestUrlAuth();
                tLRPC$TL_messages_requestUrlAuth.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                tLRPC$TL_messages_requestUrlAuth.msg_id = messageObject.getId();
                tLRPC$TL_messages_requestUrlAuth.button_id = tLRPC$KeyboardButton.button_id;
                tLRPC$TL_messages_requestUrlAuth.flags |= 2;
                tLObjectArr[0] = tLRPC$TL_messages_requestUrlAuth;
                getConnectionsManager().sendRequest(tLRPC$TL_messages_requestUrlAuth, sendMessagesHelper$$ExternalSyntheticLambda82, 2);
                return;
            } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                if ((messageObject.messageOwner.media.flags & 4) == 0) {
                    TLRPC$TL_payments_getPaymentForm tLRPC$TL_payments_getPaymentForm = new TLRPC$TL_payments_getPaymentForm();
                    TLRPC$TL_inputInvoiceMessage tLRPC$TL_inputInvoiceMessage = new TLRPC$TL_inputInvoiceMessage();
                    tLRPC$TL_inputInvoiceMessage.msg_id = messageObject.getId();
                    tLRPC$TL_inputInvoiceMessage.peer = getMessagesController().getInputPeer(messageObject.messageOwner.peer_id);
                    tLRPC$TL_payments_getPaymentForm.invoice = tLRPC$TL_inputInvoiceMessage;
                    try {
                        JSONObject jSONObject = new JSONObject();
                        jSONObject.put("bg_color", Theme.getColor("windowBackgroundWhite"));
                        jSONObject.put("text_color", Theme.getColor("windowBackgroundWhiteBlackText"));
                        jSONObject.put("hint_color", Theme.getColor("windowBackgroundWhiteHintText"));
                        jSONObject.put("link_color", Theme.getColor("windowBackgroundWhiteLinkText"));
                        jSONObject.put("button_color", Theme.getColor("featuredStickers_addButton"));
                        jSONObject.put("button_text_color", Theme.getColor("featuredStickers_buttonText"));
                        TLRPC$TL_dataJSON tLRPC$TL_dataJSON = new TLRPC$TL_dataJSON();
                        tLRPC$TL_payments_getPaymentForm.theme_params = tLRPC$TL_dataJSON;
                        tLRPC$TL_dataJSON.data = jSONObject.toString();
                        tLRPC$TL_payments_getPaymentForm.flags |= 1;
                    } catch (Exception e) {
                        FileLog.e(e);
                    }
                    getConnectionsManager().sendRequest(tLRPC$TL_payments_getPaymentForm, sendMessagesHelper$$ExternalSyntheticLambda82, 2);
                    return;
                }
                TLRPC$TL_payments_getPaymentReceipt tLRPC$TL_payments_getPaymentReceipt = new TLRPC$TL_payments_getPaymentReceipt();
                tLRPC$TL_payments_getPaymentReceipt.msg_id = messageObject.messageOwner.media.receipt_msg_id;
                tLRPC$TL_payments_getPaymentReceipt.peer = getMessagesController().getInputPeer(messageObject.messageOwner.peer_id);
                getConnectionsManager().sendRequest(tLRPC$TL_payments_getPaymentReceipt, sendMessagesHelper$$ExternalSyntheticLambda82, 2);
                return;
            } else {
                TLRPC$TL_messages_getBotCallbackAnswer tLRPC$TL_messages_getBotCallbackAnswer = new TLRPC$TL_messages_getBotCallbackAnswer();
                tLRPC$TL_messages_getBotCallbackAnswer.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                tLRPC$TL_messages_getBotCallbackAnswer.msg_id = messageObject.getId();
                tLRPC$TL_messages_getBotCallbackAnswer.game = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame;
                if (tLRPC$KeyboardButton.requires_password) {
                    TLRPC$InputCheckPasswordSRP tLRPC$TL_inputCheckPasswordEmpty = tLRPC$InputCheckPasswordSRP != null ? tLRPC$InputCheckPasswordSRP : new TLRPC$TL_inputCheckPasswordEmpty();
                    tLRPC$TL_messages_getBotCallbackAnswer.password = tLRPC$TL_inputCheckPasswordEmpty;
                    tLRPC$TL_messages_getBotCallbackAnswer.password = tLRPC$TL_inputCheckPasswordEmpty;
                    tLRPC$TL_messages_getBotCallbackAnswer.flags |= 4;
                }
                byte[] bArr = tLRPC$KeyboardButton.data;
                if (bArr != null) {
                    tLRPC$TL_messages_getBotCallbackAnswer.flags |= 1;
                    tLRPC$TL_messages_getBotCallbackAnswer.data = bArr;
                }
                getConnectionsManager().sendRequest(tLRPC$TL_messages_getBotCallbackAnswer, sendMessagesHelper$$ExternalSyntheticLambda82, 2);
                return;
            }
        } else {
            i = 1;
        }
        z2 = false;
        String str2 = messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i;
        this.waitingForCallback.put(str2, Boolean.TRUE);
        TLObject[] tLObjectArr2 = new TLObject[1];
        SendMessagesHelper$$ExternalSyntheticLambda82 sendMessagesHelper$$ExternalSyntheticLambda822 = new SendMessagesHelper$$ExternalSyntheticLambda82(this, str2, z2, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr2, tLRPC$InputCheckPasswordSRP, z);
        if (!z2) {
        }
    }

    public /* synthetic */ void lambda$sendCallback$30(String str, boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity, TwoStepVerificationActivity twoStepVerificationActivity, TLObject[] tLObjectArr, TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, boolean z2, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda31(this, str, z, tLObject, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr, tLRPC$TL_error, tLRPC$InputCheckPasswordSRP, z2));
    }

    /* JADX WARN: Code restructure failed: missing block: B:80:0x0168, code lost:
        if (org.telegram.messenger.MessagesController.getNotificationsSettings(r27.currentAccount).getBoolean("askgame_" + r12, true) != false) goto L82;
     */
    /* JADX WARN: Removed duplicated region for block: B:23:0x006d  */
    /* JADX WARN: Removed duplicated region for block: B:26:0x0073  */
    /* JADX WARN: Removed duplicated region for block: B:35:0x00a1  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$sendCallback$29(String str, boolean z, TLObject tLObject, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity, TwoStepVerificationActivity twoStepVerificationActivity, TLObject[] tLObjectArr, TLRPC$TL_error tLRPC$TL_error, TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, boolean z2) {
        String str2;
        this.waitingForCallback.remove(str);
        if (z && tLObject == null) {
            sendCallback(false, messageObject, tLRPC$KeyboardButton, chatActivity);
            return;
        }
        TLRPC$TL_game tLRPC$TL_game = null;
        boolean z3 = true;
        if (tLObject != null) {
            if (twoStepVerificationActivity != null) {
                twoStepVerificationActivity.needHideProgress();
                twoStepVerificationActivity.finishFragment();
            }
            long fromChatId = messageObject.getFromChatId();
            long j = messageObject.messageOwner.via_bot_id;
            if (j != 0) {
                fromChatId = j;
            }
            if (fromChatId > 0) {
                TLRPC$User user = getMessagesController().getUser(Long.valueOf(fromChatId));
                if (user != null) {
                    str2 = ContactsController.formatName(user.first_name, user.last_name);
                    if (str2 == null) {
                        str2 = "bot";
                    }
                    if (!(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth)) {
                        if (tLObject instanceof TLRPC$TL_urlAuthResultRequest) {
                            chatActivity.showRequestUrlAlert((TLRPC$TL_urlAuthResultRequest) tLObject, (TLRPC$TL_messages_requestUrlAuth) tLObjectArr[0], tLRPC$KeyboardButton.url, false);
                            return;
                        } else if (tLObject instanceof TLRPC$TL_urlAuthResultAccepted) {
                            AlertsCreator.showOpenUrlAlert(chatActivity, ((TLRPC$TL_urlAuthResultAccepted) tLObject).url, false, false);
                            return;
                        } else if (!(tLObject instanceof TLRPC$TL_urlAuthResultDefault)) {
                            return;
                        } else {
                            TLRPC$TL_urlAuthResultDefault tLRPC$TL_urlAuthResultDefault = (TLRPC$TL_urlAuthResultDefault) tLObject;
                            AlertsCreator.showOpenUrlAlert(chatActivity, tLRPC$KeyboardButton.url, false, true);
                            return;
                        }
                    } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                        if (tLObject instanceof TLRPC$TL_payments_paymentForm) {
                            TLRPC$TL_payments_paymentForm tLRPC$TL_payments_paymentForm = (TLRPC$TL_payments_paymentForm) tLObject;
                            getMessagesController().putUsers(tLRPC$TL_payments_paymentForm.users, false);
                            chatActivity.presentFragment(new PaymentFormActivity(tLRPC$TL_payments_paymentForm, messageObject, chatActivity));
                            return;
                        } else if (!(tLObject instanceof TLRPC$TL_payments_paymentReceipt)) {
                            return;
                        } else {
                            chatActivity.presentFragment(new PaymentFormActivity((TLRPC$TL_payments_paymentReceipt) tLObject));
                            return;
                        }
                    } else {
                        TLRPC$TL_messages_botCallbackAnswer tLRPC$TL_messages_botCallbackAnswer = (TLRPC$TL_messages_botCallbackAnswer) tLObject;
                        if (!z && tLRPC$TL_messages_botCallbackAnswer.cache_time != 0 && !tLRPC$KeyboardButton.requires_password) {
                            getMessagesStorage().saveBotCache(str, tLRPC$TL_messages_botCallbackAnswer);
                        }
                        String str3 = tLRPC$TL_messages_botCallbackAnswer.message;
                        if (str3 != null) {
                            if (tLRPC$TL_messages_botCallbackAnswer.alert) {
                                if (chatActivity.getParentActivity() == null) {
                                    return;
                                }
                                AlertDialog.Builder builder = new AlertDialog.Builder(chatActivity.getParentActivity());
                                builder.setTitle(str2);
                                builder.setPositiveButton(LocaleController.getString("OK", 2131627127), null);
                                builder.setMessage(tLRPC$TL_messages_botCallbackAnswer.message);
                                chatActivity.showDialog(builder.create());
                                return;
                            }
                            chatActivity.showAlert(str2, str3);
                            return;
                        } else if (tLRPC$TL_messages_botCallbackAnswer.url == null || chatActivity.getParentActivity() == null) {
                            return;
                        } else {
                            TLRPC$User user2 = getMessagesController().getUser(Long.valueOf(fromChatId));
                            boolean z4 = user2 != null && user2.verified;
                            if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame) {
                                TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
                                if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGame) {
                                    tLRPC$TL_game = tLRPC$MessageMedia.game;
                                }
                                if (tLRPC$TL_game == null) {
                                    return;
                                }
                                String str4 = tLRPC$TL_messages_botCallbackAnswer.url;
                                if (!z4) {
                                }
                                z3 = false;
                                chatActivity.showOpenGameAlert(tLRPC$TL_game, messageObject, str4, z3, fromChatId);
                                return;
                            }
                            AlertsCreator.showOpenUrlAlert(chatActivity, tLRPC$TL_messages_botCallbackAnswer.url, false, false);
                            return;
                        }
                    }
                }
                str2 = null;
                if (str2 == null) {
                }
                if (!(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth)) {
                }
            } else {
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(-fromChatId));
                if (chat != null) {
                    str2 = chat.title;
                    if (str2 == null) {
                    }
                    if (!(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth)) {
                    }
                }
                str2 = null;
                if (str2 == null) {
                }
                if (!(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth)) {
                }
            }
        } else if (tLRPC$TL_error == null || chatActivity.getParentActivity() == null) {
        } else {
            if ("PASSWORD_HASH_INVALID".equals(tLRPC$TL_error.text)) {
                if (tLRPC$InputCheckPasswordSRP != null) {
                    return;
                }
                AlertDialog.Builder builder2 = new AlertDialog.Builder(chatActivity.getParentActivity());
                builder2.setTitle(LocaleController.getString("BotOwnershipTransfer", 2131624732));
                builder2.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferReadyAlertText", 2131624735, new Object[0])));
                builder2.setPositiveButton(LocaleController.getString("BotOwnershipTransferChangeOwner", 2131624734), new SendMessagesHelper$$ExternalSyntheticLambda0(this, z2, messageObject, tLRPC$KeyboardButton, chatActivity));
                builder2.setNegativeButton(LocaleController.getString("Cancel", 2131624832), null);
                chatActivity.showDialog(builder2.create());
            } else if ("PASSWORD_MISSING".equals(tLRPC$TL_error.text) || tLRPC$TL_error.text.startsWith("PASSWORD_TOO_FRESH_") || tLRPC$TL_error.text.startsWith("SESSION_TOO_FRESH_")) {
                if (twoStepVerificationActivity != null) {
                    twoStepVerificationActivity.needHideProgress();
                }
                AlertDialog.Builder builder3 = new AlertDialog.Builder(chatActivity.getParentActivity());
                builder3.setTitle(LocaleController.getString("EditAdminTransferAlertTitle", 2131625579));
                LinearLayout linearLayout = new LinearLayout(chatActivity.getParentActivity());
                linearLayout.setPadding(AndroidUtilities.dp(24.0f), AndroidUtilities.dp(2.0f), AndroidUtilities.dp(24.0f), 0);
                linearLayout.setOrientation(1);
                builder3.setView(linearLayout);
                TextView textView = new TextView(chatActivity.getParentActivity());
                textView.setTextColor(Theme.getColor("dialogTextBlack"));
                textView.setTextSize(1, 16.0f);
                int i = 3;
                textView.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView.setText(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferAlertText", 2131624733, new Object[0])));
                linearLayout.addView(textView, LayoutHelper.createLinear(-1, -2));
                LinearLayout linearLayout2 = new LinearLayout(chatActivity.getParentActivity());
                linearLayout2.setOrientation(0);
                linearLayout.addView(linearLayout2, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView imageView = new ImageView(chatActivity.getParentActivity());
                imageView.setImageResource(2131165573);
                imageView.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                imageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor("dialogTextBlack"), PorterDuff.Mode.MULTIPLY));
                TextView textView2 = new TextView(chatActivity.getParentActivity());
                textView2.setTextColor(Theme.getColor("dialogTextBlack"));
                textView2.setTextSize(1, 16.0f);
                textView2.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView2.setText(AndroidUtilities.replaceTags(LocaleController.getString("EditAdminTransferAlertText1", 2131625576)));
                if (LocaleController.isRTL) {
                    linearLayout2.addView(textView2, LayoutHelper.createLinear(-1, -2));
                    linearLayout2.addView(imageView, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout2.addView(imageView, LayoutHelper.createLinear(-2, -2));
                    linearLayout2.addView(textView2, LayoutHelper.createLinear(-1, -2));
                }
                LinearLayout linearLayout3 = new LinearLayout(chatActivity.getParentActivity());
                linearLayout3.setOrientation(0);
                linearLayout.addView(linearLayout3, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView imageView2 = new ImageView(chatActivity.getParentActivity());
                imageView2.setImageResource(2131165573);
                imageView2.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                imageView2.setColorFilter(new PorterDuffColorFilter(Theme.getColor("dialogTextBlack"), PorterDuff.Mode.MULTIPLY));
                TextView textView3 = new TextView(chatActivity.getParentActivity());
                textView3.setTextColor(Theme.getColor("dialogTextBlack"));
                textView3.setTextSize(1, 16.0f);
                textView3.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView3.setText(AndroidUtilities.replaceTags(LocaleController.getString("EditAdminTransferAlertText2", 2131625577)));
                if (LocaleController.isRTL) {
                    linearLayout3.addView(textView3, LayoutHelper.createLinear(-1, -2));
                    linearLayout3.addView(imageView2, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout3.addView(imageView2, LayoutHelper.createLinear(-2, -2));
                    linearLayout3.addView(textView3, LayoutHelper.createLinear(-1, -2));
                }
                if ("PASSWORD_MISSING".equals(tLRPC$TL_error.text)) {
                    builder3.setPositiveButton(LocaleController.getString("EditAdminTransferSetPassword", 2131625584), new SendMessagesHelper$$ExternalSyntheticLambda1(chatActivity));
                    builder3.setNegativeButton(LocaleController.getString("Cancel", 2131624832), null);
                } else {
                    TextView textView4 = new TextView(chatActivity.getParentActivity());
                    textView4.setTextColor(Theme.getColor("dialogTextBlack"));
                    textView4.setTextSize(1, 16.0f);
                    if (LocaleController.isRTL) {
                        i = 5;
                    }
                    textView4.setGravity(i | 48);
                    textView4.setText(LocaleController.getString("EditAdminTransferAlertText3", 2131625578));
                    linearLayout.addView(textView4, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                    builder3.setNegativeButton(LocaleController.getString("OK", 2131627127), null);
                }
                chatActivity.showDialog(builder3.create());
            } else if ("SRP_ID_INVALID".equals(tLRPC$TL_error.text)) {
                ConnectionsManager.getInstance(this.currentAccount).sendRequest(new TLRPC$TL_account_getPassword(), new SendMessagesHelper$$ExternalSyntheticLambda89(this, twoStepVerificationActivity, z2, messageObject, tLRPC$KeyboardButton, chatActivity), 8);
            } else if (twoStepVerificationActivity == null) {
            } else {
                twoStepVerificationActivity.needHideProgress();
                twoStepVerificationActivity.finishFragment();
            }
        }
    }

    public /* synthetic */ void lambda$sendCallback$25(boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity, DialogInterface dialogInterface, int i) {
        TwoStepVerificationActivity twoStepVerificationActivity = new TwoStepVerificationActivity();
        twoStepVerificationActivity.setDelegate(new SendMessagesHelper$$ExternalSyntheticLambda91(this, z, messageObject, tLRPC$KeyboardButton, twoStepVerificationActivity, chatActivity));
        chatActivity.presentFragment(twoStepVerificationActivity);
    }

    public static /* synthetic */ void lambda$sendCallback$26(ChatActivity chatActivity, DialogInterface dialogInterface, int i) {
        chatActivity.presentFragment(new TwoStepVerificationSetupActivity(6, null));
    }

    public /* synthetic */ void lambda$sendCallback$28(TwoStepVerificationActivity twoStepVerificationActivity, boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda57(this, tLRPC$TL_error, tLObject, twoStepVerificationActivity, z, messageObject, tLRPC$KeyboardButton, chatActivity));
    }

    public /* synthetic */ void lambda$sendCallback$27(TLRPC$TL_error tLRPC$TL_error, TLObject tLObject, TwoStepVerificationActivity twoStepVerificationActivity, boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity) {
        if (tLRPC$TL_error == null) {
            TLRPC$TL_account_password tLRPC$TL_account_password = (TLRPC$TL_account_password) tLObject;
            twoStepVerificationActivity.setCurrentPasswordInfo(null, tLRPC$TL_account_password);
            TwoStepVerificationActivity.initPasswordNewAlgo(tLRPC$TL_account_password);
            lambda$sendCallback$24(z, messageObject, tLRPC$KeyboardButton, twoStepVerificationActivity.getNewSrpPassword(), twoStepVerificationActivity, chatActivity);
        }
    }

    public boolean isSendingCallback(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        int i = 0;
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return false;
        }
        if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth) {
            i = 3;
        } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame) {
            i = 1;
        } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
            i = 2;
        }
        return this.waitingForCallback.containsKey(messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i);
    }

    public void sendGame(TLRPC$InputPeer tLRPC$InputPeer, TLRPC$TL_inputMediaGame tLRPC$TL_inputMediaGame, long j, long j2) {
        NativeByteBuffer nativeByteBuffer;
        Exception e;
        if (tLRPC$InputPeer == null || tLRPC$TL_inputMediaGame == null) {
            return;
        }
        TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = new TLRPC$TL_messages_sendMedia();
        tLRPC$TL_messages_sendMedia.peer = tLRPC$InputPeer;
        if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChannel) {
            SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings.getBoolean("silent_" + (-tLRPC$InputPeer.channel_id), false);
        } else if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChat) {
            SharedPreferences notificationsSettings2 = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings2.getBoolean("silent_" + (-tLRPC$InputPeer.chat_id), false);
        } else {
            SharedPreferences notificationsSettings3 = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings3.getBoolean("silent_" + tLRPC$InputPeer.user_id, false);
        }
        tLRPC$TL_messages_sendMedia.random_id = j != 0 ? j : getNextRandomId();
        tLRPC$TL_messages_sendMedia.message = "";
        tLRPC$TL_messages_sendMedia.media = tLRPC$TL_inputMediaGame;
        long sendAsPeerId = ChatObject.getSendAsPeerId(getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer.chat_id)), getMessagesController().getChatFull(tLRPC$InputPeer.chat_id));
        if (sendAsPeerId != UserConfig.getInstance(this.currentAccount).getClientUserId()) {
            tLRPC$TL_messages_sendMedia.send_as = getMessagesController().getInputPeer(sendAsPeerId);
        }
        if (j2 == 0) {
            NativeByteBuffer nativeByteBuffer2 = null;
            try {
                nativeByteBuffer = new NativeByteBuffer(tLRPC$InputPeer.getObjectSize() + tLRPC$TL_inputMediaGame.getObjectSize() + 4 + 8);
                try {
                    nativeByteBuffer.writeInt32(3);
                    nativeByteBuffer.writeInt64(j);
                    tLRPC$InputPeer.serializeToStream(nativeByteBuffer);
                    tLRPC$TL_inputMediaGame.serializeToStream(nativeByteBuffer);
                } catch (Exception e2) {
                    e = e2;
                    nativeByteBuffer2 = nativeByteBuffer;
                    FileLog.e(e);
                    nativeByteBuffer = nativeByteBuffer2;
                    j2 = getMessagesStorage().createPendingTask(nativeByteBuffer);
                    getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMedia, new SendMessagesHelper$$ExternalSyntheticLambda78(this, j2));
                }
            } catch (Exception e3) {
                e = e3;
            }
            j2 = getMessagesStorage().createPendingTask(nativeByteBuffer);
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMedia, new SendMessagesHelper$$ExternalSyntheticLambda78(this, j2));
    }

    public /* synthetic */ void lambda$sendGame$31(long j, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
        }
        if (j != 0) {
            getMessagesStorage().removePendingTask(j);
        }
    }

    public void sendMessage(MessageObject messageObject) {
        long dialogId = messageObject.getDialogId();
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        sendMessage(null, null, null, null, null, null, null, null, null, null, dialogId, tLRPC$Message.attachPath, null, null, null, true, messageObject, null, tLRPC$Message.reply_markup, tLRPC$Message.params, !tLRPC$Message.silent, messageObject.scheduled ? tLRPC$Message.date : 0, 0, null, null);
    }

    public void sendMessage(TLRPC$User tLRPC$User, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
        sendMessage(null, null, null, null, null, tLRPC$User, null, null, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null);
    }

    public void sendMessage(TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
        sendMessage(null, null, null, null, null, null, null, null, null, tLRPC$TL_messageMediaInvoice, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null);
    }

    public void sendMessage(TLRPC$TL_document tLRPC$TL_document, VideoEditedInfo videoEditedInfo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData) {
        sendMessage(null, str2, null, null, videoEditedInfo, null, tLRPC$TL_document, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, sendAnimationData);
    }

    public void sendMessage(String str, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, MessageObject.SendAnimationData sendAnimationData) {
        sendMessage(str, null, null, null, null, null, null, null, null, null, j, null, messageObject, messageObject2, tLRPC$WebPage, z, null, arrayList, tLRPC$ReplyMarkup, hashMap, z2, i, 0, null, sendAnimationData);
    }

    public void sendMessage(TLRPC$MessageMedia tLRPC$MessageMedia, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
        sendMessage(null, null, tLRPC$MessageMedia, null, null, null, null, null, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null);
    }

    public void sendMessage(TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
        sendMessage(null, null, null, null, null, null, null, null, tLRPC$TL_messageMediaPoll, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null);
    }

    public void sendMessage(TLRPC$TL_game tLRPC$TL_game, long j, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
        sendMessage(null, null, null, null, null, null, null, tLRPC$TL_game, null, null, j, null, null, null, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null);
    }

    public void sendMessage(TLRPC$TL_photo tLRPC$TL_photo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj) {
        sendMessage(null, str2, null, tLRPC$TL_photo, null, null, null, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, null);
    }

    /* JADX WARN: Can't wrap try/catch for region: R(8:866|(7:(1:877)(3:870|871|(7:873|1452|897|898|(2:900|901)(6:904|905|906|(1:908)|(1:912)|913)|(3:(5:916|917|(1:919)(1:920)|1399|921)(1:924)|925|(2:927|(1:929)))(1:931)|932))|1452|897|898|(0)(0)|(0)(0)|932)|1435|878|(1:880)|(2:889|890)|(1:895)(1:894)|896) */
    /* JADX WARN: Code restructure failed: missing block: B:1145:0x16f9, code lost:
        r11 = r66;
        r3 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r11);
        r3.encryptedChat = r8;
        r3.type = 1;
        r3.sendEncryptedRequest = r6;
        r5 = r50;
        r3.originalPath = r5;
        r3.obj = r2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1146:0x170d, code lost:
        if (r64 == null) goto L1150;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1148:0x1715, code lost:
        if (r64.containsKey(r44) == false) goto L1150;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1149:0x1717, code lost:
        r3.parentObject = r64.get(r44);
     */
    /* JADX WARN: Code restructure failed: missing block: B:1150:0x171e, code lost:
        r3.parentObject = r63;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1151:0x1722, code lost:
        r3.performMediaUpload = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1152:0x1725, code lost:
        if (r78 == 0) goto L1154;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1153:0x1727, code lost:
        r1 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1154:0x1729, code lost:
        r1 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1155:0x172a, code lost:
        r3.scheduled = r1;
        r1 = r3;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1218:0x190e, code lost:
        r3 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r11);
        r3.encryptedChat = r8;
        r3.type = 2;
        r3.sendEncryptedRequest = r6;
        r3.originalPath = r5;
        r3.obj = r2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1219:0x191e, code lost:
        if (r64 == null) goto L1223;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1221:0x1924, code lost:
        if (r64.containsKey(r44) == false) goto L1223;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1222:0x1926, code lost:
        r3.parentObject = r64.get(r44);
     */
    /* JADX WARN: Code restructure failed: missing block: B:1223:0x192d, code lost:
        r3.parentObject = r63;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1224:0x1931, code lost:
        r3.performMediaUpload = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1225:0x1934, code lost:
        if (r78 == 0) goto L1227;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1226:0x1936, code lost:
        r1 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1227:0x1938, code lost:
        r1 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1228:0x1939, code lost:
        r3.scheduled = r1;
        r1 = r3;
        r3 = r68;
     */
    /* JADX WARN: Code restructure failed: missing block: B:247:0x050b, code lost:
        if (r6.containsKey(r5) != false) goto L259;
     */
    /* JADX WARN: Code restructure failed: missing block: B:258:0x052c, code lost:
        if (r6.containsKey(r5) != false) goto L259;
     */
    /* JADX WARN: Code restructure failed: missing block: B:259:0x052e, code lost:
        r22 = r22;
        r32 = r5;
        r7 = r18;
        r2 = null;
        r14 = false;
        r19 = '\t';
     */
    /* JADX WARN: Code restructure failed: missing block: B:741:0x0e9d, code lost:
        if (r14.roundVideo == false) goto L744;
     */
    /* JADX WARN: Code restructure failed: missing block: B:937:0x124d, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:938:0x124e, code lost:
        r18 = r18;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:1076:0x1522  */
    /* JADX WARN: Removed duplicated region for block: B:1134:0x1690 A[Catch: Exception -> 0x1ad7, TryCatch #31 {Exception -> 0x1ad7, blocks: (B:1077:0x1539, B:1079:0x1543, B:1081:0x154c, B:1083:0x1560, B:1084:0x1569, B:1086:0x156f, B:1088:0x1575, B:1089:0x157d, B:1091:0x1583, B:1093:0x1589, B:1094:0x1592, B:1096:0x15a0, B:1098:0x15a8, B:1099:0x15b6, B:1101:0x15bf, B:1103:0x15c3, B:1104:0x15db, B:1105:0x15e2, B:1114:0x162e, B:1116:0x163d, B:1119:0x1644, B:1121:0x164d, B:1123:0x1651, B:1124:0x1656, B:1125:0x165e, B:1127:0x166b, B:1129:0x166f, B:1130:0x1674, B:1131:0x167b, B:1132:0x1688, B:1134:0x1690, B:1136:0x169c, B:1137:0x16ab, B:1138:0x16ae, B:1143:0x16c1, B:1145:0x16f9, B:1147:0x170f, B:1149:0x1717, B:1150:0x171e, B:1151:0x1722, B:1155:0x172a, B:1157:0x1734, B:1159:0x173c, B:1163:0x174f, B:1172:0x1791, B:1176:0x17a9, B:1178:0x17c0, B:1179:0x17d5, B:1180:0x17e3, B:1187:0x1802, B:1189:0x1808, B:1191:0x180f, B:1193:0x183a, B:1194:0x1841, B:1196:0x1858, B:1198:0x185f, B:1200:0x1869, B:1287:0x1a88, B:1292:0x1aa7), top: B:1443:0x1539 }] */
    /* JADX WARN: Removed duplicated region for block: B:1159:0x173c A[Catch: Exception -> 0x1ad7, TryCatch #31 {Exception -> 0x1ad7, blocks: (B:1077:0x1539, B:1079:0x1543, B:1081:0x154c, B:1083:0x1560, B:1084:0x1569, B:1086:0x156f, B:1088:0x1575, B:1089:0x157d, B:1091:0x1583, B:1093:0x1589, B:1094:0x1592, B:1096:0x15a0, B:1098:0x15a8, B:1099:0x15b6, B:1101:0x15bf, B:1103:0x15c3, B:1104:0x15db, B:1105:0x15e2, B:1114:0x162e, B:1116:0x163d, B:1119:0x1644, B:1121:0x164d, B:1123:0x1651, B:1124:0x1656, B:1125:0x165e, B:1127:0x166b, B:1129:0x166f, B:1130:0x1674, B:1131:0x167b, B:1132:0x1688, B:1134:0x1690, B:1136:0x169c, B:1137:0x16ab, B:1138:0x16ae, B:1143:0x16c1, B:1145:0x16f9, B:1147:0x170f, B:1149:0x1717, B:1150:0x171e, B:1151:0x1722, B:1155:0x172a, B:1157:0x1734, B:1159:0x173c, B:1163:0x174f, B:1172:0x1791, B:1176:0x17a9, B:1178:0x17c0, B:1179:0x17d5, B:1180:0x17e3, B:1187:0x1802, B:1189:0x1808, B:1191:0x180f, B:1193:0x183a, B:1194:0x1841, B:1196:0x1858, B:1198:0x185f, B:1200:0x1869, B:1287:0x1a88, B:1292:0x1aa7), top: B:1443:0x1539 }] */
    /* JADX WARN: Removed duplicated region for block: B:1263:0x1a37  */
    /* JADX WARN: Removed duplicated region for block: B:1264:0x1a39  */
    /* JADX WARN: Removed duplicated region for block: B:127:0x02b8 A[Catch: Exception -> 0x032a, TryCatch #1 {Exception -> 0x032a, blocks: (B:52:0x0122, B:54:0x0128, B:56:0x012f, B:59:0x0137, B:62:0x013f, B:64:0x0145, B:66:0x0161, B:68:0x0167, B:71:0x016f, B:73:0x0176, B:76:0x0188, B:85:0x01ad, B:90:0x01b7, B:104:0x020e, B:110:0x0234, B:112:0x024f, B:116:0x0270, B:121:0x0299, B:124:0x02a8, B:127:0x02b8, B:131:0x02c5, B:191:0x0412, B:200:0x043a, B:202:0x043e), top: B:1393:0x011a }] */
    /* JADX WARN: Removed duplicated region for block: B:1295:0x1ab8  */
    /* JADX WARN: Removed duplicated region for block: B:1298:0x1abe A[Catch: Exception -> 0x1c0d, TRY_ENTER, TryCatch #25 {Exception -> 0x1c0d, blocks: (B:1298:0x1abe, B:1300:0x1ac4, B:1302:0x1aca, B:1309:0x1aec, B:1313:0x1af8, B:1315:0x1b08, B:1316:0x1b14, B:1318:0x1b18, B:1320:0x1b1c, B:1322:0x1b26, B:1324:0x1b2b, B:1326:0x1b31, B:1328:0x1b3c, B:1333:0x1b4b, B:1335:0x1b60, B:1337:0x1b66, B:1339:0x1b6c, B:1340:0x1b72, B:1342:0x1b7d, B:1344:0x1b83, B:1345:0x1b8b, B:1347:0x1b8f, B:1349:0x1b95, B:1351:0x1ba0, B:1353:0x1ba6, B:1354:0x1bb4, B:1356:0x1bc2, B:1358:0x1bc6, B:1359:0x1bd8, B:1360:0x1bdf, B:1362:0x1bfa, B:1364:0x1c00, B:1366:0x1c06), top: B:1434:0x0c38 }] */
    /* JADX WARN: Removed duplicated region for block: B:1309:0x1aec A[Catch: Exception -> 0x1c0d, TryCatch #25 {Exception -> 0x1c0d, blocks: (B:1298:0x1abe, B:1300:0x1ac4, B:1302:0x1aca, B:1309:0x1aec, B:1313:0x1af8, B:1315:0x1b08, B:1316:0x1b14, B:1318:0x1b18, B:1320:0x1b1c, B:1322:0x1b26, B:1324:0x1b2b, B:1326:0x1b31, B:1328:0x1b3c, B:1333:0x1b4b, B:1335:0x1b60, B:1337:0x1b66, B:1339:0x1b6c, B:1340:0x1b72, B:1342:0x1b7d, B:1344:0x1b83, B:1345:0x1b8b, B:1347:0x1b8f, B:1349:0x1b95, B:1351:0x1ba0, B:1353:0x1ba6, B:1354:0x1bb4, B:1356:0x1bc2, B:1358:0x1bc6, B:1359:0x1bd8, B:1360:0x1bdf, B:1362:0x1bfa, B:1364:0x1c00, B:1366:0x1c06), top: B:1434:0x0c38 }] */
    /* JADX WARN: Removed duplicated region for block: B:133:0x02cb  */
    /* JADX WARN: Removed duplicated region for block: B:1340:0x1b72 A[Catch: Exception -> 0x1c0d, TryCatch #25 {Exception -> 0x1c0d, blocks: (B:1298:0x1abe, B:1300:0x1ac4, B:1302:0x1aca, B:1309:0x1aec, B:1313:0x1af8, B:1315:0x1b08, B:1316:0x1b14, B:1318:0x1b18, B:1320:0x1b1c, B:1322:0x1b26, B:1324:0x1b2b, B:1326:0x1b31, B:1328:0x1b3c, B:1333:0x1b4b, B:1335:0x1b60, B:1337:0x1b66, B:1339:0x1b6c, B:1340:0x1b72, B:1342:0x1b7d, B:1344:0x1b83, B:1345:0x1b8b, B:1347:0x1b8f, B:1349:0x1b95, B:1351:0x1ba0, B:1353:0x1ba6, B:1354:0x1bb4, B:1356:0x1bc2, B:1358:0x1bc6, B:1359:0x1bd8, B:1360:0x1bdf, B:1362:0x1bfa, B:1364:0x1c00, B:1366:0x1c06), top: B:1434:0x0c38 }] */
    /* JADX WARN: Removed duplicated region for block: B:134:0x02cd  */
    /* JADX WARN: Removed duplicated region for block: B:1384:0x1c31  */
    /* JADX WARN: Removed duplicated region for block: B:1385:0x1c33  */
    /* JADX WARN: Removed duplicated region for block: B:1388:0x1c39  */
    /* JADX WARN: Removed duplicated region for block: B:1391:0x0b19 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1401:0x1a71 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1406:0x0899 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1438:0x0ec3 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:143:0x0336  */
    /* JADX WARN: Removed duplicated region for block: B:1440:0x077a A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1454:0x0aed A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1470:0x16ae A[EDGE_INSN: B:1470:0x16ae->B:1138:0x16ae ?: BREAK  , SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:177:0x03d1 A[Catch: Exception -> 0x037d, TryCatch #36 {Exception -> 0x037d, blocks: (B:153:0x0368, B:155:0x036c, B:157:0x0370, B:162:0x0385, B:167:0x0393, B:169:0x0399, B:173:0x03b2, B:177:0x03d1, B:178:0x03d9, B:180:0x03e4, B:184:0x03ef), top: B:1449:0x0368 }] */
    /* JADX WARN: Removed duplicated region for block: B:178:0x03d9 A[Catch: Exception -> 0x037d, TryCatch #36 {Exception -> 0x037d, blocks: (B:153:0x0368, B:155:0x036c, B:157:0x0370, B:162:0x0385, B:167:0x0393, B:169:0x0399, B:173:0x03b2, B:177:0x03d1, B:178:0x03d9, B:180:0x03e4, B:184:0x03ef), top: B:1449:0x0368 }] */
    /* JADX WARN: Removed duplicated region for block: B:386:0x0792 A[Catch: Exception -> 0x0789, TryCatch #29 {Exception -> 0x0789, blocks: (B:380:0x077a, B:382:0x0780, B:386:0x0792, B:387:0x0795, B:389:0x0799, B:390:0x079b, B:392:0x079f, B:393:0x07a1, B:396:0x07b4, B:399:0x07d2, B:401:0x07d9, B:402:0x07ea), top: B:1440:0x077a }] */
    /* JADX WARN: Removed duplicated region for block: B:387:0x0795 A[Catch: Exception -> 0x0789, TryCatch #29 {Exception -> 0x0789, blocks: (B:380:0x077a, B:382:0x0780, B:386:0x0792, B:387:0x0795, B:389:0x0799, B:390:0x079b, B:392:0x079f, B:393:0x07a1, B:396:0x07b4, B:399:0x07d2, B:401:0x07d9, B:402:0x07ea), top: B:1440:0x077a }] */
    /* JADX WARN: Removed duplicated region for block: B:392:0x079f A[Catch: Exception -> 0x0789, TryCatch #29 {Exception -> 0x0789, blocks: (B:380:0x077a, B:382:0x0780, B:386:0x0792, B:387:0x0795, B:389:0x0799, B:390:0x079b, B:392:0x079f, B:393:0x07a1, B:396:0x07b4, B:399:0x07d2, B:401:0x07d9, B:402:0x07ea), top: B:1440:0x077a }] */
    /* JADX WARN: Removed duplicated region for block: B:395:0x07b2 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:399:0x07d2 A[Catch: Exception -> 0x0789, TryCatch #29 {Exception -> 0x0789, blocks: (B:380:0x077a, B:382:0x0780, B:386:0x0792, B:387:0x0795, B:389:0x0799, B:390:0x079b, B:392:0x079f, B:393:0x07a1, B:396:0x07b4, B:399:0x07d2, B:401:0x07d9, B:402:0x07ea), top: B:1440:0x077a }] */
    /* JADX WARN: Removed duplicated region for block: B:401:0x07d9 A[Catch: Exception -> 0x0789, TryCatch #29 {Exception -> 0x0789, blocks: (B:380:0x077a, B:382:0x0780, B:386:0x0792, B:387:0x0795, B:389:0x0799, B:390:0x079b, B:392:0x079f, B:393:0x07a1, B:396:0x07b4, B:399:0x07d2, B:401:0x07d9, B:402:0x07ea), top: B:1440:0x077a }] */
    /* JADX WARN: Removed duplicated region for block: B:405:0x0812  */
    /* JADX WARN: Removed duplicated region for block: B:414:0x083e  */
    /* JADX WARN: Removed duplicated region for block: B:418:0x084b A[Catch: Exception -> 0x0837, TRY_LEAVE, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:421:0x0855 A[Catch: Exception -> 0x0837, TRY_ENTER, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:424:0x085f A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:427:0x086c A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:431:0x088b A[Catch: Exception -> 0x0837, TRY_LEAVE, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:436:0x0897  */
    /* JADX WARN: Removed duplicated region for block: B:440:0x08a9  */
    /* JADX WARN: Removed duplicated region for block: B:454:0x08e6 A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:457:0x08f9 A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:468:0x0942  */
    /* JADX WARN: Removed duplicated region for block: B:471:0x0950 A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:474:0x096c A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:478:0x097c A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:489:0x09ac A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:49:0x011c A[Catch: Exception -> 0x0331, TRY_ENTER, TRY_LEAVE, TryCatch #8 {Exception -> 0x0331, blocks: (B:49:0x011c, B:146:0x0344, B:150:0x035b, B:151:0x0361, B:189:0x0407, B:190:0x040d, B:198:0x042f, B:199:0x0435, B:210:0x0460), top: B:1393:0x011a }] */
    /* JADX WARN: Removed duplicated region for block: B:507:0x09e9  */
    /* JADX WARN: Removed duplicated region for block: B:516:0x0a19 A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:531:0x0a59 A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:536:0x0a66 A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:539:0x0a6f A[Catch: Exception -> 0x0837, TryCatch #4 {Exception -> 0x0837, blocks: (B:406:0x0814, B:416:0x0843, B:418:0x084b, B:421:0x0855, B:424:0x085f, B:426:0x0869, B:427:0x086c, B:428:0x087f, B:429:0x0885, B:431:0x088b, B:446:0x08bb, B:448:0x08cd, B:450:0x08d1, B:451:0x08d5, B:453:0x08dc, B:454:0x08e6, B:455:0x08eb, B:457:0x08f9, B:459:0x0902, B:461:0x090e, B:463:0x091c, B:464:0x0923, B:467:0x0931, B:471:0x0950, B:475:0x096e, B:476:0x0976, B:478:0x097c, B:480:0x098c, B:482:0x099a, B:484:0x09a0, B:486:0x09a4, B:489:0x09ac, B:491:0x09ba, B:492:0x09bf, B:494:0x09c3, B:496:0x09c7, B:498:0x09cd, B:500:0x09d1, B:501:0x09d9, B:503:0x09dd, B:505:0x09e3, B:508:0x09ea, B:510:0x09f6, B:512:0x0a06, B:513:0x0a09, B:515:0x0a0e, B:516:0x0a19, B:518:0x0a1f, B:521:0x0a26, B:523:0x0a32, B:525:0x0a42, B:526:0x0a45, B:528:0x0a49, B:529:0x0a53, B:531:0x0a59, B:533:0x0a5f, B:534:0x0a62, B:536:0x0a66, B:537:0x0a6a, B:539:0x0a6f, B:541:0x0a79, B:543:0x0a8e, B:549:0x0aa0), top: B:1398:0x0814 }] */
    /* JADX WARN: Removed duplicated region for block: B:548:0x0a9c  */
    /* JADX WARN: Removed duplicated region for block: B:554:0x0ae2  */
    /* JADX WARN: Removed duplicated region for block: B:555:0x0ae4  */
    /* JADX WARN: Removed duplicated region for block: B:571:0x0b09  */
    /* JADX WARN: Removed duplicated region for block: B:574:0x0b0e A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:597:0x0b74  */
    /* JADX WARN: Removed duplicated region for block: B:615:0x0bc8  */
    /* JADX WARN: Removed duplicated region for block: B:619:0x0c32  */
    /* JADX WARN: Removed duplicated region for block: B:622:0x0c3a  */
    /* JADX WARN: Removed duplicated region for block: B:648:0x0c6c A[Catch: Exception -> 0x0b9d, TryCatch #12 {Exception -> 0x0b9d, blocks: (B:590:0x0b60, B:600:0x0b94, B:604:0x0ba1, B:608:0x0bb0, B:612:0x0bc0, B:617:0x0bcc, B:648:0x0c6c, B:650:0x0c7b, B:652:0x0c83, B:654:0x0ca8, B:656:0x0cbb, B:657:0x0ccb, B:658:0x0cd3, B:659:0x0cda, B:660:0x0ce4, B:661:0x0ceb, B:663:0x0cf1, B:664:0x0cf9, B:666:0x0d0a, B:667:0x0d18, B:669:0x0d1e, B:670:0x0d28, B:672:0x0d2c, B:677:0x0d3e, B:680:0x0d57, B:682:0x0d66, B:683:0x0d72, B:687:0x0d7d, B:689:0x0d83, B:691:0x0d87, B:692:0x0d8f, B:694:0x0d95, B:695:0x0d9d, B:697:0x0dbb, B:699:0x0dc4, B:701:0x0dca, B:706:0x0dd5, B:710:0x0def, B:712:0x0df5, B:713:0x0e0f, B:715:0x0e13, B:717:0x0e26, B:718:0x0e2b, B:720:0x0e2f, B:721:0x0e39, B:722:0x0e3e, B:735:0x0e8d, B:738:0x0e95, B:740:0x0e9b, B:747:0x0eac, B:749:0x0eb3), top: B:1410:0x0b17 }] */
    /* JADX WARN: Removed duplicated region for block: B:663:0x0cf1 A[Catch: Exception -> 0x0b9d, TryCatch #12 {Exception -> 0x0b9d, blocks: (B:590:0x0b60, B:600:0x0b94, B:604:0x0ba1, B:608:0x0bb0, B:612:0x0bc0, B:617:0x0bcc, B:648:0x0c6c, B:650:0x0c7b, B:652:0x0c83, B:654:0x0ca8, B:656:0x0cbb, B:657:0x0ccb, B:658:0x0cd3, B:659:0x0cda, B:660:0x0ce4, B:661:0x0ceb, B:663:0x0cf1, B:664:0x0cf9, B:666:0x0d0a, B:667:0x0d18, B:669:0x0d1e, B:670:0x0d28, B:672:0x0d2c, B:677:0x0d3e, B:680:0x0d57, B:682:0x0d66, B:683:0x0d72, B:687:0x0d7d, B:689:0x0d83, B:691:0x0d87, B:692:0x0d8f, B:694:0x0d95, B:695:0x0d9d, B:697:0x0dbb, B:699:0x0dc4, B:701:0x0dca, B:706:0x0dd5, B:710:0x0def, B:712:0x0df5, B:713:0x0e0f, B:715:0x0e13, B:717:0x0e26, B:718:0x0e2b, B:720:0x0e2f, B:721:0x0e39, B:722:0x0e3e, B:735:0x0e8d, B:738:0x0e95, B:740:0x0e9b, B:747:0x0eac, B:749:0x0eb3), top: B:1410:0x0b17 }] */
    /* JADX WARN: Removed duplicated region for block: B:666:0x0d0a A[Catch: Exception -> 0x0b9d, TryCatch #12 {Exception -> 0x0b9d, blocks: (B:590:0x0b60, B:600:0x0b94, B:604:0x0ba1, B:608:0x0bb0, B:612:0x0bc0, B:617:0x0bcc, B:648:0x0c6c, B:650:0x0c7b, B:652:0x0c83, B:654:0x0ca8, B:656:0x0cbb, B:657:0x0ccb, B:658:0x0cd3, B:659:0x0cda, B:660:0x0ce4, B:661:0x0ceb, B:663:0x0cf1, B:664:0x0cf9, B:666:0x0d0a, B:667:0x0d18, B:669:0x0d1e, B:670:0x0d28, B:672:0x0d2c, B:677:0x0d3e, B:680:0x0d57, B:682:0x0d66, B:683:0x0d72, B:687:0x0d7d, B:689:0x0d83, B:691:0x0d87, B:692:0x0d8f, B:694:0x0d95, B:695:0x0d9d, B:697:0x0dbb, B:699:0x0dc4, B:701:0x0dca, B:706:0x0dd5, B:710:0x0def, B:712:0x0df5, B:713:0x0e0f, B:715:0x0e13, B:717:0x0e26, B:718:0x0e2b, B:720:0x0e2f, B:721:0x0e39, B:722:0x0e3e, B:735:0x0e8d, B:738:0x0e95, B:740:0x0e9b, B:747:0x0eac, B:749:0x0eb3), top: B:1410:0x0b17 }] */
    /* JADX WARN: Removed duplicated region for block: B:667:0x0d18 A[Catch: Exception -> 0x0b9d, TryCatch #12 {Exception -> 0x0b9d, blocks: (B:590:0x0b60, B:600:0x0b94, B:604:0x0ba1, B:608:0x0bb0, B:612:0x0bc0, B:617:0x0bcc, B:648:0x0c6c, B:650:0x0c7b, B:652:0x0c83, B:654:0x0ca8, B:656:0x0cbb, B:657:0x0ccb, B:658:0x0cd3, B:659:0x0cda, B:660:0x0ce4, B:661:0x0ceb, B:663:0x0cf1, B:664:0x0cf9, B:666:0x0d0a, B:667:0x0d18, B:669:0x0d1e, B:670:0x0d28, B:672:0x0d2c, B:677:0x0d3e, B:680:0x0d57, B:682:0x0d66, B:683:0x0d72, B:687:0x0d7d, B:689:0x0d83, B:691:0x0d87, B:692:0x0d8f, B:694:0x0d95, B:695:0x0d9d, B:697:0x0dbb, B:699:0x0dc4, B:701:0x0dca, B:706:0x0dd5, B:710:0x0def, B:712:0x0df5, B:713:0x0e0f, B:715:0x0e13, B:717:0x0e26, B:718:0x0e2b, B:720:0x0e2f, B:721:0x0e39, B:722:0x0e3e, B:735:0x0e8d, B:738:0x0e95, B:740:0x0e9b, B:747:0x0eac, B:749:0x0eb3), top: B:1410:0x0b17 }] */
    /* JADX WARN: Removed duplicated region for block: B:675:0x0d3b  */
    /* JADX WARN: Removed duplicated region for block: B:676:0x0d3d  */
    /* JADX WARN: Removed duplicated region for block: B:678:0x0d53  */
    /* JADX WARN: Removed duplicated region for block: B:708:0x0dec  */
    /* JADX WARN: Removed duplicated region for block: B:749:0x0eb3 A[Catch: Exception -> 0x0b9d, TRY_LEAVE, TryCatch #12 {Exception -> 0x0b9d, blocks: (B:590:0x0b60, B:600:0x0b94, B:604:0x0ba1, B:608:0x0bb0, B:612:0x0bc0, B:617:0x0bcc, B:648:0x0c6c, B:650:0x0c7b, B:652:0x0c83, B:654:0x0ca8, B:656:0x0cbb, B:657:0x0ccb, B:658:0x0cd3, B:659:0x0cda, B:660:0x0ce4, B:661:0x0ceb, B:663:0x0cf1, B:664:0x0cf9, B:666:0x0d0a, B:667:0x0d18, B:669:0x0d1e, B:670:0x0d28, B:672:0x0d2c, B:677:0x0d3e, B:680:0x0d57, B:682:0x0d66, B:683:0x0d72, B:687:0x0d7d, B:689:0x0d83, B:691:0x0d87, B:692:0x0d8f, B:694:0x0d95, B:695:0x0d9d, B:697:0x0dbb, B:699:0x0dc4, B:701:0x0dca, B:706:0x0dd5, B:710:0x0def, B:712:0x0df5, B:713:0x0e0f, B:715:0x0e13, B:717:0x0e26, B:718:0x0e2b, B:720:0x0e2f, B:721:0x0e39, B:722:0x0e3e, B:735:0x0e8d, B:738:0x0e95, B:740:0x0e9b, B:747:0x0eac, B:749:0x0eb3), top: B:1410:0x0b17 }] */
    /* JADX WARN: Removed duplicated region for block: B:764:0x0f1b  */
    /* JADX WARN: Removed duplicated region for block: B:765:0x0f1e A[Catch: Exception -> 0x0f9b, TryCatch #13 {Exception -> 0x0f9b, blocks: (B:757:0x0ee8, B:758:0x0efc, B:762:0x0f15, B:765:0x0f1e, B:767:0x0f38, B:769:0x0f3f, B:771:0x0f45, B:774:0x0f57), top: B:1411:0x0ee8 }] */
    /* JADX WARN: Removed duplicated region for block: B:774:0x0f57 A[Catch: Exception -> 0x0f9b, TRY_LEAVE, TryCatch #13 {Exception -> 0x0f9b, blocks: (B:757:0x0ee8, B:758:0x0efc, B:762:0x0f15, B:765:0x0f1e, B:767:0x0f38, B:769:0x0f3f, B:771:0x0f45, B:774:0x0f57), top: B:1411:0x0ee8 }] */
    /* JADX WARN: Removed duplicated region for block: B:781:0x0f73  */
    /* JADX WARN: Removed duplicated region for block: B:784:0x0f85 A[Catch: Exception -> 0x1001, TryCatch #41 {Exception -> 0x1001, blocks: (B:776:0x0f61, B:780:0x0f70, B:782:0x0f79, B:784:0x0f85, B:786:0x0f92, B:787:0x0f96, B:794:0x0fb8, B:796:0x0fd3, B:798:0x0fe6, B:799:0x0ff4), top: B:1457:0x0e7a }] */
    /* JADX WARN: Removed duplicated region for block: B:857:0x10ff A[Catch: Exception -> 0x1155, TryCatch #32 {Exception -> 0x1155, blocks: (B:835:0x1094, B:843:0x10b3, B:845:0x10c0, B:847:0x10c8, B:850:0x10d8, B:852:0x10db, B:853:0x10f0, B:855:0x10fb, B:857:0x10ff, B:859:0x1107, B:862:0x111e, B:870:0x114a, B:880:0x1164, B:882:0x1170, B:884:0x1176, B:887:0x1184, B:892:0x1191), top: B:1403:0x1009 }] */
    /* JADX WARN: Removed duplicated region for block: B:900:0x11ac A[Catch: Exception -> 0x11b4, TRY_ENTER, TRY_LEAVE, TryCatch #7 {Exception -> 0x11b4, blocks: (B:821:0x1050, B:823:0x105e, B:826:0x1067, B:828:0x106d, B:830:0x107d, B:900:0x11ac), top: B:1403:0x1009 }] */
    /* JADX WARN: Removed duplicated region for block: B:904:0x11b9 A[Catch: Exception -> 0x1245, TRY_ENTER, TRY_LEAVE, TryCatch #38 {Exception -> 0x1245, blocks: (B:897:0x11a6, B:904:0x11b9), top: B:1452:0x11a6 }] */
    /* JADX WARN: Removed duplicated region for block: B:915:0x11f6  */
    /* JADX WARN: Removed duplicated region for block: B:931:0x1238  */
    /* JADX WARN: Type inference failed for: r13v11 */
    /* JADX WARN: Type inference failed for: r13v12 */
    /* JADX WARN: Type inference failed for: r13v13 */
    /* JADX WARN: Type inference failed for: r13v14 */
    /* JADX WARN: Type inference failed for: r13v15, types: [java.lang.Object] */
    /* JADX WARN: Type inference failed for: r13v18 */
    /* JADX WARN: Type inference failed for: r13v4 */
    /* JADX WARN: Type inference failed for: r13v5 */
    /* JADX WARN: Type inference failed for: r13v6 */
    /* JADX WARN: Type inference failed for: r13v71 */
    /* JADX WARN: Type inference failed for: r14v31 */
    /* JADX WARN: Type inference failed for: r14v32 */
    /* JADX WARN: Type inference failed for: r14v87 */
    /* JADX WARN: Type inference failed for: r14v90 */
    /* JADX WARN: Type inference failed for: r1v149 */
    /* JADX WARN: Type inference failed for: r1v158 */
    /* JADX WARN: Type inference failed for: r1v207, types: [org.telegram.tgnet.TLRPC$Message] */
    /* JADX WARN: Type inference failed for: r1v230 */
    /* JADX WARN: Type inference failed for: r1v237 */
    /* JADX WARN: Type inference failed for: r1v70, types: [org.telegram.messenger.SecretChatHelper] */
    /* JADX WARN: Type inference failed for: r1v80, types: [org.telegram.messenger.SecretChatHelper] */
    /* JADX WARN: Type inference failed for: r1v94, types: [org.telegram.messenger.SecretChatHelper] */
    /* JADX WARN: Type inference failed for: r2v100, types: [org.telegram.tgnet.TLRPC$TL_inputMediaDocument, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r2v22 */
    /* JADX WARN: Type inference failed for: r2v24 */
    /* JADX WARN: Type inference failed for: r2v25 */
    /* JADX WARN: Type inference failed for: r2v34 */
    /* JADX WARN: Type inference failed for: r2v35 */
    /* JADX WARN: Type inference failed for: r2v6 */
    /* JADX WARN: Type inference failed for: r2v7 */
    /* JADX WARN: Type inference failed for: r2v83, types: [java.lang.Object, org.telegram.messenger.MessageObject] */
    /* JADX WARN: Type inference failed for: r2v86 */
    /* JADX WARN: Type inference failed for: r2v94 */
    /* JADX WARN: Type inference failed for: r3v100, types: [org.telegram.messenger.SecretChatHelper] */
    /* JADX WARN: Type inference failed for: r3v115, types: [org.telegram.messenger.SecretChatHelper] */
    /* JADX WARN: Type inference failed for: r3v153, types: [org.telegram.messenger.SecretChatHelper] */
    /* JADX WARN: Type inference failed for: r4v91, types: [org.telegram.tgnet.TLRPC$TL_inputMediaDocument, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r5v149, types: [org.telegram.tgnet.TLRPC$TL_inputMediaPoll, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r7v103, types: [org.telegram.tgnet.TLRPC$TL_inputMediaDocument, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r7v206 */
    /* JADX WARN: Type inference failed for: r7v207 */
    /* JADX WARN: Type inference failed for: r7v40 */
    /* JADX WARN: Type inference failed for: r7v41, types: [org.telegram.tgnet.TLRPC$TL_messages_sendMedia, org.telegram.tgnet.TLObject] */
    /* JADX WARN: Type inference failed for: r7v43, types: [org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia] */
    /* JADX WARN: Type inference failed for: r7v49, types: [org.telegram.tgnet.TLRPC$TL_inputMediaPhoto] */
    /* JADX WARN: Type inference failed for: r80v0, types: [java.lang.Object] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void sendMessage(String str, String str2, TLRPC$MessageMedia tLRPC$MessageMedia, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$User tLRPC$User, TLRPC$TL_document tLRPC$TL_document, TLRPC$TL_game tLRPC$TL_game, TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, String str3, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, MessageObject messageObject3, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData) {
        String str4;
        TLRPC$InputPeer tLRPC$InputPeer;
        long j2;
        boolean z3;
        TLRPC$EncryptedChat tLRPC$EncryptedChat;
        TLRPC$Peer tLRPC$Peer;
        TLRPC$Message tLRPC$Message;
        int i3;
        MessageObject messageObject4;
        Exception exc;
        int i4;
        TLRPC$Message tLRPC$Message2;
        boolean z4;
        ?? r2;
        Exception e;
        TLRPC$Message tLRPC$Message3;
        int i5;
        TLRPC$TL_photo tLRPC$TL_photo2;
        String str5;
        char c;
        TLRPC$WebPage tLRPC$WebPage2;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll2;
        TLRPC$TL_document tLRPC$TL_document2;
        String str6;
        Object obj2;
        Object obj3;
        String str7;
        boolean z5;
        DelayedMessage delayedMessage;
        TLRPC$Message tLRPC$Message4;
        SendMessagesHelper sendMessagesHelper;
        int i6;
        String str8;
        HashMap<String, String> hashMap2;
        long j3;
        boolean z6;
        TLRPC$User tLRPC$User2;
        String str9;
        TLRPC$InputPeer tLRPC$InputPeer2;
        TLRPC$User tLRPC$User3;
        String str10;
        boolean z7;
        Object obj4;
        long j4;
        TLRPC$InputPeer tLRPC$InputPeer3;
        long j5;
        boolean z8;
        long j6;
        MessageObject messageObject5;
        long j7;
        MessageObject messageObject6;
        VideoEditedInfo videoEditedInfo2;
        TLRPC$Message tLRPC$Message5;
        MessageObject messageObject7;
        TLRPC$Message tLRPC$Message6;
        VideoEditedInfo videoEditedInfo3;
        int i7;
        DelayedMessage delayedMessage2;
        int i8;
        long j8;
        TLRPC$InputPeer tLRPC$InputPeer4;
        int i9;
        int i10;
        MessageObject messageObject8;
        Exception e2;
        int i11;
        MessageObject messageObject9;
        DelayedMessage delayedMessage3;
        long j9;
        TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage;
        boolean z9;
        Object obj5;
        long j10;
        String str11;
        DelayedMessage delayedMessage4;
        TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia;
        boolean z10;
        boolean z11;
        DelayedMessage delayedMessage5;
        boolean z12;
        boolean z13;
        Object obj6;
        String str12;
        String str13;
        String str14;
        DelayedMessage delayedMessage6;
        Object obj7;
        ArrayList<TLRPC$PhotoSize> arrayList2;
        String str15;
        Object obj8;
        boolean z14;
        Object obj9;
        String str16;
        int i12;
        byte[] bArr;
        byte[] bArr2;
        HashMap<String, String> hashMap3;
        boolean z15;
        TLRPC$InputPeer tLRPC$InputPeer5;
        int i13;
        String str17;
        TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument;
        TLRPC$Message tLRPC$Message7;
        boolean z16;
        MessageObject messageObject10;
        String str18;
        ?? r7;
        int i14;
        int i15;
        boolean z17;
        TLRPC$Message tLRPC$Message8;
        int i16;
        TLRPC$TL_photo tLRPC$TL_photo3;
        TLRPC$Message tLRPC$Message9;
        Exception e3;
        TLRPC$Message tLRPC$Message10;
        TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument2;
        boolean z18;
        String str19;
        Exception e4;
        VideoEditedInfo videoEditedInfo4;
        boolean z19;
        TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument3;
        String str20;
        MessageObject messageObject11;
        boolean z20;
        MessageObject messageObject12;
        boolean z21;
        TLRPC$TL_inputMediaContact tLRPC$TL_inputMediaContact;
        TLRPC$Message tLRPC$Message11;
        int i17;
        boolean z22;
        TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument4;
        String str21;
        boolean z23;
        boolean z24;
        TLRPC$Message tLRPC$Message12;
        Exception e5;
        TLRPC$Message tLRPC$Message13;
        boolean z25;
        TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument5;
        boolean z26;
        HashMap<String, String> hashMap4;
        HashMap<String, String> hashMap5;
        TLRPC$TL_inputMediaDice tLRPC$TL_inputMediaDice;
        TLRPC$PollResults tLRPC$PollResults;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$Message tLRPC$Message14;
        int i18;
        int i19;
        TLRPC$MessageMedia tLRPC$MessageMedia2;
        int currentTime;
        int i20;
        Exception e6;
        boolean z27;
        int i21;
        String str22;
        ArrayList<TLRPC$MessageEntity> arrayList3;
        TLRPC$Message tLRPC$Message15;
        DelayedMessage delayedMessage7;
        TLRPC$WebPage tLRPC$WebPage3;
        String str23;
        HashMap<String, String> hashMap6;
        TLRPC$WebPage tLRPC$WebPage4;
        TLRPC$TL_message tLRPC$TL_message;
        TLRPC$TL_message_secret tLRPC$TL_message_secret;
        TLRPC$TL_message tLRPC$TL_message2;
        Exception e7;
        boolean z28;
        TLRPC$TL_message tLRPC$TL_message3;
        TLRPC$TL_message tLRPC$TL_message4;
        String str24;
        TLRPC$Message tLRPC$Message16;
        String str25;
        char c2;
        char c3;
        ArrayList<TLRPC$PhotoSize> arrayList4;
        TLRPC$Message tLRPC$Message17;
        TLRPC$Message tLRPC$Message18;
        String str26;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll3;
        TLRPC$TL_document tLRPC$TL_document3;
        TLRPC$TL_userRequest_old2 tLRPC$TL_userRequest_old2;
        TLRPC$TL_photo tLRPC$TL_photo4;
        TLRPC$MessageMedia tLRPC$MessageMedia3;
        long j11;
        String str27 = str;
        TLRPC$WebPage tLRPC$WebPage5 = tLRPC$WebPage;
        HashMap<String, String> hashMap7 = hashMap;
        if (tLRPC$User == null || tLRPC$User.phone != null) {
            long j12 = 0;
            if (j == 0) {
                return;
            }
            String str28 = (str27 == null && str2 == null) ? "" : str2;
            String str29 = (hashMap7 == null || !hashMap7.containsKey("originalPath")) ? null : hashMap7.get("originalPath");
            char c4 = 65535;
            if (!DialogObject.isEncryptedDialog(j)) {
                str4 = str29;
                tLRPC$InputPeer = getMessagesController().getInputPeer(j);
            } else {
                str4 = str29;
                tLRPC$InputPeer = null;
            }
            long clientUserId = getUserConfig().getClientUserId();
            try {
                try {
                    try {
                        try {
                            try {
                                try {
                                    if (DialogObject.isEncryptedDialog(j)) {
                                        TLRPC$EncryptedChat encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j)));
                                        if (encryptedChat == null) {
                                            if (messageObject3 == null) {
                                                return;
                                            }
                                            getMessagesStorage().markMessageAsSendError(messageObject3.messageOwner, messageObject3.scheduled);
                                            messageObject3.messageOwner.send_state = 2;
                                            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(messageObject3.getId()));
                                            processSentMessage(messageObject3.getId());
                                            return;
                                        }
                                        tLRPC$EncryptedChat = encryptedChat;
                                        j2 = 0;
                                        tLRPC$Peer = null;
                                    } else if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChannel) {
                                        TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer.channel_id));
                                        TLRPC$ChatFull chatFull = getMessagesController().getChatFull(chat.id);
                                        boolean z29 = !chat.megagroup;
                                        if (!z29 || !chat.has_link || chatFull == null) {
                                            z3 = z29;
                                            j11 = 0;
                                        } else {
                                            z3 = z29;
                                            j11 = chatFull.linked_chat_id;
                                        }
                                        tLRPC$Peer = getMessagesController().getPeer(ChatObject.getSendAsPeerId(chat, chatFull, true));
                                        j2 = j11;
                                        tLRPC$EncryptedChat = null;
                                        TLRPC$Peer tLRPC$Peer2 = tLRPC$Peer;
                                        TLRPC$InputPeer tLRPC$InputPeer6 = tLRPC$InputPeer;
                                        String str30 = "query_id";
                                        if (messageObject3 == null) {
                                            TLRPC$Message tLRPC$Message19 = messageObject3.messageOwner;
                                            String str31 = (obj != 0 || hashMap7 == null || !hashMap7.containsKey("parentObject")) ? obj : hashMap7.get("parentObject");
                                            if (!messageObject3.isForwarded() && (hashMap7 == null || !hashMap7.containsKey("fwd_id"))) {
                                                if (messageObject3.isDice()) {
                                                    str27 = messageObject3.getDiceEmoji();
                                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                    obj3 = "parentObject";
                                                    str6 = "http";
                                                    obj2 = "fwd_id";
                                                    str28 = "";
                                                    str26 = str28;
                                                    c4 = 11;
                                                    tLRPC$MessageMedia3 = tLRPC$MessageMedia;
                                                    tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                    tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                } else {
                                                    obj3 = "parentObject";
                                                    if (messageObject3.type != 0 && !messageObject3.isAnimatedEmoji()) {
                                                        int i22 = messageObject3.type;
                                                        obj2 = "fwd_id";
                                                        if (i22 == 4) {
                                                            tLRPC$MessageMedia3 = tLRPC$Message19.media;
                                                            tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                            str6 = "http";
                                                            str26 = "";
                                                            c4 = 1;
                                                            tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                        } else {
                                                            if (i22 == 1) {
                                                                TLRPC$TL_photo tLRPC$TL_photo5 = (TLRPC$TL_photo) tLRPC$Message19.media.photo;
                                                                String str32 = messageObject3.messageOwner.message;
                                                                if (str32 != null) {
                                                                    str28 = str32;
                                                                }
                                                                tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                                tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                                str6 = "http";
                                                                str26 = "";
                                                                c4 = 2;
                                                                tLRPC$TL_document3 = tLRPC$TL_document;
                                                                tLRPC$TL_photo4 = tLRPC$TL_photo5;
                                                            } else {
                                                                if (i22 != 3 && i22 != 5 && messageObject3.videoEditedInfo == null) {
                                                                    if (i22 == 12) {
                                                                        TLRPC$TL_userRequest_old2 tLRPC$TL_userRequest_old22 = new TLRPC$TL_userRequest_old2();
                                                                        TLRPC$MessageMedia tLRPC$MessageMedia4 = tLRPC$Message19.media;
                                                                        str6 = "http";
                                                                        tLRPC$TL_userRequest_old22.phone = tLRPC$MessageMedia4.phone_number;
                                                                        tLRPC$TL_userRequest_old22.first_name = tLRPC$MessageMedia4.first_name;
                                                                        tLRPC$TL_userRequest_old22.last_name = tLRPC$MessageMedia4.last_name;
                                                                        TLRPC$TL_restrictionReason tLRPC$TL_restrictionReason = new TLRPC$TL_restrictionReason();
                                                                        tLRPC$TL_restrictionReason.platform = "";
                                                                        tLRPC$TL_restrictionReason.reason = "";
                                                                        tLRPC$TL_restrictionReason.text = tLRPC$Message19.media.vcard;
                                                                        tLRPC$TL_userRequest_old22.restriction_reason.add(tLRPC$TL_restrictionReason);
                                                                        str26 = "";
                                                                        tLRPC$TL_userRequest_old22.id = tLRPC$Message19.media.user_id;
                                                                        tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                                        tLRPC$TL_document3 = tLRPC$TL_document;
                                                                        tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                                        tLRPC$TL_userRequest_old2 = tLRPC$TL_userRequest_old22;
                                                                        c4 = 6;
                                                                    } else {
                                                                        str6 = "http";
                                                                        str26 = "";
                                                                        if (i22 != 8 && i22 != 9 && i22 != 13 && i22 != 14 && i22 != 15) {
                                                                            if (i22 == 2) {
                                                                                TLRPC$TL_document tLRPC$TL_document4 = (TLRPC$TL_document) tLRPC$Message19.media.document;
                                                                                String str33 = messageObject3.messageOwner.message;
                                                                                if (str33 != null) {
                                                                                    tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                                                    tLRPC$TL_document3 = tLRPC$TL_document4;
                                                                                    str28 = str33;
                                                                                    c4 = '\b';
                                                                                    tLRPC$MessageMedia3 = tLRPC$MessageMedia;
                                                                                    tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                                                    if (hashMap7 != null || !hashMap7.containsKey(str30)) {
                                                                                        str = str27;
                                                                                    } else {
                                                                                        str = str27;
                                                                                        c4 = '\t';
                                                                                    }
                                                                                    int i23 = tLRPC$Message19.media.ttl_seconds;
                                                                                    i6 = i23 > 0 ? i23 : i2;
                                                                                    tLRPC$TL_photo2 = tLRPC$TL_photo4;
                                                                                    str7 = str30;
                                                                                    hashMap2 = hashMap7;
                                                                                    tLRPC$TL_document2 = tLRPC$TL_document3;
                                                                                    tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll3;
                                                                                    tLRPC$WebPage2 = tLRPC$WebPage5;
                                                                                    str5 = str28;
                                                                                    c = c4;
                                                                                    str9 = str31;
                                                                                    str8 = str26;
                                                                                    delayedMessage = null;
                                                                                    sendMessagesHelper = this;
                                                                                    z6 = z2;
                                                                                    tLRPC$Message2 = tLRPC$Message19;
                                                                                    tLRPC$Message4 = tLRPC$MessageMedia3;
                                                                                    tLRPC$User2 = tLRPC$TL_userRequest_old2;
                                                                                    j3 = clientUserId;
                                                                                    tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                                                    z5 = false;
                                                                                } else {
                                                                                    tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                                                    tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                                                    tLRPC$TL_document3 = tLRPC$TL_document4;
                                                                                    c4 = '\b';
                                                                                }
                                                                            } else if (i22 == 17) {
                                                                                tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                                                tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                                                tLRPC$TL_document3 = tLRPC$TL_document;
                                                                                tLRPC$TL_messageMediaPoll3 = (TLRPC$TL_messageMediaPoll) tLRPC$Message19.media;
                                                                                c4 = '\n';
                                                                            } else {
                                                                                tLRPC$MessageMedia3 = tLRPC$MessageMedia;
                                                                                tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                                                tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                                                tLRPC$TL_document3 = tLRPC$TL_document;
                                                                                tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                                                if (hashMap7 != null) {
                                                                                }
                                                                                str = str27;
                                                                                int i232 = tLRPC$Message19.media.ttl_seconds;
                                                                                if (i232 > 0) {
                                                                                }
                                                                                tLRPC$TL_photo2 = tLRPC$TL_photo4;
                                                                                str7 = str30;
                                                                                hashMap2 = hashMap7;
                                                                                tLRPC$TL_document2 = tLRPC$TL_document3;
                                                                                tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll3;
                                                                                tLRPC$WebPage2 = tLRPC$WebPage5;
                                                                                str5 = str28;
                                                                                c = c4;
                                                                                str9 = str31;
                                                                                str8 = str26;
                                                                                delayedMessage = null;
                                                                                sendMessagesHelper = this;
                                                                                z6 = z2;
                                                                                tLRPC$Message2 = tLRPC$Message19;
                                                                                tLRPC$Message4 = tLRPC$MessageMedia3;
                                                                                tLRPC$User2 = tLRPC$TL_userRequest_old2;
                                                                                j3 = clientUserId;
                                                                                tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                                                z5 = false;
                                                                            }
                                                                        }
                                                                        TLRPC$TL_document tLRPC$TL_document5 = (TLRPC$TL_document) tLRPC$Message19.media.document;
                                                                        String str34 = messageObject3.messageOwner.message;
                                                                        if (str34 != null) {
                                                                            tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                                            tLRPC$TL_document3 = tLRPC$TL_document5;
                                                                            str28 = str34;
                                                                            c4 = 7;
                                                                            tLRPC$MessageMedia3 = tLRPC$MessageMedia;
                                                                            tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                                            if (hashMap7 != null) {
                                                                            }
                                                                            str = str27;
                                                                            int i2322 = tLRPC$Message19.media.ttl_seconds;
                                                                            if (i2322 > 0) {
                                                                            }
                                                                            tLRPC$TL_photo2 = tLRPC$TL_photo4;
                                                                            str7 = str30;
                                                                            hashMap2 = hashMap7;
                                                                            tLRPC$TL_document2 = tLRPC$TL_document3;
                                                                            tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll3;
                                                                            tLRPC$WebPage2 = tLRPC$WebPage5;
                                                                            str5 = str28;
                                                                            c = c4;
                                                                            str9 = str31;
                                                                            str8 = str26;
                                                                            delayedMessage = null;
                                                                            sendMessagesHelper = this;
                                                                            z6 = z2;
                                                                            tLRPC$Message2 = tLRPC$Message19;
                                                                            tLRPC$Message4 = tLRPC$MessageMedia3;
                                                                            tLRPC$User2 = tLRPC$TL_userRequest_old2;
                                                                            j3 = clientUserId;
                                                                            tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                                            z5 = false;
                                                                        } else {
                                                                            tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                                            tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                                            tLRPC$TL_document3 = tLRPC$TL_document5;
                                                                            c4 = 7;
                                                                        }
                                                                    }
                                                                }
                                                                str6 = "http";
                                                                str26 = "";
                                                                TLRPC$TL_document tLRPC$TL_document6 = (TLRPC$TL_document) tLRPC$Message19.media.document;
                                                                String str35 = messageObject3.messageOwner.message;
                                                                if (str35 != null) {
                                                                    tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                                    tLRPC$TL_document3 = tLRPC$TL_document6;
                                                                    str28 = str35;
                                                                    c4 = 3;
                                                                    tLRPC$MessageMedia3 = tLRPC$MessageMedia;
                                                                    tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                                    if (hashMap7 != null) {
                                                                    }
                                                                    str = str27;
                                                                    int i23222 = tLRPC$Message19.media.ttl_seconds;
                                                                    if (i23222 > 0) {
                                                                    }
                                                                    tLRPC$TL_photo2 = tLRPC$TL_photo4;
                                                                    str7 = str30;
                                                                    hashMap2 = hashMap7;
                                                                    tLRPC$TL_document2 = tLRPC$TL_document3;
                                                                    tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll3;
                                                                    tLRPC$WebPage2 = tLRPC$WebPage5;
                                                                    str5 = str28;
                                                                    c = c4;
                                                                    str9 = str31;
                                                                    str8 = str26;
                                                                    delayedMessage = null;
                                                                    sendMessagesHelper = this;
                                                                    z6 = z2;
                                                                    tLRPC$Message2 = tLRPC$Message19;
                                                                    tLRPC$Message4 = tLRPC$MessageMedia3;
                                                                    tLRPC$User2 = tLRPC$TL_userRequest_old2;
                                                                    j3 = clientUserId;
                                                                    tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                                    z5 = false;
                                                                } else {
                                                                    tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                                    tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                                    tLRPC$TL_document3 = tLRPC$TL_document6;
                                                                    c4 = 3;
                                                                }
                                                            }
                                                            tLRPC$MessageMedia3 = tLRPC$MessageMedia;
                                                            if (hashMap7 != null) {
                                                            }
                                                            str = str27;
                                                            int i232222 = tLRPC$Message19.media.ttl_seconds;
                                                            if (i232222 > 0) {
                                                            }
                                                            tLRPC$TL_photo2 = tLRPC$TL_photo4;
                                                            str7 = str30;
                                                            hashMap2 = hashMap7;
                                                            tLRPC$TL_document2 = tLRPC$TL_document3;
                                                            tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll3;
                                                            tLRPC$WebPage2 = tLRPC$WebPage5;
                                                            str5 = str28;
                                                            c = c4;
                                                            str9 = str31;
                                                            str8 = str26;
                                                            delayedMessage = null;
                                                            sendMessagesHelper = this;
                                                            z6 = z2;
                                                            tLRPC$Message2 = tLRPC$Message19;
                                                            tLRPC$Message4 = tLRPC$MessageMedia3;
                                                            tLRPC$User2 = tLRPC$TL_userRequest_old2;
                                                            j3 = clientUserId;
                                                            tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                            z5 = false;
                                                        }
                                                    }
                                                    str6 = "http";
                                                    obj2 = "fwd_id";
                                                    str26 = "";
                                                    if (!(messageObject3.messageOwner.media instanceof TLRPC$TL_messageMediaGame)) {
                                                        str27 = tLRPC$Message19.message;
                                                    }
                                                    tLRPC$MessageMedia3 = tLRPC$MessageMedia;
                                                    tLRPC$TL_photo4 = tLRPC$TL_photo;
                                                    tLRPC$TL_userRequest_old2 = tLRPC$User;
                                                    tLRPC$TL_document3 = tLRPC$TL_document;
                                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll;
                                                    c4 = 0;
                                                    if (hashMap7 != null) {
                                                    }
                                                    str = str27;
                                                    int i2322222 = tLRPC$Message19.media.ttl_seconds;
                                                    if (i2322222 > 0) {
                                                    }
                                                    tLRPC$TL_photo2 = tLRPC$TL_photo4;
                                                    str7 = str30;
                                                    hashMap2 = hashMap7;
                                                    tLRPC$TL_document2 = tLRPC$TL_document3;
                                                    tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll3;
                                                    tLRPC$WebPage2 = tLRPC$WebPage5;
                                                    str5 = str28;
                                                    c = c4;
                                                    str9 = str31;
                                                    str8 = str26;
                                                    delayedMessage = null;
                                                    sendMessagesHelper = this;
                                                    z6 = z2;
                                                    tLRPC$Message2 = tLRPC$Message19;
                                                    tLRPC$Message4 = tLRPC$MessageMedia3;
                                                    tLRPC$User2 = tLRPC$TL_userRequest_old2;
                                                    j3 = clientUserId;
                                                    tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                    z5 = false;
                                                }
                                                tLRPC$TL_document3 = tLRPC$TL_document;
                                                if (hashMap7 != null) {
                                                }
                                                str = str27;
                                                int i23222222 = tLRPC$Message19.media.ttl_seconds;
                                                if (i23222222 > 0) {
                                                }
                                                tLRPC$TL_photo2 = tLRPC$TL_photo4;
                                                str7 = str30;
                                                hashMap2 = hashMap7;
                                                tLRPC$TL_document2 = tLRPC$TL_document3;
                                                tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll3;
                                                tLRPC$WebPage2 = tLRPC$WebPage5;
                                                str5 = str28;
                                                c = c4;
                                                str9 = str31;
                                                str8 = str26;
                                                delayedMessage = null;
                                                sendMessagesHelper = this;
                                                z6 = z2;
                                                tLRPC$Message2 = tLRPC$Message19;
                                                tLRPC$Message4 = tLRPC$MessageMedia3;
                                                tLRPC$User2 = tLRPC$TL_userRequest_old2;
                                                j3 = clientUserId;
                                                tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                z5 = false;
                                            }
                                            obj3 = "parentObject";
                                            str6 = "http";
                                            obj2 = "fwd_id";
                                            tLRPC$User2 = tLRPC$User;
                                            tLRPC$TL_document2 = tLRPC$TL_document;
                                            tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll;
                                            i6 = i2;
                                            tLRPC$Message2 = tLRPC$Message19;
                                            str = str27;
                                            str7 = str30;
                                            hashMap2 = hashMap7;
                                            tLRPC$WebPage2 = tLRPC$WebPage5;
                                            str5 = str28;
                                            j3 = clientUserId;
                                            str9 = str31;
                                            tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                            str8 = "";
                                            delayedMessage = null;
                                            z5 = false;
                                            c = 4;
                                            sendMessagesHelper = this;
                                            tLRPC$Message4 = tLRPC$MessageMedia;
                                            tLRPC$TL_photo2 = tLRPC$TL_photo;
                                            z6 = z2;
                                        } else {
                                            obj3 = "parentObject";
                                            str6 = "http";
                                            obj2 = "fwd_id";
                                            String str36 = "";
                                            try {
                                                TLRPC$TL_message_secret canSendStickers = DialogObject.isChatDialog(j) ? ChatObject.canSendStickers(getMessagesController().getChat(Long.valueOf(-j))) : 1;
                                                if (str27 != null) {
                                                    if (tLRPC$EncryptedChat != null) {
                                                        tLRPC$Message15 = new TLRPC$TL_message_secret();
                                                    } else {
                                                        tLRPC$Message15 = new TLRPC$TL_message();
                                                    }
                                                    if (tLRPC$EncryptedChat != null) {
                                                        try {
                                                            if (tLRPC$WebPage5 instanceof TLRPC$TL_webPagePending) {
                                                                if (tLRPC$WebPage5.url != null) {
                                                                    TLRPC$TL_webPageUrlPending tLRPC$TL_webPageUrlPending = new TLRPC$TL_webPageUrlPending();
                                                                    tLRPC$TL_webPageUrlPending.url = tLRPC$WebPage5.url;
                                                                    tLRPC$WebPage5 = tLRPC$TL_webPageUrlPending;
                                                                } else {
                                                                    tLRPC$WebPage5 = null;
                                                                }
                                                            }
                                                        } catch (Exception e8) {
                                                            exc = e8;
                                                            tLRPC$Message3 = tLRPC$Message15;
                                                            i5 = i;
                                                            messageObject4 = null;
                                                            i3 = i5;
                                                            tLRPC$Message = tLRPC$Message3;
                                                            FileLog.e(exc);
                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                            if (messageObject4 != null) {
                                                            }
                                                            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                            processSentMessage(tLRPC$Message.id);
                                                            return;
                                                        }
                                                    }
                                                    if (canSendStickers == 0 || str.length() >= 30 || tLRPC$WebPage5 != null) {
                                                        arrayList3 = arrayList;
                                                    } else {
                                                        arrayList3 = arrayList;
                                                        if (arrayList3 == null || arrayList.isEmpty()) {
                                                            str8 = str36;
                                                            if (getMessagesController().diceEmojies.contains(str27.replace("️", str8)) && tLRPC$EncryptedChat == null && i == 0) {
                                                                TLRPC$TL_messageMediaDice tLRPC$TL_messageMediaDice = new TLRPC$TL_messageMediaDice();
                                                                tLRPC$TL_messageMediaDice.emoticon = str27;
                                                                tLRPC$TL_messageMediaDice.value = -1;
                                                                tLRPC$Message15.media = tLRPC$TL_messageMediaDice;
                                                                delayedMessage7 = null;
                                                                z27 = false;
                                                                c4 = 11;
                                                                i21 = i2;
                                                                str7 = str30;
                                                                str22 = str8;
                                                                tLRPC$WebPage3 = tLRPC$WebPage5;
                                                            }
                                                            if (tLRPC$WebPage5 != null) {
                                                                tLRPC$Message15.media = new TLRPC$TL_messageMediaEmpty();
                                                            } else {
                                                                TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage = new TLRPC$TL_messageMediaWebPage();
                                                                tLRPC$Message15.media = tLRPC$TL_messageMediaWebPage;
                                                                tLRPC$TL_messageMediaWebPage.webpage = tLRPC$WebPage5;
                                                            }
                                                            c4 = (hashMap7 != null || !hashMap7.containsKey(str30)) ? (char) 0 : '\t';
                                                            tLRPC$Message15.message = str27;
                                                            delayedMessage7 = null;
                                                            z27 = false;
                                                            i21 = i2;
                                                            str7 = str30;
                                                            tLRPC$WebPage3 = tLRPC$WebPage5;
                                                            str22 = str28;
                                                        }
                                                    }
                                                    str8 = str36;
                                                    if (tLRPC$WebPage5 != null) {
                                                    }
                                                    if (hashMap7 != null) {
                                                    }
                                                    tLRPC$Message15.message = str27;
                                                    delayedMessage7 = null;
                                                    z27 = false;
                                                    i21 = i2;
                                                    str7 = str30;
                                                    tLRPC$WebPage3 = tLRPC$WebPage5;
                                                    str22 = str28;
                                                } else {
                                                    arrayList3 = arrayList;
                                                    str8 = str36;
                                                    if (tLRPC$TL_messageMediaPoll != null) {
                                                        if (tLRPC$EncryptedChat != null) {
                                                            tLRPC$Message18 = new TLRPC$TL_message_secret();
                                                        } else {
                                                            tLRPC$Message18 = new TLRPC$TL_message();
                                                        }
                                                        tLRPC$Message18.media = tLRPC$TL_messageMediaPoll;
                                                        delayedMessage7 = null;
                                                        i21 = i2;
                                                        tLRPC$Message15 = tLRPC$Message18;
                                                        str7 = str30;
                                                        tLRPC$WebPage3 = tLRPC$WebPage5;
                                                        str22 = str28;
                                                        z27 = false;
                                                        c4 = '\n';
                                                    } else if (tLRPC$MessageMedia != null) {
                                                        if (tLRPC$EncryptedChat != null) {
                                                            tLRPC$Message17 = new TLRPC$TL_message_secret();
                                                        } else {
                                                            tLRPC$Message17 = new TLRPC$TL_message();
                                                        }
                                                        tLRPC$Message17.media = tLRPC$MessageMedia;
                                                        if (hashMap7 == null || !hashMap7.containsKey(str30)) {
                                                            z27 = false;
                                                            c4 = 1;
                                                        } else {
                                                            z27 = false;
                                                            c4 = '\t';
                                                        }
                                                        i21 = i2;
                                                        clientUserId = clientUserId;
                                                        str7 = str30;
                                                        str22 = str28;
                                                        delayedMessage7 = null;
                                                        tLRPC$Message15 = tLRPC$Message17;
                                                        tLRPC$WebPage3 = tLRPC$WebPage5;
                                                        sendMessagesHelper = this;
                                                        if (arrayList3 != null) {
                                                            try {
                                                                if (!arrayList.isEmpty()) {
                                                                    tLRPC$Message15.entities = arrayList3;
                                                                    tLRPC$Message15.flags |= 128;
                                                                }
                                                            } catch (Exception e9) {
                                                                i5 = i;
                                                                exc = e9;
                                                                tLRPC$Message3 = tLRPC$Message15;
                                                                messageObject4 = null;
                                                                i3 = i5;
                                                                tLRPC$Message = tLRPC$Message3;
                                                                FileLog.e(exc);
                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                if (messageObject4 != null) {
                                                                }
                                                                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                processSentMessage(tLRPC$Message.id);
                                                                return;
                                                            }
                                                        }
                                                        if (str22 == null) {
                                                            tLRPC$Message15.message = str22;
                                                        } else if (tLRPC$Message15.message == null) {
                                                            tLRPC$Message15.message = str8;
                                                        }
                                                        if (tLRPC$Message15.attachPath == null) {
                                                            tLRPC$Message15.attachPath = str8;
                                                        }
                                                        int newMessageId = getUserConfig().getNewMessageId();
                                                        tLRPC$Message15.id = newMessageId;
                                                        tLRPC$Message15.local_id = newMessageId;
                                                        tLRPC$Message15.out = true;
                                                        if (z3 || tLRPC$InputPeer6 == null) {
                                                            tLRPC$WebPage4 = tLRPC$WebPage3;
                                                            hashMap6 = hashMap7;
                                                            str23 = str22;
                                                            tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                            if (tLRPC$Peer2 == null) {
                                                                tLRPC$Message15.from_id = tLRPC$Peer2;
                                                            } else {
                                                                TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
                                                                tLRPC$Message15.from_id = tLRPC$TL_peerUser;
                                                                j3 = clientUserId;
                                                                tLRPC$TL_peerUser.user_id = j3;
                                                                tLRPC$Message15.flags |= 256;
                                                                DelayedMessage delayedMessage8 = delayedMessage7;
                                                                getUserConfig().saveConfig(false);
                                                                tLRPC$Message4 = tLRPC$MessageMedia;
                                                                tLRPC$TL_photo2 = tLRPC$TL_photo;
                                                                tLRPC$TL_document2 = tLRPC$TL_document;
                                                                tLRPC$WebPage2 = tLRPC$WebPage4;
                                                                tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll;
                                                                hashMap2 = hashMap6;
                                                                str5 = str23;
                                                                z6 = z2;
                                                                str9 = obj;
                                                                z5 = z27;
                                                                c = c4;
                                                                delayedMessage = delayedMessage8;
                                                                i6 = i21;
                                                                tLRPC$Message2 = tLRPC$Message15;
                                                                tLRPC$User2 = tLRPC$User;
                                                            }
                                                        } else {
                                                            TLRPC$TL_peerChannel tLRPC$TL_peerChannel = new TLRPC$TL_peerChannel();
                                                            tLRPC$Message15.from_id = tLRPC$TL_peerChannel;
                                                            tLRPC$WebPage4 = tLRPC$WebPage3;
                                                            hashMap6 = hashMap7;
                                                            str23 = str22;
                                                            tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                            tLRPC$TL_peerChannel.channel_id = tLRPC$InputPeer2.channel_id;
                                                        }
                                                        j3 = clientUserId;
                                                        DelayedMessage delayedMessage82 = delayedMessage7;
                                                        getUserConfig().saveConfig(false);
                                                        tLRPC$Message4 = tLRPC$MessageMedia;
                                                        tLRPC$TL_photo2 = tLRPC$TL_photo;
                                                        tLRPC$TL_document2 = tLRPC$TL_document;
                                                        tLRPC$WebPage2 = tLRPC$WebPage4;
                                                        tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll;
                                                        hashMap2 = hashMap6;
                                                        str5 = str23;
                                                        z6 = z2;
                                                        str9 = obj;
                                                        z5 = z27;
                                                        c = c4;
                                                        delayedMessage = delayedMessage82;
                                                        i6 = i21;
                                                        tLRPC$Message2 = tLRPC$Message15;
                                                        tLRPC$User2 = tLRPC$User;
                                                    } else {
                                                        try {
                                                            if (tLRPC$TL_photo != null) {
                                                                if (tLRPC$EncryptedChat != null) {
                                                                    canSendStickers = new TLRPC$TL_message_secret();
                                                                } else {
                                                                    try {
                                                                        canSendStickers = new TLRPC$TL_message();
                                                                    } catch (Exception e10) {
                                                                        e6 = e10;
                                                                        i4 = i;
                                                                        exc = e6;
                                                                        messageObject4 = null;
                                                                        tLRPC$Message = null;
                                                                        i3 = i4;
                                                                        FileLog.e(exc);
                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                        if (messageObject4 != null) {
                                                                        }
                                                                        getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                        processSentMessage(tLRPC$Message.id);
                                                                        return;
                                                                    }
                                                                }
                                                                try {
                                                                    TLRPC$TL_messageMediaPhoto tLRPC$TL_messageMediaPhoto = new TLRPC$TL_messageMediaPhoto();
                                                                    canSendStickers.media = tLRPC$TL_messageMediaPhoto;
                                                                    int i24 = tLRPC$TL_messageMediaPhoto.flags | 3;
                                                                    tLRPC$TL_messageMediaPhoto.flags = i24;
                                                                    if (arrayList3 != null) {
                                                                        canSendStickers.entities = arrayList3;
                                                                    }
                                                                    if (i2 != 0) {
                                                                        tLRPC$TL_messageMediaPhoto.ttl_seconds = i2;
                                                                        canSendStickers.ttl = i2;
                                                                        tLRPC$TL_messageMediaPhoto.flags = i24 | 4;
                                                                    }
                                                                    tLRPC$TL_messageMediaPhoto.photo = tLRPC$TL_photo;
                                                                    if (hashMap7 == null || !hashMap7.containsKey(str30)) {
                                                                        str25 = str3;
                                                                        c2 = 2;
                                                                    } else {
                                                                        str25 = str3;
                                                                        c2 = '\t';
                                                                    }
                                                                    if (str25 == null || str3.length() <= 0) {
                                                                        c3 = c2;
                                                                    } else {
                                                                        c3 = c2;
                                                                        if (str25.startsWith(str6)) {
                                                                            canSendStickers.attachPath = str25;
                                                                            sendMessagesHelper = this;
                                                                            str6 = str6;
                                                                            c4 = c3;
                                                                            i21 = i2;
                                                                            tLRPC$TL_message = canSendStickers;
                                                                        } else {
                                                                            str6 = str6;
                                                                        }
                                                                    }
                                                                    sendMessagesHelper = this;
                                                                    canSendStickers.attachPath = FileLoader.getInstance(sendMessagesHelper.currentAccount).getPathToAttach(tLRPC$TL_photo.sizes.get(arrayList4.size() - 1).location, true).toString();
                                                                    c4 = c3;
                                                                    i21 = i2;
                                                                    tLRPC$TL_message = canSendStickers;
                                                                } catch (Exception e11) {
                                                                    e = e11;
                                                                    z4 = i;
                                                                    tLRPC$Message2 = canSendStickers;
                                                                    r2 = 0;
                                                                    exc = e;
                                                                    messageObject4 = r2;
                                                                    i3 = z4;
                                                                    tLRPC$Message = tLRPC$Message2;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                    if (messageObject4 != null) {
                                                                    }
                                                                    getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                    processSentMessage(tLRPC$Message.id);
                                                                    return;
                                                                }
                                                            } else {
                                                                sendMessagesHelper = this;
                                                                i21 = i2;
                                                                try {
                                                                    if (tLRPC$TL_game != null) {
                                                                        tLRPC$TL_message = new TLRPC$TL_message();
                                                                        TLRPC$TL_messageMediaGame tLRPC$TL_messageMediaGame = new TLRPC$TL_messageMediaGame();
                                                                        tLRPC$TL_message.media = tLRPC$TL_messageMediaGame;
                                                                        tLRPC$TL_messageMediaGame.game = tLRPC$TL_game;
                                                                        tLRPC$TL_message = tLRPC$TL_message;
                                                                        if (hashMap7 != null) {
                                                                            tLRPC$TL_message = tLRPC$TL_message;
                                                                        }
                                                                    } else {
                                                                        try {
                                                                            if (tLRPC$TL_messageMediaInvoice != null) {
                                                                                tLRPC$TL_message = new TLRPC$TL_message();
                                                                                try {
                                                                                    tLRPC$TL_message.media = tLRPC$TL_messageMediaInvoice;
                                                                                    tLRPC$TL_message = tLRPC$TL_message;
                                                                                    if (hashMap7 != null) {
                                                                                        tLRPC$TL_message = tLRPC$TL_message;
                                                                                    }
                                                                                } catch (Exception e12) {
                                                                                    e = e12;
                                                                                    tLRPC$Message2 = tLRPC$TL_message;
                                                                                    z4 = i;
                                                                                    r2 = 0;
                                                                                    exc = e;
                                                                                    messageObject4 = r2;
                                                                                    i3 = z4;
                                                                                    tLRPC$Message = tLRPC$Message2;
                                                                                    FileLog.e(exc);
                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                    if (messageObject4 != null) {
                                                                                    }
                                                                                    getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                    processSentMessage(tLRPC$Message.id);
                                                                                    return;
                                                                                }
                                                                            } else if (tLRPC$User != null) {
                                                                                if (tLRPC$EncryptedChat != null) {
                                                                                    tLRPC$Message16 = new TLRPC$TL_message_secret();
                                                                                } else {
                                                                                    tLRPC$Message16 = new TLRPC$TL_message();
                                                                                }
                                                                                TLRPC$TL_messageMediaContact tLRPC$TL_messageMediaContact = new TLRPC$TL_messageMediaContact();
                                                                                tLRPC$Message16.media = tLRPC$TL_messageMediaContact;
                                                                                clientUserId = clientUserId;
                                                                                tLRPC$TL_messageMediaContact.phone_number = tLRPC$User.phone;
                                                                                tLRPC$TL_messageMediaContact.first_name = tLRPC$User.first_name;
                                                                                tLRPC$TL_messageMediaContact.last_name = tLRPC$User.last_name;
                                                                                tLRPC$TL_messageMediaContact.user_id = tLRPC$User.id;
                                                                                if (!tLRPC$User.restriction_reason.isEmpty() && tLRPC$User.restriction_reason.get(0).text.startsWith("BEGIN:VCARD")) {
                                                                                    tLRPC$Message16.media.vcard = tLRPC$User.restriction_reason.get(0).text;
                                                                                } else {
                                                                                    tLRPC$Message16.media.vcard = str8;
                                                                                }
                                                                                TLRPC$MessageMedia tLRPC$MessageMedia5 = tLRPC$Message16.media;
                                                                                if (tLRPC$MessageMedia5.first_name == null) {
                                                                                    tLRPC$MessageMedia5.first_name = str8;
                                                                                    tLRPC$User.first_name = str8;
                                                                                }
                                                                                if (tLRPC$MessageMedia5.last_name == null) {
                                                                                    tLRPC$MessageMedia5.last_name = str8;
                                                                                    tLRPC$User.last_name = str8;
                                                                                }
                                                                                if (hashMap7 == null || !hashMap7.containsKey(str30)) {
                                                                                    tLRPC$Message15 = tLRPC$Message16;
                                                                                    str7 = str30;
                                                                                    str22 = str28;
                                                                                    delayedMessage7 = null;
                                                                                    z27 = false;
                                                                                    c4 = 6;
                                                                                } else {
                                                                                    tLRPC$Message15 = tLRPC$Message16;
                                                                                    str7 = str30;
                                                                                    str22 = str28;
                                                                                    delayedMessage7 = null;
                                                                                    z27 = false;
                                                                                    c4 = '\t';
                                                                                }
                                                                                tLRPC$WebPage3 = tLRPC$WebPage;
                                                                                if (arrayList3 != null) {
                                                                                }
                                                                                if (str22 == null) {
                                                                                }
                                                                                if (tLRPC$Message15.attachPath == null) {
                                                                                }
                                                                                int newMessageId2 = getUserConfig().getNewMessageId();
                                                                                tLRPC$Message15.id = newMessageId2;
                                                                                tLRPC$Message15.local_id = newMessageId2;
                                                                                tLRPC$Message15.out = true;
                                                                                if (z3) {
                                                                                }
                                                                                tLRPC$WebPage4 = tLRPC$WebPage3;
                                                                                hashMap6 = hashMap7;
                                                                                str23 = str22;
                                                                                tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                                                if (tLRPC$Peer2 == null) {
                                                                                }
                                                                            } else {
                                                                                clientUserId = clientUserId;
                                                                                HashMap<String, String> hashMap8 = hashMap7;
                                                                                TLRPC$TL_document tLRPC$TL_document7 = tLRPC$TL_document;
                                                                                if (tLRPC$TL_document7 != null) {
                                                                                    if (tLRPC$EncryptedChat != null) {
                                                                                        tLRPC$TL_message_secret = new TLRPC$TL_message_secret();
                                                                                    } else {
                                                                                        tLRPC$TL_message_secret = new TLRPC$TL_message();
                                                                                    }
                                                                                    try {
                                                                                        if (DialogObject.isChatDialog(j) && canSendStickers == 0) {
                                                                                            try {
                                                                                                int size = tLRPC$TL_document7.attributes.size();
                                                                                                int i25 = 0;
                                                                                                while (i25 < size) {
                                                                                                    int i26 = size;
                                                                                                    if (tLRPC$TL_document7.attributes.get(i25) instanceof TLRPC$TL_documentAttributeAnimated) {
                                                                                                        tLRPC$TL_document7.attributes.remove(i25);
                                                                                                        z28 = true;
                                                                                                        break;
                                                                                                    }
                                                                                                    i25++;
                                                                                                    size = i26;
                                                                                                }
                                                                                            } catch (Exception e13) {
                                                                                                i5 = i;
                                                                                                exc = e13;
                                                                                                tLRPC$Message3 = tLRPC$TL_message_secret;
                                                                                                messageObject4 = null;
                                                                                                i3 = i5;
                                                                                                tLRPC$Message = tLRPC$Message3;
                                                                                                FileLog.e(exc);
                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                                if (messageObject4 != null) {
                                                                                                }
                                                                                                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                processSentMessage(tLRPC$Message.id);
                                                                                                return;
                                                                                            }
                                                                                        }
                                                                                        z28 = false;
                                                                                        TLRPC$TL_messageMediaDocument tLRPC$TL_messageMediaDocument = new TLRPC$TL_messageMediaDocument();
                                                                                        tLRPC$TL_message_secret.media = tLRPC$TL_messageMediaDocument;
                                                                                        boolean z30 = z28;
                                                                                        int i27 = tLRPC$TL_messageMediaDocument.flags | 3;
                                                                                        tLRPC$TL_messageMediaDocument.flags = i27;
                                                                                        if (i21 != 0) {
                                                                                            tLRPC$TL_messageMediaDocument.ttl_seconds = i21;
                                                                                            tLRPC$TL_message_secret.ttl = i21;
                                                                                            tLRPC$TL_messageMediaDocument.flags = i27 | 4;
                                                                                        }
                                                                                        tLRPC$TL_messageMediaDocument.document = tLRPC$TL_document7;
                                                                                        if (hashMap8 != null && hashMap8.containsKey(str30)) {
                                                                                            c4 = '\t';
                                                                                        } else if (MessageObject.isVideoSticker(tLRPC$TL_document) || (!MessageObject.isVideoDocument(tLRPC$TL_document) && !MessageObject.isRoundVideoDocument(tLRPC$TL_document) && videoEditedInfo == null)) {
                                                                                            c4 = MessageObject.isVoiceDocument(tLRPC$TL_document) ? '\b' : (char) 7;
                                                                                        } else {
                                                                                            c4 = 3;
                                                                                        }
                                                                                        if (videoEditedInfo != null) {
                                                                                            String string = videoEditedInfo.getString();
                                                                                            if (hashMap8 == null) {
                                                                                                hashMap8 = new HashMap<>();
                                                                                            }
                                                                                            hashMap8.put("ve", string);
                                                                                        }
                                                                                        if (tLRPC$EncryptedChat != null && tLRPC$TL_document7.dc_id > 0 && !MessageObject.isStickerDocument(tLRPC$TL_document) && !MessageObject.isAnimatedStickerDocument(tLRPC$TL_document7, true)) {
                                                                                            tLRPC$TL_message_secret.attachPath = FileLoader.getInstance(sendMessagesHelper.currentAccount).getPathToAttach(tLRPC$TL_document7).toString();
                                                                                        } else {
                                                                                            tLRPC$TL_message_secret.attachPath = str3;
                                                                                        }
                                                                                        if (tLRPC$EncryptedChat != null && (MessageObject.isStickerDocument(tLRPC$TL_document) || MessageObject.isAnimatedStickerDocument(tLRPC$TL_document7, true))) {
                                                                                            int i28 = 0;
                                                                                            tLRPC$TL_message2 = str36;
                                                                                            while (i28 < tLRPC$TL_document7.attributes.size()) {
                                                                                                TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$TL_document7.attributes.get(i28);
                                                                                                if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeSticker) {
                                                                                                    tLRPC$TL_document7.attributes.remove(i28);
                                                                                                    TLRPC$TL_documentAttributeSticker_layer55 tLRPC$TL_documentAttributeSticker_layer55 = new TLRPC$TL_documentAttributeSticker_layer55();
                                                                                                    tLRPC$TL_document7.attributes.add(tLRPC$TL_documentAttributeSticker_layer55);
                                                                                                    tLRPC$TL_documentAttributeSticker_layer55.alt = tLRPC$DocumentAttribute.alt;
                                                                                                    TLRPC$InputStickerSet tLRPC$InputStickerSet = tLRPC$DocumentAttribute.stickerset;
                                                                                                    try {
                                                                                                        if (tLRPC$InputStickerSet != null) {
                                                                                                            if (tLRPC$InputStickerSet instanceof TLRPC$TL_inputStickerSetShortName) {
                                                                                                                str24 = tLRPC$InputStickerSet.short_name;
                                                                                                                str7 = str30;
                                                                                                                tLRPC$TL_message4 = tLRPC$TL_message_secret;
                                                                                                            } else {
                                                                                                                str7 = str30;
                                                                                                                tLRPC$TL_message4 = tLRPC$TL_message_secret;
                                                                                                                str24 = getMediaDataController().getStickerSetName(tLRPC$DocumentAttribute.stickerset.id);
                                                                                                            }
                                                                                                            if (!TextUtils.isEmpty(str24)) {
                                                                                                                TLRPC$TL_inputStickerSetShortName tLRPC$TL_inputStickerSetShortName = new TLRPC$TL_inputStickerSetShortName();
                                                                                                                tLRPC$TL_documentAttributeSticker_layer55.stickerset = tLRPC$TL_inputStickerSetShortName;
                                                                                                                tLRPC$TL_inputStickerSetShortName.short_name = str24;
                                                                                                                delayedMessage7 = null;
                                                                                                            } else {
                                                                                                                if (tLRPC$DocumentAttribute.stickerset instanceof TLRPC$TL_inputStickerSetID) {
                                                                                                                    delayedMessage7 = new DelayedMessage(j);
                                                                                                                    delayedMessage7.encryptedChat = tLRPC$EncryptedChat;
                                                                                                                    delayedMessage7.locationParent = tLRPC$TL_documentAttributeSticker_layer55;
                                                                                                                    delayedMessage7.type = 5;
                                                                                                                    delayedMessage7.parentObject = tLRPC$DocumentAttribute.stickerset;
                                                                                                                } else {
                                                                                                                    delayedMessage7 = null;
                                                                                                                }
                                                                                                                tLRPC$TL_documentAttributeSticker_layer55.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                                                            }
                                                                                                            z27 = z30;
                                                                                                            tLRPC$WebPage3 = tLRPC$WebPage;
                                                                                                            hashMap7 = hashMap8;
                                                                                                            str22 = str28;
                                                                                                            tLRPC$Message15 = tLRPC$TL_message4;
                                                                                                        } else {
                                                                                                            str7 = str30;
                                                                                                            tLRPC$TL_message3 = tLRPC$TL_message_secret;
                                                                                                            tLRPC$TL_documentAttributeSticker_layer55.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                                                            z27 = z30;
                                                                                                            tLRPC$WebPage3 = tLRPC$WebPage;
                                                                                                            hashMap7 = hashMap8;
                                                                                                            str22 = str28;
                                                                                                            tLRPC$Message15 = tLRPC$TL_message3;
                                                                                                            delayedMessage7 = null;
                                                                                                        }
                                                                                                    } catch (Exception e14) {
                                                                                                        e7 = e14;
                                                                                                        i5 = i;
                                                                                                        exc = e7;
                                                                                                        tLRPC$Message3 = tLRPC$TL_message2;
                                                                                                        messageObject4 = null;
                                                                                                        i3 = i5;
                                                                                                        tLRPC$Message = tLRPC$Message3;
                                                                                                        FileLog.e(exc);
                                                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                                        if (messageObject4 != null) {
                                                                                                        }
                                                                                                        getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                        processSentMessage(tLRPC$Message.id);
                                                                                                        return;
                                                                                                    }
                                                                                                } else {
                                                                                                    tLRPC$TL_message2 = tLRPC$TL_message_secret;
                                                                                                    i28++;
                                                                                                    tLRPC$TL_document7 = tLRPC$TL_document;
                                                                                                    str30 = str30;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        str7 = str30;
                                                                                        tLRPC$TL_message3 = tLRPC$TL_message_secret;
                                                                                        z27 = z30;
                                                                                        tLRPC$WebPage3 = tLRPC$WebPage;
                                                                                        hashMap7 = hashMap8;
                                                                                        str22 = str28;
                                                                                        tLRPC$Message15 = tLRPC$TL_message3;
                                                                                        delayedMessage7 = null;
                                                                                    } catch (Exception e15) {
                                                                                        e7 = e15;
                                                                                        tLRPC$TL_message2 = tLRPC$TL_message_secret;
                                                                                    }
                                                                                } else {
                                                                                    str7 = str30;
                                                                                    tLRPC$WebPage3 = tLRPC$WebPage;
                                                                                    hashMap7 = hashMap8;
                                                                                    str22 = str28;
                                                                                    delayedMessage7 = null;
                                                                                    tLRPC$Message15 = null;
                                                                                    z27 = false;
                                                                                }
                                                                                if (arrayList3 != null) {
                                                                                }
                                                                                if (str22 == null) {
                                                                                }
                                                                                if (tLRPC$Message15.attachPath == null) {
                                                                                }
                                                                                int newMessageId22 = getUserConfig().getNewMessageId();
                                                                                tLRPC$Message15.id = newMessageId22;
                                                                                tLRPC$Message15.local_id = newMessageId22;
                                                                                tLRPC$Message15.out = true;
                                                                                if (z3) {
                                                                                }
                                                                                tLRPC$WebPage4 = tLRPC$WebPage3;
                                                                                hashMap6 = hashMap7;
                                                                                str23 = str22;
                                                                                tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                                                if (tLRPC$Peer2 == null) {
                                                                                }
                                                                            }
                                                                        } catch (Exception e16) {
                                                                            exc = e16;
                                                                            i4 = i;
                                                                            messageObject4 = null;
                                                                            tLRPC$Message = null;
                                                                            i3 = i4;
                                                                            FileLog.e(exc);
                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                            if (messageObject4 != null) {
                                                                            }
                                                                            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                            processSentMessage(tLRPC$Message.id);
                                                                            return;
                                                                        }
                                                                    }
                                                                    tLRPC$Message15 = tLRPC$TL_message;
                                                                    tLRPC$WebPage3 = tLRPC$WebPage;
                                                                    if (arrayList3 != null) {
                                                                    }
                                                                    if (str22 == null) {
                                                                    }
                                                                    if (tLRPC$Message15.attachPath == null) {
                                                                    }
                                                                    int newMessageId222 = getUserConfig().getNewMessageId();
                                                                    tLRPC$Message15.id = newMessageId222;
                                                                    tLRPC$Message15.local_id = newMessageId222;
                                                                    tLRPC$Message15.out = true;
                                                                    if (z3) {
                                                                    }
                                                                    tLRPC$WebPage4 = tLRPC$WebPage3;
                                                                    hashMap6 = hashMap7;
                                                                    str23 = str22;
                                                                    tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                                    if (tLRPC$Peer2 == null) {
                                                                    }
                                                                } catch (Exception e17) {
                                                                    e6 = e17;
                                                                    i4 = i;
                                                                    exc = e6;
                                                                    messageObject4 = null;
                                                                    tLRPC$Message = null;
                                                                    i3 = i4;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                    if (messageObject4 != null) {
                                                                    }
                                                                    getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                    processSentMessage(tLRPC$Message.id);
                                                                    return;
                                                                }
                                                            }
                                                            clientUserId = clientUserId;
                                                            str7 = str30;
                                                            str22 = str28;
                                                            delayedMessage7 = null;
                                                            z27 = false;
                                                            tLRPC$Message15 = tLRPC$TL_message;
                                                            tLRPC$WebPage3 = tLRPC$WebPage;
                                                            if (arrayList3 != null) {
                                                            }
                                                            if (str22 == null) {
                                                            }
                                                            if (tLRPC$Message15.attachPath == null) {
                                                            }
                                                            int newMessageId2222 = getUserConfig().getNewMessageId();
                                                            tLRPC$Message15.id = newMessageId2222;
                                                            tLRPC$Message15.local_id = newMessageId2222;
                                                            tLRPC$Message15.out = true;
                                                            if (z3) {
                                                            }
                                                            tLRPC$WebPage4 = tLRPC$WebPage3;
                                                            hashMap6 = hashMap7;
                                                            str23 = str22;
                                                            tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                            if (tLRPC$Peer2 == null) {
                                                            }
                                                        } catch (Exception e18) {
                                                            e = e18;
                                                        }
                                                    }
                                                }
                                                sendMessagesHelper = this;
                                                if (arrayList3 != null) {
                                                }
                                                if (str22 == null) {
                                                }
                                                if (tLRPC$Message15.attachPath == null) {
                                                }
                                                int newMessageId22222 = getUserConfig().getNewMessageId();
                                                tLRPC$Message15.id = newMessageId22222;
                                                tLRPC$Message15.local_id = newMessageId22222;
                                                tLRPC$Message15.out = true;
                                                if (z3) {
                                                }
                                                tLRPC$WebPage4 = tLRPC$WebPage3;
                                                hashMap6 = hashMap7;
                                                str23 = str22;
                                                tLRPC$InputPeer2 = tLRPC$InputPeer6;
                                                if (tLRPC$Peer2 == null) {
                                                }
                                            } catch (Exception e19) {
                                                e6 = e19;
                                                i4 = i;
                                            }
                                        }
                                        if (!z6) {
                                            str10 = str9;
                                            try {
                                                tLRPC$User3 = tLRPC$User2;
                                                if (!MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount).getBoolean("silent_" + j, false)) {
                                                    z7 = false;
                                                    tLRPC$Message2.silent = z7;
                                                    if (tLRPC$Message2.random_id == 0) {
                                                        tLRPC$Message2.random_id = getNextRandomId();
                                                    }
                                                    if (hashMap2 != null && hashMap2.containsKey("bot")) {
                                                        if (tLRPC$EncryptedChat == null) {
                                                            String str37 = hashMap2.get("bot_name");
                                                            tLRPC$Message2.via_bot_name = str37;
                                                            if (str37 == null) {
                                                                tLRPC$Message2.via_bot_name = str8;
                                                            }
                                                        } else {
                                                            tLRPC$Message2.via_bot_id = Utilities.parseInt((CharSequence) hashMap2.get("bot")).intValue();
                                                        }
                                                        tLRPC$Message2.flags |= 2048;
                                                    }
                                                    tLRPC$Message2.params = hashMap2;
                                                    if (messageObject3 != null || !messageObject3.resendAsIs) {
                                                        if (i != 0) {
                                                            currentTime = i;
                                                        } else {
                                                            try {
                                                                currentTime = getConnectionsManager().getCurrentTime();
                                                            } catch (Exception e20) {
                                                                e = e20;
                                                                i20 = i;
                                                                exc = e;
                                                                i5 = i20;
                                                                tLRPC$Message3 = tLRPC$Message2;
                                                                messageObject4 = null;
                                                                i3 = i5;
                                                                tLRPC$Message = tLRPC$Message3;
                                                                FileLog.e(exc);
                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                if (messageObject4 != null) {
                                                                }
                                                                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                processSentMessage(tLRPC$Message.id);
                                                                return;
                                                            }
                                                        }
                                                        tLRPC$Message2.date = currentTime;
                                                        if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
                                                            if (i == 0 && z3) {
                                                                try {
                                                                    tLRPC$Message2.views = 1;
                                                                    tLRPC$Message2.flags |= 1024;
                                                                } catch (Exception e21) {
                                                                    exc = e21;
                                                                    i5 = i;
                                                                    tLRPC$Message3 = tLRPC$Message2;
                                                                    messageObject4 = null;
                                                                    i3 = i5;
                                                                    tLRPC$Message = tLRPC$Message3;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                    if (messageObject4 != null) {
                                                                    }
                                                                    getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                    processSentMessage(tLRPC$Message.id);
                                                                    return;
                                                                }
                                                            }
                                                            obj4 = "bot_name";
                                                            TLRPC$Chat chat2 = getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer2.channel_id));
                                                            if (chat2 != null) {
                                                                if (chat2.megagroup) {
                                                                    tLRPC$Message2.unread = true;
                                                                } else {
                                                                    tLRPC$Message2.post = true;
                                                                    if (chat2.signatures) {
                                                                        TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
                                                                        tLRPC$Message2.from_id = tLRPC$TL_peerUser2;
                                                                        tLRPC$TL_peerUser2.user_id = j3;
                                                                    }
                                                                }
                                                            }
                                                        } else {
                                                            obj4 = "bot_name";
                                                            tLRPC$Message2.unread = true;
                                                        }
                                                    } else {
                                                        obj4 = "bot_name";
                                                    }
                                                    tLRPC$Message2.flags |= 512;
                                                    tLRPC$Message2.dialog_id = j;
                                                    if (messageObject != null) {
                                                        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
                                                        tLRPC$Message2.reply_to = tLRPC$TL_messageReplyHeader;
                                                        if (tLRPC$EncryptedChat != null) {
                                                            tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                                            j4 = j3;
                                                            long j13 = messageObject.messageOwner.random_id;
                                                            if (j13 != 0) {
                                                                tLRPC$TL_messageReplyHeader.reply_to_random_id = j13;
                                                                tLRPC$Message2.flags |= 8;
                                                                tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject.getId();
                                                                if (messageObject2 != null && messageObject2 != messageObject) {
                                                                    tLRPC$Message2.reply_to.reply_to_top_id = messageObject2.getId();
                                                                    tLRPC$Message2.reply_to.flags |= 2;
                                                                }
                                                            }
                                                        } else {
                                                            tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                                            j4 = j3;
                                                        }
                                                        tLRPC$Message2.flags |= 8;
                                                        tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject.getId();
                                                        if (messageObject2 != null) {
                                                            tLRPC$Message2.reply_to.reply_to_top_id = messageObject2.getId();
                                                            tLRPC$Message2.reply_to.flags |= 2;
                                                        }
                                                    } else {
                                                        tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                                        j4 = j3;
                                                    }
                                                    j5 = j2;
                                                    if (j5 != 0) {
                                                        TLRPC$TL_messageReplies tLRPC$TL_messageReplies = new TLRPC$TL_messageReplies();
                                                        tLRPC$Message2.replies = tLRPC$TL_messageReplies;
                                                        tLRPC$TL_messageReplies.comments = true;
                                                        tLRPC$TL_messageReplies.channel_id = j5;
                                                        tLRPC$TL_messageReplies.flags |= 1;
                                                        tLRPC$Message2.flags |= 8388608;
                                                    }
                                                    if (tLRPC$ReplyMarkup != null && tLRPC$EncryptedChat == null) {
                                                        tLRPC$Message2.flags |= 64;
                                                        tLRPC$Message2.reply_markup = tLRPC$ReplyMarkup;
                                                    }
                                                    if (!DialogObject.isEncryptedDialog(j)) {
                                                        tLRPC$Message2.peer_id = getMessagesController().getPeer(j);
                                                        if (DialogObject.isUserDialog(j)) {
                                                            TLRPC$User user = getMessagesController().getUser(Long.valueOf(j));
                                                            if (user == null) {
                                                                sendMessagesHelper.processSentMessage(tLRPC$Message2.id);
                                                                return;
                                                            } else if (user.bot) {
                                                                tLRPC$Message2.unread = false;
                                                            }
                                                        }
                                                    } else {
                                                        TLRPC$TL_peerUser tLRPC$TL_peerUser3 = new TLRPC$TL_peerUser();
                                                        tLRPC$Message2.peer_id = tLRPC$TL_peerUser3;
                                                        long j14 = tLRPC$EncryptedChat.participant_id;
                                                        if (j14 == j4) {
                                                            tLRPC$TL_peerUser3.user_id = tLRPC$EncryptedChat.admin_id;
                                                        } else {
                                                            tLRPC$TL_peerUser3.user_id = j14;
                                                        }
                                                        if (i6 != 0) {
                                                            tLRPC$Message2.ttl = i6;
                                                        } else {
                                                            int i29 = tLRPC$EncryptedChat.ttl;
                                                            tLRPC$Message2.ttl = i29;
                                                            if (i29 != 0 && (tLRPC$MessageMedia2 = tLRPC$Message2.media) != null) {
                                                                tLRPC$MessageMedia2.ttl_seconds = i29;
                                                                tLRPC$MessageMedia2.flags |= 4;
                                                                if (tLRPC$Message2.ttl != 0 && tLRPC$Message2.media.document != null) {
                                                                    if (!MessageObject.isVoiceMessage(tLRPC$Message2)) {
                                                                        int i30 = 0;
                                                                        while (true) {
                                                                            if (i30 >= tLRPC$Message2.media.document.attributes.size()) {
                                                                                i19 = 0;
                                                                                break;
                                                                            }
                                                                            TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = tLRPC$Message2.media.document.attributes.get(i30);
                                                                            if (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeAudio) {
                                                                                i19 = tLRPC$DocumentAttribute2.duration;
                                                                                break;
                                                                            }
                                                                            i30++;
                                                                        }
                                                                        tLRPC$Message2.ttl = Math.max(tLRPC$Message2.ttl, i19 + 1);
                                                                    } else if (MessageObject.isVideoMessage(tLRPC$Message2) || MessageObject.isRoundVideoMessage(tLRPC$Message2)) {
                                                                        int i31 = 0;
                                                                        while (true) {
                                                                            if (i31 >= tLRPC$Message2.media.document.attributes.size()) {
                                                                                i18 = 0;
                                                                                break;
                                                                            }
                                                                            TLRPC$DocumentAttribute tLRPC$DocumentAttribute3 = tLRPC$Message2.media.document.attributes.get(i31);
                                                                            if (tLRPC$DocumentAttribute3 instanceof TLRPC$TL_documentAttributeVideo) {
                                                                                i18 = tLRPC$DocumentAttribute3.duration;
                                                                                break;
                                                                            }
                                                                            i31++;
                                                                        }
                                                                        tLRPC$Message2.ttl = Math.max(tLRPC$Message2.ttl, i18 + 1);
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        if (tLRPC$Message2.ttl != 0) {
                                                            if (!MessageObject.isVoiceMessage(tLRPC$Message2)) {
                                                            }
                                                        }
                                                    }
                                                    if (!MessageObject.isVoiceMessage(tLRPC$Message2) || MessageObject.isRoundVideoMessage(tLRPC$Message2)) {
                                                        tLRPC$Message2.media_unread = true;
                                                    }
                                                    if (tLRPC$Message2.from_id == null) {
                                                        tLRPC$Message2.from_id = tLRPC$Message2.peer_id;
                                                    }
                                                    tLRPC$Message2.send_state = 1;
                                                    if (hashMap2 != null) {
                                                        String str38 = hashMap2.get("groupId");
                                                        if (str38 != null) {
                                                            j6 = Utilities.parseLong(str38).longValue();
                                                            tLRPC$Message2.grouped_id = j6;
                                                            tLRPC$Message2.flags |= 131072;
                                                        } else {
                                                            j6 = 0;
                                                        }
                                                        z8 = hashMap2.get("final") != null;
                                                    } else {
                                                        j6 = 0;
                                                        z8 = false;
                                                    }
                                                    String str39 = str10;
                                                    messageObject5 = r2;
                                                    TLRPC$User tLRPC$User4 = tLRPC$User3;
                                                    Object obj10 = obj3;
                                                    Object obj11 = obj4;
                                                    String str40 = str6;
                                                    TLRPC$TL_photo tLRPC$TL_photo6 = tLRPC$TL_photo2;
                                                    j7 = j6;
                                                    String str41 = str4;
                                                    TLRPC$InputPeer tLRPC$InputPeer7 = tLRPC$InputPeer3;
                                                    String str42 = str7;
                                                    int i32 = i6;
                                                    String str43 = str8;
                                                    MessageObject messageObject13 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message2, messageObject, true, true);
                                                    messageObject5.sendAnimationData = sendAnimationData;
                                                    messageObject5.wasJustSent = true;
                                                    messageObject5.scheduled = i != 0;
                                                    if (!messageObject5.isForwarded()) {
                                                        try {
                                                            int i33 = messageObject5.type;
                                                            if (i33 != 3 && videoEditedInfo == null) {
                                                                if (i33 == 2) {
                                                                }
                                                            }
                                                            if (!TextUtils.isEmpty(tLRPC$Message2.attachPath)) {
                                                                messageObject5.attachPathExists = true;
                                                            }
                                                        } catch (Exception e22) {
                                                            exc = e22;
                                                            messageObject6 = messageObject5;
                                                            tLRPC$Message14 = tLRPC$Message2;
                                                            i3 = i;
                                                            messageObject4 = messageObject6;
                                                            tLRPC$Message = tLRPC$Message14;
                                                            FileLog.e(exc);
                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                            if (messageObject4 != null) {
                                                            }
                                                            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                            processSentMessage(tLRPC$Message.id);
                                                            return;
                                                        }
                                                    }
                                                    videoEditedInfo2 = messageObject5.videoEditedInfo;
                                                    if (videoEditedInfo2 != null || videoEditedInfo != null) {
                                                        videoEditedInfo2 = videoEditedInfo;
                                                    }
                                                    if (j7 == 0) {
                                                        try {
                                                            ArrayList<MessageObject> arrayList5 = new ArrayList<>();
                                                            arrayList5.add(messageObject5);
                                                            ArrayList<TLRPC$Message> arrayList6 = new ArrayList<>();
                                                            arrayList6.add(tLRPC$Message2);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0, i != 0);
                                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j, arrayList5, i != 0);
                                                            if (i == 0) {
                                                                messageObject5 = messageObject5;
                                                                i7 = 0;
                                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                            } else {
                                                                messageObject5 = messageObject5;
                                                                i7 = 0;
                                                            }
                                                            delayedMessage2 = delayedMessage;
                                                            i8 = i7;
                                                        } catch (Exception e23) {
                                                            e = e23;
                                                            messageObject5 = messageObject5;
                                                            tLRPC$Message6 = tLRPC$Message2;
                                                            messageObject7 = messageObject5;
                                                            tLRPC$Message5 = tLRPC$Message6;
                                                            exc = e;
                                                            messageObject6 = messageObject7;
                                                            tLRPC$Message14 = tLRPC$Message5;
                                                            i3 = i;
                                                            messageObject4 = messageObject6;
                                                            tLRPC$Message = tLRPC$Message14;
                                                            FileLog.e(exc);
                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                            if (messageObject4 != null) {
                                                                messageObject4.messageOwner.send_state = 2;
                                                            }
                                                            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                            processSentMessage(tLRPC$Message.id);
                                                            return;
                                                        }
                                                    } else {
                                                        messageObject5 = messageObject5;
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        i8 = 0;
                                                        i8 = 0;
                                                        try {
                                                            ArrayList<DelayedMessage> arrayList7 = sendMessagesHelper.delayedMessages.get("group_" + j7);
                                                            if (arrayList7 != null) {
                                                                delayedMessage = arrayList7.get(0);
                                                            }
                                                            if (delayedMessage == null) {
                                                                delayedMessage2 = new DelayedMessage(j);
                                                                delayedMessage2.initForGroup(j7);
                                                                delayedMessage2.encryptedChat = tLRPC$EncryptedChat;
                                                                delayedMessage2.scheduled = i != 0;
                                                            } else {
                                                                delayedMessage2 = delayedMessage;
                                                            }
                                                            delayedMessage2.performMediaUpload = false;
                                                            delayedMessage2.photoSize = null;
                                                            delayedMessage2.videoEditedInfo = null;
                                                            delayedMessage2.httpLocation = null;
                                                            if (z8) {
                                                                delayedMessage2.finalGroupMessage = tLRPC$Message2.id;
                                                            }
                                                        } catch (Exception e24) {
                                                            e = e24;
                                                            r2 = messageObject5;
                                                            z4 = i;
                                                            exc = e;
                                                            messageObject4 = r2;
                                                            i3 = z4;
                                                            tLRPC$Message = tLRPC$Message2;
                                                            FileLog.e(exc);
                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                            if (messageObject4 != null) {
                                                            }
                                                            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                            processSentMessage(tLRPC$Message.id);
                                                            return;
                                                        }
                                                    }
                                                    if (BuildVars.LOGS_ENABLED) {
                                                        tLRPC$InputPeer4 = tLRPC$InputPeer7;
                                                        if (tLRPC$InputPeer4 != null) {
                                                            StringBuilder sb = new StringBuilder();
                                                            sb.append("send message user_id = ");
                                                            j8 = j7;
                                                            sb.append(tLRPC$InputPeer4.user_id);
                                                            sb.append(" chat_id = ");
                                                            sb.append(tLRPC$InputPeer4.chat_id);
                                                            sb.append(" channel_id = ");
                                                            sb.append(tLRPC$InputPeer4.channel_id);
                                                            sb.append(" access_hash = ");
                                                            sb.append(tLRPC$InputPeer4.access_hash);
                                                            sb.append(" notify = ");
                                                            sb.append(z2);
                                                            sb.append(" silent = ");
                                                            boolean z31 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount).getBoolean("silent_" + j, false);
                                                            sb.append(z31);
                                                            FileLog.d(sb.toString());
                                                            z4 = z31;
                                                        } else {
                                                            j8 = j7;
                                                            z4 = i8;
                                                        }
                                                    } else {
                                                        j8 = j7;
                                                        tLRPC$InputPeer4 = tLRPC$InputPeer7;
                                                        z4 = i8;
                                                    }
                                                    r2 = c;
                                                    if (r2 != 0 && (r2 != 9 || str == null || tLRPC$EncryptedChat == null)) {
                                                        try {
                                                            if (r2 >= 1 && r2 <= 3) {
                                                                if (tLRPC$EncryptedChat == null) {
                                                                    if (r2 == 1) {
                                                                        TLRPC$MessageMedia tLRPC$MessageMedia6 = tLRPC$Message4;
                                                                        if (tLRPC$MessageMedia6 instanceof TLRPC$TL_messageMediaVenue) {
                                                                            tLRPC$InputMedia = new TLRPC$TL_inputMediaVenue();
                                                                            tLRPC$InputMedia.address = tLRPC$MessageMedia6.address;
                                                                            tLRPC$InputMedia.title = tLRPC$MessageMedia6.title;
                                                                            tLRPC$InputMedia.provider = tLRPC$MessageMedia6.provider;
                                                                            tLRPC$InputMedia.venue_id = tLRPC$MessageMedia6.venue_id;
                                                                            tLRPC$InputMedia.venue_type = str43;
                                                                        } else if (tLRPC$MessageMedia6 instanceof TLRPC$TL_messageMediaGeoLive) {
                                                                            tLRPC$InputMedia = new TLRPC$TL_inputMediaGeoLive();
                                                                            tLRPC$InputMedia.period = tLRPC$MessageMedia6.period;
                                                                            int i34 = tLRPC$InputMedia.flags | 2;
                                                                            tLRPC$InputMedia.flags = i34;
                                                                            int i35 = tLRPC$MessageMedia6.heading;
                                                                            if (i35 != 0) {
                                                                                tLRPC$InputMedia.heading = i35;
                                                                                tLRPC$InputMedia.flags = i34 | 4;
                                                                            }
                                                                            int i36 = tLRPC$MessageMedia6.proximity_notification_radius;
                                                                            if (i36 != 0) {
                                                                                tLRPC$InputMedia.proximity_notification_radius = i36;
                                                                                tLRPC$InputMedia.flags |= 8;
                                                                            }
                                                                        } else {
                                                                            tLRPC$InputMedia = new TLRPC$TL_inputMediaGeoPoint();
                                                                        }
                                                                        TLRPC$TL_inputGeoPoint tLRPC$TL_inputGeoPoint = new TLRPC$TL_inputGeoPoint();
                                                                        tLRPC$InputMedia.geo_point = tLRPC$TL_inputGeoPoint;
                                                                        TLRPC$GeoPoint tLRPC$GeoPoint = tLRPC$MessageMedia6.geo;
                                                                        tLRPC$TL_inputGeoPoint.lat = tLRPC$GeoPoint.lat;
                                                                        tLRPC$TL_inputGeoPoint._long = tLRPC$GeoPoint._long;
                                                                        z15 = r2;
                                                                        tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                        tLRPC$TL_inputMediaUploadedDocument = tLRPC$InputMedia;
                                                                        hashMap3 = hashMap2;
                                                                        str17 = str41;
                                                                        z16 = false;
                                                                        messageObject10 = messageObject5;
                                                                        i13 = i;
                                                                        tLRPC$Message7 = tLRPC$Message2;
                                                                    } else {
                                                                        if (r2 == 2) {
                                                                            i16 = i32;
                                                                            z17 = r2;
                                                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                            i13 = i;
                                                                            tLRPC$Message8 = tLRPC$Message2;
                                                                            tLRPC$TL_photo3 = tLRPC$TL_photo6;
                                                                        } else if (r2 != 9 || (tLRPC$TL_photo3 = tLRPC$TL_photo6) == null) {
                                                                            try {
                                                                                if (r2 == 3) {
                                                                                    try {
                                                                                        TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument6 = new TLRPC$TL_inputMediaUploadedDocument();
                                                                                        TLRPC$TL_document tLRPC$TL_document8 = tLRPC$TL_document2;
                                                                                        tLRPC$TL_inputMediaUploadedDocument6.mime_type = tLRPC$TL_document8.mime_type;
                                                                                        tLRPC$TL_inputMediaUploadedDocument6.attributes = tLRPC$TL_document8.attributes;
                                                                                        if (!z5) {
                                                                                            if (MessageObject.isRoundVideoDocument(tLRPC$TL_document8)) {
                                                                                                videoEditedInfo4 = videoEditedInfo3;
                                                                                            } else if (videoEditedInfo3 != null) {
                                                                                                videoEditedInfo4 = videoEditedInfo3;
                                                                                                if (!videoEditedInfo4.muted) {
                                                                                                }
                                                                                            }
                                                                                            if (i32 != 0) {
                                                                                                tLRPC$TL_inputMediaUploadedDocument6.ttl_seconds = i32;
                                                                                                tLRPC$Message2.ttl = i32;
                                                                                                tLRPC$TL_inputMediaUploadedDocument6.flags |= 2;
                                                                                            }
                                                                                            if (hashMap2 != null) {
                                                                                                try {
                                                                                                    String str44 = hashMap2.get("masks");
                                                                                                    if (str44 != null) {
                                                                                                        SerializedData serializedData = new SerializedData(Utilities.hexToBytes(str44));
                                                                                                        tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                                        int i37 = 0;
                                                                                                        int readInt32 = serializedData.readInt32(false);
                                                                                                        boolean z32 = r2;
                                                                                                        tLRPC$Message2 = tLRPC$Message2;
                                                                                                        while (i37 < readInt32) {
                                                                                                            int i38 = readInt32;
                                                                                                            boolean z33 = z32;
                                                                                                            tLRPC$Message4 = tLRPC$Message2;
                                                                                                            try {
                                                                                                                tLRPC$TL_inputMediaUploadedDocument6.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData, serializedData.readInt32(false), false));
                                                                                                                i37++;
                                                                                                                readInt32 = i38;
                                                                                                                z32 = z33 ? 1 : 0;
                                                                                                                tLRPC$Message2 = tLRPC$Message4;
                                                                                                            } catch (Exception e25) {
                                                                                                                e4 = e25;
                                                                                                                r2 = messageObject5;
                                                                                                                exc = e4;
                                                                                                                i11 = i;
                                                                                                                messageObject9 = r2;
                                                                                                                tLRPC$Message = tLRPC$Message4;
                                                                                                                messageObject4 = messageObject9;
                                                                                                                i3 = i11;
                                                                                                                FileLog.e(exc);
                                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                                                if (messageObject4 != null) {
                                                                                                                }
                                                                                                                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                processSentMessage(tLRPC$Message.id);
                                                                                                                return;
                                                                                                            }
                                                                                                        }
                                                                                                        z19 = z32;
                                                                                                        tLRPC$Message4 = tLRPC$Message2;
                                                                                                        tLRPC$TL_inputMediaUploadedDocument6.flags |= 1;
                                                                                                        serializedData.cleanup();
                                                                                                        if (tLRPC$TL_document8.access_hash == 0) {
                                                                                                            tLRPC$TL_inputMediaUploadedDocument3 = tLRPC$TL_inputMediaUploadedDocument6;
                                                                                                            z16 = true;
                                                                                                        } else {
                                                                                                            ?? tLRPC$TL_inputMediaDocument = new TLRPC$TL_inputMediaDocument();
                                                                                                            TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                                                                                                            tLRPC$TL_inputMediaDocument.id = tLRPC$TL_inputDocument;
                                                                                                            tLRPC$TL_inputDocument.id = tLRPC$TL_document8.id;
                                                                                                            tLRPC$TL_inputDocument.access_hash = tLRPC$TL_document8.access_hash;
                                                                                                            byte[] bArr3 = tLRPC$TL_document8.file_reference;
                                                                                                            tLRPC$TL_inputDocument.file_reference = bArr3;
                                                                                                            if (bArr3 == null) {
                                                                                                                tLRPC$TL_inputDocument.file_reference = new byte[0];
                                                                                                            }
                                                                                                            if (hashMap2 != null && hashMap2.containsKey("query")) {
                                                                                                                tLRPC$TL_inputMediaDocument.query = hashMap2.get("query");
                                                                                                                tLRPC$TL_inputMediaDocument.flags |= 2;
                                                                                                            }
                                                                                                            tLRPC$TL_inputMediaUploadedDocument3 = tLRPC$TL_inputMediaDocument;
                                                                                                            z16 = false;
                                                                                                        }
                                                                                                        if (delayedMessage2 == null) {
                                                                                                            delayedMessage2 = new DelayedMessage(j);
                                                                                                            delayedMessage2.type = 1;
                                                                                                            messageObject11 = messageObject5;
                                                                                                            delayedMessage2.obj = messageObject11;
                                                                                                            str17 = str41;
                                                                                                            delayedMessage2.originalPath = str17;
                                                                                                            str20 = str39;
                                                                                                            delayedMessage2.parentObject = str20;
                                                                                                            delayedMessage2.scheduled = i != 0;
                                                                                                        } else {
                                                                                                            str20 = str39;
                                                                                                            messageObject11 = messageObject5;
                                                                                                            str17 = str41;
                                                                                                        }
                                                                                                        delayedMessage2.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument6;
                                                                                                        delayedMessage2.performMediaUpload = z16;
                                                                                                        if (!tLRPC$TL_document8.thumbs.isEmpty()) {
                                                                                                            TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$TL_document8.thumbs.get(0);
                                                                                                            if (!(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                                                                                                                delayedMessage2.photoSize = tLRPC$PhotoSize;
                                                                                                                delayedMessage2.locationParent = tLRPC$TL_document8;
                                                                                                            }
                                                                                                        }
                                                                                                        delayedMessage2.videoEditedInfo = videoEditedInfo4;
                                                                                                        i13 = i;
                                                                                                        messageObject12 = messageObject11;
                                                                                                        z20 = z19;
                                                                                                    }
                                                                                                } catch (Exception e26) {
                                                                                                    e = e26;
                                                                                                    tLRPC$Message6 = tLRPC$Message2;
                                                                                                    messageObject7 = messageObject5;
                                                                                                    tLRPC$Message5 = tLRPC$Message6;
                                                                                                    exc = e;
                                                                                                    messageObject6 = messageObject7;
                                                                                                    tLRPC$Message14 = tLRPC$Message5;
                                                                                                    i3 = i;
                                                                                                    messageObject4 = messageObject6;
                                                                                                    tLRPC$Message = tLRPC$Message14;
                                                                                                    FileLog.e(exc);
                                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                                    if (messageObject4 != null) {
                                                                                                    }
                                                                                                    getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                    processSentMessage(tLRPC$Message.id);
                                                                                                    return;
                                                                                                }
                                                                                            }
                                                                                            z19 = r2;
                                                                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                            tLRPC$Message4 = tLRPC$Message2;
                                                                                            if (tLRPC$TL_document8.access_hash == 0) {
                                                                                            }
                                                                                            if (delayedMessage2 == null) {
                                                                                            }
                                                                                            delayedMessage2.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument6;
                                                                                            delayedMessage2.performMediaUpload = z16;
                                                                                            if (!tLRPC$TL_document8.thumbs.isEmpty()) {
                                                                                            }
                                                                                            delayedMessage2.videoEditedInfo = videoEditedInfo4;
                                                                                            i13 = i;
                                                                                            messageObject12 = messageObject11;
                                                                                            z20 = z19;
                                                                                        }
                                                                                        videoEditedInfo4 = videoEditedInfo3;
                                                                                        tLRPC$TL_inputMediaUploadedDocument6.nosound_video = true;
                                                                                        if (BuildVars.DEBUG_VERSION) {
                                                                                            FileLog.d("nosound_video = true");
                                                                                        }
                                                                                        if (i32 != 0) {
                                                                                        }
                                                                                        if (hashMap2 != null) {
                                                                                        }
                                                                                        z19 = r2;
                                                                                        tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                        tLRPC$Message4 = tLRPC$Message2;
                                                                                        if (tLRPC$TL_document8.access_hash == 0) {
                                                                                        }
                                                                                        if (delayedMessage2 == null) {
                                                                                        }
                                                                                        delayedMessage2.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument6;
                                                                                        delayedMessage2.performMediaUpload = z16;
                                                                                        if (!tLRPC$TL_document8.thumbs.isEmpty()) {
                                                                                        }
                                                                                        delayedMessage2.videoEditedInfo = videoEditedInfo4;
                                                                                        i13 = i;
                                                                                        messageObject12 = messageObject11;
                                                                                        z20 = z19;
                                                                                    } catch (Exception e27) {
                                                                                        e = e27;
                                                                                        messageObject7 = messageObject5;
                                                                                        tLRPC$Message5 = tLRPC$Message2;
                                                                                        exc = e;
                                                                                        messageObject6 = messageObject7;
                                                                                        tLRPC$Message14 = tLRPC$Message5;
                                                                                        i3 = i;
                                                                                        messageObject4 = messageObject6;
                                                                                        tLRPC$Message = tLRPC$Message14;
                                                                                        FileLog.e(exc);
                                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                        if (messageObject4 != null) {
                                                                                        }
                                                                                        getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                        processSentMessage(tLRPC$Message.id);
                                                                                        return;
                                                                                    }
                                                                                } else {
                                                                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                    TLRPC$Message tLRPC$Message20 = tLRPC$Message2;
                                                                                    TLRPC$TL_document tLRPC$TL_document9 = tLRPC$TL_document2;
                                                                                    str17 = str41;
                                                                                    MessageObject messageObject14 = messageObject5;
                                                                                    if (r2 == 6) {
                                                                                        TLRPC$TL_inputMediaContact tLRPC$TL_inputMediaContact2 = new TLRPC$TL_inputMediaContact();
                                                                                        tLRPC$TL_inputMediaContact2.phone_number = tLRPC$User4.phone;
                                                                                        tLRPC$TL_inputMediaContact2.first_name = tLRPC$User4.first_name;
                                                                                        tLRPC$TL_inputMediaContact2.last_name = tLRPC$User4.last_name;
                                                                                        if (!tLRPC$User4.restriction_reason.isEmpty() && tLRPC$User4.restriction_reason.get(0).text.startsWith("BEGIN:VCARD")) {
                                                                                            tLRPC$TL_inputMediaContact2.vcard = tLRPC$User4.restriction_reason.get(0).text;
                                                                                        } else {
                                                                                            tLRPC$TL_inputMediaContact2.vcard = str43;
                                                                                        }
                                                                                        z21 = r2;
                                                                                        i13 = i;
                                                                                        hashMap3 = hashMap2;
                                                                                        str39 = str39;
                                                                                        tLRPC$Message11 = tLRPC$Message20;
                                                                                        tLRPC$TL_inputMediaContact = tLRPC$TL_inputMediaContact2;
                                                                                    } else {
                                                                                        ?? r14 = 7;
                                                                                        r14 = 7;
                                                                                        try {
                                                                                            try {
                                                                                                if (r2 == 7 || r2 == 9) {
                                                                                                    i13 = i;
                                                                                                    hashMap2 = hashMap2;
                                                                                                    try {
                                                                                                        if (str17 == null && str3 == null) {
                                                                                                            boolean z34 = r2;
                                                                                                            z24 = z34;
                                                                                                            if (tLRPC$TL_document9.access_hash != 0) {
                                                                                                                tLRPC$TL_inputMediaUploadedDocument4 = null;
                                                                                                                z22 = z34;
                                                                                                                if (tLRPC$TL_document9.access_hash != 0) {
                                                                                                                    z23 = tLRPC$TL_inputMediaUploadedDocument4 instanceof TLRPC$TL_inputMediaUploadedDocument;
                                                                                                                    tLRPC$TL_inputMediaUploadedDocument3 = tLRPC$TL_inputMediaUploadedDocument4;
                                                                                                                    str21 = str39;
                                                                                                                    tLRPC$Message4 = tLRPC$Message20;
                                                                                                                } else {
                                                                                                                    ?? tLRPC$TL_inputMediaDocument2 = new TLRPC$TL_inputMediaDocument();
                                                                                                                    TLRPC$TL_inputDocument tLRPC$TL_inputDocument2 = new TLRPC$TL_inputDocument();
                                                                                                                    tLRPC$TL_inputMediaDocument2.id = tLRPC$TL_inputDocument2;
                                                                                                                    str21 = str39;
                                                                                                                    tLRPC$Message4 = tLRPC$Message20;
                                                                                                                    tLRPC$TL_inputDocument2.id = tLRPC$TL_document9.id;
                                                                                                                    tLRPC$TL_inputDocument2.access_hash = tLRPC$TL_document9.access_hash;
                                                                                                                    byte[] bArr4 = tLRPC$TL_document9.file_reference;
                                                                                                                    tLRPC$TL_inputDocument2.file_reference = bArr4;
                                                                                                                    if (bArr4 == null) {
                                                                                                                        tLRPC$TL_inputDocument2.file_reference = new byte[0];
                                                                                                                    }
                                                                                                                    if (hashMap2 != null && hashMap2.containsKey("query")) {
                                                                                                                        tLRPC$TL_inputMediaDocument2.query = hashMap2.get("query");
                                                                                                                        tLRPC$TL_inputMediaDocument2.flags |= 2;
                                                                                                                    }
                                                                                                                    tLRPC$TL_inputMediaUploadedDocument3 = tLRPC$TL_inputMediaDocument2;
                                                                                                                    z23 = false;
                                                                                                                }
                                                                                                                if (tLRPC$TL_inputMediaUploadedDocument4 == null) {
                                                                                                                    if (delayedMessage2 == null) {
                                                                                                                        delayedMessage2 = new DelayedMessage(j);
                                                                                                                        delayedMessage2.type = 2;
                                                                                                                        delayedMessage2.obj = messageObject14;
                                                                                                                        delayedMessage2.originalPath = str17;
                                                                                                                        str20 = str21;
                                                                                                                        delayedMessage2.parentObject = str20;
                                                                                                                        i13 = i;
                                                                                                                        try {
                                                                                                                            delayedMessage2.scheduled = i13 != 0;
                                                                                                                        } catch (Exception e28) {
                                                                                                                            e = e28;
                                                                                                                            exc = e;
                                                                                                                            i11 = i13;
                                                                                                                            messageObject9 = messageObject14;
                                                                                                                            tLRPC$Message = tLRPC$Message4;
                                                                                                                            messageObject4 = messageObject9;
                                                                                                                            i3 = i11;
                                                                                                                            FileLog.e(exc);
                                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                                                            if (messageObject4 != null) {
                                                                                                                            }
                                                                                                                            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                            processSentMessage(tLRPC$Message.id);
                                                                                                                            return;
                                                                                                                        }
                                                                                                                    } else {
                                                                                                                        str20 = str21;
                                                                                                                        i13 = i;
                                                                                                                    }
                                                                                                                    delayedMessage2.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument4;
                                                                                                                    delayedMessage2.performMediaUpload = z23;
                                                                                                                    if (!tLRPC$TL_document9.thumbs.isEmpty()) {
                                                                                                                        TLRPC$PhotoSize tLRPC$PhotoSize2 = tLRPC$TL_document9.thumbs.get(0);
                                                                                                                        if (!(tLRPC$PhotoSize2 instanceof TLRPC$TL_photoStrippedSize)) {
                                                                                                                            delayedMessage2.photoSize = tLRPC$PhotoSize2;
                                                                                                                            delayedMessage2.locationParent = tLRPC$TL_document9;
                                                                                                                        }
                                                                                                                    }
                                                                                                                } else {
                                                                                                                    str20 = str21;
                                                                                                                    i13 = i;
                                                                                                                }
                                                                                                                z16 = z23;
                                                                                                                messageObject12 = messageObject14;
                                                                                                                z20 = z22;
                                                                                                            }
                                                                                                        } else {
                                                                                                            z24 = r2;
                                                                                                        }
                                                                                                        if (tLRPC$TL_document9.access_hash != 0) {
                                                                                                        }
                                                                                                        if (tLRPC$TL_inputMediaUploadedDocument4 == null) {
                                                                                                        }
                                                                                                        z16 = z23;
                                                                                                        messageObject12 = messageObject14;
                                                                                                        z20 = z22;
                                                                                                    } catch (Exception e29) {
                                                                                                        e2 = e29;
                                                                                                        tLRPC$Message4 = tLRPC$Message20;
                                                                                                        messageObject8 = messageObject14;
                                                                                                        i11 = i;
                                                                                                        exc = e2;
                                                                                                        messageObject9 = messageObject8;
                                                                                                        tLRPC$Message = tLRPC$Message4;
                                                                                                        messageObject4 = messageObject9;
                                                                                                        i3 = i11;
                                                                                                        FileLog.e(exc);
                                                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                                        if (messageObject4 != null) {
                                                                                                        }
                                                                                                        getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                        processSentMessage(tLRPC$Message.id);
                                                                                                        return;
                                                                                                    }
                                                                                                    TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument7 = new TLRPC$TL_inputMediaUploadedDocument();
                                                                                                    if (i32 != 0) {
                                                                                                        tLRPC$TL_inputMediaUploadedDocument7.ttl_seconds = i32;
                                                                                                        tLRPC$Message20.ttl = i32;
                                                                                                        tLRPC$TL_inputMediaUploadedDocument7.flags |= 2;
                                                                                                    }
                                                                                                    if (z5 || (!TextUtils.isEmpty(str3) && str3.toLowerCase().endsWith("mp4") && (hashMap2 == null || hashMap2.containsKey("forceDocument")))) {
                                                                                                        tLRPC$TL_inputMediaUploadedDocument7.nosound_video = true;
                                                                                                    }
                                                                                                    tLRPC$TL_inputMediaUploadedDocument7.force_file = hashMap2 != null && hashMap2.containsKey("forceDocument");
                                                                                                    tLRPC$TL_inputMediaUploadedDocument7.mime_type = tLRPC$TL_document9.mime_type;
                                                                                                    tLRPC$TL_inputMediaUploadedDocument7.attributes = tLRPC$TL_document9.attributes;
                                                                                                    tLRPC$TL_inputMediaUploadedDocument4 = tLRPC$TL_inputMediaUploadedDocument7;
                                                                                                    z22 = z24;
                                                                                                } else if (r2 == 8) {
                                                                                                    try {
                                                                                                        TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument8 = new TLRPC$TL_inputMediaUploadedDocument();
                                                                                                        tLRPC$TL_inputMediaUploadedDocument8.mime_type = tLRPC$TL_document9.mime_type;
                                                                                                        tLRPC$TL_inputMediaUploadedDocument8.attributes = tLRPC$TL_document9.attributes;
                                                                                                        if (i32 != 0) {
                                                                                                            tLRPC$TL_inputMediaUploadedDocument8.ttl_seconds = i32;
                                                                                                            tLRPC$Message13 = tLRPC$Message20;
                                                                                                            try {
                                                                                                                tLRPC$Message13.ttl = i32;
                                                                                                                tLRPC$TL_inputMediaUploadedDocument8.flags |= 2;
                                                                                                                tLRPC$Message13 = tLRPC$Message13;
                                                                                                            } catch (Exception e30) {
                                                                                                                e5 = e30;
                                                                                                                tLRPC$Message12 = tLRPC$Message13;
                                                                                                                exc = e5;
                                                                                                                i17 = i;
                                                                                                                r14 = tLRPC$Message12;
                                                                                                                tLRPC$Message = r14;
                                                                                                                messageObject4 = messageObject14;
                                                                                                                i3 = i17;
                                                                                                                FileLog.e(exc);
                                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                                                if (messageObject4 != null) {
                                                                                                                }
                                                                                                                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                processSentMessage(tLRPC$Message.id);
                                                                                                                return;
                                                                                                            }
                                                                                                        } else {
                                                                                                            tLRPC$Message13 = tLRPC$Message20;
                                                                                                        }
                                                                                                        HashMap<String, String> hashMap9 = hashMap2;
                                                                                                        if (tLRPC$TL_document9.access_hash == 0) {
                                                                                                            tLRPC$TL_inputMediaUploadedDocument5 = tLRPC$TL_inputMediaUploadedDocument8;
                                                                                                            z25 = r2;
                                                                                                            z26 = true;
                                                                                                            hashMap4 = hashMap9;
                                                                                                        } else {
                                                                                                            ?? tLRPC$TL_inputMediaDocument3 = new TLRPC$TL_inputMediaDocument();
                                                                                                            TLRPC$TL_inputDocument tLRPC$TL_inputDocument3 = new TLRPC$TL_inputDocument();
                                                                                                            tLRPC$TL_inputMediaDocument3.id = tLRPC$TL_inputDocument3;
                                                                                                            z25 = r2;
                                                                                                            tLRPC$TL_inputDocument3.id = tLRPC$TL_document9.id;
                                                                                                            tLRPC$TL_inputDocument3.access_hash = tLRPC$TL_document9.access_hash;
                                                                                                            byte[] bArr5 = tLRPC$TL_document9.file_reference;
                                                                                                            tLRPC$TL_inputDocument3.file_reference = bArr5;
                                                                                                            if (bArr5 == null) {
                                                                                                                tLRPC$TL_inputDocument3.file_reference = new byte[0];
                                                                                                            }
                                                                                                            hashMap4 = hashMap9;
                                                                                                            if (hashMap9 != null && hashMap4.containsKey("query")) {
                                                                                                                tLRPC$TL_inputMediaDocument3.query = hashMap4.get("query");
                                                                                                                tLRPC$TL_inputMediaDocument3.flags |= 2;
                                                                                                            }
                                                                                                            tLRPC$TL_inputMediaUploadedDocument5 = tLRPC$TL_inputMediaDocument3;
                                                                                                            z26 = false;
                                                                                                        }
                                                                                                        DelayedMessage delayedMessage9 = new DelayedMessage(j);
                                                                                                        delayedMessage9.type = 3;
                                                                                                        delayedMessage9.obj = messageObject14;
                                                                                                        delayedMessage9.parentObject = str39;
                                                                                                        delayedMessage9.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument8;
                                                                                                        delayedMessage9.performMediaUpload = z26;
                                                                                                        i13 = i;
                                                                                                        delayedMessage9.scheduled = i13 != 0;
                                                                                                        hashMap3 = hashMap4;
                                                                                                        z16 = z26;
                                                                                                        delayedMessage2 = delayedMessage9;
                                                                                                        boolean z35 = z25 ? 1 : 0;
                                                                                                        boolean z36 = z25 ? 1 : 0;
                                                                                                        z15 = z35;
                                                                                                        str39 = str39;
                                                                                                        tLRPC$Message7 = tLRPC$Message13;
                                                                                                        messageObject10 = messageObject14;
                                                                                                        tLRPC$TL_inputMediaUploadedDocument = tLRPC$TL_inputMediaUploadedDocument5;
                                                                                                    } catch (Exception e31) {
                                                                                                        e5 = e31;
                                                                                                        tLRPC$Message12 = tLRPC$Message20;
                                                                                                    }
                                                                                                } else {
                                                                                                    i13 = i;
                                                                                                    HashMap<String, String> hashMap10 = hashMap2;
                                                                                                    if (r2 == 10) {
                                                                                                        ?? tLRPC$TL_inputMediaPoll = new TLRPC$TL_inputMediaPoll();
                                                                                                        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll4 = tLRPC$TL_messageMediaPoll2;
                                                                                                        tLRPC$TL_inputMediaPoll.poll = tLRPC$TL_messageMediaPoll4.poll;
                                                                                                        if (hashMap10 != null && hashMap10.containsKey("answers")) {
                                                                                                            byte[] hexToBytes = Utilities.hexToBytes(hashMap10.get("answers"));
                                                                                                            if (hexToBytes.length > 0) {
                                                                                                                int i39 = 0;
                                                                                                                while (i39 < hexToBytes.length) {
                                                                                                                    tLRPC$TL_inputMediaPoll.correct_answers.add(new byte[]{hexToBytes[i39]});
                                                                                                                    i39++;
                                                                                                                    hashMap10 = hashMap10;
                                                                                                                }
                                                                                                                hashMap5 = hashMap10;
                                                                                                                tLRPC$TL_inputMediaPoll.flags |= 1;
                                                                                                                tLRPC$PollResults = tLRPC$TL_messageMediaPoll4.results;
                                                                                                                tLRPC$TL_inputMediaDice = tLRPC$TL_inputMediaPoll;
                                                                                                                if (tLRPC$PollResults != null) {
                                                                                                                    tLRPC$TL_inputMediaDice = tLRPC$TL_inputMediaPoll;
                                                                                                                    if (!TextUtils.isEmpty(tLRPC$PollResults.solution)) {
                                                                                                                        TLRPC$PollResults tLRPC$PollResults2 = tLRPC$TL_messageMediaPoll4.results;
                                                                                                                        tLRPC$TL_inputMediaPoll.solution = tLRPC$PollResults2.solution;
                                                                                                                        tLRPC$TL_inputMediaPoll.solution_entities = tLRPC$PollResults2.solution_entities;
                                                                                                                        tLRPC$TL_inputMediaPoll.flags |= 2;
                                                                                                                        tLRPC$TL_inputMediaDice = tLRPC$TL_inputMediaPoll;
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                        hashMap5 = hashMap10;
                                                                                                        tLRPC$PollResults = tLRPC$TL_messageMediaPoll4.results;
                                                                                                        tLRPC$TL_inputMediaDice = tLRPC$TL_inputMediaPoll;
                                                                                                        if (tLRPC$PollResults != null) {
                                                                                                        }
                                                                                                    } else {
                                                                                                        hashMap5 = hashMap10;
                                                                                                        if (r2 == 11) {
                                                                                                            TLRPC$TL_inputMediaDice tLRPC$TL_inputMediaDice2 = new TLRPC$TL_inputMediaDice();
                                                                                                            tLRPC$TL_inputMediaDice2.emoticon = str;
                                                                                                            tLRPC$TL_inputMediaDice = tLRPC$TL_inputMediaDice2;
                                                                                                        } else {
                                                                                                            hashMap3 = hashMap5;
                                                                                                            z15 = r2;
                                                                                                            str39 = str39;
                                                                                                            tLRPC$Message7 = tLRPC$Message20;
                                                                                                            z16 = false;
                                                                                                            tLRPC$TL_inputMediaUploadedDocument = null;
                                                                                                            messageObject10 = messageObject14;
                                                                                                        }
                                                                                                    }
                                                                                                    hashMap3 = hashMap5;
                                                                                                    z21 = r2;
                                                                                                    str39 = str39;
                                                                                                    tLRPC$Message11 = tLRPC$Message20;
                                                                                                    tLRPC$TL_inputMediaContact = tLRPC$TL_inputMediaDice;
                                                                                                }
                                                                                            } catch (Exception e32) {
                                                                                                i17 = i;
                                                                                                exc = e32;
                                                                                            }
                                                                                        } catch (Exception e33) {
                                                                                            exc = e33;
                                                                                            i17 = 6;
                                                                                        }
                                                                                    }
                                                                                    z16 = false;
                                                                                    messageObject10 = messageObject14;
                                                                                    tLRPC$Message7 = tLRPC$Message11;
                                                                                    tLRPC$TL_inputMediaUploadedDocument = tLRPC$TL_inputMediaContact;
                                                                                    z15 = z21;
                                                                                }
                                                                                hashMap3 = hashMap2;
                                                                                str39 = str20;
                                                                                tLRPC$Message7 = tLRPC$Message4;
                                                                                messageObject10 = messageObject12;
                                                                                tLRPC$TL_inputMediaUploadedDocument = tLRPC$TL_inputMediaUploadedDocument3;
                                                                                z15 = z20;
                                                                            } catch (Exception e34) {
                                                                                e4 = e34;
                                                                            }
                                                                        } else {
                                                                            i16 = i32;
                                                                            z17 = r2;
                                                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                            i13 = i;
                                                                            tLRPC$Message8 = tLRPC$Message2;
                                                                        }
                                                                        str17 = str41;
                                                                        String str45 = str39;
                                                                        MessageObject messageObject15 = messageObject5;
                                                                        try {
                                                                            TLRPC$TL_inputMediaUploadedPhoto tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                                                                            if (i16 != 0) {
                                                                                tLRPC$TL_inputMediaUploadedPhoto.ttl_seconds = i16;
                                                                                tLRPC$Message9 = tLRPC$Message8;
                                                                                try {
                                                                                    tLRPC$Message9.ttl = i16;
                                                                                    tLRPC$TL_inputMediaUploadedPhoto.flags |= 2;
                                                                                    tLRPC$Message10 = tLRPC$Message9;
                                                                                } catch (Exception e35) {
                                                                                    e3 = e35;
                                                                                    exc = e3;
                                                                                    tLRPC$Message = tLRPC$Message9;
                                                                                    i3 = i13;
                                                                                    messageObject4 = messageObject15;
                                                                                    FileLog.e(exc);
                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                    if (messageObject4 != null) {
                                                                                    }
                                                                                    getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                    processSentMessage(tLRPC$Message.id);
                                                                                    return;
                                                                                }
                                                                            } else {
                                                                                tLRPC$Message10 = tLRPC$Message8;
                                                                            }
                                                                            if (hashMap2 == null || (str19 = hashMap2.get("masks")) == null) {
                                                                                hashMap3 = hashMap2;
                                                                                str39 = str45;
                                                                            } else {
                                                                                SerializedData serializedData2 = new SerializedData(Utilities.hexToBytes(str19));
                                                                                int i40 = 0;
                                                                                int readInt322 = serializedData2.readInt32(false);
                                                                                while (i40 < readInt322) {
                                                                                    tLRPC$TL_inputMediaUploadedPhoto.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData2, serializedData2.readInt32(false), false));
                                                                                    i40++;
                                                                                    readInt322 = readInt322;
                                                                                    str45 = str45;
                                                                                    hashMap2 = hashMap2;
                                                                                }
                                                                                hashMap3 = hashMap2;
                                                                                str39 = str45;
                                                                                tLRPC$TL_inputMediaUploadedPhoto.flags |= 1;
                                                                                serializedData2.cleanup();
                                                                            }
                                                                            if (tLRPC$TL_photo3.access_hash == 0) {
                                                                                tLRPC$TL_inputMediaUploadedDocument2 = tLRPC$TL_inputMediaUploadedPhoto;
                                                                                z18 = true;
                                                                            } else {
                                                                                ?? tLRPC$TL_inputMediaPhoto = new TLRPC$TL_inputMediaPhoto();
                                                                                TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                                                                                tLRPC$TL_inputMediaPhoto.id = tLRPC$TL_inputPhoto;
                                                                                tLRPC$TL_inputPhoto.id = tLRPC$TL_photo3.id;
                                                                                tLRPC$TL_inputPhoto.access_hash = tLRPC$TL_photo3.access_hash;
                                                                                byte[] bArr6 = tLRPC$TL_photo3.file_reference;
                                                                                tLRPC$TL_inputPhoto.file_reference = bArr6;
                                                                                if (bArr6 == null) {
                                                                                    tLRPC$TL_inputPhoto.file_reference = new byte[0];
                                                                                }
                                                                                tLRPC$TL_inputMediaUploadedDocument2 = tLRPC$TL_inputMediaPhoto;
                                                                                z18 = false;
                                                                            }
                                                                            if (delayedMessage2 == null) {
                                                                                delayedMessage2 = new DelayedMessage(j);
                                                                                delayedMessage2.type = 0;
                                                                                delayedMessage2.obj = messageObject15;
                                                                                delayedMessage2.originalPath = str17;
                                                                                delayedMessage2.scheduled = i13 != 0;
                                                                            }
                                                                            delayedMessage2.inputUploadMedia = tLRPC$TL_inputMediaUploadedPhoto;
                                                                            delayedMessage2.performMediaUpload = z18;
                                                                            if (str3 != null && str3.length() > 0 && str3.startsWith(str40)) {
                                                                                delayedMessage2.httpLocation = str3;
                                                                            } else {
                                                                                ArrayList<TLRPC$PhotoSize> arrayList8 = tLRPC$TL_photo3.sizes;
                                                                                delayedMessage2.photoSize = arrayList8.get(arrayList8.size() - 1);
                                                                                delayedMessage2.locationParent = tLRPC$TL_photo3;
                                                                            }
                                                                            z16 = z18;
                                                                            tLRPC$TL_inputMediaUploadedDocument = tLRPC$TL_inputMediaUploadedDocument2;
                                                                            messageObject10 = messageObject15;
                                                                            tLRPC$Message7 = tLRPC$Message10;
                                                                            z15 = z17;
                                                                        } catch (Exception e36) {
                                                                            e3 = e36;
                                                                            tLRPC$Message9 = tLRPC$Message8;
                                                                        }
                                                                    }
                                                                    if (j8 != 0) {
                                                                        TLObject tLObject = delayedMessage2.sendRequest;
                                                                        if (tLObject != null) {
                                                                            r7 = (TLRPC$TL_messages_sendMultiMedia) tLObject;
                                                                        } else {
                                                                            TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = new TLRPC$TL_messages_sendMultiMedia();
                                                                            tLRPC$TL_messages_sendMultiMedia.peer = tLRPC$InputPeer5;
                                                                            tLRPC$TL_messages_sendMultiMedia.silent = tLRPC$Message7.silent;
                                                                            TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader2 = tLRPC$Message7.reply_to;
                                                                            if (tLRPC$TL_messageReplyHeader2 != null && (i15 = tLRPC$TL_messageReplyHeader2.reply_to_msg_id) != 0) {
                                                                                tLRPC$TL_messages_sendMultiMedia.flags |= 1;
                                                                                tLRPC$TL_messages_sendMultiMedia.reply_to_msg_id = i15;
                                                                            }
                                                                            if (i13 != 0) {
                                                                                tLRPC$TL_messages_sendMultiMedia.schedule_date = i13;
                                                                                tLRPC$TL_messages_sendMultiMedia.flags |= 1024;
                                                                            }
                                                                            delayedMessage2.sendRequest = tLRPC$TL_messages_sendMultiMedia;
                                                                            r7 = tLRPC$TL_messages_sendMultiMedia;
                                                                        }
                                                                        delayedMessage2.messageObjects.add(messageObject10);
                                                                        str18 = str39;
                                                                        delayedMessage2.parentObjects.add(str18);
                                                                        delayedMessage2.locations.add(delayedMessage2.photoSize);
                                                                        delayedMessage2.videoEditedInfos.add(delayedMessage2.videoEditedInfo);
                                                                        delayedMessage2.httpLocations.add(delayedMessage2.httpLocation);
                                                                        delayedMessage2.inputMedias.add(delayedMessage2.inputUploadMedia);
                                                                        delayedMessage2.messages.add(tLRPC$Message7);
                                                                        delayedMessage2.originalPaths.add(str17);
                                                                        TLRPC$TL_inputSingleMedia tLRPC$TL_inputSingleMedia = new TLRPC$TL_inputSingleMedia();
                                                                        tLRPC$TL_inputSingleMedia.random_id = tLRPC$Message7.random_id;
                                                                        tLRPC$TL_inputSingleMedia.media = tLRPC$TL_inputMediaUploadedDocument;
                                                                        tLRPC$TL_inputSingleMedia.message = str5;
                                                                        if (arrayList != null && !arrayList.isEmpty()) {
                                                                            tLRPC$TL_inputSingleMedia.entities = arrayList;
                                                                            tLRPC$TL_inputSingleMedia.flags |= 1;
                                                                        }
                                                                        r7.multi_media.add(tLRPC$TL_inputSingleMedia);
                                                                    } else {
                                                                        str18 = str39;
                                                                        String str46 = str5;
                                                                        r7 = new TLRPC$TL_messages_sendMedia();
                                                                        r7.peer = tLRPC$InputPeer5;
                                                                        r7.silent = tLRPC$Message7.silent;
                                                                        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader3 = tLRPC$Message7.reply_to;
                                                                        if (tLRPC$TL_messageReplyHeader3 != null && (i14 = tLRPC$TL_messageReplyHeader3.reply_to_msg_id) != 0) {
                                                                            r7.flags |= 1;
                                                                            r7.reply_to_msg_id = i14;
                                                                        }
                                                                        r7.random_id = tLRPC$Message7.random_id;
                                                                        if (tLRPC$Message7.from_id != null) {
                                                                            r7.send_as = getMessagesController().getInputPeer(tLRPC$Message7.from_id);
                                                                        }
                                                                        r7.media = tLRPC$TL_inputMediaUploadedDocument;
                                                                        r7.message = str46;
                                                                        if (arrayList != null && !arrayList.isEmpty()) {
                                                                            r7.entities = arrayList;
                                                                            r7.flags |= 8;
                                                                        }
                                                                        if (i13 != 0) {
                                                                            r7.schedule_date = i13;
                                                                            r7.flags |= 1024;
                                                                        }
                                                                        if (delayedMessage2 != null) {
                                                                            delayedMessage2.sendRequest = r7;
                                                                        }
                                                                    }
                                                                    if (j8 != 0) {
                                                                        sendMessagesHelper.performSendDelayedMessage(delayedMessage2);
                                                                    } else {
                                                                        boolean z37 = z15 ? 1 : 0;
                                                                        boolean z38 = z15 ? 1 : 0;
                                                                        boolean z39 = z15 ? 1 : 0;
                                                                        boolean z40 = z15 ? 1 : 0;
                                                                        boolean z41 = z15 ? 1 : 0;
                                                                        boolean z42 = z15 ? 1 : 0;
                                                                        boolean z43 = z15 ? 1 : 0;
                                                                        boolean z44 = z15 ? 1 : 0;
                                                                        boolean z45 = z15 ? 1 : 0;
                                                                        boolean z46 = z15 ? 1 : 0;
                                                                        boolean z47 = z15 ? 1 : 0;
                                                                        boolean z48 = z15 ? 1 : 0;
                                                                        boolean z49 = z15 ? 1 : 0;
                                                                        boolean z50 = z15 ? 1 : 0;
                                                                        boolean z51 = z37;
                                                                        if (z51) {
                                                                            performSendMessageRequest(r7, messageObject10, null, delayedMessage2, str18, hashMap3, i13 != 0);
                                                                        } else if (z51) {
                                                                            if (z16) {
                                                                                sendMessagesHelper.performSendDelayedMessage(delayedMessage2);
                                                                            } else {
                                                                                performSendMessageRequest(r7, messageObject10, str17, null, true, delayedMessage2, str18, hashMap3, i13 != 0);
                                                                            }
                                                                        } else if (z51) {
                                                                            if (z16) {
                                                                                sendMessagesHelper.performSendDelayedMessage(delayedMessage2);
                                                                            } else {
                                                                                performSendMessageRequest(r7, messageObject10, str17, delayedMessage2, str18, hashMap3, i13 != 0);
                                                                            }
                                                                        } else if (z51) {
                                                                            performSendMessageRequest(r7, messageObject10, str17, delayedMessage2, str18, hashMap3, i13 != 0);
                                                                        } else if (z51) {
                                                                            if (z16 && delayedMessage2 != null) {
                                                                                sendMessagesHelper.performSendDelayedMessage(delayedMessage2);
                                                                            } else {
                                                                                performSendMessageRequest(r7, messageObject10, str17, delayedMessage2, str18, hashMap3, i13 != 0);
                                                                            }
                                                                        } else if (z51) {
                                                                            if (z16) {
                                                                                sendMessagesHelper.performSendDelayedMessage(delayedMessage2);
                                                                            } else {
                                                                                performSendMessageRequest(r7, messageObject10, str17, delayedMessage2, str18, hashMap3, i13 != 0);
                                                                            }
                                                                        } else if (z51 || z51) {
                                                                            performSendMessageRequest(r7, messageObject10, str17, delayedMessage2, str18, hashMap3, i13 != 0);
                                                                        }
                                                                    }
                                                                } else {
                                                                    VideoEditedInfo videoEditedInfo5 = videoEditedInfo3;
                                                                    HashMap<String, String> hashMap11 = hashMap2;
                                                                    TLRPC$MessageMedia tLRPC$MessageMedia7 = tLRPC$Message4;
                                                                    TLRPC$TL_document tLRPC$TL_document10 = tLRPC$TL_document2;
                                                                    String str47 = str5;
                                                                    r2 = messageObject5;
                                                                    try {
                                                                        if (AndroidUtilities.getPeerLayerVersion(tLRPC$EncryptedChat.layer) >= 73) {
                                                                            tLRPC$TL_decryptedMessage = new TLRPC$TL_decryptedMessage();
                                                                            if (j8 != 0) {
                                                                                j9 = j8;
                                                                                tLRPC$TL_decryptedMessage.grouped_id = j9;
                                                                                delayedMessage3 = delayedMessage2;
                                                                                tLRPC$TL_decryptedMessage.flags |= 131072;
                                                                            } else {
                                                                                delayedMessage3 = delayedMessage2;
                                                                                j9 = j8;
                                                                            }
                                                                        } else {
                                                                            delayedMessage3 = delayedMessage2;
                                                                            j9 = j8;
                                                                            tLRPC$TL_decryptedMessage = new TLRPC$TL_decryptedMessage_layer45();
                                                                        }
                                                                        tLRPC$TL_decryptedMessage.ttl = tLRPC$Message2.ttl;
                                                                        if (arrayList != null && !arrayList.isEmpty()) {
                                                                            tLRPC$TL_decryptedMessage.entities = arrayList;
                                                                            tLRPC$TL_decryptedMessage.flags |= 128;
                                                                        }
                                                                        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader4 = tLRPC$Message2.reply_to;
                                                                        long j15 = j9;
                                                                        if (tLRPC$TL_messageReplyHeader4 != null) {
                                                                            long j16 = tLRPC$TL_messageReplyHeader4.reply_to_random_id;
                                                                            if (j16 != 0) {
                                                                                tLRPC$TL_decryptedMessage.reply_to_random_id = j16;
                                                                                tLRPC$TL_decryptedMessage.flags |= 8;
                                                                            }
                                                                        }
                                                                        tLRPC$TL_decryptedMessage.silent = tLRPC$Message2.silent;
                                                                        tLRPC$TL_decryptedMessage.flags |= 512;
                                                                        if (hashMap11 != null && hashMap11.get(obj11) != null) {
                                                                            tLRPC$TL_decryptedMessage.via_bot_name = hashMap11.get(obj11);
                                                                            tLRPC$TL_decryptedMessage.flags |= 2048;
                                                                        }
                                                                        tLRPC$TL_decryptedMessage.random_id = tLRPC$Message2.random_id;
                                                                        tLRPC$TL_decryptedMessage.message = str43;
                                                                        if (r2 == 1) {
                                                                            if (tLRPC$MessageMedia7 instanceof TLRPC$TL_messageMediaVenue) {
                                                                                TLRPC$TL_decryptedMessageMediaVenue tLRPC$TL_decryptedMessageMediaVenue = new TLRPC$TL_decryptedMessageMediaVenue();
                                                                                tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaVenue;
                                                                                tLRPC$TL_decryptedMessageMediaVenue.address = tLRPC$MessageMedia7.address;
                                                                                tLRPC$TL_decryptedMessageMediaVenue.title = tLRPC$MessageMedia7.title;
                                                                                tLRPC$TL_decryptedMessageMediaVenue.provider = tLRPC$MessageMedia7.provider;
                                                                                tLRPC$TL_decryptedMessageMediaVenue.venue_id = tLRPC$MessageMedia7.venue_id;
                                                                            } else {
                                                                                tLRPC$TL_decryptedMessage.media = new TLRPC$TL_decryptedMessageMediaGeoPoint();
                                                                            }
                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                                                                            TLRPC$GeoPoint tLRPC$GeoPoint2 = tLRPC$MessageMedia7.geo;
                                                                            tLRPC$DecryptedMessageMedia.lat = tLRPC$GeoPoint2.lat;
                                                                            tLRPC$DecryptedMessageMedia._long = tLRPC$GeoPoint2._long;
                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, r2.messageOwner, tLRPC$EncryptedChat, null, null, r2);
                                                                            j10 = j;
                                                                            z12 = r2;
                                                                            str11 = str41;
                                                                        } else {
                                                                            try {
                                                                                if (r2 == 2) {
                                                                                    j10 = j;
                                                                                    str12 = str47;
                                                                                    z13 = r2;
                                                                                    obj6 = tLRPC$Message2;
                                                                                    str14 = str40;
                                                                                    obj7 = obj10;
                                                                                    str11 = str41;
                                                                                    str13 = str39;
                                                                                    delayedMessage6 = delayedMessage3;
                                                                                } else if (r2 != 9 || tLRPC$TL_photo6 == null) {
                                                                                    if (r2 == 3) {
                                                                                        TLRPC$PhotoSize thumbForSecretChat = sendMessagesHelper.getThumbForSecretChat(tLRPC$TL_document10.thumbs);
                                                                                        ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat);
                                                                                        if (!MessageObject.isNewGifDocument(tLRPC$TL_document10) && !MessageObject.isRoundVideoDocument(tLRPC$TL_document10)) {
                                                                                            TLRPC$TL_decryptedMessageMediaVideo tLRPC$TL_decryptedMessageMediaVideo = new TLRPC$TL_decryptedMessageMediaVideo();
                                                                                            tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaVideo;
                                                                                            if (thumbForSecretChat != null && (bArr2 = thumbForSecretChat.bytes) != null) {
                                                                                                tLRPC$TL_decryptedMessageMediaVideo.thumb = bArr2;
                                                                                            } else {
                                                                                                tLRPC$TL_decryptedMessageMediaVideo.thumb = new byte[0];
                                                                                            }
                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia2 = tLRPC$TL_decryptedMessage.media;
                                                                                            tLRPC$DecryptedMessageMedia2.caption = str47;
                                                                                            tLRPC$DecryptedMessageMedia2.mime_type = "video/mp4";
                                                                                            tLRPC$DecryptedMessageMedia2.size = tLRPC$TL_document10.size;
                                                                                            i12 = 0;
                                                                                            while (true) {
                                                                                                if (i12 < tLRPC$TL_document10.attributes.size()) {
                                                                                                    break;
                                                                                                }
                                                                                                TLRPC$DocumentAttribute tLRPC$DocumentAttribute4 = tLRPC$TL_document10.attributes.get(i12);
                                                                                                if (tLRPC$DocumentAttribute4 instanceof TLRPC$TL_documentAttributeVideo) {
                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia3 = tLRPC$TL_decryptedMessage.media;
                                                                                                    tLRPC$DecryptedMessageMedia3.w = tLRPC$DocumentAttribute4.w;
                                                                                                    tLRPC$DecryptedMessageMedia3.h = tLRPC$DocumentAttribute4.h;
                                                                                                    tLRPC$DecryptedMessageMedia3.duration = tLRPC$DocumentAttribute4.duration;
                                                                                                    break;
                                                                                                }
                                                                                                i12++;
                                                                                            }
                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia4 = tLRPC$TL_decryptedMessage.media;
                                                                                            tLRPC$DecryptedMessageMedia4.thumb_h = thumbForSecretChat.h;
                                                                                            tLRPC$DecryptedMessageMedia4.thumb_w = thumbForSecretChat.w;
                                                                                            if (tLRPC$TL_document10.key != null && j15 == 0) {
                                                                                                TLRPC$TL_inputEncryptedFile tLRPC$TL_inputEncryptedFile = new TLRPC$TL_inputEncryptedFile();
                                                                                                tLRPC$TL_inputEncryptedFile.id = tLRPC$TL_document10.id;
                                                                                                tLRPC$TL_inputEncryptedFile.access_hash = tLRPC$TL_document10.access_hash;
                                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia5 = tLRPC$TL_decryptedMessage.media;
                                                                                                tLRPC$DecryptedMessageMedia5.key = tLRPC$TL_document10.key;
                                                                                                tLRPC$DecryptedMessageMedia5.iv = tLRPC$TL_document10.iv;
                                                                                                getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, r2.messageOwner, tLRPC$EncryptedChat, tLRPC$TL_inputEncryptedFile, null, r2);
                                                                                                delayedMessage4 = delayedMessage3;
                                                                                                j10 = j;
                                                                                                str11 = str41;
                                                                                            }
                                                                                            j10 = j;
                                                                                            str11 = str41;
                                                                                            delayedMessage4 = delayedMessage3;
                                                                                            delayedMessage4.videoEditedInfo = videoEditedInfo5;
                                                                                            if (j15 == 0) {
                                                                                                sendMessagesHelper.performSendDelayedMessage(delayedMessage4);
                                                                                            }
                                                                                        }
                                                                                        TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                        tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument;
                                                                                        tLRPC$TL_decryptedMessageMediaDocument.attributes = tLRPC$TL_document10.attributes;
                                                                                        if (thumbForSecretChat != null && (bArr = thumbForSecretChat.bytes) != null) {
                                                                                            tLRPC$TL_decryptedMessageMediaDocument.thumb = bArr;
                                                                                        } else {
                                                                                            tLRPC$TL_decryptedMessageMediaDocument.thumb = new byte[0];
                                                                                        }
                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia22 = tLRPC$TL_decryptedMessage.media;
                                                                                        tLRPC$DecryptedMessageMedia22.caption = str47;
                                                                                        tLRPC$DecryptedMessageMedia22.mime_type = "video/mp4";
                                                                                        tLRPC$DecryptedMessageMedia22.size = tLRPC$TL_document10.size;
                                                                                        i12 = 0;
                                                                                        while (true) {
                                                                                            if (i12 < tLRPC$TL_document10.attributes.size()) {
                                                                                            }
                                                                                            i12++;
                                                                                        }
                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia42 = tLRPC$TL_decryptedMessage.media;
                                                                                        tLRPC$DecryptedMessageMedia42.thumb_h = thumbForSecretChat.h;
                                                                                        tLRPC$DecryptedMessageMedia42.thumb_w = thumbForSecretChat.w;
                                                                                        if (tLRPC$TL_document10.key != null) {
                                                                                            TLRPC$TL_inputEncryptedFile tLRPC$TL_inputEncryptedFile2 = new TLRPC$TL_inputEncryptedFile();
                                                                                            tLRPC$TL_inputEncryptedFile2.id = tLRPC$TL_document10.id;
                                                                                            tLRPC$TL_inputEncryptedFile2.access_hash = tLRPC$TL_document10.access_hash;
                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia52 = tLRPC$TL_decryptedMessage.media;
                                                                                            tLRPC$DecryptedMessageMedia52.key = tLRPC$TL_document10.key;
                                                                                            tLRPC$DecryptedMessageMedia52.iv = tLRPC$TL_document10.iv;
                                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, r2.messageOwner, tLRPC$EncryptedChat, tLRPC$TL_inputEncryptedFile2, null, r2);
                                                                                            delayedMessage4 = delayedMessage3;
                                                                                            j10 = j;
                                                                                            str11 = str41;
                                                                                        }
                                                                                        j10 = j;
                                                                                        str11 = str41;
                                                                                        delayedMessage4 = delayedMessage3;
                                                                                        delayedMessage4.videoEditedInfo = videoEditedInfo5;
                                                                                        if (j15 == 0) {
                                                                                        }
                                                                                    } else {
                                                                                        str11 = str41;
                                                                                        j10 = j;
                                                                                        if (r2 == 6) {
                                                                                            TLRPC$TL_decryptedMessageMediaContact tLRPC$TL_decryptedMessageMediaContact = new TLRPC$TL_decryptedMessageMediaContact();
                                                                                            tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaContact;
                                                                                            tLRPC$TL_decryptedMessageMediaContact.phone_number = tLRPC$User4.phone;
                                                                                            tLRPC$TL_decryptedMessageMediaContact.first_name = tLRPC$User4.first_name;
                                                                                            tLRPC$TL_decryptedMessageMediaContact.last_name = tLRPC$User4.last_name;
                                                                                            tLRPC$TL_decryptedMessageMediaContact.user_id = tLRPC$User4.id;
                                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, r2.messageOwner, tLRPC$EncryptedChat, null, null, r2);
                                                                                        } else {
                                                                                            if (r2 != 7 && (r2 != 9 || tLRPC$TL_document10 == null)) {
                                                                                                if (r2 == 8) {
                                                                                                    delayedMessage4 = new DelayedMessage(j10);
                                                                                                    delayedMessage4.encryptedChat = tLRPC$EncryptedChat;
                                                                                                    delayedMessage4.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                                    delayedMessage4.obj = r2;
                                                                                                    delayedMessage4.type = 3;
                                                                                                    delayedMessage4.parentObject = str39;
                                                                                                    delayedMessage4.performMediaUpload = true;
                                                                                                    delayedMessage4.scheduled = i != 0;
                                                                                                    TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument2 = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                                    tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument2;
                                                                                                    tLRPC$TL_decryptedMessageMediaDocument2.attributes = tLRPC$TL_document10.attributes;
                                                                                                    tLRPC$TL_decryptedMessageMediaDocument2.caption = str47;
                                                                                                    TLRPC$PhotoSize thumbForSecretChat2 = sendMessagesHelper.getThumbForSecretChat(tLRPC$TL_document10.thumbs);
                                                                                                    if (thumbForSecretChat2 != null) {
                                                                                                        ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat2);
                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia6 = tLRPC$TL_decryptedMessage.media;
                                                                                                        ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia6).thumb = thumbForSecretChat2.bytes;
                                                                                                        tLRPC$DecryptedMessageMedia6.thumb_h = thumbForSecretChat2.h;
                                                                                                        tLRPC$DecryptedMessageMedia6.thumb_w = thumbForSecretChat2.w;
                                                                                                    } else {
                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia7 = tLRPC$TL_decryptedMessage.media;
                                                                                                        ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia7).thumb = new byte[0];
                                                                                                        tLRPC$DecryptedMessageMedia7.thumb_h = 0;
                                                                                                        tLRPC$DecryptedMessageMedia7.thumb_w = 0;
                                                                                                    }
                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia8 = tLRPC$TL_decryptedMessage.media;
                                                                                                    tLRPC$DecryptedMessageMedia8.mime_type = tLRPC$TL_document10.mime_type;
                                                                                                    tLRPC$DecryptedMessageMedia8.size = tLRPC$TL_document10.size;
                                                                                                    delayedMessage4.originalPath = str11;
                                                                                                    sendMessagesHelper.performSendDelayedMessage(delayedMessage4);
                                                                                                }
                                                                                            }
                                                                                            boolean z52 = r2;
                                                                                            try {
                                                                                                if (tLRPC$TL_document10.access_hash != 0 && (MessageObject.isStickerDocument(tLRPC$TL_document10) || MessageObject.isAnimatedStickerDocument(tLRPC$TL_document10, true))) {
                                                                                                    TLRPC$TL_decryptedMessageMediaExternalDocument tLRPC$TL_decryptedMessageMediaExternalDocument = new TLRPC$TL_decryptedMessageMediaExternalDocument();
                                                                                                    tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaExternalDocument;
                                                                                                    tLRPC$TL_decryptedMessageMediaExternalDocument.id = tLRPC$TL_document10.id;
                                                                                                    tLRPC$TL_decryptedMessageMediaExternalDocument.date = tLRPC$TL_document10.date;
                                                                                                    tLRPC$TL_decryptedMessageMediaExternalDocument.access_hash = tLRPC$TL_document10.access_hash;
                                                                                                    tLRPC$TL_decryptedMessageMediaExternalDocument.mime_type = tLRPC$TL_document10.mime_type;
                                                                                                    tLRPC$TL_decryptedMessageMediaExternalDocument.size = tLRPC$TL_document10.size;
                                                                                                    tLRPC$TL_decryptedMessageMediaExternalDocument.dc_id = tLRPC$TL_document10.dc_id;
                                                                                                    tLRPC$TL_decryptedMessageMediaExternalDocument.attributes = tLRPC$TL_document10.attributes;
                                                                                                    TLRPC$PhotoSize thumbForSecretChat3 = sendMessagesHelper.getThumbForSecretChat(tLRPC$TL_document10.thumbs);
                                                                                                    if (thumbForSecretChat3 != null) {
                                                                                                        ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb = thumbForSecretChat3;
                                                                                                    } else {
                                                                                                        ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb = new TLRPC$TL_photoSizeEmpty();
                                                                                                        ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb.type = "s";
                                                                                                    }
                                                                                                    if (delayedMessage3 != null) {
                                                                                                        delayedMessage5 = delayedMessage3;
                                                                                                        if (delayedMessage5.type == 5) {
                                                                                                            delayedMessage5.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                                            delayedMessage5.obj = r2;
                                                                                                            sendMessagesHelper.performSendDelayedMessage(delayedMessage5);
                                                                                                            z11 = z52;
                                                                                                            delayedMessage4 = delayedMessage5;
                                                                                                            z10 = z11;
                                                                                                            obj5 = tLRPC$Message2;
                                                                                                            z9 = z10;
                                                                                                            if (j15 == 0) {
                                                                                                            }
                                                                                                            if (messageObject3 == null) {
                                                                                                            }
                                                                                                        }
                                                                                                    } else {
                                                                                                        delayedMessage5 = delayedMessage3;
                                                                                                    }
                                                                                                    getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, r2.messageOwner, tLRPC$EncryptedChat, null, null, r2);
                                                                                                    z11 = z52;
                                                                                                    delayedMessage4 = delayedMessage5;
                                                                                                    z10 = z11;
                                                                                                    obj5 = tLRPC$Message2;
                                                                                                    z9 = z10;
                                                                                                    if (j15 == 0) {
                                                                                                    }
                                                                                                    if (messageObject3 == null) {
                                                                                                    }
                                                                                                } else {
                                                                                                    delayedMessage6 = delayedMessage3;
                                                                                                    TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument3 = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                                    tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument3;
                                                                                                    Object obj12 = tLRPC$Message2;
                                                                                                    tLRPC$TL_decryptedMessageMediaDocument3.attributes = tLRPC$TL_document10.attributes;
                                                                                                    tLRPC$TL_decryptedMessageMediaDocument3.caption = str47;
                                                                                                    TLRPC$PhotoSize thumbForSecretChat4 = sendMessagesHelper.getThumbForSecretChat(tLRPC$TL_document10.thumbs);
                                                                                                    if (thumbForSecretChat4 != null) {
                                                                                                        ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat4);
                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia9 = tLRPC$TL_decryptedMessage.media;
                                                                                                        str16 = str39;
                                                                                                        ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia9).thumb = thumbForSecretChat4.bytes;
                                                                                                        tLRPC$DecryptedMessageMedia9.thumb_h = thumbForSecretChat4.h;
                                                                                                        tLRPC$DecryptedMessageMedia9.thumb_w = thumbForSecretChat4.w;
                                                                                                    } else {
                                                                                                        str16 = str39;
                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia10 = tLRPC$TL_decryptedMessage.media;
                                                                                                        ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia10).thumb = new byte[0];
                                                                                                        tLRPC$DecryptedMessageMedia10.thumb_h = 0;
                                                                                                        tLRPC$DecryptedMessageMedia10.thumb_w = 0;
                                                                                                    }
                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia11 = tLRPC$TL_decryptedMessage.media;
                                                                                                    tLRPC$DecryptedMessageMedia11.size = tLRPC$TL_document10.size;
                                                                                                    tLRPC$DecryptedMessageMedia11.mime_type = tLRPC$TL_document10.mime_type;
                                                                                                    if (tLRPC$TL_document10.key != null && j15 == 0) {
                                                                                                        TLRPC$TL_inputEncryptedFile tLRPC$TL_inputEncryptedFile3 = new TLRPC$TL_inputEncryptedFile();
                                                                                                        tLRPC$TL_inputEncryptedFile3.id = tLRPC$TL_document10.id;
                                                                                                        tLRPC$TL_inputEncryptedFile3.access_hash = tLRPC$TL_document10.access_hash;
                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia12 = tLRPC$TL_decryptedMessage.media;
                                                                                                        tLRPC$DecryptedMessageMedia12.key = tLRPC$TL_document10.key;
                                                                                                        tLRPC$DecryptedMessageMedia12.iv = tLRPC$TL_document10.iv;
                                                                                                        getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, r2.messageOwner, tLRPC$EncryptedChat, tLRPC$TL_inputEncryptedFile3, null, r2);
                                                                                                        obj9 = obj12;
                                                                                                        z14 = z52;
                                                                                                        delayedMessage4 = delayedMessage6;
                                                                                                        obj5 = obj9;
                                                                                                        z9 = z14;
                                                                                                        if (j15 == 0) {
                                                                                                            try {
                                                                                                                TLObject tLObject2 = delayedMessage4.sendEncryptedRequest;
                                                                                                                if (tLObject2 != null) {
                                                                                                                    tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) tLObject2;
                                                                                                                } else {
                                                                                                                    tLRPC$TL_messages_sendEncryptedMultiMedia = new TLRPC$TL_messages_sendEncryptedMultiMedia();
                                                                                                                    delayedMessage4.sendEncryptedRequest = tLRPC$TL_messages_sendEncryptedMultiMedia;
                                                                                                                }
                                                                                                                delayedMessage4.messageObjects.add(r2);
                                                                                                                tLRPC$Message2 = obj5;
                                                                                                                delayedMessage4.messages.add(tLRPC$Message2);
                                                                                                                delayedMessage4.originalPaths.add(str11);
                                                                                                                delayedMessage4.performMediaUpload = true;
                                                                                                                tLRPC$TL_messages_sendEncryptedMultiMedia.messages.add(tLRPC$TL_decryptedMessage);
                                                                                                                TLRPC$TL_inputEncryptedFile tLRPC$TL_inputEncryptedFile4 = new TLRPC$TL_inputEncryptedFile();
                                                                                                                boolean z53 = z9 ? 1 : 0;
                                                                                                                boolean z54 = z9 ? 1 : 0;
                                                                                                                boolean z55 = z9 ? 1 : 0;
                                                                                                                boolean z56 = z9 ? 1 : 0;
                                                                                                                boolean z57 = z9 ? 1 : 0;
                                                                                                                boolean z58 = z9 ? 1 : 0;
                                                                                                                boolean z59 = z9 ? 1 : 0;
                                                                                                                boolean z60 = z9 ? 1 : 0;
                                                                                                                boolean z61 = z9 ? 1 : 0;
                                                                                                                boolean z62 = z9 ? 1 : 0;
                                                                                                                boolean z63 = z9 ? 1 : 0;
                                                                                                                boolean z64 = z53;
                                                                                                                if (z64 || z64) {
                                                                                                                    j12 = 1;
                                                                                                                }
                                                                                                                tLRPC$TL_inputEncryptedFile4.id = j12;
                                                                                                                tLRPC$TL_messages_sendEncryptedMultiMedia.files.add(tLRPC$TL_inputEncryptedFile4);
                                                                                                                sendMessagesHelper.performSendDelayedMessage(delayedMessage4);
                                                                                                            } catch (Exception e37) {
                                                                                                                e = e37;
                                                                                                                tLRPC$Message2 = obj5;
                                                                                                                z4 = i;
                                                                                                                exc = e;
                                                                                                                messageObject4 = r2;
                                                                                                                i3 = z4;
                                                                                                                tLRPC$Message = tLRPC$Message2;
                                                                                                                FileLog.e(exc);
                                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                                                if (messageObject4 != null) {
                                                                                                                }
                                                                                                                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                processSentMessage(tLRPC$Message.id);
                                                                                                                return;
                                                                                                            }
                                                                                                        }
                                                                                                        if (messageObject3 == null) {
                                                                                                            getMediaDataController().cleanDraft(j10, messageObject2 != null ? messageObject2.getId() : 0, false);
                                                                                                        }
                                                                                                    }
                                                                                                    String str48 = str3;
                                                                                                    delayedMessage4 = delayedMessage6;
                                                                                                    if (str48 != null && str3.length() > 0 && str48.startsWith(str40)) {
                                                                                                        delayedMessage4.httpLocation = str48;
                                                                                                    }
                                                                                                    obj5 = obj12;
                                                                                                    z9 = z52;
                                                                                                    if (j15 == 0) {
                                                                                                        sendMessagesHelper.performSendDelayedMessage(delayedMessage4);
                                                                                                        obj5 = obj12;
                                                                                                        z9 = z52;
                                                                                                    }
                                                                                                    if (j15 == 0) {
                                                                                                    }
                                                                                                    if (messageObject3 == null) {
                                                                                                    }
                                                                                                }
                                                                                            } catch (Exception e38) {
                                                                                                e = e38;
                                                                                                z4 = i;
                                                                                                exc = e;
                                                                                                messageObject4 = r2;
                                                                                                i3 = z4;
                                                                                                tLRPC$Message = tLRPC$Message2;
                                                                                                FileLog.e(exc);
                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                                if (messageObject4 != null) {
                                                                                                }
                                                                                                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                processSentMessage(tLRPC$Message.id);
                                                                                                return;
                                                                                            }
                                                                                        }
                                                                                        z12 = r2;
                                                                                    }
                                                                                    z10 = r2;
                                                                                    obj5 = tLRPC$Message2;
                                                                                    z9 = z10;
                                                                                    if (j15 == 0) {
                                                                                    }
                                                                                    if (messageObject3 == null) {
                                                                                    }
                                                                                } else {
                                                                                    j10 = j;
                                                                                    str12 = str47;
                                                                                    z13 = r2;
                                                                                    obj6 = tLRPC$Message2;
                                                                                    str14 = str40;
                                                                                    obj7 = obj10;
                                                                                    str11 = str41;
                                                                                    str13 = str39;
                                                                                    delayedMessage6 = delayedMessage3;
                                                                                }
                                                                                String str49 = str14;
                                                                                TLRPC$PhotoSize tLRPC$PhotoSize3 = tLRPC$TL_photo6.sizes.get(0);
                                                                                TLRPC$PhotoSize tLRPC$PhotoSize4 = tLRPC$TL_photo6.sizes.get(arrayList2.size() - 1);
                                                                                ImageLoader.fillPhotoSizeWithBytes(tLRPC$PhotoSize3);
                                                                                TLRPC$TL_decryptedMessageMediaPhoto tLRPC$TL_decryptedMessageMediaPhoto = new TLRPC$TL_decryptedMessageMediaPhoto();
                                                                                tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaPhoto;
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.caption = str12;
                                                                                byte[] bArr7 = tLRPC$PhotoSize3.bytes;
                                                                                if (bArr7 != null) {
                                                                                    str15 = str13;
                                                                                    tLRPC$TL_decryptedMessageMediaPhoto.thumb = bArr7;
                                                                                    obj8 = obj7;
                                                                                } else {
                                                                                    str15 = str13;
                                                                                    obj8 = obj7;
                                                                                    tLRPC$TL_decryptedMessageMediaPhoto.thumb = new byte[0];
                                                                                }
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.thumb_h = tLRPC$PhotoSize3.h;
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.thumb_w = tLRPC$PhotoSize3.w;
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.w = tLRPC$PhotoSize4.w;
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.h = tLRPC$PhotoSize4.h;
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.size = tLRPC$PhotoSize4.size;
                                                                                if (tLRPC$PhotoSize4.location.key == null || j15 != 0) {
                                                                                    if (delayedMessage6 == null) {
                                                                                        DelayedMessage delayedMessage10 = new DelayedMessage(j10);
                                                                                        delayedMessage10.encryptedChat = tLRPC$EncryptedChat;
                                                                                        delayedMessage10.type = 0;
                                                                                        delayedMessage10.originalPath = str11;
                                                                                        delayedMessage10.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                        delayedMessage10.obj = r2;
                                                                                        if (hashMap11 != null) {
                                                                                            Object obj13 = obj8;
                                                                                            if (hashMap11.containsKey(obj13)) {
                                                                                                delayedMessage10.parentObject = hashMap11.get(obj13);
                                                                                                delayedMessage10.performMediaUpload = true;
                                                                                                delayedMessage10.scheduled = i == 0;
                                                                                                delayedMessage4 = delayedMessage10;
                                                                                            }
                                                                                        }
                                                                                        delayedMessage10.parentObject = str15;
                                                                                        delayedMessage10.performMediaUpload = true;
                                                                                        delayedMessage10.scheduled = i == 0;
                                                                                        delayedMessage4 = delayedMessage10;
                                                                                    } else {
                                                                                        delayedMessage4 = delayedMessage6;
                                                                                    }
                                                                                    if (!TextUtils.isEmpty(str3) && str3.startsWith(str49)) {
                                                                                        delayedMessage4.httpLocation = str3;
                                                                                    } else {
                                                                                        ArrayList<TLRPC$PhotoSize> arrayList9 = tLRPC$TL_photo6.sizes;
                                                                                        delayedMessage4.photoSize = arrayList9.get(arrayList9.size() - 1);
                                                                                        delayedMessage4.locationParent = tLRPC$TL_photo6;
                                                                                    }
                                                                                    obj5 = obj6;
                                                                                    z9 = z13;
                                                                                    if (j15 == 0) {
                                                                                        sendMessagesHelper.performSendDelayedMessage(delayedMessage4);
                                                                                        obj5 = obj6;
                                                                                        z9 = z13;
                                                                                    }
                                                                                    if (j15 == 0) {
                                                                                    }
                                                                                    if (messageObject3 == null) {
                                                                                    }
                                                                                } else {
                                                                                    TLRPC$TL_inputEncryptedFile tLRPC$TL_inputEncryptedFile5 = new TLRPC$TL_inputEncryptedFile();
                                                                                    TLRPC$FileLocation tLRPC$FileLocation = tLRPC$PhotoSize4.location;
                                                                                    tLRPC$TL_inputEncryptedFile5.id = tLRPC$FileLocation.volume_id;
                                                                                    tLRPC$TL_inputEncryptedFile5.access_hash = tLRPC$FileLocation.secret;
                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia13 = tLRPC$TL_decryptedMessage.media;
                                                                                    tLRPC$DecryptedMessageMedia13.key = tLRPC$FileLocation.key;
                                                                                    tLRPC$DecryptedMessageMedia13.iv = tLRPC$FileLocation.iv;
                                                                                    getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, r2.messageOwner, tLRPC$EncryptedChat, tLRPC$TL_inputEncryptedFile5, null, r2);
                                                                                    obj9 = obj6;
                                                                                    z14 = z13;
                                                                                    delayedMessage4 = delayedMessage6;
                                                                                    obj5 = obj9;
                                                                                    z9 = z14;
                                                                                    if (j15 == 0) {
                                                                                    }
                                                                                    if (messageObject3 == null) {
                                                                                    }
                                                                                }
                                                                            } catch (Exception e39) {
                                                                                e = e39;
                                                                                z4 = i;
                                                                                tLRPC$Message2 = obj6;
                                                                                exc = e;
                                                                                messageObject4 = r2;
                                                                                i3 = z4;
                                                                                tLRPC$Message = tLRPC$Message2;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                                                if (messageObject4 != null) {
                                                                                }
                                                                                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                processSentMessage(tLRPC$Message.id);
                                                                                return;
                                                                            }
                                                                        }
                                                                        delayedMessage5 = delayedMessage3;
                                                                        z11 = z12;
                                                                        delayedMessage4 = delayedMessage5;
                                                                        z10 = z11;
                                                                        obj5 = tLRPC$Message2;
                                                                        z9 = z10;
                                                                        if (j15 == 0) {
                                                                        }
                                                                        if (messageObject3 == null) {
                                                                        }
                                                                    } catch (Exception e40) {
                                                                        e = e40;
                                                                    }
                                                                }
                                                                return;
                                                            }
                                                            if ((r2 >= 5 || r2 > 8) && (r2 != 9 || tLRPC$EncryptedChat == null)) {
                                                                if (r2 != 10 && r2 != 11) {
                                                                    if (r2 != 4) {
                                                                        TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages = new TLRPC$TL_messages_forwardMessages();
                                                                        tLRPC$TL_messages_forwardMessages.to_peer = tLRPC$InputPeer4;
                                                                        tLRPC$TL_messages_forwardMessages.with_my_score = messageObject3.messageOwner.with_my_score;
                                                                        if (hashMap2 != null) {
                                                                            Object obj14 = obj2;
                                                                            if (hashMap2.containsKey(obj14)) {
                                                                                int intValue = Utilities.parseInt((CharSequence) hashMap2.get(obj14)).intValue();
                                                                                tLRPC$TL_messages_forwardMessages.drop_author = true;
                                                                                long longValue = Utilities.parseLong(hashMap2.get("fwd_peer")).longValue();
                                                                                if (longValue < 0) {
                                                                                    TLRPC$Chat chat3 = getMessagesController().getChat(Long.valueOf(-longValue));
                                                                                    if (ChatObject.isChannel(chat3)) {
                                                                                        TLRPC$TL_inputPeerChannel tLRPC$TL_inputPeerChannel = new TLRPC$TL_inputPeerChannel();
                                                                                        tLRPC$TL_messages_forwardMessages.from_peer = tLRPC$TL_inputPeerChannel;
                                                                                        tLRPC$TL_inputPeerChannel.channel_id = chat3.id;
                                                                                        tLRPC$TL_inputPeerChannel.access_hash = chat3.access_hash;
                                                                                    } else {
                                                                                        tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                                    }
                                                                                } else {
                                                                                    tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                                }
                                                                                tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(intValue));
                                                                                tLRPC$TL_messages_forwardMessages.silent = tLRPC$Message2.silent;
                                                                                if (i != 0) {
                                                                                    tLRPC$TL_messages_forwardMessages.schedule_date = i;
                                                                                    tLRPC$TL_messages_forwardMessages.flags |= 1024;
                                                                                }
                                                                                tLRPC$TL_messages_forwardMessages.random_id.add(Long.valueOf(tLRPC$Message2.random_id));
                                                                                if (messageObject3.getId() < 0) {
                                                                                    tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(messageObject3.getId()));
                                                                                } else {
                                                                                    TLRPC$Message tLRPC$Message21 = messageObject3.messageOwner;
                                                                                    int i41 = tLRPC$Message21.fwd_msg_id;
                                                                                    if (i41 != 0) {
                                                                                        tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(i41));
                                                                                    } else {
                                                                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = tLRPC$Message21.fwd_from;
                                                                                        if (tLRPC$MessageFwdHeader != null) {
                                                                                            tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(tLRPC$MessageFwdHeader.channel_post));
                                                                                        }
                                                                                    }
                                                                                }
                                                                                performSendMessageRequest(tLRPC$TL_messages_forwardMessages, messageObject5, null, null, str39, hashMap2, i == 0);
                                                                            }
                                                                        }
                                                                        tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                        tLRPC$TL_messages_forwardMessages.silent = tLRPC$Message2.silent;
                                                                        if (i != 0) {
                                                                        }
                                                                        tLRPC$TL_messages_forwardMessages.random_id.add(Long.valueOf(tLRPC$Message2.random_id));
                                                                        if (messageObject3.getId() < 0) {
                                                                        }
                                                                        performSendMessageRequest(tLRPC$TL_messages_forwardMessages, messageObject5, null, null, str39, hashMap2, i == 0);
                                                                    } else if (r2 == 9) {
                                                                        TLRPC$TL_messages_sendInlineBotResult tLRPC$TL_messages_sendInlineBotResult = new TLRPC$TL_messages_sendInlineBotResult();
                                                                        tLRPC$TL_messages_sendInlineBotResult.peer = tLRPC$InputPeer4;
                                                                        tLRPC$TL_messages_sendInlineBotResult.random_id = tLRPC$Message2.random_id;
                                                                        if (tLRPC$Message2.from_id != null) {
                                                                            tLRPC$TL_messages_sendInlineBotResult.send_as = getMessagesController().getInputPeer(tLRPC$Message2.from_id);
                                                                        }
                                                                        tLRPC$TL_messages_sendInlineBotResult.hide_via = !hashMap2.containsKey("bot");
                                                                        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader5 = tLRPC$Message2.reply_to;
                                                                        if (tLRPC$TL_messageReplyHeader5 != null && (i10 = tLRPC$TL_messageReplyHeader5.reply_to_msg_id) != 0) {
                                                                            tLRPC$TL_messages_sendInlineBotResult.flags |= 1;
                                                                            tLRPC$TL_messages_sendInlineBotResult.reply_to_msg_id = i10;
                                                                        }
                                                                        tLRPC$TL_messages_sendInlineBotResult.silent = tLRPC$Message2.silent;
                                                                        if (i != 0) {
                                                                            tLRPC$TL_messages_sendInlineBotResult.schedule_date = i;
                                                                            tLRPC$TL_messages_sendInlineBotResult.flags |= 1024;
                                                                        }
                                                                        tLRPC$TL_messages_sendInlineBotResult.query_id = Utilities.parseLong(hashMap2.get(str42)).longValue();
                                                                        tLRPC$TL_messages_sendInlineBotResult.id = hashMap2.get("id");
                                                                        if (messageObject3 == null) {
                                                                            tLRPC$TL_messages_sendInlineBotResult.clear_draft = true;
                                                                            getMediaDataController().cleanDraft(j, messageObject2 != null ? messageObject2.getId() : 0, false);
                                                                        }
                                                                        performSendMessageRequest(tLRPC$TL_messages_sendInlineBotResult, messageObject5, null, null, str39, hashMap2, i != 0);
                                                                    }
                                                                    return;
                                                                }
                                                                if (tLRPC$EncryptedChat == null) {
                                                                }
                                                                return;
                                                            }
                                                            if (tLRPC$EncryptedChat == null) {
                                                            }
                                                            return;
                                                        } catch (Exception e41) {
                                                            e2 = e41;
                                                            messageObject8 = r2;
                                                        }
                                                    }
                                                    MessageObject messageObject16 = messageObject5;
                                                    HashMap<String, String> hashMap12 = hashMap2;
                                                    TLRPC$InputPeer tLRPC$InputPeer8 = tLRPC$InputPeer4;
                                                    String str50 = str;
                                                    if (tLRPC$EncryptedChat == null) {
                                                        TLRPC$TL_messages_sendMessage tLRPC$TL_messages_sendMessage = new TLRPC$TL_messages_sendMessage();
                                                        tLRPC$TL_messages_sendMessage.message = str50;
                                                        tLRPC$TL_messages_sendMessage.clear_draft = messageObject3 == null;
                                                        tLRPC$TL_messages_sendMessage.silent = tLRPC$Message2.silent;
                                                        tLRPC$TL_messages_sendMessage.peer = tLRPC$InputPeer8;
                                                        tLRPC$TL_messages_sendMessage.random_id = tLRPC$Message2.random_id;
                                                        if (tLRPC$Message2.from_id != null) {
                                                            tLRPC$TL_messages_sendMessage.send_as = getMessagesController().getInputPeer(tLRPC$Message2.from_id);
                                                        }
                                                        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader6 = tLRPC$Message2.reply_to;
                                                        if (tLRPC$TL_messageReplyHeader6 != null && (i9 = tLRPC$TL_messageReplyHeader6.reply_to_msg_id) != 0) {
                                                            tLRPC$TL_messages_sendMessage.flags |= 1;
                                                            tLRPC$TL_messages_sendMessage.reply_to_msg_id = i9;
                                                        }
                                                        if (!z) {
                                                            tLRPC$TL_messages_sendMessage.no_webpage = true;
                                                        }
                                                        if (arrayList != null && !arrayList.isEmpty()) {
                                                            tLRPC$TL_messages_sendMessage.entities = arrayList;
                                                            tLRPC$TL_messages_sendMessage.flags |= 8;
                                                        }
                                                        if (i != 0) {
                                                            tLRPC$TL_messages_sendMessage.schedule_date = i;
                                                            tLRPC$TL_messages_sendMessage.flags |= 1024;
                                                        }
                                                        performSendMessageRequest(tLRPC$TL_messages_sendMessage, messageObject16, null, null, str39, hashMap12, i != 0);
                                                        if (messageObject3 == null) {
                                                            getMediaDataController().cleanDraft(j, messageObject2 != null ? messageObject2.getId() : 0, false);
                                                        }
                                                    } else {
                                                        TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage2 = new TLRPC$TL_decryptedMessage();
                                                        tLRPC$TL_decryptedMessage2.ttl = tLRPC$Message2.ttl;
                                                        if (arrayList != null && !arrayList.isEmpty()) {
                                                            tLRPC$TL_decryptedMessage2.entities = arrayList;
                                                            tLRPC$TL_decryptedMessage2.flags |= 128;
                                                        }
                                                        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader7 = tLRPC$Message2.reply_to;
                                                        if (tLRPC$TL_messageReplyHeader7 != null) {
                                                            long j17 = tLRPC$TL_messageReplyHeader7.reply_to_random_id;
                                                            if (j17 != 0) {
                                                                tLRPC$TL_decryptedMessage2.reply_to_random_id = j17;
                                                                tLRPC$TL_decryptedMessage2.flags |= 8;
                                                            }
                                                        }
                                                        if (hashMap12 != null && hashMap12.get(obj11) != null) {
                                                            tLRPC$TL_decryptedMessage2.via_bot_name = hashMap12.get(obj11);
                                                            tLRPC$TL_decryptedMessage2.flags |= 2048;
                                                        }
                                                        tLRPC$TL_decryptedMessage2.silent = tLRPC$Message2.silent;
                                                        tLRPC$TL_decryptedMessage2.random_id = tLRPC$Message2.random_id;
                                                        tLRPC$TL_decryptedMessage2.message = str50;
                                                        TLRPC$WebPage tLRPC$WebPage6 = tLRPC$WebPage2;
                                                        if (tLRPC$WebPage6 != null && tLRPC$WebPage6.url != null) {
                                                            TLRPC$TL_decryptedMessageMediaWebPage tLRPC$TL_decryptedMessageMediaWebPage = new TLRPC$TL_decryptedMessageMediaWebPage();
                                                            tLRPC$TL_decryptedMessage2.media = tLRPC$TL_decryptedMessageMediaWebPage;
                                                            tLRPC$TL_decryptedMessageMediaWebPage.url = tLRPC$WebPage6.url;
                                                            tLRPC$TL_decryptedMessage2.flags |= 512;
                                                        } else {
                                                            tLRPC$TL_decryptedMessage2.media = new TLRPC$TL_decryptedMessageMediaEmpty();
                                                        }
                                                        getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage2, messageObject16.messageOwner, tLRPC$EncryptedChat, null, null, messageObject16);
                                                        if (messageObject3 == null) {
                                                            getMediaDataController().cleanDraft(j, messageObject2 != null ? messageObject2.getId() : 0, false);
                                                        }
                                                    }
                                                    return;
                                                }
                                            } catch (Exception e42) {
                                                e = e42;
                                                i20 = i;
                                                exc = e;
                                                i5 = i20;
                                                tLRPC$Message3 = tLRPC$Message2;
                                                messageObject4 = null;
                                                i3 = i5;
                                                tLRPC$Message = tLRPC$Message3;
                                                FileLog.e(exc);
                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 == 0);
                                                if (messageObject4 != null) {
                                                }
                                                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                processSentMessage(tLRPC$Message.id);
                                                return;
                                            }
                                        } else {
                                            str10 = str9;
                                            tLRPC$User3 = tLRPC$User2;
                                        }
                                        z7 = true;
                                        tLRPC$Message2.silent = z7;
                                        if (tLRPC$Message2.random_id == 0) {
                                        }
                                        if (hashMap2 != null) {
                                            if (tLRPC$EncryptedChat == null) {
                                            }
                                            tLRPC$Message2.flags |= 2048;
                                        }
                                        tLRPC$Message2.params = hashMap2;
                                        if (messageObject3 != null) {
                                        }
                                        if (i != 0) {
                                        }
                                        tLRPC$Message2.date = currentTime;
                                        if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
                                        }
                                        tLRPC$Message2.flags |= 512;
                                        tLRPC$Message2.dialog_id = j;
                                        if (messageObject != null) {
                                        }
                                        j5 = j2;
                                        if (j5 != 0) {
                                        }
                                        if (tLRPC$ReplyMarkup != null) {
                                            tLRPC$Message2.flags |= 64;
                                            tLRPC$Message2.reply_markup = tLRPC$ReplyMarkup;
                                        }
                                        if (!DialogObject.isEncryptedDialog(j)) {
                                        }
                                        if (!MessageObject.isVoiceMessage(tLRPC$Message2)) {
                                        }
                                        tLRPC$Message2.media_unread = true;
                                        if (tLRPC$Message2.from_id == null) {
                                        }
                                        tLRPC$Message2.send_state = 1;
                                        if (hashMap2 != null) {
                                        }
                                        String str392 = str10;
                                        messageObject5 = messageObject13;
                                        TLRPC$User tLRPC$User42 = tLRPC$User3;
                                        Object obj102 = obj3;
                                        Object obj112 = obj4;
                                        String str402 = str6;
                                        TLRPC$TL_photo tLRPC$TL_photo62 = tLRPC$TL_photo2;
                                        j7 = j6;
                                        String str412 = str4;
                                        TLRPC$InputPeer tLRPC$InputPeer72 = tLRPC$InputPeer3;
                                        String str422 = str7;
                                        int i322 = i6;
                                        String str432 = str8;
                                        MessageObject messageObject132 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message2, messageObject, true, true);
                                        messageObject5.sendAnimationData = sendAnimationData;
                                        messageObject5.wasJustSent = true;
                                        messageObject5.scheduled = i != 0;
                                        if (!messageObject5.isForwarded()) {
                                        }
                                        videoEditedInfo2 = messageObject5.videoEditedInfo;
                                        if (videoEditedInfo2 != null) {
                                        }
                                        videoEditedInfo2 = videoEditedInfo;
                                        if (j7 == 0) {
                                        }
                                        if (BuildVars.LOGS_ENABLED) {
                                        }
                                        r2 = c;
                                        if (r2 != 0) {
                                            if (r2 >= 1) {
                                                if (tLRPC$EncryptedChat == null) {
                                                }
                                                return;
                                            }
                                            if (r2 >= 5) {
                                            }
                                            if (r2 != 10) {
                                                if (r2 != 4) {
                                                }
                                                return;
                                            }
                                            if (tLRPC$EncryptedChat == null) {
                                            }
                                            return;
                                        }
                                        MessageObject messageObject162 = messageObject5;
                                        HashMap<String, String> hashMap122 = hashMap2;
                                        TLRPC$InputPeer tLRPC$InputPeer82 = tLRPC$InputPeer4;
                                        String str502 = str;
                                        if (tLRPC$EncryptedChat == null) {
                                        }
                                        return;
                                    } else {
                                        j2 = 0;
                                        tLRPC$Peer = null;
                                        tLRPC$EncryptedChat = null;
                                    }
                                    if (r2 != 0) {
                                    }
                                    MessageObject messageObject1622 = messageObject5;
                                    HashMap<String, String> hashMap1222 = hashMap2;
                                    TLRPC$InputPeer tLRPC$InputPeer822 = tLRPC$InputPeer4;
                                    String str5022 = str;
                                    if (tLRPC$EncryptedChat == null) {
                                    }
                                    return;
                                } catch (Exception e43) {
                                    e = e43;
                                }
                                if (j7 == 0) {
                                }
                                if (BuildVars.LOGS_ENABLED) {
                                }
                                r2 = c;
                            } catch (Exception e44) {
                                e = e44;
                                tLRPC$Message6 = tLRPC$Message2;
                            }
                            messageObject5.scheduled = i != 0;
                            if (!messageObject5.isForwarded()) {
                            }
                            videoEditedInfo2 = messageObject5.videoEditedInfo;
                            if (videoEditedInfo2 != null) {
                            }
                            videoEditedInfo2 = videoEditedInfo;
                        } catch (Exception e45) {
                            e = e45;
                            r2 = messageObject5;
                        }
                        messageObject5.sendAnimationData = sendAnimationData;
                        messageObject5.wasJustSent = true;
                    } catch (Exception e46) {
                        e = e46;
                        z4 = i;
                        r2 = messageObject5;
                    }
                    if (messageObject3 == null) {
                    }
                    if (!z6) {
                    }
                    z7 = true;
                    tLRPC$Message2.silent = z7;
                    if (tLRPC$Message2.random_id == 0) {
                    }
                    if (hashMap2 != null) {
                    }
                    tLRPC$Message2.params = hashMap2;
                    if (messageObject3 != null) {
                    }
                    if (i != 0) {
                    }
                    tLRPC$Message2.date = currentTime;
                    if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
                    }
                    tLRPC$Message2.flags |= 512;
                    tLRPC$Message2.dialog_id = j;
                    if (messageObject != null) {
                    }
                    j5 = j2;
                    if (j5 != 0) {
                    }
                    if (tLRPC$ReplyMarkup != null) {
                    }
                    if (!DialogObject.isEncryptedDialog(j)) {
                    }
                    if (!MessageObject.isVoiceMessage(tLRPC$Message2)) {
                    }
                    tLRPC$Message2.media_unread = true;
                    if (tLRPC$Message2.from_id == null) {
                    }
                    tLRPC$Message2.send_state = 1;
                    if (hashMap2 != null) {
                    }
                    String str3922 = str10;
                    messageObject5 = messageObject132;
                    TLRPC$User tLRPC$User422 = tLRPC$User3;
                    Object obj1022 = obj3;
                    Object obj1122 = obj4;
                    String str4022 = str6;
                    TLRPC$TL_photo tLRPC$TL_photo622 = tLRPC$TL_photo2;
                    j7 = j6;
                    String str4122 = str4;
                    TLRPC$InputPeer tLRPC$InputPeer722 = tLRPC$InputPeer3;
                    String str4222 = str7;
                    int i3222 = i6;
                    String str4322 = str8;
                    MessageObject messageObject1322 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message2, messageObject, true, true);
                } catch (Exception e47) {
                    e = e47;
                    tLRPC$Message2 = this;
                    z4 = i;
                }
            } catch (Exception e48) {
                exc = e48;
                i4 = i;
            }
            z3 = false;
            TLRPC$Peer tLRPC$Peer22 = tLRPC$Peer;
            TLRPC$InputPeer tLRPC$InputPeer62 = tLRPC$InputPeer;
            String str302 = "query_id";
        }
    }

    private void performSendDelayedMessage(DelayedMessage delayedMessage) {
        performSendDelayedMessage(delayedMessage, -1);
    }

    private TLRPC$PhotoSize getThumbForSecretChat(ArrayList<TLRPC$PhotoSize> arrayList) {
        if (arrayList != null && !arrayList.isEmpty()) {
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                TLRPC$PhotoSize tLRPC$PhotoSize = arrayList.get(i);
                if (tLRPC$PhotoSize != null && !(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) && !(tLRPC$PhotoSize instanceof TLRPC$TL_photoPathSize) && !(tLRPC$PhotoSize instanceof TLRPC$TL_photoSizeEmpty) && tLRPC$PhotoSize.location != null) {
                    TLRPC$TL_photoSize_layer127 tLRPC$TL_photoSize_layer127 = new TLRPC$TL_photoSize_layer127();
                    tLRPC$TL_photoSize_layer127.type = tLRPC$PhotoSize.type;
                    tLRPC$TL_photoSize_layer127.w = tLRPC$PhotoSize.w;
                    tLRPC$TL_photoSize_layer127.h = tLRPC$PhotoSize.h;
                    tLRPC$TL_photoSize_layer127.size = tLRPC$PhotoSize.size;
                    byte[] bArr = tLRPC$PhotoSize.bytes;
                    tLRPC$TL_photoSize_layer127.bytes = bArr;
                    if (bArr == null) {
                        tLRPC$TL_photoSize_layer127.bytes = new byte[0];
                    }
                    TLRPC$TL_fileLocation_layer82 tLRPC$TL_fileLocation_layer82 = new TLRPC$TL_fileLocation_layer82();
                    tLRPC$TL_photoSize_layer127.location = tLRPC$TL_fileLocation_layer82;
                    TLRPC$FileLocation tLRPC$FileLocation = tLRPC$PhotoSize.location;
                    tLRPC$TL_fileLocation_layer82.dc_id = tLRPC$FileLocation.dc_id;
                    tLRPC$TL_fileLocation_layer82.volume_id = tLRPC$FileLocation.volume_id;
                    tLRPC$TL_fileLocation_layer82.local_id = tLRPC$FileLocation.local_id;
                    tLRPC$TL_fileLocation_layer82.secret = tLRPC$FileLocation.secret;
                    return tLRPC$TL_photoSize_layer127;
                }
            }
        }
        return null;
    }

    private void performSendDelayedMessage(DelayedMessage delayedMessage, int i) {
        boolean z;
        boolean z2;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile;
        MessageObject messageObject;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$InputMedia tLRPC$InputMedia2;
        TLRPC$InputMedia tLRPC$InputMedia3;
        int i2 = delayedMessage.type;
        boolean z3 = false;
        boolean z4 = true;
        if (i2 == 0) {
            String str = delayedMessage.httpLocation;
            if (str != null) {
                putToDelayedMessages(str, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
            } else if (delayedMessage.sendRequest != null) {
                String file = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                putToDelayedMessages(file, delayedMessage);
                getFileLoader().uploadFile(file, false, true, 16777216);
                putToUploadingMessages(delayedMessage.obj);
            } else {
                String file2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                if (delayedMessage.sendEncryptedRequest != null && delayedMessage.photoSize.location.dc_id != 0) {
                    File file3 = new File(file2);
                    if (!file3.exists()) {
                        file2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize, true).toString();
                        file3 = new File(file2);
                    }
                    if (!file3.exists()) {
                        putToDelayedMessages(FileLoader.getAttachFileName(delayedMessage.photoSize), delayedMessage);
                        getFileLoader().loadFile(ImageLocation.getForObject(delayedMessage.photoSize, delayedMessage.locationParent), delayedMessage.parentObject, "jpg", 2, 0);
                        return;
                    }
                }
                putToDelayedMessages(file2, delayedMessage);
                getFileLoader().uploadFile(file2, true, true, 16777216);
                putToUploadingMessages(delayedMessage.obj);
            }
        } else if (i2 == 1) {
            VideoEditedInfo videoEditedInfo = delayedMessage.videoEditedInfo;
            if (videoEditedInfo != null && videoEditedInfo.needConvert()) {
                MessageObject messageObject2 = delayedMessage.obj;
                String str2 = messageObject2.messageOwner.attachPath;
                TLRPC$Document document = messageObject2.getDocument();
                if (str2 == null) {
                    str2 = FileLoader.getDirectory(4) + "/" + document.id + ".mp4";
                }
                putToDelayedMessages(str2, delayedMessage);
                MediaController.getInstance().scheduleVideoConvert(delayedMessage.obj);
                putToUploadingMessages(delayedMessage.obj);
                return;
            }
            VideoEditedInfo videoEditedInfo2 = delayedMessage.videoEditedInfo;
            if (videoEditedInfo2 != null) {
                TLRPC$InputFile tLRPC$InputFile = videoEditedInfo2.file;
                if (tLRPC$InputFile != null) {
                    TLObject tLObject = delayedMessage.sendRequest;
                    if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
                        tLRPC$InputMedia3 = ((TLRPC$TL_messages_sendMedia) tLObject).media;
                    } else {
                        tLRPC$InputMedia3 = ((TLRPC$TL_messages_editMessage) tLObject).media;
                    }
                    tLRPC$InputMedia3.file = tLRPC$InputFile;
                    videoEditedInfo2.file = null;
                } else if (videoEditedInfo2.encryptedFile != null) {
                    TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage = (TLRPC$TL_decryptedMessage) delayedMessage.sendEncryptedRequest;
                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                    tLRPC$DecryptedMessageMedia.size = videoEditedInfo2.estimatedSize;
                    tLRPC$DecryptedMessageMedia.key = videoEditedInfo2.key;
                    tLRPC$DecryptedMessageMedia.iv = videoEditedInfo2.iv;
                    SecretChatHelper secretChatHelper = getSecretChatHelper();
                    MessageObject messageObject3 = delayedMessage.obj;
                    secretChatHelper.performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject3.messageOwner, delayedMessage.encryptedChat, delayedMessage.videoEditedInfo.encryptedFile, delayedMessage.originalPath, messageObject3);
                    delayedMessage.videoEditedInfo.encryptedFile = null;
                    return;
                }
            }
            TLObject tLObject2 = delayedMessage.sendRequest;
            if (tLObject2 != null) {
                if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
                    tLRPC$InputMedia2 = ((TLRPC$TL_messages_sendMedia) tLObject2).media;
                } else {
                    tLRPC$InputMedia2 = ((TLRPC$TL_messages_editMessage) tLObject2).media;
                }
                if (tLRPC$InputMedia2.file == null) {
                    MessageObject messageObject4 = delayedMessage.obj;
                    String str3 = messageObject4.messageOwner.attachPath;
                    TLRPC$Document document2 = messageObject4.getDocument();
                    if (str3 == null) {
                        str3 = FileLoader.getDirectory(4) + "/" + document2.id + ".mp4";
                    }
                    String str4 = str3;
                    putToDelayedMessages(str4, delayedMessage);
                    VideoEditedInfo videoEditedInfo3 = delayedMessage.obj.videoEditedInfo;
                    if (videoEditedInfo3 != null && videoEditedInfo3.needConvert()) {
                        getFileLoader().uploadFile(str4, false, false, document2.size, 33554432, false);
                    } else {
                        getFileLoader().uploadFile(str4, false, false, 33554432);
                    }
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                }
                String str5 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                putToDelayedMessages(str5, delayedMessage);
                getFileLoader().uploadFile(str5, false, true, 16777216);
                putToUploadingMessages(delayedMessage.obj);
                return;
            }
            MessageObject messageObject5 = delayedMessage.obj;
            String str6 = messageObject5.messageOwner.attachPath;
            TLRPC$Document document3 = messageObject5.getDocument();
            if (str6 == null) {
                str6 = FileLoader.getDirectory(4) + "/" + document3.id + ".mp4";
            }
            if (delayedMessage.sendEncryptedRequest != null && document3.dc_id != 0 && !new File(str6).exists()) {
                putToDelayedMessages(FileLoader.getAttachFileName(document3), delayedMessage);
                getFileLoader().loadFile(document3, delayedMessage.parentObject, 2, 0);
                return;
            }
            putToDelayedMessages(str6, delayedMessage);
            VideoEditedInfo videoEditedInfo4 = delayedMessage.obj.videoEditedInfo;
            if (videoEditedInfo4 != null && videoEditedInfo4.needConvert()) {
                getFileLoader().uploadFile(str6, true, false, document3.size, 33554432, false);
            } else {
                getFileLoader().uploadFile(str6, true, false, 33554432);
            }
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 == 2) {
            String str7 = delayedMessage.httpLocation;
            if (str7 != null) {
                putToDelayedMessages(str7, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "gif", this.currentAccount);
                return;
            }
            TLObject tLObject3 = delayedMessage.sendRequest;
            if (tLObject3 != null) {
                if (tLObject3 instanceof TLRPC$TL_messages_sendMedia) {
                    tLRPC$InputMedia = ((TLRPC$TL_messages_sendMedia) tLObject3).media;
                } else {
                    tLRPC$InputMedia = ((TLRPC$TL_messages_editMessage) tLObject3).media;
                }
                if (tLRPC$InputMedia.file == null) {
                    String str8 = delayedMessage.obj.messageOwner.attachPath;
                    putToDelayedMessages(str8, delayedMessage);
                    FileLoader fileLoader = getFileLoader();
                    if (delayedMessage.sendRequest != null) {
                        z4 = false;
                    }
                    fileLoader.uploadFile(str8, z4, false, 67108864);
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                } else if (tLRPC$InputMedia.thumb != null || (tLRPC$PhotoSize = delayedMessage.photoSize) == null || (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                    return;
                } else {
                    String str9 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                    putToDelayedMessages(str9, delayedMessage);
                    getFileLoader().uploadFile(str9, false, true, 16777216);
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                }
            }
            MessageObject messageObject6 = delayedMessage.obj;
            String str10 = messageObject6.messageOwner.attachPath;
            TLRPC$Document document4 = messageObject6.getDocument();
            if (delayedMessage.sendEncryptedRequest != null && document4.dc_id != 0 && !new File(str10).exists()) {
                putToDelayedMessages(FileLoader.getAttachFileName(document4), delayedMessage);
                getFileLoader().loadFile(document4, delayedMessage.parentObject, 2, 0);
                return;
            }
            putToDelayedMessages(str10, delayedMessage);
            getFileLoader().uploadFile(str10, true, false, 67108864);
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 == 3) {
            String str11 = delayedMessage.obj.messageOwner.attachPath;
            putToDelayedMessages(str11, delayedMessage);
            FileLoader fileLoader2 = getFileLoader();
            if (delayedMessage.sendRequest == null) {
                z3 = true;
            }
            fileLoader2.uploadFile(str11, z3, true, 50331648);
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 != 4) {
            if (i2 != 5) {
                return;
            }
            String str12 = "stickerset_" + delayedMessage.obj.getId();
            TLRPC$TL_messages_getStickerSet tLRPC$TL_messages_getStickerSet = new TLRPC$TL_messages_getStickerSet();
            tLRPC$TL_messages_getStickerSet.stickerset = (TLRPC$InputStickerSet) delayedMessage.parentObject;
            getConnectionsManager().sendRequest(tLRPC$TL_messages_getStickerSet, new SendMessagesHelper$$ExternalSyntheticLambda85(this, delayedMessage, str12));
            putToDelayedMessages(str12, delayedMessage);
        } else {
            boolean z5 = i < 0;
            if (delayedMessage.performMediaUpload) {
                int size = i < 0 ? delayedMessage.messageObjects.size() - 1 : i;
                MessageObject messageObject7 = delayedMessage.messageObjects.get(size);
                if (messageObject7.getDocument() != null) {
                    if (delayedMessage.videoEditedInfo != null) {
                        String str13 = messageObject7.messageOwner.attachPath;
                        TLRPC$Document document5 = messageObject7.getDocument();
                        if (str13 == null) {
                            str13 = FileLoader.getDirectory(4) + "/" + document5.id + ".mp4";
                        }
                        putToDelayedMessages(str13, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject7, str13);
                        delayedMessage.extraHashMap.put(str13 + "_i", messageObject7);
                        TLRPC$PhotoSize tLRPC$PhotoSize2 = delayedMessage.photoSize;
                        if (tLRPC$PhotoSize2 != null && tLRPC$PhotoSize2.location != null) {
                            delayedMessage.extraHashMap.put(str13 + "_t", delayedMessage.photoSize);
                        }
                        MediaController.getInstance().scheduleVideoConvert(messageObject7);
                        delayedMessage.obj = messageObject7;
                        putToUploadingMessages(messageObject7);
                    } else {
                        TLRPC$Document document6 = messageObject7.getDocument();
                        String str14 = messageObject7.messageOwner.attachPath;
                        if (str14 == null) {
                            StringBuilder sb = new StringBuilder();
                            sb.append(FileLoader.getDirectory(4));
                            sb.append("/");
                            messageObject = messageObject7;
                            sb.append(document6.id);
                            sb.append(".mp4");
                            str14 = sb.toString();
                        } else {
                            messageObject = messageObject7;
                        }
                        TLObject tLObject4 = delayedMessage.sendRequest;
                        if (tLObject4 != null) {
                            TLRPC$InputMedia tLRPC$InputMedia4 = ((TLRPC$TL_messages_sendMultiMedia) tLObject4).multi_media.get(size).media;
                            if (tLRPC$InputMedia4.file == null) {
                                putToDelayedMessages(str14, delayedMessage);
                                MessageObject messageObject8 = messageObject;
                                delayedMessage.extraHashMap.put(messageObject8, str14);
                                delayedMessage.extraHashMap.put(str14, tLRPC$InputMedia4);
                                delayedMessage.extraHashMap.put(str14 + "_i", messageObject8);
                                TLRPC$PhotoSize tLRPC$PhotoSize3 = delayedMessage.photoSize;
                                if (tLRPC$PhotoSize3 != null && tLRPC$PhotoSize3.location != null) {
                                    delayedMessage.extraHashMap.put(str14 + "_t", delayedMessage.photoSize);
                                }
                                VideoEditedInfo videoEditedInfo5 = messageObject8.videoEditedInfo;
                                if (videoEditedInfo5 != null && videoEditedInfo5.needConvert()) {
                                    getFileLoader().uploadFile(str14, false, false, document6.size, 33554432, false);
                                } else {
                                    getFileLoader().uploadFile(str14, false, false, 33554432);
                                }
                                putToUploadingMessages(messageObject8);
                            } else {
                                MessageObject messageObject9 = messageObject;
                                if (delayedMessage.photoSize != null) {
                                    String str15 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                                    putToDelayedMessages(str15, delayedMessage);
                                    delayedMessage.extraHashMap.put(str15 + "_o", str14);
                                    delayedMessage.extraHashMap.put(messageObject9, str15);
                                    delayedMessage.extraHashMap.put(str15, tLRPC$InputMedia4);
                                    getFileLoader().uploadFile(str15, false, true, 16777216);
                                    putToUploadingMessages(messageObject9);
                                }
                            }
                        } else {
                            MessageObject messageObject10 = messageObject;
                            putToDelayedMessages(str14, delayedMessage);
                            delayedMessage.extraHashMap.put(messageObject10, str14);
                            delayedMessage.extraHashMap.put(str14, ((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(size));
                            delayedMessage.extraHashMap.put(str14 + "_i", messageObject10);
                            TLRPC$PhotoSize tLRPC$PhotoSize4 = delayedMessage.photoSize;
                            if (tLRPC$PhotoSize4 != null && tLRPC$PhotoSize4.location != null) {
                                delayedMessage.extraHashMap.put(str14 + "_t", delayedMessage.photoSize);
                            }
                            VideoEditedInfo videoEditedInfo6 = messageObject10.videoEditedInfo;
                            if (videoEditedInfo6 != null && videoEditedInfo6.needConvert()) {
                                getFileLoader().uploadFile(str14, true, false, document6.size, 33554432, false);
                            } else {
                                getFileLoader().uploadFile(str14, true, false, 33554432);
                            }
                            putToUploadingMessages(messageObject10);
                        }
                    }
                    delayedMessage.videoEditedInfo = null;
                    delayedMessage.photoSize = null;
                } else {
                    String str16 = delayedMessage.httpLocation;
                    if (str16 != null) {
                        putToDelayedMessages(str16, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject7, delayedMessage.httpLocation);
                        delayedMessage.extraHashMap.put(delayedMessage.httpLocation, messageObject7);
                        ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
                        delayedMessage.httpLocation = null;
                    } else {
                        TLObject tLObject5 = delayedMessage.sendRequest;
                        if (tLObject5 != null) {
                            tLRPC$InputEncryptedFile = ((TLRPC$TL_messages_sendMultiMedia) tLObject5).multi_media.get(size).media;
                        } else {
                            tLRPC$InputEncryptedFile = ((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(size);
                        }
                        String file4 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                        putToDelayedMessages(file4, delayedMessage);
                        delayedMessage.extraHashMap.put(file4, tLRPC$InputEncryptedFile);
                        delayedMessage.extraHashMap.put(messageObject7, file4);
                        z = true;
                        getFileLoader().uploadFile(file4, delayedMessage.sendEncryptedRequest != null, true, 16777216);
                        putToUploadingMessages(messageObject7);
                        delayedMessage.photoSize = null;
                        z2 = false;
                        delayedMessage.performMediaUpload = z2;
                    }
                }
                z2 = false;
                z = true;
                delayedMessage.performMediaUpload = z2;
            } else {
                z = true;
                if (!delayedMessage.messageObjects.isEmpty()) {
                    ArrayList<MessageObject> arrayList = delayedMessage.messageObjects;
                    putToSendingMessages(arrayList.get(arrayList.size() - 1).messageOwner, delayedMessage.finalGroupMessage != 0);
                }
            }
            sendReadyToSendGroup(delayedMessage, z5, z);
        }
    }

    public /* synthetic */ void lambda$performSendDelayedMessage$33(DelayedMessage delayedMessage, String str, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda42(this, tLObject, delayedMessage, str));
    }

    public /* synthetic */ void lambda$performSendDelayedMessage$32(TLObject tLObject, DelayedMessage delayedMessage, String str) {
        boolean z;
        if (tLObject != null) {
            TLRPC$TL_messages_stickerSet tLRPC$TL_messages_stickerSet = (TLRPC$TL_messages_stickerSet) tLObject;
            getMediaDataController().storeTempStickerSet(tLRPC$TL_messages_stickerSet);
            TLRPC$TL_inputStickerSetShortName tLRPC$TL_inputStickerSetShortName = new TLRPC$TL_inputStickerSetShortName();
            ((TLRPC$TL_documentAttributeSticker_layer55) delayedMessage.locationParent).stickerset = tLRPC$TL_inputStickerSetShortName;
            tLRPC$TL_inputStickerSetShortName.short_name = tLRPC$TL_messages_stickerSet.set.short_name;
            z = true;
        } else {
            z = false;
        }
        ArrayList<DelayedMessage> remove = this.delayedMessages.remove(str);
        if (remove == null || remove.isEmpty()) {
            return;
        }
        if (z) {
            getMessagesStorage().replaceMessageIfExists(remove.get(0).obj.messageOwner, null, null, false);
        }
        MessageObject messageObject = delayedMessage.obj;
        getSecretChatHelper().performSendEncryptedRequest((TLRPC$DecryptedMessage) delayedMessage.sendEncryptedRequest, messageObject.messageOwner, delayedMessage.encryptedChat, null, null, messageObject);
    }

    private void uploadMultiMedia(DelayedMessage delayedMessage, TLRPC$InputMedia tLRPC$InputMedia, TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile, String str) {
        if (tLRPC$InputMedia == null) {
            if (tLRPC$InputEncryptedFile == null) {
                return;
            }
            TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
            int i = 0;
            while (true) {
                if (i >= tLRPC$TL_messages_sendEncryptedMultiMedia.files.size()) {
                    break;
                } else if (tLRPC$TL_messages_sendEncryptedMultiMedia.files.get(i) == tLRPC$InputEncryptedFile) {
                    putToSendingMessages(delayedMessage.messages.get(i), delayedMessage.scheduled);
                    getNotificationCenter().postNotificationName(NotificationCenter.fileUploadProgressChanged, str, -1L, -1L, Boolean.FALSE);
                    break;
                } else {
                    i++;
                }
            }
            sendReadyToSendGroup(delayedMessage, false, true);
            return;
        }
        TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) delayedMessage.sendRequest;
        int i2 = 0;
        while (true) {
            if (i2 >= tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                break;
            } else if (tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media == tLRPC$InputMedia) {
                putToSendingMessages(delayedMessage.messages.get(i2), delayedMessage.scheduled);
                getNotificationCenter().postNotificationName(NotificationCenter.fileUploadProgressChanged, str, -1L, -1L, Boolean.FALSE);
                break;
            } else {
                i2++;
            }
        }
        TLRPC$TL_messages_uploadMedia tLRPC$TL_messages_uploadMedia = new TLRPC$TL_messages_uploadMedia();
        tLRPC$TL_messages_uploadMedia.media = tLRPC$InputMedia;
        tLRPC$TL_messages_uploadMedia.peer = ((TLRPC$TL_messages_sendMultiMedia) delayedMessage.sendRequest).peer;
        getConnectionsManager().sendRequest(tLRPC$TL_messages_uploadMedia, new SendMessagesHelper$$ExternalSyntheticLambda87(this, tLRPC$InputMedia, delayedMessage));
    }

    public /* synthetic */ void lambda$uploadMultiMedia$35(TLRPC$InputMedia tLRPC$InputMedia, DelayedMessage delayedMessage, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda43(this, tLObject, tLRPC$InputMedia, delayedMessage));
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:19:0x005f  */
    /* JADX WARN: Removed duplicated region for block: B:30:0x0097  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$uploadMultiMedia$34(TLObject tLObject, TLRPC$InputMedia tLRPC$InputMedia, DelayedMessage delayedMessage) {
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument;
        if (tLObject != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia = (TLRPC$MessageMedia) tLObject;
            if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedPhoto) && (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto)) {
                TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto = new TLRPC$TL_inputMediaPhoto();
                TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                tLRPC$TL_inputMediaPhoto.id = tLRPC$TL_inputPhoto;
                TLRPC$Photo tLRPC$Photo = tLRPC$MessageMedia.photo;
                tLRPC$TL_inputPhoto.id = tLRPC$Photo.id;
                tLRPC$TL_inputPhoto.access_hash = tLRPC$Photo.access_hash;
                tLRPC$TL_inputPhoto.file_reference = tLRPC$Photo.file_reference;
                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaPhoto;
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("set uploaded photo");
                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaPhoto;
                }
            } else if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument) && (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument)) {
                TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument2 = new TLRPC$TL_inputMediaDocument();
                TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                tLRPC$TL_inputMediaDocument2.id = tLRPC$TL_inputDocument;
                TLRPC$Document tLRPC$Document = tLRPC$MessageMedia.document;
                tLRPC$TL_inputDocument.id = tLRPC$Document.id;
                tLRPC$TL_inputDocument.access_hash = tLRPC$Document.access_hash;
                tLRPC$TL_inputDocument.file_reference = tLRPC$Document.file_reference;
                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument2;
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("set uploaded document");
                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument2;
                }
            }
            if (tLRPC$TL_inputMediaDocument == null) {
                int i = tLRPC$InputMedia.ttl_seconds;
                if (i != 0) {
                    tLRPC$TL_inputMediaDocument.ttl_seconds = i;
                    tLRPC$TL_inputMediaDocument.flags |= 1;
                }
                TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) delayedMessage.sendRequest;
                int i2 = 0;
                while (true) {
                    if (i2 >= tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                        break;
                    } else if (tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media == tLRPC$InputMedia) {
                        tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media = tLRPC$TL_inputMediaDocument;
                        break;
                    } else {
                        i2++;
                    }
                }
                sendReadyToSendGroup(delayedMessage, false, true);
                return;
            }
            delayedMessage.markAsError();
            return;
        }
        tLRPC$TL_inputMediaDocument = null;
        if (tLRPC$TL_inputMediaDocument == null) {
        }
    }

    private void sendReadyToSendGroup(DelayedMessage delayedMessage, boolean z, boolean z2) {
        ArrayList<MessageObject> arrayList;
        DelayedMessage findMaxDelayedMessageForMessageId;
        if (delayedMessage.messageObjects.isEmpty()) {
            delayedMessage.markAsError();
            return;
        }
        String str = "group_" + delayedMessage.groupId;
        if (delayedMessage.finalGroupMessage != delayedMessage.messageObjects.get(arrayList.size() - 1).getId()) {
            if (z) {
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("final message not added, add");
                }
                putToDelayedMessages(str, delayedMessage);
                return;
            } else if (!BuildVars.DEBUG_VERSION) {
                return;
            } else {
                FileLog.d("final message not added");
                return;
            }
        }
        int i = 0;
        if (z) {
            this.delayedMessages.remove(str);
            getMessagesStorage().putMessages(delayedMessage.messages, false, true, false, 0, delayedMessage.scheduled);
            getMessagesController().updateInterfaceWithMessages(delayedMessage.peer, delayedMessage.messageObjects, delayedMessage.scheduled);
            if (!delayedMessage.scheduled) {
                getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
            }
            if (BuildVars.DEBUG_VERSION) {
                FileLog.d("add message");
            }
        }
        TLObject tLObject = delayedMessage.sendRequest;
        if (tLObject instanceof TLRPC$TL_messages_sendMultiMedia) {
            TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) tLObject;
            while (i < tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_messages_sendMultiMedia.multi_media.get(i).media;
                if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedPhoto) || (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument)) {
                    if (!BuildVars.DEBUG_VERSION) {
                        return;
                    }
                    FileLog.d("multi media not ready");
                    return;
                }
                i++;
            }
            if (z2 && (findMaxDelayedMessageForMessageId = findMaxDelayedMessageForMessageId(delayedMessage.finalGroupMessage, delayedMessage.peer)) != null) {
                findMaxDelayedMessageForMessageId.addDelayedRequest(delayedMessage.sendRequest, delayedMessage.messageObjects, delayedMessage.originalPaths, delayedMessage.parentObjects, delayedMessage, delayedMessage.scheduled);
                ArrayList<DelayedMessageSendAfterRequest> arrayList2 = delayedMessage.requests;
                if (arrayList2 != null) {
                    findMaxDelayedMessageForMessageId.requests.addAll(arrayList2);
                }
                if (!BuildVars.DEBUG_VERSION) {
                    return;
                }
                FileLog.d("has maxDelayedMessage, delay");
                return;
            }
        } else {
            TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
            while (i < tLRPC$TL_messages_sendEncryptedMultiMedia.files.size()) {
                if (tLRPC$TL_messages_sendEncryptedMultiMedia.files.get(i) instanceof TLRPC$TL_inputEncryptedFile) {
                    return;
                }
                i++;
            }
        }
        TLObject tLObject2 = delayedMessage.sendRequest;
        if (tLObject2 instanceof TLRPC$TL_messages_sendMultiMedia) {
            performSendMessageRequestMulti((TLRPC$TL_messages_sendMultiMedia) tLObject2, delayedMessage.messageObjects, delayedMessage.originalPaths, delayedMessage.parentObjects, delayedMessage, delayedMessage.scheduled);
        } else {
            getSecretChatHelper().performSendEncryptedRequest((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest, delayedMessage);
        }
        delayedMessage.sendDelayedRequests();
    }

    public /* synthetic */ void lambda$stopVideoService$36(String str) {
        NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.stopEncodingService, str, Integer.valueOf(this.currentAccount));
    }

    public /* synthetic */ void lambda$stopVideoService$37(String str) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda28(this, str));
    }

    public void stopVideoService(String str) {
        getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda26(this, str));
    }

    public void putToSendingMessages(TLRPC$Message tLRPC$Message, boolean z) {
        if (Thread.currentThread() != ApplicationLoader.applicationHandler.getLooper().getThread()) {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda54(this, tLRPC$Message, z));
        } else {
            putToSendingMessages(tLRPC$Message, z, true);
        }
    }

    public /* synthetic */ void lambda$putToSendingMessages$38(TLRPC$Message tLRPC$Message, boolean z) {
        putToSendingMessages(tLRPC$Message, z, true);
    }

    protected void putToSendingMessages(TLRPC$Message tLRPC$Message, boolean z, boolean z2) {
        if (tLRPC$Message == null) {
            return;
        }
        int i = tLRPC$Message.id;
        if (i > 0) {
            this.editingMessages.put(i, tLRPC$Message);
            return;
        }
        boolean z3 = this.sendingMessages.indexOfKey(i) >= 0;
        removeFromUploadingMessages(tLRPC$Message.id, z);
        this.sendingMessages.put(tLRPC$Message.id, tLRPC$Message);
        if (z || z3) {
            return;
        }
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        LongSparseArray<Integer> longSparseArray = this.sendingMessagesIdDialogs;
        longSparseArray.put(dialogId, Integer.valueOf(longSparseArray.get(dialogId, 0).intValue() + 1));
        if (!z2) {
            return;
        }
        getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
    }

    public TLRPC$Message removeFromSendingMessages(int i, boolean z) {
        long dialogId;
        Integer num;
        if (i > 0) {
            TLRPC$Message tLRPC$Message = this.editingMessages.get(i);
            if (tLRPC$Message == null) {
                return tLRPC$Message;
            }
            this.editingMessages.remove(i);
            return tLRPC$Message;
        }
        TLRPC$Message tLRPC$Message2 = this.sendingMessages.get(i);
        if (tLRPC$Message2 != null) {
            this.sendingMessages.remove(i);
            if (!z && (num = this.sendingMessagesIdDialogs.get((dialogId = MessageObject.getDialogId(tLRPC$Message2)))) != null) {
                int intValue = num.intValue() - 1;
                if (intValue <= 0) {
                    this.sendingMessagesIdDialogs.remove(dialogId);
                } else {
                    this.sendingMessagesIdDialogs.put(dialogId, Integer.valueOf(intValue));
                }
                getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
            }
        }
        return tLRPC$Message2;
    }

    public int getSendingMessageId(long j) {
        for (int i = 0; i < this.sendingMessages.size(); i++) {
            TLRPC$Message valueAt = this.sendingMessages.valueAt(i);
            if (valueAt.dialog_id == j) {
                return valueAt.id;
            }
        }
        for (int i2 = 0; i2 < this.uploadMessages.size(); i2++) {
            TLRPC$Message valueAt2 = this.uploadMessages.valueAt(i2);
            if (valueAt2.dialog_id == j) {
                return valueAt2.id;
            }
        }
        return 0;
    }

    protected void putToUploadingMessages(MessageObject messageObject) {
        if (messageObject == null || messageObject.getId() > 0 || messageObject.scheduled) {
            return;
        }
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        boolean z = this.uploadMessages.indexOfKey(tLRPC$Message.id) >= 0;
        this.uploadMessages.put(tLRPC$Message.id, tLRPC$Message);
        if (z) {
            return;
        }
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        LongSparseArray<Integer> longSparseArray = this.uploadingMessagesIdDialogs;
        longSparseArray.put(dialogId, Integer.valueOf(longSparseArray.get(dialogId, 0).intValue() + 1));
        getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
    }

    protected void removeFromUploadingMessages(int i, boolean z) {
        TLRPC$Message tLRPC$Message;
        if (i > 0 || z || (tLRPC$Message = this.uploadMessages.get(i)) == null) {
            return;
        }
        this.uploadMessages.remove(i);
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        Integer num = this.uploadingMessagesIdDialogs.get(dialogId);
        if (num == null) {
            return;
        }
        int intValue = num.intValue() - 1;
        if (intValue <= 0) {
            this.uploadingMessagesIdDialogs.remove(dialogId);
        } else {
            this.uploadingMessagesIdDialogs.put(dialogId, Integer.valueOf(intValue));
        }
        getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
    }

    public boolean isSendingMessage(int i) {
        return this.sendingMessages.indexOfKey(i) >= 0 || this.editingMessages.indexOfKey(i) >= 0;
    }

    public boolean isSendingMessageIdDialog(long j) {
        return this.sendingMessagesIdDialogs.get(j, 0).intValue() > 0;
    }

    public boolean isUploadingMessageIdDialog(long j) {
        return this.uploadingMessagesIdDialogs.get(j, 0).intValue() > 0;
    }

    public void performSendMessageRequestMulti(TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia, ArrayList<MessageObject> arrayList, ArrayList<String> arrayList2, ArrayList<Object> arrayList3, DelayedMessage delayedMessage, boolean z) {
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            putToSendingMessages(arrayList.get(i).messageOwner, z);
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMultiMedia, new SendMessagesHelper$$ExternalSyntheticLambda83(this, arrayList3, tLRPC$TL_messages_sendMultiMedia, arrayList, arrayList2, delayedMessage, z), (QuickAckDelegate) null, 68);
    }

    public /* synthetic */ void lambda$performSendMessageRequestMulti$46(ArrayList arrayList, TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia, ArrayList arrayList2, ArrayList arrayList3, DelayedMessage delayedMessage, boolean z, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error != null && FileRefController.isFileRefError(tLRPC$TL_error.text)) {
            if (arrayList != null) {
                ArrayList arrayList4 = new ArrayList(arrayList);
                getFileRefController().requestReference(arrayList4, tLRPC$TL_messages_sendMultiMedia, arrayList2, arrayList3, arrayList4, delayedMessage, Boolean.valueOf(z));
                return;
            } else if (delayedMessage != null && !delayedMessage.retriedToSend) {
                delayedMessage.retriedToSend = true;
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda61(this, tLRPC$TL_messages_sendMultiMedia, delayedMessage, arrayList2, z));
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda56(this, tLRPC$TL_error, tLObject, arrayList2, arrayList3, z, tLRPC$TL_messages_sendMultiMedia));
    }

    public /* synthetic */ void lambda$performSendMessageRequestMulti$39(TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia, DelayedMessage delayedMessage, ArrayList arrayList, boolean z) {
        int size = tLRPC$TL_messages_sendMultiMedia.multi_media.size();
        boolean z2 = false;
        for (int i = 0; i < size; i++) {
            if (delayedMessage.parentObjects.get(i) != null) {
                removeFromSendingMessages(((MessageObject) arrayList.get(i)).getId(), z);
                TLRPC$TL_inputSingleMedia tLRPC$TL_inputSingleMedia = tLRPC$TL_messages_sendMultiMedia.multi_media.get(i);
                TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_inputSingleMedia.media;
                if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPhoto) {
                    tLRPC$TL_inputSingleMedia.media = delayedMessage.inputMedias.get(i);
                } else if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaDocument) {
                    tLRPC$TL_inputSingleMedia.media = delayedMessage.inputMedias.get(i);
                }
                delayedMessage.videoEditedInfo = delayedMessage.videoEditedInfos.get(i);
                delayedMessage.httpLocation = delayedMessage.httpLocations.get(i);
                TLRPC$PhotoSize tLRPC$PhotoSize = delayedMessage.locations.get(i);
                delayedMessage.photoSize = tLRPC$PhotoSize;
                delayedMessage.performMediaUpload = true;
                if (tLRPC$TL_inputSingleMedia.media.file == null || tLRPC$PhotoSize != null) {
                    z2 = true;
                }
                performSendDelayedMessage(delayedMessage, i);
            }
        }
        if (!z2) {
            for (int i2 = 0; i2 < arrayList.size(); i2++) {
                TLRPC$Message tLRPC$Message = ((MessageObject) arrayList.get(i2)).messageOwner;
                getMessagesStorage().markMessageAsSendError(tLRPC$Message, z);
                tLRPC$Message.send_state = 2;
                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                processSentMessage(tLRPC$Message.id);
                removeFromSendingMessages(tLRPC$Message.id, z);
            }
        }
    }

    public /* synthetic */ void lambda$performSendMessageRequestMulti$45(TLRPC$TL_error tLRPC$TL_error, TLObject tLObject, ArrayList arrayList, ArrayList arrayList2, boolean z, TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia) {
        boolean z2;
        TLRPC$Updates tLRPC$Updates;
        boolean z3;
        TLRPC$Message tLRPC$Message;
        TLRPC$Updates tLRPC$Updates2;
        int i;
        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader;
        if (tLRPC$TL_error == null) {
            SparseArray sparseArray = new SparseArray();
            LongSparseArray longSparseArray = new LongSparseArray();
            TLRPC$Updates tLRPC$Updates3 = (TLRPC$Updates) tLObject;
            ArrayList<TLRPC$Update> arrayList3 = tLRPC$Updates3.updates;
            LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray2 = null;
            int i2 = 0;
            while (i2 < arrayList3.size()) {
                TLRPC$Update tLRPC$Update = arrayList3.get(i2);
                if (tLRPC$Update instanceof TLRPC$TL_updateMessageID) {
                    TLRPC$TL_updateMessageID tLRPC$TL_updateMessageID = (TLRPC$TL_updateMessageID) tLRPC$Update;
                    longSparseArray.put(tLRPC$TL_updateMessageID.random_id, Integer.valueOf(tLRPC$TL_updateMessageID.id));
                    arrayList3.remove(i2);
                } else if (tLRPC$Update instanceof TLRPC$TL_updateNewMessage) {
                    TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update;
                    TLRPC$Message tLRPC$Message2 = tLRPC$TL_updateNewMessage.message;
                    sparseArray.put(tLRPC$Message2.id, tLRPC$Message2);
                    Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda66(this, tLRPC$TL_updateNewMessage));
                    arrayList3.remove(i2);
                } else if (tLRPC$Update instanceof TLRPC$TL_updateNewChannelMessage) {
                    TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update;
                    TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(MessagesController.getUpdateChannelId(tLRPC$TL_updateNewChannelMessage)));
                    if ((chat == null || chat.megagroup) && (tLRPC$TL_messageReplyHeader = tLRPC$TL_updateNewChannelMessage.message.reply_to) != null && (tLRPC$TL_messageReplyHeader.reply_to_top_id != 0 || tLRPC$TL_messageReplyHeader.reply_to_msg_id != 0)) {
                        if (longSparseArray2 == null) {
                            longSparseArray2 = new LongSparseArray<>();
                        }
                        long dialogId = MessageObject.getDialogId(tLRPC$TL_updateNewChannelMessage.message);
                        SparseArray<TLRPC$MessageReplies> sparseArray2 = longSparseArray2.get(dialogId);
                        if (sparseArray2 == null) {
                            sparseArray2 = new SparseArray<>();
                            longSparseArray2.put(dialogId, sparseArray2);
                        }
                        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader2 = tLRPC$TL_updateNewChannelMessage.message.reply_to;
                        int i3 = tLRPC$TL_messageReplyHeader2.reply_to_top_id;
                        if (i3 == 0) {
                            i3 = tLRPC$TL_messageReplyHeader2.reply_to_msg_id;
                        }
                        TLRPC$MessageReplies tLRPC$MessageReplies = sparseArray2.get(i3);
                        if (tLRPC$MessageReplies == null) {
                            tLRPC$MessageReplies = new TLRPC$TL_messageReplies();
                            sparseArray2.put(i3, tLRPC$MessageReplies);
                        }
                        TLRPC$Peer tLRPC$Peer = tLRPC$TL_updateNewChannelMessage.message.from_id;
                        if (tLRPC$Peer != null) {
                            tLRPC$MessageReplies.recent_repliers.add(0, tLRPC$Peer);
                        }
                        tLRPC$MessageReplies.replies++;
                    }
                    TLRPC$Message tLRPC$Message3 = tLRPC$TL_updateNewChannelMessage.message;
                    sparseArray.put(tLRPC$Message3.id, tLRPC$Message3);
                    Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda63(this, tLRPC$TL_updateNewChannelMessage));
                    arrayList3.remove(i2);
                } else if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                    TLRPC$Message tLRPC$Message4 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                    sparseArray.put(tLRPC$Message4.id, tLRPC$Message4);
                    arrayList3.remove(i2);
                } else {
                    i2++;
                }
                i2--;
                i2++;
            }
            if (longSparseArray2 != null) {
                getMessagesStorage().putChannelViews(null, null, longSparseArray2, true);
                getNotificationCenter().postNotificationName(NotificationCenter.didUpdateMessagesViews, null, null, longSparseArray2, Boolean.TRUE);
            }
            int i4 = 0;
            while (i4 < arrayList.size()) {
                MessageObject messageObject = (MessageObject) arrayList.get(i4);
                String str = (String) arrayList2.get(i4);
                TLRPC$Message tLRPC$Message5 = messageObject.messageOwner;
                int i5 = tLRPC$Message5.id;
                ArrayList arrayList4 = new ArrayList();
                Integer num = (Integer) longSparseArray.get(tLRPC$Message5.random_id);
                if (num == null || (tLRPC$Message = (TLRPC$Message) sparseArray.get(num.intValue())) == null) {
                    tLRPC$Updates = tLRPC$Updates3;
                    z3 = true;
                    break;
                }
                MessageObject.getDialogId(tLRPC$Message);
                arrayList4.add(tLRPC$Message);
                if ((tLRPC$Message.flags & 33554432) != 0) {
                    TLRPC$Message tLRPC$Message6 = messageObject.messageOwner;
                    tLRPC$Message6.ttl_period = tLRPC$Message.ttl_period;
                    tLRPC$Message6.flags = 33554432 | tLRPC$Message6.flags;
                }
                updateMediaPaths(messageObject, tLRPC$Message, tLRPC$Message.id, str, false);
                int mediaExistanceFlags = messageObject.getMediaExistanceFlags();
                tLRPC$Message5.id = tLRPC$Message.id;
                long j = tLRPC$Message.grouped_id;
                if (!z) {
                    tLRPC$Updates2 = tLRPC$Updates3;
                    i = i4;
                    Integer num2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message.dialog_id));
                    if (num2 == null) {
                        num2 = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message.out, tLRPC$Message.dialog_id));
                        getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message.dialog_id), num2);
                    }
                    tLRPC$Message.unread = num2.intValue() < tLRPC$Message.id;
                } else {
                    tLRPC$Updates2 = tLRPC$Updates3;
                    i = i4;
                }
                getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                tLRPC$Message5.send_state = 0;
                getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(i5), Integer.valueOf(tLRPC$Message5.id), tLRPC$Message5, Long.valueOf(tLRPC$Message5.dialog_id), Long.valueOf(j), Integer.valueOf(mediaExistanceFlags), Boolean.valueOf(z));
                getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda50(this, tLRPC$Message5, i5, z, arrayList4, j, mediaExistanceFlags));
                i4 = i + 1;
                sparseArray = sparseArray;
                tLRPC$Updates3 = tLRPC$Updates2;
                longSparseArray = longSparseArray;
            }
            tLRPC$Updates = tLRPC$Updates3;
            z3 = false;
            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda68(this, tLRPC$Updates));
            z2 = z3;
        } else {
            AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLRPC$TL_messages_sendMultiMedia, new Object[0]);
            z2 = true;
        }
        if (z2) {
            for (int i6 = 0; i6 < arrayList.size(); i6++) {
                TLRPC$Message tLRPC$Message7 = ((MessageObject) arrayList.get(i6)).messageOwner;
                getMessagesStorage().markMessageAsSendError(tLRPC$Message7, z);
                tLRPC$Message7.send_state = 2;
                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message7.id));
                processSentMessage(tLRPC$Message7.id);
                removeFromSendingMessages(tLRPC$Message7.id, z);
            }
        }
    }

    public /* synthetic */ void lambda$performSendMessageRequestMulti$40(TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
    }

    public /* synthetic */ void lambda$performSendMessageRequestMulti$41(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage) {
        getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$TL_updateNewChannelMessage.message.peer_id.channel_id);
    }

    public /* synthetic */ void lambda$performSendMessageRequestMulti$43(TLRPC$Message tLRPC$Message, int i, boolean z, ArrayList arrayList, long j, int i2) {
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message.random_id, MessageObject.getPeerId(tLRPC$Message.peer_id), Integer.valueOf(i), tLRPC$Message.id, 0, false, z ? 1 : 0);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, z);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda48(this, tLRPC$Message, i, j, i2, z));
    }

    public /* synthetic */ void lambda$performSendMessageRequestMulti$42(TLRPC$Message tLRPC$Message, int i, long j, int i2, boolean z) {
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), Long.valueOf(j), Integer.valueOf(i2), Boolean.valueOf(z));
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    public /* synthetic */ void lambda$performSendMessageRequestMulti$44(TLRPC$Updates tLRPC$Updates) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
    }

    public void performSendMessageRequest(TLObject tLObject, MessageObject messageObject, String str, DelayedMessage delayedMessage, Object obj, HashMap<String, String> hashMap, boolean z) {
        performSendMessageRequest(tLObject, messageObject, str, null, false, delayedMessage, obj, hashMap, z);
    }

    private DelayedMessage findMaxDelayedMessageForMessageId(int i, long j) {
        int i2;
        DelayedMessage delayedMessage = null;
        int i3 = Integer.MIN_VALUE;
        for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
            ArrayList<DelayedMessage> value = entry.getValue();
            int size = value.size();
            for (int i4 = 0; i4 < size; i4++) {
                DelayedMessage delayedMessage2 = value.get(i4);
                int i5 = delayedMessage2.type;
                if ((i5 == 4 || i5 == 0) && delayedMessage2.peer == j) {
                    MessageObject messageObject = delayedMessage2.obj;
                    if (messageObject != null) {
                        i2 = messageObject.getId();
                    } else {
                        ArrayList<MessageObject> arrayList = delayedMessage2.messageObjects;
                        if (arrayList == null || arrayList.isEmpty()) {
                            i2 = 0;
                        } else {
                            ArrayList<MessageObject> arrayList2 = delayedMessage2.messageObjects;
                            i2 = arrayList2.get(arrayList2.size() - 1).getId();
                        }
                    }
                    if (i2 != 0 && i2 > i && delayedMessage == null && i3 < i2) {
                        delayedMessage = delayedMessage2;
                        i3 = i2;
                    }
                }
            }
        }
        return delayedMessage;
    }

    public void performSendMessageRequest(TLObject tLObject, MessageObject messageObject, String str, DelayedMessage delayedMessage, boolean z, DelayedMessage delayedMessage2, Object obj, HashMap<String, String> hashMap, boolean z2) {
        DelayedMessage findMaxDelayedMessageForMessageId;
        ArrayList<DelayedMessageSendAfterRequest> arrayList;
        if (!(tLObject instanceof TLRPC$TL_messages_editMessage) && z && (findMaxDelayedMessageForMessageId = findMaxDelayedMessageForMessageId(messageObject.getId(), messageObject.getDialogId())) != null) {
            findMaxDelayedMessageForMessageId.addDelayedRequest(tLObject, messageObject, str, obj, delayedMessage2, delayedMessage != null ? delayedMessage.scheduled : false);
            if (delayedMessage == null || (arrayList = delayedMessage.requests) == null) {
                return;
            }
            findMaxDelayedMessageForMessageId.requests.addAll(arrayList);
            return;
        }
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        putToSendingMessages(tLRPC$Message, z2);
        tLRPC$Message.reqId = getConnectionsManager().sendRequest(tLObject, new SendMessagesHelper$$ExternalSyntheticLambda86(this, tLObject, obj, messageObject, str, delayedMessage, z, delayedMessage2, z2, tLRPC$Message), new SendMessagesHelper$$ExternalSyntheticLambda77(this, tLRPC$Message), (tLObject instanceof TLRPC$TL_messages_sendMessage ? 128 : 0) | 68);
        if (delayedMessage == null) {
            return;
        }
        delayedMessage.sendDelayedRequests();
    }

    public /* synthetic */ void lambda$performSendMessageRequest$60(TLObject tLObject, Object obj, MessageObject messageObject, String str, DelayedMessage delayedMessage, boolean z, DelayedMessage delayedMessage2, boolean z2, TLRPC$Message tLRPC$Message, TLObject tLObject2, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error != null && (((tLObject instanceof TLRPC$TL_messages_sendMedia) || (tLObject instanceof TLRPC$TL_messages_editMessage)) && FileRefController.isFileRefError(tLRPC$TL_error.text))) {
            if (obj != null) {
                getFileRefController().requestReference(obj, tLObject, messageObject, str, delayedMessage, Boolean.valueOf(z), delayedMessage2, Boolean.valueOf(z2));
                return;
            } else if (delayedMessage2 != null) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda55(this, tLRPC$Message, z2, tLObject, delayedMessage2));
                return;
            }
        }
        if (tLObject instanceof TLRPC$TL_messages_editMessage) {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda58(this, tLRPC$TL_error, tLRPC$Message, tLObject2, messageObject, str, z2, tLObject));
        } else {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda71(this, z2, tLRPC$TL_error, tLRPC$Message, tLObject2, messageObject, str, tLObject));
        }
    }

    public /* synthetic */ void lambda$performSendMessageRequest$47(TLRPC$Message tLRPC$Message, boolean z, TLObject tLObject, DelayedMessage delayedMessage) {
        removeFromSendingMessages(tLRPC$Message.id, z);
        if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
            TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = (TLRPC$TL_messages_sendMedia) tLObject;
            TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_messages_sendMedia.media;
            if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPhoto) {
                tLRPC$TL_messages_sendMedia.media = delayedMessage.inputUploadMedia;
            } else if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaDocument) {
                tLRPC$TL_messages_sendMedia.media = delayedMessage.inputUploadMedia;
            }
        } else if (tLObject instanceof TLRPC$TL_messages_editMessage) {
            TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = (TLRPC$TL_messages_editMessage) tLObject;
            TLRPC$InputMedia tLRPC$InputMedia2 = tLRPC$TL_messages_editMessage.media;
            if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaPhoto) {
                tLRPC$TL_messages_editMessage.media = delayedMessage.inputUploadMedia;
            } else if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaDocument) {
                tLRPC$TL_messages_editMessage.media = delayedMessage.inputUploadMedia;
            }
        }
        delayedMessage.performMediaUpload = true;
        performSendDelayedMessage(delayedMessage);
    }

    public /* synthetic */ void lambda$performSendMessageRequest$50(TLRPC$TL_error tLRPC$TL_error, TLRPC$Message tLRPC$Message, TLObject tLObject, MessageObject messageObject, String str, boolean z, TLObject tLObject2) {
        int i = 0;
        TLRPC$Message tLRPC$Message2 = null;
        if (tLRPC$TL_error == null) {
            String str2 = tLRPC$Message.attachPath;
            TLRPC$Updates tLRPC$Updates = (TLRPC$Updates) tLObject;
            ArrayList<TLRPC$Update> arrayList = tLRPC$Updates.updates;
            while (true) {
                if (i >= arrayList.size()) {
                    break;
                }
                TLRPC$Update tLRPC$Update = arrayList.get(i);
                if (tLRPC$Update instanceof TLRPC$TL_updateEditMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateEditMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateEditChannelMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateEditChannelMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                    break;
                } else {
                    i++;
                }
            }
            TLRPC$Message tLRPC$Message3 = tLRPC$Message2;
            if (tLRPC$Message3 != null) {
                ImageLoader.saveMessageThumbs(tLRPC$Message3);
                updateMediaPaths(messageObject, tLRPC$Message3, tLRPC$Message3.id, str, false);
            }
            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda70(this, tLRPC$Updates, tLRPC$Message, z));
            if (!MessageObject.isVideoMessage(tLRPC$Message) && !MessageObject.isRoundVideoMessage(tLRPC$Message) && !MessageObject.isNewGifMessage(tLRPC$Message)) {
                return;
            }
            stopVideoService(str2);
            return;
        }
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLObject2, new Object[0]);
        if (MessageObject.isVideoMessage(tLRPC$Message) || MessageObject.isRoundVideoMessage(tLRPC$Message) || MessageObject.isNewGifMessage(tLRPC$Message)) {
            stopVideoService(tLRPC$Message.attachPath);
        }
        removeFromSendingMessages(tLRPC$Message.id, z);
        revertEditingMessageObject(messageObject);
    }

    public /* synthetic */ void lambda$performSendMessageRequest$49(TLRPC$Updates tLRPC$Updates, TLRPC$Message tLRPC$Message, boolean z) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda53(this, tLRPC$Message, z));
    }

    public /* synthetic */ void lambda$performSendMessageRequest$48(TLRPC$Message tLRPC$Message, boolean z) {
        processSentMessage(tLRPC$Message.id);
        removeFromSendingMessages(tLRPC$Message.id, z);
    }

    /* JADX WARN: Code restructure failed: missing block: B:42:0x0116, code lost:
        r12 = r3;
        r2 = null;
     */
    /* JADX WARN: Removed duplicated region for block: B:110:0x029f  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$performSendMessageRequest$59(boolean z, TLRPC$TL_error tLRPC$TL_error, TLRPC$Message tLRPC$Message, TLObject tLObject, MessageObject messageObject, String str, TLObject tLObject2) {
        boolean z2;
        boolean z3;
        int i;
        LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray;
        TLRPC$Message tLRPC$Message2;
        int i2;
        boolean z4;
        TLRPC$Message tLRPC$Message3;
        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader;
        if (tLRPC$TL_error == null) {
            int i3 = tLRPC$Message.id;
            ArrayList arrayList = new ArrayList();
            String str2 = tLRPC$Message.attachPath;
            boolean z5 = tLRPC$Message.date == 2147483646;
            if (tLObject instanceof TLRPC$TL_updateShortSentMessage) {
                TLRPC$TL_updateShortSentMessage tLRPC$TL_updateShortSentMessage = (TLRPC$TL_updateShortSentMessage) tLObject;
                updateMediaPaths(messageObject, null, tLRPC$TL_updateShortSentMessage.id, null, false);
                int mediaExistanceFlags = messageObject.getMediaExistanceFlags();
                int i4 = tLRPC$TL_updateShortSentMessage.id;
                tLRPC$Message.id = i4;
                tLRPC$Message.local_id = i4;
                tLRPC$Message.date = tLRPC$TL_updateShortSentMessage.date;
                tLRPC$Message.entities = tLRPC$TL_updateShortSentMessage.entities;
                tLRPC$Message.out = tLRPC$TL_updateShortSentMessage.out;
                if ((tLRPC$TL_updateShortSentMessage.flags & 33554432) != 0) {
                    tLRPC$Message.ttl_period = tLRPC$TL_updateShortSentMessage.ttl_period;
                    tLRPC$Message.flags |= 33554432;
                }
                TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$TL_updateShortSentMessage.media;
                if (tLRPC$MessageMedia != null) {
                    tLRPC$Message.media = tLRPC$MessageMedia;
                    tLRPC$Message.flags |= 512;
                    ImageLoader.saveMessageThumbs(tLRPC$Message);
                }
                TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$TL_updateShortSentMessage.media;
                if (((tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaGame) || (tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaInvoice)) && !TextUtils.isEmpty(tLRPC$TL_updateShortSentMessage.message)) {
                    tLRPC$Message.message = tLRPC$TL_updateShortSentMessage.message;
                }
                if (!tLRPC$Message.entities.isEmpty()) {
                    tLRPC$Message.flags |= 128;
                }
                Integer num = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message.dialog_id));
                if (num == null) {
                    num = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message.out, tLRPC$Message.dialog_id));
                    getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message.dialog_id), num);
                }
                tLRPC$Message.unread = num.intValue() < tLRPC$Message.id;
                Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda67(this, tLRPC$TL_updateShortSentMessage));
                arrayList.add(tLRPC$Message);
                i = mediaExistanceFlags;
                z3 = false;
            } else if (tLObject instanceof TLRPC$Updates) {
                TLRPC$Updates tLRPC$Updates = (TLRPC$Updates) tLObject;
                ArrayList<TLRPC$Update> arrayList2 = tLRPC$Updates.updates;
                int i5 = 0;
                while (true) {
                    if (i5 >= arrayList2.size()) {
                        longSparseArray = null;
                        tLRPC$Message2 = null;
                        break;
                    }
                    TLRPC$Update tLRPC$Update = arrayList2.get(i5);
                    if (tLRPC$Update instanceof TLRPC$TL_updateNewMessage) {
                        TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update;
                        tLRPC$Message3 = tLRPC$TL_updateNewMessage.message;
                        arrayList.add(tLRPC$Message3);
                        Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda65(this, tLRPC$TL_updateNewMessage));
                        arrayList2.remove(i5);
                        break;
                    } else if (tLRPC$Update instanceof TLRPC$TL_updateNewChannelMessage) {
                        TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update;
                        TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(MessagesController.getUpdateChannelId(tLRPC$TL_updateNewChannelMessage)));
                        if ((chat != null && !chat.megagroup) || (tLRPC$TL_messageReplyHeader = tLRPC$TL_updateNewChannelMessage.message.reply_to) == null || (tLRPC$TL_messageReplyHeader.reply_to_top_id == 0 && tLRPC$TL_messageReplyHeader.reply_to_msg_id == 0)) {
                            longSparseArray = null;
                        } else {
                            longSparseArray = new LongSparseArray<>();
                            long dialogId = MessageObject.getDialogId(tLRPC$TL_updateNewChannelMessage.message);
                            SparseArray<TLRPC$MessageReplies> sparseArray = longSparseArray.get(dialogId);
                            if (sparseArray == null) {
                                sparseArray = new SparseArray<>();
                                longSparseArray.put(dialogId, sparseArray);
                            }
                            TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader2 = tLRPC$TL_updateNewChannelMessage.message.reply_to;
                            int i6 = tLRPC$TL_messageReplyHeader2.reply_to_top_id;
                            if (i6 == 0) {
                                i6 = tLRPC$TL_messageReplyHeader2.reply_to_msg_id;
                            }
                            TLRPC$MessageReplies tLRPC$MessageReplies = sparseArray.get(i6);
                            if (tLRPC$MessageReplies == null) {
                                tLRPC$MessageReplies = new TLRPC$TL_messageReplies();
                                sparseArray.put(i6, tLRPC$MessageReplies);
                            }
                            TLRPC$Peer tLRPC$Peer = tLRPC$TL_updateNewChannelMessage.message.from_id;
                            if (tLRPC$Peer != null) {
                                tLRPC$MessageReplies.recent_repliers.add(0, tLRPC$Peer);
                            }
                            tLRPC$MessageReplies.replies++;
                        }
                        TLRPC$Message tLRPC$Message4 = tLRPC$TL_updateNewChannelMessage.message;
                        arrayList.add(tLRPC$Message4);
                        Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda64(this, tLRPC$TL_updateNewChannelMessage));
                        arrayList2.remove(i5);
                        tLRPC$Message2 = tLRPC$Message4;
                    } else if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                        tLRPC$Message3 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                        arrayList.add(tLRPC$Message3);
                        arrayList2.remove(i5);
                        break;
                    } else {
                        i5++;
                    }
                }
                if (longSparseArray != null) {
                    getMessagesStorage().putChannelViews(null, null, longSparseArray, true);
                    getNotificationCenter().postNotificationName(NotificationCenter.didUpdateMessagesViews, null, null, longSparseArray, Boolean.TRUE);
                }
                if (tLRPC$Message2 != null) {
                    MessageObject.getDialogId(tLRPC$Message2);
                    z3 = (!z5 || tLRPC$Message2.date == 2147483646) ? z : false;
                    ImageLoader.saveMessageThumbs(tLRPC$Message2);
                    if (!z3) {
                        Integer num2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message2.dialog_id));
                        if (num2 == null) {
                            num2 = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message2.out, tLRPC$Message2.dialog_id));
                            getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message2.dialog_id), num2);
                        }
                        tLRPC$Message2.unread = num2.intValue() < tLRPC$Message2.id;
                    }
                    TLRPC$Message tLRPC$Message5 = messageObject.messageOwner;
                    tLRPC$Message5.post_author = tLRPC$Message2.post_author;
                    if ((tLRPC$Message2.flags & 33554432) != 0) {
                        tLRPC$Message5.ttl_period = tLRPC$Message2.ttl_period;
                        tLRPC$Message5.flags |= 33554432;
                    }
                    tLRPC$Message5.entities = tLRPC$Message2.entities;
                    updateMediaPaths(messageObject, tLRPC$Message2, tLRPC$Message2.id, str, false);
                    int mediaExistanceFlags2 = messageObject.getMediaExistanceFlags();
                    tLRPC$Message.id = tLRPC$Message2.id;
                    i2 = mediaExistanceFlags2;
                    z4 = false;
                } else {
                    z3 = z;
                    z4 = true;
                    i2 = 0;
                }
                Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda69(this, tLRPC$Updates));
                z2 = z4;
                i = i2;
                if (MessageObject.isLiveLocationMessage(tLRPC$Message) && tLRPC$Message.via_bot_id == 0 && TextUtils.isEmpty(tLRPC$Message.via_bot_name)) {
                    getLocationController().addSharingLocation(tLRPC$Message);
                }
                if (!z2) {
                    getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                    tLRPC$Message.send_state = 0;
                    if (z && !z3) {
                        ArrayList<Integer> arrayList3 = new ArrayList<>();
                        arrayList3.add(Integer.valueOf(i3));
                        getMessagesController().deleteMessages(arrayList3, null, null, tLRPC$Message.dialog_id, false, true);
                        getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda35(this, arrayList, messageObject, tLRPC$Message, i3, z, str2));
                    } else {
                        int i7 = i;
                        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(i3), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), 0L, Integer.valueOf(i7), Boolean.valueOf(z));
                        getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda49(this, tLRPC$Message, i3, z, arrayList, i7, str2));
                    }
                }
            } else {
                z3 = z;
                i = 0;
            }
            z2 = false;
            if (MessageObject.isLiveLocationMessage(tLRPC$Message)) {
                getLocationController().addSharingLocation(tLRPC$Message);
            }
            if (!z2) {
            }
        } else {
            AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLObject2, new Object[0]);
            z2 = true;
        }
        if (z2) {
            getMessagesStorage().markMessageAsSendError(tLRPC$Message, z);
            tLRPC$Message.send_state = 2;
            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
            processSentMessage(tLRPC$Message.id);
            if (MessageObject.isVideoMessage(tLRPC$Message) || MessageObject.isRoundVideoMessage(tLRPC$Message) || MessageObject.isNewGifMessage(tLRPC$Message)) {
                stopVideoService(tLRPC$Message.attachPath);
            }
            removeFromSendingMessages(tLRPC$Message.id, z);
        }
    }

    public /* synthetic */ void lambda$performSendMessageRequest$51(TLRPC$TL_updateShortSentMessage tLRPC$TL_updateShortSentMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateShortSentMessage.pts, tLRPC$TL_updateShortSentMessage.date, tLRPC$TL_updateShortSentMessage.pts_count);
    }

    public /* synthetic */ void lambda$performSendMessageRequest$52(TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
    }

    public /* synthetic */ void lambda$performSendMessageRequest$53(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage) {
        getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$TL_updateNewChannelMessage.message.peer_id.channel_id);
    }

    public /* synthetic */ void lambda$performSendMessageRequest$54(TLRPC$Updates tLRPC$Updates) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
    }

    public /* synthetic */ void lambda$performSendMessageRequest$56(ArrayList arrayList, MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, boolean z, String str) {
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, false);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda38(this, messageObject, tLRPC$Message, i, z));
        if (MessageObject.isVideoMessage(tLRPC$Message) || MessageObject.isRoundVideoMessage(tLRPC$Message) || MessageObject.isNewGifMessage(tLRPC$Message)) {
            stopVideoService(str);
        }
    }

    public /* synthetic */ void lambda$performSendMessageRequest$55(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, boolean z) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(new MessageObject(messageObject.currentAccount, messageObject.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message.dialog_id, arrayList, false);
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    public /* synthetic */ void lambda$performSendMessageRequest$58(TLRPC$Message tLRPC$Message, int i, boolean z, ArrayList arrayList, int i2, String str) {
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message.random_id, MessageObject.getPeerId(tLRPC$Message.peer_id), Integer.valueOf(i), tLRPC$Message.id, 0, false, z ? 1 : 0);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, z);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda47(this, tLRPC$Message, i, i2, z));
        if (MessageObject.isVideoMessage(tLRPC$Message) || MessageObject.isRoundVideoMessage(tLRPC$Message) || MessageObject.isNewGifMessage(tLRPC$Message)) {
            stopVideoService(str);
        }
    }

    public /* synthetic */ void lambda$performSendMessageRequest$57(TLRPC$Message tLRPC$Message, int i, int i2, boolean z) {
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), 0L, Integer.valueOf(i2), Boolean.valueOf(z));
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    public /* synthetic */ void lambda$performSendMessageRequest$62(TLRPC$Message tLRPC$Message) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda46(this, tLRPC$Message, tLRPC$Message.id));
    }

    public /* synthetic */ void lambda$performSendMessageRequest$61(TLRPC$Message tLRPC$Message, int i) {
        tLRPC$Message.send_state = 0;
        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByAck, Integer.valueOf(i));
    }

    /* JADX WARN: Removed duplicated region for block: B:138:0x02d6  */
    /* JADX WARN: Removed duplicated region for block: B:65:0x00da  */
    /* JADX WARN: Removed duplicated region for block: B:69:0x00f5  */
    /* JADX WARN: Removed duplicated region for block: B:70:0x0109  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void updateMediaPaths(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, String str, boolean z) {
        TLRPC$PhotoSize tLRPC$PhotoSize;
        byte[] bArr;
        boolean z2;
        String str2;
        TLRPC$FileLocation tLRPC$FileLocation;
        TLRPC$FileLocation tLRPC$FileLocation2;
        VideoEditedInfo videoEditedInfo;
        boolean z3;
        String str3;
        File file;
        TLObject tLObject;
        TLRPC$PhotoSize tLRPC$PhotoSize2;
        TLRPC$MessageMedia tLRPC$MessageMedia;
        TLRPC$WebPage tLRPC$WebPage;
        TLRPC$Document tLRPC$Document;
        TLRPC$MessageMedia tLRPC$MessageMedia2;
        TLRPC$WebPage tLRPC$WebPage2;
        TLRPC$Photo tLRPC$Photo;
        TLRPC$MessageMedia tLRPC$MessageMedia3;
        TLRPC$Document tLRPC$Document2;
        TLRPC$MessageMedia tLRPC$MessageMedia4;
        TLRPC$Photo tLRPC$Photo2;
        TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
        if (tLRPC$Message2.media != null) {
            if (messageObject.isLiveLocation()) {
                TLRPC$MessageMedia tLRPC$MessageMedia5 = tLRPC$Message.media;
                if (tLRPC$MessageMedia5 instanceof TLRPC$TL_messageMediaGeoLive) {
                    tLRPC$Message2.media.period = tLRPC$MessageMedia5.period;
                    tLRPC$PhotoSize2 = null;
                    tLRPC$PhotoSize = null;
                    tLObject = null;
                    if ((tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) && (tLRPC$PhotoSize2 instanceof TLRPC$TL_photoStrippedSize)) {
                        ImageLoader.getInstance().replaceImageInCache("stripped" + FileRefController.getKeyForParentObject(messageObject), tLRPC$Message == null ? "stripped" + FileRefController.getKeyForParentObject(tLRPC$Message) : "strippedmessage" + i + "_" + messageObject.getChannelId() + "_" + messageObject.scheduled, ImageLocation.getForObject(tLRPC$PhotoSize, tLObject), z);
                    }
                }
            }
            if (messageObject.isDice()) {
                ((TLRPC$TL_messageMediaDice) tLRPC$Message2.media).value = ((TLRPC$TL_messageMediaDice) tLRPC$Message.media).value;
            } else {
                TLRPC$MessageMedia tLRPC$MessageMedia6 = tLRPC$Message2.media;
                TLRPC$Photo tLRPC$Photo3 = tLRPC$MessageMedia6.photo;
                if (tLRPC$Photo3 != null) {
                    tLRPC$PhotoSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo3.sizes, 40);
                    tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia4 = tLRPC$Message.media) == null || (tLRPC$Photo2 = tLRPC$MessageMedia4.photo) == null) ? tLRPC$PhotoSize2 : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo2.sizes, 40);
                    tLObject = tLRPC$Message2.media.photo;
                } else {
                    TLRPC$Document tLRPC$Document3 = tLRPC$MessageMedia6.document;
                    if (tLRPC$Document3 != null) {
                        tLRPC$PhotoSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document3.thumbs, 40);
                        tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia3 = tLRPC$Message.media) == null || (tLRPC$Document2 = tLRPC$MessageMedia3.document) == null) ? tLRPC$PhotoSize2 : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document2.thumbs, 40);
                        tLObject = tLRPC$Message2.media.document;
                    } else {
                        TLRPC$WebPage tLRPC$WebPage3 = tLRPC$MessageMedia6.webpage;
                        if (tLRPC$WebPage3 != null) {
                            TLRPC$Photo tLRPC$Photo4 = tLRPC$WebPage3.photo;
                            if (tLRPC$Photo4 != null) {
                                tLRPC$PhotoSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo4.sizes, 40);
                                tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia2 = tLRPC$Message.media) == null || (tLRPC$WebPage2 = tLRPC$MessageMedia2.webpage) == null || (tLRPC$Photo = tLRPC$WebPage2.photo) == null) ? tLRPC$PhotoSize2 : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo.sizes, 40);
                                tLObject = tLRPC$Message2.media.webpage.photo;
                            } else {
                                TLRPC$Document tLRPC$Document4 = tLRPC$WebPage3.document;
                                if (tLRPC$Document4 != null) {
                                    tLRPC$PhotoSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document4.thumbs, 40);
                                    tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia = tLRPC$Message.media) == null || (tLRPC$WebPage = tLRPC$MessageMedia.webpage) == null || (tLRPC$Document = tLRPC$WebPage.document) == null) ? tLRPC$PhotoSize2 : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 40);
                                    tLObject = tLRPC$Message2.media.webpage.document;
                                }
                            }
                        }
                    }
                }
                if (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) {
                    if (tLRPC$Message == null) {
                    }
                    ImageLoader.getInstance().replaceImageInCache("stripped" + FileRefController.getKeyForParentObject(messageObject), tLRPC$Message == null ? "stripped" + FileRefController.getKeyForParentObject(tLRPC$Message) : "strippedmessage" + i + "_" + messageObject.getChannelId() + "_" + messageObject.scheduled, ImageLocation.getForObject(tLRPC$PhotoSize, tLObject), z);
                }
            }
            tLRPC$PhotoSize2 = null;
            tLRPC$PhotoSize = null;
            tLObject = null;
            if (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) {
            }
        } else {
            tLRPC$PhotoSize = null;
        }
        if (tLRPC$Message == null) {
            return;
        }
        TLRPC$MessageMedia tLRPC$MessageMedia7 = tLRPC$Message.media;
        int i2 = 1;
        if ((tLRPC$MessageMedia7 instanceof TLRPC$TL_messageMediaPhoto) && tLRPC$MessageMedia7.photo != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia8 = tLRPC$Message2.media;
            if ((tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaPhoto) && tLRPC$MessageMedia8.photo != null) {
                if (tLRPC$MessageMedia7.ttl_seconds == 0 && !messageObject.scheduled) {
                    getMessagesStorage().putSentFile(str, tLRPC$Message.media.photo, 0, "sent_" + tLRPC$Message.peer_id.channel_id + "_" + tLRPC$Message.id);
                }
                if (tLRPC$Message2.media.photo.sizes.size() == 1 && (tLRPC$Message2.media.photo.sizes.get(0).location instanceof TLRPC$TL_fileLocationUnavailable)) {
                    tLRPC$Message2.media.photo.sizes = tLRPC$Message.media.photo.sizes;
                } else {
                    int i3 = 0;
                    while (i3 < tLRPC$Message2.media.photo.sizes.size()) {
                        TLRPC$PhotoSize tLRPC$PhotoSize3 = tLRPC$Message2.media.photo.sizes.get(i3);
                        if (tLRPC$PhotoSize3 != null && tLRPC$PhotoSize3.location != null && tLRPC$PhotoSize3.type != null) {
                            int i4 = 0;
                            while (i4 < tLRPC$Message.media.photo.sizes.size()) {
                                TLRPC$PhotoSize tLRPC$PhotoSize4 = tLRPC$Message.media.photo.sizes.get(i4);
                                if (tLRPC$PhotoSize4 == null || tLRPC$PhotoSize4.location == null || (tLRPC$PhotoSize4 instanceof TLRPC$TL_photoSizeEmpty) || (str3 = tLRPC$PhotoSize4.type) == null || ((tLRPC$PhotoSize3.location.volume_id != -2147483648L || !str3.equals(tLRPC$PhotoSize3.type)) && !(tLRPC$PhotoSize4.w == tLRPC$PhotoSize3.w && tLRPC$PhotoSize4.h == tLRPC$PhotoSize3.h))) {
                                    i4++;
                                    i2 = 1;
                                } else {
                                    String str4 = tLRPC$PhotoSize3.location.volume_id + "_" + tLRPC$PhotoSize3.location.local_id;
                                    String str5 = tLRPC$PhotoSize4.location.volume_id + "_" + tLRPC$PhotoSize4.location.local_id;
                                    if (!str4.equals(str5)) {
                                        File file2 = new File(FileLoader.getDirectory(4), str4 + ".jpg");
                                        TLRPC$MessageMedia tLRPC$MessageMedia9 = tLRPC$Message.media;
                                        if (tLRPC$MessageMedia9.ttl_seconds == 0 && (tLRPC$MessageMedia9.photo.sizes.size() == i2 || tLRPC$PhotoSize4.w > 90 || tLRPC$PhotoSize4.h > 90)) {
                                            file = FileLoader.getInstance(this.currentAccount).getPathToAttach(tLRPC$PhotoSize4);
                                        } else {
                                            file = new File(FileLoader.getDirectory(4), str5 + ".jpg");
                                        }
                                        file2.renameTo(file);
                                        ImageLoader.getInstance().replaceImageInCache(str4, str5, ImageLocation.getForPhoto(tLRPC$PhotoSize4, tLRPC$Message.media.photo), z);
                                        tLRPC$PhotoSize3.location = tLRPC$PhotoSize4.location;
                                        tLRPC$PhotoSize3.size = tLRPC$PhotoSize4.size;
                                    }
                                    z3 = true;
                                    if (!z3) {
                                        String str6 = tLRPC$PhotoSize3.location.volume_id + "_" + tLRPC$PhotoSize3.location.local_id;
                                        new File(FileLoader.getDirectory(4), str6 + ".jpg").delete();
                                        if ("s".equals(tLRPC$PhotoSize3.type) && tLRPC$PhotoSize != null) {
                                            tLRPC$Message2.media.photo.sizes.set(i3, tLRPC$PhotoSize);
                                            ImageLocation forPhoto = ImageLocation.getForPhoto(tLRPC$PhotoSize, tLRPC$Message.media.photo);
                                            ImageLoader.getInstance().replaceImageInCache(str6, forPhoto.getKey(tLRPC$Message, null, false), forPhoto, z);
                                            i3++;
                                            i2 = 1;
                                        }
                                    }
                                }
                            }
                            z3 = false;
                            if (!z3) {
                            }
                        }
                        i3++;
                        i2 = 1;
                    }
                }
                tLRPC$Message2.message = tLRPC$Message.message;
                tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                TLRPC$Photo tLRPC$Photo5 = tLRPC$Message2.media.photo;
                TLRPC$Photo tLRPC$Photo6 = tLRPC$Message.media.photo;
                tLRPC$Photo5.id = tLRPC$Photo6.id;
                tLRPC$Photo5.dc_id = tLRPC$Photo6.dc_id;
                tLRPC$Photo5.access_hash = tLRPC$Photo6.access_hash;
                return;
            }
        }
        if ((tLRPC$MessageMedia7 instanceof TLRPC$TL_messageMediaDocument) && tLRPC$MessageMedia7.document != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia10 = tLRPC$Message2.media;
            if ((tLRPC$MessageMedia10 instanceof TLRPC$TL_messageMediaDocument) && tLRPC$MessageMedia10.document != null) {
                if (tLRPC$MessageMedia7.ttl_seconds == 0 && ((videoEditedInfo = messageObject.videoEditedInfo) == null || (videoEditedInfo.mediaEntities == null && TextUtils.isEmpty(videoEditedInfo.paintPath) && messageObject.videoEditedInfo.cropState == null))) {
                    boolean isVideoMessage = MessageObject.isVideoMessage(tLRPC$Message);
                    if ((isVideoMessage || MessageObject.isGifMessage(tLRPC$Message)) && MessageObject.isGifDocument(tLRPC$Message.media.document) == MessageObject.isGifDocument(tLRPC$Message2.media.document)) {
                        if (!messageObject.scheduled) {
                            getMessagesStorage().putSentFile(str, tLRPC$Message.media.document, 2, "sent_" + tLRPC$Message.peer_id.channel_id + "_" + tLRPC$Message.id);
                        }
                        if (isVideoMessage) {
                            tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                        }
                    } else if (!MessageObject.isVoiceMessage(tLRPC$Message) && !MessageObject.isRoundVideoMessage(tLRPC$Message) && !messageObject.scheduled) {
                        getMessagesStorage().putSentFile(str, tLRPC$Message.media.document, 1, "sent_" + tLRPC$Message.peer_id.channel_id + "_" + tLRPC$Message.id);
                    }
                }
                TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Message2.media.document.thumbs, 320);
                TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Message.media.document.thumbs, 320);
                if (closestPhotoSizeWithSize != null && (tLRPC$FileLocation2 = closestPhotoSizeWithSize.location) != null && tLRPC$FileLocation2.volume_id == -2147483648L && closestPhotoSizeWithSize2 != null && closestPhotoSizeWithSize2.location != null && !(closestPhotoSizeWithSize2 instanceof TLRPC$TL_photoSizeEmpty) && !(closestPhotoSizeWithSize instanceof TLRPC$TL_photoSizeEmpty)) {
                    String str7 = closestPhotoSizeWithSize.location.volume_id + "_" + closestPhotoSizeWithSize.location.local_id;
                    String str8 = closestPhotoSizeWithSize2.location.volume_id + "_" + closestPhotoSizeWithSize2.location.local_id;
                    if (!str7.equals(str8)) {
                        new File(FileLoader.getDirectory(4), str7 + ".jpg").renameTo(new File(FileLoader.getDirectory(4), str8 + ".jpg"));
                        ImageLoader.getInstance().replaceImageInCache(str7, str8, ImageLocation.getForDocument(closestPhotoSizeWithSize2, tLRPC$Message.media.document), z);
                        closestPhotoSizeWithSize.location = closestPhotoSizeWithSize2.location;
                        closestPhotoSizeWithSize.size = closestPhotoSizeWithSize2.size;
                    }
                } else if (closestPhotoSizeWithSize2 != null && closestPhotoSizeWithSize != null && MessageObject.isStickerMessage(tLRPC$Message) && (tLRPC$FileLocation = closestPhotoSizeWithSize.location) != null) {
                    closestPhotoSizeWithSize2.location = tLRPC$FileLocation;
                } else if (closestPhotoSizeWithSize == null || (closestPhotoSizeWithSize.location instanceof TLRPC$TL_fileLocationUnavailable) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoSizeEmpty)) {
                    tLRPC$Message2.media.document.thumbs = tLRPC$Message.media.document.thumbs;
                }
                TLRPC$Document tLRPC$Document5 = tLRPC$Message2.media.document;
                TLRPC$Document tLRPC$Document6 = tLRPC$Message.media.document;
                tLRPC$Document5.dc_id = tLRPC$Document6.dc_id;
                tLRPC$Document5.id = tLRPC$Document6.id;
                tLRPC$Document5.access_hash = tLRPC$Document6.access_hash;
                int i5 = 0;
                while (true) {
                    if (i5 >= tLRPC$Message2.media.document.attributes.size()) {
                        bArr = null;
                        break;
                    }
                    TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$Message2.media.document.attributes.get(i5);
                    if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeAudio) {
                        bArr = tLRPC$DocumentAttribute.waveform;
                        break;
                    }
                    i5++;
                }
                tLRPC$Message2.media.document.attributes = tLRPC$Message.media.document.attributes;
                if (bArr != null) {
                    for (int i6 = 0; i6 < tLRPC$Message2.media.document.attributes.size(); i6++) {
                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = tLRPC$Message2.media.document.attributes.get(i6);
                        if (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeAudio) {
                            tLRPC$DocumentAttribute2.waveform = bArr;
                            tLRPC$DocumentAttribute2.flags |= 4;
                        }
                    }
                }
                TLRPC$Document tLRPC$Document7 = tLRPC$Message2.media.document;
                TLRPC$Document tLRPC$Document8 = tLRPC$Message.media.document;
                tLRPC$Document7.size = tLRPC$Document8.size;
                tLRPC$Document7.mime_type = tLRPC$Document8.mime_type;
                if ((tLRPC$Message.flags & 4) == 0 && MessageObject.isOut(tLRPC$Message)) {
                    if (MessageObject.isNewGifDocument(tLRPC$Message.media.document)) {
                        if (MessageObject.isDocumentHasAttachedStickers(tLRPC$Message.media.document) ? getMessagesController().saveGifsWithStickers : true) {
                            getMediaDataController().addRecentGif(tLRPC$Message.media.document, tLRPC$Message.date, true);
                        }
                    } else if (MessageObject.isStickerDocument(tLRPC$Message.media.document) || MessageObject.isAnimatedStickerDocument(tLRPC$Message.media.document, true)) {
                        z2 = false;
                        getMediaDataController().addRecentSticker(0, tLRPC$Message, tLRPC$Message.media.document, tLRPC$Message.date, false);
                        str2 = tLRPC$Message2.attachPath;
                        if (str2 == null && str2.startsWith(FileLoader.getDirectory(4).getAbsolutePath())) {
                            File file3 = new File(tLRPC$Message2.attachPath);
                            FileLoader fileLoader = FileLoader.getInstance(this.currentAccount);
                            TLRPC$MessageMedia tLRPC$MessageMedia11 = tLRPC$Message.media;
                            File pathToAttach = fileLoader.getPathToAttach(tLRPC$MessageMedia11.document, tLRPC$MessageMedia11.ttl_seconds != 0);
                            if (!file3.renameTo(pathToAttach)) {
                                if (file3.exists()) {
                                    tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                                } else {
                                    messageObject.attachPathExists = z2;
                                }
                                messageObject.mediaExists = pathToAttach.exists();
                                tLRPC$Message.message = tLRPC$Message2.message;
                                return;
                            } else if (MessageObject.isVideoMessage(tLRPC$Message)) {
                                messageObject.attachPathExists = true;
                                return;
                            } else {
                                messageObject.mediaExists = messageObject.attachPathExists;
                                messageObject.attachPathExists = z2;
                                tLRPC$Message2.attachPath = "";
                                if (str == null || !str.startsWith("http")) {
                                    return;
                                }
                                getMessagesStorage().addRecentLocalFile(str, pathToAttach.toString(), tLRPC$Message2.media.document);
                                return;
                            }
                        }
                        tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                        tLRPC$Message.message = tLRPC$Message2.message;
                        return;
                    }
                }
                z2 = false;
                str2 = tLRPC$Message2.attachPath;
                if (str2 == null) {
                }
                tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                tLRPC$Message.message = tLRPC$Message2.message;
                return;
            }
        }
        if ((tLRPC$MessageMedia7 instanceof TLRPC$TL_messageMediaContact) && (tLRPC$Message2.media instanceof TLRPC$TL_messageMediaContact)) {
            tLRPC$Message2.media = tLRPC$MessageMedia7;
        } else if (tLRPC$MessageMedia7 instanceof TLRPC$TL_messageMediaWebPage) {
            tLRPC$Message2.media = tLRPC$MessageMedia7;
        } else if (tLRPC$MessageMedia7 instanceof TLRPC$TL_messageMediaGeo) {
            TLRPC$GeoPoint tLRPC$GeoPoint = tLRPC$MessageMedia7.geo;
            TLRPC$GeoPoint tLRPC$GeoPoint2 = tLRPC$Message2.media.geo;
            tLRPC$GeoPoint.lat = tLRPC$GeoPoint2.lat;
            tLRPC$GeoPoint._long = tLRPC$GeoPoint2._long;
        } else if ((tLRPC$MessageMedia7 instanceof TLRPC$TL_messageMediaGame) || (tLRPC$MessageMedia7 instanceof TLRPC$TL_messageMediaInvoice)) {
            tLRPC$Message2.media = tLRPC$MessageMedia7;
            if (!TextUtils.isEmpty(tLRPC$Message.message)) {
                tLRPC$Message2.entities = tLRPC$Message.entities;
                tLRPC$Message2.message = tLRPC$Message.message;
            }
            TLRPC$ReplyMarkup tLRPC$ReplyMarkup = tLRPC$Message.reply_markup;
            if (tLRPC$ReplyMarkup == null) {
                return;
            }
            tLRPC$Message2.reply_markup = tLRPC$ReplyMarkup;
            tLRPC$Message2.flags |= 64;
        } else if (tLRPC$MessageMedia7 instanceof TLRPC$TL_messageMediaPoll) {
            tLRPC$Message2.media = tLRPC$MessageMedia7;
        }
    }

    private void putToDelayedMessages(String str, DelayedMessage delayedMessage) {
        ArrayList<DelayedMessage> arrayList = this.delayedMessages.get(str);
        if (arrayList == null) {
            arrayList = new ArrayList<>();
            this.delayedMessages.put(str, arrayList);
        }
        arrayList.add(delayedMessage);
    }

    public ArrayList<DelayedMessage> getDelayedMessages(String str) {
        return this.delayedMessages.get(str);
    }

    public long getNextRandomId() {
        long j = 0;
        while (j == 0) {
            j = Utilities.random.nextLong();
        }
        return j;
    }

    public void checkUnsentMessages() {
        getMessagesStorage().getUnsentMessages(1000);
    }

    public void processUnsentMessages(ArrayList<TLRPC$Message> arrayList, ArrayList<TLRPC$Message> arrayList2, ArrayList<TLRPC$User> arrayList3, ArrayList<TLRPC$Chat> arrayList4, ArrayList<TLRPC$EncryptedChat> arrayList5) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda33(this, arrayList3, arrayList4, arrayList5, arrayList, arrayList2));
    }

    public /* synthetic */ void lambda$processUnsentMessages$63(ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, ArrayList arrayList4, ArrayList arrayList5) {
        HashMap<String, String> hashMap;
        getMessagesController().putUsers(arrayList, true);
        getMessagesController().putChats(arrayList2, true);
        getMessagesController().putEncryptedChats(arrayList3, true);
        int size = arrayList4.size();
        for (int i = 0; i < size; i++) {
            MessageObject messageObject = new MessageObject(this.currentAccount, (TLRPC$Message) arrayList4.get(i), false, true);
            long groupId = messageObject.getGroupId();
            if (groupId != 0 && (hashMap = messageObject.messageOwner.params) != null && !hashMap.containsKey("final") && (i == size - 1 || ((TLRPC$Message) arrayList4.get(i + 1)).grouped_id != groupId)) {
                messageObject.messageOwner.params.put("final", "1");
            }
            retrySendMessage(messageObject, true);
        }
        if (arrayList5 != null) {
            for (int i2 = 0; i2 < arrayList5.size(); i2++) {
                MessageObject messageObject2 = new MessageObject(this.currentAccount, (TLRPC$Message) arrayList5.get(i2), false, true);
                messageObject2.scheduled = true;
                retrySendMessage(messageObject2, true);
            }
        }
    }

    public ImportingStickers getImportingStickers(String str) {
        return this.importingStickersMap.get(str);
    }

    public ImportingHistory getImportingHistory(long j) {
        return this.importingHistoryMap.get(j);
    }

    public boolean isImportingStickers() {
        return this.importingStickersMap.size() != 0;
    }

    public boolean isImportingHistory() {
        return this.importingHistoryMap.size() != 0;
    }

    public void prepareImportHistory(long j, Uri uri, ArrayList<Uri> arrayList, MessagesStorage.LongCallback longCallback) {
        if (this.importingHistoryMap.get(j) != null) {
            longCallback.run(0L);
            return;
        }
        if (DialogObject.isChatDialog(j)) {
            long j2 = -j;
            TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(j2));
            if (chat != null && !chat.megagroup) {
                getMessagesController().convertToMegaGroup(null, j2, null, new SendMessagesHelper$$ExternalSyntheticLambda76(this, uri, arrayList, longCallback));
                return;
            }
        }
        new Thread(new SendMessagesHelper$$ExternalSyntheticLambda32(this, arrayList, j, uri, longCallback)).start();
    }

    public /* synthetic */ void lambda$prepareImportHistory$64(Uri uri, ArrayList arrayList, MessagesStorage.LongCallback longCallback, long j) {
        if (j != 0) {
            prepareImportHistory(-j, uri, arrayList, longCallback);
        } else {
            longCallback.run(0L);
        }
    }

    public /* synthetic */ void lambda$prepareImportHistory$69(ArrayList arrayList, long j, Uri uri, MessagesStorage.LongCallback longCallback) {
        ArrayList arrayList2 = arrayList != null ? arrayList : new ArrayList();
        ImportingHistory importingHistory = new ImportingHistory();
        importingHistory.mediaPaths = arrayList2;
        importingHistory.dialogId = j;
        importingHistory.peer = getMessagesController().getInputPeer(j);
        HashMap hashMap = new HashMap();
        int i = 0;
        int size = arrayList2.size();
        while (i < size + 1) {
            Uri uri2 = i == 0 ? uri : (Uri) arrayList2.get(i - 1);
            if (uri2 != null && !AndroidUtilities.isInternalUri(uri2)) {
                String copyFileToCache = MediaController.copyFileToCache(uri2, "txt");
                if (copyFileToCache == null) {
                    continue;
                } else {
                    File file = new File(copyFileToCache);
                    if (file.exists()) {
                        long length = file.length();
                        if (length != 0) {
                            importingHistory.totalSize += length;
                            if (i != 0) {
                                importingHistory.uploadMedia.add(copyFileToCache);
                            } else if (length > 33554432) {
                                file.delete();
                                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda19(longCallback));
                                return;
                            } else {
                                importingHistory.historyPath = copyFileToCache;
                            }
                            importingHistory.uploadSet.add(copyFileToCache);
                            hashMap.put(copyFileToCache, importingHistory);
                        }
                    }
                    if (i == 0) {
                        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda18(longCallback));
                        return;
                    }
                }
            } else if (i == 0) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda17(longCallback));
                return;
            }
            i++;
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda36(this, hashMap, j, importingHistory, longCallback));
    }

    public static /* synthetic */ void lambda$prepareImportHistory$67(MessagesStorage.LongCallback longCallback) {
        Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("ImportFileTooLarge", 2131626237), 0).show();
        longCallback.run(0L);
    }

    public /* synthetic */ void lambda$prepareImportHistory$68(HashMap hashMap, long j, ImportingHistory importingHistory, MessagesStorage.LongCallback longCallback) {
        this.importingHistoryFiles.putAll(hashMap);
        this.importingHistoryMap.put(j, importingHistory);
        getFileLoader().uploadFile(importingHistory.historyPath, false, true, 0L, 67108864, true);
        getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(j));
        longCallback.run(j);
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public void prepareImportStickers(String str, String str2, String str3, ArrayList<ImportingSticker> arrayList, MessagesStorage.StringCallback stringCallback) {
        if (this.importingStickersMap.get(str2) != null) {
            stringCallback.run(null);
        } else {
            new Thread(new SendMessagesHelper$$ExternalSyntheticLambda30(this, str, str2, str3, arrayList, stringCallback)).start();
        }
    }

    public /* synthetic */ void lambda$prepareImportStickers$72(String str, String str2, String str3, ArrayList arrayList, MessagesStorage.StringCallback stringCallback) {
        ImportingStickers importingStickers = new ImportingStickers();
        importingStickers.title = str;
        importingStickers.shortName = str2;
        importingStickers.software = str3;
        HashMap hashMap = new HashMap();
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            ImportingSticker importingSticker = (ImportingSticker) arrayList.get(i);
            File file = new File(importingSticker.path);
            if (file.exists()) {
                long length = file.length();
                if (length != 0) {
                    importingStickers.totalSize += length;
                    importingStickers.uploadMedia.add(importingSticker);
                    importingStickers.uploadSet.put(importingSticker.path, importingSticker);
                    hashMap.put(importingSticker.path, importingStickers);
                }
            }
            if (i == 0) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda20(stringCallback));
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda41(this, importingStickers, hashMap, str2, stringCallback));
    }

    public /* synthetic */ void lambda$prepareImportStickers$71(ImportingStickers importingStickers, HashMap hashMap, String str, MessagesStorage.StringCallback stringCallback) {
        if (importingStickers.uploadMedia.get(0).item != null) {
            importingStickers.startImport();
        } else {
            this.importingStickersFiles.putAll(hashMap);
            this.importingStickersMap.put(str, importingStickers);
            importingStickers.initImport();
            getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, str);
            stringCallback.run(str);
        }
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public TLRPC$TL_photo generatePhotoSizes(String str, Uri uri) {
        return generatePhotoSizes(null, str, uri);
    }

    public TLRPC$TL_photo generatePhotoSizes(TLRPC$TL_photo tLRPC$TL_photo, String str, Uri uri) {
        Bitmap loadBitmap = ImageLoader.loadBitmap(str, uri, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true);
        if (loadBitmap == null) {
            loadBitmap = ImageLoader.loadBitmap(str, uri, 800.0f, 800.0f, true);
        }
        ArrayList<TLRPC$PhotoSize> arrayList = new ArrayList<>();
        TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, true);
        if (scaleAndSaveImage != null) {
            arrayList.add(scaleAndSaveImage);
        }
        TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(loadBitmap, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true, 80, false, 101, 101);
        if (scaleAndSaveImage2 != null) {
            arrayList.add(scaleAndSaveImage2);
        }
        if (loadBitmap != null) {
            loadBitmap.recycle();
        }
        if (arrayList.isEmpty()) {
            return null;
        }
        getUserConfig().saveConfig(false);
        if (tLRPC$TL_photo == null) {
            tLRPC$TL_photo = new TLRPC$TL_photo();
        }
        tLRPC$TL_photo.date = getConnectionsManager().getCurrentTime();
        tLRPC$TL_photo.sizes = arrayList;
        tLRPC$TL_photo.file_reference = new byte[0];
        return tLRPC$TL_photo;
    }

    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Can't wrap try/catch for region: R(28:(5:308|61|315|62|(10:64|323|65|66|317|67|68|319|69|70)(1:76))|(3:321|78|(28:80|81|(25:83|313|88|91|(6:124|(1:126)|127|(1:129)|130|(1:132))(1:133)|(2:135|(18:137|144|(1:173)(7:147|(1:149)(1:150)|151|(1:156)(1:155)|(1:170)(4:161|(1:163)(1:164)|165|(2:169|172))|171|172)|174|(11:176|(1:178)|179|(3:181|182|202)(1:213)|(3:327|220|(10:222|223|329|224|(1:226)|227|233|(1:252)(8:236|309|237|238|311|239|244|(2:251|254))|253|254))|232|233|(0)|252|253|254)(1:255)|(1:257)(1:258)|259|(1:261)|262|(1:265)|(1:267)|268|(2:270|(2:275|(2:284|(1:286)(1:287))(1:283))(4:274|(1:302)(2:(1:297)(1:296)|(2:299|(1:301)))|303|304))(1:288)|289|(0)|302|303|304)(2:(1:139)(1:140)|141))(1:142)|143|144|(0)|173|174|(0)(0)|(0)(0)|259|(0)|262|(1:265)|(0)|268|(0)(0)|289|(0)|302|303|304)|87|313|88|91|(0)(0)|(0)(0)|143|144|(0)|173|174|(0)(0)|(0)(0)|259|(0)|262|(0)|(0)|268|(0)(0)|289|(0)|302|303|304))|86|87|313|88|91|(0)(0)|(0)(0)|143|144|(0)|173|174|(0)(0)|(0)(0)|259|(0)|262|(0)|(0)|268|(0)(0)|289|(0)|302|303|304) */
    /* JADX WARN: Code restructure failed: missing block: B:32:0x0058, code lost:
        if (r3 == false) goto L34;
     */
    /* JADX WARN: Code restructure failed: missing block: B:89:0x0149, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:90:0x014a, code lost:
        org.telegram.messenger.FileLog.e(r0);
     */
    /* JADX WARN: Removed duplicated region for block: B:116:0x019f  */
    /* JADX WARN: Removed duplicated region for block: B:119:0x01b7  */
    /* JADX WARN: Removed duplicated region for block: B:124:0x01c3  */
    /* JADX WARN: Removed duplicated region for block: B:133:0x01e5  */
    /* JADX WARN: Removed duplicated region for block: B:135:0x01e8  */
    /* JADX WARN: Removed duplicated region for block: B:142:0x0226  */
    /* JADX WARN: Removed duplicated region for block: B:146:0x022c A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:176:0x02ea  */
    /* JADX WARN: Removed duplicated region for block: B:235:0x03f6 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:255:0x046d  */
    /* JADX WARN: Removed duplicated region for block: B:257:0x0477  */
    /* JADX WARN: Removed duplicated region for block: B:258:0x047d  */
    /* JADX WARN: Removed duplicated region for block: B:261:0x0487  */
    /* JADX WARN: Removed duplicated region for block: B:264:0x0490 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:267:0x0499  */
    /* JADX WARN: Removed duplicated region for block: B:270:0x04a5  */
    /* JADX WARN: Removed duplicated region for block: B:288:0x04fe  */
    /* JADX WARN: Removed duplicated region for block: B:291:0x0503 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:306:0x0189 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:325:0x0175 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private static int prepareSendingDocumentInternal(AccountInstance accountInstance, String str, String str2, Uri uri, String str3, long j, MessageObject messageObject, MessageObject messageObject2, CharSequence charSequence, ArrayList<TLRPC$MessageEntity> arrayList, MessageObject messageObject3, long[] jArr, boolean z, boolean z2, boolean z3, int i, Integer[] numArr) {
        String str4;
        String str5;
        String str6;
        String lowerCase;
        boolean z4;
        String str7;
        Object obj;
        Object obj2;
        int i2;
        String str8;
        String str9;
        TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio;
        String str10;
        boolean z5;
        Object obj3;
        String str11;
        String str12;
        String str13;
        int i3;
        Object obj4;
        TLRPC$TL_document tLRPC$TL_document;
        String str14;
        MimeTypeMap mimeTypeMap;
        boolean z6;
        TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio2;
        Object obj5;
        long j2;
        String str15;
        String str16;
        boolean z7;
        String str17;
        TLRPC$TL_document tLRPC$TL_document2;
        HashMap hashMap;
        String str18;
        boolean z8;
        char c;
        int i4;
        int i5;
        Exception e;
        Exception e2;
        Bitmap loadBitmap;
        char c2;
        TLRPC$TL_document tLRPC$TL_document3;
        String str19;
        String str20;
        TLRPC$TL_document tLRPC$TL_document4;
        String str21;
        String str22;
        AudioInfo audioInfo;
        String str23;
        MediaMetadataRetriever mediaMetadataRetriever;
        Throwable th;
        String str24;
        String str25;
        int i6;
        MediaMetadataRetriever mediaMetadataRetriever2;
        Exception e3;
        String extractMetadata;
        String str26;
        String str27;
        boolean z9;
        boolean z10;
        if ((str == null || str.length() == 0) && uri == null) {
            return 1;
        }
        if (uri != null && AndroidUtilities.isInternalUri(uri)) {
            return 1;
        }
        if (str != null && AndroidUtilities.isInternalUri(Uri.fromFile(new File(str)))) {
            return 1;
        }
        MimeTypeMap singleton = MimeTypeMap.getSingleton();
        if (uri == null || str != null) {
            str4 = str;
        } else if (checkFileSize(accountInstance, uri)) {
            return 2;
        } else {
            str5 = str3 != null ? singleton.getExtensionFromMimeType(str3) : null;
            if (str5 == null) {
                str5 = "txt";
                z10 = false;
            } else {
                z10 = true;
            }
            String copyFileToCache = MediaController.copyFileToCache(uri, str5);
            if (copyFileToCache == null) {
                return 1;
            }
            str4 = copyFileToCache;
        }
        str5 = null;
        File file = new File(str4);
        if (!file.exists() || file.length() == 0) {
            return 1;
        }
        if (!FileLoader.checkUploadFileSize(accountInstance.getCurrentAccount(), file.length())) {
            return 2;
        }
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        String name = file.getName();
        if (str5 == null) {
            int lastIndexOf = str4.lastIndexOf(46);
            if (lastIndexOf != -1) {
                str5 = str4.substring(lastIndexOf + 1);
            } else {
                str6 = "";
                lowerCase = str6.toLowerCase();
                if (!lowerCase.equals("mp3") || lowerCase.equals("m4a")) {
                    str7 = name;
                    obj2 = "flac";
                    obj = "opus";
                    audioInfo = AudioInfo.getAudioInfo(file);
                    if (audioInfo == null) {
                        long duration = audioInfo.getDuration();
                        if (duration != 0) {
                            str23 = audioInfo.getArtist();
                            str9 = audioInfo.getTitle();
                            i2 = (int) (duration / 1000);
                            str8 = str23;
                        }
                    }
                    str9 = null;
                    i2 = 0;
                    str23 = null;
                    str8 = str23;
                } else if (lowerCase.equals("opus") || lowerCase.equals("ogg") || lowerCase.equals("flac")) {
                    try {
                        try {
                            mediaMetadataRetriever2 = new MediaMetadataRetriever();
                            try {
                                mediaMetadataRetriever2.setDataSource(file.getAbsolutePath());
                                if (mediaMetadataRetriever2.extractMetadata(9) != null) {
                                    obj2 = "flac";
                                    obj = "opus";
                                    try {
                                        i6 = (int) Math.ceil(((float) Long.parseLong(extractMetadata)) / 1000.0f);
                                        try {
                                            str25 = mediaMetadataRetriever2.extractMetadata(7);
                                            str7 = name;
                                        } catch (Exception e4) {
                                            e3 = e4;
                                            str7 = name;
                                            str25 = null;
                                            str24 = null;
                                            FileLog.e(e3);
                                            if (mediaMetadataRetriever2 != null) {
                                                try {
                                                    mediaMetadataRetriever2.release();
                                                } catch (Exception e5) {
                                                    FileLog.e(e5);
                                                }
                                            }
                                            i2 = i6;
                                            str9 = str25;
                                            str8 = str24;
                                            z4 = false;
                                            if (i2 != 0) {
                                            }
                                            if (str2 == null) {
                                            }
                                            z5 = false;
                                            if (!z5) {
                                            }
                                            str12 = "";
                                            str11 = str10;
                                            obj3 = "m4a";
                                            obj4 = obj2;
                                            str13 = str7;
                                            j2 = 0;
                                            i3 = -1;
                                            z6 = isEncryptedDialog;
                                            str14 = str4;
                                            tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                                            Object obj6 = obj;
                                            mimeTypeMap = singleton;
                                            obj5 = obj6;
                                            str15 = null;
                                            tLRPC$TL_document = null;
                                            if (tLRPC$TL_document != null) {
                                            }
                                            if (charSequence != null) {
                                            }
                                            hashMap = new HashMap();
                                            str18 = str11;
                                            if (str18 != null) {
                                            }
                                            if (z2) {
                                            }
                                            if (str15 != null) {
                                            }
                                            int i7 = 0;
                                            if (numArr != null) {
                                            }
                                            z8 = false;
                                            if (z7) {
                                            }
                                            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, r12, arrayList, z3, i));
                                            return 0;
                                        }
                                        try {
                                            str26 = mediaMetadataRetriever2.extractMetadata(2);
                                        } catch (Exception e6) {
                                            e3 = e6;
                                            str24 = null;
                                            FileLog.e(e3);
                                            if (mediaMetadataRetriever2 != null) {
                                            }
                                            i2 = i6;
                                            str9 = str25;
                                            str8 = str24;
                                            z4 = false;
                                            if (i2 != 0) {
                                            }
                                            if (str2 == null) {
                                            }
                                            z5 = false;
                                            if (!z5) {
                                            }
                                            str12 = "";
                                            str11 = str10;
                                            obj3 = "m4a";
                                            obj4 = obj2;
                                            str13 = str7;
                                            j2 = 0;
                                            i3 = -1;
                                            z6 = isEncryptedDialog;
                                            str14 = str4;
                                            tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                                            Object obj62 = obj;
                                            mimeTypeMap = singleton;
                                            obj5 = obj62;
                                            str15 = null;
                                            tLRPC$TL_document = null;
                                            if (tLRPC$TL_document != null) {
                                            }
                                            if (charSequence != null) {
                                            }
                                            hashMap = new HashMap();
                                            str18 = str11;
                                            if (str18 != null) {
                                            }
                                            if (z2) {
                                            }
                                            if (str15 != null) {
                                            }
                                            int i72 = 0;
                                            if (numArr != null) {
                                            }
                                            z8 = false;
                                            if (z7) {
                                            }
                                            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, r12, arrayList, z3, i));
                                            return 0;
                                        }
                                    } catch (Exception e7) {
                                        e3 = e7;
                                        str7 = name;
                                        i6 = 0;
                                        str25 = null;
                                        str24 = null;
                                        FileLog.e(e3);
                                        if (mediaMetadataRetriever2 != null) {
                                        }
                                        i2 = i6;
                                        str9 = str25;
                                        str8 = str24;
                                        z4 = false;
                                        if (i2 != 0) {
                                        }
                                        if (str2 == null) {
                                        }
                                        z5 = false;
                                        if (!z5) {
                                        }
                                        str12 = "";
                                        str11 = str10;
                                        obj3 = "m4a";
                                        obj4 = obj2;
                                        str13 = str7;
                                        j2 = 0;
                                        i3 = -1;
                                        z6 = isEncryptedDialog;
                                        str14 = str4;
                                        tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                                        Object obj622 = obj;
                                        mimeTypeMap = singleton;
                                        obj5 = obj622;
                                        str15 = null;
                                        tLRPC$TL_document = null;
                                        if (tLRPC$TL_document != null) {
                                        }
                                        if (charSequence != null) {
                                        }
                                        hashMap = new HashMap();
                                        str18 = str11;
                                        if (str18 != null) {
                                        }
                                        if (z2) {
                                        }
                                        if (str15 != null) {
                                        }
                                        int i722 = 0;
                                        if (numArr != null) {
                                        }
                                        z8 = false;
                                        if (z7) {
                                        }
                                        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, r12, arrayList, z3, i));
                                        return 0;
                                    }
                                } else {
                                    str7 = name;
                                    obj2 = "flac";
                                    obj = "opus";
                                    str26 = null;
                                    i6 = 0;
                                    str25 = null;
                                }
                            } catch (Exception e8) {
                                e3 = e8;
                                str7 = name;
                                obj2 = "flac";
                                obj = "opus";
                            }
                        } catch (Throwable th2) {
                            th = th2;
                            mediaMetadataRetriever = -1;
                            if (mediaMetadataRetriever != null) {
                                try {
                                    mediaMetadataRetriever.release();
                                } catch (Exception e9) {
                                    FileLog.e(e9);
                                }
                            }
                            throw th;
                        }
                    } catch (Exception e10) {
                        e3 = e10;
                        str7 = name;
                        obj2 = "flac";
                        obj = "opus";
                        mediaMetadataRetriever2 = null;
                    } catch (Throwable th3) {
                        th = th3;
                        mediaMetadataRetriever = null;
                        if (mediaMetadataRetriever != null) {
                        }
                        throw th;
                    }
                    if (messageObject3 == null) {
                        try {
                        } catch (Exception e11) {
                            e3 = e11;
                            str24 = str26;
                            FileLog.e(e3);
                            if (mediaMetadataRetriever2 != null) {
                            }
                            i2 = i6;
                            str9 = str25;
                            str8 = str24;
                            z4 = false;
                            if (i2 != 0) {
                            }
                            if (str2 == null) {
                            }
                            z5 = false;
                            if (!z5) {
                            }
                            str12 = "";
                            str11 = str10;
                            obj3 = "m4a";
                            obj4 = obj2;
                            str13 = str7;
                            j2 = 0;
                            i3 = -1;
                            z6 = isEncryptedDialog;
                            str14 = str4;
                            tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                            Object obj6222 = obj;
                            mimeTypeMap = singleton;
                            obj5 = obj6222;
                            str15 = null;
                            tLRPC$TL_document = null;
                            if (tLRPC$TL_document != null) {
                            }
                            if (charSequence != null) {
                            }
                            hashMap = new HashMap();
                            str18 = str11;
                            if (str18 != null) {
                            }
                            if (z2) {
                            }
                            if (str15 != null) {
                            }
                            int i7222 = 0;
                            if (numArr != null) {
                            }
                            z8 = false;
                            if (z7) {
                            }
                            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, r12, arrayList, z3, i));
                            return 0;
                        }
                        if (lowerCase.equals("ogg")) {
                            str27 = str26;
                            if (MediaController.isOpusFile(file.getAbsolutePath()) == 1) {
                                z9 = true;
                                mediaMetadataRetriever2.release();
                                str9 = str25;
                                str8 = str27;
                                z4 = z9;
                                i2 = i6;
                                if (i2 != 0) {
                                    tLRPC$TL_documentAttributeAudio = new TLRPC$TL_documentAttributeAudio();
                                    tLRPC$TL_documentAttributeAudio.duration = i2;
                                    tLRPC$TL_documentAttributeAudio.title = str9;
                                    tLRPC$TL_documentAttributeAudio.performer = str8;
                                    if (str9 == null) {
                                        tLRPC$TL_documentAttributeAudio.title = "";
                                    }
                                    int i8 = tLRPC$TL_documentAttributeAudio.flags | 1;
                                    tLRPC$TL_documentAttributeAudio.flags = i8;
                                    if (str8 == null) {
                                        tLRPC$TL_documentAttributeAudio.performer = "";
                                    }
                                    tLRPC$TL_documentAttributeAudio.flags = i8 | 2;
                                    if (z4) {
                                        tLRPC$TL_documentAttributeAudio.voice = true;
                                    }
                                } else {
                                    tLRPC$TL_documentAttributeAudio = null;
                                }
                                if (str2 == null) {
                                    str10 = str2;
                                } else if (str2.endsWith("attheme")) {
                                    str10 = str2;
                                    z5 = true;
                                    if (!z5 || isEncryptedDialog) {
                                        str12 = "";
                                        str11 = str10;
                                        obj3 = "m4a";
                                        obj4 = obj2;
                                        str13 = str7;
                                        j2 = 0;
                                        i3 = -1;
                                        z6 = isEncryptedDialog;
                                        str14 = str4;
                                        tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                                        Object obj62222 = obj;
                                        mimeTypeMap = singleton;
                                        obj5 = obj62222;
                                        str15 = null;
                                        tLRPC$TL_document = null;
                                    } else {
                                        Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str10, !isEncryptedDialog ? 1 : 4);
                                        if (sentFile == null || !(sentFile[0] instanceof TLRPC$TL_document)) {
                                            str19 = null;
                                            tLRPC$TL_document3 = null;
                                        } else {
                                            tLRPC$TL_document3 = (TLRPC$TL_document) sentFile[0];
                                            str19 = (String) sentFile[1];
                                        }
                                        if (tLRPC$TL_document3 != null || str4.equals(str10) || isEncryptedDialog) {
                                            str21 = str19;
                                            tLRPC$TL_document4 = tLRPC$TL_document3;
                                        } else {
                                            MessagesStorage messagesStorage = accountInstance.getMessagesStorage();
                                            StringBuilder sb = new StringBuilder();
                                            sb.append(str4);
                                            str21 = str19;
                                            tLRPC$TL_document4 = tLRPC$TL_document3;
                                            sb.append(file.length());
                                            Object[] sentFile2 = messagesStorage.getSentFile(sb.toString(), !isEncryptedDialog ? 1 : 4);
                                            if (sentFile2 != null && (sentFile2[0] instanceof TLRPC$TL_document)) {
                                                str20 = (String) sentFile2[1];
                                                tLRPC$TL_document = (TLRPC$TL_document) sentFile2[0];
                                                i3 = -1;
                                                str12 = "";
                                                str13 = str7;
                                                String str28 = str4;
                                                str11 = str10;
                                                obj3 = "m4a";
                                                str14 = str4;
                                                obj4 = obj2;
                                                tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                                                z6 = isEncryptedDialog;
                                                j2 = 0;
                                                Object obj7 = obj;
                                                mimeTypeMap = singleton;
                                                obj5 = obj7;
                                                ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str28, null, 0L);
                                                str15 = str20;
                                            }
                                        }
                                        str20 = str21;
                                        tLRPC$TL_document = tLRPC$TL_document4;
                                        i3 = -1;
                                        str12 = "";
                                        str13 = str7;
                                        String str282 = str4;
                                        str11 = str10;
                                        obj3 = "m4a";
                                        str14 = str4;
                                        obj4 = obj2;
                                        tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                                        z6 = isEncryptedDialog;
                                        j2 = 0;
                                        Object obj72 = obj;
                                        mimeTypeMap = singleton;
                                        obj5 = obj72;
                                        ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str282, null, 0L);
                                        str15 = str20;
                                    }
                                    if (tLRPC$TL_document != null) {
                                        TLRPC$TL_document tLRPC$TL_document5 = new TLRPC$TL_document();
                                        tLRPC$TL_document5.id = j2;
                                        tLRPC$TL_document5.date = accountInstance.getConnectionsManager().getCurrentTime();
                                        TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                                        tLRPC$TL_documentAttributeFilename.file_name = str13;
                                        tLRPC$TL_document5.file_reference = new byte[0];
                                        tLRPC$TL_document5.attributes.add(tLRPC$TL_documentAttributeFilename);
                                        tLRPC$TL_document5.size = file.length();
                                        tLRPC$TL_document5.dc_id = 0;
                                        if (tLRPC$TL_documentAttributeAudio2 != null) {
                                            tLRPC$TL_document5.attributes.add(tLRPC$TL_documentAttributeAudio2);
                                        }
                                        if (str6.length() != 0) {
                                            switch (lowerCase.hashCode()) {
                                                case 106458:
                                                    if (lowerCase.equals(obj3)) {
                                                        c2 = 0;
                                                        break;
                                                    }
                                                    c2 = 65535;
                                                    break;
                                                case 108272:
                                                    if (lowerCase.equals("mp3")) {
                                                        c2 = 1;
                                                        break;
                                                    }
                                                    c2 = 65535;
                                                    break;
                                                case 109967:
                                                    if (lowerCase.equals("ogg")) {
                                                        c2 = 2;
                                                        break;
                                                    }
                                                    c2 = 65535;
                                                    break;
                                                case 3145576:
                                                    if (lowerCase.equals(obj4)) {
                                                        c2 = 3;
                                                        break;
                                                    }
                                                    c2 = 65535;
                                                    break;
                                                case 3418175:
                                                    if (lowerCase.equals(obj5)) {
                                                        c2 = 4;
                                                        break;
                                                    }
                                                    c2 = 65535;
                                                    break;
                                                case 3645340:
                                                    if (lowerCase.equals("webp")) {
                                                        c2 = 5;
                                                        break;
                                                    }
                                                    c2 = 65535;
                                                    break;
                                                default:
                                                    c2 = 65535;
                                                    break;
                                            }
                                            switch (c2) {
                                                case 0:
                                                    tLRPC$TL_document5.mime_type = "audio/m4a";
                                                    break;
                                                case 1:
                                                    tLRPC$TL_document5.mime_type = "audio/mpeg";
                                                    break;
                                                case 2:
                                                    tLRPC$TL_document5.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    tLRPC$TL_document5.mime_type = "audio/flac";
                                                    break;
                                                case 4:
                                                    tLRPC$TL_document5.mime_type = "audio/opus";
                                                    break;
                                                case 5:
                                                    tLRPC$TL_document5.mime_type = "image/webp";
                                                    break;
                                                default:
                                                    String mimeTypeFromExtension = mimeTypeMap.getMimeTypeFromExtension(lowerCase);
                                                    if (mimeTypeFromExtension != null) {
                                                        tLRPC$TL_document5.mime_type = mimeTypeFromExtension;
                                                        break;
                                                    } else {
                                                        tLRPC$TL_document5.mime_type = "application/octet-stream";
                                                        break;
                                                    }
                                            }
                                        } else {
                                            tLRPC$TL_document5.mime_type = "application/octet-stream";
                                        }
                                        if (!z2 && tLRPC$TL_document5.mime_type.equals("image/gif") && (messageObject3 == null || messageObject3.getGroupIdForUse() == j2)) {
                                            try {
                                                loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            } catch (Exception e12) {
                                                e2 = e12;
                                                z7 = z6;
                                            }
                                            if (loadBitmap != null) {
                                                tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                                                tLRPC$TL_document5.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                                z7 = z6;
                                                try {
                                                    TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z7);
                                                    if (scaleAndSaveImage != null) {
                                                        tLRPC$TL_document5.thumbs.add(scaleAndSaveImage);
                                                        tLRPC$TL_document5.flags |= 1;
                                                    }
                                                    loadBitmap.recycle();
                                                } catch (Exception e13) {
                                                    e2 = e13;
                                                    FileLog.e(e2);
                                                    if (tLRPC$TL_document5.mime_type.equals("image/webp")) {
                                                    }
                                                    str16 = str14;
                                                    str17 = str12;
                                                    tLRPC$TL_document2 = tLRPC$TL_document5;
                                                    if (charSequence != null) {
                                                    }
                                                    hashMap = new HashMap();
                                                    str18 = str11;
                                                    if (str18 != null) {
                                                    }
                                                    if (z2) {
                                                    }
                                                    if (str15 != null) {
                                                    }
                                                    int i72222 = 0;
                                                    if (numArr != null) {
                                                    }
                                                    z8 = false;
                                                    if (z7) {
                                                    }
                                                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, r12, arrayList, z3, i));
                                                    return 0;
                                                }
                                                if (tLRPC$TL_document5.mime_type.equals("image/webp") || messageObject3 != null) {
                                                    str16 = str14;
                                                } else {
                                                    BitmapFactory.Options options = new BitmapFactory.Options();
                                                    try {
                                                        options.inJustDecodeBounds = true;
                                                        str16 = str14;
                                                    } catch (Exception e14) {
                                                        e = e14;
                                                        str16 = str14;
                                                    }
                                                    try {
                                                        RandomAccessFile randomAccessFile = new RandomAccessFile(str16, "r");
                                                        MappedByteBuffer map = randomAccessFile.getChannel().map(FileChannel.MapMode.READ_ONLY, 0L, str16.length());
                                                        Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                                        randomAccessFile.close();
                                                    } catch (Exception e15) {
                                                        e = e15;
                                                        FileLog.e(e);
                                                        i4 = options.outWidth;
                                                        if (i4 != 0) {
                                                            TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                                            str17 = str12;
                                                            tLRPC$TL_documentAttributeSticker.alt = str17;
                                                            tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                            tLRPC$TL_document5.attributes.add(tLRPC$TL_documentAttributeSticker);
                                                            TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize = new TLRPC$TL_documentAttributeImageSize();
                                                            tLRPC$TL_documentAttributeImageSize.w = options.outWidth;
                                                            tLRPC$TL_documentAttributeImageSize.h = options.outHeight;
                                                            tLRPC$TL_document5.attributes.add(tLRPC$TL_documentAttributeImageSize);
                                                            tLRPC$TL_document2 = tLRPC$TL_document5;
                                                            if (charSequence != null) {
                                                            }
                                                            hashMap = new HashMap();
                                                            str18 = str11;
                                                            if (str18 != null) {
                                                            }
                                                            if (z2) {
                                                            }
                                                            if (str15 != null) {
                                                            }
                                                            int i722222 = 0;
                                                            if (numArr != null) {
                                                            }
                                                            z8 = false;
                                                            if (z7) {
                                                            }
                                                            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, r12, arrayList, z3, i));
                                                            return 0;
                                                        }
                                                        str17 = str12;
                                                        tLRPC$TL_document2 = tLRPC$TL_document5;
                                                        if (charSequence != null) {
                                                        }
                                                        hashMap = new HashMap();
                                                        str18 = str11;
                                                        if (str18 != null) {
                                                        }
                                                        if (z2) {
                                                        }
                                                        if (str15 != null) {
                                                        }
                                                        int i7222222 = 0;
                                                        if (numArr != null) {
                                                        }
                                                        z8 = false;
                                                        if (z7) {
                                                        }
                                                        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, r12, arrayList, z3, i));
                                                        return 0;
                                                    }
                                                    i4 = options.outWidth;
                                                    if (i4 != 0 && (i5 = options.outHeight) != 0 && i4 <= 800 && i5 <= 800) {
                                                        TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker2 = new TLRPC$TL_documentAttributeSticker();
                                                        str17 = str12;
                                                        tLRPC$TL_documentAttributeSticker2.alt = str17;
                                                        tLRPC$TL_documentAttributeSticker2.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                        tLRPC$TL_document5.attributes.add(tLRPC$TL_documentAttributeSticker2);
                                                        TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize2 = new TLRPC$TL_documentAttributeImageSize();
                                                        tLRPC$TL_documentAttributeImageSize2.w = options.outWidth;
                                                        tLRPC$TL_documentAttributeImageSize2.h = options.outHeight;
                                                        tLRPC$TL_document5.attributes.add(tLRPC$TL_documentAttributeImageSize2);
                                                        tLRPC$TL_document2 = tLRPC$TL_document5;
                                                    }
                                                }
                                                str17 = str12;
                                                tLRPC$TL_document2 = tLRPC$TL_document5;
                                            }
                                        }
                                        z7 = z6;
                                        if (tLRPC$TL_document5.mime_type.equals("image/webp")) {
                                        }
                                        str16 = str14;
                                        str17 = str12;
                                        tLRPC$TL_document2 = tLRPC$TL_document5;
                                    } else {
                                        z7 = z6;
                                        str16 = str14;
                                        str17 = str12;
                                        tLRPC$TL_document2 = tLRPC$TL_document;
                                    }
                                    String charSequence2 = charSequence != null ? charSequence.toString() : str17;
                                    hashMap = new HashMap();
                                    str18 = str11;
                                    if (str18 != null) {
                                        hashMap.put("originalPath", str18);
                                    }
                                    if (z2 && tLRPC$TL_documentAttributeAudio2 == null) {
                                        hashMap.put("forceDocument", "1");
                                    }
                                    if (str15 != null) {
                                        hashMap.put("parentObject", str15);
                                    }
                                    int i72222222 = 0;
                                    if (numArr != null) {
                                        i72222222 = numArr[0];
                                        String str29 = tLRPC$TL_document2.mime_type;
                                        if (str29 != null && str29.toLowerCase().startsWith("image/webp")) {
                                            numArr[0] = Integer.valueOf(i3);
                                            c = 0;
                                            z8 = true;
                                            if (z7 && jArr != null) {
                                                if (numArr != null && i72222222 != null && i72222222 != numArr[c]) {
                                                    finishGroup(accountInstance, jArr[c], i);
                                                    jArr[c] = Utilities.random.nextLong();
                                                }
                                                if (!z8) {
                                                    hashMap.put("groupId", str17 + jArr[c]);
                                                    if (z) {
                                                        hashMap.put("final", "1");
                                                    }
                                                }
                                            }
                                            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z3, i));
                                            return 0;
                                        }
                                        String str30 = tLRPC$TL_document2.mime_type;
                                        if ((str30 == null || (!str30.toLowerCase().startsWith("image/") && !tLRPC$TL_document2.mime_type.toLowerCase().startsWith("video/mp4"))) && !MessageObject.canPreviewDocument(tLRPC$TL_document2)) {
                                            c = 0;
                                            if (tLRPC$TL_documentAttributeAudio2 != null) {
                                                numArr[0] = 2;
                                            } else {
                                                numArr[0] = 0;
                                            }
                                        } else {
                                            c = 0;
                                            numArr[0] = 1;
                                        }
                                    } else {
                                        c = 0;
                                    }
                                    z8 = false;
                                    if (z7) {
                                    }
                                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z3, i));
                                    return 0;
                                } else {
                                    if (tLRPC$TL_documentAttributeAudio != null) {
                                        str22 = str2 + "audio" + file.length();
                                    } else {
                                        str22 = str2 + "" + file.length();
                                    }
                                    str10 = str22;
                                }
                                z5 = false;
                                if (!z5) {
                                }
                                str12 = "";
                                str11 = str10;
                                obj3 = "m4a";
                                obj4 = obj2;
                                str13 = str7;
                                j2 = 0;
                                i3 = -1;
                                z6 = isEncryptedDialog;
                                str14 = str4;
                                tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                                Object obj622222 = obj;
                                mimeTypeMap = singleton;
                                obj5 = obj622222;
                                str15 = null;
                                tLRPC$TL_document = null;
                                if (tLRPC$TL_document != null) {
                                }
                                if (charSequence != null) {
                                }
                                hashMap = new HashMap();
                                str18 = str11;
                                if (str18 != null) {
                                }
                                if (z2) {
                                    hashMap.put("forceDocument", "1");
                                }
                                if (str15 != null) {
                                }
                                int i722222222 = 0;
                                if (numArr != null) {
                                }
                                z8 = false;
                                if (z7) {
                                }
                                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z3, i));
                                return 0;
                            }
                            z9 = false;
                            mediaMetadataRetriever2.release();
                            str9 = str25;
                            str8 = str27;
                            z4 = z9;
                            i2 = i6;
                            if (i2 != 0) {
                            }
                            if (str2 == null) {
                            }
                            z5 = false;
                            if (!z5) {
                            }
                            str12 = "";
                            str11 = str10;
                            obj3 = "m4a";
                            obj4 = obj2;
                            str13 = str7;
                            j2 = 0;
                            i3 = -1;
                            z6 = isEncryptedDialog;
                            str14 = str4;
                            tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                            Object obj6222222 = obj;
                            mimeTypeMap = singleton;
                            obj5 = obj6222222;
                            str15 = null;
                            tLRPC$TL_document = null;
                            if (tLRPC$TL_document != null) {
                            }
                            if (charSequence != null) {
                            }
                            hashMap = new HashMap();
                            str18 = str11;
                            if (str18 != null) {
                            }
                            if (z2) {
                            }
                            if (str15 != null) {
                            }
                            int i7222222222 = 0;
                            if (numArr != null) {
                            }
                            z8 = false;
                            if (z7) {
                            }
                            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z3, i));
                            return 0;
                        }
                    }
                    str27 = str26;
                    z9 = false;
                    mediaMetadataRetriever2.release();
                    str9 = str25;
                    str8 = str27;
                    z4 = z9;
                    i2 = i6;
                    if (i2 != 0) {
                    }
                    if (str2 == null) {
                    }
                    z5 = false;
                    if (!z5) {
                    }
                    str12 = "";
                    str11 = str10;
                    obj3 = "m4a";
                    obj4 = obj2;
                    str13 = str7;
                    j2 = 0;
                    i3 = -1;
                    z6 = isEncryptedDialog;
                    str14 = str4;
                    tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                    Object obj62222222 = obj;
                    mimeTypeMap = singleton;
                    obj5 = obj62222222;
                    str15 = null;
                    tLRPC$TL_document = null;
                    if (tLRPC$TL_document != null) {
                    }
                    if (charSequence != null) {
                    }
                    hashMap = new HashMap();
                    str18 = str11;
                    if (str18 != null) {
                    }
                    if (z2) {
                    }
                    if (str15 != null) {
                    }
                    int i72222222222 = 0;
                    if (numArr != null) {
                    }
                    z8 = false;
                    if (z7) {
                    }
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z3, i));
                    return 0;
                } else {
                    str7 = name;
                    obj2 = "flac";
                    obj = "opus";
                    str9 = null;
                    str8 = null;
                    i2 = 0;
                }
                z4 = false;
                if (i2 != 0) {
                }
                if (str2 == null) {
                }
                z5 = false;
                if (!z5) {
                }
                str12 = "";
                str11 = str10;
                obj3 = "m4a";
                obj4 = obj2;
                str13 = str7;
                j2 = 0;
                i3 = -1;
                z6 = isEncryptedDialog;
                str14 = str4;
                tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
                Object obj622222222 = obj;
                mimeTypeMap = singleton;
                obj5 = obj622222222;
                str15 = null;
                tLRPC$TL_document = null;
                if (tLRPC$TL_document != null) {
                }
                if (charSequence != null) {
                }
                hashMap = new HashMap();
                str18 = str11;
                if (str18 != null) {
                }
                if (z2) {
                }
                if (str15 != null) {
                }
                int i722222222222 = 0;
                if (numArr != null) {
                }
                z8 = false;
                if (z7) {
                }
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z3, i));
                return 0;
            }
        }
        str6 = str5;
        lowerCase = str6.toLowerCase();
        if (!lowerCase.equals("mp3")) {
        }
        str7 = name;
        obj2 = "flac";
        obj = "opus";
        audioInfo = AudioInfo.getAudioInfo(file);
        if (audioInfo == null) {
        }
        str9 = null;
        i2 = 0;
        str23 = null;
        str8 = str23;
        z4 = false;
        if (i2 != 0) {
        }
        if (str2 == null) {
        }
        z5 = false;
        if (!z5) {
        }
        str12 = "";
        str11 = str10;
        obj3 = "m4a";
        obj4 = obj2;
        str13 = str7;
        j2 = 0;
        i3 = -1;
        z6 = isEncryptedDialog;
        str14 = str4;
        tLRPC$TL_documentAttributeAudio2 = tLRPC$TL_documentAttributeAudio;
        Object obj6222222222 = obj;
        mimeTypeMap = singleton;
        obj5 = obj6222222222;
        str15 = null;
        tLRPC$TL_document = null;
        if (tLRPC$TL_document != null) {
        }
        if (charSequence != null) {
        }
        hashMap = new HashMap();
        str18 = str11;
        if (str18 != null) {
        }
        if (z2) {
        }
        if (str15 != null) {
        }
        int i7222222222222 = 0;
        if (numArr != null) {
        }
        z8 = false;
        if (z7) {
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(messageObject3, accountInstance, tLRPC$TL_document2, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z3, i));
        return 0;
    }

    public static /* synthetic */ void lambda$prepareSendingDocumentInternal$73(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, String str, HashMap hashMap, String str2, long j, MessageObject messageObject2, MessageObject messageObject3, String str3, ArrayList arrayList, boolean z, int i) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, str, hashMap, false, str2);
        } else {
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_document, null, str, j, messageObject2, messageObject3, str3, arrayList, null, hashMap, z, i, 0, str2, null);
        }
    }

    private static boolean checkFileSize(AccountInstance accountInstance, Uri uri) {
        long j = 0;
        if (Build.VERSION.SDK_INT >= 19) {
            try {
                AssetFileDescriptor openAssetFileDescriptor = ApplicationLoader.applicationContext.getContentResolver().openAssetFileDescriptor(uri, "r", null);
                if (openAssetFileDescriptor != null) {
                    openAssetFileDescriptor.getLength();
                }
                Cursor query = ApplicationLoader.applicationContext.getContentResolver().query(uri, new String[]{"_size"}, null, null, null);
                int columnIndex = query.getColumnIndex("_size");
                query.moveToFirst();
                j = query.getLong(columnIndex);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        }
        return !FileLoader.checkUploadFileSize(accountInstance.getCurrentAccount(), j);
    }

    public static void prepareSendingDocument(AccountInstance accountInstance, String str, String str2, Uri uri, String str3, String str4, long j, MessageObject messageObject, MessageObject messageObject2, InputContentInfoCompat inputContentInfoCompat, MessageObject messageObject3, boolean z, int i) {
        if ((str == null || str2 == null) && uri == null) {
            return;
        }
        ArrayList arrayList = new ArrayList();
        ArrayList arrayList2 = new ArrayList();
        ArrayList arrayList3 = null;
        if (uri != null) {
            arrayList3 = new ArrayList();
            arrayList3.add(uri);
        }
        if (str != null) {
            arrayList.add(str);
            arrayList2.add(str2);
        }
        prepareSendingDocuments(accountInstance, arrayList, arrayList2, arrayList3, str3, str4, j, messageObject, messageObject2, inputContentInfoCompat, messageObject3, z, i);
    }

    public static void prepareSendingAudioDocuments(AccountInstance accountInstance, ArrayList<MessageObject> arrayList, String str, long j, MessageObject messageObject, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i) {
        new Thread(new SendMessagesHelper$$ExternalSyntheticLambda10(arrayList, j, accountInstance, str, messageObject3, messageObject, messageObject2, z, i)).start();
    }

    /* JADX WARN: Removed duplicated region for block: B:25:0x0082  */
    /* JADX WARN: Removed duplicated region for block: B:26:0x008b  */
    /* JADX WARN: Removed duplicated region for block: B:28:0x008f  */
    /* JADX WARN: Removed duplicated region for block: B:32:0x00a4  */
    /* JADX WARN: Removed duplicated region for block: B:33:0x00a7  */
    /* JADX WARN: Removed duplicated region for block: B:36:0x00b0  */
    /* JADX WARN: Removed duplicated region for block: B:38:0x00b7  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingAudioDocuments$75(ArrayList arrayList, long j, AccountInstance accountInstance, String str, MessageObject messageObject, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i) {
        TLRPC$TL_document tLRPC$TL_document;
        String str2;
        HashMap hashMap;
        int size = arrayList.size();
        long j2 = 0;
        int i2 = 0;
        int i3 = 0;
        while (i2 < size) {
            MessageObject messageObject4 = (MessageObject) arrayList.get(i2);
            String str3 = messageObject4.messageOwner.attachPath;
            File file = new File(str3);
            boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
            if (!isEncryptedDialog && size > 1 && i3 % 10 == 0) {
                j2 = Utilities.random.nextLong();
                i3 = 0;
            }
            if (str3 != null) {
                str3 = str3 + "audio" + file.length();
            }
            if (!isEncryptedDialog) {
                Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str3, !isEncryptedDialog ? 1 : 4);
                if (sentFile != null && (sentFile[0] instanceof TLRPC$TL_document)) {
                    tLRPC$TL_document = (TLRPC$TL_document) sentFile[0];
                    ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str3, null, 0L);
                    str2 = (String) sentFile[1];
                    TLRPC$TL_document tLRPC$TL_document2 = tLRPC$TL_document != null ? (TLRPC$TL_document) messageObject4.messageOwner.media.document : tLRPC$TL_document;
                    if (isEncryptedDialog) {
                        if (accountInstance.getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                            return;
                        }
                    }
                    String str4 = i2 != 0 ? str : null;
                    hashMap = new HashMap();
                    if (str3 != null) {
                        hashMap.put("originalPath", str3);
                    }
                    if (str2 != null) {
                        hashMap.put("parentObject", str2);
                    }
                    i3++;
                    hashMap.put("groupId", "" + j2);
                    if (i3 != 10 || i2 == size - 1) {
                        hashMap.put("final", "1");
                    }
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda15(messageObject, accountInstance, tLRPC$TL_document2, messageObject4, hashMap, str2, j, messageObject2, messageObject3, str4, z, i));
                    i2++;
                }
            }
            str2 = null;
            tLRPC$TL_document = null;
            if (tLRPC$TL_document != null) {
            }
            if (isEncryptedDialog) {
            }
            if (i2 != 0) {
            }
            hashMap = new HashMap();
            if (str3 != null) {
            }
            if (str2 != null) {
            }
            i3++;
            hashMap.put("groupId", "" + j2);
            if (i3 != 10) {
            }
            hashMap.put("final", "1");
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda15(messageObject, accountInstance, tLRPC$TL_document2, messageObject4, hashMap, str2, j, messageObject2, messageObject3, str4, z, i));
            i2++;
        }
    }

    public static /* synthetic */ void lambda$prepareSendingAudioDocuments$74(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, MessageObject messageObject2, HashMap hashMap, String str, long j, MessageObject messageObject3, MessageObject messageObject4, String str2, boolean z, int i) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, messageObject2.messageOwner.attachPath, hashMap, false, str);
        } else {
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_document, null, messageObject2.messageOwner.attachPath, j, messageObject3, messageObject4, str2, null, null, hashMap, z, i, 0, str, null);
        }
    }

    private static void finishGroup(AccountInstance accountInstance, long j, int i) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda12(accountInstance, j, i));
    }

    public static /* synthetic */ void lambda$finishGroup$76(AccountInstance accountInstance, long j, int i) {
        SendMessagesHelper sendMessagesHelper = accountInstance.getSendMessagesHelper();
        HashMap<String, ArrayList<DelayedMessage>> hashMap = sendMessagesHelper.delayedMessages;
        ArrayList<DelayedMessage> arrayList = hashMap.get("group_" + j);
        if (arrayList == null || arrayList.isEmpty()) {
            return;
        }
        DelayedMessage delayedMessage = arrayList.get(0);
        ArrayList<MessageObject> arrayList2 = delayedMessage.messageObjects;
        MessageObject messageObject = arrayList2.get(arrayList2.size() - 1);
        delayedMessage.finalGroupMessage = messageObject.getId();
        messageObject.messageOwner.params.put("final", "1");
        TLRPC$TL_messages_messages tLRPC$TL_messages_messages = new TLRPC$TL_messages_messages();
        tLRPC$TL_messages_messages.messages.add(messageObject.messageOwner);
        accountInstance.getMessagesStorage().putMessages((TLRPC$messages_Messages) tLRPC$TL_messages_messages, delayedMessage.peer, -2, 0, false, i != 0);
        sendMessagesHelper.sendReadyToSendGroup(delayedMessage, true, true);
    }

    public static void prepareSendingDocuments(AccountInstance accountInstance, ArrayList<String> arrayList, ArrayList<String> arrayList2, ArrayList<Uri> arrayList3, String str, String str2, long j, MessageObject messageObject, MessageObject messageObject2, InputContentInfoCompat inputContentInfoCompat, MessageObject messageObject3, boolean z, int i) {
        if (arrayList == null && arrayList2 == null && arrayList3 == null) {
            return;
        }
        if (arrayList != null && arrayList2 != null && arrayList.size() != arrayList2.size()) {
            return;
        }
        Utilities.globalQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda3(j, arrayList, str, accountInstance, i, arrayList2, str2, messageObject, messageObject2, messageObject3, inputContentInfoCompat, z, arrayList3));
    }

    public static /* synthetic */ void lambda$prepareSendingDocuments$77(long j, ArrayList arrayList, String str, AccountInstance accountInstance, int i, ArrayList arrayList2, String str2, MessageObject messageObject, MessageObject messageObject2, MessageObject messageObject3, InputContentInfoCompat inputContentInfoCompat, boolean z, ArrayList arrayList3) {
        long[] jArr;
        Integer[] numArr;
        ArrayList arrayList4;
        int i2;
        AccountInstance accountInstance2 = accountInstance;
        int i3 = i;
        int i4 = 1;
        long[] jArr2 = new long[1];
        Integer[] numArr2 = new Integer[1];
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        int i5 = 10;
        if (arrayList != null) {
            int size = arrayList.size();
            i2 = 0;
            int i6 = 0;
            int i7 = 0;
            while (i7 < size) {
                String str3 = i7 == 0 ? str : null;
                if (!isEncryptedDialog && size > i4 && i6 % 10 == 0) {
                    if (jArr2[0] != 0) {
                        finishGroup(accountInstance2, jArr2[0], i3);
                    }
                    jArr2[0] = Utilities.random.nextLong();
                    i6 = 0;
                }
                int i8 = i6 + 1;
                long j2 = jArr2[0];
                int i9 = i7;
                int i10 = size;
                Integer[] numArr3 = numArr2;
                long[] jArr3 = jArr2;
                i2 = prepareSendingDocumentInternal(accountInstance, (String) arrayList.get(i7), (String) arrayList2.get(i7), null, str2, j, messageObject, messageObject2, str3, null, messageObject3, jArr3, i8 == i5 || i7 == size + (-1), inputContentInfoCompat == null, z, i, numArr3);
                i6 = (j2 != jArr3[0] || jArr3[0] == -1) ? 1 : i8;
                i7 = i9 + 1;
                accountInstance2 = accountInstance;
                i3 = i;
                size = i10;
                numArr2 = numArr3;
                jArr2 = jArr3;
                i5 = 10;
                i4 = 1;
            }
            numArr = numArr2;
            jArr = jArr2;
            arrayList4 = arrayList3;
        } else {
            numArr = numArr2;
            jArr = jArr2;
            arrayList4 = arrayList3;
            i2 = 0;
        }
        if (arrayList4 != null) {
            jArr[0] = 0;
            int size2 = arrayList3.size();
            int i11 = 0;
            int i12 = 0;
            while (i12 < arrayList3.size()) {
                String str4 = (i12 == 0 && (arrayList == null || arrayList.size() == 0)) ? str : null;
                if (!isEncryptedDialog) {
                    if (size2 > 1 && i11 % 10 == 0) {
                        if (jArr[0] != 0) {
                            finishGroup(accountInstance, jArr[0], i);
                        }
                        jArr[0] = Utilities.random.nextLong();
                        i11 = 0;
                    }
                }
                int i13 = i11 + 1;
                long j3 = jArr[0];
                int i14 = i12;
                int i15 = size2;
                i2 = prepareSendingDocumentInternal(accountInstance, null, null, (Uri) arrayList4.get(i12), str2, j, messageObject, messageObject2, str4, null, messageObject3, jArr, i13 == 10 || i12 == size2 + (-1), inputContentInfoCompat == null, z, i, numArr);
                i11 = (j3 != jArr[0] || jArr[0] == -1) ? 1 : i13;
                i12 = i14 + 1;
                arrayList4 = arrayList3;
                size2 = i15;
            }
        }
        if (inputContentInfoCompat != null) {
            inputContentInfoCompat.releasePermission();
        }
        handleError(i2, accountInstance);
    }

    private static void handleError(int i, AccountInstance accountInstance) {
        if (i != 0) {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda2(i, accountInstance));
        }
    }

    public static /* synthetic */ void lambda$handleError$78(int i, AccountInstance accountInstance) {
        try {
            if (i == 1) {
                NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.showBulletin, 1, LocaleController.getString("UnsupportedAttachment", 2131628826));
            } else if (i != 2) {
            } else {
                NotificationCenter.getInstance(accountInstance.getCurrentAccount()).postNotificationName(NotificationCenter.currentUserShowLimitReachedDialog, 6);
            }
        } catch (Exception e) {
            FileLog.e(e);
        }
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String str, Uri uri, long j, MessageObject messageObject, MessageObject messageObject2, CharSequence charSequence, ArrayList<TLRPC$MessageEntity> arrayList, ArrayList<TLRPC$InputDocument> arrayList2, InputContentInfoCompat inputContentInfoCompat, int i, MessageObject messageObject3, boolean z, int i2) {
        prepareSendingPhoto(accountInstance, str, null, uri, j, messageObject, messageObject2, charSequence, arrayList, arrayList2, inputContentInfoCompat, i, messageObject3, null, z, i2, false);
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String str, String str2, Uri uri, long j, MessageObject messageObject, MessageObject messageObject2, CharSequence charSequence, ArrayList<TLRPC$MessageEntity> arrayList, ArrayList<TLRPC$InputDocument> arrayList2, InputContentInfoCompat inputContentInfoCompat, int i, MessageObject messageObject3, VideoEditedInfo videoEditedInfo, boolean z, int i2, boolean z2) {
        SendingMediaInfo sendingMediaInfo = new SendingMediaInfo();
        sendingMediaInfo.path = str;
        sendingMediaInfo.thumbPath = str2;
        sendingMediaInfo.uri = uri;
        if (charSequence != null) {
            sendingMediaInfo.caption = charSequence.toString();
        }
        sendingMediaInfo.entities = arrayList;
        sendingMediaInfo.ttl = i;
        if (arrayList2 != null) {
            sendingMediaInfo.masks = new ArrayList<>(arrayList2);
        }
        sendingMediaInfo.videoEditedInfo = videoEditedInfo;
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(sendingMediaInfo);
        prepareSendingMedia(accountInstance, arrayList3, j, messageObject, messageObject2, inputContentInfoCompat, z2, false, messageObject3, z, i2);
    }

    public static void prepareSendingBotContextResult(AccountInstance accountInstance, TLRPC$BotInlineResult tLRPC$BotInlineResult, HashMap<String, String> hashMap, long j, MessageObject messageObject, MessageObject messageObject2, boolean z, int i) {
        if (tLRPC$BotInlineResult == null) {
            return;
        }
        TLRPC$BotInlineMessage tLRPC$BotInlineMessage = tLRPC$BotInlineResult.send_message;
        if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaAuto) {
            new Thread(new SendMessagesHelper$$ExternalSyntheticLambda4(j, tLRPC$BotInlineResult, accountInstance, hashMap, messageObject, messageObject2, z, i)).run();
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageText) {
            TLRPC$TL_webPagePending tLRPC$TL_webPagePending = null;
            if (DialogObject.isEncryptedDialog(j)) {
                int i2 = 0;
                while (true) {
                    if (i2 >= tLRPC$BotInlineResult.send_message.entities.size()) {
                        break;
                    }
                    TLRPC$MessageEntity tLRPC$MessageEntity = tLRPC$BotInlineResult.send_message.entities.get(i2);
                    if (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityUrl) {
                        tLRPC$TL_webPagePending = new TLRPC$TL_webPagePending();
                        String str = tLRPC$BotInlineResult.send_message.message;
                        int i3 = tLRPC$MessageEntity.offset;
                        tLRPC$TL_webPagePending.url = str.substring(i3, tLRPC$MessageEntity.length + i3);
                        break;
                    }
                    i2++;
                }
            }
            TLRPC$TL_webPagePending tLRPC$TL_webPagePending2 = tLRPC$TL_webPagePending;
            SendMessagesHelper sendMessagesHelper = accountInstance.getSendMessagesHelper();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage2 = tLRPC$BotInlineResult.send_message;
            sendMessagesHelper.sendMessage(tLRPC$BotInlineMessage2.message, j, messageObject, messageObject2, tLRPC$TL_webPagePending2, !tLRPC$BotInlineMessage2.no_webpage, tLRPC$BotInlineMessage2.entities, tLRPC$BotInlineMessage2.reply_markup, hashMap, z, i, null);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaVenue) {
            TLRPC$TL_messageMediaVenue tLRPC$TL_messageMediaVenue = new TLRPC$TL_messageMediaVenue();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage3 = tLRPC$BotInlineResult.send_message;
            tLRPC$TL_messageMediaVenue.geo = tLRPC$BotInlineMessage3.geo;
            tLRPC$TL_messageMediaVenue.address = tLRPC$BotInlineMessage3.address;
            tLRPC$TL_messageMediaVenue.title = tLRPC$BotInlineMessage3.title;
            tLRPC$TL_messageMediaVenue.provider = tLRPC$BotInlineMessage3.provider;
            tLRPC$TL_messageMediaVenue.venue_id = tLRPC$BotInlineMessage3.venue_id;
            String str2 = tLRPC$BotInlineMessage3.venue_type;
            tLRPC$TL_messageMediaVenue.venue_id = str2;
            tLRPC$TL_messageMediaVenue.venue_type = str2;
            if (str2 == null) {
                tLRPC$TL_messageMediaVenue.venue_type = "";
            }
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_messageMediaVenue, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaGeo) {
            if (tLRPC$BotInlineMessage.period != 0 || tLRPC$BotInlineMessage.proximity_notification_radius != 0) {
                TLRPC$TL_messageMediaGeoLive tLRPC$TL_messageMediaGeoLive = new TLRPC$TL_messageMediaGeoLive();
                TLRPC$BotInlineMessage tLRPC$BotInlineMessage4 = tLRPC$BotInlineResult.send_message;
                int i4 = tLRPC$BotInlineMessage4.period;
                if (i4 == 0) {
                    i4 = 900;
                }
                tLRPC$TL_messageMediaGeoLive.period = i4;
                tLRPC$TL_messageMediaGeoLive.geo = tLRPC$BotInlineMessage4.geo;
                tLRPC$TL_messageMediaGeoLive.heading = tLRPC$BotInlineMessage4.heading;
                tLRPC$TL_messageMediaGeoLive.proximity_notification_radius = tLRPC$BotInlineMessage4.proximity_notification_radius;
                accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_messageMediaGeoLive, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
                return;
            }
            TLRPC$TL_messageMediaGeo tLRPC$TL_messageMediaGeo = new TLRPC$TL_messageMediaGeo();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage5 = tLRPC$BotInlineResult.send_message;
            tLRPC$TL_messageMediaGeo.geo = tLRPC$BotInlineMessage5.geo;
            tLRPC$TL_messageMediaGeo.heading = tLRPC$BotInlineMessage5.heading;
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_messageMediaGeo, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaContact) {
            TLRPC$TL_user tLRPC$TL_user = new TLRPC$TL_user();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage6 = tLRPC$BotInlineResult.send_message;
            tLRPC$TL_user.phone = tLRPC$BotInlineMessage6.phone_number;
            tLRPC$TL_user.first_name = tLRPC$BotInlineMessage6.first_name;
            tLRPC$TL_user.last_name = tLRPC$BotInlineMessage6.last_name;
            TLRPC$TL_restrictionReason tLRPC$TL_restrictionReason = new TLRPC$TL_restrictionReason();
            tLRPC$TL_restrictionReason.text = tLRPC$BotInlineResult.send_message.vcard;
            tLRPC$TL_restrictionReason.platform = "";
            tLRPC$TL_restrictionReason.reason = "";
            tLRPC$TL_user.restriction_reason.add(tLRPC$TL_restrictionReason);
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_user, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
        } else if (!(tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaInvoice) || DialogObject.isEncryptedDialog(j)) {
        } else {
            TLRPC$TL_botInlineMessageMediaInvoice tLRPC$TL_botInlineMessageMediaInvoice = (TLRPC$TL_botInlineMessageMediaInvoice) tLRPC$BotInlineResult.send_message;
            TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice = new TLRPC$TL_messageMediaInvoice();
            tLRPC$TL_messageMediaInvoice.shipping_address_requested = tLRPC$TL_botInlineMessageMediaInvoice.shipping_address_requested;
            tLRPC$TL_messageMediaInvoice.test = tLRPC$TL_botInlineMessageMediaInvoice.test;
            tLRPC$TL_messageMediaInvoice.title = tLRPC$TL_botInlineMessageMediaInvoice.title;
            tLRPC$TL_messageMediaInvoice.description = tLRPC$TL_botInlineMessageMediaInvoice.description;
            TLRPC$WebDocument tLRPC$WebDocument = tLRPC$TL_botInlineMessageMediaInvoice.photo;
            if (tLRPC$WebDocument != null) {
                tLRPC$TL_messageMediaInvoice.photo = tLRPC$WebDocument;
                tLRPC$TL_messageMediaInvoice.flags |= 1;
            }
            tLRPC$TL_messageMediaInvoice.currency = tLRPC$TL_botInlineMessageMediaInvoice.currency;
            tLRPC$TL_messageMediaInvoice.total_amount = tLRPC$TL_botInlineMessageMediaInvoice.total_amount;
            tLRPC$TL_messageMediaInvoice.start_param = "";
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_messageMediaInvoice, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
        }
    }

    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Multi-variable type inference failed */
    public static /* synthetic */ void lambda$prepareSendingBotContextResult$80(long j, TLRPC$BotInlineResult tLRPC$BotInlineResult, AccountInstance accountInstance, HashMap hashMap, MessageObject messageObject, MessageObject messageObject2, boolean z, int i) {
        TLRPC$TL_game tLRPC$TL_game;
        TLRPC$TL_photo tLRPC$TL_photo;
        TLRPC$TL_photo tLRPC$TL_photo2;
        TLRPC$TL_document tLRPC$TL_document;
        TLRPC$WebDocument tLRPC$WebDocument;
        String str;
        String str2;
        char c;
        char c2;
        String str3;
        Object obj;
        Bitmap bitmap;
        String str4;
        int lastIndexOf;
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        if (!"game".equals(tLRPC$BotInlineResult.type)) {
            if (tLRPC$BotInlineResult instanceof TLRPC$TL_botInlineMediaResult) {
                TLRPC$Document tLRPC$Document = tLRPC$BotInlineResult.document;
                if (tLRPC$Document != null) {
                    if (tLRPC$Document instanceof TLRPC$TL_document) {
                        tLRPC$TL_document = (TLRPC$TL_document) tLRPC$Document;
                        tLRPC$TL_photo2 = null;
                    }
                } else {
                    TLRPC$Photo tLRPC$Photo = tLRPC$BotInlineResult.photo;
                    if (tLRPC$Photo != null && (tLRPC$Photo instanceof TLRPC$TL_photo)) {
                        tLRPC$TL_photo = (TLRPC$TL_photo) tLRPC$Photo;
                        tLRPC$TL_document = null;
                        tLRPC$TL_photo2 = null;
                        tLRPC$TL_game = 0;
                    }
                }
                tLRPC$TL_document = null;
                tLRPC$TL_photo2 = null;
            } else {
                TLRPC$WebDocument tLRPC$WebDocument2 = tLRPC$BotInlineResult.content;
                if (tLRPC$WebDocument2 != null) {
                    String httpUrlExtension = ImageLoader.getHttpUrlExtension(tLRPC$WebDocument2.url, null);
                    if (TextUtils.isEmpty(httpUrlExtension)) {
                        str = FileLoader.getExtensionByMimeType(tLRPC$BotInlineResult.content.mime_type);
                    } else {
                        str = "." + httpUrlExtension;
                    }
                    File file = new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult.content.url) + str);
                    if (file.exists()) {
                        str2 = file.getAbsolutePath();
                    } else {
                        str2 = tLRPC$BotInlineResult.content.url;
                    }
                    String str5 = str2;
                    String str6 = tLRPC$BotInlineResult.type;
                    str6.hashCode();
                    switch (str6.hashCode()) {
                        case -1890252483:
                            if (str6.equals("sticker")) {
                                c = 0;
                                break;
                            }
                            c = 65535;
                            break;
                        case 102340:
                            if (str6.equals("gif")) {
                                c = 1;
                                break;
                            }
                            c = 65535;
                            break;
                        case 3143036:
                            if (str6.equals("file")) {
                                c = 2;
                                break;
                            }
                            c = 65535;
                            break;
                        case 93166550:
                            if (str6.equals("audio")) {
                                c = 3;
                                break;
                            }
                            c = 65535;
                            break;
                        case 106642994:
                            if (str6.equals("photo")) {
                                c = 4;
                                break;
                            }
                            c = 65535;
                            break;
                        case 112202875:
                            if (str6.equals("video")) {
                                c = 5;
                                break;
                            }
                            c = 65535;
                            break;
                        case 112386354:
                            if (str6.equals("voice")) {
                                c = 6;
                                break;
                            }
                            c = 65535;
                            break;
                        default:
                            c = 65535;
                            break;
                    }
                    switch (c) {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 5:
                        case 6:
                            TLRPC$TL_document tLRPC$TL_document2 = new TLRPC$TL_document();
                            tLRPC$TL_document2.id = 0L;
                            tLRPC$TL_document2.size = 0L;
                            tLRPC$TL_document2.dc_id = 0;
                            tLRPC$TL_document2.mime_type = tLRPC$BotInlineResult.content.mime_type;
                            tLRPC$TL_document2.file_reference = new byte[0];
                            tLRPC$TL_document2.date = accountInstance.getConnectionsManager().getCurrentTime();
                            TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                            tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeFilename);
                            String str7 = tLRPC$BotInlineResult.type;
                            str7.hashCode();
                            switch (str7.hashCode()) {
                                case -1890252483:
                                    str3 = "file";
                                    if (str7.equals("sticker")) {
                                        c2 = 0;
                                        break;
                                    }
                                    c2 = 65535;
                                    break;
                                case 102340:
                                    str3 = "file";
                                    if (str7.equals("gif")) {
                                        c2 = 1;
                                        break;
                                    }
                                    c2 = 65535;
                                    break;
                                case 3143036:
                                    str3 = "file";
                                    if (str7.equals(str3)) {
                                        c2 = 2;
                                        break;
                                    }
                                    c2 = 65535;
                                    break;
                                case 93166550:
                                    if (str7.equals("audio")) {
                                        str3 = "file";
                                        c2 = 3;
                                        break;
                                    }
                                    str3 = "file";
                                    c2 = 65535;
                                    break;
                                case 112202875:
                                    if (str7.equals("video")) {
                                        str3 = "file";
                                        c2 = 4;
                                        break;
                                    }
                                    str3 = "file";
                                    c2 = 65535;
                                    break;
                                case 112386354:
                                    if (str7.equals("voice")) {
                                        str3 = "file";
                                        c2 = 5;
                                        break;
                                    }
                                    str3 = "file";
                                    c2 = 65535;
                                    break;
                                default:
                                    str3 = "file";
                                    c2 = 65535;
                                    break;
                            }
                            int i2 = 55;
                            switch (c2) {
                                case 0:
                                    TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                    tLRPC$TL_documentAttributeSticker.alt = "";
                                    tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                    tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeSticker);
                                    TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize = new TLRPC$TL_documentAttributeImageSize();
                                    int[] inlineResultWidthAndHeight = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                    tLRPC$TL_documentAttributeImageSize.w = inlineResultWidthAndHeight[0];
                                    tLRPC$TL_documentAttributeImageSize.h = inlineResultWidthAndHeight[1];
                                    tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeImageSize);
                                    tLRPC$TL_documentAttributeFilename.file_name = "sticker.webp";
                                    try {
                                        if (tLRPC$BotInlineResult.thumb != null) {
                                            Bitmap loadBitmap = ImageLoader.loadBitmap(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult.thumb.url) + "." + ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult.thumb.url, "webp")).getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            if (loadBitmap != null) {
                                                TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, false);
                                                if (scaleAndSaveImage != null) {
                                                    tLRPC$TL_document2.thumbs.add(scaleAndSaveImage);
                                                    tLRPC$TL_document2.flags |= 1;
                                                }
                                                loadBitmap.recycle();
                                                break;
                                            }
                                        }
                                    } catch (Throwable th) {
                                        FileLog.e(th);
                                        break;
                                    }
                                    break;
                                case 1:
                                    tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                                    if (str5.endsWith("mp4")) {
                                        tLRPC$TL_document2.mime_type = "video/mp4";
                                        tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                    } else {
                                        tLRPC$TL_document2.mime_type = "image/gif";
                                    }
                                    int i3 = isEncryptedDialog ? 90 : 320;
                                    try {
                                        if (str5.endsWith("mp4")) {
                                            bitmap = createVideoThumbnail(str5, 1);
                                            if (bitmap == null) {
                                                TLRPC$WebDocument tLRPC$WebDocument3 = tLRPC$BotInlineResult.thumb;
                                                if ((tLRPC$WebDocument3 instanceof TLRPC$TL_webDocument) && "video/mp4".equals(tLRPC$WebDocument3.mime_type)) {
                                                    String httpUrlExtension2 = ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult.thumb.url, null);
                                                    if (TextUtils.isEmpty(httpUrlExtension2)) {
                                                        str4 = FileLoader.getExtensionByMimeType(tLRPC$BotInlineResult.thumb.mime_type);
                                                    } else {
                                                        str4 = "." + httpUrlExtension2;
                                                    }
                                                    bitmap = createVideoThumbnail(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult.thumb.url) + str4).getAbsolutePath(), 1);
                                                }
                                            }
                                        } else {
                                            float f = i3;
                                            bitmap = ImageLoader.loadBitmap(str5, null, f, f, true);
                                        }
                                        if (bitmap != null) {
                                            float f2 = i3;
                                            if (i3 > 90) {
                                                i2 = 80;
                                            }
                                            TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(bitmap, f2, f2, i2, false);
                                            if (scaleAndSaveImage2 != null) {
                                                tLRPC$TL_document2.thumbs.add(scaleAndSaveImage2);
                                                tLRPC$TL_document2.flags |= 1;
                                            }
                                            bitmap.recycle();
                                            break;
                                        }
                                    } catch (Throwable th2) {
                                        FileLog.e(th2);
                                        break;
                                    }
                                    break;
                                case 2:
                                    if (tLRPC$BotInlineResult.content.mime_type.lastIndexOf(47) != -1) {
                                        tLRPC$TL_documentAttributeFilename.file_name = "file." + tLRPC$BotInlineResult.content.mime_type.substring(lastIndexOf + 1);
                                        break;
                                    } else {
                                        tLRPC$TL_documentAttributeFilename.file_name = str3;
                                        break;
                                    }
                                case 3:
                                    TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio = new TLRPC$TL_documentAttributeAudio();
                                    tLRPC$TL_documentAttributeAudio.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                    tLRPC$TL_documentAttributeAudio.title = tLRPC$BotInlineResult.title;
                                    int i4 = tLRPC$TL_documentAttributeAudio.flags | 1;
                                    tLRPC$TL_documentAttributeAudio.flags = i4;
                                    String str8 = tLRPC$BotInlineResult.description;
                                    if (str8 != null) {
                                        tLRPC$TL_documentAttributeAudio.performer = str8;
                                        tLRPC$TL_documentAttributeAudio.flags = i4 | 2;
                                    }
                                    tLRPC$TL_documentAttributeFilename.file_name = "audio.mp3";
                                    tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeAudio);
                                    break;
                                case 4:
                                    tLRPC$TL_documentAttributeFilename.file_name = "video.mp4";
                                    TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                    int[] inlineResultWidthAndHeight2 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                    tLRPC$TL_documentAttributeVideo.w = inlineResultWidthAndHeight2[0];
                                    tLRPC$TL_documentAttributeVideo.h = inlineResultWidthAndHeight2[1];
                                    tLRPC$TL_documentAttributeVideo.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                    tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                    tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeVideo);
                                    try {
                                        if (tLRPC$BotInlineResult.thumb != null) {
                                            Bitmap loadBitmap2 = ImageLoader.loadBitmap(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult.thumb.url) + "." + ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult.thumb.url, "jpg")).getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            if (loadBitmap2 != null) {
                                                TLRPC$PhotoSize scaleAndSaveImage3 = ImageLoader.scaleAndSaveImage(loadBitmap2, 90.0f, 90.0f, 55, false);
                                                if (scaleAndSaveImage3 != null) {
                                                    tLRPC$TL_document2.thumbs.add(scaleAndSaveImage3);
                                                    tLRPC$TL_document2.flags |= 1;
                                                }
                                                loadBitmap2.recycle();
                                                break;
                                            }
                                        }
                                    } catch (Throwable th3) {
                                        FileLog.e(th3);
                                        break;
                                    }
                                    break;
                                case 5:
                                    TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio2 = new TLRPC$TL_documentAttributeAudio();
                                    tLRPC$TL_documentAttributeAudio2.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                    tLRPC$TL_documentAttributeAudio2.voice = true;
                                    tLRPC$TL_documentAttributeFilename.file_name = "audio.ogg";
                                    tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeAudio2);
                                    break;
                            }
                            if (tLRPC$TL_documentAttributeFilename.file_name == null) {
                                tLRPC$TL_documentAttributeFilename.file_name = str3;
                            }
                            if (tLRPC$TL_document2.mime_type == null) {
                                tLRPC$TL_document2.mime_type = "application/octet-stream";
                            }
                            if (tLRPC$TL_document2.thumbs.isEmpty()) {
                                TLRPC$TL_photoSize tLRPC$TL_photoSize = new TLRPC$TL_photoSize();
                                int[] inlineResultWidthAndHeight3 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                tLRPC$TL_photoSize.w = inlineResultWidthAndHeight3[0];
                                tLRPC$TL_photoSize.h = inlineResultWidthAndHeight3[1];
                                tLRPC$TL_photoSize.size = 0;
                                tLRPC$TL_photoSize.location = new TLRPC$TL_fileLocationUnavailable();
                                tLRPC$TL_photoSize.type = "x";
                                tLRPC$TL_document2.thumbs.add(tLRPC$TL_photoSize);
                                tLRPC$TL_document2.flags |= 1;
                            }
                            tLRPC$TL_photo = null;
                            obj = null;
                            tLRPC$TL_document = tLRPC$TL_document2;
                            break;
                        case 4:
                            TLRPC$TL_photo generatePhotoSizes = file.exists() ? accountInstance.getSendMessagesHelper().generatePhotoSizes(str5, null) : null;
                            if (generatePhotoSizes == null) {
                                generatePhotoSizes = new TLRPC$TL_photo();
                                generatePhotoSizes.date = accountInstance.getConnectionsManager().getCurrentTime();
                                generatePhotoSizes.file_reference = new byte[0];
                                TLRPC$TL_photoSize tLRPC$TL_photoSize2 = new TLRPC$TL_photoSize();
                                int[] inlineResultWidthAndHeight4 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                tLRPC$TL_photoSize2.w = inlineResultWidthAndHeight4[0];
                                tLRPC$TL_photoSize2.h = inlineResultWidthAndHeight4[1];
                                tLRPC$TL_photoSize2.size = 1;
                                tLRPC$TL_photoSize2.location = new TLRPC$TL_fileLocationUnavailable();
                                tLRPC$TL_photoSize2.type = "x";
                                generatePhotoSizes.sizes.add(tLRPC$TL_photoSize2);
                            }
                            tLRPC$TL_photo = generatePhotoSizes;
                            tLRPC$TL_document = null;
                            obj = null;
                            break;
                        default:
                            tLRPC$TL_document = null;
                            tLRPC$TL_photo = null;
                            obj = null;
                            break;
                    }
                    tLRPC$TL_photo2 = str5;
                    tLRPC$TL_game = obj;
                }
                tLRPC$TL_document = null;
                tLRPC$TL_photo2 = null;
            }
            tLRPC$TL_photo = tLRPC$TL_photo2;
            tLRPC$TL_game = tLRPC$TL_photo;
        } else if (isEncryptedDialog) {
            return;
        } else {
            TLRPC$TL_game tLRPC$TL_game2 = new TLRPC$TL_game();
            tLRPC$TL_game2.title = tLRPC$BotInlineResult.title;
            tLRPC$TL_game2.description = tLRPC$BotInlineResult.description;
            tLRPC$TL_game2.short_name = tLRPC$BotInlineResult.id;
            TLRPC$Photo tLRPC$Photo2 = tLRPC$BotInlineResult.photo;
            tLRPC$TL_game2.photo = tLRPC$Photo2;
            if (tLRPC$Photo2 == null) {
                tLRPC$TL_game2.photo = new TLRPC$TL_photoEmpty();
            }
            TLRPC$Document tLRPC$Document2 = tLRPC$BotInlineResult.document;
            if (tLRPC$Document2 instanceof TLRPC$TL_document) {
                tLRPC$TL_game2.document = tLRPC$Document2;
                tLRPC$TL_game2.flags |= 1;
            }
            tLRPC$TL_game = tLRPC$TL_game2;
            tLRPC$TL_document = null;
            tLRPC$TL_photo2 = null;
            tLRPC$TL_photo = null;
        }
        if (hashMap != null && (tLRPC$WebDocument = tLRPC$BotInlineResult.content) != null) {
            hashMap.put("originalPath", tLRPC$WebDocument.url);
        }
        Bitmap[] bitmapArr = new Bitmap[1];
        String[] strArr = new String[1];
        if (MessageObject.isGifDocument(tLRPC$TL_document)) {
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_document.thumbs, 320);
            File pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document);
            if (!pathToAttach.exists()) {
                pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document, true);
            }
            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, pathToAttach.getAbsolutePath(), null, 0L);
            strArr[0] = getKeyForPhotoSize(accountInstance, closestPhotoSizeWithSize, bitmapArr, true, true);
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda74(tLRPC$TL_document, bitmapArr, strArr, accountInstance, tLRPC$TL_photo2, j, messageObject, messageObject2, tLRPC$BotInlineResult, hashMap, z, i, tLRPC$TL_photo, tLRPC$TL_game));
    }

    public static /* synthetic */ void lambda$prepareSendingBotContextResult$79(TLRPC$TL_document tLRPC$TL_document, Bitmap[] bitmapArr, String[] strArr, AccountInstance accountInstance, String str, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$BotInlineResult tLRPC$BotInlineResult, HashMap hashMap, boolean z, int i, TLRPC$TL_photo tLRPC$TL_photo, TLRPC$TL_game tLRPC$TL_game) {
        if (tLRPC$TL_document != null) {
            if (bitmapArr[0] != null && strArr[0] != null) {
                ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
            }
            SendMessagesHelper sendMessagesHelper = accountInstance.getSendMessagesHelper();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage = tLRPC$BotInlineResult.send_message;
            sendMessagesHelper.sendMessage(tLRPC$TL_document, null, str, j, messageObject, messageObject2, tLRPC$BotInlineMessage.message, tLRPC$BotInlineMessage.entities, tLRPC$BotInlineMessage.reply_markup, hashMap, z, i, 0, tLRPC$BotInlineResult, null);
        } else if (tLRPC$TL_photo == null) {
            if (tLRPC$TL_game == null) {
                return;
            }
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_game, j, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
        } else {
            SendMessagesHelper sendMessagesHelper2 = accountInstance.getSendMessagesHelper();
            TLRPC$WebDocument tLRPC$WebDocument = tLRPC$BotInlineResult.content;
            String str2 = tLRPC$WebDocument != null ? tLRPC$WebDocument.url : null;
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage2 = tLRPC$BotInlineResult.send_message;
            sendMessagesHelper2.sendMessage(tLRPC$TL_photo, str2, j, messageObject, messageObject2, tLRPC$BotInlineMessage2.message, tLRPC$BotInlineMessage2.entities, tLRPC$BotInlineMessage2.reply_markup, hashMap, z, i, 0, tLRPC$BotInlineResult);
        }
    }

    private static String getTrimmedString(String str) {
        String trim = str.trim();
        if (trim.length() == 0) {
            return trim;
        }
        while (str.startsWith("\n")) {
            str = str.substring(1);
        }
        while (str.endsWith("\n")) {
            str = str.substring(0, str.length() - 1);
        }
        return str;
    }

    public static /* synthetic */ void lambda$prepareSendingText$82(String str, AccountInstance accountInstance, long j, boolean z, int i) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda9(str, accountInstance, j, z, i));
    }

    public static /* synthetic */ void lambda$prepareSendingText$83(String str, AccountInstance accountInstance, long j, boolean z, int i) {
        Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda8(str, accountInstance, j, z, i));
    }

    public static void prepareSendingText(AccountInstance accountInstance, String str, long j, boolean z, int i) {
        accountInstance.getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda7(str, accountInstance, j, z, i));
    }

    public static /* synthetic */ void lambda$prepareSendingText$81(String str, AccountInstance accountInstance, long j, boolean z, int i) {
        String trimmedString = getTrimmedString(str);
        if (trimmedString.length() != 0) {
            int ceil = (int) Math.ceil(trimmedString.length() / 4096.0f);
            int i2 = 0;
            while (i2 < ceil) {
                int i3 = i2 * 4096;
                i2++;
                accountInstance.getSendMessagesHelper().sendMessage(trimmedString.substring(i3, Math.min(i2 * 4096, trimmedString.length())), j, null, null, null, true, null, null, null, z, i, null);
            }
        }
    }

    public static void ensureMediaThumbExists(AccountInstance accountInstance, boolean z, TLObject tLObject, String str, Uri uri, long j) {
        TLRPC$PhotoSize scaleAndSaveImage;
        TLRPC$PhotoSize scaleAndSaveImage2;
        if (tLObject instanceof TLRPC$TL_photo) {
            TLRPC$TL_photo tLRPC$TL_photo = (TLRPC$TL_photo) tLObject;
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo.sizes, 90);
            boolean exists = ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoPathSize)) ? true : FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize, true).exists();
            TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo.sizes, AndroidUtilities.getPhotoSize());
            boolean exists2 = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize2, false).exists();
            if (exists && exists2) {
                return;
            }
            Bitmap loadBitmap = ImageLoader.loadBitmap(str, uri, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true);
            if (loadBitmap == null) {
                loadBitmap = ImageLoader.loadBitmap(str, uri, 800.0f, 800.0f, true);
            }
            Bitmap bitmap = loadBitmap;
            if (!exists2 && (scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize2, bitmap, Bitmap.CompressFormat.JPEG, true, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), 80, false, 101, 101, false)) != closestPhotoSizeWithSize2) {
                tLRPC$TL_photo.sizes.add(0, scaleAndSaveImage2);
            }
            if (!exists && (scaleAndSaveImage = ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize, bitmap, 90.0f, 90.0f, 55, true, false)) != closestPhotoSizeWithSize) {
                tLRPC$TL_photo.sizes.add(0, scaleAndSaveImage);
            }
            if (bitmap == null) {
                return;
            }
            bitmap.recycle();
        } else if (!(tLObject instanceof TLRPC$TL_document)) {
        } else {
            TLRPC$TL_document tLRPC$TL_document = (TLRPC$TL_document) tLObject;
            if ((!MessageObject.isVideoDocument(tLRPC$TL_document) && !MessageObject.isNewGifDocument(tLRPC$TL_document)) || !MessageObject.isDocumentHasThumb(tLRPC$TL_document)) {
                return;
            }
            int i = 320;
            TLRPC$PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_document.thumbs, 320);
            if ((closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoStrippedSize) || (closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoPathSize) || FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize3, true).exists()) {
                return;
            }
            Bitmap createVideoThumbnailAtTime = createVideoThumbnailAtTime(str, j);
            Bitmap createVideoThumbnail = createVideoThumbnailAtTime == null ? createVideoThumbnail(str, 1) : createVideoThumbnailAtTime;
            if (z) {
                i = 90;
            }
            float f = i;
            tLRPC$TL_document.thumbs.set(0, ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize3, createVideoThumbnail, f, f, i > 90 ? 80 : 55, false, true));
        }
    }

    public static String getKeyForPhotoSize(AccountInstance accountInstance, TLRPC$PhotoSize tLRPC$PhotoSize, Bitmap[] bitmapArr, boolean z, boolean z2) {
        if (tLRPC$PhotoSize == null || tLRPC$PhotoSize.location == null) {
            return null;
        }
        Point messageSize = ChatMessageCell.getMessageSize(tLRPC$PhotoSize.w, tLRPC$PhotoSize.h);
        if (bitmapArr != null) {
            try {
                BitmapFactory.Options options = new BitmapFactory.Options();
                options.inJustDecodeBounds = true;
                File pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$PhotoSize, z2);
                FileInputStream fileInputStream = new FileInputStream(pathToAttach);
                BitmapFactory.decodeStream(fileInputStream, null, options);
                fileInputStream.close();
                float max = Math.max(options.outWidth / messageSize.x, options.outHeight / messageSize.y);
                if (max < 1.0f) {
                    max = 1.0f;
                }
                options.inJustDecodeBounds = false;
                options.inSampleSize = (int) max;
                options.inPreferredConfig = Bitmap.Config.RGB_565;
                if (Build.VERSION.SDK_INT >= 21) {
                    FileInputStream fileInputStream2 = new FileInputStream(pathToAttach);
                    bitmapArr[0] = BitmapFactory.decodeStream(fileInputStream2, null, options);
                    fileInputStream2.close();
                }
            } catch (Throwable unused) {
            }
        }
        return String.format(Locale.US, z ? "%d_%d@%d_%d_b" : "%d_%d@%d_%d", Long.valueOf(tLRPC$PhotoSize.location.volume_id), Integer.valueOf(tLRPC$PhotoSize.location.local_id), Integer.valueOf((int) (messageSize.x / AndroidUtilities.density)), Integer.valueOf((int) (messageSize.y / AndroidUtilities.density)));
    }

    public static boolean shouldSendWebPAsSticker(String str, Uri uri) {
        BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = true;
        if (str != null) {
            try {
                RandomAccessFile randomAccessFile = new RandomAccessFile(str, "r");
                MappedByteBuffer map = randomAccessFile.getChannel().map(FileChannel.MapMode.READ_ONLY, 0L, str.length());
                Utilities.loadWebpImage(null, map, map.limit(), options, true);
                randomAccessFile.close();
            } catch (Exception e) {
                FileLog.e(e);
            }
        } else {
            try {
                InputStream openInputStream = ApplicationLoader.applicationContext.getContentResolver().openInputStream(uri);
                BitmapFactory.decodeStream(openInputStream, null, options);
                if (openInputStream != null) {
                    openInputStream.close();
                }
            } catch (Exception unused) {
            }
        }
        return options.outWidth < 800 && options.outHeight < 800;
    }

    public static void prepareSendingMedia(AccountInstance accountInstance, ArrayList<SendingMediaInfo> arrayList, long j, MessageObject messageObject, MessageObject messageObject2, InputContentInfoCompat inputContentInfoCompat, boolean z, boolean z2, MessageObject messageObject3, boolean z3, int i) {
        boolean z4;
        if (arrayList.isEmpty()) {
            return;
        }
        int size = arrayList.size();
        int i2 = 0;
        while (true) {
            if (i2 >= size) {
                z4 = z2;
                break;
            } else if (arrayList.get(i2).ttl > 0) {
                z4 = false;
                break;
            } else {
                i2++;
            }
        }
        mediaSendQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda11(arrayList, j, z, z4, accountInstance, messageObject3, messageObject, messageObject2, z3, i, inputContentInfoCompat));
    }

    /* JADX WARN: Code restructure failed: missing block: B:242:0x062e, code lost:
        if (r5 != null) goto L596;
     */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x005d, code lost:
        if (r4 != false) goto L27;
     */
    /* JADX WARN: Code restructure failed: missing block: B:266:0x066f, code lost:
        if (r3.endsWith(r8) != false) goto L276;
     */
    /* JADX WARN: Code restructure failed: missing block: B:383:0x0900, code lost:
        if (r11 == (r15 - 1)) goto L385;
     */
    /* JADX WARN: Code restructure failed: missing block: B:536:0x0cc6, code lost:
        if (r5 == (r11 - 1)) goto L538;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:134:0x02db A[Catch: Exception -> 0x02cc, TryCatch #1 {Exception -> 0x02cc, blocks: (B:125:0x02c4, B:132:0x02d1, B:134:0x02db, B:135:0x02e6), top: B:592:0x02c4 }] */
    /* JADX WARN: Removed duplicated region for block: B:135:0x02e6 A[Catch: Exception -> 0x02cc, TRY_LEAVE, TryCatch #1 {Exception -> 0x02cc, blocks: (B:125:0x02c4, B:132:0x02d1, B:134:0x02db, B:135:0x02e6), top: B:592:0x02c4 }] */
    /* JADX WARN: Removed duplicated region for block: B:139:0x02f3 A[Catch: Exception -> 0x0312, TryCatch #4 {Exception -> 0x0312, blocks: (B:137:0x02ed, B:139:0x02f3, B:143:0x02fd, B:145:0x0303, B:146:0x030e), top: B:598:0x02ed }] */
    /* JADX WARN: Removed duplicated region for block: B:152:0x0320  */
    /* JADX WARN: Removed duplicated region for block: B:153:0x034c  */
    /* JADX WARN: Removed duplicated region for block: B:158:0x035d  */
    /* JADX WARN: Removed duplicated region for block: B:161:0x0368  */
    /* JADX WARN: Removed duplicated region for block: B:323:0x07b5  */
    /* JADX WARN: Removed duplicated region for block: B:380:0x08e2  */
    /* JADX WARN: Removed duplicated region for block: B:386:0x090b  */
    /* JADX WARN: Removed duplicated region for block: B:451:0x0b30  */
    /* JADX WARN: Removed duplicated region for block: B:507:0x0c27  */
    /* JADX WARN: Removed duplicated region for block: B:50:0x00ac  */
    /* JADX WARN: Removed duplicated region for block: B:513:0x0c3d  */
    /* JADX WARN: Removed duplicated region for block: B:519:0x0c4f  */
    /* JADX WARN: Removed duplicated region for block: B:51:0x00d0  */
    /* JADX WARN: Removed duplicated region for block: B:528:0x0c98  */
    /* JADX WARN: Removed duplicated region for block: B:530:0x0c9d  */
    /* JADX WARN: Removed duplicated region for block: B:548:0x0d14 A[LOOP:4: B:546:0x0d0c->B:548:0x0d14, LOOP_END] */
    /* JADX WARN: Removed duplicated region for block: B:590:0x0629 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:630:0x0c4c A[SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:83:0x0161  */
    /* JADX WARN: Removed duplicated region for block: B:84:0x0166  */
    /* JADX WARN: Type inference failed for: r6v27 */
    /* JADX WARN: Type inference failed for: r6v28 */
    /* JADX WARN: Type inference failed for: r8v0 */
    /* JADX WARN: Type inference failed for: r8v32, types: [boolean] */
    /* JADX WARN: Type inference failed for: r8v33 */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingMedia$89(ArrayList arrayList, long j, boolean z, boolean z2, AccountInstance accountInstance, MessageObject messageObject, MessageObject messageObject2, MessageObject messageObject3, boolean z3, int i, InputContentInfoCompat inputContentInfoCompat) {
        String str;
        int i2;
        HashMap hashMap;
        int i3;
        long j2;
        int i4;
        int i5;
        String str2;
        long j3;
        boolean z4;
        HashMap hashMap2;
        int i6;
        String str3;
        String str4;
        AccountInstance accountInstance2;
        int i7;
        long j4;
        boolean z5;
        String str5;
        String str6;
        ArrayList arrayList2;
        String str7;
        HashMap hashMap3;
        ArrayList arrayList3;
        ArrayList arrayList4;
        ArrayList arrayList5;
        int i8;
        VideoEditedInfo videoEditedInfo;
        SendingMediaInfo sendingMediaInfo;
        ArrayList arrayList6;
        boolean z6;
        String str8;
        long j5;
        boolean z7;
        String str9;
        boolean z8;
        Object obj;
        File file;
        long j6;
        TLRPC$TL_document tLRPC$TL_document;
        String str10;
        String str11;
        boolean z9;
        TLRPC$TL_document tLRPC$TL_document2;
        String str12;
        Bitmap bitmap;
        HashMap hashMap4;
        int i9;
        long j7;
        int i10;
        int i11;
        ArrayList<TLRPC$InputDocument> arrayList7;
        int i12;
        int size;
        int i13;
        boolean z10;
        String str13;
        int i14;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo;
        int i15;
        int i16;
        Object obj2;
        boolean z11;
        int i17;
        MediaController.SearchImage searchImage;
        String str14;
        String str15;
        String str16;
        String str17;
        String str18;
        boolean z12;
        String str19;
        HashMap hashMap5;
        String str20;
        String str21;
        String str22;
        ArrayList arrayList8;
        String str23;
        Object obj3;
        boolean z13;
        TLRPC$TL_photo tLRPC$TL_photo;
        String str24;
        int i18;
        int i19;
        boolean z14;
        int i20;
        long j8;
        String str25;
        ArrayList arrayList9;
        int i21;
        long j9;
        boolean z15;
        String str26;
        Object obj4;
        TLRPC$TL_photo tLRPC$TL_photo2;
        Object obj5;
        TLRPC$TL_photo tLRPC$TL_photo3;
        String str27;
        Object obj6;
        ArrayList arrayList10;
        ArrayList arrayList11;
        Uri uri;
        FileOutputStream fileOutputStream;
        InputStream inputStream;
        Throwable th;
        Uri uri2;
        SendingMediaInfo sendingMediaInfo2;
        boolean z16;
        TLRPC$TL_photo tLRPC$TL_photo4;
        long j10;
        int i22;
        int i23;
        File file2;
        TLRPC$TL_document tLRPC$TL_document3;
        Object obj7;
        TLRPC$TL_document tLRPC$TL_document4;
        String str28;
        File file3;
        int i24;
        Bitmap bitmap2;
        String str29;
        int i25;
        String str30;
        String str31;
        SendingMediaInfo sendingMediaInfo3;
        int i26;
        TLRPC$TL_photo tLRPC$TL_photo5;
        String str32;
        TLRPC$TL_photo tLRPC$TL_photo6;
        String str33;
        String str34;
        TLRPC$TL_photo tLRPC$TL_photo7;
        boolean z17;
        Uri uri3;
        Uri uri4;
        ArrayList arrayList12 = arrayList;
        AccountInstance accountInstance3 = accountInstance;
        long currentTimeMillis = System.currentTimeMillis();
        int size2 = arrayList.size();
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        String str35 = ".webp";
        String str36 = ".gif";
        String str37 = "_";
        Uri uri5 = null;
        ?? r8 = 1;
        if (z || !z2) {
            str = str35;
            i2 = 1;
            hashMap = null;
        } else {
            HashMap hashMap6 = new HashMap();
            int i27 = 0;
            while (i27 < size2) {
                SendingMediaInfo sendingMediaInfo4 = (SendingMediaInfo) arrayList12.get(i27);
                if (sendingMediaInfo4.searchImage == null && !sendingMediaInfo4.isVideo && sendingMediaInfo4.videoEditedInfo == null) {
                    String str38 = sendingMediaInfo4.path;
                    if (str38 != null || (uri4 = sendingMediaInfo4.uri) == null) {
                        str30 = str38;
                    } else {
                        str38 = AndroidUtilities.getPath(uri4);
                        str30 = sendingMediaInfo4.uri.toString();
                    }
                    if (str38 == null || sendingMediaInfo4.ttl > 0) {
                        z17 = false;
                    } else {
                        if (!str38.endsWith(str36)) {
                            z17 = str38.endsWith(str35);
                        } else {
                            z17 = false;
                        }
                        if (arrayList.size() > r8 || (z17 && !shouldSendWebPAsSticker(str38, uri5))) {
                            sendingMediaInfo4.forceImage = r8;
                            if (str38 == null) {
                                File file4 = new File(str38);
                                StringBuilder sb = new StringBuilder();
                                sb.append(str30);
                                i25 = i27;
                                sb.append(file4.length());
                                sb.append(str37);
                                sb.append(file4.lastModified());
                                str31 = sb.toString();
                            } else {
                                i25 = i27;
                                str31 = null;
                            }
                            if (!isEncryptedDialog || sendingMediaInfo4.ttl != 0) {
                                sendingMediaInfo3 = sendingMediaInfo4;
                                str29 = str35;
                                i26 = 1;
                                str32 = null;
                                tLRPC$TL_photo5 = null;
                            } else {
                                Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str31, !isEncryptedDialog ? 0 : 3);
                                if (sentFile == null || !(sentFile[0] instanceof TLRPC$TL_photo)) {
                                    str33 = null;
                                    tLRPC$TL_photo6 = null;
                                } else {
                                    tLRPC$TL_photo6 = (TLRPC$TL_photo) sentFile[0];
                                    str33 = (String) sentFile[r8];
                                }
                                if (tLRPC$TL_photo6 == null && sendingMediaInfo4.uri != null) {
                                    Object[] sentFile2 = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(sendingMediaInfo4.uri), !isEncryptedDialog ? 0 : 3);
                                    if (sentFile2 != null) {
                                        if (sentFile2[0] instanceof TLRPC$TL_photo) {
                                            char c = r8 == true ? 1 : 0;
                                            char c2 = r8 == true ? 1 : 0;
                                            tLRPC$TL_photo7 = (TLRPC$TL_photo) sentFile2[0];
                                            str34 = (String) sentFile2[c];
                                            sendingMediaInfo3 = sendingMediaInfo4;
                                            str29 = str35;
                                            i26 = 1;
                                            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo7, sendingMediaInfo4.path, sendingMediaInfo4.uri, 0L);
                                            tLRPC$TL_photo5 = tLRPC$TL_photo7;
                                            str32 = str34;
                                        }
                                        str34 = str33;
                                        tLRPC$TL_photo7 = tLRPC$TL_photo6;
                                        sendingMediaInfo3 = sendingMediaInfo4;
                                        str29 = str35;
                                        i26 = 1;
                                        ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo7, sendingMediaInfo4.path, sendingMediaInfo4.uri, 0L);
                                        tLRPC$TL_photo5 = tLRPC$TL_photo7;
                                        str32 = str34;
                                    }
                                }
                                str34 = str33;
                                tLRPC$TL_photo7 = tLRPC$TL_photo6;
                                sendingMediaInfo3 = sendingMediaInfo4;
                                str29 = str35;
                                i26 = 1;
                                ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo7, sendingMediaInfo4.path, sendingMediaInfo4.uri, 0L);
                                tLRPC$TL_photo5 = tLRPC$TL_photo7;
                                str32 = str34;
                            }
                            MediaSendPrepareWorker mediaSendPrepareWorker = new MediaSendPrepareWorker(null);
                            SendingMediaInfo sendingMediaInfo5 = sendingMediaInfo3;
                            hashMap6.put(sendingMediaInfo5, mediaSendPrepareWorker);
                            if (tLRPC$TL_photo5 == null) {
                                mediaSendPrepareWorker.parentObject = str32;
                                mediaSendPrepareWorker.photo = tLRPC$TL_photo5;
                            } else {
                                mediaSendPrepareWorker.sync = new CountDownLatch(i26);
                                mediaSendThreadPool.execute(new SendMessagesHelper$$ExternalSyntheticLambda21(mediaSendPrepareWorker, accountInstance3, sendingMediaInfo5, isEncryptedDialog));
                            }
                            i27 = i25 + 1;
                            str35 = str29;
                            r8 = 1;
                            uri5 = null;
                        }
                    }
                    if (!ImageLoader.shouldSendImageAsDocument(sendingMediaInfo4.path, sendingMediaInfo4.uri)) {
                        if (str38 == null && (uri3 = sendingMediaInfo4.uri) != null && (MediaController.isGif(uri3) || (z17 = MediaController.isWebp(sendingMediaInfo4.uri)))) {
                            if (arrayList.size() > r8 || (z17 && !shouldSendWebPAsSticker(null, sendingMediaInfo4.uri))) {
                                sendingMediaInfo4.forceImage = r8;
                            }
                        }
                        if (str38 == null) {
                        }
                        if (!isEncryptedDialog) {
                        }
                        sendingMediaInfo3 = sendingMediaInfo4;
                        str29 = str35;
                        i26 = 1;
                        str32 = null;
                        tLRPC$TL_photo5 = null;
                        MediaSendPrepareWorker mediaSendPrepareWorker2 = new MediaSendPrepareWorker(null);
                        SendingMediaInfo sendingMediaInfo52 = sendingMediaInfo3;
                        hashMap6.put(sendingMediaInfo52, mediaSendPrepareWorker2);
                        if (tLRPC$TL_photo5 == null) {
                        }
                        i27 = i25 + 1;
                        str35 = str29;
                        r8 = 1;
                        uri5 = null;
                    }
                }
                i25 = i27;
                str29 = str35;
                i27 = i25 + 1;
                str35 = str29;
                r8 = 1;
                uri5 = null;
            }
            str = str35;
            i2 = 1;
            hashMap = hashMap6;
        }
        int i28 = 0;
        ArrayList arrayList13 = null;
        ArrayList arrayList14 = null;
        ArrayList arrayList15 = null;
        ArrayList arrayList16 = null;
        int i29 = 0;
        String str39 = null;
        ArrayList arrayList17 = null;
        long j11 = 0;
        long j12 = 0;
        while (i29 < size2) {
            SendingMediaInfo sendingMediaInfo6 = (SendingMediaInfo) arrayList12.get(i29);
            if (!z2 || size2 <= i2 || i28 % 10 != 0) {
                i4 = i28;
                j2 = j12;
            } else {
                j11 = Utilities.random.nextLong();
                j2 = j11;
                i4 = 0;
            }
            MediaController.SearchImage searchImage2 = sendingMediaInfo6.searchImage;
            int i30 = i29;
            ArrayList arrayList18 = arrayList13;
            String str40 = str37;
            HashMap hashMap7 = hashMap;
            ArrayList arrayList19 = arrayList14;
            ArrayList arrayList20 = arrayList15;
            if (searchImage2 != null) {
                ArrayList arrayList21 = arrayList16;
                if (sendingMediaInfo6.videoEditedInfo == null) {
                    String str41 = str36;
                    if (searchImage2.type == 1) {
                        HashMap hashMap8 = new HashMap();
                        TLRPC$Document tLRPC$Document = sendingMediaInfo6.searchImage.document;
                        if (tLRPC$Document instanceof TLRPC$TL_document) {
                            tLRPC$TL_document3 = (TLRPC$TL_document) tLRPC$Document;
                            file2 = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document3, true);
                        } else {
                            file2 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo6.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo6.searchImage.imageUrl, "jpg"));
                            tLRPC$TL_document3 = null;
                        }
                        if (tLRPC$TL_document3 == null) {
                            tLRPC$TL_document4 = new TLRPC$TL_document();
                            tLRPC$TL_document4.id = 0L;
                            tLRPC$TL_document4.file_reference = new byte[0];
                            tLRPC$TL_document4.date = accountInstance.getConnectionsManager().getCurrentTime();
                            TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                            tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                            tLRPC$TL_document4.attributes.add(tLRPC$TL_documentAttributeFilename);
                            tLRPC$TL_document4.size = sendingMediaInfo6.searchImage.size;
                            tLRPC$TL_document4.dc_id = 0;
                            if (!z && file2.toString().endsWith("mp4")) {
                                tLRPC$TL_document4.mime_type = "video/mp4";
                                tLRPC$TL_document4.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                            } else {
                                tLRPC$TL_document4.mime_type = "image/gif";
                            }
                            if (file2.exists()) {
                                file3 = file2;
                            } else {
                                file2 = null;
                                file3 = null;
                            }
                            if (file2 == null) {
                                file2 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo6.searchImage.thumbUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo6.searchImage.thumbUrl, "jpg"));
                                if (!file2.exists()) {
                                    file2 = null;
                                }
                            }
                            if (file2 != null) {
                                if (!isEncryptedDialog) {
                                    try {
                                        if (sendingMediaInfo6.ttl == 0) {
                                            i24 = 320;
                                            if (!file2.getAbsolutePath().endsWith("mp4")) {
                                                bitmap2 = createVideoThumbnail(file2.getAbsolutePath(), 1);
                                                obj7 = null;
                                            } else {
                                                float f = i24;
                                                obj7 = null;
                                                try {
                                                    bitmap2 = ImageLoader.loadBitmap(file2.getAbsolutePath(), null, f, f, true);
                                                } catch (Exception e) {
                                                    e = e;
                                                    FileLog.e(e);
                                                    if (tLRPC$TL_document4.thumbs.isEmpty()) {
                                                    }
                                                    file2 = file3;
                                                    String str42 = sendingMediaInfo6.searchImage.imageUrl;
                                                    if (file2 != null) {
                                                    }
                                                    String str43 = str42;
                                                    str28 = sendingMediaInfo6.searchImage.imageUrl;
                                                    if (str28 != null) {
                                                    }
                                                    i5 = size2;
                                                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda14(messageObject, accountInstance, tLRPC$TL_document4, str43, hashMap8, null, j, messageObject2, messageObject3, sendingMediaInfo6, z3, i));
                                                    i28 = i4;
                                                    j3 = j2;
                                                    arrayList15 = arrayList20;
                                                    arrayList16 = arrayList21;
                                                    i6 = i30;
                                                    arrayList14 = arrayList19;
                                                    hashMap2 = hashMap7;
                                                    str2 = str40;
                                                    arrayList13 = arrayList18;
                                                    str4 = str41;
                                                    str3 = str;
                                                    z4 = isEncryptedDialog;
                                                    accountInstance2 = accountInstance;
                                                    i29 = i6 + 1;
                                                    accountInstance3 = accountInstance2;
                                                    str36 = str4;
                                                    str = str3;
                                                    hashMap = hashMap2;
                                                    isEncryptedDialog = z4;
                                                    j12 = j3;
                                                    str37 = str2;
                                                    size2 = i5;
                                                    i2 = 1;
                                                    arrayList12 = arrayList;
                                                }
                                            }
                                            if (bitmap2 != null) {
                                                float f2 = i24;
                                                TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(bitmap2, f2, f2, i24 > 90 ? 80 : 55, isEncryptedDialog);
                                                if (scaleAndSaveImage != null) {
                                                    tLRPC$TL_document4.thumbs.add(scaleAndSaveImage);
                                                    tLRPC$TL_document4.flags |= 1;
                                                }
                                                bitmap2.recycle();
                                            }
                                        }
                                    } catch (Exception e2) {
                                        e = e2;
                                        obj7 = null;
                                        FileLog.e(e);
                                        if (tLRPC$TL_document4.thumbs.isEmpty()) {
                                        }
                                        file2 = file3;
                                        String str422 = sendingMediaInfo6.searchImage.imageUrl;
                                        if (file2 != null) {
                                        }
                                        String str432 = str422;
                                        str28 = sendingMediaInfo6.searchImage.imageUrl;
                                        if (str28 != null) {
                                        }
                                        i5 = size2;
                                        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda14(messageObject, accountInstance, tLRPC$TL_document4, str432, hashMap8, null, j, messageObject2, messageObject3, sendingMediaInfo6, z3, i));
                                        i28 = i4;
                                        j3 = j2;
                                        arrayList15 = arrayList20;
                                        arrayList16 = arrayList21;
                                        i6 = i30;
                                        arrayList14 = arrayList19;
                                        hashMap2 = hashMap7;
                                        str2 = str40;
                                        arrayList13 = arrayList18;
                                        str4 = str41;
                                        str3 = str;
                                        z4 = isEncryptedDialog;
                                        accountInstance2 = accountInstance;
                                        i29 = i6 + 1;
                                        accountInstance3 = accountInstance2;
                                        str36 = str4;
                                        str = str3;
                                        hashMap = hashMap2;
                                        isEncryptedDialog = z4;
                                        j12 = j3;
                                        str37 = str2;
                                        size2 = i5;
                                        i2 = 1;
                                        arrayList12 = arrayList;
                                    }
                                }
                                i24 = 90;
                                if (!file2.getAbsolutePath().endsWith("mp4")) {
                                }
                                if (bitmap2 != null) {
                                }
                            } else {
                                obj7 = null;
                            }
                            if (tLRPC$TL_document4.thumbs.isEmpty()) {
                                TLRPC$TL_photoSize tLRPC$TL_photoSize = new TLRPC$TL_photoSize();
                                MediaController.SearchImage searchImage3 = sendingMediaInfo6.searchImage;
                                tLRPC$TL_photoSize.w = searchImage3.width;
                                tLRPC$TL_photoSize.h = searchImage3.height;
                                tLRPC$TL_photoSize.size = 0;
                                tLRPC$TL_photoSize.location = new TLRPC$TL_fileLocationUnavailable();
                                tLRPC$TL_photoSize.type = "x";
                                tLRPC$TL_document4.thumbs.add(tLRPC$TL_photoSize);
                                tLRPC$TL_document4.flags |= 1;
                            }
                            file2 = file3;
                        } else {
                            obj7 = null;
                            tLRPC$TL_document4 = tLRPC$TL_document3;
                        }
                        String str4222 = sendingMediaInfo6.searchImage.imageUrl;
                        if (file2 != null) {
                            str4222 = file2.toString();
                        }
                        String str4322 = str4222;
                        str28 = sendingMediaInfo6.searchImage.imageUrl;
                        if (str28 != null) {
                            hashMap8.put("originalPath", str28);
                        }
                        i5 = size2;
                        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda14(messageObject, accountInstance, tLRPC$TL_document4, str4322, hashMap8, null, j, messageObject2, messageObject3, sendingMediaInfo6, z3, i));
                        i28 = i4;
                        j3 = j2;
                        arrayList15 = arrayList20;
                        arrayList16 = arrayList21;
                        i6 = i30;
                        arrayList14 = arrayList19;
                        hashMap2 = hashMap7;
                        str2 = str40;
                        arrayList13 = arrayList18;
                        str4 = str41;
                        str3 = str;
                        z4 = isEncryptedDialog;
                    } else {
                        boolean z18 = isEncryptedDialog;
                        int i31 = size2;
                        String str44 = str;
                        TLRPC$Photo tLRPC$Photo = searchImage2.photo;
                        TLRPC$TL_photo tLRPC$TL_photo8 = tLRPC$Photo instanceof TLRPC$TL_photo ? (TLRPC$TL_photo) tLRPC$Photo : null;
                        if (tLRPC$TL_photo8 == null) {
                            StringBuilder sb2 = new StringBuilder();
                            sendingMediaInfo2 = sendingMediaInfo6;
                            sb2.append(Utilities.MD5(sendingMediaInfo2.searchImage.imageUrl));
                            sb2.append(".");
                            sb2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo2.searchImage.imageUrl, "jpg"));
                            File file5 = new File(FileLoader.getDirectory(4), sb2.toString());
                            boolean z19 = !file5.exists() || file5.length() == 0 || (tLRPC$TL_photo8 = accountInstance.getSendMessagesHelper().generatePhotoSizes(file5.toString(), null)) == null;
                            if (tLRPC$TL_photo8 == null) {
                                File file6 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo2.searchImage.thumbUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo2.searchImage.thumbUrl, "jpg"));
                                if (file6.exists()) {
                                    tLRPC$TL_photo8 = accountInstance.getSendMessagesHelper().generatePhotoSizes(file6.toString(), null);
                                }
                                if (tLRPC$TL_photo8 == null) {
                                    tLRPC$TL_photo8 = new TLRPC$TL_photo();
                                    tLRPC$TL_photo8.date = accountInstance.getConnectionsManager().getCurrentTime();
                                    tLRPC$TL_photo8.file_reference = new byte[0];
                                    TLRPC$TL_photoSize tLRPC$TL_photoSize2 = new TLRPC$TL_photoSize();
                                    MediaController.SearchImage searchImage4 = sendingMediaInfo2.searchImage;
                                    tLRPC$TL_photoSize2.w = searchImage4.width;
                                    tLRPC$TL_photoSize2.h = searchImage4.height;
                                    tLRPC$TL_photoSize2.size = 0;
                                    tLRPC$TL_photoSize2.location = new TLRPC$TL_fileLocationUnavailable();
                                    tLRPC$TL_photoSize2.type = "x";
                                    tLRPC$TL_photo8.sizes.add(tLRPC$TL_photoSize2);
                                    tLRPC$TL_photo4 = tLRPC$TL_photo8;
                                    z16 = z19;
                                }
                            }
                            tLRPC$TL_photo4 = tLRPC$TL_photo8;
                            z16 = z19;
                        } else {
                            sendingMediaInfo2 = sendingMediaInfo6;
                            tLRPC$TL_photo4 = tLRPC$TL_photo8;
                            z16 = true;
                        }
                        HashMap hashMap9 = new HashMap();
                        String str45 = sendingMediaInfo2.searchImage.imageUrl;
                        if (str45 != null) {
                            hashMap9.put("originalPath", str45);
                        }
                        if (z2) {
                            int i32 = i4 + 1;
                            StringBuilder sb3 = new StringBuilder();
                            sb3.append("");
                            j10 = j2;
                            sb3.append(j10);
                            hashMap9.put("groupId", sb3.toString());
                            if (i32 != 10) {
                                i23 = i31;
                                i22 = i30;
                                if (i22 != i23 - 1) {
                                    i4 = i32;
                                }
                            } else {
                                i22 = i30;
                                i23 = i31;
                            }
                            hashMap9.put("final", "1");
                            i4 = i32;
                            j11 = 0;
                        } else {
                            j10 = j2;
                            i22 = i30;
                            i23 = i31;
                        }
                        i5 = i23;
                        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda16(messageObject, accountInstance, tLRPC$TL_photo4, z16, sendingMediaInfo2, hashMap9, null, j, messageObject2, messageObject3, z3, i));
                        i28 = i4;
                        arrayList15 = arrayList20;
                        arrayList16 = arrayList21;
                        arrayList14 = arrayList19;
                        hashMap2 = hashMap7;
                        str2 = str40;
                        arrayList13 = arrayList18;
                        str4 = str41;
                        str3 = str44;
                        z4 = z18;
                        j3 = j10;
                        i6 = i22;
                    }
                    accountInstance2 = accountInstance;
                    i29 = i6 + 1;
                    accountInstance3 = accountInstance2;
                    str36 = str4;
                    str = str3;
                    hashMap = hashMap2;
                    isEncryptedDialog = z4;
                    j12 = j3;
                    str37 = str2;
                    size2 = i5;
                    i2 = 1;
                    arrayList12 = arrayList;
                } else {
                    str6 = str36;
                    z5 = isEncryptedDialog;
                    i8 = size2;
                    i7 = i30;
                    str5 = str;
                    arrayList2 = arrayList18;
                    str7 = str40;
                    j4 = j2;
                    hashMap3 = hashMap7;
                    arrayList3 = arrayList19;
                    arrayList5 = arrayList20;
                    arrayList4 = arrayList21;
                }
            } else {
                arrayList4 = arrayList16;
                str6 = str36;
                z5 = isEncryptedDialog;
                i8 = size2;
                i7 = i30;
                str5 = str;
                arrayList2 = arrayList18;
                str7 = str40;
                j4 = j2;
                hashMap3 = hashMap7;
                arrayList3 = arrayList19;
                arrayList5 = arrayList20;
            }
            if (sendingMediaInfo6.isVideo || sendingMediaInfo6.videoEditedInfo != null) {
                int i33 = i8;
                hashMap2 = hashMap3;
                String str46 = str7;
                str4 = str6;
                str3 = str5;
                boolean z20 = z5;
                long j13 = j4;
                int i34 = i7;
                if (z) {
                    videoEditedInfo = null;
                } else {
                    videoEditedInfo = sendingMediaInfo6.videoEditedInfo;
                    if (videoEditedInfo == null) {
                        videoEditedInfo = createCompressionSettings(sendingMediaInfo6.path);
                    }
                }
                if (!z && (videoEditedInfo != null || sendingMediaInfo6.path.endsWith("mp4"))) {
                    if (sendingMediaInfo6.path == null && (searchImage = sendingMediaInfo6.searchImage) != null) {
                        if (searchImage.photo instanceof TLRPC$TL_photo) {
                            sendingMediaInfo6.path = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(sendingMediaInfo6.searchImage.photo, true).getAbsolutePath();
                        } else {
                            sendingMediaInfo6.path = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo6.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo6.searchImage.imageUrl, "jpg")).getAbsolutePath();
                        }
                    }
                    String str47 = sendingMediaInfo6.path;
                    File file7 = new File(str47);
                    String str48 = str47 + file7.length() + str46 + file7.lastModified();
                    if (videoEditedInfo != null) {
                        boolean z21 = videoEditedInfo.muted;
                        StringBuilder sb4 = new StringBuilder();
                        sb4.append(str48);
                        str8 = str47;
                        sb4.append(videoEditedInfo.estimatedDuration);
                        sb4.append(str46);
                        sb4.append(videoEditedInfo.startTime);
                        sb4.append(str46);
                        sb4.append(videoEditedInfo.endTime);
                        sb4.append(videoEditedInfo.muted ? "_m" : "");
                        String sb5 = sb4.toString();
                        if (videoEditedInfo.resultWidth != videoEditedInfo.originalWidth) {
                            sb5 = sb5 + str46 + videoEditedInfo.resultWidth;
                        }
                        String str49 = sb5;
                        j5 = videoEditedInfo.startTime;
                        if (j5 < 0) {
                            j5 = 0;
                        }
                        str9 = str49;
                        z6 = z21;
                        z7 = z20;
                    } else {
                        str8 = str47;
                        str9 = str48;
                        j5 = 0;
                        z7 = z20;
                        z6 = false;
                    }
                    if (!z7 && sendingMediaInfo6.ttl == 0 && (videoEditedInfo == null || (videoEditedInfo.filterState == null && videoEditedInfo.paintPath == null && videoEditedInfo.mediaEntities == null && videoEditedInfo.cropState == null))) {
                        MessagesStorage messagesStorage = accountInstance.getMessagesStorage();
                        if (!z7) {
                            z11 = z7;
                            i17 = 2;
                        } else {
                            z11 = z7;
                            i17 = 5;
                        }
                        Object[] sentFile3 = messagesStorage.getSentFile(str9, i17);
                        j6 = j5;
                        if (sentFile3 == null || !(sentFile3[0] instanceof TLRPC$TL_document)) {
                            file = file7;
                            str2 = str46;
                            obj2 = "final";
                            z8 = z11;
                        } else {
                            tLRPC$TL_document = (TLRPC$TL_document) sentFile3[0];
                            boolean z22 = z11;
                            z8 = z22;
                            obj = "final";
                            str10 = "video/mp4";
                            file = file7;
                            str2 = str46;
                            ensureMediaThumbExists(accountInstance, z22, tLRPC$TL_document, sendingMediaInfo6.path, null, j6);
                            str11 = (String) sentFile3[1];
                            if (tLRPC$TL_document != null) {
                                String str50 = sendingMediaInfo6.thumbPath;
                                Bitmap decodeFile = str50 != null ? BitmapFactory.decodeFile(str50) : null;
                                if (decodeFile == null && (decodeFile = createVideoThumbnailAtTime(sendingMediaInfo6.path, j6)) == null) {
                                    decodeFile = createVideoThumbnail(sendingMediaInfo6.path, 1);
                                }
                                boolean z23 = z8;
                                if (decodeFile != null) {
                                    int max = (z23 || sendingMediaInfo6.ttl != 0) ? 90 : Math.max(decodeFile.getWidth(), decodeFile.getHeight());
                                    float f3 = max;
                                    tLRPC$PhotoSize = ImageLoader.scaleAndSaveImage(decodeFile, f3, f3, max > 90 ? 80 : 55, z23);
                                    i14 = 0;
                                    str13 = getKeyForPhotoSize(accountInstance, tLRPC$PhotoSize, null, true, false);
                                } else {
                                    i14 = 0;
                                    tLRPC$PhotoSize = null;
                                    str13 = null;
                                }
                                TLRPC$TL_document tLRPC$TL_document5 = new TLRPC$TL_document();
                                tLRPC$TL_document5.file_reference = new byte[i14];
                                if (tLRPC$PhotoSize != null) {
                                    tLRPC$TL_document5.thumbs.add(tLRPC$PhotoSize);
                                    tLRPC$TL_document5.flags |= 1;
                                }
                                tLRPC$TL_document5.mime_type = str10;
                                accountInstance.getUserConfig().saveConfig(i14);
                                if (z23) {
                                    tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                } else {
                                    tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                    tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                }
                                tLRPC$TL_document5.attributes.add(tLRPC$TL_documentAttributeVideo);
                                if (videoEditedInfo != null && (videoEditedInfo.needConvert() || !sendingMediaInfo6.isVideo)) {
                                    if (sendingMediaInfo6.isVideo && videoEditedInfo.muted) {
                                        fillVideoAttribute(sendingMediaInfo6.path, tLRPC$TL_documentAttributeVideo, videoEditedInfo);
                                        videoEditedInfo.originalWidth = tLRPC$TL_documentAttributeVideo.w;
                                        videoEditedInfo.originalHeight = tLRPC$TL_documentAttributeVideo.h;
                                        z9 = z23;
                                    } else {
                                        z9 = z23;
                                        tLRPC$TL_documentAttributeVideo.duration = (int) (videoEditedInfo.estimatedDuration / 1000);
                                    }
                                    int i35 = videoEditedInfo.rotationValue;
                                    MediaController.CropState cropState = videoEditedInfo.cropState;
                                    if (cropState != null) {
                                        i15 = cropState.transformWidth;
                                        i16 = cropState.transformHeight;
                                    } else {
                                        i15 = videoEditedInfo.resultWidth;
                                        i16 = videoEditedInfo.resultHeight;
                                    }
                                    if (i35 == 90 || i35 == 270) {
                                        tLRPC$TL_documentAttributeVideo.w = i16;
                                        tLRPC$TL_documentAttributeVideo.h = i15;
                                    } else {
                                        tLRPC$TL_documentAttributeVideo.w = i15;
                                        tLRPC$TL_documentAttributeVideo.h = i16;
                                    }
                                    tLRPC$TL_document5.size = videoEditedInfo.estimatedSize;
                                } else {
                                    z9 = z23;
                                    if (file.exists()) {
                                        tLRPC$TL_document5.size = (int) file.length();
                                    }
                                    fillVideoAttribute(sendingMediaInfo6.path, tLRPC$TL_documentAttributeVideo, null);
                                }
                                bitmap = decodeFile;
                                tLRPC$TL_document2 = tLRPC$TL_document5;
                                str12 = str13;
                            } else {
                                z9 = z8;
                                bitmap = null;
                                str12 = null;
                                tLRPC$TL_document2 = tLRPC$TL_document;
                            }
                            if (videoEditedInfo != null && videoEditedInfo.muted) {
                                size = tLRPC$TL_document2.attributes.size();
                                i13 = 0;
                                while (true) {
                                    if (i13 < size) {
                                        z10 = false;
                                        break;
                                    } else if (tLRPC$TL_document2.attributes.get(i13) instanceof TLRPC$TL_documentAttributeAnimated) {
                                        z10 = true;
                                        break;
                                    } else {
                                        i13++;
                                    }
                                }
                                if (!z10) {
                                    tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                }
                            }
                            if (videoEditedInfo != null && (videoEditedInfo.needConvert() || !sendingMediaInfo6.isVideo)) {
                                File file8 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + ".mp4");
                                SharedConfig.saveConfig();
                                str8 = file8.getAbsolutePath();
                            }
                            hashMap4 = new HashMap();
                            if (str9 != null) {
                                hashMap4.put("originalPath", str9);
                            }
                            if (str11 != null) {
                                hashMap4.put("parentObject", str11);
                            }
                            if (!z6 || !z2) {
                                j7 = j13;
                                i10 = i34;
                                i9 = i33;
                                i11 = i4;
                            } else {
                                i11 = i4 + 1;
                                StringBuilder sb6 = new StringBuilder();
                                sb6.append("");
                                j7 = j13;
                                sb6.append(j7);
                                hashMap4.put("groupId", sb6.toString());
                                if (i11 != 10) {
                                    i9 = i33;
                                    i10 = i34;
                                } else {
                                    i10 = i34;
                                    i9 = i33;
                                }
                                hashMap4.put(obj, "1");
                                j11 = 0;
                            }
                            if (!z9 && (arrayList7 = sendingMediaInfo6.masks) != null && !arrayList7.isEmpty()) {
                                tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeHasStickers());
                                SerializedData serializedData = new SerializedData((sendingMediaInfo6.masks.size() * 20) + 4);
                                serializedData.writeInt32(sendingMediaInfo6.masks.size());
                                for (i12 = 0; i12 < sendingMediaInfo6.masks.size(); i12++) {
                                    sendingMediaInfo6.masks.get(i12).serializeToStream(serializedData);
                                }
                                hashMap4.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                serializedData.cleanup();
                            }
                            i6 = i10;
                            z4 = z9;
                            j3 = j7;
                            int i36 = i11;
                            i5 = i9;
                            accountInstance2 = accountInstance;
                            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda6(bitmap, str12, messageObject, accountInstance, videoEditedInfo, tLRPC$TL_document2, str8, hashMap4, str11, j, messageObject2, messageObject3, sendingMediaInfo6, z3, i));
                            i4 = i36;
                            arrayList15 = arrayList5;
                            arrayList16 = arrayList4;
                            arrayList14 = arrayList3;
                            arrayList13 = arrayList2;
                        }
                    } else {
                        z8 = z7;
                        j6 = j5;
                        file = file7;
                        str2 = str46;
                        obj2 = "final";
                    }
                    str10 = "video/mp4";
                    str11 = null;
                    tLRPC$TL_document = null;
                    obj = obj2;
                    if (tLRPC$TL_document != null) {
                    }
                    if (videoEditedInfo != null) {
                        size = tLRPC$TL_document2.attributes.size();
                        i13 = 0;
                        while (true) {
                            if (i13 < size) {
                            }
                            i13++;
                        }
                        if (!z10) {
                        }
                    }
                    if (videoEditedInfo != null) {
                        File file82 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + ".mp4");
                        SharedConfig.saveConfig();
                        str8 = file82.getAbsolutePath();
                    }
                    hashMap4 = new HashMap();
                    if (str9 != null) {
                    }
                    if (str11 != null) {
                    }
                    if (!z6) {
                    }
                    j7 = j13;
                    i10 = i34;
                    i9 = i33;
                    i11 = i4;
                    if (!z9) {
                        tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeHasStickers());
                        SerializedData serializedData2 = new SerializedData((sendingMediaInfo6.masks.size() * 20) + 4);
                        serializedData2.writeInt32(sendingMediaInfo6.masks.size());
                        while (i12 < sendingMediaInfo6.masks.size()) {
                        }
                        hashMap4.put("masks", Utilities.bytesToHex(serializedData2.toByteArray()));
                        serializedData2.cleanup();
                    }
                    i6 = i10;
                    z4 = z9;
                    j3 = j7;
                    int i362 = i11;
                    i5 = i9;
                    accountInstance2 = accountInstance;
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda6(bitmap, str12, messageObject, accountInstance, videoEditedInfo, tLRPC$TL_document2, str8, hashMap4, str11, j, messageObject2, messageObject3, sendingMediaInfo6, z3, i));
                    i4 = i362;
                    arrayList15 = arrayList5;
                    arrayList16 = arrayList4;
                    arrayList14 = arrayList3;
                    arrayList13 = arrayList2;
                } else {
                    accountInstance2 = accountInstance;
                    str2 = str46;
                    j3 = j13;
                    i6 = i34;
                    z4 = z20;
                    i5 = i33;
                    if (arrayList4 == null) {
                        ArrayList arrayList22 = new ArrayList();
                        arrayList15 = new ArrayList();
                        arrayList13 = new ArrayList();
                        ArrayList arrayList23 = new ArrayList();
                        arrayList14 = new ArrayList();
                        arrayList16 = arrayList22;
                        sendingMediaInfo = sendingMediaInfo6;
                        arrayList6 = arrayList23;
                    } else {
                        sendingMediaInfo = sendingMediaInfo6;
                        arrayList6 = arrayList17;
                        arrayList15 = arrayList5;
                        arrayList16 = arrayList4;
                        arrayList14 = arrayList3;
                        arrayList13 = arrayList2;
                    }
                    arrayList16.add(sendingMediaInfo.path);
                    arrayList15.add(sendingMediaInfo.path);
                    arrayList14.add(sendingMediaInfo.uri);
                    arrayList13.add(sendingMediaInfo.caption);
                    arrayList6.add(sendingMediaInfo.entities);
                    arrayList17 = arrayList6;
                }
                i28 = i4;
            } else {
                String str51 = sendingMediaInfo6.path;
                if (str51 != null || (uri2 = sendingMediaInfo6.uri) == null) {
                    str15 = str51;
                    str14 = str15;
                } else {
                    String path = (Build.VERSION.SDK_INT < 30 || !"content".equals(uri2.getScheme())) ? AndroidUtilities.getPath(sendingMediaInfo6.uri) : null;
                    str15 = sendingMediaInfo6.uri.toString();
                    str14 = path;
                }
                if (inputContentInfoCompat == null || sendingMediaInfo6.uri == null || !inputContentInfoCompat.getDescription().hasMimeType("image/png")) {
                    str16 = str5;
                } else {
                    try {
                        BitmapFactory.Options options = new BitmapFactory.Options();
                        inputStream = ApplicationLoader.applicationContext.getContentResolver().openInputStream(sendingMediaInfo6.uri);
                        try {
                            Bitmap decodeStream = BitmapFactory.decodeStream(inputStream, null, options);
                            StringBuilder sb7 = new StringBuilder();
                            sb7.append("-2147483648_");
                            sb7.append(SharedConfig.getLastLocalId());
                            str16 = str5;
                            try {
                                sb7.append(str16);
                                File file9 = new File(FileLoader.getDirectory(4), sb7.toString());
                                fileOutputStream = new FileOutputStream(file9);
                                try {
                                    decodeStream.compress(Bitmap.CompressFormat.WEBP, 100, fileOutputStream);
                                    SharedConfig.saveConfig();
                                    sendingMediaInfo6.uri = Uri.fromFile(file9);
                                    if (inputStream != null) {
                                        try {
                                            inputStream.close();
                                        } catch (Exception unused) {
                                        }
                                    }
                                } catch (Throwable th2) {
                                    th = th2;
                                    try {
                                        FileLog.e(th);
                                        if (inputStream != null) {
                                            try {
                                                inputStream.close();
                                            } catch (Exception unused2) {
                                            }
                                        }
                                    } catch (Throwable th3) {
                                        if (inputStream != null) {
                                            try {
                                                inputStream.close();
                                            } catch (Exception unused3) {
                                            }
                                        }
                                        if (fileOutputStream != null) {
                                            try {
                                                fileOutputStream.close();
                                            } catch (Exception unused4) {
                                            }
                                        }
                                        throw th3;
                                    }
                                }
                            } catch (Throwable th4) {
                                th = th4;
                                fileOutputStream = null;
                                FileLog.e(th);
                                if (inputStream != null) {
                                }
                            }
                        } catch (Throwable th5) {
                            th = th5;
                            str16 = str5;
                        }
                    } catch (Throwable th6) {
                        th = th6;
                        str16 = str5;
                        inputStream = null;
                    }
                    try {
                        fileOutputStream.close();
                    } catch (Exception unused5) {
                    }
                }
                String str52 = "webp";
                if (z || ImageLoader.shouldSendImageAsDocument(sendingMediaInfo6.path, sendingMediaInfo6.uri)) {
                    str17 = str6;
                    if (str14 != null) {
                        str52 = FileLoader.getFileExtension(new File(str14));
                        str39 = str52;
                        str18 = str14;
                        z12 = true;
                    } else {
                        str39 = "";
                        str18 = str14;
                        z12 = true;
                    }
                } else {
                    if (sendingMediaInfo6.forceImage || str14 == null) {
                        str17 = str6;
                    } else {
                        str17 = str6;
                        if ((str14.endsWith(str17) || str14.endsWith(str16)) && sendingMediaInfo6.ttl <= 0) {
                        }
                    }
                    if (!sendingMediaInfo6.forceImage && str14 == null && (uri = sendingMediaInfo6.uri) != null) {
                        if (MediaController.isGif(uri)) {
                            str15 = sendingMediaInfo6.uri.toString();
                            str14 = MediaController.copyFileToCache(sendingMediaInfo6.uri, "gif");
                            str39 = "gif";
                            str18 = str14;
                            z12 = true;
                        } else if (MediaController.isWebp(sendingMediaInfo6.uri)) {
                            str15 = sendingMediaInfo6.uri.toString();
                            str14 = MediaController.copyFileToCache(sendingMediaInfo6.uri, str52);
                            str39 = str52;
                            str18 = str14;
                            z12 = true;
                        }
                    }
                    str18 = str14;
                    z12 = false;
                }
                if (z12) {
                    ArrayList arrayList24 = arrayList4;
                    if (arrayList24 == null) {
                        arrayList16 = new ArrayList();
                        arrayList15 = new ArrayList();
                        arrayList11 = new ArrayList();
                        ArrayList arrayList25 = new ArrayList();
                        arrayList14 = new ArrayList();
                        arrayList10 = arrayList25;
                    } else {
                        arrayList16 = arrayList24;
                        arrayList10 = arrayList17;
                        arrayList15 = arrayList5;
                        arrayList14 = arrayList3;
                        arrayList11 = arrayList2;
                    }
                    arrayList16.add(str18);
                    arrayList15.add(str15);
                    arrayList14.add(sendingMediaInfo6.uri);
                    arrayList11.add(sendingMediaInfo6.caption);
                    arrayList10.add(sendingMediaInfo6.entities);
                    accountInstance2 = accountInstance;
                    arrayList13 = arrayList11;
                    arrayList17 = arrayList10;
                    str4 = str17;
                    str3 = str16;
                    i5 = i8;
                    i28 = i4;
                    hashMap2 = hashMap3;
                    str2 = str7;
                    z4 = z5;
                    j3 = j4;
                    i6 = i7;
                } else {
                    ArrayList arrayList26 = arrayList4;
                    if (str18 != null) {
                        File file10 = new File(str18);
                        str19 = str15 + file10.length() + str7 + file10.lastModified();
                        hashMap5 = hashMap3;
                    } else {
                        hashMap5 = hashMap3;
                        str19 = null;
                    }
                    if (hashMap5 != null) {
                        MediaSendPrepareWorker mediaSendPrepareWorker3 = (MediaSendPrepareWorker) hashMap5.get(sendingMediaInfo6);
                        TLRPC$TL_photo tLRPC$TL_photo9 = mediaSendPrepareWorker3.photo;
                        String str53 = mediaSendPrepareWorker3.parentObject;
                        if (tLRPC$TL_photo9 == null) {
                            try {
                                mediaSendPrepareWorker3.sync.await();
                            } catch (Exception e3) {
                                FileLog.e(e3);
                            }
                            tLRPC$TL_photo9 = mediaSendPrepareWorker3.photo;
                            str53 = mediaSendPrepareWorker3.parentObject;
                        }
                        str23 = str18;
                        hashMap2 = hashMap5;
                        str21 = str19;
                        arrayList8 = arrayList26;
                        str4 = str17;
                        str22 = str16;
                        str20 = str7;
                        z13 = z5;
                        i18 = 1;
                        str24 = str53;
                        obj3 = "1";
                        tLRPC$TL_photo = tLRPC$TL_photo9;
                    } else {
                        boolean z24 = z5;
                        if (z24 || sendingMediaInfo6.ttl != 0) {
                            str23 = str18;
                            z15 = z24;
                            hashMap2 = hashMap5;
                            str21 = str19;
                            arrayList8 = arrayList26;
                            str4 = str17;
                            str22 = str16;
                            str20 = str7;
                            i18 = 1;
                            obj4 = "1";
                            tLRPC$TL_photo2 = null;
                            str26 = null;
                        } else {
                            Object[] sentFile4 = accountInstance.getMessagesStorage().getSentFile(str19, !z24 ? 0 : 3);
                            HashMap hashMap10 = hashMap5;
                            if (sentFile4 == null) {
                                obj6 = "1";
                            } else if (sentFile4[0] instanceof TLRPC$TL_photo) {
                                tLRPC$TL_photo3 = (TLRPC$TL_photo) sentFile4[0];
                                obj5 = "1";
                                str27 = (String) sentFile4[1];
                                if (tLRPC$TL_photo3 == null) {
                                    if (sendingMediaInfo6.uri != null) {
                                        str26 = str27;
                                        Object[] sentFile5 = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(sendingMediaInfo6.uri), !z24 ? 0 : 3);
                                        if (sentFile5 != null && (sentFile5[0] instanceof TLRPC$TL_photo)) {
                                            tLRPC$TL_photo3 = (TLRPC$TL_photo) sentFile5[0];
                                            str27 = (String) sentFile5[1];
                                        }
                                    } else {
                                        str26 = str27;
                                    }
                                    tLRPC$TL_photo2 = tLRPC$TL_photo3;
                                    z15 = z24;
                                    hashMap2 = hashMap10;
                                    str21 = str19;
                                    str20 = str7;
                                    str23 = str18;
                                    arrayList8 = arrayList26;
                                    str4 = str17;
                                    str22 = str16;
                                    obj4 = obj5;
                                    i18 = 1;
                                    ensureMediaThumbExists(accountInstance, z24, tLRPC$TL_photo2, sendingMediaInfo6.path, sendingMediaInfo6.uri, 0L);
                                }
                                str26 = str27;
                                tLRPC$TL_photo2 = tLRPC$TL_photo3;
                                z15 = z24;
                                hashMap2 = hashMap10;
                                str21 = str19;
                                str20 = str7;
                                str23 = str18;
                                arrayList8 = arrayList26;
                                str4 = str17;
                                str22 = str16;
                                obj4 = obj5;
                                i18 = 1;
                                ensureMediaThumbExists(accountInstance, z24, tLRPC$TL_photo2, sendingMediaInfo6.path, sendingMediaInfo6.uri, 0L);
                            } else {
                                obj6 = "1";
                            }
                            str27 = null;
                            tLRPC$TL_photo3 = null;
                            obj5 = obj6;
                            if (tLRPC$TL_photo3 == null) {
                            }
                            str26 = str27;
                            tLRPC$TL_photo2 = tLRPC$TL_photo3;
                            z15 = z24;
                            hashMap2 = hashMap10;
                            str21 = str19;
                            str20 = str7;
                            str23 = str18;
                            arrayList8 = arrayList26;
                            str4 = str17;
                            str22 = str16;
                            obj4 = obj5;
                            i18 = 1;
                            ensureMediaThumbExists(accountInstance, z24, tLRPC$TL_photo2, sendingMediaInfo6.path, sendingMediaInfo6.uri, 0L);
                        }
                        if (tLRPC$TL_photo2 == null) {
                            tLRPC$TL_photo2 = accountInstance.getSendMessagesHelper().generatePhotoSizes(sendingMediaInfo6.path, sendingMediaInfo6.uri);
                            z13 = z15;
                            if (z13 && sendingMediaInfo6.canDeleteAfter) {
                                new File(sendingMediaInfo6.path).delete();
                            }
                        } else {
                            z13 = z15;
                        }
                        tLRPC$TL_photo = tLRPC$TL_photo2;
                        str24 = str26;
                        obj3 = obj4;
                    }
                    if (tLRPC$TL_photo != null) {
                        HashMap hashMap11 = new HashMap();
                        Bitmap[] bitmapArr = new Bitmap[i18];
                        String[] strArr = new String[i18];
                        ArrayList<TLRPC$InputDocument> arrayList27 = sendingMediaInfo6.masks;
                        boolean z25 = arrayList27 != null && !arrayList27.isEmpty();
                        tLRPC$TL_photo.has_stickers = z25;
                        if (z25) {
                            SerializedData serializedData3 = new SerializedData((sendingMediaInfo6.masks.size() * 20) + 4);
                            serializedData3.writeInt32(sendingMediaInfo6.masks.size());
                            for (int i37 = 0; i37 < sendingMediaInfo6.masks.size(); i37++) {
                                sendingMediaInfo6.masks.get(i37).serializeToStream(serializedData3);
                            }
                            hashMap11.put("masks", Utilities.bytesToHex(serializedData3.toByteArray()));
                            serializedData3.cleanup();
                        }
                        String str54 = str21;
                        if (str54 != null) {
                            hashMap11.put("originalPath", str54);
                        }
                        if (str24 != null) {
                            hashMap11.put("parentObject", str24);
                        }
                        if (z2) {
                            try {
                                if (arrayList.size() == 1) {
                                }
                                accountInstance2 = accountInstance;
                            } catch (Exception e4) {
                                e = e4;
                                accountInstance2 = accountInstance;
                                FileLog.e(e);
                                if (z2) {
                                }
                                j8 = j9;
                                i20 = i21;
                                z14 = z13;
                                str3 = str22;
                                i19 = i8;
                                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda75(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo, hashMap11, str24, j, messageObject2, messageObject3, sendingMediaInfo6, z3, i));
                                arrayList15 = arrayList5;
                                arrayList16 = arrayList8;
                                arrayList14 = arrayList3;
                                arrayList13 = arrayList2;
                                str2 = str20;
                                j3 = j8;
                                i6 = i20;
                                z4 = z14;
                                i5 = i19;
                                i29 = i6 + 1;
                                accountInstance3 = accountInstance2;
                                str36 = str4;
                                str = str3;
                                hashMap = hashMap2;
                                isEncryptedDialog = z4;
                                j12 = j3;
                                str37 = str2;
                                size2 = i5;
                                i2 = 1;
                                arrayList12 = arrayList;
                            }
                            if (z2) {
                                i28 = i4 + 1;
                                StringBuilder sb8 = new StringBuilder();
                                sb8.append("");
                                j9 = j4;
                                sb8.append(j9);
                                hashMap11.put("groupId", sb8.toString());
                                if (i28 != 10) {
                                    i21 = i7;
                                } else {
                                    i21 = i7;
                                }
                                hashMap11.put("final", obj3);
                                j11 = 0;
                            } else {
                                j9 = j4;
                                i21 = i7;
                                i28 = i4;
                            }
                            j8 = j9;
                            i20 = i21;
                            z14 = z13;
                            str3 = str22;
                            i19 = i8;
                            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda75(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo, hashMap11, str24, j, messageObject2, messageObject3, sendingMediaInfo6, z3, i));
                            arrayList15 = arrayList5;
                            arrayList16 = arrayList8;
                            arrayList14 = arrayList3;
                            arrayList13 = arrayList2;
                        }
                        TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo.sizes, AndroidUtilities.getPhotoSize());
                        if (closestPhotoSizeWithSize != null) {
                            accountInstance2 = accountInstance;
                            try {
                                strArr[0] = getKeyForPhotoSize(accountInstance2, closestPhotoSizeWithSize, bitmapArr, false, false);
                            } catch (Exception e5) {
                                e = e5;
                                FileLog.e(e);
                                if (z2) {
                                }
                                j8 = j9;
                                i20 = i21;
                                z14 = z13;
                                str3 = str22;
                                i19 = i8;
                                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda75(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo, hashMap11, str24, j, messageObject2, messageObject3, sendingMediaInfo6, z3, i));
                                arrayList15 = arrayList5;
                                arrayList16 = arrayList8;
                                arrayList14 = arrayList3;
                                arrayList13 = arrayList2;
                                str2 = str20;
                                j3 = j8;
                                i6 = i20;
                                z4 = z14;
                                i5 = i19;
                                i29 = i6 + 1;
                                accountInstance3 = accountInstance2;
                                str36 = str4;
                                str = str3;
                                hashMap = hashMap2;
                                isEncryptedDialog = z4;
                                j12 = j3;
                                str37 = str2;
                                size2 = i5;
                                i2 = 1;
                                arrayList12 = arrayList;
                            }
                            if (z2) {
                            }
                            j8 = j9;
                            i20 = i21;
                            z14 = z13;
                            str3 = str22;
                            i19 = i8;
                            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda75(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo, hashMap11, str24, j, messageObject2, messageObject3, sendingMediaInfo6, z3, i));
                            arrayList15 = arrayList5;
                            arrayList16 = arrayList8;
                            arrayList14 = arrayList3;
                            arrayList13 = arrayList2;
                        }
                        accountInstance2 = accountInstance;
                        if (z2) {
                        }
                        j8 = j9;
                        i20 = i21;
                        z14 = z13;
                        str3 = str22;
                        i19 = i8;
                        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda75(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo, hashMap11, str24, j, messageObject2, messageObject3, sendingMediaInfo6, z3, i));
                        arrayList15 = arrayList5;
                        arrayList16 = arrayList8;
                        arrayList14 = arrayList3;
                        arrayList13 = arrayList2;
                    } else {
                        z14 = z13;
                        i19 = i8;
                        str3 = str22;
                        j8 = j4;
                        i20 = i7;
                        String str55 = str21;
                        if (arrayList8 == null) {
                            arrayList16 = new ArrayList();
                            arrayList15 = new ArrayList();
                            arrayList13 = new ArrayList();
                            ArrayList arrayList28 = new ArrayList();
                            arrayList14 = new ArrayList();
                            arrayList9 = arrayList28;
                            str25 = str23;
                        } else {
                            arrayList9 = arrayList17;
                            str25 = str23;
                            arrayList15 = arrayList5;
                            arrayList16 = arrayList8;
                            arrayList14 = arrayList3;
                            arrayList13 = arrayList2;
                        }
                        arrayList16.add(str25);
                        arrayList15.add(str55);
                        arrayList14.add(sendingMediaInfo6.uri);
                        arrayList13.add(sendingMediaInfo6.caption);
                        arrayList9.add(sendingMediaInfo6.entities);
                        arrayList17 = arrayList9;
                        accountInstance2 = accountInstance;
                        i28 = i4;
                    }
                    str2 = str20;
                    j3 = j8;
                    i6 = i20;
                    z4 = z14;
                    i5 = i19;
                }
            }
            i29 = i6 + 1;
            accountInstance3 = accountInstance2;
            str36 = str4;
            str = str3;
            hashMap = hashMap2;
            isEncryptedDialog = z4;
            j12 = j3;
            str37 = str2;
            size2 = i5;
            i2 = 1;
            arrayList12 = arrayList;
        }
        ArrayList arrayList29 = arrayList13;
        ArrayList arrayList30 = arrayList14;
        ArrayList arrayList31 = arrayList15;
        ArrayList arrayList32 = arrayList16;
        boolean z26 = isEncryptedDialog;
        int i38 = size2;
        AccountInstance accountInstance4 = accountInstance3;
        long j14 = j11;
        if (j14 != 0) {
            finishGroup(accountInstance4, j14, i);
        }
        if (inputContentInfoCompat != null) {
            inputContentInfoCompat.releasePermission();
        }
        if (arrayList32 != null && !arrayList32.isEmpty()) {
            int i39 = 1;
            long[] jArr = new long[1];
            int size3 = arrayList32.size();
            int i40 = i28;
            int i41 = 0;
            while (i41 < size3) {
                if (!z || z26) {
                    i3 = i38;
                } else {
                    i3 = i38;
                    if (i3 > i39 && i40 % 10 == 0) {
                        jArr[0] = Utilities.random.nextLong();
                        i40 = 0;
                        int i42 = i40 + 1;
                        ArrayList arrayList33 = arrayList32;
                        ArrayList arrayList34 = arrayList31;
                        ArrayList arrayList35 = arrayList30;
                        ArrayList arrayList36 = arrayList29;
                        ArrayList arrayList37 = arrayList17;
                        handleError(prepareSendingDocumentInternal(accountInstance, (String) arrayList33.get(i41), (String) arrayList34.get(i41), (Uri) arrayList35.get(i41), str39, j, messageObject2, messageObject3, (CharSequence) arrayList36.get(i41), (ArrayList) arrayList37.get(i41), messageObject, jArr, i42 != 10 || i41 == size3 + (-1), z, z3, i, null), accountInstance);
                        i41++;
                        accountInstance4 = accountInstance;
                        i40 = i42;
                        i38 = i3;
                        arrayList32 = arrayList33;
                        arrayList17 = arrayList37;
                        arrayList29 = arrayList36;
                        arrayList30 = arrayList35;
                        arrayList31 = arrayList34;
                        size3 = size3;
                        jArr = jArr;
                        i39 = 1;
                    }
                }
                int i422 = i40 + 1;
                ArrayList arrayList332 = arrayList32;
                ArrayList arrayList342 = arrayList31;
                ArrayList arrayList352 = arrayList30;
                ArrayList arrayList362 = arrayList29;
                ArrayList arrayList372 = arrayList17;
                handleError(prepareSendingDocumentInternal(accountInstance, (String) arrayList332.get(i41), (String) arrayList342.get(i41), (Uri) arrayList352.get(i41), str39, j, messageObject2, messageObject3, (CharSequence) arrayList362.get(i41), (ArrayList) arrayList372.get(i41), messageObject, jArr, i422 != 10 || i41 == size3 + (-1), z, z3, i, null), accountInstance);
                i41++;
                accountInstance4 = accountInstance;
                i40 = i422;
                i38 = i3;
                arrayList32 = arrayList332;
                arrayList17 = arrayList372;
                arrayList29 = arrayList362;
                arrayList30 = arrayList352;
                arrayList31 = arrayList342;
                size3 = size3;
                jArr = jArr;
                i39 = 1;
            }
        }
        if (BuildVars.LOGS_ENABLED) {
            FileLog.d("total send time = " + (System.currentTimeMillis() - currentTimeMillis));
        }
    }

    public static /* synthetic */ void lambda$prepareSendingMedia$84(MediaSendPrepareWorker mediaSendPrepareWorker, AccountInstance accountInstance, SendingMediaInfo sendingMediaInfo, boolean z) {
        mediaSendPrepareWorker.photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
        if (z && sendingMediaInfo.canDeleteAfter) {
            new File(sendingMediaInfo.path).delete();
        }
        mediaSendPrepareWorker.sync.countDown();
    }

    public static /* synthetic */ void lambda$prepareSendingMedia$85(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, String str, HashMap hashMap, String str2, long j, MessageObject messageObject2, MessageObject messageObject3, SendingMediaInfo sendingMediaInfo, boolean z, int i) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, str, hashMap, false, str2);
        } else {
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_document, null, str, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, 0, str2, null);
        }
    }

    public static /* synthetic */ void lambda$prepareSendingMedia$86(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_photo tLRPC$TL_photo, boolean z, SendingMediaInfo sendingMediaInfo, HashMap hashMap, String str, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z2, int i) {
        String str2 = null;
        if (messageObject != null) {
            SendMessagesHelper sendMessagesHelper = accountInstance.getSendMessagesHelper();
            if (z) {
                str2 = sendingMediaInfo.searchImage.imageUrl;
            }
            sendMessagesHelper.editMessage(messageObject, tLRPC$TL_photo, null, null, str2, hashMap, false, str);
            return;
        }
        SendMessagesHelper sendMessagesHelper2 = accountInstance.getSendMessagesHelper();
        if (z) {
            str2 = sendingMediaInfo.searchImage.imageUrl;
        }
        sendMessagesHelper2.sendMessage(tLRPC$TL_photo, str2, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z2, i, sendingMediaInfo.ttl, str);
    }

    public static /* synthetic */ void lambda$prepareSendingMedia$87(Bitmap bitmap, String str, MessageObject messageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str2, HashMap hashMap, String str3, long j, MessageObject messageObject2, MessageObject messageObject3, SendingMediaInfo sendingMediaInfo, boolean z, int i) {
        if (bitmap != null && str != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, videoEditedInfo, tLRPC$TL_document, str2, hashMap, false, str3);
        } else {
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_document, videoEditedInfo, str2, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, sendingMediaInfo.ttl, str3, null);
        }
    }

    public static /* synthetic */ void lambda$prepareSendingMedia$88(Bitmap[] bitmapArr, String[] strArr, MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_photo tLRPC$TL_photo, HashMap hashMap, String str, long j, MessageObject messageObject2, MessageObject messageObject3, SendingMediaInfo sendingMediaInfo, boolean z, int i) {
        if (bitmapArr[0] != null && strArr[0] != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, tLRPC$TL_photo, null, null, null, hashMap, false, str);
        } else {
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_photo, null, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, sendingMediaInfo.ttl, str);
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:55:0x008b A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:65:? A[RETURN, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private static void fillVideoAttribute(String str, TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo, VideoEditedInfo videoEditedInfo) {
        Throwable th;
        boolean z;
        Exception e;
        MediaMetadataRetriever mediaMetadataRetriever;
        String extractMetadata;
        MediaMetadataRetriever mediaMetadataRetriever2 = null;
        try {
            try {
                mediaMetadataRetriever = new MediaMetadataRetriever();
            } catch (Exception e2) {
                e = e2;
            }
        } catch (Throwable th2) {
            th = th2;
        }
        try {
            mediaMetadataRetriever.setDataSource(str);
            String extractMetadata2 = mediaMetadataRetriever.extractMetadata(18);
            if (extractMetadata2 != null) {
                tLRPC$TL_documentAttributeVideo.w = Integer.parseInt(extractMetadata2);
            }
            String extractMetadata3 = mediaMetadataRetriever.extractMetadata(19);
            if (extractMetadata3 != null) {
                tLRPC$TL_documentAttributeVideo.h = Integer.parseInt(extractMetadata3);
            }
            String extractMetadata4 = mediaMetadataRetriever.extractMetadata(9);
            if (extractMetadata4 != null) {
                tLRPC$TL_documentAttributeVideo.duration = (int) Math.ceil(((float) Long.parseLong(extractMetadata4)) / 1000.0f);
            }
            if (Build.VERSION.SDK_INT >= 17 && (extractMetadata = mediaMetadataRetriever.extractMetadata(24)) != null) {
                int intValue = Utilities.parseInt((CharSequence) extractMetadata).intValue();
                if (videoEditedInfo != null) {
                    videoEditedInfo.rotationValue = intValue;
                } else if (intValue == 90 || intValue == 270) {
                    int i = tLRPC$TL_documentAttributeVideo.w;
                    tLRPC$TL_documentAttributeVideo.w = tLRPC$TL_documentAttributeVideo.h;
                    tLRPC$TL_documentAttributeVideo.h = i;
                }
            }
            z = true;
            try {
                mediaMetadataRetriever.release();
            } catch (Exception e3) {
                FileLog.e(e3);
            }
        } catch (Exception e4) {
            e = e4;
            mediaMetadataRetriever2 = mediaMetadataRetriever;
            FileLog.e(e);
            if (mediaMetadataRetriever2 != null) {
                try {
                    mediaMetadataRetriever2.release();
                } catch (Exception e5) {
                    FileLog.e(e5);
                }
            }
            z = false;
            if (z) {
            }
        } catch (Throwable th3) {
            th = th3;
            mediaMetadataRetriever2 = mediaMetadataRetriever;
            if (mediaMetadataRetriever2 != null) {
                try {
                    mediaMetadataRetriever2.release();
                } catch (Exception e6) {
                    FileLog.e(e6);
                }
            }
            throw th;
        }
        if (z) {
            try {
                MediaPlayer create = MediaPlayer.create(ApplicationLoader.applicationContext, Uri.fromFile(new File(str)));
                if (create == null) {
                    return;
                }
                tLRPC$TL_documentAttributeVideo.duration = (int) Math.ceil(create.getDuration() / 1000.0f);
                tLRPC$TL_documentAttributeVideo.w = create.getVideoWidth();
                tLRPC$TL_documentAttributeVideo.h = create.getVideoHeight();
                create.release();
            } catch (Exception e7) {
                FileLog.e(e7);
            }
        }
    }

    public static Bitmap createVideoThumbnail(String str, int i) {
        float f = i == 2 ? 1920.0f : i == 3 ? 96.0f : 512.0f;
        Bitmap createVideoThumbnailAtTime = createVideoThumbnailAtTime(str, 0L);
        if (createVideoThumbnailAtTime != null) {
            int width = createVideoThumbnailAtTime.getWidth();
            int height = createVideoThumbnailAtTime.getHeight();
            float f2 = width;
            if (f2 <= f && height <= f) {
                return createVideoThumbnailAtTime;
            }
            float max = Math.max(width, height) / f;
            return Bitmap.createScaledBitmap(createVideoThumbnailAtTime, (int) (f2 / max), (int) (height / max), true);
        }
        return createVideoThumbnailAtTime;
    }

    public static Bitmap createVideoThumbnailAtTime(String str, long j) {
        return createVideoThumbnailAtTime(str, j, null, false);
    }

    public static Bitmap createVideoThumbnailAtTime(String str, long j, int[] iArr, boolean z) {
        Bitmap bitmap;
        if (z) {
            AnimatedFileDrawable animatedFileDrawable = new AnimatedFileDrawable(new File(str), true, 0L, null, null, null, 0L, 0, true, null);
            bitmap = animatedFileDrawable.getFrameAtTime(j, z);
            if (iArr != null) {
                iArr[0] = animatedFileDrawable.getOrientation();
            }
            animatedFileDrawable.recycle();
            if (bitmap == null) {
                return createVideoThumbnailAtTime(str, j, iArr, false);
            }
        } else {
            MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever();
            bitmap = null;
            try {
                try {
                    mediaMetadataRetriever.setDataSource(str);
                    Bitmap frameAtTime = mediaMetadataRetriever.getFrameAtTime(j, 1);
                    if (frameAtTime == null) {
                        try {
                            frameAtTime = mediaMetadataRetriever.getFrameAtTime(j, 3);
                        } catch (Exception unused) {
                        }
                    }
                    bitmap = frameAtTime;
                } catch (Exception unused2) {
                }
            } finally {
                try {
                    mediaMetadataRetriever.release();
                } catch (RuntimeException unused3) {
                }
            }
        }
        return bitmap;
    }

    private static VideoEditedInfo createCompressionSettings(String str) {
        MediaCodecInfo selectCodec;
        boolean z;
        int[] iArr = new int[11];
        AnimatedFileDrawable.getVideoInfo(str, iArr);
        if (iArr[0] == 0) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("video hasn't avc1 atom");
            }
            return null;
        }
        int videoBitrate = MediaController.getVideoBitrate(str);
        if (videoBitrate == -1) {
            videoBitrate = iArr[3];
        }
        int i = 4;
        float f = iArr[4];
        int i2 = iArr[6];
        long j = iArr[5];
        int i3 = iArr[7];
        if (Build.VERSION.SDK_INT < 18) {
            try {
                selectCodec = MediaController.selectCodec("video/avc");
            } catch (Exception unused) {
            }
            if (selectCodec == null) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("no codec info for video/avc");
                }
                return null;
            }
            String name = selectCodec.getName();
            if (!name.equals("OMX.google.h264.encoder") && !name.equals("OMX.ST.VFM.H264Enc") && !name.equals("OMX.Exynos.avc.enc") && !name.equals("OMX.MARVELL.VIDEO.HW.CODA7542ENCODER") && !name.equals("OMX.MARVELL.VIDEO.H264ENCODER") && !name.equals("OMX.k3.video.encoder.avc") && !name.equals("OMX.TI.DUCATI1.VIDEO.H264E")) {
                if (MediaController.selectColorFormat(selectCodec, "video/avc") == 0) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("no color format for video/avc");
                    }
                    return null;
                }
            }
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("unsupported encoder = " + name);
            }
            return null;
        }
        VideoEditedInfo videoEditedInfo = new VideoEditedInfo();
        videoEditedInfo.startTime = -1L;
        videoEditedInfo.endTime = -1L;
        videoEditedInfo.bitrate = videoBitrate;
        videoEditedInfo.originalPath = str;
        videoEditedInfo.framerate = i3;
        videoEditedInfo.estimatedDuration = (long) Math.ceil(f);
        int i4 = iArr[1];
        videoEditedInfo.originalWidth = i4;
        videoEditedInfo.resultWidth = i4;
        int i5 = iArr[2];
        videoEditedInfo.originalHeight = i5;
        videoEditedInfo.resultHeight = i5;
        videoEditedInfo.rotationValue = iArr[8];
        videoEditedInfo.originalDuration = f * 1000.0f;
        float max = Math.max(i4, i5);
        float f2 = 640.0f;
        if (max <= 1280.0f) {
            i = max > 854.0f ? 3 : max > 640.0f ? 2 : 1;
        }
        int round = Math.round(DownloadController.getInstance(UserConfig.selectedAccount).getMaxVideoBitrate() / (100.0f / i));
        if (round > i) {
            round = i;
        }
        if (new File(str).length() < 1048576000) {
            if (round != i || Math.max(videoEditedInfo.originalWidth, videoEditedInfo.originalHeight) > 1280) {
                if (round == 1) {
                    f2 = 432.0f;
                } else if (round != 2) {
                    f2 = round != 3 ? 1280.0f : 848.0f;
                }
                int i6 = videoEditedInfo.originalWidth;
                int i7 = videoEditedInfo.originalHeight;
                float f3 = f2 / (i6 > i7 ? i6 : i7);
                videoEditedInfo.resultWidth = Math.round((i6 * f3) / 2.0f) * 2;
                videoEditedInfo.resultHeight = Math.round((videoEditedInfo.originalHeight * f3) / 2.0f) * 2;
                z = true;
            } else {
                z = false;
            }
            videoBitrate = MediaController.makeVideoBitrate(videoEditedInfo.originalHeight, videoEditedInfo.originalWidth, videoBitrate, videoEditedInfo.resultHeight, videoEditedInfo.resultWidth);
        } else {
            z = false;
        }
        if (!z) {
            videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
            videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
            videoEditedInfo.bitrate = videoBitrate;
        } else {
            videoEditedInfo.bitrate = videoBitrate;
        }
        long j2 = ((float) j) + (((f / 1000.0f) * videoBitrate) / 8.0f);
        videoEditedInfo.estimatedSize = j2;
        if (j2 == 0) {
            videoEditedInfo.estimatedSize = 1L;
        }
        return videoEditedInfo;
    }

    public static void prepareSendingVideo(AccountInstance accountInstance, String str, VideoEditedInfo videoEditedInfo, long j, MessageObject messageObject, MessageObject messageObject2, CharSequence charSequence, ArrayList<TLRPC$MessageEntity> arrayList, int i, MessageObject messageObject3, boolean z, int i2, boolean z2) {
        if (str == null || str.length() == 0) {
            return;
        }
        new Thread(new SendMessagesHelper$$ExternalSyntheticLambda73(videoEditedInfo, str, j, i, accountInstance, charSequence, messageObject3, messageObject, messageObject2, arrayList, z, i2, z2)).start();
    }

    /* JADX WARN: Removed duplicated region for block: B:100:0x027f  */
    /* JADX WARN: Removed duplicated region for block: B:121:0x02e4  */
    /* JADX WARN: Removed duplicated region for block: B:124:0x02f4  */
    /* JADX WARN: Removed duplicated region for block: B:131:0x0333  */
    /* JADX WARN: Removed duplicated region for block: B:132:0x0339  */
    /* JADX WARN: Removed duplicated region for block: B:135:0x033e  */
    /* JADX WARN: Removed duplicated region for block: B:137:0x0345  */
    /* JADX WARN: Removed duplicated region for block: B:53:0x0120  */
    /* JADX WARN: Removed duplicated region for block: B:93:0x024a  */
    /* JADX WARN: Removed duplicated region for block: B:96:0x0266  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingVideo$91(VideoEditedInfo videoEditedInfo, String str, long j, int i, AccountInstance accountInstance, CharSequence charSequence, MessageObject messageObject, MessageObject messageObject2, MessageObject messageObject3, ArrayList arrayList, boolean z, int i2, boolean z2) {
        String str2;
        long j2;
        int i3;
        String str3;
        TLRPC$TL_document tLRPC$TL_document;
        TLRPC$TL_document tLRPC$TL_document2;
        String str4;
        Bitmap bitmap;
        String str5;
        String str6;
        TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo;
        int i4;
        int i5;
        String str7 = str;
        VideoEditedInfo createCompressionSettings = videoEditedInfo != null ? videoEditedInfo : createCompressionSettings(str);
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        boolean z3 = createCompressionSettings != null && createCompressionSettings.roundVideo;
        if (createCompressionSettings != null || str7.endsWith("mp4") || z3) {
            File file = new File(str7);
            String str8 = str7 + file.length() + "_" + file.lastModified();
            long j3 = 0;
            if (createCompressionSettings != null) {
                if (!z3) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(str8);
                    sb.append(createCompressionSettings.estimatedDuration);
                    sb.append("_");
                    sb.append(createCompressionSettings.startTime);
                    sb.append("_");
                    sb.append(createCompressionSettings.endTime);
                    sb.append(createCompressionSettings.muted ? "_m" : "");
                    str8 = sb.toString();
                    if (createCompressionSettings.resultWidth != createCompressionSettings.originalWidth) {
                        str8 = str8 + "_" + createCompressionSettings.resultWidth;
                    }
                }
                long j4 = createCompressionSettings.startTime;
                if (j4 >= 0) {
                    j3 = j4;
                }
            }
            String str9 = str8;
            long j5 = j3;
            if (!isEncryptedDialog && i == 0 && (createCompressionSettings == null || (createCompressionSettings.filterState == null && createCompressionSettings.paintPath == null && createCompressionSettings.mediaEntities == null && createCompressionSettings.cropState == null))) {
                Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str9, !isEncryptedDialog ? 2 : 5);
                if (sentFile != null && (sentFile[0] instanceof TLRPC$TL_document)) {
                    tLRPC$TL_document = (TLRPC$TL_document) sentFile[0];
                    j2 = j5;
                    str2 = str9;
                    i3 = 2;
                    ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str, null, j2);
                    str3 = (String) sentFile[1];
                    if (tLRPC$TL_document != null) {
                        Bitmap createVideoThumbnailAtTime = createVideoThumbnailAtTime(str7, j2);
                        if (createVideoThumbnailAtTime == null) {
                            createVideoThumbnailAtTime = createVideoThumbnail(str7, 1);
                        }
                        Bitmap bitmap2 = createVideoThumbnailAtTime;
                        int i6 = (isEncryptedDialog || i != 0) ? 90 : 320;
                        float f = i6;
                        TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(bitmap2, f, f, i6 > 90 ? 80 : 55, isEncryptedDialog);
                        if (bitmap2 != null && scaleAndSaveImage != null) {
                            if (z3) {
                                if (isEncryptedDialog) {
                                    bitmap2 = Bitmap.createScaledBitmap(bitmap2, 90, 90, true);
                                    int i7 = Build.VERSION.SDK_INT;
                                    Utilities.blurBitmap(bitmap2, 7, i7 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Utilities.blurBitmap(bitmap2, 7, i7 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Utilities.blurBitmap(bitmap2, 7, i7 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Object[] objArr = new Object[i3];
                                    objArr[0] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    objArr[1] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    str6 = String.format(scaleAndSaveImage.location.volume_id + "_" + scaleAndSaveImage.location.local_id + "@%d_%d_b2", objArr);
                                } else {
                                    Utilities.blurBitmap(bitmap2, 3, Build.VERSION.SDK_INT < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Object[] objArr2 = new Object[i3];
                                    objArr2[0] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    objArr2[1] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    str6 = String.format(scaleAndSaveImage.location.volume_id + "_" + scaleAndSaveImage.location.local_id + "@%d_%d_b", objArr2);
                                }
                                TLRPC$TL_document tLRPC$TL_document3 = new TLRPC$TL_document();
                                if (scaleAndSaveImage != null) {
                                    tLRPC$TL_document3.thumbs.add(scaleAndSaveImage);
                                    tLRPC$TL_document3.flags |= 1;
                                }
                                tLRPC$TL_document3.file_reference = new byte[0];
                                tLRPC$TL_document3.mime_type = "video/mp4";
                                accountInstance.getUserConfig().saveConfig(false);
                                if (!isEncryptedDialog) {
                                    if (accountInstance.getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                                        return;
                                    }
                                    tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                } else {
                                    tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                    tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                }
                                tLRPC$TL_documentAttributeVideo.round_message = z3;
                                tLRPC$TL_document3.attributes.add(tLRPC$TL_documentAttributeVideo);
                                if (createCompressionSettings == null && createCompressionSettings.needConvert()) {
                                    if (createCompressionSettings.muted) {
                                        tLRPC$TL_document3.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                        fillVideoAttribute(str7, tLRPC$TL_documentAttributeVideo, createCompressionSettings);
                                        createCompressionSettings.originalWidth = tLRPC$TL_documentAttributeVideo.w;
                                        createCompressionSettings.originalHeight = tLRPC$TL_documentAttributeVideo.h;
                                    } else {
                                        tLRPC$TL_documentAttributeVideo.duration = (int) (createCompressionSettings.estimatedDuration / 1000);
                                    }
                                    int i8 = createCompressionSettings.rotationValue;
                                    MediaController.CropState cropState = createCompressionSettings.cropState;
                                    if (cropState != null) {
                                        i5 = cropState.transformWidth;
                                        i4 = cropState.transformHeight;
                                        i8 += cropState.transformRotation;
                                    } else {
                                        i5 = createCompressionSettings.resultWidth;
                                        i4 = createCompressionSettings.resultHeight;
                                    }
                                    if (i8 == 90 || i8 == 270) {
                                        tLRPC$TL_documentAttributeVideo.w = i4;
                                        tLRPC$TL_documentAttributeVideo.h = i5;
                                    } else {
                                        tLRPC$TL_documentAttributeVideo.w = i5;
                                        tLRPC$TL_documentAttributeVideo.h = i4;
                                    }
                                    tLRPC$TL_document3.size = createCompressionSettings.estimatedSize;
                                } else {
                                    if (file.exists()) {
                                        tLRPC$TL_document3.size = (int) file.length();
                                    }
                                    fillVideoAttribute(str7, tLRPC$TL_documentAttributeVideo, null);
                                }
                                bitmap = bitmap2;
                                str4 = str6;
                                tLRPC$TL_document2 = tLRPC$TL_document3;
                            } else {
                                bitmap2 = null;
                            }
                        }
                        str6 = null;
                        TLRPC$TL_document tLRPC$TL_document32 = new TLRPC$TL_document();
                        if (scaleAndSaveImage != null) {
                        }
                        tLRPC$TL_document32.file_reference = new byte[0];
                        tLRPC$TL_document32.mime_type = "video/mp4";
                        accountInstance.getUserConfig().saveConfig(false);
                        if (!isEncryptedDialog) {
                        }
                        tLRPC$TL_documentAttributeVideo.round_message = z3;
                        tLRPC$TL_document32.attributes.add(tLRPC$TL_documentAttributeVideo);
                        if (createCompressionSettings == null) {
                        }
                        if (file.exists()) {
                        }
                        fillVideoAttribute(str7, tLRPC$TL_documentAttributeVideo, null);
                        bitmap = bitmap2;
                        str4 = str6;
                        tLRPC$TL_document2 = tLRPC$TL_document32;
                    } else {
                        bitmap = null;
                        tLRPC$TL_document2 = tLRPC$TL_document;
                        str4 = null;
                    }
                    if (createCompressionSettings != null && createCompressionSettings.needConvert()) {
                        File file2 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + ".mp4");
                        SharedConfig.saveConfig();
                        str7 = file2.getAbsolutePath();
                    }
                    HashMap hashMap = new HashMap();
                    String charSequence2 = charSequence == null ? charSequence.toString() : "";
                    str5 = str2;
                    if (str5 != null) {
                        hashMap.put("originalPath", str5);
                    }
                    if (str3 != null) {
                        hashMap.put("parentObject", str3);
                    }
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda5(bitmap, str4, messageObject, accountInstance, createCompressionSettings, tLRPC$TL_document2, str7, hashMap, str3, j, messageObject2, messageObject3, charSequence2, arrayList, z, i2, i));
                    return;
                }
            }
            j2 = j5;
            str2 = str9;
            i3 = 2;
            tLRPC$TL_document = null;
            str3 = null;
            if (tLRPC$TL_document != null) {
            }
            if (createCompressionSettings != null) {
                File file22 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + ".mp4");
                SharedConfig.saveConfig();
                str7 = file22.getAbsolutePath();
            }
            HashMap hashMap2 = new HashMap();
            if (charSequence == null) {
            }
            str5 = str2;
            if (str5 != null) {
            }
            if (str3 != null) {
            }
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda5(bitmap, str4, messageObject, accountInstance, createCompressionSettings, tLRPC$TL_document2, str7, hashMap2, str3, j, messageObject2, messageObject3, charSequence2, arrayList, z, i2, i));
            return;
        }
        prepareSendingDocumentInternal(accountInstance, str, str, null, null, j, messageObject2, messageObject3, charSequence, arrayList, messageObject, null, false, z2, z, i2, null);
    }

    public static /* synthetic */ void lambda$prepareSendingVideo$90(Bitmap bitmap, String str, MessageObject messageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str2, HashMap hashMap, String str3, long j, MessageObject messageObject2, MessageObject messageObject3, String str4, ArrayList arrayList, boolean z, int i, int i2) {
        if (bitmap != null && str != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, videoEditedInfo, tLRPC$TL_document, str2, hashMap, false, str3);
        } else {
            accountInstance.getSendMessagesHelper().sendMessage(tLRPC$TL_document, videoEditedInfo, str2, j, messageObject2, messageObject3, str4, arrayList, null, hashMap, z, i, i2, str3, null);
        }
    }
}
