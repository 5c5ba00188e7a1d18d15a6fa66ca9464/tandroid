package org.telegram.ui.Cells;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.Keyframe;
import android.animation.ObjectAnimator;
import android.animation.PropertyValuesHolder;
import android.animation.ValueAnimator;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.res.ColorStateList;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.ColorFilter;
import android.graphics.ColorMatrix;
import android.graphics.ColorMatrixColorFilter;
import android.graphics.LinearGradient;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.PorterDuffXfermode;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.Region;
import android.graphics.Shader;
import android.graphics.Typeface;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.GradientDrawable;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.Layout;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.Spanned;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.text.TextUtils;
import android.text.style.CharacterStyle;
import android.text.style.ClickableSpan;
import android.text.style.LeadingMarginSpan;
import android.text.style.URLSpan;
import android.util.Pair;
import android.util.Property;
import android.util.SparseArray;
import android.util.StateSet;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.view.ViewStructure;
import android.view.Window;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityManager;
import android.view.accessibility.AccessibilityNodeInfo;
import android.view.accessibility.AccessibilityNodeProvider;
import android.view.animation.OvershootInterpolator;
import android.widget.Toast;
import androidx.core.content.ContextCompat;
import androidx.core.graphics.ColorUtils;
import androidx.core.math.MathUtils;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.concurrent.atomic.AtomicReference;
import org.telegram.PhoneFormat.PhoneFormat;
import org.telegram.messenger.AccountInstance;
import org.telegram.messenger.AndroidUtilities;
import org.telegram.messenger.ApplicationLoader;
import org.telegram.messenger.ChatMessageSharedResources;
import org.telegram.messenger.ChatObject;
import org.telegram.messenger.ContactsController;
import org.telegram.messenger.DialogObject;
import org.telegram.messenger.DocumentObject;
import org.telegram.messenger.DownloadController;
import org.telegram.messenger.Emoji;
import org.telegram.messenger.FileLoader;
import org.telegram.messenger.FileLog;
import org.telegram.messenger.FlagSecureReason;
import org.telegram.messenger.ImageLoader;
import org.telegram.messenger.ImageLocation;
import org.telegram.messenger.ImageReceiver;
import org.telegram.messenger.LiteMode;
import org.telegram.messenger.LocaleController;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MediaDataController;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.R;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.SharedConfig;
import org.telegram.messenger.SvgHelper;
import org.telegram.messenger.UserConfig;
import org.telegram.messenger.UserObject;
import org.telegram.messenger.Utilities;
import org.telegram.messenger.VideoEditedInfo;
import org.telegram.messenger.WebFile;
import org.telegram.messenger.browser.Browser;
import org.telegram.messenger.video.VideoPlayerRewinder;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC$Chat;
import org.telegram.tgnet.TLRPC$ChatPhoto;
import org.telegram.tgnet.TLRPC$Document;
import org.telegram.tgnet.TLRPC$DocumentAttribute;
import org.telegram.tgnet.TLRPC$EncryptedChat;
import org.telegram.tgnet.TLRPC$FileLocation;
import org.telegram.tgnet.TLRPC$GeoPoint;
import org.telegram.tgnet.TLRPC$KeyboardButton;
import org.telegram.tgnet.TLRPC$Message;
import org.telegram.tgnet.TLRPC$MessageEntity;
import org.telegram.tgnet.TLRPC$MessageFwdHeader;
import org.telegram.tgnet.TLRPC$MessageMedia;
import org.telegram.tgnet.TLRPC$MessagePeerReaction;
import org.telegram.tgnet.TLRPC$MessageReplies;
import org.telegram.tgnet.TLRPC$MessageReplyHeader;
import org.telegram.tgnet.TLRPC$PageBlock;
import org.telegram.tgnet.TLRPC$Peer;
import org.telegram.tgnet.TLRPC$PhoneCallDiscardReason;
import org.telegram.tgnet.TLRPC$Photo;
import org.telegram.tgnet.TLRPC$PhotoSize;
import org.telegram.tgnet.TLRPC$Poll;
import org.telegram.tgnet.TLRPC$PollAnswer;
import org.telegram.tgnet.TLRPC$PollResults;
import org.telegram.tgnet.TLRPC$Reaction;
import org.telegram.tgnet.TLRPC$ReactionCount;
import org.telegram.tgnet.TLRPC$ReplyMarkup;
import org.telegram.tgnet.TLRPC$TL_channelAdminLogEvent;
import org.telegram.tgnet.TLRPC$TL_channelAdminLogEventActionEditMessage;
import org.telegram.tgnet.TLRPC$TL_documentAttributeAudio;
import org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize;
import org.telegram.tgnet.TLRPC$TL_documentAttributeVideo;
import org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC$TL_forumTopic;
import org.telegram.tgnet.TLRPC$TL_game;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonCallback;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonRequestGeoLocation;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonRequestPeer;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonRow;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonSwitchInline;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonUrl;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonUrlAuth;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonWebView;
import org.telegram.tgnet.TLRPC$TL_messageActionPhoneCall;
import org.telegram.tgnet.TLRPC$TL_messageEmpty;
import org.telegram.tgnet.TLRPC$TL_messageExtendedMediaPreview;
import org.telegram.tgnet.TLRPC$TL_messageMediaContact;
import org.telegram.tgnet.TLRPC$TL_messageMediaGame;
import org.telegram.tgnet.TLRPC$TL_messageMediaGeoLive;
import org.telegram.tgnet.TLRPC$TL_messageMediaGiveaway;
import org.telegram.tgnet.TLRPC$TL_messageMediaGiveawayResults;
import org.telegram.tgnet.TLRPC$TL_messageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_messageMediaPoll;
import org.telegram.tgnet.TLRPC$TL_messageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_messageReactions;
import org.telegram.tgnet.TLRPC$TL_messages_stickerSet;
import org.telegram.tgnet.TLRPC$TL_page;
import org.telegram.tgnet.TLRPC$TL_pageBlockCollage;
import org.telegram.tgnet.TLRPC$TL_pageBlockSlideshow;
import org.telegram.tgnet.TLRPC$TL_peerChannel;
import org.telegram.tgnet.TLRPC$TL_peerChat;
import org.telegram.tgnet.TLRPC$TL_peerColor;
import org.telegram.tgnet.TLRPC$TL_peerUser;
import org.telegram.tgnet.TLRPC$TL_phoneCallDiscardReasonBusy;
import org.telegram.tgnet.TLRPC$TL_phoneCallDiscardReasonMissed;
import org.telegram.tgnet.TLRPC$TL_photo;
import org.telegram.tgnet.TLRPC$TL_photoSize;
import org.telegram.tgnet.TLRPC$TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC$TL_photoStrippedSize;
import org.telegram.tgnet.TLRPC$TL_pollAnswerVoters;
import org.telegram.tgnet.TLRPC$TL_reactionEmoji;
import org.telegram.tgnet.TLRPC$TL_replyInlineMarkup;
import org.telegram.tgnet.TLRPC$TL_user;
import org.telegram.tgnet.TLRPC$TL_webDocument;
import org.telegram.tgnet.TLRPC$TL_webPage;
import org.telegram.tgnet.TLRPC$TL_webPageAttributeStickerSet;
import org.telegram.tgnet.TLRPC$TL_webPageAttributeStory;
import org.telegram.tgnet.TLRPC$TL_webPageAttributeTheme;
import org.telegram.tgnet.TLRPC$ThemeSettings;
import org.telegram.tgnet.TLRPC$User;
import org.telegram.tgnet.TLRPC$UserProfilePhoto;
import org.telegram.tgnet.TLRPC$VideoSize;
import org.telegram.tgnet.TLRPC$WebDocument;
import org.telegram.tgnet.TLRPC$WebPage;
import org.telegram.tgnet.TLRPC$WebPageAttribute;
import org.telegram.tgnet.tl.TL_stories$StoryItem;
import org.telegram.tgnet.tl.TL_stories$TL_storyItemDeleted;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.AvatarSpan;
import org.telegram.ui.CachedStaticLayout;
import org.telegram.ui.Cells.BaseCell;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.Cells.DialogCell;
import org.telegram.ui.Cells.TextSelectionHelper;
import org.telegram.ui.ChatActivity;
import org.telegram.ui.Components.AnimatedEmojiDrawable;
import org.telegram.ui.Components.AnimatedEmojiSpan;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.AnimatedFloat;
import org.telegram.ui.Components.AnimatedNumberLayout;
import org.telegram.ui.Components.AnimationProperties;
import org.telegram.ui.Components.AudioVisualizerDrawable;
import org.telegram.ui.Components.AvatarDrawable;
import org.telegram.ui.Components.BackgroundGradientDrawable;
import org.telegram.ui.Components.ButtonBounce;
import org.telegram.ui.Components.CheckBoxBase;
import org.telegram.ui.Components.ClipRoundedDrawable;
import org.telegram.ui.Components.CubicBezierInterpolator;
import org.telegram.ui.Components.EmptyStubSpan;
import org.telegram.ui.Components.FloatSeekBarAccessibilityDelegate;
import org.telegram.ui.Components.Forum.MessageTopicButton;
import org.telegram.ui.Components.ForwardBackground;
import org.telegram.ui.Components.InfiniteProgress;
import org.telegram.ui.Components.LinkPath;
import org.telegram.ui.Components.LinkSpanDrawable;
import org.telegram.ui.Components.LoadingDrawable;
import org.telegram.ui.Components.MessageBackgroundDrawable;
import org.telegram.ui.Components.MotionBackgroundDrawable;
import org.telegram.ui.Components.MsgClockDrawable;
import org.telegram.ui.Components.Point;
import org.telegram.ui.Components.Premium.boosts.BoostCounterSpan;
import org.telegram.ui.Components.Premium.boosts.cells.msg.GiveawayMessageCell;
import org.telegram.ui.Components.Premium.boosts.cells.msg.GiveawayResultsMessageCell;
import org.telegram.ui.Components.QuoteHighlight;
import org.telegram.ui.Components.RLottieDrawable;
import org.telegram.ui.Components.RadialProgress2;
import org.telegram.ui.Components.Reactions.ReactionsLayoutInBubble;
import org.telegram.ui.Components.RecyclerListView;
import org.telegram.ui.Components.ReplyMessageLine;
import org.telegram.ui.Components.RoundVideoPlayingDrawable;
import org.telegram.ui.Components.SeekBar;
import org.telegram.ui.Components.SeekBarAccessibilityDelegate;
import org.telegram.ui.Components.SeekBarWaveform;
import org.telegram.ui.Components.SizeNotifierFrameLayout;
import org.telegram.ui.Components.SlotsDrawable;
import org.telegram.ui.Components.StaticLayoutEx;
import org.telegram.ui.Components.StickerSetLinkIcon;
import org.telegram.ui.Components.Text;
import org.telegram.ui.Components.TextStyleSpan;
import org.telegram.ui.Components.TimerParticles;
import org.telegram.ui.Components.TranscribeButton;
import org.telegram.ui.Components.TypefaceSpan;
import org.telegram.ui.Components.URLSpanBotCommand;
import org.telegram.ui.Components.URLSpanBrowser;
import org.telegram.ui.Components.URLSpanMono;
import org.telegram.ui.Components.URLSpanNoUnderline;
import org.telegram.ui.Components.VideoForwardDrawable;
import org.telegram.ui.Components.spoilers.SpoilerEffect;
import org.telegram.ui.Components.spoilers.SpoilerEffect2;
import org.telegram.ui.PhotoViewer;
import org.telegram.ui.PinchToZoomHelper;
import org.telegram.ui.SecretMediaViewer;
import org.telegram.ui.Stories.StoriesUtilities;
import org.telegram.ui.Stories.StoryViewer;
import org.telegram.ui.Stories.recorder.CaptionContainerView;
import org.telegram.ui.Stories.recorder.DominantColors;
import org.webrtc.MediaStreamTrack;
/* loaded from: classes4.dex */
public class ChatMessageCell extends BaseCell implements SeekBar.SeekBarDelegate, ImageReceiver.ImageReceiverDelegate, DownloadController.FileDownloadProgressListener, TextSelectionHelper.SelectableView, NotificationCenter.NotificationCenterDelegate {
    private static float[] radii = new float[8];
    private final boolean ALPHA_PROPERTY_WORKAROUND;
    public Property<ChatMessageCell, Float> ANIMATION_OFFSET_X;
    private int TAG;
    CharSequence accessibilityText;
    private boolean accessibilityTextContentUnread;
    private long accessibilityTextFileSize;
    private boolean accessibilityTextUnread;
    private SparseArray<Rect> accessibilityVirtualViewBounds;
    private int[] adaptiveEmojiColor;
    private ColorFilter[] adaptiveEmojiColorFilter;
    private int addedCaptionHeight;
    private boolean addedForTest;
    private int additionalTimeOffsetY;
    private CachedStaticLayout adminLayout;
    private boolean allowAssistant;
    private float alphaInternal;
    private int animateFromStatusDrawableParams;
    private boolean animatePollAnswer;
    private boolean animatePollAnswerAlpha;
    private boolean animatePollAvatars;
    private int animateToStatusDrawableParams;
    public AnimatedEmojiSpan.EmojiGroupedSpans animatedEmojiDescriptionStack;
    public AnimatedEmojiSpan.EmojiGroupedSpans animatedEmojiPollQuestion;
    public AnimatedEmojiSpan.EmojiGroupedSpans animatedEmojiReplyStack;
    public AnimatedEmojiSpan.EmojiGroupedSpans animatedEmojiStack;
    private int animatingDrawVideoImageButton;
    private float animatingDrawVideoImageButtonProgress;
    private float animatingLoadingProgressProgress;
    private int animatingNoSound;
    private boolean animatingNoSoundPlaying;
    private float animatingNoSoundProgress;
    private float animationOffsetX;
    private boolean animationRunning;
    private boolean attachedToWindow;
    private CachedStaticLayout authorLayout;
    private int authorLayoutLeft;
    private int authorLayoutWidth;
    private boolean autoPlayingMedia;
    private int availableTimeWidth;
    protected AvatarDrawable avatarDrawable;
    private ImageReceiver avatarImage;
    private boolean avatarPressed;
    private Theme.MessageDrawable.PathDrawParams backgroundCacheParams;
    private MessageBackgroundDrawable backgroundDrawable;
    private int backgroundDrawableBottom;
    private int backgroundDrawableLeft;
    private int backgroundDrawableRight;
    private int backgroundDrawableTop;
    private int backgroundHeight;
    private int backgroundWidth;
    private ImageReceiver blurredPhotoImage;
    private int blurredViewBottomOffset;
    private int blurredViewTopOffset;
    private RectF boostCounterBounds;
    private Drawable boostCounterLayoutSelector;
    private boolean boostCounterPressed;
    private int boostCounterSelectorColor;
    private BoostCounterSpan boostCounterSpan;
    private Path botButtonPath;
    private float[] botButtonRadii;
    private ArrayList<BotButton> botButtons;
    private HashMap<String, BotButton> botButtonsByData;
    private HashMap<String, BotButton> botButtonsByPosition;
    private String botButtonsLayout;
    private boolean bottomNearToSet;
    private int buttonPressed;
    private int buttonState;
    private int buttonX;
    private int buttonY;
    private final boolean canDrawBackgroundInParent;
    private boolean canStreamVideo;
    private int captionFullWidth;
    private int captionHeight;
    public MessageObject.TextLayoutBlocks captionLayout;
    private int captionOffsetX;
    private int captionWidth;
    private float captionX;
    public float captionY;
    public ChannelRecommendationsCell channelRecommendationsCell;
    private CheckBoxBase checkBox;
    private boolean checkBoxAnimationInProgress;
    private float checkBoxAnimationProgress;
    public int checkBoxTranslation;
    private boolean checkBoxVisible;
    private boolean checkOnlyButtonPressed;
    private int childPosition;
    private Paint clipPaint;
    private ButtonBounce closeSponsoredBounce;
    private RectF closeSponsoredBounds;
    private String closeTimeText;
    private int closeTimeWidth;
    private int commentArrowX;
    private AvatarDrawable[] commentAvatarDrawables;
    private ImageReceiver[] commentAvatarImages;
    private boolean[] commentAvatarImagesVisible;
    private boolean commentButtonPressed;
    private Rect commentButtonRect;
    private boolean commentDrawUnread;
    private CachedStaticLayout commentLayout;
    private LoadingDrawable commentLoading;
    private AnimatedNumberLayout commentNumberLayout;
    private int commentNumberWidth;
    private InfiniteProgress commentProgress;
    private float commentProgressAlpha;
    private long commentProgressLastUpadteTime;
    private int commentUnreadX;
    private int commentWidth;
    private int commentX;
    public MessageObject.TextLayoutBlocks computedCaptionLayout;
    public int computedGroupCaptionY;
    private AvatarDrawable contactAvatarDrawable;
    public ButtonBounce contactBounce;
    private ArrayList<InstantViewButton> contactButtons;
    public ReplyMessageLine contactLine;
    private boolean contactPressed;
    private RectF contactRect;
    private float controlsAlpha;
    public final int currentAccount;
    public Theme.MessageDrawable currentBackgroundDrawable;
    private Theme.MessageDrawable currentBackgroundSelectedDrawable;
    private CharSequence currentCaption;
    private TLRPC$Chat currentChat;
    private int currentFocusedVirtualView;
    private TLRPC$Chat currentForwardChannel;
    private String currentForwardName;
    private String currentForwardNameString;
    private TLRPC$User currentForwardUser;
    private int currentMapProvider;
    private MessageObject currentMessageObject;
    private MessageObject.GroupedMessages currentMessagesGroup;
    private Object currentNameStatus;
    public AnimatedEmojiDrawable.SwapAnimatedEmojiDrawable currentNameStatusDrawable;
    private String currentNameString;
    private TLRPC$FileLocation currentPhoto;
    private String currentPhotoFilter;
    private String currentPhotoFilterThumb;
    private ImageLocation currentPhotoLocation;
    private TLRPC$PhotoSize currentPhotoObject;
    private TLRPC$PhotoSize currentPhotoObjectThumb;
    private BitmapDrawable currentPhotoObjectThumbStripped;
    private ImageLocation currentPhotoThumbLocation;
    private MessageObject.GroupedMessagePosition currentPosition;
    private String currentRepliesString;
    private TLRPC$PhotoSize currentReplyPhoto;
    private float currentSelectedBackgroundAlpha;
    private CharSequence currentTimeString;
    private String currentUnlockString;
    private String currentUrl;
    private TLRPC$User currentUser;
    private TLRPC$User currentViaBotUser;
    private String currentViewsString;
    private WebFile currentWebFile;
    private ChatMessageCellDelegate delegate;
    private RectF deleteProgressRect;
    private CachedStaticLayout descriptionLayout;
    private int descriptionLayoutLeft;
    private int descriptionLayoutWidth;
    private int descriptionX;
    private int descriptionY;
    private Runnable diceFinishCallback;
    private boolean disallowLongPress;
    private CachedStaticLayout docTitleLayout;
    private int docTitleOffsetX;
    private int docTitleWidth;
    private TLRPC$Document documentAttach;
    private int documentAttachType;
    private boolean drawBackground;
    private boolean drawCommentButton;
    private boolean drawCommentNumber;
    private boolean drawContact;
    private boolean drawContactAdd;
    private boolean drawContactSendMessage;
    private boolean drawContactView;
    public boolean drawForBlur;
    private boolean drawForwardedName;
    public boolean drawFromPinchToZoom;
    private boolean drawImageButton;
    private boolean drawInstantView;
    public int drawInstantViewType;
    private boolean drawMediaCheckBox;
    private boolean drawName;
    private boolean drawNameLayout;
    public boolean drawPhotoImage;
    public boolean drawPinnedBottom;
    public boolean drawPinnedTop;
    private boolean drawRadialCheckBackground;
    private boolean drawSelectionBackground;
    private int drawSideButton;
    private int drawSideButton2;
    private boolean drawTime;
    private float drawTimeX;
    private float drawTimeY;
    private boolean drawTopic;
    private boolean drawVideoImageButton;
    private boolean drawVideoSize;
    public boolean drawingToBitmap;
    private int drawnContactButtonsFlag;
    private Paint drillHolePaint;
    private Path drillHolePath;
    private CachedStaticLayout durationLayout;
    private int durationWidth;
    private boolean edited;
    boolean enterTransitionInProgress;
    public ExpiredStoryView expiredStoryView;
    private ColorMatrixColorFilter fancyBlurFilter;
    private boolean firstCircleLength;
    private int firstVisibleBlockNum;
    private FlagSecureReason flagSecure;
    private boolean flipImage;
    private boolean forceNotDrawTime;
    private Drawable foreverDrawable;
    private int foreverDrawableColor;
    private AvatarSpan forwardAvatar;
    private ForwardBackground forwardBg;
    private boolean forwardBotPressed;
    private int forwardHeight;
    private int forwardNameCenterX;
    private final float[] forwardNameOffsetX;
    private boolean forwardNamePressed;
    private float forwardNameX;
    private int forwardNameY;
    private final CachedStaticLayout[] forwardedNameLayout;
    private int forwardedNameWidth;
    private boolean frozen;
    private boolean fullyDraw;
    private boolean gamePreviewPressed;
    public final GiveawayMessageCell giveawayMessageCell;
    public final GiveawayResultsMessageCell giveawayResultsMessageCell;
    private Drawable gradientDrawable;
    private LinearGradient gradientShader;
    private boolean groupPhotoInvisible;
    private MessageObject.GroupedMessages groupedMessagesToSet;
    private boolean hadLongPress;
    public boolean hasDiscussion;
    private boolean hasEmbed;
    private boolean hasGamePreview;
    private boolean hasInvoicePreview;
    private boolean hasLinkPreview;
    private int hasMiniProgress;
    private boolean hasNewLineForTime;
    private boolean hasOldCaptionPreview;
    private boolean hasPsaHint;
    public boolean hasReplyQuote;
    private int highlightCaptionToSetEnd;
    private int highlightCaptionToSetStart;
    private LinkPath highlightPath;
    private long highlightPathStart;
    private int highlightProgress;
    private boolean highlightedQuote;
    private float hintButtonProgress;
    private boolean hintButtonVisible;
    private int imageBackgroundColor;
    private int imageBackgroundGradientColor1;
    private int imageBackgroundGradientColor2;
    private int imageBackgroundGradientColor3;
    private int imageBackgroundGradientRotation;
    private float imageBackgroundIntensity;
    private int imageBackgroundSideColor;
    private int imageBackgroundSideWidth;
    private boolean imageDrawn;
    private boolean imagePressed;
    boolean imageReceiversAttachState;
    boolean imageReceiversVisibleState;
    private boolean inLayout;
    private CachedStaticLayout infoLayout;
    private int infoWidth;
    private int infoX;
    private ButtonBounce instantButtonBounce;
    private LoadingDrawable instantButtonLoading;
    private boolean instantButtonPressed;
    private RectF instantButtonRect;
    public Drawable instantDrawable;
    public int instantDrawableColor;
    private Paint instantLinkArrowPaint;
    private Path instantLinkArrowPath;
    private boolean instantPressed;
    private int instantTextLeftX;
    private boolean instantTextNewLine;
    private int instantTextX;
    public String instantViewButtonText;
    private CachedStaticLayout instantViewLayout;
    private float instantViewLayoutLeft;
    private float instantViewLayoutWidth;
    private int instantWidth;
    private Runnable invalidateCallback;
    private Runnable invalidateRunnable;
    private boolean invalidateSpoilersParent;
    private boolean invalidatesParent;
    public boolean isAvatarVisible;
    public boolean isBlurred;
    public boolean isBot;
    public boolean isChat;
    private boolean isCheckPressed;
    public boolean isForum;
    public boolean isForumGeneral;
    private boolean isHighlighted;
    private boolean isHighlightedAnimated;
    public boolean isMegagroup;
    public boolean isPinned;
    public boolean isPinnedChat;
    private boolean isPlayingRound;
    private boolean isPressed;
    public boolean isRepliesChat;
    public boolean isReplyQuote;
    private boolean isRoundVideo;
    public boolean isSavedChat;
    public boolean isSavedPreviewChat;
    private boolean isSmallImage;
    private boolean isSpoilerRevealing;
    public boolean isThreadChat;
    private boolean isThreadPost;
    private boolean isTitleLabelPressed;
    private boolean isUpdating;
    private int keyboardHeight;
    private long lastAnimationTime;
    private long lastCheckBoxAnimationTime;
    private long lastControlsAlphaChangeTime;
    private int lastDeleteDate;
    private float lastDrawingAudioProgress;
    private int lastHeight;
    private long lastHighlightProgressTime;
    private long lastLoadingSizeTotal;
    private long lastNamesAnimationTime;
    private TLRPC$Poll lastPoll;
    private long lastPollCloseTime;
    private ArrayList<TLRPC$TL_pollAnswerVoters> lastPollResults;
    private int lastPollResultsVoters;
    private String lastPostAuthor;
    private TLRPC$TL_messageReactions lastReactions;
    private int lastRepliesCount;
    private TLRPC$Message lastReplyMessage;
    private long lastSeekUpdateTime;
    private int lastSendState;
    int lastSize;
    private double lastTime;
    private float lastTouchX;
    private float lastTouchY;
    private boolean lastTranslated;
    private int lastViewsCount;
    private int lastVisibleBlockNum;
    private int lastWidth;
    private int layoutHeight;
    private int layoutWidth;
    private int linkBlockNum;
    public ReplyMessageLine linkLine;
    public boolean linkPreviewAbove;
    private ButtonBounce linkPreviewBounce;
    public int linkPreviewHeight;
    private boolean linkPreviewPressed;
    private Drawable linkPreviewSelector;
    public int linkPreviewSelectorColor;
    private int linkPreviewY;
    private int linkSelectionBlockNum;
    public long linkedChatId;
    private LinkSpanDrawable.LinkCollector links;
    private CachedStaticLayout loadingProgressLayout;
    private long loadingProgressLayoutHash;
    private boolean locationExpired;
    private ImageReceiver locationImageReceiver;
    private Drawable locationLoadingThumb;
    public boolean makeVisibleAfterChange;
    private boolean mediaBackground;
    private CheckBoxBase mediaCheckBox;
    private int mediaOffsetY;
    private SpoilerEffect mediaSpoilerEffect;
    private SpoilerEffect2 mediaSpoilerEffect2;
    private Integer mediaSpoilerEffect2Index;
    private Path mediaSpoilerPath;
    private float[] mediaSpoilerRadii;
    private float mediaSpoilerRevealMaxRadius;
    private float mediaSpoilerRevealProgress;
    private float mediaSpoilerRevealX;
    private float mediaSpoilerRevealY;
    private boolean mediaWasInvisible;
    private MessageObject messageObjectToSet;
    private int miniButtonPressed;
    private int miniButtonState;
    private MotionBackgroundDrawable motionBackgroundDrawable;
    private CachedStaticLayout nameLayout;
    private boolean nameLayoutPressed;
    private Drawable nameLayoutSelector;
    private int nameLayoutSelectorColor;
    private int nameLayoutWidth;
    private float nameOffsetX;
    private boolean nameStatusPressed;
    private Drawable nameStatusSelector;
    private int nameStatusSelectorColor;
    private int nameWidth;
    private float nameX;
    private float nameY;
    private int namesOffset;
    private boolean needNewVisiblePart;
    public boolean needReplyImage;
    private int noSoundCenterX;
    private Paint onceClearPaint;
    private RLottieDrawable onceFire;
    private CaptionContainerView.PeriodDrawable oncePeriod;
    private Paint onceRadialCutPaint;
    private Paint onceRadialPaint;
    private Paint onceRadialStrokePaint;
    private boolean otherPressed;
    private int otherX;
    private int otherY;
    private int overideShouldDrawTimeOnMedia;
    private AudioVisualizerDrawable overridenAudioVisualizer;
    private long overridenDuration;
    public int parentBoundsBottom;
    public float parentBoundsTop;
    private int parentHeight;
    public float parentViewTopOffset;
    private int parentWidth;
    private CachedStaticLayout performerLayout;
    private int performerX;
    private ImageReceiver photoImage;
    private boolean photoImageOutOfBounds;
    private boolean photoNotSet;
    private TLObject photoParentObject;
    private CachedStaticLayout photosCountLayout;
    private int photosCountWidth;
    public boolean pinnedBottom;
    public boolean pinnedTop;
    private float pollAnimationProgress;
    private float pollAnimationProgressTime;
    private AvatarDrawable[] pollAvatarDrawables;
    private ImageReceiver[] pollAvatarImages;
    private boolean[] pollAvatarImagesVisible;
    private ArrayList<PollButton> pollButtons;
    private CheckBoxBase[] pollCheckBox;
    private boolean pollClosed;
    private boolean pollHintPressed;
    private int pollHintX;
    private int pollHintY;
    private boolean pollInstantViewTouchesBottom;
    private boolean pollUnvoteInProgress;
    private boolean pollVoteInProgress;
    private int pollVoteInProgressNum;
    private boolean pollVoted;
    private int pressedBotButton;
    private MessageObject.TextLayoutBlock pressedCopyCode;
    private AnimatedEmojiSpan pressedEmoji;
    private LinkSpanDrawable pressedLink;
    private int pressedLinkType;
    private int pressedSideButton;
    private int[] pressedState;
    private int pressedVoteButton;
    private CharacterStyle progressLoadingLink;
    private LoadingDrawable progressLoadingLinkCurrentDrawable;
    private ArrayList<LoadingDrawableLocation> progressLoadingLinkDrawables;
    private float psaButtonProgress;
    private boolean psaButtonVisible;
    private int psaHelpX;
    private int psaHelpY;
    private boolean psaHintPressed;
    public QuoteHighlight quoteHighlight;
    public ReplyMessageLine quoteLine;
    private RadialProgress2 radialProgress;
    protected float radialProgressAlpha;
    public final ReactionsLayoutInBubble reactionsLayoutInBubble;
    private RectF rect;
    private Path rectPath;
    private CachedStaticLayout repliesLayout;
    private int repliesTextWidth;
    public ButtonBounce replyBounce;
    public float replyBounceX;
    public float replyBounceY;
    public float replyHeight;
    public ImageReceiver replyImageReceiver;
    public ReplyMessageLine replyLine;
    public CachedStaticLayout replyNameLayout;
    private int replyNameOffset;
    private int replyNameWidth;
    private boolean replyPanelIsForward;
    private boolean replyPressed;
    private AnimatedFloat replyPressedFloat;
    public Drawable replyQuoteDrawable;
    public int replyQuoteDrawableColor;
    private Path replyRoundRectPath;
    public Drawable replySelector;
    private boolean replySelectorCanBePressed;
    public int replySelectorColor;
    private boolean replySelectorPressed;
    public float replySelectorRadLeft;
    public float replySelectorRadRight;
    public RectF replySelectorRect;
    public List<SpoilerEffect> replySpoilers;
    private final Stack<SpoilerEffect> replySpoilersPool;
    public int replyStartX;
    public int replyStartY;
    private int replyTextHeight;
    public CachedStaticLayout replyTextLayout;
    public int replyTextOffset;
    public boolean replyTextRTL;
    private int replyTextWidth;
    private float replyTouchX;
    private float replyTouchY;
    private Theme.ResourcesProvider resourcesProvider;
    private float roundPlayingDrawableProgress;
    private float roundProgressAlpha;
    float roundSeekbarOutAlpha;
    float roundSeekbarOutProgress;
    int roundSeekbarTouched;
    private float roundToPauseProgress;
    private float roundToPauseProgress2;
    private AnimatedFloat roundVideoPlayPipFloat;
    private RoundVideoPlayingDrawable roundVideoPlayingDrawable;
    private final Path sPath;
    private boolean scheduledInvalidate;
    private Rect scrollRect;
    private SeekBar seekBar;
    private SeekBarAccessibilityDelegate seekBarAccessibilityDelegate;
    private SeekBarWaveform seekBarWaveform;
    private int seekBarWaveformTranslateX;
    private int seekBarX;
    private int seekBarY;
    float seekbarRoundX;
    float seekbarRoundY;
    private float selectedBackgroundProgress;
    private Paint selectionOverlayPaint;
    private final Drawable[] selectorDrawable;
    private int selectorDrawableColor;
    private int[] selectorDrawableMaskType;
    private final MaskDrawable[] selectorMaskDrawable;
    private AnimatorSet shakeAnimation;
    private ChatMessageSharedResources sharedResources;
    public boolean shouldCheckVisibleOnScreen;
    private Path sideButtonPath1;
    private Path sideButtonPath2;
    private float[] sideButtonPathCorners1;
    private float[] sideButtonPathCorners2;
    private boolean sideButtonPressed;
    private float sideStartX;
    private float sideStartY;
    public int signWidth;
    private CachedStaticLayout siteNameLayout;
    private float siteNameLayoutWidth;
    private float siteNameLeft;
    private int siteNameWidth;
    private boolean skipFrameUpdate;
    private float slidingOffsetX;
    private CachedStaticLayout songLayout;
    private int songX;
    private SpoilerEffect spoilerPressed;
    private AtomicReference<CachedStaticLayout> spoilersPatchedReplyTextLayout;
    private boolean statusDrawableAnimationInProgress;
    private ValueAnimator statusDrawableAnimator;
    private float statusDrawableProgress;
    private StickerSetLinkIcon stickerSetIcons;
    private int substractBackgroundHeight;
    public int textX;
    public int textY;
    private float timeAlpha;
    private int timeAudioX;
    public CachedStaticLayout timeLayout;
    private boolean timePressed;
    private int timeTextWidth;
    private boolean timeWasInvisible;
    public int timeWidth;
    private int timeWidthAudio;
    public int timeX;
    private TimerParticles timerParticles;
    private AnimatedFloat timerParticlesAlpha;
    private float timerTransitionProgress;
    private ButtonBounce titleLabelBounce;
    private CachedStaticLayout titleLabelLayout;
    private float titleLabelLayoutHeight;
    private float titleLabelLayoutWidth;
    private float titleLabelX;
    private float titleLabelY;
    private CachedStaticLayout titleLayout;
    private int titleLayoutLeft;
    private int titleLayoutWidth;
    private float toSeekBarProgress;
    private boolean topNearToSet;
    private MessageTopicButton topicButton;
    private long totalChangeTime;
    private int totalCommentWidth;
    public int totalHeight;
    private int totalVisibleBlocksCount;
    public TranscribeButton transcribeButton;
    private float transcribeX;
    private float transcribeY;
    public final TransitionParams transitionParams;
    float transitionYOffsetForDrawables;
    private LoadingDrawable translationLoadingDrawable;
    private ArrayList<MessageObject.TextLayoutBlock> translationLoadingDrawableText;
    private AnimatedFloat translationLoadingFloat;
    private LinkPath translationLoadingPath;
    private float unlockAlpha;
    private CachedStaticLayout unlockLayout;
    private SpoilerEffect unlockSpoilerEffect;
    private Path unlockSpoilerPath;
    private float[] unlockSpoilerRadii;
    private int unlockTextWidth;
    private float unlockX;
    private float unlockY;
    private int unmovedTextX;
    private ArrayList<LinkPath> urlPathCache;
    private ArrayList<LinkPath> urlPathSelection;
    private boolean useSeekBarWaveform;
    private boolean useTranscribeButton;
    private int viaNameWidth;
    private boolean viaOnly;
    private TypefaceSpan viaSpan1;
    private TypefaceSpan viaSpan2;
    private int viaWidth;
    private boolean vibrateOnPollVote;
    private int videoButtonPressed;
    private int videoButtonX;
    private int videoButtonY;
    VideoForwardDrawable videoForwardDrawable;
    private CachedStaticLayout videoInfoLayout;
    VideoPlayerRewinder videoPlayerRewinder;
    private RadialProgress2 videoRadialProgress;
    private float viewTop;
    private CachedStaticLayout viewsLayout;
    private int viewsTextWidth;
    private int visibleHeight;
    private boolean visibleOnScreen;
    private int visibleParent;
    private float visibleParentOffset;
    private float visibleTop;
    private float voteCurrentCircleLength;
    private float voteCurrentProgressTime;
    private long voteLastUpdateTime;
    private float voteRadOffset;
    private boolean voteRisingCircleLength;
    private boolean wasLayout;
    private boolean wasPinned;
    private boolean wasSending;
    private boolean wasTranscriptionOpen;
    private int widthBeforeNewTimeLine;
    private int widthForButtons;
    private boolean willRemoved;
    private boolean wouldBeInPip;

    private boolean intersect(float f, float f2, float f3, float f4) {
        return f <= f3 ? f2 >= f3 : f <= f4;
    }

    @Override // org.telegram.messenger.ImageReceiver.ImageReceiverDelegate
    public /* synthetic */ void didSetImageBitmap(int i, String str, Drawable drawable) {
        ImageReceiver.ImageReceiverDelegate.-CC.$default$didSetImageBitmap(this, i, str, drawable);
    }

    protected boolean isWidthAdaptive() {
        return false;
    }

    public RadialProgress2 getRadialProgress() {
        return this.radialProgress;
    }

    public void setEnterTransitionInProgress(boolean z) {
        this.enterTransitionInProgress = z;
        invalidate();
    }

    public ReactionsLayoutInBubble.ReactionButton getReactionButton(ReactionsLayoutInBubble.VisibleReaction visibleReaction) {
        return this.reactionsLayoutInBubble.getReactionButton(visibleReaction);
    }

    public MessageObject getPrimaryMessageObject() {
        MessageObject messageObject = this.currentMessageObject;
        MessageObject findPrimaryMessageObject = (messageObject == null || this.currentMessagesGroup == null || !messageObject.hasValidGroupId()) ? null : this.currentMessagesGroup.findPrimaryMessageObject();
        return findPrimaryMessageObject != null ? findPrimaryMessageObject : this.currentMessageObject;
    }

    @Override // org.telegram.messenger.NotificationCenter.NotificationCenterDelegate
    public void didReceivedNotification(int i, int i2, Object... objArr) {
        MessageObject messageObject;
        if (i == NotificationCenter.startSpoilers) {
            setSpoilersSuppressed(false);
        } else if (i == NotificationCenter.stopSpoilers) {
            setSpoilersSuppressed(true);
        } else if (i == NotificationCenter.userInfoDidLoad) {
            TLRPC$User tLRPC$User = this.currentUser;
            if (tLRPC$User == null || tLRPC$User.id != ((Long) objArr[0]).longValue()) {
                return;
            }
            setAvatar(this.currentMessageObject);
        } else if (i == NotificationCenter.emojiLoaded) {
            invalidate();
        } else if (i != NotificationCenter.didUpdatePremiumGiftStickers || (messageObject = this.currentMessageObject) == null) {
        } else {
            TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
            if ((tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGiveaway) || (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGiveawayResults)) {
                setMessageObject(messageObject, this.currentMessagesGroup, this.pinnedBottom, this.pinnedTop);
            }
        }
    }

    public void setAvatar(MessageObject messageObject) {
        if (messageObject == null) {
            return;
        }
        if (this.isAvatarVisible) {
            Drawable drawable = messageObject.customAvatarDrawable;
            if (drawable != null) {
                this.avatarImage.setImageBitmap(drawable);
                return;
            }
            TLRPC$User tLRPC$User = this.currentUser;
            if (tLRPC$User != null) {
                TLRPC$UserProfilePhoto tLRPC$UserProfilePhoto = tLRPC$User.photo;
                if (tLRPC$UserProfilePhoto != null) {
                    this.currentPhoto = tLRPC$UserProfilePhoto.photo_small;
                } else {
                    this.currentPhoto = null;
                }
                this.avatarDrawable.setInfo(this.currentAccount, tLRPC$User);
                this.avatarImage.setForUserOrChat(this.currentUser, this.avatarDrawable, null, LiteMode.isEnabled(LiteMode.FLAGS_CHAT), 1, false);
                return;
            }
            TLRPC$Chat tLRPC$Chat = this.currentChat;
            if (tLRPC$Chat != null) {
                TLRPC$ChatPhoto tLRPC$ChatPhoto = tLRPC$Chat.photo;
                if (tLRPC$ChatPhoto != null) {
                    this.currentPhoto = tLRPC$ChatPhoto.photo_small;
                } else {
                    this.currentPhoto = null;
                }
                this.avatarDrawable.setInfo(this.currentAccount, tLRPC$Chat);
                this.avatarImage.setForUserOrChat(this.currentChat, this.avatarDrawable);
                return;
            } else if (messageObject.isSponsored()) {
                TLRPC$Photo tLRPC$Photo = messageObject.sponsoredPhoto;
                if (tLRPC$Photo != null) {
                    this.avatarImage.setImage(ImageLocation.getForPhoto(FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo.sizes, AndroidUtilities.dp(50.0f), false, null, true), messageObject.sponsoredPhoto), "50_50", this.avatarDrawable, null, null, 0);
                    return;
                }
                return;
            } else {
                this.currentPhoto = null;
                this.avatarDrawable.setInfo(messageObject.getFromChatId(), null, null);
                this.avatarImage.setImage(null, null, this.avatarDrawable, null, null, 0);
                return;
            }
        }
        this.currentPhoto = null;
    }

    public void setSpoilersSuppressed(boolean z) {
        for (int i = 0; i < this.replySpoilers.size(); i++) {
            this.replySpoilers.get(i).setSuppressUpdates(z);
        }
        MessageObject.TextLayoutBlocks textLayoutBlocks = this.captionLayout;
        if (textLayoutBlocks != null && textLayoutBlocks.textLayoutBlocks != null) {
            for (int i2 = 0; i2 < this.captionLayout.textLayoutBlocks.size(); i2++) {
                MessageObject.TextLayoutBlock textLayoutBlock = this.captionLayout.textLayoutBlocks.get(i2);
                for (int i3 = 0; i3 < textLayoutBlock.spoilers.size(); i3++) {
                    textLayoutBlock.spoilers.get(i3).setSuppressUpdates(z);
                }
            }
        }
        if (getMessageObject() == null || getMessageObject().textLayoutBlocks == null) {
            return;
        }
        for (int i4 = 0; i4 < getMessageObject().textLayoutBlocks.size(); i4++) {
            MessageObject.TextLayoutBlock textLayoutBlock2 = getMessageObject().textLayoutBlocks.get(i4);
            for (int i5 = 0; i5 < textLayoutBlock2.spoilers.size(); i5++) {
                textLayoutBlock2.spoilers.get(i5).setSuppressUpdates(z);
            }
        }
    }

    public boolean hasSpoilers() {
        ArrayList<MessageObject.TextLayoutBlock> arrayList;
        MessageObject.TextLayoutBlocks textLayoutBlocks = this.captionLayout;
        if (textLayoutBlocks != null && (arrayList = textLayoutBlocks.textLayoutBlocks) != null) {
            Iterator<MessageObject.TextLayoutBlock> it = arrayList.iterator();
            while (it.hasNext()) {
                if (!it.next().spoilers.isEmpty()) {
                    return true;
                }
            }
        }
        if (getMessageObject() == null || getMessageObject().textLayoutBlocks == null) {
            return false;
        }
        Iterator<MessageObject.TextLayoutBlock> it2 = getMessageObject().textLayoutBlocks.iterator();
        while (it2.hasNext()) {
            if (!it2.next().spoilers.isEmpty()) {
                return true;
            }
        }
        return false;
    }

    private void updateSpoilersVisiblePart(int i, int i2) {
        ArrayList<MessageObject.TextLayoutBlock> arrayList;
        MessageObject.TextLayoutBlocks textLayoutBlocks = this.captionLayout;
        if (textLayoutBlocks != null && (arrayList = textLayoutBlocks.textLayoutBlocks) != null) {
            Iterator<MessageObject.TextLayoutBlock> it = arrayList.iterator();
            while (it.hasNext()) {
                MessageObject.TextLayoutBlock next = it.next();
                for (SpoilerEffect spoilerEffect : next.spoilers) {
                    spoilerEffect.setVisibleBounds(0.0f, (i - next.textYOffset) - this.captionX, getWidth(), (i2 - next.textYOffset) - this.captionY);
                }
            }
        }
        CachedStaticLayout cachedStaticLayout = this.replyTextLayout;
        if (cachedStaticLayout != null) {
            float height = (-this.replyStartY) - cachedStaticLayout.layout.getHeight();
            for (SpoilerEffect spoilerEffect2 : this.replySpoilers) {
                spoilerEffect2.setVisibleBounds(0.0f, i + height, getWidth(), i2 + height);
            }
        }
        if (getMessageObject() == null || getMessageObject().textLayoutBlocks == null) {
            return;
        }
        Iterator<MessageObject.TextLayoutBlock> it2 = getMessageObject().textLayoutBlocks.iterator();
        while (it2.hasNext()) {
            MessageObject.TextLayoutBlock next2 = it2.next();
            for (SpoilerEffect spoilerEffect3 : next2.spoilers) {
                spoilerEffect3.setVisibleBounds(0.0f, (i - next2.textYOffset) - this.textY, getWidth(), (i2 - next2.textYOffset) - this.textY);
            }
        }
    }

    public void setScrimReaction(Integer num) {
        this.reactionsLayoutInBubble.setScrimReaction(num);
    }

    public void drawScrimReaction(Canvas canvas, Integer num) {
        MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
        if (groupedMessagePosition != null) {
            int i = groupedMessagePosition.flags;
            if ((i & 8) == 0 || (i & 1) == 0) {
                return;
            }
        }
        ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
        if (reactionsLayoutInBubble.isSmall) {
            return;
        }
        reactionsLayoutInBubble.draw(canvas, this.transitionParams.animateChangeProgress, num);
    }

    public boolean checkUnreadReactions(float f, int i) {
        if (this.reactionsLayoutInBubble.hasUnreadReactions) {
            float y = getY();
            ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
            float f2 = y + reactionsLayoutInBubble.y;
            return f2 > f && (f2 + ((float) reactionsLayoutInBubble.height)) - ((float) AndroidUtilities.dp(16.0f)) < ((float) i);
        }
        return false;
    }

    public void markReactionsAsRead() {
        this.reactionsLayoutInBubble.hasUnreadReactions = false;
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null) {
            return;
        }
        messageObject.markReactionsAsRead();
    }

    public void setVisibleOnScreen(boolean z, float f, float f2) {
        if (this.visibleOnScreen != z) {
            this.visibleOnScreen = z;
            checkImageReceiversAttachState();
            if (z) {
                invalidate();
            }
        }
        float imageY = f - this.photoImage.getImageY();
        float measuredHeight = f2 - (getMeasuredHeight() - this.photoImage.getImageY2());
        float imageHeight = this.photoImage.getImageHeight();
        if (imageY > 0.0f) {
            imageHeight -= imageY;
        }
        if (measuredHeight > 0.0f) {
            imageHeight -= measuredHeight;
        }
        ImageReceiver imageReceiver = this.photoImage;
        boolean z2 = imageHeight / imageReceiver.getImageHeight() < 0.25f;
        this.skipFrameUpdate = z2;
        imageReceiver.setSkipUpdateFrame(z2);
    }

    public void setParentBounds(float f, int i) {
        this.parentBoundsTop = f;
        this.parentBoundsBottom = i;
        if (this.photoImageOutOfBounds) {
            float y = getY() + this.photoImage.getImageY();
            if (this.photoImage.getImageHeight() + y < this.parentBoundsTop || y > this.parentBoundsBottom) {
                return;
            }
            invalidate();
        }
    }

    /* loaded from: classes4.dex */
    public interface ChatMessageCellDelegate {
        boolean canDrawOutboundsContent();

        boolean canPerformActions();

        void didLongPress(ChatMessageCell chatMessageCell, float f, float f2);

        void didLongPressBotButton(ChatMessageCell chatMessageCell, TLRPC$KeyboardButton tLRPC$KeyboardButton);

        boolean didLongPressChannelAvatar(ChatMessageCell chatMessageCell, TLRPC$Chat tLRPC$Chat, int i, float f, float f2);

        boolean didLongPressUserAvatar(ChatMessageCell chatMessageCell, TLRPC$User tLRPC$User, float f, float f2);

        void didPressAboutRevenueSharingAds();

        boolean didPressAnimatedEmoji(ChatMessageCell chatMessageCell, AnimatedEmojiSpan animatedEmojiSpan);

        void didPressBoostCounter(ChatMessageCell chatMessageCell);

        void didPressBotButton(ChatMessageCell chatMessageCell, TLRPC$KeyboardButton tLRPC$KeyboardButton);

        void didPressCancelSendButton(ChatMessageCell chatMessageCell);

        void didPressChannelAvatar(ChatMessageCell chatMessageCell, TLRPC$Chat tLRPC$Chat, int i, float f, float f2);

        void didPressChannelRecommendation(ChatMessageCell chatMessageCell, TLRPC$Chat tLRPC$Chat, boolean z);

        void didPressChannelRecommendationsClose(ChatMessageCell chatMessageCell);

        void didPressCodeCopy(ChatMessageCell chatMessageCell, MessageObject.TextLayoutBlock textLayoutBlock);

        void didPressCommentButton(ChatMessageCell chatMessageCell);

        void didPressExtendedMediaPreview(ChatMessageCell chatMessageCell, TLRPC$KeyboardButton tLRPC$KeyboardButton);

        void didPressGiveawayChatButton(ChatMessageCell chatMessageCell, int i);

        void didPressHiddenForward(ChatMessageCell chatMessageCell);

        void didPressHint(ChatMessageCell chatMessageCell, int i);

        void didPressImage(ChatMessageCell chatMessageCell, float f, float f2);

        void didPressInstantButton(ChatMessageCell chatMessageCell, int i);

        void didPressMoreChannelRecommendations(ChatMessageCell chatMessageCell);

        void didPressOther(ChatMessageCell chatMessageCell, float f, float f2);

        void didPressReaction(ChatMessageCell chatMessageCell, TLRPC$ReactionCount tLRPC$ReactionCount, boolean z);

        void didPressReplyMessage(ChatMessageCell chatMessageCell, int i);

        void didPressSideButton(ChatMessageCell chatMessageCell);

        void didPressSponsoredClose(ChatMessageCell chatMessageCell);

        void didPressSponsoredInfo(ChatMessageCell chatMessageCell, float f, float f2);

        void didPressTime(ChatMessageCell chatMessageCell);

        void didPressTopicButton(ChatMessageCell chatMessageCell);

        void didPressUrl(ChatMessageCell chatMessageCell, CharacterStyle characterStyle, boolean z);

        void didPressUserAvatar(ChatMessageCell chatMessageCell, TLRPC$User tLRPC$User, float f, float f2);

        void didPressUserStatus(ChatMessageCell chatMessageCell, TLRPC$User tLRPC$User, TLRPC$Document tLRPC$Document);

        void didPressViaBot(ChatMessageCell chatMessageCell, String str);

        void didPressViaBotNotInline(ChatMessageCell chatMessageCell, long j);

        void didPressVoteButtons(ChatMessageCell chatMessageCell, ArrayList<TLRPC$PollAnswer> arrayList, int i, int i2, int i3);

        void didPressWebPage(ChatMessageCell chatMessageCell, TLRPC$WebPage tLRPC$WebPage, String str, boolean z);

        void didStartVideoStream(MessageObject messageObject);

        boolean doNotShowLoadingReply(MessageObject messageObject);

        String getAdminRank(long j);

        PinchToZoomHelper getPinchToZoomHelper();

        String getProgressLoadingBotButtonUrl(ChatMessageCell chatMessageCell);

        CharacterStyle getProgressLoadingLink(ChatMessageCell chatMessageCell);

        TextSelectionHelper.ChatListTextSelectionHelper getTextSelectionHelper();

        boolean hasSelectedMessages();

        void invalidateBlur();

        boolean isLandscape();

        boolean isProgressLoading(ChatMessageCell chatMessageCell, int i);

        boolean isReplyOrSelf();

        boolean keyboardIsOpened();

        void needOpenWebView(MessageObject messageObject, String str, String str2, String str3, String str4, int i, int i2);

        boolean needPlayMessage(ChatMessageCell chatMessageCell, MessageObject messageObject, boolean z);

        void needReloadPolls();

        void needShowPremiumBulletin(int i);

        boolean onAccessibilityAction(int i, Bundle bundle);

        void onDiceFinished();

        void setShouldNotRepeatSticker(MessageObject messageObject);

        boolean shouldDrawThreadProgress(ChatMessageCell chatMessageCell);

        boolean shouldRepeatSticker(MessageObject messageObject);

        boolean shouldShowTopicButton(ChatMessageCell chatMessageCell);

        void videoTimerReached();

        /* loaded from: classes4.dex */
        public final /* synthetic */ class -CC {
            public static boolean $default$canDrawOutboundsContent(ChatMessageCellDelegate chatMessageCellDelegate) {
                return true;
            }

            public static boolean $default$canPerformActions(ChatMessageCellDelegate chatMessageCellDelegate) {
                return false;
            }

            public static void $default$didLongPress(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, float f, float f2) {
            }

            public static void $default$didLongPressBotButton(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
            }

            public static boolean $default$didLongPressChannelAvatar(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, TLRPC$Chat tLRPC$Chat, int i, float f, float f2) {
                return false;
            }

            public static boolean $default$didLongPressUserAvatar(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, TLRPC$User tLRPC$User, float f, float f2) {
                return false;
            }

            public static void $default$didPressAboutRevenueSharingAds(ChatMessageCellDelegate chatMessageCellDelegate) {
            }

            public static boolean $default$didPressAnimatedEmoji(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, AnimatedEmojiSpan animatedEmojiSpan) {
                return false;
            }

            public static void $default$didPressBoostCounter(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
            }

            public static void $default$didPressBotButton(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
            }

            public static void $default$didPressCancelSendButton(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
            }

            public static void $default$didPressChannelAvatar(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, TLRPC$Chat tLRPC$Chat, int i, float f, float f2) {
            }

            public static void $default$didPressChannelRecommendation(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, TLRPC$Chat tLRPC$Chat, boolean z) {
            }

            public static void $default$didPressChannelRecommendationsClose(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
            }

            public static void $default$didPressCodeCopy(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, MessageObject.TextLayoutBlock textLayoutBlock) {
            }

            public static void $default$didPressCommentButton(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
            }

            public static void $default$didPressExtendedMediaPreview(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
            }

            public static void $default$didPressGiveawayChatButton(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, int i) {
            }

            public static void $default$didPressHiddenForward(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
            }

            public static void $default$didPressHint(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, int i) {
            }

            public static void $default$didPressImage(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, float f, float f2) {
            }

            public static void $default$didPressInstantButton(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, int i) {
            }

            public static void $default$didPressMoreChannelRecommendations(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
            }

            public static void $default$didPressOther(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, float f, float f2) {
            }

            public static void $default$didPressReaction(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, TLRPC$ReactionCount tLRPC$ReactionCount, boolean z) {
            }

            public static void $default$didPressReplyMessage(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, int i) {
            }

            public static void $default$didPressSideButton(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
            }

            public static void $default$didPressSponsoredClose(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
            }

            public static void $default$didPressSponsoredInfo(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, float f, float f2) {
            }

            public static void $default$didPressTime(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
            }

            public static void $default$didPressTopicButton(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
            }

            public static void $default$didPressUrl(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, CharacterStyle characterStyle, boolean z) {
            }

            public static void $default$didPressUserAvatar(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, TLRPC$User tLRPC$User, float f, float f2) {
            }

            public static void $default$didPressUserStatus(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, TLRPC$User tLRPC$User, TLRPC$Document tLRPC$Document) {
            }

            public static void $default$didPressViaBot(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, String str) {
            }

            public static void $default$didPressViaBotNotInline(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, long j) {
            }

            public static void $default$didPressVoteButtons(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, ArrayList arrayList, int i, int i2, int i3) {
            }

            public static void $default$didStartVideoStream(ChatMessageCellDelegate chatMessageCellDelegate, MessageObject messageObject) {
            }

            public static String $default$getAdminRank(ChatMessageCellDelegate chatMessageCellDelegate, long j) {
                return null;
            }

            public static PinchToZoomHelper $default$getPinchToZoomHelper(ChatMessageCellDelegate chatMessageCellDelegate) {
                return null;
            }

            public static String $default$getProgressLoadingBotButtonUrl(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
                return null;
            }

            public static CharacterStyle $default$getProgressLoadingLink(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
                return null;
            }

            public static TextSelectionHelper.ChatListTextSelectionHelper $default$getTextSelectionHelper(ChatMessageCellDelegate chatMessageCellDelegate) {
                return null;
            }

            public static boolean $default$hasSelectedMessages(ChatMessageCellDelegate chatMessageCellDelegate) {
                return false;
            }

            public static void $default$invalidateBlur(ChatMessageCellDelegate chatMessageCellDelegate) {
            }

            public static boolean $default$isLandscape(ChatMessageCellDelegate chatMessageCellDelegate) {
                return false;
            }

            public static boolean $default$isProgressLoading(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, int i) {
                return false;
            }

            public static boolean $default$isReplyOrSelf(ChatMessageCellDelegate chatMessageCellDelegate) {
                return false;
            }

            public static boolean $default$keyboardIsOpened(ChatMessageCellDelegate chatMessageCellDelegate) {
                return false;
            }

            public static void $default$needOpenWebView(ChatMessageCellDelegate chatMessageCellDelegate, MessageObject messageObject, String str, String str2, String str3, String str4, int i, int i2) {
            }

            public static boolean $default$needPlayMessage(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell, MessageObject messageObject, boolean z) {
                return false;
            }

            public static void $default$needReloadPolls(ChatMessageCellDelegate chatMessageCellDelegate) {
            }

            public static void $default$needShowPremiumBulletin(ChatMessageCellDelegate chatMessageCellDelegate, int i) {
            }

            public static boolean $default$onAccessibilityAction(ChatMessageCellDelegate chatMessageCellDelegate, int i, Bundle bundle) {
                return false;
            }

            public static void $default$onDiceFinished(ChatMessageCellDelegate chatMessageCellDelegate) {
            }

            public static void $default$setShouldNotRepeatSticker(ChatMessageCellDelegate chatMessageCellDelegate, MessageObject messageObject) {
            }

            public static boolean $default$shouldDrawThreadProgress(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
                return false;
            }

            public static boolean $default$shouldRepeatSticker(ChatMessageCellDelegate chatMessageCellDelegate, MessageObject messageObject) {
                return true;
            }

            public static boolean $default$shouldShowTopicButton(ChatMessageCellDelegate chatMessageCellDelegate, ChatMessageCell chatMessageCell) {
                return false;
            }

            public static void $default$videoTimerReached(ChatMessageCellDelegate chatMessageCellDelegate) {
            }

            public static boolean $default$doNotShowLoadingReply(ChatMessageCellDelegate _this, MessageObject messageObject) {
                return messageObject != null && messageObject.getDialogId() == UserObject.REPLY_BOT;
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* loaded from: classes4.dex */
    public class BotButton {
        private int angle;
        private TLRPC$KeyboardButton button;
        private int height;
        private boolean isInviteButton;
        private long lastUpdateTime;
        private LoadingDrawable loadingDrawable;
        private int positionFlags;
        private ValueAnimator pressAnimator;
        private float pressT;
        private boolean pressed;
        private float progressAlpha;
        private Drawable selectorDrawable;
        private CachedStaticLayout title;
        private int width;
        private int x;
        private int y;

        private BotButton() {
        }

        static /* synthetic */ int access$3776(BotButton botButton, int i) {
            int i2 = i | botButton.positionFlags;
            botButton.positionFlags = i2;
            return i2;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void setPressed(boolean z) {
            ValueAnimator valueAnimator;
            if (this.pressed != z) {
                this.pressed = z;
                ChatMessageCell.this.invalidateOutbounds();
                if (z && (valueAnimator = this.pressAnimator) != null) {
                    valueAnimator.removeAllListeners();
                    this.pressAnimator.cancel();
                }
                if (z) {
                    return;
                }
                float f = this.pressT;
                if (f != 0.0f) {
                    ValueAnimator ofFloat = ValueAnimator.ofFloat(f, 0.0f);
                    this.pressAnimator = ofFloat;
                    ofFloat.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { // from class: org.telegram.ui.Cells.ChatMessageCell$BotButton$$ExternalSyntheticLambda0
                        @Override // android.animation.ValueAnimator.AnimatorUpdateListener
                        public final void onAnimationUpdate(ValueAnimator valueAnimator2) {
                            ChatMessageCell.BotButton.this.lambda$setPressed$0(valueAnimator2);
                        }
                    });
                    this.pressAnimator.addListener(new AnimatorListenerAdapter() { // from class: org.telegram.ui.Cells.ChatMessageCell.BotButton.1
                        @Override // android.animation.AnimatorListenerAdapter, android.animation.Animator.AnimatorListener
                        public void onAnimationEnd(Animator animator) {
                            super.onAnimationEnd(animator);
                            BotButton.this.pressAnimator = null;
                        }
                    });
                    this.pressAnimator.setInterpolator(new OvershootInterpolator(2.0f));
                    this.pressAnimator.setDuration(350L);
                    this.pressAnimator.start();
                }
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public /* synthetic */ void lambda$setPressed$0(ValueAnimator valueAnimator) {
            this.pressT = ((Float) valueAnimator.getAnimatedValue()).floatValue();
            ChatMessageCell.this.invalidateOutbounds();
        }

        public boolean hasPositionFlag(int i) {
            return (this.positionFlags & i) == i;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public float getPressScale() {
            if (this.pressed) {
                float f = this.pressT;
                if (f != 1.0f) {
                    float min = f + (Math.min(40.0f, 1000.0f / AndroidUtilities.screenRefreshRate) / 100.0f);
                    this.pressT = min;
                    this.pressT = Utilities.clamp(min, 1.0f, 0.0f);
                    ChatMessageCell.this.invalidateOutbounds();
                }
            }
            return ((1.0f - this.pressT) * 0.04f) + 0.96f;
        }
    }

    /* loaded from: classes4.dex */
    public static class PollButton {
        public AnimatedEmojiSpan.EmojiGroupedSpans animatedEmoji;
        private TLRPC$PollAnswer answer;
        private boolean chosen;
        private boolean correct;
        private int count;
        private float decimal;
        public int height;
        private int percent;
        private float percentProgress;
        private boolean prevChosen;
        private int prevPercent;
        private float prevPercentProgress;
        private CachedStaticLayout title;
        public int x;
        public int y;

        static /* synthetic */ int access$2412(PollButton pollButton, int i) {
            int i2 = pollButton.percent + i;
            pollButton.percent = i2;
            return i2;
        }

        static /* synthetic */ float access$3124(PollButton pollButton, float f) {
            float f2 = pollButton.decimal - f;
            pollButton.decimal = f2;
            return f2;
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* loaded from: classes4.dex */
    public static class InstantViewButton {
        private ButtonBounce buttonBounce;
        private float buttonWidth;
        private CachedStaticLayout layout;
        private final RectF rect;
        private Drawable selectorDrawable;
        private float textX;
        private int type;

        private InstantViewButton() {
            this.rect = new RectF();
        }

        static /* synthetic */ float access$5024(InstantViewButton instantViewButton, float f) {
            float f2 = instantViewButton.textX - f;
            instantViewButton.textX = f2;
            return f2;
        }
    }

    public boolean isCellAttachedToWindow() {
        return this.attachedToWindow;
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    /* loaded from: classes4.dex */
    public class LoadingDrawableLocation {
        int blockNum;
        LoadingDrawable drawable;

        LoadingDrawableLocation(ChatMessageCell chatMessageCell) {
        }
    }

    public ChatMessageCell(Context context, int i) {
        this(context, i, false, null, null);
    }

    public ChatMessageCell(Context context, int i, boolean z, ChatMessageSharedResources chatMessageSharedResources, Theme.ResourcesProvider resourcesProvider) {
        super(context);
        this.visibleOnScreen = true;
        this.reactionsLayoutInBubble = new ReactionsLayoutInBubble(this);
        this.giveawayMessageCell = new GiveawayMessageCell(this);
        this.giveawayResultsMessageCell = new GiveawayResultsMessageCell(this);
        this.scrollRect = new Rect();
        this.drawnContactButtonsFlag = 0;
        this.imageBackgroundGradientRotation = 45;
        this.selectorDrawable = new Drawable[2];
        this.selectorMaskDrawable = new MaskDrawable[2];
        this.selectorDrawableMaskType = new int[2];
        this.instantButtonRect = new RectF();
        this.pressedState = new int[]{16842910, 16842919};
        this.highlightCaptionToSetStart = -1;
        this.highlightCaptionToSetEnd = -1;
        this.deleteProgressRect = new RectF();
        this.rect = new RectF();
        this.foreverDrawableColor = -1;
        this.timeAlpha = 1.0f;
        this.controlsAlpha = 1.0f;
        this.links = new LinkSpanDrawable.LinkCollector(this);
        this.urlPathCache = new ArrayList<>();
        this.urlPathSelection = new ArrayList<>();
        this.rectPath = new Path();
        this.pollButtons = new ArrayList<>();
        this.botButtons = new ArrayList<>();
        this.botButtonPath = new Path();
        this.botButtonRadii = new float[8];
        this.botButtonsByData = new HashMap<>();
        this.botButtonsByPosition = new HashMap<>();
        this.isCheckPressed = true;
        this.drawBackground = true;
        this.backgroundWidth = 100;
        this.commentButtonRect = new Rect();
        this.spoilersPatchedReplyTextLayout = new AtomicReference<>();
        this.forwardedNameLayout = new CachedStaticLayout[2];
        this.forwardNameOffsetX = new float[2];
        this.drawTime = true;
        this.mediaSpoilerPath = new Path();
        this.mediaSpoilerRadii = new float[8];
        this.mediaSpoilerEffect = new SpoilerEffect();
        this.unlockAlpha = 1.0f;
        this.unlockSpoilerEffect = new SpoilerEffect();
        this.unlockSpoilerPath = new Path();
        this.unlockSpoilerRadii = new float[8];
        this.replySelectorRect = new RectF();
        this.ALPHA_PROPERTY_WORKAROUND = Build.VERSION.SDK_INT == 28;
        this.alphaInternal = 1.0f;
        this.transitionParams = new TransitionParams();
        this.roundVideoPlayPipFloat = new AnimatedFloat(this, 200L, CubicBezierInterpolator.EASE_OUT);
        this.diceFinishCallback = new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell.1
            @Override // java.lang.Runnable
            public void run() {
                if (ChatMessageCell.this.delegate != null) {
                    ChatMessageCell.this.delegate.onDiceFinished();
                }
            }
        };
        this.invalidateRunnable = new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell.2
            @Override // java.lang.Runnable
            public void run() {
                ChatMessageCell.this.checkLocationExpired();
                if (ChatMessageCell.this.locationExpired) {
                    ChatMessageCell.this.invalidate();
                    ChatMessageCell.this.scheduledInvalidate = false;
                    return;
                }
                ChatMessageCell chatMessageCell = ChatMessageCell.this;
                chatMessageCell.invalidate(((int) chatMessageCell.rect.left) - 5, ((int) ChatMessageCell.this.rect.top) - 5, ((int) ChatMessageCell.this.rect.right) + 5, ((int) ChatMessageCell.this.rect.bottom) + 5);
                if (ChatMessageCell.this.scheduledInvalidate) {
                    AndroidUtilities.runOnUIThread(ChatMessageCell.this.invalidateRunnable, 1000L);
                }
            }
        };
        this.accessibilityVirtualViewBounds = new SparseArray<>();
        this.currentFocusedVirtualView = -1;
        this.backgroundCacheParams = new Theme.MessageDrawable.PathDrawParams();
        this.replySpoilers = new ArrayList();
        this.replySpoilersPool = new Stack<>();
        this.sPath = new Path();
        this.overridenDuration = -1L;
        this.hadLongPress = false;
        this.radialProgressAlpha = 1.0f;
        this.ANIMATION_OFFSET_X = new Property<ChatMessageCell, Float>(this, Float.class, "animationOffsetX") { // from class: org.telegram.ui.Cells.ChatMessageCell.11
            @Override // android.util.Property
            public Float get(ChatMessageCell chatMessageCell) {
                return Float.valueOf(chatMessageCell.animationOffsetX);
            }

            @Override // android.util.Property
            public void set(ChatMessageCell chatMessageCell, Float f) {
                chatMessageCell.setAnimationOffsetX(f.floatValue());
            }
        };
        this.currentAccount = i;
        this.resourcesProvider = resourcesProvider;
        this.canDrawBackgroundInParent = z;
        this.sharedResources = chatMessageSharedResources;
        if (chatMessageSharedResources == null) {
            this.sharedResources = new ChatMessageSharedResources(context);
        }
        this.backgroundDrawable = new MessageBackgroundDrawable(this);
        ImageReceiver imageReceiver = new ImageReceiver();
        this.avatarImage = imageReceiver;
        imageReceiver.setAllowLoadingOnAttachedOnly(true);
        this.avatarImage.setRoundRadius(AndroidUtilities.dp(21.0f));
        this.avatarDrawable = new AvatarDrawable();
        ImageReceiver imageReceiver2 = new ImageReceiver(this);
        this.replyImageReceiver = imageReceiver2;
        imageReceiver2.setAllowLoadingOnAttachedOnly(true);
        this.replyImageReceiver.setRoundRadius(AndroidUtilities.dp(4.0f));
        ImageReceiver imageReceiver3 = new ImageReceiver(this);
        this.locationImageReceiver = imageReceiver3;
        imageReceiver3.setAllowLoadingOnAttachedOnly(true);
        this.locationImageReceiver.setRoundRadius(AndroidUtilities.dp(26.1f));
        this.TAG = DownloadController.getInstance(i).generateObserverTag();
        this.contactAvatarDrawable = new AvatarDrawable();
        ImageReceiver imageReceiver4 = new ImageReceiver(this);
        this.photoImage = imageReceiver4;
        imageReceiver4.setAllowLoadingOnAttachedOnly(true);
        this.photoImage.setUseRoundForThumbDrawable(true);
        this.photoImage.setDelegate(this);
        ImageReceiver imageReceiver5 = new ImageReceiver(this);
        this.blurredPhotoImage = imageReceiver5;
        imageReceiver5.setAllowLoadingOnAttachedOnly(true);
        this.blurredPhotoImage.setUseRoundForThumbDrawable(true);
        this.radialProgress = new RadialProgress2(this, resourcesProvider);
        RadialProgress2 radialProgress2 = new RadialProgress2(this, resourcesProvider);
        this.videoRadialProgress = radialProgress2;
        radialProgress2.setDrawBackground(false);
        this.videoRadialProgress.setCircleRadius(AndroidUtilities.dp(15.0f));
        SeekBar seekBar = new SeekBar(this) { // from class: org.telegram.ui.Cells.ChatMessageCell.3
            @Override // org.telegram.ui.Components.SeekBar
            protected void onTimestampUpdate(URLSpanNoUnderline uRLSpanNoUnderline) {
                ChatMessageCell.this.setHighlightedSpan(uRLSpanNoUnderline);
            }
        };
        this.seekBar = seekBar;
        seekBar.setDelegate(this);
        SeekBarWaveform seekBarWaveform = new SeekBarWaveform(context);
        this.seekBarWaveform = seekBarWaveform;
        seekBarWaveform.setDelegate(this);
        this.seekBarWaveform.setParentView(this);
        this.seekBarAccessibilityDelegate = new FloatSeekBarAccessibilityDelegate() { // from class: org.telegram.ui.Cells.ChatMessageCell.4
            @Override // org.telegram.ui.Components.FloatSeekBarAccessibilityDelegate
            public float getProgress() {
                if (ChatMessageCell.this.currentMessageObject.isMusic()) {
                    return ChatMessageCell.this.seekBar.getProgress();
                }
                if (ChatMessageCell.this.currentMessageObject.isVoice()) {
                    return ChatMessageCell.this.useSeekBarWaveform ? ChatMessageCell.this.seekBarWaveform.getProgress() : ChatMessageCell.this.seekBar.getProgress();
                } else if (ChatMessageCell.this.currentMessageObject.isRoundVideo()) {
                    return ChatMessageCell.this.currentMessageObject.audioProgress;
                } else {
                    return 0.0f;
                }
            }

            @Override // org.telegram.ui.Components.FloatSeekBarAccessibilityDelegate
            public void setProgress(float f) {
                if (ChatMessageCell.this.currentMessageObject.isMusic()) {
                    ChatMessageCell.this.seekBar.setProgress(f);
                } else if (ChatMessageCell.this.currentMessageObject.isVoice()) {
                    if (ChatMessageCell.this.useSeekBarWaveform) {
                        ChatMessageCell.this.seekBarWaveform.setProgress(f);
                    } else {
                        ChatMessageCell.this.seekBar.setProgress(f);
                    }
                } else if (!ChatMessageCell.this.currentMessageObject.isRoundVideo()) {
                    return;
                } else {
                    if (ChatMessageCell.this.useSeekBarWaveform) {
                        if (ChatMessageCell.this.seekBarWaveform != null) {
                            ChatMessageCell.this.seekBarWaveform.setProgress(f);
                        }
                    } else if (ChatMessageCell.this.seekBar != null) {
                        ChatMessageCell.this.seekBar.setProgress(f);
                    }
                    ChatMessageCell.this.currentMessageObject.audioProgress = f;
                }
                ChatMessageCell.this.onSeekBarDrag(f);
                ChatMessageCell.this.invalidate();
            }
        };
        this.roundVideoPlayingDrawable = new RoundVideoPlayingDrawable(this, resourcesProvider);
        setImportantForAccessibility(1);
    }

    public void setResourcesProvider(Theme.ResourcesProvider resourcesProvider) {
        this.resourcesProvider = resourcesProvider;
        RadialProgress2 radialProgress2 = this.radialProgress;
        if (radialProgress2 != null) {
            radialProgress2.setResourcesProvider(resourcesProvider);
        }
        RadialProgress2 radialProgress22 = this.videoRadialProgress;
        if (radialProgress22 != null) {
            radialProgress22.setResourcesProvider(resourcesProvider);
        }
        RoundVideoPlayingDrawable roundVideoPlayingDrawable = this.roundVideoPlayingDrawable;
        if (roundVideoPlayingDrawable != null) {
            roundVideoPlayingDrawable.setResourcesProvider(resourcesProvider);
        }
    }

    public Theme.ResourcesProvider getResourcesProvider() {
        return this.resourcesProvider;
    }

    private void createPollUI() {
        if (this.pollAvatarImages != null) {
            return;
        }
        this.pollAvatarImages = new ImageReceiver[3];
        this.pollAvatarDrawables = new AvatarDrawable[3];
        this.pollAvatarImagesVisible = new boolean[3];
        int i = 0;
        while (true) {
            ImageReceiver[] imageReceiverArr = this.pollAvatarImages;
            if (i >= imageReceiverArr.length) {
                break;
            }
            imageReceiverArr[i] = new ImageReceiver(this);
            this.pollAvatarImages[i].setRoundRadius(AndroidUtilities.dp(8.0f));
            this.pollAvatarDrawables[i] = new AvatarDrawable();
            this.pollAvatarDrawables[i].setTextSize(AndroidUtilities.dp(22.0f));
            i++;
        }
        this.pollCheckBox = new CheckBoxBase[10];
        int i2 = 0;
        while (true) {
            CheckBoxBase[] checkBoxBaseArr = this.pollCheckBox;
            if (i2 >= checkBoxBaseArr.length) {
                return;
            }
            checkBoxBaseArr[i2] = new CheckBoxBase(this, 20, this.resourcesProvider);
            this.pollCheckBox[i2].setDrawUnchecked(false);
            this.pollCheckBox[i2].setBackgroundType(9);
            i2++;
        }
    }

    private void createCommentUI() {
        if (this.commentAvatarImages != null) {
            return;
        }
        this.commentAvatarImages = new ImageReceiver[3];
        this.commentAvatarDrawables = new AvatarDrawable[3];
        this.commentAvatarImagesVisible = new boolean[3];
        int i = 0;
        while (true) {
            ImageReceiver[] imageReceiverArr = this.commentAvatarImages;
            if (i >= imageReceiverArr.length) {
                return;
            }
            imageReceiverArr[i] = new ImageReceiver(this);
            this.commentAvatarImages[i].setRoundRadius(AndroidUtilities.dp(12.0f));
            this.commentAvatarDrawables[i] = new AvatarDrawable();
            this.commentAvatarDrawables[i].setTextSize(AndroidUtilities.dp(18.0f));
            i++;
        }
    }

    public void resetPressedLink(int i) {
        if (i != -1) {
            this.links.removeLinks(Integer.valueOf(i));
        } else {
            this.links.clear();
        }
        this.pressedEmoji = null;
        if (this.pressedLink != null) {
            if (this.pressedLinkType == i || i == -1) {
                this.pressedLink = null;
                this.pressedLinkType = -1;
                invalidate();
            }
        }
    }

    private void resetUrlPaths() {
        if (this.quoteHighlight != null) {
            this.quoteHighlight = null;
        }
        if (this.urlPathSelection.isEmpty()) {
            return;
        }
        this.urlPathCache.addAll(this.urlPathSelection);
        this.urlPathSelection.clear();
    }

    private LinkPath obtainNewUrlPath() {
        LinkPath linkPath;
        if (!this.urlPathCache.isEmpty()) {
            linkPath = this.urlPathCache.get(0);
            this.urlPathCache.remove(0);
        } else {
            linkPath = new LinkPath(true);
        }
        linkPath.reset();
        this.urlPathSelection.add(linkPath);
        return linkPath;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public int[] getRealSpanStartAndEnd(Spannable spannable, CharacterStyle characterStyle) {
        int i;
        int i2;
        boolean z;
        TextStyleSpan.TextStyleRun style;
        TLRPC$MessageEntity tLRPC$MessageEntity;
        if (!(characterStyle instanceof URLSpanBrowser) || (style = ((URLSpanBrowser) characterStyle).getStyle()) == null || (tLRPC$MessageEntity = style.urlEntity) == null) {
            i = 0;
            i2 = 0;
            z = false;
        } else {
            i2 = tLRPC$MessageEntity.offset;
            i = tLRPC$MessageEntity.length + i2;
            z = true;
        }
        if (!z) {
            i2 = spannable.getSpanStart(characterStyle);
            i = spannable.getSpanEnd(characterStyle);
        }
        return new int[]{i2, i};
    }

    private boolean checkAdminMotionEvent(MotionEvent motionEvent) {
        RectF rectF;
        ChatMessageCellDelegate chatMessageCellDelegate;
        Drawable drawable;
        boolean z = false;
        if (this.adminLayout == null || (rectF = this.boostCounterBounds) == null || (this.currentUser == null && this.currentChat == null)) {
            this.boostCounterPressed = false;
            return false;
        }
        boolean contains = rectF.contains((int) motionEvent.getX(), (int) motionEvent.getY());
        if (motionEvent.getAction() == 0) {
            SpannableString spannableString = new SpannableString(this.adminLayout.getText());
            BoostCounterSpan[] boostCounterSpanArr = (BoostCounterSpan[]) spannableString.getSpans(0, spannableString.length(), BoostCounterSpan.class);
            if (contains && boostCounterSpanArr != null && boostCounterSpanArr.length > 0) {
                z = true;
            }
            this.boostCounterPressed = z;
            if (z && (drawable = this.boostCounterLayoutSelector) != null) {
                if (Build.VERSION.SDK_INT >= 21) {
                    drawable.setHotspot((int) motionEvent.getX(), (int) motionEvent.getY());
                }
                this.boostCounterLayoutSelector.setState(this.pressedState);
            }
        } else if (motionEvent.getAction() == 1 || motionEvent.getAction() == 3) {
            if (motionEvent.getAction() == 1 && this.boostCounterPressed && (chatMessageCellDelegate = this.delegate) != null) {
                chatMessageCellDelegate.didPressBoostCounter(this);
            }
            Drawable drawable2 = this.boostCounterLayoutSelector;
            if (drawable2 != null) {
                drawable2.setState(StateSet.NOTHING);
            }
            this.boostCounterPressed = false;
        }
        return this.boostCounterPressed;
    }

    private boolean checkNameMotionEvent(MotionEvent motionEvent) {
        Drawable drawable;
        ChatMessageCellDelegate chatMessageCellDelegate;
        TLRPC$Chat tLRPC$Chat;
        int i;
        int i2;
        if (!this.drawNameLayout || this.nameLayout == null || (drawable = this.nameLayoutSelector) == null || (this.currentUser == null && this.currentChat == null)) {
            this.nameLayoutPressed = false;
            return false;
        }
        boolean contains = drawable.getBounds().contains((int) motionEvent.getX(), (int) motionEvent.getY());
        if (motionEvent.getAction() == 0) {
            this.nameLayoutPressed = contains;
            if (contains) {
                if (Build.VERSION.SDK_INT >= 21) {
                    this.nameLayoutSelector.setHotspot((int) motionEvent.getX(), (int) motionEvent.getY());
                }
                this.nameLayoutSelector.setState(this.pressedState);
            }
        } else if (motionEvent.getAction() == 1 || motionEvent.getAction() == 3) {
            if (motionEvent.getAction() == 1 && this.nameLayoutPressed && (chatMessageCellDelegate = this.delegate) != null) {
                if (this.viaOnly) {
                    TLRPC$User tLRPC$User = this.currentViaBotUser;
                    if (tLRPC$User != null && tLRPC$User.bot_inline_placeholder == null) {
                        chatMessageCellDelegate.didPressViaBotNotInline(this, tLRPC$User != null ? tLRPC$User.id : 0L);
                    } else {
                        chatMessageCellDelegate.didPressViaBot(this, tLRPC$User != null ? tLRPC$User.username : this.currentMessageObject.messageOwner.via_bot_name);
                    }
                } else {
                    TLRPC$User tLRPC$User2 = this.currentUser;
                    if (tLRPC$User2 != null) {
                        chatMessageCellDelegate.didPressUserAvatar(this, tLRPC$User2, motionEvent.getX(), motionEvent.getY());
                    } else {
                        TLRPC$Chat tLRPC$Chat2 = this.currentChat;
                        if (tLRPC$Chat2 != null) {
                            TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = this.currentMessageObject.messageOwner.fwd_from;
                            if (tLRPC$MessageFwdHeader != null) {
                                if (tLRPC$Chat2 == null && (tLRPC$MessageFwdHeader.flags & 16) != 0) {
                                    i2 = tLRPC$MessageFwdHeader.saved_from_msg_id;
                                    tLRPC$Chat = tLRPC$Chat2;
                                } else {
                                    i2 = tLRPC$MessageFwdHeader.channel_post;
                                    tLRPC$Chat = this.currentForwardChannel;
                                }
                                i = i2;
                            } else {
                                tLRPC$Chat = tLRPC$Chat2;
                                i = 0;
                            }
                            chatMessageCellDelegate.didPressChannelAvatar(this, tLRPC$Chat != null ? tLRPC$Chat : tLRPC$Chat2, i, this.lastTouchX, this.lastTouchY);
                        }
                    }
                }
            }
            this.nameLayoutSelector.setState(StateSet.NOTHING);
            this.nameLayoutPressed = false;
        }
        return this.nameLayoutPressed;
    }

    private boolean checkNameStatusMotionEvent(MotionEvent motionEvent) {
        if (!this.drawNameLayout || this.nameLayout == null || this.nameLayoutSelector == null || ((this.currentUser == null && this.currentChat == null) || this.currentNameStatus == null || this.currentNameStatusDrawable == null)) {
            this.nameStatusPressed = false;
            return false;
        }
        boolean contains = this.nameStatusSelector.getBounds().contains((int) motionEvent.getX(), (int) motionEvent.getY());
        if (motionEvent.getAction() == 0) {
            this.nameStatusPressed = contains;
            if (contains) {
                if (Build.VERSION.SDK_INT >= 21) {
                    this.nameStatusSelector.setHotspot((int) motionEvent.getX(), (int) motionEvent.getY());
                }
                this.nameStatusSelector.setState(this.pressedState);
            }
        } else if (motionEvent.getAction() == 1 || motionEvent.getAction() == 3) {
            if (motionEvent.getAction() == 1 && this.nameStatusPressed && this.delegate != null && this.currentUser != null) {
                this.delegate.didPressUserStatus(this, this.currentUser, this.currentNameStatusDrawable.getDrawable() instanceof AnimatedEmojiDrawable ? ((AnimatedEmojiDrawable) this.currentNameStatusDrawable.getDrawable()).getDocument() : null);
                invalidateOutbounds();
            }
            this.nameStatusSelector.setState(StateSet.NOTHING);
            this.nameStatusPressed = false;
        }
        return this.nameStatusPressed;
    }

    private void resetCodeSelectors() {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && messageObject.textLayoutBlocks != null) {
            for (int i = 0; i < this.currentMessageObject.textLayoutBlocks.size(); i++) {
                Drawable drawable = this.currentMessageObject.textLayoutBlocks.get(i).copySelector;
                if (drawable != null) {
                    drawable.setState(StateSet.NOTHING);
                }
            }
        }
        if (this.captionLayout != null) {
            for (int i2 = 0; i2 < this.captionLayout.textLayoutBlocks.size(); i2++) {
                Drawable drawable2 = this.captionLayout.textLayoutBlocks.get(i2).copySelector;
                if (drawable2 != null) {
                    drawable2.setState(StateSet.NOTHING);
                }
            }
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:166:0x031f A[Catch: Exception -> 0x035a, TryCatch #1 {Exception -> 0x035a, blocks: (B:42:0x008e, B:44:0x00a3, B:46:0x00a9, B:48:0x00b5, B:51:0x00bb, B:53:0x00c1, B:55:0x00d2, B:57:0x00dc, B:59:0x00e2, B:61:0x00e6, B:63:0x00ea, B:64:0x00ed, B:65:0x00f3, B:67:0x00fb, B:68:0x0102, B:70:0x010a, B:72:0x012a, B:74:0x0137, B:76:0x0147, B:82:0x0158, B:85:0x0164, B:87:0x0167, B:89:0x016d, B:95:0x0177, B:97:0x017d, B:99:0x0183, B:101:0x0189, B:103:0x018d, B:164:0x031b, B:105:0x0191, B:106:0x019e, B:108:0x01a2, B:110:0x01aa, B:112:0x01ce, B:114:0x01d3, B:116:0x01de, B:118:0x01e2, B:122:0x01f5, B:123:0x01fc, B:163:0x0310, B:162:0x030d, B:113:0x01d1, B:166:0x031f, B:168:0x0325, B:170:0x032b, B:172:0x0333, B:174:0x0339, B:175:0x033f, B:177:0x0343, B:179:0x034b, B:84:0x015b, B:80:0x014d, B:124:0x0200, B:126:0x0236, B:127:0x0238, B:129:0x0242, B:131:0x024e, B:134:0x0265, B:136:0x0268, B:139:0x0273, B:142:0x029a, B:132:0x0259, B:143:0x029d, B:145:0x02a3, B:147:0x02a7, B:149:0x02b3, B:152:0x02d2, B:154:0x02d5, B:157:0x02e0, B:150:0x02c2), top: B:187:0x008e, inners: #0 }] */
    /* JADX WARN: Removed duplicated region for block: B:95:0x0177 A[Catch: Exception -> 0x035a, TryCatch #1 {Exception -> 0x035a, blocks: (B:42:0x008e, B:44:0x00a3, B:46:0x00a9, B:48:0x00b5, B:51:0x00bb, B:53:0x00c1, B:55:0x00d2, B:57:0x00dc, B:59:0x00e2, B:61:0x00e6, B:63:0x00ea, B:64:0x00ed, B:65:0x00f3, B:67:0x00fb, B:68:0x0102, B:70:0x010a, B:72:0x012a, B:74:0x0137, B:76:0x0147, B:82:0x0158, B:85:0x0164, B:87:0x0167, B:89:0x016d, B:95:0x0177, B:97:0x017d, B:99:0x0183, B:101:0x0189, B:103:0x018d, B:164:0x031b, B:105:0x0191, B:106:0x019e, B:108:0x01a2, B:110:0x01aa, B:112:0x01ce, B:114:0x01d3, B:116:0x01de, B:118:0x01e2, B:122:0x01f5, B:123:0x01fc, B:163:0x0310, B:162:0x030d, B:113:0x01d1, B:166:0x031f, B:168:0x0325, B:170:0x032b, B:172:0x0333, B:174:0x0339, B:175:0x033f, B:177:0x0343, B:179:0x034b, B:84:0x015b, B:80:0x014d, B:124:0x0200, B:126:0x0236, B:127:0x0238, B:129:0x0242, B:131:0x024e, B:134:0x0265, B:136:0x0268, B:139:0x0273, B:142:0x029a, B:132:0x0259, B:143:0x029d, B:145:0x02a3, B:147:0x02a7, B:149:0x02b3, B:152:0x02d2, B:154:0x02d5, B:157:0x02e0, B:150:0x02c2), top: B:187:0x008e, inners: #0 }] */
    /* JADX WARN: Removed duplicated region for block: B:99:0x0183 A[Catch: Exception -> 0x035a, TryCatch #1 {Exception -> 0x035a, blocks: (B:42:0x008e, B:44:0x00a3, B:46:0x00a9, B:48:0x00b5, B:51:0x00bb, B:53:0x00c1, B:55:0x00d2, B:57:0x00dc, B:59:0x00e2, B:61:0x00e6, B:63:0x00ea, B:64:0x00ed, B:65:0x00f3, B:67:0x00fb, B:68:0x0102, B:70:0x010a, B:72:0x012a, B:74:0x0137, B:76:0x0147, B:82:0x0158, B:85:0x0164, B:87:0x0167, B:89:0x016d, B:95:0x0177, B:97:0x017d, B:99:0x0183, B:101:0x0189, B:103:0x018d, B:164:0x031b, B:105:0x0191, B:106:0x019e, B:108:0x01a2, B:110:0x01aa, B:112:0x01ce, B:114:0x01d3, B:116:0x01de, B:118:0x01e2, B:122:0x01f5, B:123:0x01fc, B:163:0x0310, B:162:0x030d, B:113:0x01d1, B:166:0x031f, B:168:0x0325, B:170:0x032b, B:172:0x0333, B:174:0x0339, B:175:0x033f, B:177:0x0343, B:179:0x034b, B:84:0x015b, B:80:0x014d, B:124:0x0200, B:126:0x0236, B:127:0x0238, B:129:0x0242, B:131:0x024e, B:134:0x0265, B:136:0x0268, B:139:0x0273, B:142:0x029a, B:132:0x0259, B:143:0x029d, B:145:0x02a3, B:147:0x02a7, B:149:0x02b3, B:152:0x02d2, B:154:0x02d5, B:157:0x02e0, B:150:0x02c2), top: B:187:0x008e, inners: #0 }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private boolean checkTextBlockMotionEvent(MotionEvent motionEvent) {
        ArrayList<MessageObject.TextLayoutBlock> arrayList;
        int i;
        boolean z;
        boolean z2;
        AnimatedEmojiSpan animatedEmojiSpan;
        CharacterStyle[] characterStyleArr;
        CharacterStyle[] characterStyleArr2;
        ReplyMessageLine replyMessageLine;
        ChatMessageCellDelegate chatMessageCellDelegate;
        MessageObject messageObject = this.currentMessageObject;
        int i2 = messageObject.type;
        if ((i2 == 0 || i2 == 19 || i2 == 24) && (arrayList = messageObject.textLayoutBlocks) != null && !arrayList.isEmpty() && (this.currentMessageObject.messageText instanceof Spannable)) {
            if (motionEvent.getAction() == 0 || (motionEvent.getAction() == 1 && (this.pressedLinkType == 1 || this.pressedCopyCode != null))) {
                int x = (int) motionEvent.getX();
                int y = (int) motionEvent.getY();
                int i3 = this.textX;
                if (x >= i3 && y >= (i = this.textY)) {
                    MessageObject messageObject2 = this.currentMessageObject;
                    if (x <= i3 + messageObject2.textWidth && y <= messageObject2.textHeight + i) {
                        int i4 = y - i;
                        int i5 = 0;
                        for (int i6 = 0; i6 < this.currentMessageObject.textLayoutBlocks.size() && this.currentMessageObject.textLayoutBlocks.get(i6).textYOffset <= i4; i6++) {
                            i5 = i6;
                        }
                        try {
                            MessageObject.TextLayoutBlock textLayoutBlock = this.currentMessageObject.textLayoutBlocks.get(i5);
                            int i7 = (int) (x - (this.textX - (textLayoutBlock.isRtl() ? this.currentMessageObject.textXOffset : 0.0f)));
                            int i8 = (int) (i4 - textLayoutBlock.textYOffset);
                            if (!textLayoutBlock.quote && textLayoutBlock.code && i7 > 0 && i7 <= this.currentMessageObject.textWidth && i8 >= ((textLayoutBlock.padTop + textLayoutBlock.height) + textLayoutBlock.padBottom) - AndroidUtilities.dp(38.0f) && i8 <= textLayoutBlock.padTop + textLayoutBlock.height + textLayoutBlock.padBottom) {
                                if (motionEvent.getAction() == 1) {
                                    if (textLayoutBlock == this.pressedCopyCode && (chatMessageCellDelegate = this.delegate) != null) {
                                        chatMessageCellDelegate.didPressCodeCopy(this, textLayoutBlock);
                                    }
                                    resetCodeSelectors();
                                    this.pressedCopyCode = null;
                                } else {
                                    this.pressedCopyCode = textLayoutBlock;
                                    if (Build.VERSION.SDK_INT >= 21) {
                                        textLayoutBlock.copySelector.setHotspot(i7, i8);
                                    }
                                    textLayoutBlock.copySelector.setState(this.pressedState);
                                }
                                return true;
                            }
                            int lineForVertical = textLayoutBlock.textLayout.layout.getLineForVertical(i8);
                            float f = i7;
                            int offsetForHorizontal = textLayoutBlock.charactersOffset + textLayoutBlock.textLayout.layout.getOffsetForHorizontal(lineForVertical, f);
                            float lineLeft = textLayoutBlock.textLayout.layout.getLineLeft(lineForVertical);
                            if (lineLeft <= f && lineLeft + textLayoutBlock.textLayout.layout.getLineWidth(lineForVertical) >= f) {
                                Spannable spannable = (Spannable) this.currentMessageObject.messageText;
                                CharacterStyle[] characterStyleArr3 = (CharacterStyle[]) spannable.getSpans(offsetForHorizontal, offsetForHorizontal, ClickableSpan.class);
                                if (characterStyleArr3 != null && characterStyleArr3.length != 0) {
                                    z = false;
                                    if (characterStyleArr3 != null || characterStyleArr3.length == 0) {
                                        characterStyleArr3 = (CharacterStyle[]) spannable.getSpans(offsetForHorizontal, offsetForHorizontal, AnimatedEmojiSpan.class);
                                        z = false;
                                    }
                                    if (characterStyleArr3.length != 0 && (!(characterStyleArr3[0] instanceof URLSpanBotCommand) || URLSpanBotCommand.enabled)) {
                                        z2 = false;
                                        if (!z2 && !AndroidUtilities.isAccessibilityScreenReaderEnabled()) {
                                            if (motionEvent.getAction() != 0) {
                                                if (characterStyleArr3[0] instanceof AnimatedEmojiSpan) {
                                                    AnimatedEmojiSpan animatedEmojiSpan2 = this.pressedEmoji;
                                                    if (animatedEmojiSpan2 == null || animatedEmojiSpan2 != characterStyleArr3[0]) {
                                                        resetPressedLink(1);
                                                        this.pressedEmoji = (AnimatedEmojiSpan) characterStyleArr3[0];
                                                        this.pressedLinkType = 1;
                                                    }
                                                } else {
                                                    LinkSpanDrawable linkSpanDrawable = this.pressedLink;
                                                    if (linkSpanDrawable == null || linkSpanDrawable.getSpan() != characterStyleArr3[0]) {
                                                        this.links.removeLink(this.pressedLink);
                                                        LinkSpanDrawable linkSpanDrawable2 = new LinkSpanDrawable(characterStyleArr3[0], this.resourcesProvider, f, i8, spanSupportsLongPress(characterStyleArr3[0]));
                                                        this.pressedLink = linkSpanDrawable2;
                                                        linkSpanDrawable2.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outLinkSelectBackground : Theme.key_chat_linkSelectBackground));
                                                        if (textLayoutBlock.quote && (replyMessageLine = this.quoteLine) != null) {
                                                            this.pressedLink.setColor(Theme.multAlpha(replyMessageLine.getColor(), Theme.isCurrentThemeDark() ? 0.13f : 0.1f));
                                                        }
                                                        this.linkBlockNum = i5;
                                                        this.pressedLinkType = 1;
                                                        try {
                                                            LinkPath obtainNewPath = this.pressedLink.obtainNewPath();
                                                            int[] realSpanStartAndEnd = getRealSpanStartAndEnd(spannable, this.pressedLink.getSpan());
                                                            int i9 = realSpanStartAndEnd[0];
                                                            int i10 = textLayoutBlock.charactersOffset;
                                                            realSpanStartAndEnd[0] = i9 - i10;
                                                            realSpanStartAndEnd[1] = realSpanStartAndEnd[1] - i10;
                                                            obtainNewPath.setCurrentLayout(textLayoutBlock.textLayout.layout, realSpanStartAndEnd[0], 0.0f);
                                                            textLayoutBlock.textLayout.layout.getSelectionPath(realSpanStartAndEnd[0], realSpanStartAndEnd[1], obtainNewPath);
                                                            if (realSpanStartAndEnd[1] >= textLayoutBlock.charactersEnd) {
                                                                for (int i11 = i5 + 1; i11 < this.currentMessageObject.textLayoutBlocks.size(); i11++) {
                                                                    MessageObject.TextLayoutBlock textLayoutBlock2 = this.currentMessageObject.textLayoutBlocks.get(i11);
                                                                    if (z) {
                                                                        int i12 = textLayoutBlock2.charactersOffset;
                                                                        characterStyleArr2 = (CharacterStyle[]) spannable.getSpans(i12, i12, URLSpanMono.class);
                                                                    } else {
                                                                        int i13 = textLayoutBlock2.charactersOffset;
                                                                        characterStyleArr2 = (CharacterStyle[]) spannable.getSpans(i13, i13, ClickableSpan.class);
                                                                    }
                                                                    if (characterStyleArr2 == null || characterStyleArr2.length == 0 || characterStyleArr2[0] != this.pressedLink.getSpan()) {
                                                                        break;
                                                                    }
                                                                    LinkPath obtainNewPath2 = this.pressedLink.obtainNewPath();
                                                                    obtainNewPath2.setCurrentLayout(textLayoutBlock2.textLayout.layout, 0, textLayoutBlock2.textYOffset - textLayoutBlock.textYOffset);
                                                                    int i14 = (realSpanStartAndEnd[1] + textLayoutBlock.charactersOffset) - textLayoutBlock2.charactersOffset;
                                                                    textLayoutBlock2.textLayout.layout.getSelectionPath(0, i14, obtainNewPath2);
                                                                    if (i14 < textLayoutBlock2.charactersEnd - 1) {
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                            if (realSpanStartAndEnd[0] <= textLayoutBlock.charactersOffset) {
                                                                int i15 = 0;
                                                                for (int i16 = i5 - 1; i16 >= 0; i16--) {
                                                                    MessageObject.TextLayoutBlock textLayoutBlock3 = this.currentMessageObject.textLayoutBlocks.get(i16);
                                                                    if (z) {
                                                                        int i17 = textLayoutBlock3.charactersEnd;
                                                                        characterStyleArr = (CharacterStyle[]) spannable.getSpans(i17 - 1, i17 - 1, URLSpanMono.class);
                                                                    } else {
                                                                        int i18 = textLayoutBlock3.charactersEnd;
                                                                        characterStyleArr = (CharacterStyle[]) spannable.getSpans(i18 - 1, i18 - 1, ClickableSpan.class);
                                                                    }
                                                                    if (characterStyleArr == null || characterStyleArr.length == 0 || characterStyleArr[0] != this.pressedLink.getSpan()) {
                                                                        break;
                                                                    }
                                                                    LinkPath obtainNewPath3 = this.pressedLink.obtainNewPath();
                                                                    i15 -= textLayoutBlock3.height;
                                                                    int i19 = realSpanStartAndEnd[0];
                                                                    int i20 = textLayoutBlock.charactersOffset;
                                                                    int i21 = textLayoutBlock3.charactersOffset;
                                                                    int i22 = (i19 + i20) - i21;
                                                                    int i23 = (realSpanStartAndEnd[1] + i20) - i21;
                                                                    obtainNewPath3.setCurrentLayout(textLayoutBlock3.textLayout.layout, i22, i15);
                                                                    textLayoutBlock3.textLayout.layout.getSelectionPath(i22, i23, obtainNewPath3);
                                                                    if (i22 > textLayoutBlock3.charactersOffset) {
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                        } catch (Exception e) {
                                                            FileLog.e(e);
                                                        }
                                                        this.links.addLink(this.pressedLink, 1);
                                                    }
                                                }
                                                invalidate();
                                                return true;
                                            } else if ((characterStyleArr3[0] instanceof AnimatedEmojiSpan) && (animatedEmojiSpan = this.pressedEmoji) == characterStyleArr3[0]) {
                                                if (this.delegate.didPressAnimatedEmoji(this, animatedEmojiSpan)) {
                                                    resetPressedLink(1);
                                                    this.pressedEmoji = null;
                                                    return true;
                                                }
                                                resetPressedLink(1);
                                                this.pressedEmoji = null;
                                            } else {
                                                LinkSpanDrawable linkSpanDrawable3 = this.pressedLink;
                                                if (linkSpanDrawable3 != null && characterStyleArr3[0] == linkSpanDrawable3.getSpan()) {
                                                    this.delegate.didPressUrl(this, this.pressedLink.getSpan(), false);
                                                    resetPressedLink(1);
                                                    return true;
                                                }
                                            }
                                        }
                                    }
                                    z2 = true;
                                    if (!z2) {
                                        if (motionEvent.getAction() != 0) {
                                        }
                                    }
                                }
                                characterStyleArr3 = (CharacterStyle[]) spannable.getSpans(offsetForHorizontal, offsetForHorizontal, URLSpanMono.class);
                                z = true;
                                if (characterStyleArr3 != null) {
                                }
                                characterStyleArr3 = (CharacterStyle[]) spannable.getSpans(offsetForHorizontal, offsetForHorizontal, AnimatedEmojiSpan.class);
                                z = false;
                                if (characterStyleArr3.length != 0) {
                                    z2 = false;
                                    if (!z2) {
                                    }
                                }
                                z2 = true;
                                if (!z2) {
                                }
                            }
                        } catch (Exception e2) {
                            FileLog.e(e2);
                        }
                    }
                }
                resetPressedLink(1);
            } else if (motionEvent.getAction() == 1) {
                this.pressedCopyCode = null;
                resetCodeSelectors();
            }
        }
        return false;
    }

    /* JADX WARN: Removed duplicated region for block: B:158:0x0312 A[Catch: Exception -> 0x034d, TryCatch #1 {Exception -> 0x034d, blocks: (B:34:0x0085, B:36:0x0098, B:38:0x009e, B:40:0x00aa, B:43:0x00b0, B:45:0x00b6, B:47:0x00c7, B:49:0x00d1, B:51:0x00d7, B:53:0x00db, B:55:0x00df, B:56:0x00e2, B:57:0x00e8, B:59:0x00f0, B:60:0x00f7, B:62:0x00ff, B:64:0x011f, B:66:0x012c, B:68:0x013a, B:74:0x014b, B:77:0x0157, B:79:0x015a, B:81:0x0160, B:87:0x016a, B:89:0x0170, B:91:0x0176, B:93:0x017c, B:95:0x0180, B:156:0x030e, B:97:0x0184, B:98:0x0191, B:100:0x0195, B:102:0x019d, B:104:0x01c1, B:106:0x01c6, B:108:0x01d1, B:110:0x01d5, B:114:0x01e8, B:115:0x01ef, B:155:0x0303, B:154:0x0300, B:105:0x01c4, B:158:0x0312, B:160:0x0318, B:162:0x031e, B:164:0x0326, B:166:0x032c, B:167:0x0332, B:169:0x0336, B:171:0x033e, B:76:0x014e, B:72:0x0140, B:116:0x01f3, B:118:0x0229, B:119:0x022b, B:121:0x0235, B:123:0x0241, B:126:0x0258, B:128:0x025b, B:131:0x0266, B:134:0x028d, B:124:0x024c, B:135:0x0290, B:137:0x0296, B:139:0x029a, B:141:0x02a6, B:144:0x02c5, B:146:0x02c8, B:149:0x02d3, B:142:0x02b5), top: B:179:0x0085, inners: #0 }] */
    /* JADX WARN: Removed duplicated region for block: B:87:0x016a A[Catch: Exception -> 0x034d, TryCatch #1 {Exception -> 0x034d, blocks: (B:34:0x0085, B:36:0x0098, B:38:0x009e, B:40:0x00aa, B:43:0x00b0, B:45:0x00b6, B:47:0x00c7, B:49:0x00d1, B:51:0x00d7, B:53:0x00db, B:55:0x00df, B:56:0x00e2, B:57:0x00e8, B:59:0x00f0, B:60:0x00f7, B:62:0x00ff, B:64:0x011f, B:66:0x012c, B:68:0x013a, B:74:0x014b, B:77:0x0157, B:79:0x015a, B:81:0x0160, B:87:0x016a, B:89:0x0170, B:91:0x0176, B:93:0x017c, B:95:0x0180, B:156:0x030e, B:97:0x0184, B:98:0x0191, B:100:0x0195, B:102:0x019d, B:104:0x01c1, B:106:0x01c6, B:108:0x01d1, B:110:0x01d5, B:114:0x01e8, B:115:0x01ef, B:155:0x0303, B:154:0x0300, B:105:0x01c4, B:158:0x0312, B:160:0x0318, B:162:0x031e, B:164:0x0326, B:166:0x032c, B:167:0x0332, B:169:0x0336, B:171:0x033e, B:76:0x014e, B:72:0x0140, B:116:0x01f3, B:118:0x0229, B:119:0x022b, B:121:0x0235, B:123:0x0241, B:126:0x0258, B:128:0x025b, B:131:0x0266, B:134:0x028d, B:124:0x024c, B:135:0x0290, B:137:0x0296, B:139:0x029a, B:141:0x02a6, B:144:0x02c5, B:146:0x02c8, B:149:0x02d3, B:142:0x02b5), top: B:179:0x0085, inners: #0 }] */
    /* JADX WARN: Removed duplicated region for block: B:91:0x0176 A[Catch: Exception -> 0x034d, TryCatch #1 {Exception -> 0x034d, blocks: (B:34:0x0085, B:36:0x0098, B:38:0x009e, B:40:0x00aa, B:43:0x00b0, B:45:0x00b6, B:47:0x00c7, B:49:0x00d1, B:51:0x00d7, B:53:0x00db, B:55:0x00df, B:56:0x00e2, B:57:0x00e8, B:59:0x00f0, B:60:0x00f7, B:62:0x00ff, B:64:0x011f, B:66:0x012c, B:68:0x013a, B:74:0x014b, B:77:0x0157, B:79:0x015a, B:81:0x0160, B:87:0x016a, B:89:0x0170, B:91:0x0176, B:93:0x017c, B:95:0x0180, B:156:0x030e, B:97:0x0184, B:98:0x0191, B:100:0x0195, B:102:0x019d, B:104:0x01c1, B:106:0x01c6, B:108:0x01d1, B:110:0x01d5, B:114:0x01e8, B:115:0x01ef, B:155:0x0303, B:154:0x0300, B:105:0x01c4, B:158:0x0312, B:160:0x0318, B:162:0x031e, B:164:0x0326, B:166:0x032c, B:167:0x0332, B:169:0x0336, B:171:0x033e, B:76:0x014e, B:72:0x0140, B:116:0x01f3, B:118:0x0229, B:119:0x022b, B:121:0x0235, B:123:0x0241, B:126:0x0258, B:128:0x025b, B:131:0x0266, B:134:0x028d, B:124:0x024c, B:135:0x0290, B:137:0x0296, B:139:0x029a, B:141:0x02a6, B:144:0x02c5, B:146:0x02c8, B:149:0x02d3, B:142:0x02b5), top: B:179:0x0085, inners: #0 }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private boolean checkCaptionMotionEvent(MotionEvent motionEvent) {
        boolean z;
        boolean z2;
        AnimatedEmojiSpan animatedEmojiSpan;
        CharacterStyle[] characterStyleArr;
        CharacterStyle[] characterStyleArr2;
        ReplyMessageLine replyMessageLine;
        ChatMessageCellDelegate chatMessageCellDelegate;
        if ((this.currentCaption instanceof Spannable) && this.captionLayout != null) {
            if (motionEvent.getAction() == 0 || (motionEvent.getAction() == 1 && (this.pressedLinkType == 1 || this.pressedCopyCode != null))) {
                int y = (int) motionEvent.getY();
                float x = (int) motionEvent.getX();
                float f = this.captionX;
                if (x >= f) {
                    float f2 = y;
                    float f3 = this.captionY;
                    if (f2 >= f3) {
                        MessageObject.TextLayoutBlocks textLayoutBlocks = this.captionLayout;
                        if (x <= f + textLayoutBlocks.textWidth && f2 <= textLayoutBlocks.textHeight + f3) {
                            int i = (int) (f2 - f3);
                            int i2 = 0;
                            for (int i3 = 0; i3 < this.captionLayout.textLayoutBlocks.size() && this.captionLayout.textLayoutBlocks.get(i3).textYOffset <= i; i3++) {
                                i2 = i3;
                            }
                            try {
                                MessageObject.TextLayoutBlock textLayoutBlock = this.captionLayout.textLayoutBlocks.get(i2);
                                int i4 = (int) (x - (this.captionX - (textLayoutBlock.isRtl() ? this.captionLayout.textXOffset : 0.0f)));
                                int i5 = (int) (i - textLayoutBlock.textYOffset);
                                if (!textLayoutBlock.quote && textLayoutBlock.code && i4 > 0 && i4 <= this.captionLayout.textWidth && i5 >= ((textLayoutBlock.padTop + textLayoutBlock.height) + textLayoutBlock.padBottom) - AndroidUtilities.dp(38.0f) && i5 <= textLayoutBlock.padTop + textLayoutBlock.height + textLayoutBlock.padBottom) {
                                    if (motionEvent.getAction() == 1) {
                                        if (textLayoutBlock == this.pressedCopyCode && (chatMessageCellDelegate = this.delegate) != null) {
                                            chatMessageCellDelegate.didPressCodeCopy(this, textLayoutBlock);
                                        }
                                        resetCodeSelectors();
                                        this.pressedCopyCode = null;
                                    } else {
                                        this.pressedCopyCode = textLayoutBlock;
                                        if (Build.VERSION.SDK_INT >= 21) {
                                            textLayoutBlock.copySelector.setHotspot(i4, i5);
                                        }
                                        textLayoutBlock.copySelector.setState(this.pressedState);
                                    }
                                    return true;
                                }
                                int lineForVertical = textLayoutBlock.textLayout.layout.getLineForVertical(i5);
                                float f4 = i4;
                                int offsetForHorizontal = textLayoutBlock.charactersOffset + textLayoutBlock.textLayout.layout.getOffsetForHorizontal(lineForVertical, f4);
                                float lineLeft = textLayoutBlock.textLayout.layout.getLineLeft(lineForVertical);
                                if (lineLeft <= f4 && lineLeft + textLayoutBlock.textLayout.layout.getLineWidth(lineForVertical) >= f4) {
                                    Spannable spannable = (Spannable) this.currentCaption;
                                    CharacterStyle[] characterStyleArr3 = (CharacterStyle[]) spannable.getSpans(offsetForHorizontal, offsetForHorizontal, ClickableSpan.class);
                                    if (characterStyleArr3 != null && characterStyleArr3.length != 0) {
                                        z = false;
                                        if (characterStyleArr3 != null || characterStyleArr3.length == 0) {
                                            characterStyleArr3 = (CharacterStyle[]) spannable.getSpans(offsetForHorizontal, offsetForHorizontal, AnimatedEmojiSpan.class);
                                            z = false;
                                        }
                                        if (characterStyleArr3.length != 0 && (!(characterStyleArr3[0] instanceof URLSpanBotCommand) || URLSpanBotCommand.enabled)) {
                                            z2 = false;
                                            if (!z2 && !AndroidUtilities.isAccessibilityScreenReaderEnabled()) {
                                                if (motionEvent.getAction() != 0) {
                                                    if (characterStyleArr3[0] instanceof AnimatedEmojiSpan) {
                                                        AnimatedEmojiSpan animatedEmojiSpan2 = this.pressedEmoji;
                                                        if (animatedEmojiSpan2 == null || animatedEmojiSpan2 != characterStyleArr3[0]) {
                                                            resetPressedLink(1);
                                                            this.pressedEmoji = (AnimatedEmojiSpan) characterStyleArr3[0];
                                                            this.pressedLinkType = 1;
                                                        }
                                                    } else {
                                                        LinkSpanDrawable linkSpanDrawable = this.pressedLink;
                                                        if (linkSpanDrawable == null || linkSpanDrawable.getSpan() != characterStyleArr3[0]) {
                                                            this.links.removeLink(this.pressedLink);
                                                            LinkSpanDrawable linkSpanDrawable2 = new LinkSpanDrawable(characterStyleArr3[0], this.resourcesProvider, f4, i5, spanSupportsLongPress(characterStyleArr3[0]));
                                                            this.pressedLink = linkSpanDrawable2;
                                                            linkSpanDrawable2.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outLinkSelectBackground : Theme.key_chat_linkSelectBackground));
                                                            if (textLayoutBlock.quote && (replyMessageLine = this.quoteLine) != null) {
                                                                this.pressedLink.setColor(Theme.multAlpha(replyMessageLine.getColor(), Theme.isCurrentThemeDark() ? 0.13f : 0.1f));
                                                            }
                                                            this.linkBlockNum = i2;
                                                            this.pressedLinkType = 1;
                                                            try {
                                                                LinkPath obtainNewPath = this.pressedLink.obtainNewPath();
                                                                int[] realSpanStartAndEnd = getRealSpanStartAndEnd(spannable, this.pressedLink.getSpan());
                                                                int i6 = realSpanStartAndEnd[0];
                                                                int i7 = textLayoutBlock.charactersOffset;
                                                                realSpanStartAndEnd[0] = i6 - i7;
                                                                realSpanStartAndEnd[1] = realSpanStartAndEnd[1] - i7;
                                                                obtainNewPath.setCurrentLayout(textLayoutBlock.textLayout.layout, realSpanStartAndEnd[0], 0.0f);
                                                                textLayoutBlock.textLayout.layout.getSelectionPath(realSpanStartAndEnd[0], realSpanStartAndEnd[1], obtainNewPath);
                                                                if (realSpanStartAndEnd[1] >= textLayoutBlock.charactersEnd) {
                                                                    for (int i8 = i2 + 1; i8 < this.captionLayout.textLayoutBlocks.size(); i8++) {
                                                                        MessageObject.TextLayoutBlock textLayoutBlock2 = this.captionLayout.textLayoutBlocks.get(i8);
                                                                        if (z) {
                                                                            int i9 = textLayoutBlock2.charactersOffset;
                                                                            characterStyleArr2 = (CharacterStyle[]) spannable.getSpans(i9, i9, URLSpanMono.class);
                                                                        } else {
                                                                            int i10 = textLayoutBlock2.charactersOffset;
                                                                            characterStyleArr2 = (CharacterStyle[]) spannable.getSpans(i10, i10, ClickableSpan.class);
                                                                        }
                                                                        if (characterStyleArr2 == null || characterStyleArr2.length == 0 || characterStyleArr2[0] != this.pressedLink.getSpan()) {
                                                                            break;
                                                                        }
                                                                        LinkPath obtainNewPath2 = this.pressedLink.obtainNewPath();
                                                                        obtainNewPath2.setCurrentLayout(textLayoutBlock2.textLayout.layout, 0, textLayoutBlock2.textYOffset - textLayoutBlock.textYOffset);
                                                                        int i11 = (realSpanStartAndEnd[1] + textLayoutBlock.charactersOffset) - textLayoutBlock2.charactersOffset;
                                                                        textLayoutBlock2.textLayout.layout.getSelectionPath(0, i11, obtainNewPath2);
                                                                        if (i11 < textLayoutBlock2.charactersEnd - 1) {
                                                                            break;
                                                                        }
                                                                    }
                                                                }
                                                                if (realSpanStartAndEnd[0] <= textLayoutBlock.charactersOffset) {
                                                                    int i12 = 0;
                                                                    for (int i13 = i2 - 1; i13 >= 0; i13--) {
                                                                        MessageObject.TextLayoutBlock textLayoutBlock3 = this.captionLayout.textLayoutBlocks.get(i13);
                                                                        if (z) {
                                                                            int i14 = textLayoutBlock3.charactersEnd;
                                                                            characterStyleArr = (CharacterStyle[]) spannable.getSpans(i14 - 1, i14 - 1, URLSpanMono.class);
                                                                        } else {
                                                                            int i15 = textLayoutBlock3.charactersEnd;
                                                                            characterStyleArr = (CharacterStyle[]) spannable.getSpans(i15 - 1, i15 - 1, ClickableSpan.class);
                                                                        }
                                                                        if (characterStyleArr == null || characterStyleArr.length == 0 || characterStyleArr[0] != this.pressedLink.getSpan()) {
                                                                            break;
                                                                        }
                                                                        LinkPath obtainNewPath3 = this.pressedLink.obtainNewPath();
                                                                        i12 -= textLayoutBlock3.height;
                                                                        int i16 = realSpanStartAndEnd[0];
                                                                        int i17 = textLayoutBlock.charactersOffset;
                                                                        int i18 = textLayoutBlock3.charactersOffset;
                                                                        int i19 = (i16 + i17) - i18;
                                                                        int i20 = (realSpanStartAndEnd[1] + i17) - i18;
                                                                        obtainNewPath3.setCurrentLayout(textLayoutBlock3.textLayout.layout, i19, i12);
                                                                        textLayoutBlock3.textLayout.layout.getSelectionPath(i19, i20, obtainNewPath3);
                                                                        if (i19 > textLayoutBlock3.charactersOffset) {
                                                                            break;
                                                                        }
                                                                    }
                                                                }
                                                            } catch (Exception e) {
                                                                FileLog.e(e);
                                                            }
                                                            this.links.addLink(this.pressedLink, 1);
                                                        }
                                                    }
                                                    invalidate();
                                                    return true;
                                                } else if ((characterStyleArr3[0] instanceof AnimatedEmojiSpan) && (animatedEmojiSpan = this.pressedEmoji) == characterStyleArr3[0]) {
                                                    if (this.delegate.didPressAnimatedEmoji(this, animatedEmojiSpan)) {
                                                        resetPressedLink(1);
                                                        this.pressedEmoji = null;
                                                        return true;
                                                    }
                                                    resetPressedLink(1);
                                                    this.pressedEmoji = null;
                                                } else {
                                                    LinkSpanDrawable linkSpanDrawable3 = this.pressedLink;
                                                    if (linkSpanDrawable3 != null && characterStyleArr3[0] == linkSpanDrawable3.getSpan()) {
                                                        this.delegate.didPressUrl(this, this.pressedLink.getSpan(), false);
                                                        resetPressedLink(1);
                                                        return true;
                                                    }
                                                }
                                            }
                                        }
                                        z2 = true;
                                        if (!z2) {
                                            if (motionEvent.getAction() != 0) {
                                            }
                                        }
                                    }
                                    characterStyleArr3 = (CharacterStyle[]) spannable.getSpans(offsetForHorizontal, offsetForHorizontal, URLSpanMono.class);
                                    z = true;
                                    if (characterStyleArr3 != null) {
                                    }
                                    characterStyleArr3 = (CharacterStyle[]) spannable.getSpans(offsetForHorizontal, offsetForHorizontal, AnimatedEmojiSpan.class);
                                    z = false;
                                    if (characterStyleArr3.length != 0) {
                                        z2 = false;
                                        if (!z2) {
                                        }
                                    }
                                    z2 = true;
                                    if (!z2) {
                                    }
                                }
                            } catch (Exception e2) {
                                FileLog.e(e2);
                            }
                        }
                    }
                }
                resetPressedLink(1);
            } else if (motionEvent.getAction() == 1) {
                this.pressedCopyCode = null;
                resetCodeSelectors();
            }
        }
        return false;
    }

    /* JADX WARN: Removed duplicated region for block: B:57:0x00f4 A[Catch: Exception -> 0x013f, TryCatch #0 {Exception -> 0x013f, blocks: (B:35:0x0065, B:37:0x0092, B:39:0x009f, B:41:0x00b0, B:43:0x00b6, B:49:0x00c0, B:51:0x00c6, B:53:0x00ca, B:65:0x013b, B:55:0x00d2, B:57:0x00f4, B:59:0x00f9, B:64:0x0130, B:63:0x012d, B:58:0x00f7, B:60:0x0106), top: B:101:0x0065, inners: #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:58:0x00f7 A[Catch: Exception -> 0x013f, TryCatch #0 {Exception -> 0x013f, blocks: (B:35:0x0065, B:37:0x0092, B:39:0x009f, B:41:0x00b0, B:43:0x00b6, B:49:0x00c0, B:51:0x00c6, B:53:0x00ca, B:65:0x013b, B:55:0x00d2, B:57:0x00f4, B:59:0x00f9, B:64:0x0130, B:63:0x012d, B:58:0x00f7, B:60:0x0106), top: B:101:0x0065, inners: #1 }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private boolean checkGameMotionEvent(MotionEvent motionEvent) {
        boolean z;
        LinkSpanDrawable linkSpanDrawable;
        int i;
        int i2;
        if (this.hasGamePreview) {
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            if (motionEvent.getAction() == 0) {
                if (this.drawPhotoImage && this.drawImageButton && this.buttonState != -1 && x >= (i = this.buttonX) && x <= i + AndroidUtilities.dp(48.0f) && y >= (i2 = this.buttonY) && y <= i2 + AndroidUtilities.dp(48.0f) && this.radialProgress.getIcon() != 4) {
                    this.buttonPressed = 1;
                    invalidate();
                    return true;
                } else if (this.drawPhotoImage && this.photoImage.isInsideImage(x, y)) {
                    this.gamePreviewPressed = true;
                    return true;
                } else if (this.descriptionLayout != null && y >= this.descriptionY) {
                    try {
                        int dp = x - ((this.unmovedTextX + AndroidUtilities.dp(10.0f)) + this.descriptionX);
                        int i3 = y - this.descriptionY;
                        int lineForVertical = this.descriptionLayout.layout.getLineForVertical(i3);
                        float f = dp;
                        int offsetForHorizontal = this.descriptionLayout.layout.getOffsetForHorizontal(lineForVertical, f);
                        float lineLeft = this.descriptionLayout.layout.getLineLeft(lineForVertical);
                        if (lineLeft <= f && lineLeft + this.descriptionLayout.layout.getLineWidth(lineForVertical) >= f) {
                            Spannable spannable = (Spannable) this.currentMessageObject.linkDescription;
                            ClickableSpan[] clickableSpanArr = (ClickableSpan[]) spannable.getSpans(offsetForHorizontal, offsetForHorizontal, ClickableSpan.class);
                            if (clickableSpanArr.length != 0 && (!(clickableSpanArr[0] instanceof URLSpanBotCommand) || URLSpanBotCommand.enabled)) {
                                z = false;
                                if (!z && !AndroidUtilities.isAccessibilityScreenReaderEnabled()) {
                                    linkSpanDrawable = this.pressedLink;
                                    if (linkSpanDrawable != null || linkSpanDrawable.getSpan() != clickableSpanArr[0]) {
                                        this.links.removeLink(this.pressedLink);
                                        LinkSpanDrawable linkSpanDrawable2 = new LinkSpanDrawable(clickableSpanArr[0], this.resourcesProvider, f, i3, spanSupportsLongPress(clickableSpanArr[0]));
                                        this.pressedLink = linkSpanDrawable2;
                                        linkSpanDrawable2.setColor(getThemedColor(!this.currentMessageObject.isOutOwner() ? Theme.key_chat_outLinkSelectBackground : Theme.key_chat_linkSelectBackground));
                                        this.linkBlockNum = -10;
                                        this.pressedLinkType = 2;
                                        try {
                                            LinkPath obtainNewPath = this.pressedLink.obtainNewPath();
                                            int[] realSpanStartAndEnd = getRealSpanStartAndEnd(spannable, this.pressedLink.getSpan());
                                            obtainNewPath.setCurrentLayout(this.descriptionLayout.layout, realSpanStartAndEnd[0], 0.0f);
                                            this.descriptionLayout.layout.getSelectionPath(realSpanStartAndEnd[0], realSpanStartAndEnd[1], obtainNewPath);
                                        } catch (Exception e) {
                                            FileLog.e(e);
                                        }
                                        this.links.addLink(this.pressedLink, 2);
                                    }
                                    invalidate();
                                    return true;
                                }
                            }
                            z = true;
                            if (!z) {
                                linkSpanDrawable = this.pressedLink;
                                if (linkSpanDrawable != null) {
                                }
                                this.links.removeLink(this.pressedLink);
                                LinkSpanDrawable linkSpanDrawable22 = new LinkSpanDrawable(clickableSpanArr[0], this.resourcesProvider, f, i3, spanSupportsLongPress(clickableSpanArr[0]));
                                this.pressedLink = linkSpanDrawable22;
                                linkSpanDrawable22.setColor(getThemedColor(!this.currentMessageObject.isOutOwner() ? Theme.key_chat_outLinkSelectBackground : Theme.key_chat_linkSelectBackground));
                                this.linkBlockNum = -10;
                                this.pressedLinkType = 2;
                                LinkPath obtainNewPath2 = this.pressedLink.obtainNewPath();
                                int[] realSpanStartAndEnd2 = getRealSpanStartAndEnd(spannable, this.pressedLink.getSpan());
                                obtainNewPath2.setCurrentLayout(this.descriptionLayout.layout, realSpanStartAndEnd2[0], 0.0f);
                                this.descriptionLayout.layout.getSelectionPath(realSpanStartAndEnd2[0], realSpanStartAndEnd2[1], obtainNewPath2);
                                this.links.addLink(this.pressedLink, 2);
                                invalidate();
                                return true;
                            }
                        }
                    } catch (Exception e2) {
                        FileLog.e(e2);
                    }
                }
            } else if (motionEvent.getAction() == 1) {
                if (this.pressedLinkType == 2 || this.gamePreviewPressed || this.buttonPressed != 0) {
                    if (this.buttonPressed != 0) {
                        this.buttonPressed = 0;
                        playSoundEffect(0);
                        didPressButton(true, false);
                        invalidate();
                    } else {
                        LinkSpanDrawable linkSpanDrawable3 = this.pressedLink;
                        if (linkSpanDrawable3 != null) {
                            if (linkSpanDrawable3.getSpan() instanceof URLSpan) {
                                Browser.openUrl(getContext(), ((URLSpan) this.pressedLink.getSpan()).getURL());
                            } else if (this.pressedLink.getSpan() instanceof ClickableSpan) {
                                ((ClickableSpan) this.pressedLink.getSpan()).onClick(this);
                            }
                            resetPressedLink(2);
                        } else {
                            this.gamePreviewPressed = false;
                            int i4 = 0;
                            while (true) {
                                if (i4 >= this.botButtons.size()) {
                                    break;
                                }
                                BotButton botButton = this.botButtons.get(i4);
                                if (botButton.button instanceof TLRPC$TL_keyboardButtonGame) {
                                    playSoundEffect(0);
                                    this.delegate.didPressBotButton(this, botButton.button);
                                    invalidate();
                                    break;
                                }
                                i4++;
                            }
                            resetPressedLink(2);
                            return true;
                        }
                    }
                } else {
                    resetPressedLink(2);
                }
            }
            return false;
        }
        return false;
    }

    private boolean checkTranscribeButtonMotionEvent(MotionEvent motionEvent) {
        TranscribeButton transcribeButton;
        return this.useTranscribeButton && (!this.isPlayingRound || getVideoTranscriptionProgress() > 0.0f || this.wasTranscriptionOpen) && (transcribeButton = this.transcribeButton) != null && transcribeButton.onTouch(motionEvent.getAction(), motionEvent.getX(), motionEvent.getY());
    }

    /* JADX WARN: Removed duplicated region for block: B:66:0x012d A[Catch: Exception -> 0x017b, TryCatch #0 {Exception -> 0x017b, blocks: (B:29:0x005f, B:31:0x007b, B:33:0x0098, B:35:0x00a5, B:37:0x00ad, B:39:0x00b6, B:41:0x00c3, B:43:0x00c9, B:49:0x00d3, B:51:0x00d9, B:53:0x00dd, B:75:0x0177, B:55:0x00e5, B:57:0x0109, B:59:0x010d, B:61:0x0111, B:63:0x0117, B:69:0x0136, B:74:0x016c, B:73:0x0169, B:64:0x0125, B:66:0x012d, B:68:0x0132, B:67:0x0130, B:38:0x00b2, B:70:0x0142), top: B:305:0x005f, inners: #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:67:0x0130 A[Catch: Exception -> 0x017b, TryCatch #0 {Exception -> 0x017b, blocks: (B:29:0x005f, B:31:0x007b, B:33:0x0098, B:35:0x00a5, B:37:0x00ad, B:39:0x00b6, B:41:0x00c3, B:43:0x00c9, B:49:0x00d3, B:51:0x00d9, B:53:0x00dd, B:75:0x0177, B:55:0x00e5, B:57:0x0109, B:59:0x010d, B:61:0x0111, B:63:0x0117, B:69:0x0136, B:74:0x016c, B:73:0x0169, B:64:0x0125, B:66:0x012d, B:68:0x0132, B:67:0x0130, B:38:0x00b2, B:70:0x0142), top: B:305:0x005f, inners: #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:94:0x01ac  */
    /* JADX WARN: Removed duplicated region for block: B:96:0x01b2  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private boolean checkLinkPreviewMotionEvent(MotionEvent motionEvent) {
        int i;
        MessageObject messageObject;
        TLRPC$TL_channelAdminLogEvent tLRPC$TL_channelAdminLogEvent;
        boolean z;
        int i2;
        int i3;
        int i4;
        int i5;
        boolean z2;
        LinkSpanDrawable linkSpanDrawable;
        int themedColor;
        MessageObject messageObject2;
        int i6 = this.currentMessageObject.type;
        if ((i6 == 0 || i6 == 24) && this.hasLinkPreview) {
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            int i7 = this.unmovedTextX;
            if (x >= i7 && x <= (i7 + this.backgroundWidth) - AndroidUtilities.dp(14.0f) && y >= (i = this.linkPreviewY)) {
                if (y <= i + this.linkPreviewHeight + AndroidUtilities.dp((this.drawInstantView ? 46 : 0) + 8)) {
                    if (motionEvent.getAction() == 0) {
                        if (this.descriptionLayout != null && y >= this.descriptionY && !this.currentMessageObject.preview) {
                            try {
                                int dp = x - ((this.unmovedTextX + AndroidUtilities.dp(10.0f)) + this.descriptionX);
                                int i8 = y - this.descriptionY;
                                if (i8 <= this.descriptionLayout.layout.getHeight()) {
                                    int lineForVertical = this.descriptionLayout.layout.getLineForVertical(i8);
                                    float f = dp;
                                    int offsetForHorizontal = this.descriptionLayout.layout.getOffsetForHorizontal(lineForVertical, f);
                                    float lineLeft = this.descriptionLayout.layout.getLineLeft(lineForVertical);
                                    if (lineLeft <= f && lineLeft + this.descriptionLayout.layout.getLineWidth(lineForVertical) >= f) {
                                        Spannable spannable = (Spannable) (this.currentMessageObject.isSponsored() ? this.currentMessageObject.messageText : this.currentMessageObject.linkDescription);
                                        ClickableSpan[] clickableSpanArr = (ClickableSpan[]) spannable.getSpans(offsetForHorizontal, offsetForHorizontal, ClickableSpan.class);
                                        if (clickableSpanArr.length != 0 && (!(clickableSpanArr[0] instanceof URLSpanBotCommand) || URLSpanBotCommand.enabled)) {
                                            z2 = false;
                                            if (!z2 && !AndroidUtilities.isAccessibilityScreenReaderEnabled()) {
                                                linkSpanDrawable = this.pressedLink;
                                                if (linkSpanDrawable != null || linkSpanDrawable.getSpan() != clickableSpanArr[0]) {
                                                    this.links.removeLink(this.pressedLink);
                                                    LinkSpanDrawable linkSpanDrawable2 = new LinkSpanDrawable(clickableSpanArr[0], this.resourcesProvider, x, y, spanSupportsLongPress(clickableSpanArr[0]));
                                                    this.pressedLink = linkSpanDrawable2;
                                                    if (this.hasLinkPreview || this.linkLine == null || (messageObject2 = this.currentMessageObject) == null || messageObject2.isOutOwner()) {
                                                        themedColor = getThemedColor(!this.currentMessageObject.isOutOwner() ? Theme.key_chat_outLinkSelectBackground : Theme.key_chat_linkSelectBackground);
                                                    } else {
                                                        themedColor = Theme.multAlpha(this.linkLine.getColor(), 0.1f);
                                                    }
                                                    linkSpanDrawable2.setColor(themedColor);
                                                    this.linkBlockNum = -10;
                                                    this.pressedLinkType = 2;
                                                    startCheckLongPress();
                                                    try {
                                                        LinkPath obtainNewPath = this.pressedLink.obtainNewPath();
                                                        int[] realSpanStartAndEnd = getRealSpanStartAndEnd(spannable, this.pressedLink.getSpan());
                                                        obtainNewPath.setCurrentLayout(this.descriptionLayout.layout, realSpanStartAndEnd[0], 0.0f);
                                                        this.descriptionLayout.layout.getSelectionPath(realSpanStartAndEnd[0], realSpanStartAndEnd[1], obtainNewPath);
                                                    } catch (Exception e) {
                                                        FileLog.e(e);
                                                    }
                                                    this.links.addLink(this.pressedLink, 2);
                                                }
                                                invalidate();
                                                return true;
                                            }
                                        }
                                        z2 = true;
                                        if (!z2) {
                                            linkSpanDrawable = this.pressedLink;
                                            if (linkSpanDrawable != null) {
                                            }
                                            this.links.removeLink(this.pressedLink);
                                            LinkSpanDrawable linkSpanDrawable22 = new LinkSpanDrawable(clickableSpanArr[0], this.resourcesProvider, x, y, spanSupportsLongPress(clickableSpanArr[0]));
                                            this.pressedLink = linkSpanDrawable22;
                                            if (this.hasLinkPreview) {
                                            }
                                            themedColor = getThemedColor(!this.currentMessageObject.isOutOwner() ? Theme.key_chat_outLinkSelectBackground : Theme.key_chat_linkSelectBackground);
                                            linkSpanDrawable22.setColor(themedColor);
                                            this.linkBlockNum = -10;
                                            this.pressedLinkType = 2;
                                            startCheckLongPress();
                                            LinkPath obtainNewPath2 = this.pressedLink.obtainNewPath();
                                            int[] realSpanStartAndEnd2 = getRealSpanStartAndEnd(spannable, this.pressedLink.getSpan());
                                            obtainNewPath2.setCurrentLayout(this.descriptionLayout.layout, realSpanStartAndEnd2[0], 0.0f);
                                            this.descriptionLayout.layout.getSelectionPath(realSpanStartAndEnd2[0], realSpanStartAndEnd2[1], obtainNewPath2);
                                            this.links.addLink(this.pressedLink, 2);
                                            invalidate();
                                            return true;
                                        }
                                    }
                                }
                            } catch (Exception e2) {
                                FileLog.e(e2);
                            }
                        }
                        if (this.pressedLink == null) {
                            int dp2 = AndroidUtilities.dp(48.0f);
                            if (this.miniButtonState >= 0) {
                                int dp3 = AndroidUtilities.dp(27.0f);
                                int i9 = this.buttonX;
                                if (x >= i9 + dp3 && x <= i9 + dp3 + dp2) {
                                    int i10 = this.buttonY;
                                    if (y >= i10 + dp3 && y <= i10 + dp3 + dp2) {
                                        z = true;
                                        if (!z) {
                                            this.miniButtonPressed = 1;
                                            invalidate();
                                            return true;
                                        } else if (this.drawVideoImageButton && this.buttonState != -1 && x >= (i4 = this.videoButtonX) && x <= i4 + AndroidUtilities.dp(34.0f) + Math.max(this.infoWidth, this.docTitleWidth) && y >= (i5 = this.videoButtonY) && y <= i5 + AndroidUtilities.dp(30.0f)) {
                                            this.videoButtonPressed = 1;
                                            invalidate();
                                            return true;
                                        } else if (this.drawPhotoImage && this.drawImageButton && this.buttonState != -1 && ((!this.checkOnlyButtonPressed && this.photoImage.isInsideImage(x, y)) || (x >= (i2 = this.buttonX) && x <= i2 + AndroidUtilities.dp(48.0f) && y >= (i3 = this.buttonY) && y <= i3 + AndroidUtilities.dp(48.0f) && this.radialProgress.getIcon() != 4))) {
                                            this.buttonPressed = 1;
                                            invalidate();
                                            return true;
                                        } else {
                                            this.instantPressed = true;
                                            this.selectorDrawableMaskType[0] = 0;
                                            if (Build.VERSION.SDK_INT >= 21) {
                                                Drawable[] drawableArr = this.selectorDrawable;
                                                if (drawableArr[0] != null && drawableArr[0].getBounds().contains(x, y)) {
                                                    this.selectorDrawable[0].setHotspot(x, y);
                                                    this.selectorDrawable[0].setState(this.pressedState);
                                                }
                                                Drawable drawable = this.linkPreviewSelector;
                                                if (drawable != null && drawable.getBounds().contains(x, y)) {
                                                    this.linkPreviewSelector.setHotspot(x, y);
                                                    this.linkPreviewSelector.setState(this.pressedState);
                                                }
                                                setInstantButtonPressed(true);
                                            }
                                            ButtonBounce buttonBounce = this.linkPreviewBounce;
                                            if (buttonBounce != null) {
                                                buttonBounce.setPressed(true);
                                            }
                                            invalidate();
                                            return true;
                                        }
                                    }
                                }
                            }
                            z = false;
                            if (!z) {
                            }
                        }
                    } else if (motionEvent.getAction() == 1) {
                        if (this.instantPressed) {
                            int i11 = this.documentAttachType;
                            if (i11 == 7) {
                                if (!MediaController.getInstance().isPlayingMessage(this.currentMessageObject) || MediaController.getInstance().isMessagePaused()) {
                                    this.delegate.needPlayMessage(this, this.currentMessageObject, false);
                                } else {
                                    MediaController.getInstance().lambda$startAudioAgain$7(this.currentMessageObject);
                                }
                            } else if (this.drawInstantView || ((messageObject = this.currentMessageObject) != null && (tLRPC$TL_channelAdminLogEvent = messageObject.currentEvent) != null && (tLRPC$TL_channelAdminLogEvent.action instanceof TLRPC$TL_channelAdminLogEventActionEditMessage))) {
                                ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
                                if (chatMessageCellDelegate != null) {
                                    chatMessageCellDelegate.didPressInstantButton(this, this.drawInstantViewType);
                                }
                            } else if (this.drawPhotoImage && (i11 == 2 || i11 == 4 || (this.authorLayout == null && this.titleLayout == null && this.descriptionLayout == null && this.siteNameLayout == null))) {
                                ChatMessageCellDelegate chatMessageCellDelegate2 = this.delegate;
                                if (chatMessageCellDelegate2 != null) {
                                    chatMessageCellDelegate2.didPressImage(this, this.lastTouchX, this.lastTouchY);
                                }
                            } else if (!messageObject.preview) {
                                TLRPC$WebPage tLRPC$WebPage = MessageObject.getMedia(messageObject.messageOwner).webpage;
                                if (tLRPC$WebPage != null && !TextUtils.isEmpty(tLRPC$WebPage.embed_url)) {
                                    ChatMessageCellDelegate chatMessageCellDelegate3 = this.delegate;
                                    if (chatMessageCellDelegate3 != null) {
                                        chatMessageCellDelegate3.needOpenWebView(this.currentMessageObject, tLRPC$WebPage.embed_url, tLRPC$WebPage.site_name, tLRPC$WebPage.title, tLRPC$WebPage.url, tLRPC$WebPage.embed_width, tLRPC$WebPage.embed_height);
                                    }
                                } else if (tLRPC$WebPage != null) {
                                    ChatMessageCellDelegate chatMessageCellDelegate4 = this.delegate;
                                    if (chatMessageCellDelegate4 != null) {
                                        chatMessageCellDelegate4.didPressWebPage(this, tLRPC$WebPage, tLRPC$WebPage.url, MessageObject.getMedia(this.currentMessageObject.messageOwner).safe);
                                    } else {
                                        Browser.openUrl(getContext(), tLRPC$WebPage.url);
                                    }
                                }
                            }
                            playSoundEffect(0);
                            if (Build.VERSION.SDK_INT >= 21) {
                                Drawable[] drawableArr2 = this.selectorDrawable;
                                if (drawableArr2[0] != null) {
                                    drawableArr2[0].setState(StateSet.NOTHING);
                                }
                                Drawable drawable2 = this.linkPreviewSelector;
                                if (drawable2 != null) {
                                    drawable2.setState(StateSet.NOTHING);
                                }
                            }
                            ButtonBounce buttonBounce2 = this.linkPreviewBounce;
                            if (buttonBounce2 != null) {
                                buttonBounce2.setPressed(false);
                            }
                            this.instantPressed = false;
                            setInstantButtonPressed(false);
                            invalidate();
                        } else if (this.pressedLinkType == 2 || this.buttonPressed != 0 || this.miniButtonPressed != 0 || this.videoButtonPressed != 0 || this.linkPreviewPressed) {
                            if (this.videoButtonPressed == 1) {
                                this.videoButtonPressed = 0;
                                playSoundEffect(0);
                                didPressButton(true, true);
                                invalidate();
                            } else if (this.buttonPressed != 0) {
                                this.buttonPressed = 0;
                                playSoundEffect(0);
                                if (this.drawVideoImageButton) {
                                    didClickedImage();
                                } else {
                                    didPressButton(true, false);
                                }
                                invalidate();
                            } else if (this.miniButtonPressed != 0) {
                                this.miniButtonPressed = 0;
                                playSoundEffect(0);
                                didPressMiniButton(true);
                                invalidate();
                            } else {
                                LinkSpanDrawable linkSpanDrawable3 = this.pressedLink;
                                if (linkSpanDrawable3 != null) {
                                    if (linkSpanDrawable3.getSpan() instanceof URLSpan) {
                                        this.delegate.didPressUrl(this, this.pressedLink.getSpan(), false);
                                    } else if (this.pressedLink.getSpan() instanceof ClickableSpan) {
                                        ((ClickableSpan) this.pressedLink.getSpan()).onClick(this);
                                    }
                                    resetPressedLink(2);
                                } else {
                                    AnimatedEmojiSpan animatedEmojiSpan = this.pressedEmoji;
                                    if (animatedEmojiSpan != null && this.delegate.didPressAnimatedEmoji(this, animatedEmojiSpan)) {
                                        this.pressedEmoji = null;
                                        resetPressedLink(2);
                                    } else {
                                        if (this.documentAttachType == 2 && this.drawImageButton) {
                                            int i12 = this.buttonState;
                                            if (i12 == -1) {
                                                if (SharedConfig.isAutoplayGifs() && !this.currentMessageObject.isRepostPreview) {
                                                    this.delegate.didPressImage(this, this.lastTouchX, this.lastTouchY);
                                                } else {
                                                    this.buttonState = 2;
                                                    this.currentMessageObject.gifState = 1.0f;
                                                    this.photoImage.setAllowStartAnimation(false);
                                                    this.photoImage.stopAnimation();
                                                    this.radialProgress.setIcon(getIconForCurrentState(), false, true);
                                                    invalidate();
                                                    playSoundEffect(0);
                                                }
                                            } else if (i12 == 2 || i12 == 0) {
                                                didPressButton(true, false);
                                                playSoundEffect(0);
                                            }
                                        } else {
                                            MessageObject messageObject3 = this.currentMessageObject;
                                            if (!messageObject3.preview) {
                                                TLRPC$WebPage tLRPC$WebPage2 = MessageObject.getMedia(messageObject3.messageOwner).webpage;
                                                if (tLRPC$WebPage2 != null && !TextUtils.isEmpty(tLRPC$WebPage2.embed_url)) {
                                                    this.delegate.needOpenWebView(this.currentMessageObject, tLRPC$WebPage2.embed_url, tLRPC$WebPage2.site_name, tLRPC$WebPage2.title, tLRPC$WebPage2.url, tLRPC$WebPage2.embed_width, tLRPC$WebPage2.embed_height);
                                                } else {
                                                    int i13 = this.buttonState;
                                                    if (i13 == -1 || i13 == 3) {
                                                        this.delegate.didPressImage(this, this.lastTouchX, this.lastTouchY);
                                                        playSoundEffect(0);
                                                    } else if (tLRPC$WebPage2 != null) {
                                                        ChatMessageCellDelegate chatMessageCellDelegate5 = this.delegate;
                                                        if (chatMessageCellDelegate5 != null) {
                                                            chatMessageCellDelegate5.didPressWebPage(this, tLRPC$WebPage2, tLRPC$WebPage2.url, MessageObject.getMedia(this.currentMessageObject.messageOwner).safe);
                                                        } else {
                                                            Browser.openUrl(getContext(), tLRPC$WebPage2.url);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        resetPressedLink(2);
                                        return true;
                                    }
                                }
                            }
                        } else if (!this.hadLongPress) {
                            this.hadLongPress = false;
                            resetPressedLink(2);
                        }
                    } else if (motionEvent.getAction() == 2 && this.instantButtonPressed && Build.VERSION.SDK_INT >= 21) {
                        Drawable[] drawableArr3 = this.selectorDrawable;
                        if (drawableArr3[0] != null) {
                            drawableArr3[0].setHotspot(x, y);
                        }
                        Drawable drawable3 = this.linkPreviewSelector;
                        if (drawable3 != null) {
                            drawable3.setHotspot(x, y);
                        }
                    }
                }
            }
            return false;
        }
        return false;
    }

    private boolean checkPollButtonMotionEvent(MotionEvent motionEvent) {
        int i;
        int i2;
        if (this.currentMessageObject.eventId != 0 || this.pollVoteInProgress || this.pollUnvoteInProgress || this.pollButtons.isEmpty()) {
            return false;
        }
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject.type == 17 && messageObject.isSent()) {
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            if (motionEvent.getAction() == 0) {
                this.pressedVoteButton = -1;
                this.pollHintPressed = false;
                if (this.hintButtonVisible && (i = this.pollHintX) != -1 && x >= i && x <= i + AndroidUtilities.dp(40.0f) && y >= (i2 = this.pollHintY) && y <= i2 + AndroidUtilities.dp(40.0f)) {
                    this.pollHintPressed = true;
                    this.selectorDrawableMaskType[0] = 3;
                    if (Build.VERSION.SDK_INT >= 21) {
                        Drawable[] drawableArr = this.selectorDrawable;
                        if (drawableArr[0] != null) {
                            drawableArr[0].setBounds(this.pollHintX - AndroidUtilities.dp(8.0f), this.pollHintY - AndroidUtilities.dp(8.0f), this.pollHintX + AndroidUtilities.dp(32.0f), this.pollHintY + AndroidUtilities.dp(32.0f));
                            this.selectorDrawable[0].setHotspot(x, y);
                            this.selectorDrawable[0].setState(this.pressedState);
                        }
                    }
                    invalidate();
                } else {
                    for (int i3 = 0; i3 < this.pollButtons.size(); i3++) {
                        PollButton pollButton = this.pollButtons.get(i3);
                        int dp = (pollButton.y + this.namesOffset) - AndroidUtilities.dp(13.0f);
                        int i4 = pollButton.x;
                        if (x >= i4 && x <= (i4 + this.backgroundWidth) - AndroidUtilities.dp(31.0f) && y >= dp && y <= pollButton.height + dp + AndroidUtilities.dp(26.0f)) {
                            this.pressedVoteButton = i3;
                            if (!this.pollVoted && !this.pollClosed) {
                                this.selectorDrawableMaskType[0] = 1;
                                if (Build.VERSION.SDK_INT >= 21) {
                                    Drawable[] drawableArr2 = this.selectorDrawable;
                                    if (drawableArr2[0] != null) {
                                        drawableArr2[0].setBounds(pollButton.x - AndroidUtilities.dp(9.0f), dp, (pollButton.x + this.backgroundWidth) - AndroidUtilities.dp(22.0f), pollButton.height + dp + AndroidUtilities.dp(26.0f));
                                        this.selectorDrawable[0].setHotspot(x, y);
                                        this.selectorDrawable[0].setState(this.pressedState);
                                    }
                                }
                                invalidate();
                            }
                        }
                    }
                    return false;
                }
                return true;
            } else if (motionEvent.getAction() == 1) {
                if (this.pollHintPressed) {
                    playSoundEffect(0);
                    this.delegate.didPressHint(this, 0);
                    this.pollHintPressed = false;
                    if (Build.VERSION.SDK_INT >= 21) {
                        Drawable[] drawableArr3 = this.selectorDrawable;
                        if (drawableArr3[0] != null) {
                            drawableArr3[0].setState(StateSet.NOTHING);
                            return false;
                        }
                        return false;
                    }
                    return false;
                } else if (this.pressedVoteButton != -1) {
                    playSoundEffect(0);
                    if (Build.VERSION.SDK_INT >= 21) {
                        Drawable[] drawableArr4 = this.selectorDrawable;
                        if (drawableArr4[0] != null) {
                            drawableArr4[0].setState(StateSet.NOTHING);
                        }
                    }
                    if (this.currentMessageObject.scheduled) {
                        Toast.makeText(getContext(), LocaleController.getString("MessageScheduledVote", R.string.MessageScheduledVote), 1).show();
                    } else {
                        PollButton pollButton2 = this.pollButtons.get(this.pressedVoteButton);
                        TLRPC$PollAnswer tLRPC$PollAnswer = pollButton2.answer;
                        if (this.pollVoted || this.pollClosed) {
                            ArrayList<TLRPC$PollAnswer> arrayList = new ArrayList<>();
                            arrayList.add(tLRPC$PollAnswer);
                            this.delegate.didPressVoteButtons(this, arrayList, pollButton2.count, pollButton2.x + AndroidUtilities.dp(50.0f), this.namesOffset + pollButton2.y);
                        } else if (this.lastPoll.multiple_choice) {
                            if (this.currentMessageObject.checkedVotes.contains(tLRPC$PollAnswer)) {
                                this.currentMessageObject.checkedVotes.remove(tLRPC$PollAnswer);
                                this.pollCheckBox[this.pressedVoteButton].setChecked(false, true);
                            } else {
                                this.currentMessageObject.checkedVotes.add(tLRPC$PollAnswer);
                                this.pollCheckBox[this.pressedVoteButton].setChecked(true, true);
                            }
                        } else {
                            this.pollVoteInProgressNum = this.pressedVoteButton;
                            this.pollVoteInProgress = true;
                            this.vibrateOnPollVote = true;
                            this.voteCurrentProgressTime = 0.0f;
                            this.firstCircleLength = true;
                            this.voteCurrentCircleLength = 360.0f;
                            this.voteRisingCircleLength = false;
                            ArrayList<TLRPC$PollAnswer> arrayList2 = new ArrayList<>();
                            arrayList2.add(tLRPC$PollAnswer);
                            this.delegate.didPressVoteButtons(this, arrayList2, -1, 0, 0);
                        }
                    }
                    this.pressedVoteButton = -1;
                    invalidate();
                    return false;
                } else {
                    return false;
                }
            } else if (motionEvent.getAction() == 2) {
                if ((this.pressedVoteButton != -1 || this.pollHintPressed) && Build.VERSION.SDK_INT >= 21) {
                    Drawable[] drawableArr5 = this.selectorDrawable;
                    if (drawableArr5[0] != null) {
                        drawableArr5[0].setHotspot(x, y);
                        return false;
                    }
                    return false;
                }
                return false;
            } else {
                return false;
            }
        }
        return false;
    }

    private boolean checkInstantButtonMotionEvent(MotionEvent motionEvent) {
        if (this.currentMessageObject.isSponsored() || this.currentMessageObject.isUnsupported() || (this.drawInstantView && this.currentMessageObject.type != 0)) {
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            if (motionEvent.getAction() == 0) {
                if (this.drawInstantView) {
                    float f = x;
                    float f2 = y;
                    if (this.instantButtonRect.contains(f, f2)) {
                        this.selectorDrawableMaskType[0] = this.lastPoll == null ? 0 : 2;
                        this.instantPressed = true;
                        if (Build.VERSION.SDK_INT >= 21 && this.selectorDrawable[0] != null && this.instantButtonRect.contains(f, f2)) {
                            this.selectorDrawable[0].setHotspot(f, f2);
                            this.selectorDrawable[0].setState(this.pressedState);
                            setInstantButtonPressed(true);
                        }
                        invalidate();
                        return true;
                    }
                }
            } else if (motionEvent.getAction() == 1) {
                if (this.instantPressed) {
                    ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
                    if (chatMessageCellDelegate != null) {
                        if (this.lastPoll != null) {
                            MessageObject messageObject = this.currentMessageObject;
                            if (messageObject.scheduled) {
                                Toast.makeText(getContext(), LocaleController.getString("MessageScheduledVoteResults", R.string.MessageScheduledVoteResults), 1).show();
                            } else if (this.pollVoted || this.pollClosed) {
                                chatMessageCellDelegate.didPressInstantButton(this, this.drawInstantViewType);
                            } else {
                                if (!messageObject.checkedVotes.isEmpty()) {
                                    this.pollVoteInProgressNum = -1;
                                    this.pollVoteInProgress = true;
                                    this.vibrateOnPollVote = true;
                                    this.voteCurrentProgressTime = 0.0f;
                                    this.firstCircleLength = true;
                                    this.voteCurrentCircleLength = 360.0f;
                                    this.voteRisingCircleLength = false;
                                }
                                this.delegate.didPressVoteButtons(this, this.currentMessageObject.checkedVotes, -1, 0, this.namesOffset);
                            }
                        } else {
                            chatMessageCellDelegate.didPressInstantButton(this, this.drawInstantViewType);
                        }
                    }
                    playSoundEffect(0);
                    if (Build.VERSION.SDK_INT >= 21) {
                        Drawable[] drawableArr = this.selectorDrawable;
                        if (drawableArr[0] != null) {
                            drawableArr[0].setState(StateSet.NOTHING);
                        }
                    }
                    this.instantPressed = false;
                    setInstantButtonPressed(false);
                    invalidate();
                }
            } else if (motionEvent.getAction() == 2 && this.instantButtonPressed && Build.VERSION.SDK_INT >= 21) {
                Drawable[] drawableArr2 = this.selectorDrawable;
                if (drawableArr2[0] != null) {
                    drawableArr2[0].setHotspot(x, y);
                }
            }
            return false;
        }
        return false;
    }

    private boolean checkContactMotionEvent(MotionEvent motionEvent) {
        if (this.currentMessageObject.type != 12) {
            return false;
        }
        int x = (int) motionEvent.getX();
        int y = (int) motionEvent.getY();
        if (motionEvent.getAction() == 0) {
            ArrayList<InstantViewButton> arrayList = this.contactButtons;
            if (arrayList != null && arrayList.size() > 1) {
                for (int i = 0; i < this.contactButtons.size(); i++) {
                    InstantViewButton instantViewButton = this.contactButtons.get(i);
                    float f = x;
                    float f2 = y;
                    if (instantViewButton.rect.contains(f, f2)) {
                        if (instantViewButton.buttonBounce == null) {
                            instantViewButton.buttonBounce = new ButtonBounce(this);
                        }
                        instantViewButton.buttonBounce.setPressed(true);
                        if (Build.VERSION.SDK_INT >= 21 && instantViewButton.selectorDrawable != null) {
                            instantViewButton.selectorDrawable.setHotspot(f, f2);
                            instantViewButton.selectorDrawable.setState(this.pressedState);
                        }
                        invalidate();
                        return true;
                    }
                }
            }
            float f3 = x;
            float f4 = y;
            if (this.contactRect.contains(f3, f4)) {
                this.contactPressed = true;
                this.contactBounce.setPressed(true);
                if (Build.VERSION.SDK_INT >= 21) {
                    Drawable[] drawableArr = this.selectorDrawable;
                    if (drawableArr[0] != null) {
                        drawableArr[0].setHotspot(f3, f4);
                        this.selectorDrawable[0].setState(this.pressedState);
                    }
                }
                invalidate();
                return true;
            }
        } else if (motionEvent.getAction() == 1) {
            if (this.contactPressed) {
                if (this.delegate != null) {
                    ArrayList<InstantViewButton> arrayList2 = this.contactButtons;
                    if (arrayList2 != null && arrayList2.size() == 1) {
                        this.delegate.didPressInstantButton(this, this.contactButtons.get(0).type);
                    } else {
                        this.delegate.didPressInstantButton(this, 5);
                    }
                }
                playSoundEffect(0);
                if (Build.VERSION.SDK_INT >= 21) {
                    Drawable[] drawableArr2 = this.selectorDrawable;
                    if (drawableArr2[0] != null) {
                        drawableArr2[0].setState(StateSet.NOTHING);
                    }
                }
                this.contactPressed = false;
                this.contactBounce.setPressed(false);
                invalidate();
            } else {
                ArrayList<InstantViewButton> arrayList3 = this.contactButtons;
                if (arrayList3 != null && arrayList3.size() > 1) {
                    for (int i2 = 0; i2 < this.contactButtons.size(); i2++) {
                        InstantViewButton instantViewButton2 = this.contactButtons.get(i2);
                        if (instantViewButton2.buttonBounce != null && instantViewButton2.buttonBounce.isPressed()) {
                            ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
                            if (chatMessageCellDelegate != null) {
                                chatMessageCellDelegate.didPressInstantButton(this, instantViewButton2.type);
                            }
                            if (Build.VERSION.SDK_INT >= 21 && instantViewButton2.selectorDrawable != null) {
                                instantViewButton2.selectorDrawable.setState(StateSet.NOTHING);
                            }
                            instantViewButton2.buttonBounce.setPressed(false);
                            playSoundEffect(0);
                            invalidate();
                        }
                    }
                }
            }
        } else if (motionEvent.getAction() == 2) {
            if (this.contactPressed && Build.VERSION.SDK_INT >= 21) {
                Drawable[] drawableArr3 = this.selectorDrawable;
                if (drawableArr3[0] != null) {
                    drawableArr3[0].setHotspot(x, y);
                }
            }
            ArrayList<InstantViewButton> arrayList4 = this.contactButtons;
            if (arrayList4 != null && arrayList4.size() > 1) {
                int i3 = 0;
                while (true) {
                    if (i3 >= this.contactButtons.size()) {
                        break;
                    }
                    InstantViewButton instantViewButton3 = this.contactButtons.get(i3);
                    if (instantViewButton3.buttonBounce == null || !instantViewButton3.buttonBounce.isPressed()) {
                        i3++;
                    } else if (Build.VERSION.SDK_INT >= 21 && instantViewButton3.selectorDrawable != null) {
                        instantViewButton3.selectorDrawable.setHotspot(x, y);
                    }
                }
            }
        }
        return false;
    }

    private boolean checkTitleLabelMotion(MotionEvent motionEvent) {
        if (this.currentMessageObject.isSponsored() && this.currentMessageObject.sponsoredCanReport) {
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            if (motionEvent.getAction() == 0) {
                float f = x;
                if (f >= this.titleLabelX - AndroidUtilities.dp(6.0f) && f <= this.titleLabelX + this.titleLabelLayoutWidth + AndroidUtilities.dp(6.0f)) {
                    float f2 = y;
                    if (f2 >= this.titleLabelY - AndroidUtilities.dp(2.0f) && f2 <= this.titleLabelY + this.titleLabelLayoutHeight + AndroidUtilities.dp(2.0f)) {
                        ButtonBounce buttonBounce = this.titleLabelBounce;
                        if (buttonBounce != null) {
                            buttonBounce.setPressed(true);
                        }
                        this.isTitleLabelPressed = true;
                        return true;
                    }
                }
            } else if (motionEvent.getAction() == 1 && this.isTitleLabelPressed) {
                ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
                if (chatMessageCellDelegate != null) {
                    chatMessageCellDelegate.didPressAboutRevenueSharingAds();
                }
                ButtonBounce buttonBounce2 = this.titleLabelBounce;
                if (buttonBounce2 != null) {
                    buttonBounce2.setPressed(false);
                }
                playSoundEffect(0);
                this.isTitleLabelPressed = false;
            }
        }
        return false;
    }

    private void invalidateWithParent() {
        if (this.currentMessagesGroup != null && getParent() != null) {
            ((ViewGroup) getParent()).invalidate();
        }
        invalidate();
    }

    private boolean checkCommentButtonMotionEvent(MotionEvent motionEvent) {
        int i = 0;
        if (this.drawCommentButton) {
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
            if (groupedMessagePosition != null && (groupedMessagePosition.flags & 1) == 0 && this.commentButtonRect.contains(x, y)) {
                ViewGroup viewGroup = (ViewGroup) getParent();
                int childCount = viewGroup.getChildCount();
                while (true) {
                    if (i >= childCount) {
                        break;
                    }
                    View childAt = viewGroup.getChildAt(i);
                    if (childAt != this && (childAt instanceof ChatMessageCell)) {
                        ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                        if (chatMessageCell.drawCommentButton && chatMessageCell.currentMessagesGroup == this.currentMessagesGroup && (chatMessageCell.currentPosition.flags & 1) != 0) {
                            MotionEvent obtain = MotionEvent.obtain(0L, 0L, motionEvent.getActionMasked(), (motionEvent.getX() + getLeft()) - chatMessageCell.getLeft(), (motionEvent.getY() + getTop()) - chatMessageCell.getTop(), 0);
                            chatMessageCell.checkCommentButtonMotionEvent(obtain);
                            obtain.recycle();
                            break;
                        }
                    }
                    i++;
                }
                return true;
            }
            if (motionEvent.getAction() == 0) {
                if (this.commentButtonRect.contains(x, y)) {
                    if (this.currentMessageObject.isSent()) {
                        this.selectorDrawableMaskType[1] = 2;
                        this.commentButtonPressed = true;
                        if (Build.VERSION.SDK_INT >= 21) {
                            Drawable[] drawableArr = this.selectorDrawable;
                            if (drawableArr[1] != null) {
                                drawableArr[1].setHotspot(x, y);
                                this.selectorDrawable[1].setState(this.pressedState);
                            }
                        }
                        invalidateWithParent();
                    }
                    return true;
                }
            } else if (motionEvent.getAction() == 1) {
                if (this.commentButtonPressed) {
                    ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
                    if (chatMessageCellDelegate != null) {
                        if (this.isRepliesChat) {
                            chatMessageCellDelegate.didPressSideButton(this);
                        } else {
                            chatMessageCellDelegate.didPressCommentButton(this);
                        }
                    }
                    playSoundEffect(0);
                    if (Build.VERSION.SDK_INT >= 21) {
                        Drawable[] drawableArr2 = this.selectorDrawable;
                        if (drawableArr2[1] != null) {
                            drawableArr2[1].setState(StateSet.NOTHING);
                        }
                    }
                    this.commentButtonPressed = false;
                    invalidateWithParent();
                }
            } else if (motionEvent.getAction() == 2 && this.commentButtonPressed && Build.VERSION.SDK_INT >= 21) {
                Drawable[] drawableArr3 = this.selectorDrawable;
                if (drawableArr3[1] != null) {
                    drawableArr3[1].setHotspot(x, y);
                }
            }
            return false;
        }
        return false;
    }

    private boolean checkSponsoredCloseMotionEvent(MotionEvent motionEvent) {
        ButtonBounce buttonBounce;
        ChatMessageCellDelegate chatMessageCellDelegate;
        RectF rectF;
        if (motionEvent.getAction() == 0 && (rectF = this.closeSponsoredBounds) != null && this.closeSponsoredBounce != null && rectF.contains(motionEvent.getX(), motionEvent.getY())) {
            this.closeSponsoredBounce.setPressed(true);
            return true;
        }
        if (motionEvent.getAction() == 1) {
            ButtonBounce buttonBounce2 = this.closeSponsoredBounce;
            if (buttonBounce2 != null && buttonBounce2.isPressed() && (chatMessageCellDelegate = this.delegate) != null) {
                chatMessageCellDelegate.didPressSponsoredClose(this);
            }
            ButtonBounce buttonBounce3 = this.closeSponsoredBounce;
            if (buttonBounce3 != null) {
                buttonBounce3.setPressed(false);
            }
        } else if (motionEvent.getAction() == 3 && (buttonBounce = this.closeSponsoredBounce) != null) {
            buttonBounce.setPressed(false);
        }
        ButtonBounce buttonBounce4 = this.closeSponsoredBounce;
        return buttonBounce4 != null && buttonBounce4.isPressed();
    }

    private boolean checkOtherButtonMotionEvent(MotionEvent motionEvent) {
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        int i = this.documentAttachType;
        if ((i == 5 || i == 1) && (groupedMessagePosition = this.currentPosition) != null && (groupedMessagePosition.flags & 4) == 0) {
            return false;
        }
        int i2 = this.currentMessageObject.type;
        boolean z = i2 == 16;
        if (!z) {
            z = ((i != 1 && i2 != 12 && i != 5 && i != 4 && i != 2 && i2 != 8) || this.hasGamePreview || this.hasInvoicePreview) ? false : true;
        }
        if (z) {
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            if (motionEvent.getAction() == 0) {
                MessageObject messageObject = this.currentMessageObject;
                if (messageObject.type == 16) {
                    boolean isVideoCall = messageObject.isVideoCall();
                    int i3 = this.otherX;
                    if (x >= i3) {
                        if (x <= i3 + AndroidUtilities.dp((LocaleController.isRTL ? 0 : 200) + 30 + (!isVideoCall ? 2 : 0)) && y >= this.otherY - AndroidUtilities.dp(14.0f) && y <= this.otherY + AndroidUtilities.dp(50.0f)) {
                            this.otherPressed = true;
                            this.selectorDrawableMaskType[0] = 4;
                            if (Build.VERSION.SDK_INT >= 21 && this.selectorDrawable[0] != null) {
                                int dp = this.otherX + AndroidUtilities.dp((LocaleController.isRTL ? 0 : 200) + (!isVideoCall ? 2 : 0)) + (Theme.chat_msgInCallDrawable[isVideoCall ? 1 : 0].getIntrinsicWidth() / 2);
                                int intrinsicHeight = this.otherY + (Theme.chat_msgInCallDrawable[isVideoCall ? 1 : 0].getIntrinsicHeight() / 2);
                                this.selectorDrawable[0].setBounds(dp - AndroidUtilities.dp(20.0f), intrinsicHeight - AndroidUtilities.dp(20.0f), dp + AndroidUtilities.dp(20.0f), intrinsicHeight + AndroidUtilities.dp(20.0f));
                                this.selectorDrawable[0].setHotspot(x, y);
                                this.selectorDrawable[0].setState(this.pressedState);
                            }
                            invalidate();
                            return true;
                        }
                    }
                } else if (x >= this.otherX - AndroidUtilities.dp(20.0f) && x <= this.otherX + AndroidUtilities.dp(20.0f) && y >= this.otherY - AndroidUtilities.dp(4.0f) && y <= this.otherY + AndroidUtilities.dp(30.0f)) {
                    this.otherPressed = true;
                    invalidate();
                    return true;
                }
            } else if (motionEvent.getAction() == 1) {
                if (this.otherPressed) {
                    if (this.currentMessageObject.type == 16 && Build.VERSION.SDK_INT >= 21) {
                        Drawable[] drawableArr = this.selectorDrawable;
                        if (drawableArr[0] != null) {
                            drawableArr[0].setState(StateSet.NOTHING);
                        }
                    }
                    this.otherPressed = false;
                    playSoundEffect(0);
                    this.delegate.didPressOther(this, this.otherX, this.otherY);
                    invalidate();
                    return true;
                }
            } else if (motionEvent.getAction() == 2 && this.currentMessageObject.type == 16 && this.otherPressed && Build.VERSION.SDK_INT >= 21) {
                Drawable[] drawableArr2 = this.selectorDrawable;
                if (drawableArr2[0] != null) {
                    drawableArr2[0].setHotspot(x, y);
                }
            }
            return false;
        }
        return false;
    }

    private void setInstantButtonPressed(boolean z) {
        if (this.instantButtonBounce == null) {
            this.instantButtonBounce = new ButtonBounce(this);
        }
        ButtonBounce buttonBounce = this.instantButtonBounce;
        this.instantButtonPressed = z;
        buttonBounce.setPressed(z);
    }

    private void resetContactButtonsPressedState() {
        this.contactPressed = false;
        ButtonBounce buttonBounce = this.contactBounce;
        if (buttonBounce != null) {
            buttonBounce.setPressed(false);
        }
        if (Build.VERSION.SDK_INT >= 21) {
            Drawable[] drawableArr = this.selectorDrawable;
            if (drawableArr[0] != null) {
                drawableArr[0].setState(StateSet.NOTHING);
            }
        }
        if (this.contactButtons != null) {
            for (int i = 0; i < this.contactButtons.size(); i++) {
                InstantViewButton instantViewButton = this.contactButtons.get(i);
                if (instantViewButton.buttonBounce != null) {
                    instantViewButton.buttonBounce.setPressed(false);
                }
                if (instantViewButton.selectorDrawable != null) {
                    instantViewButton.selectorDrawable.setState(StateSet.NOTHING);
                }
            }
        }
    }

    private boolean checkDateMotionEvent(MotionEvent motionEvent) {
        if (this.currentMessageObject.isImportedForward()) {
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            if (motionEvent.getAction() == 0) {
                float f = x;
                float f2 = this.drawTimeX;
                if (f < f2 || f > f2 + this.timeWidth) {
                    return false;
                }
                float f3 = y;
                float f4 = this.drawTimeY;
                if (f3 < f4 || f3 > f4 + AndroidUtilities.dp(20.0f)) {
                    return false;
                }
                this.timePressed = true;
                invalidate();
            } else if (motionEvent.getAction() != 1 || !this.timePressed) {
                return false;
            } else {
                this.timePressed = false;
                playSoundEffect(0);
                this.delegate.didPressTime(this);
                invalidate();
            }
            return true;
        }
        return false;
    }

    private boolean checkRoundSeekbar(MotionEvent motionEvent) {
        if (MediaController.getInstance().isPlayingMessage(this.currentMessageObject) && MediaController.getInstance().isMessagePaused()) {
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            if (motionEvent.getAction() == 0) {
                float f = x;
                if (f >= this.seekbarRoundX - AndroidUtilities.dp(20.0f) && f <= this.seekbarRoundX + AndroidUtilities.dp(20.0f)) {
                    float f2 = y;
                    if (f2 >= this.seekbarRoundY - AndroidUtilities.dp(20.0f) && f2 <= this.seekbarRoundY + AndroidUtilities.dp(20.0f)) {
                        getParent().requestDisallowInterceptTouchEvent(true);
                        cancelCheckLongPress();
                        this.roundSeekbarTouched = 1;
                        invalidate();
                    }
                }
                float centerX = f - this.photoImage.getCenterX();
                float centerY = y - this.photoImage.getCenterY();
                float imageWidth = (this.photoImage.getImageWidth() - AndroidUtilities.dp(64.0f)) / 2.0f;
                float f3 = (centerX * centerX) + (centerY * centerY);
                if (f3 < ((this.photoImage.getImageWidth() / 2.0f) * this.photoImage.getImageWidth()) / 2.0f && f3 > imageWidth * imageWidth) {
                    getParent().requestDisallowInterceptTouchEvent(true);
                    cancelCheckLongPress();
                    this.roundSeekbarTouched = 1;
                    invalidate();
                }
            } else if (this.roundSeekbarTouched == 1 && motionEvent.getAction() == 2) {
                float degrees = ((float) Math.toDegrees(Math.atan2(y - this.photoImage.getCenterY(), x - this.photoImage.getCenterX()))) + 90.0f;
                if (degrees < 0.0f) {
                    degrees += 360.0f;
                }
                float f4 = degrees / 360.0f;
                if (Math.abs(this.currentMessageObject.audioProgress - f4) > 0.9f) {
                    if (this.roundSeekbarOutAlpha == 0.0f) {
                        performHapticFeedback(3);
                    }
                    this.roundSeekbarOutAlpha = 1.0f;
                    this.roundSeekbarOutProgress = this.currentMessageObject.audioProgress;
                }
                long currentTimeMillis = System.currentTimeMillis();
                if (currentTimeMillis - this.lastSeekUpdateTime > 100) {
                    MediaController.getInstance().seekToProgress(this.currentMessageObject, f4);
                    this.lastSeekUpdateTime = currentTimeMillis;
                }
                this.currentMessageObject.audioProgress = f4;
                updatePlayingMessageProgress();
            }
            if ((motionEvent.getAction() == 1 || motionEvent.getAction() == 3) && this.roundSeekbarTouched != 0) {
                if (motionEvent.getAction() == 1) {
                    float degrees2 = ((float) Math.toDegrees(Math.atan2(y - this.photoImage.getCenterY(), x - this.photoImage.getCenterX()))) + 90.0f;
                    if (degrees2 < 0.0f) {
                        degrees2 += 360.0f;
                    }
                    float f5 = degrees2 / 360.0f;
                    this.currentMessageObject.audioProgress = f5;
                    MediaController.getInstance().seekToProgress(this.currentMessageObject, f5);
                    updatePlayingMessageProgress();
                }
                MediaController.getInstance().playMessage(this.currentMessageObject);
                this.roundSeekbarTouched = 0;
                getParent().requestDisallowInterceptTouchEvent(false);
            }
            return this.roundSeekbarTouched != 0;
        }
        return false;
    }

    /* JADX WARN: Removed duplicated region for block: B:104:0x01b5  */
    /* JADX WARN: Removed duplicated region for block: B:111:0x01dc  */
    /* JADX WARN: Removed duplicated region for block: B:37:0x0069  */
    /* JADX WARN: Removed duplicated region for block: B:38:0x0070  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private boolean checkPhotoImageMotionEvent(MotionEvent motionEvent) {
        boolean z;
        MessageObject messageObject;
        int i;
        int i2;
        int i3;
        int i4;
        boolean z2 = true;
        if ((this.drawPhotoImage || this.documentAttachType == 1) && (!this.currentMessageObject.isSending() || this.buttonState == 1)) {
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            if (motionEvent.getAction() == 0) {
                int dp = AndroidUtilities.dp(48.0f);
                if (this.miniButtonState >= 0) {
                    int dp2 = AndroidUtilities.dp(27.0f);
                    int i5 = this.buttonX;
                    if (x >= i5 + dp2 && x <= i5 + dp2 + dp) {
                        int i6 = this.buttonY;
                        if (y >= i6 + dp2 && y <= i6 + dp2 + dp) {
                            z = true;
                            MessageObject messageObject2 = this.currentMessageObject;
                            boolean z3 = messageObject2 != null || !messageObject2.hasMediaSpoilers() || this.currentMessageObject.isMediaSpoilersRevealed || this.buttonState == 1;
                            if (!z) {
                                this.miniButtonPressed = 1;
                                invalidate();
                            } else if (this.buttonState != -1 && this.radialProgress.getIcon() != 4 && x >= (i3 = this.buttonX) && x <= i3 + dp && y >= (i4 = this.buttonY) && y <= i4 + dp && z3) {
                                this.buttonPressed = 1;
                                invalidate();
                            } else if (this.drawVideoImageButton && this.buttonState != -1 && x >= (i = this.videoButtonX) && x <= i + AndroidUtilities.dp(34.0f) + Math.max(this.infoWidth, this.docTitleWidth) && y >= (i2 = this.videoButtonY) && y <= i2 + AndroidUtilities.dp(30.0f) && z3) {
                                this.videoButtonPressed = 1;
                                invalidate();
                            } else if (this.documentAttachType == 1) {
                                float f = x;
                                if (f >= this.photoImage.getImageX() && f <= (this.photoImage.getImageX() + this.backgroundWidth) - AndroidUtilities.dp(50.0f)) {
                                    float f2 = y;
                                    if (f2 >= this.photoImage.getImageY() && f2 <= this.photoImage.getImageY() + this.photoImage.getImageHeight()) {
                                        this.imagePressed = true;
                                    }
                                }
                                z2 = false;
                            } else {
                                if (!this.currentMessageObject.isAnyKindOfSticker() || this.currentMessageObject.getInputStickerSet() != null || this.currentMessageObject.isAnimatedEmoji() || this.currentMessageObject.isDice()) {
                                    float f3 = x;
                                    if (f3 >= this.photoImage.getImageX() && f3 <= this.photoImage.getImageX() + this.photoImage.getImageWidth()) {
                                        float f4 = y;
                                        if (f4 >= this.photoImage.getImageY() && f4 <= this.photoImage.getImageY() + this.photoImage.getImageHeight()) {
                                            if (this.isRoundVideo) {
                                                if (((f3 - this.photoImage.getCenterX()) * (f3 - this.photoImage.getCenterX())) + ((f4 - this.photoImage.getCenterY()) * (f4 - this.photoImage.getCenterY())) < (this.photoImage.getImageWidth() / 2.0f) * (this.photoImage.getImageWidth() / 2.0f)) {
                                                    this.imagePressed = true;
                                                }
                                            } else {
                                                this.imagePressed = true;
                                            }
                                            messageObject = this.currentMessageObject;
                                            if (messageObject.type == 12) {
                                                long j = MessageObject.getMedia(messageObject.messageOwner).user_id;
                                                if ((j != 0 ? MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(j)) : null) == null) {
                                                    this.imagePressed = false;
                                                }
                                            }
                                        }
                                    }
                                    z2 = false;
                                    messageObject = this.currentMessageObject;
                                    if (messageObject.type == 12) {
                                    }
                                }
                                z2 = false;
                            }
                            if (this.imagePressed) {
                                if (this.currentMessageObject.isSendError()) {
                                    this.imagePressed = false;
                                    return false;
                                } else if (this.currentMessageObject.type == 8 && this.buttonState == -1 && SharedConfig.isAutoplayGifs() && !this.currentMessageObject.isRepostPreview && this.photoImage.getAnimation() == null) {
                                    this.imagePressed = false;
                                    return false;
                                }
                            }
                            return z2;
                        }
                    }
                }
                z = false;
                MessageObject messageObject22 = this.currentMessageObject;
                if (messageObject22 != null) {
                }
                if (!z) {
                }
                if (this.imagePressed) {
                }
                return z2;
            } else if (motionEvent.getAction() == 1) {
                if (this.videoButtonPressed == 1) {
                    this.videoButtonPressed = 0;
                    playSoundEffect(0);
                    didPressButton(true, true);
                    invalidate();
                    return false;
                } else if (this.buttonPressed == 1) {
                    this.buttonPressed = 0;
                    playSoundEffect(0);
                    if (this.drawVideoImageButton) {
                        didClickedImage();
                    } else {
                        didPressButton(true, false);
                    }
                    invalidate();
                    return false;
                } else if (this.miniButtonPressed == 1) {
                    this.miniButtonPressed = 0;
                    playSoundEffect(0);
                    didPressMiniButton(true);
                    invalidate();
                    return false;
                } else if (this.imagePressed) {
                    this.imagePressed = false;
                    int i7 = this.buttonState;
                    if (i7 == -1 || ((i7 == 1 && this.isRoundVideo) || i7 == 2 || i7 == 3 || this.drawVideoImageButton)) {
                        playSoundEffect(0);
                        didClickedImage();
                    } else if (i7 == 0) {
                        playSoundEffect(0);
                        didPressButton(true, false);
                    }
                    invalidate();
                    return false;
                } else {
                    return false;
                }
            } else {
                return false;
            }
        }
        return false;
    }

    /* JADX WARN: Code restructure failed: missing block: B:79:0x0110, code lost:
        if (r4 <= (r0 + r6)) goto L68;
     */
    /* JADX WARN: Code restructure failed: missing block: B:80:0x0112, code lost:
        r0 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:94:0x014a, code lost:
        if (r4 <= (r0 + r6)) goto L68;
     */
    /* JADX WARN: Removed duplicated region for block: B:105:0x0164  */
    /* JADX WARN: Removed duplicated region for block: B:87:0x012f  */
    /* JADX WARN: Removed duplicated region for block: B:88:0x0132  */
    /* JADX WARN: Removed duplicated region for block: B:90:0x0139  */
    /* JADX WARN: Removed duplicated region for block: B:99:0x0154  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private boolean checkAudioMotionEvent(MotionEvent motionEvent) {
        boolean onTouch;
        MessageObject messageObject;
        boolean z;
        boolean z2;
        MessageObject messageObject2;
        int i;
        boolean z3;
        int i2;
        MessageObject messageObject3;
        int i3 = this.documentAttachType;
        if ((i3 != 3 && i3 != 5 && (i3 != 7 || (i3 == 7 && (messageObject3 = this.currentMessageObject) != null && !messageObject3.isVoiceTranscriptionOpen()))) || AndroidUtilities.isAccessibilityScreenReaderEnabled()) {
            return false;
        }
        int x = (int) motionEvent.getX();
        int y = (int) motionEvent.getY();
        if (this.useSeekBarWaveform) {
            onTouch = this.seekBarWaveform.onTouch(motionEvent.getAction(), (motionEvent.getX() - this.seekBarX) - AndroidUtilities.dp(13.0f), motionEvent.getY() - this.seekBarY);
        } else {
            onTouch = (MediaController.getInstance().isPlayingMessage(this.currentMessageObject) || ((messageObject = this.currentMessageObject) != null && this.documentAttachType == 7 && messageObject.isVoiceTranscriptionOpen())) ? this.seekBar.onTouch(motionEvent.getAction(), motionEvent.getX() - this.seekBarX, motionEvent.getY() - this.seekBarY) : false;
        }
        if (onTouch) {
            if (!this.useSeekBarWaveform && motionEvent.getAction() == 0) {
                getParent().requestDisallowInterceptTouchEvent(true);
            } else if (this.useSeekBarWaveform && !this.seekBarWaveform.isStartDraging() && motionEvent.getAction() == 1) {
                didPressButton(true, false);
            }
            this.disallowLongPress = true;
            invalidate();
            return onTouch;
        }
        int dp = AndroidUtilities.dp(36.0f);
        if (this.miniButtonState >= 0) {
            int dp2 = AndroidUtilities.dp(27.0f);
            int i4 = this.buttonX;
            if (x >= i4 + dp2 && x <= i4 + dp2 + dp) {
                int i5 = this.buttonY;
                if (y >= i5 + dp2 && y <= i5 + dp2 + dp) {
                    z = true;
                    if (!z && ((messageObject2 = this.currentMessageObject) == null || !messageObject2.hasMediaSpoilers() || this.currentMessageObject.isVoice() || this.currentMessageObject.isMediaSpoilersRevealed)) {
                        i = this.buttonState;
                        if (i != 0 || i == 1 || i == 2) {
                            if (x >= this.buttonX - AndroidUtilities.dp(12.0f) && x <= (this.buttonX - AndroidUtilities.dp(12.0f)) + this.backgroundWidth) {
                                z3 = this.drawInstantView;
                                if (y >= (!z3 ? this.buttonY : this.namesOffset + this.mediaOffsetY)) {
                                    if (z3) {
                                        i2 = this.buttonY;
                                    } else {
                                        i2 = this.namesOffset + this.mediaOffsetY;
                                        dp = AndroidUtilities.dp(82.0f);
                                    }
                                }
                            }
                        } else {
                            int i6 = this.buttonX;
                            if (x >= i6) {
                                if (x <= i6 + dp) {
                                    int i7 = this.buttonY;
                                    if (y >= i7) {
                                    }
                                }
                            }
                        }
                        if (motionEvent.getAction() == 0) {
                            if (z2 || z) {
                                if (z2) {
                                    this.buttonPressed = 1;
                                } else {
                                    this.miniButtonPressed = 1;
                                }
                                invalidate();
                                return true;
                            }
                            return onTouch;
                        } else if (this.buttonPressed != 0) {
                            if (motionEvent.getAction() == 1) {
                                this.buttonPressed = 0;
                                playSoundEffect(0);
                                didPressButton(true, false);
                                invalidate();
                                return onTouch;
                            } else if (motionEvent.getAction() == 3) {
                                this.buttonPressed = 0;
                                invalidate();
                                return onTouch;
                            } else if (motionEvent.getAction() != 2 || z2) {
                                return onTouch;
                            } else {
                                this.buttonPressed = 0;
                                invalidate();
                                return onTouch;
                            }
                        } else if (this.miniButtonPressed != 0) {
                            if (motionEvent.getAction() == 1) {
                                this.miniButtonPressed = 0;
                                playSoundEffect(0);
                                didPressMiniButton(true);
                                invalidate();
                                return onTouch;
                            } else if (motionEvent.getAction() == 3) {
                                this.miniButtonPressed = 0;
                                invalidate();
                                return onTouch;
                            } else if (motionEvent.getAction() != 2 || z) {
                                return onTouch;
                            } else {
                                this.miniButtonPressed = 0;
                                invalidate();
                                return onTouch;
                            }
                        } else {
                            return onTouch;
                        }
                    }
                    z2 = false;
                    if (motionEvent.getAction() == 0) {
                    }
                }
            }
        }
        z = false;
        if (!z) {
            i = this.buttonState;
            if (i != 0) {
            }
            if (x >= this.buttonX - AndroidUtilities.dp(12.0f)) {
                z3 = this.drawInstantView;
                if (y >= (!z3 ? this.buttonY : this.namesOffset + this.mediaOffsetY)) {
                }
            }
        }
        z2 = false;
        if (motionEvent.getAction() == 0) {
        }
    }

    public boolean checkSpoilersMotionEvent(MotionEvent motionEvent, int i) {
        int i2;
        MessageObject.GroupedMessages groupedMessages;
        if (i <= 15 && getParent() != null) {
            if (this.currentMessageObject.hasValidGroupId() && (groupedMessages = this.currentMessagesGroup) != null && !groupedMessages.isDocuments) {
                ViewGroup viewGroup = (ViewGroup) getParent();
                for (int i3 = 0; i3 < viewGroup.getChildCount(); i3++) {
                    View childAt = viewGroup.getChildAt(i3);
                    if (childAt instanceof ChatMessageCell) {
                        ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                        MessageObject.GroupedMessages currentMessagesGroup = chatMessageCell.getCurrentMessagesGroup();
                        MessageObject.GroupedMessagePosition currentPosition = chatMessageCell.getCurrentPosition();
                        if (currentMessagesGroup != null && currentMessagesGroup.groupId == this.currentMessagesGroup.groupId) {
                            int i4 = currentPosition.flags;
                            if ((i4 & 8) != 0 && (i4 & 1) != 0 && chatMessageCell != this) {
                                motionEvent.offsetLocation(getLeft() - chatMessageCell.getLeft(), getTop() - chatMessageCell.getTop());
                                boolean checkSpoilersMotionEvent = chatMessageCell.checkSpoilersMotionEvent(motionEvent, i + 1);
                                motionEvent.offsetLocation(-(getLeft() - chatMessageCell.getLeft()), -(getTop() - chatMessageCell.getTop()));
                                return checkSpoilersMotionEvent;
                            }
                        }
                    }
                }
            }
            if (this.isSpoilerRevealing) {
                return false;
            }
            int x = (int) motionEvent.getX();
            int y = (int) motionEvent.getY();
            int actionMasked = motionEvent.getActionMasked();
            if (actionMasked == 0) {
                int i5 = this.textX;
                if (x >= i5 && y >= (i2 = this.textY)) {
                    MessageObject messageObject = this.currentMessageObject;
                    if (x <= i5 + messageObject.textWidth && y <= i2 + messageObject.textHeight) {
                        ArrayList<MessageObject.TextLayoutBlock> arrayList = messageObject.textLayoutBlocks;
                        for (int i6 = 0; i6 < arrayList.size() && arrayList.get(i6).textYOffset <= y; i6++) {
                            MessageObject.TextLayoutBlock textLayoutBlock = arrayList.get(i6);
                            int i7 = textLayoutBlock.isRtl() ? (int) this.currentMessageObject.textXOffset : 0;
                            for (SpoilerEffect spoilerEffect : textLayoutBlock.spoilers) {
                                if (spoilerEffect.getBounds().contains((x - this.textX) + i7, (int) ((y - this.textY) - textLayoutBlock.textYOffset))) {
                                    this.spoilerPressed = spoilerEffect;
                                    return true;
                                }
                            }
                        }
                    }
                }
                MessageObject.TextLayoutBlocks textLayoutBlocks = this.captionLayout;
                if (textLayoutBlocks != null) {
                    float f = x;
                    float f2 = this.captionX;
                    if (f >= f2) {
                        float f3 = y;
                        float f4 = this.captionY;
                        if (f3 >= f4 && f <= f2 + textLayoutBlocks.textWidth && f3 <= f4 + textLayoutBlocks.textHeight) {
                            ArrayList<MessageObject.TextLayoutBlock> arrayList2 = textLayoutBlocks.textLayoutBlocks;
                            for (int i8 = 0; i8 < arrayList2.size() && arrayList2.get(i8).textYOffset <= f3; i8++) {
                                MessageObject.TextLayoutBlock textLayoutBlock2 = arrayList2.get(i8);
                                int i9 = textLayoutBlock2.isRtl() ? (int) this.captionLayout.textXOffset : 0;
                                for (SpoilerEffect spoilerEffect2 : textLayoutBlock2.spoilers) {
                                    if (spoilerEffect2.getBounds().contains((int) ((f - this.captionX) + i9), (int) ((f3 - this.captionY) - textLayoutBlock2.textYOffset))) {
                                        this.spoilerPressed = spoilerEffect2;
                                        return true;
                                    }
                                }
                            }
                        }
                    }
                }
            } else if (actionMasked == 1 && this.spoilerPressed != null) {
                playSoundEffect(0);
                this.sPath.rewind();
                MessageObject.TextLayoutBlocks textLayoutBlocks2 = this.captionLayout;
                if (textLayoutBlocks2 != null) {
                    Iterator<MessageObject.TextLayoutBlock> it = textLayoutBlocks2.textLayoutBlocks.iterator();
                    while (it.hasNext()) {
                        MessageObject.TextLayoutBlock next = it.next();
                        for (SpoilerEffect spoilerEffect3 : next.spoilers) {
                            Rect bounds = spoilerEffect3.getBounds();
                            float f5 = next.textYOffset;
                            this.sPath.addRect(bounds.left, bounds.top + f5, bounds.right, bounds.bottom + f5, Path.Direction.CW);
                        }
                    }
                } else {
                    Iterator<MessageObject.TextLayoutBlock> it2 = this.currentMessageObject.textLayoutBlocks.iterator();
                    while (it2.hasNext()) {
                        MessageObject.TextLayoutBlock next2 = it2.next();
                        for (SpoilerEffect spoilerEffect4 : next2.spoilers) {
                            Rect bounds2 = spoilerEffect4.getBounds();
                            float f6 = next2.textYOffset;
                            this.sPath.addRect(bounds2.left, bounds2.top + f6, bounds2.right, bounds2.bottom + f6, Path.Direction.CW);
                        }
                    }
                }
                this.sPath.computeBounds(this.rect, false);
                float sqrt = (float) Math.sqrt(Math.pow(this.rect.width(), 2.0d) + Math.pow(this.rect.height(), 2.0d));
                this.isSpoilerRevealing = true;
                this.spoilerPressed.setOnRippleEndCallback(new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda4
                    @Override // java.lang.Runnable
                    public final void run() {
                        ChatMessageCell.this.lambda$checkSpoilersMotionEvent$1();
                    }
                });
                MessageObject.TextLayoutBlocks textLayoutBlocks3 = this.captionLayout;
                if (textLayoutBlocks3 != null) {
                    Iterator<MessageObject.TextLayoutBlock> it3 = textLayoutBlocks3.textLayoutBlocks.iterator();
                    while (it3.hasNext()) {
                        MessageObject.TextLayoutBlock next3 = it3.next();
                        int i10 = next3.isRtl() ? (int) this.captionLayout.textXOffset : 0;
                        for (SpoilerEffect spoilerEffect5 : next3.spoilers) {
                            spoilerEffect5.startRipple((x - this.captionX) + i10, (y - next3.textYOffset) - this.captionY, sqrt);
                        }
                    }
                } else {
                    ArrayList<MessageObject.TextLayoutBlock> arrayList3 = this.currentMessageObject.textLayoutBlocks;
                    if (arrayList3 != null) {
                        Iterator<MessageObject.TextLayoutBlock> it4 = arrayList3.iterator();
                        while (it4.hasNext()) {
                            MessageObject.TextLayoutBlock next4 = it4.next();
                            int i11 = next4.isRtl() ? (int) this.currentMessageObject.textXOffset : 0;
                            for (SpoilerEffect spoilerEffect6 : next4.spoilers) {
                                spoilerEffect6.startRipple((x - this.textX) + i11, (y - next4.textYOffset) - this.textY, sqrt);
                            }
                        }
                    }
                }
                if (getParent() instanceof RecyclerListView) {
                    ViewGroup viewGroup2 = (ViewGroup) getParent();
                    for (int i12 = 0; i12 < viewGroup2.getChildCount(); i12++) {
                        View childAt2 = viewGroup2.getChildAt(i12);
                        if (childAt2 instanceof ChatMessageCell) {
                            final ChatMessageCell chatMessageCell2 = (ChatMessageCell) childAt2;
                            if (chatMessageCell2.getMessageObject() != null && chatMessageCell2.getMessageObject().getReplyMsgId() == getMessageObject().getId() && !chatMessageCell2.replySpoilers.isEmpty()) {
                                chatMessageCell2.replySpoilers.get(0).setOnRippleEndCallback(new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda10
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        ChatMessageCell.this.lambda$checkSpoilersMotionEvent$3(chatMessageCell2);
                                    }
                                });
                                for (SpoilerEffect spoilerEffect7 : chatMessageCell2.replySpoilers) {
                                    spoilerEffect7.startRipple(spoilerEffect7.getBounds().centerX(), spoilerEffect7.getBounds().centerY(), sqrt);
                                }
                            }
                        }
                    }
                }
                this.spoilerPressed = null;
                return true;
            }
        }
        return false;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$checkSpoilersMotionEvent$1() {
        post(new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda2
            @Override // java.lang.Runnable
            public final void run() {
                ChatMessageCell.this.lambda$checkSpoilersMotionEvent$0();
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$checkSpoilersMotionEvent$0() {
        this.isSpoilerRevealing = false;
        getMessageObject().isSpoilersRevealed = true;
        MessageObject.TextLayoutBlocks textLayoutBlocks = this.captionLayout;
        if (textLayoutBlocks != null) {
            Iterator<MessageObject.TextLayoutBlock> it = textLayoutBlocks.textLayoutBlocks.iterator();
            while (it.hasNext()) {
                it.next().spoilers.clear();
            }
        } else {
            ArrayList<MessageObject.TextLayoutBlock> arrayList = this.currentMessageObject.textLayoutBlocks;
            if (arrayList != null) {
                Iterator<MessageObject.TextLayoutBlock> it2 = arrayList.iterator();
                while (it2.hasNext()) {
                    it2.next().spoilers.clear();
                }
            }
        }
        invalidate();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$checkSpoilersMotionEvent$3(final ChatMessageCell chatMessageCell) {
        post(new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda6
            @Override // java.lang.Runnable
            public final void run() {
                ChatMessageCell.lambda$checkSpoilersMotionEvent$2(ChatMessageCell.this);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$checkSpoilersMotionEvent$2(ChatMessageCell chatMessageCell) {
        chatMessageCell.getMessageObject().replyMessageObject.isSpoilersRevealed = true;
        chatMessageCell.replySpoilers.clear();
        chatMessageCell.invalidate();
    }

    private boolean checkBotButtonMotionEvent(MotionEvent motionEvent) {
        int i;
        int dp;
        if (this.botButtons.isEmpty()) {
            return false;
        }
        int x = (int) motionEvent.getX();
        int y = (int) motionEvent.getY();
        if (motionEvent.getAction() == 0) {
            if (this.currentMessageObject.isOutOwner()) {
                dp = (getMeasuredWidth() - this.widthForButtons) - AndroidUtilities.dp(10.0f);
            } else {
                dp = this.backgroundDrawableLeft + AndroidUtilities.dp(this.mediaBackground ? 1.0f : 7.0f);
            }
            for (int i2 = 0; i2 < this.botButtons.size(); i2++) {
                BotButton botButton = this.botButtons.get(i2);
                int dp2 = (botButton.y + this.layoutHeight) - AndroidUtilities.dp(2.0f);
                if (x >= botButton.x + dp && x <= botButton.x + dp + botButton.width && y >= dp2 && y <= botButton.height + dp2) {
                    this.pressedBotButton = i2;
                    invalidateOutbounds();
                    if (botButton.selectorDrawable == null) {
                        botButton.selectorDrawable = Theme.createRadSelectorDrawable(getThemedColor(Theme.key_chat_serviceBackgroundSelector), 6, 6);
                        botButton.selectorDrawable.setCallback(this);
                        botButton.selectorDrawable.setBounds(botButton.x + dp, dp2, botButton.x + dp + botButton.width, botButton.height + dp2);
                    }
                    if (Build.VERSION.SDK_INT >= 21) {
                        botButton.selectorDrawable.setHotspot(x, y);
                    }
                    botButton.selectorDrawable.setState(this.pressedState);
                    botButton.setPressed(true);
                    final int i3 = this.pressedBotButton;
                    postDelayed(new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda7
                        @Override // java.lang.Runnable
                        public final void run() {
                            ChatMessageCell.this.lambda$checkBotButtonMotionEvent$4(i3);
                        }
                    }, ViewConfiguration.getLongPressTimeout() - 1);
                    return true;
                }
            }
            return false;
        } else if (motionEvent.getAction() == 1) {
            if (this.pressedBotButton != -1) {
                playSoundEffect(0);
                BotButton botButton2 = this.botButtons.get(this.pressedBotButton);
                if (botButton2.selectorDrawable != null) {
                    botButton2.selectorDrawable.setState(StateSet.NOTHING);
                }
                botButton2.setPressed(false);
                if (!this.currentMessageObject.scheduled) {
                    if (botButton2.button != null) {
                        this.delegate.didPressBotButton(this, botButton2.button);
                    }
                } else {
                    Toast.makeText(getContext(), LocaleController.getString("MessageScheduledBotAction", R.string.MessageScheduledBotAction), 1).show();
                }
                this.pressedBotButton = -1;
                invalidateOutbounds();
                return false;
            }
            return false;
        } else if (motionEvent.getAction() != 3 || (i = this.pressedBotButton) == -1) {
            return false;
        } else {
            BotButton botButton3 = this.botButtons.get(i);
            if (botButton3.selectorDrawable != null) {
                botButton3.selectorDrawable.setState(StateSet.NOTHING);
            }
            botButton3.setPressed(false);
            this.pressedBotButton = -1;
            invalidateOutbounds();
            return false;
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$checkBotButtonMotionEvent$4(int i) {
        int i2 = this.pressedBotButton;
        if (i == i2) {
            BotButton botButton = this.botButtons.get(i2);
            if (botButton != null) {
                if (botButton.selectorDrawable != null) {
                    botButton.selectorDrawable.setState(StateSet.NOTHING);
                }
                botButton.setPressed(false);
                if (!this.currentMessageObject.scheduled && botButton.button != null) {
                    cancelCheckLongPress();
                    this.delegate.didLongPressBotButton(this, botButton.button);
                }
            }
            this.pressedBotButton = -1;
            invalidateOutbounds();
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:518:0x07cd, code lost:
        if (r5 > (r22.sideStartY + org.telegram.messenger.AndroidUtilities.dp((38 + ((r22.drawSideButton != 3 || r22.commentLayout == null) ? 0 : 18)) + (r22.drawSideButton2 != 5 ? 0 : 38)))) goto L571;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Type inference failed for: r1v138 */
    /* JADX WARN: Type inference failed for: r1v52 */
    /* JADX WARN: Type inference failed for: r1v53, types: [boolean, int] */
    @Override // android.view.View
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public boolean onTouchEvent(MotionEvent motionEvent) {
        ChatMessageCellDelegate chatMessageCellDelegate;
        boolean z;
        int i;
        int i2;
        ?? r1;
        TLRPC$Message tLRPC$Message;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        boolean z2;
        TLRPC$Chat tLRPC$Chat;
        int i3;
        int i4;
        int i5;
        int i6;
        int i7;
        MessageTopicButton messageTopicButton;
        ChannelRecommendationsCell channelRecommendationsCell;
        MessageObject messageObject;
        if (this.currentMessageObject == null || (((chatMessageCellDelegate = this.delegate) != null && !chatMessageCellDelegate.canPerformActions()) || this.animationRunning)) {
            MessageObject messageObject2 = this.currentMessageObject;
            if (messageObject2 != null && messageObject2.preview) {
                return checkTextSelection(motionEvent);
            }
            checkTextSelection(motionEvent);
            return super.onTouchEvent(motionEvent);
        }
        boolean z3 = true;
        if (checkTextSelection(motionEvent) || checkRoundSeekbar(motionEvent) || checkReactionsTouchEvent(motionEvent)) {
            return true;
        }
        VideoPlayerRewinder videoPlayerRewinder = this.videoPlayerRewinder;
        if (videoPlayerRewinder != null && videoPlayerRewinder.rewindCount > 0) {
            if (motionEvent.getAction() == 1 || motionEvent.getAction() == 3) {
                getParent().requestDisallowInterceptTouchEvent(false);
                this.videoPlayerRewinder.cancelRewind();
                return false;
            }
            return true;
        }
        this.disallowLongPress = false;
        this.lastTouchX = motionEvent.getX();
        float y = motionEvent.getY();
        this.lastTouchY = y;
        this.backgroundDrawable.setTouchCoords(this.lastTouchX, y);
        boolean checkSpoilersMotionEvent = checkSpoilersMotionEvent(motionEvent, 0);
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkTextBlockMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent && (channelRecommendationsCell = this.channelRecommendationsCell) != null && (messageObject = this.currentMessageObject) != null && messageObject.type == 27 && (checkSpoilersMotionEvent = channelRecommendationsCell.checkTouchEvent(motionEvent))) {
            this.disallowLongPress = true;
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkAdminMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkNameMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkNameStatusMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkPinchToZoom(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkDateMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkTextSelection(motionEvent);
        }
        if (!checkSpoilersMotionEvent && (messageTopicButton = this.topicButton) != null) {
            checkSpoilersMotionEvent = messageTopicButton.checkTouchEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkOtherButtonMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkSponsoredCloseMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkCaptionMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkTranscribeButtonMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkAudioMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkTitleLabelMotion(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkContactMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkLinkPreviewMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkInstantButtonMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkCommentButtonMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkGameMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkPhotoImageMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkBotButtonMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = checkPollButtonMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = this.giveawayMessageCell.checkMotionEvent(motionEvent);
        }
        if (!checkSpoilersMotionEvent) {
            checkSpoilersMotionEvent = this.giveawayResultsMessageCell.checkMotionEvent(motionEvent);
        }
        if (motionEvent.getAction() == 3) {
            this.spoilerPressed = null;
            this.buttonPressed = 0;
            this.miniButtonPressed = 0;
            this.pressedBotButton = -1;
            this.pressedVoteButton = -1;
            this.pollHintPressed = false;
            this.psaHintPressed = false;
            this.linkPreviewPressed = false;
            this.otherPressed = false;
            this.sideButtonPressed = false;
            this.pressedSideButton = 0;
            this.imagePressed = false;
            this.timePressed = false;
            this.gamePreviewPressed = false;
            this.commentButtonPressed = false;
            this.instantPressed = false;
            setInstantButtonPressed(false);
            resetContactButtonsPressedState();
            ButtonBounce buttonBounce = this.titleLabelBounce;
            if (buttonBounce != null) {
                buttonBounce.setPressed(false);
            }
            if (Build.VERSION.SDK_INT >= 21) {
                int i8 = 0;
                while (true) {
                    Drawable[] drawableArr = this.selectorDrawable;
                    if (i8 >= drawableArr.length) {
                        break;
                    }
                    if (drawableArr[i8] != null) {
                        drawableArr[i8].setState(StateSet.NOTHING);
                    }
                    i8++;
                }
                Drawable drawable = this.linkPreviewSelector;
                if (drawable != null) {
                    drawable.setState(StateSet.NOTHING);
                }
            }
            Drawable drawable2 = this.nameStatusSelector;
            if (drawable2 != null) {
                drawable2.setState(StateSet.NOTHING);
            }
            Drawable drawable3 = this.nameLayoutSelector;
            if (drawable3 != null) {
                drawable3.setState(StateSet.NOTHING);
            }
            resetCodeSelectors();
            ButtonBounce buttonBounce2 = this.linkPreviewBounce;
            if (buttonBounce2 != null) {
                buttonBounce2.setPressed(false);
            }
            if (this.hadLongPress) {
                if (this.pressedLinkType != 2) {
                    this.hadLongPress = false;
                }
                this.pressedLink = null;
                this.pressedEmoji = null;
                this.pressedLinkType = -1;
            } else {
                resetPressedLink(-1);
            }
            z = false;
        } else {
            z = checkSpoilersMotionEvent;
        }
        updateRadialProgressBackground();
        if (!this.disallowLongPress && z && motionEvent.getAction() == 0) {
            startCheckLongPress();
        }
        if (motionEvent.getAction() != 0 && motionEvent.getAction() != 2) {
            cancelCheckLongPress();
        }
        if (z) {
            return z;
        }
        float x = motionEvent.getX();
        float y2 = motionEvent.getY();
        if (motionEvent.getAction() == 0) {
            ChatMessageCellDelegate chatMessageCellDelegate2 = this.delegate;
            if (chatMessageCellDelegate2 == null || chatMessageCellDelegate2.canPerformActions()) {
                if (this.isAvatarVisible && this.avatarImage.isInsideImage(x, getTop() + y2)) {
                    this.avatarPressed = true;
                } else {
                    if (this.psaButtonVisible && this.hasPsaHint) {
                        int i9 = this.psaHelpX;
                        if (x >= i9 && x <= i9 + AndroidUtilities.dp(40.0f)) {
                            int i10 = this.psaHelpY;
                            if (y2 >= i10 && y2 <= i10 + AndroidUtilities.dp(40.0f)) {
                                this.psaHintPressed = true;
                                createSelectorDrawable(0);
                                this.selectorDrawableMaskType[0] = 3;
                                if (Build.VERSION.SDK_INT >= 21) {
                                    Drawable[] drawableArr2 = this.selectorDrawable;
                                    if (drawableArr2[0] != null) {
                                        drawableArr2[0].setBounds(this.psaHelpX - AndroidUtilities.dp(8.0f), this.psaHelpY - AndroidUtilities.dp(8.0f), this.psaHelpX + AndroidUtilities.dp(32.0f), this.psaHelpY + AndroidUtilities.dp(32.0f));
                                        this.selectorDrawable[0].setHotspot(x, y2);
                                        this.selectorDrawable[0].setState(this.pressedState);
                                    }
                                }
                                invalidate();
                            }
                        }
                    }
                    if (this.drawForwardedName && this.forwardedNameLayout[0] != null) {
                        float f = this.forwardNameX;
                        if (x >= f && x <= this.forwardedNameWidth + f) {
                            int i11 = this.forwardNameY;
                            if (y2 >= i11 && y2 <= i11 + this.forwardHeight) {
                                if (this.viaWidth != 0 && x >= f + this.viaNameWidth + AndroidUtilities.dp(4.0f)) {
                                    this.forwardBotPressed = true;
                                } else {
                                    ForwardBackground forwardBackground = this.forwardBg;
                                    if (forwardBackground != null) {
                                        forwardBackground.setPressed(true, x - this.forwardNameX, y2 - this.forwardNameY);
                                    }
                                    this.forwardNamePressed = true;
                                }
                            }
                        }
                    }
                    if (this.drawNameLayout && this.nameLayout != null && (i7 = this.viaWidth) != 0) {
                        float f2 = this.nameX;
                        int i12 = this.viaNameWidth;
                        if (x >= i12 + f2 && x <= f2 + i12 + i7 && y2 >= this.nameY - AndroidUtilities.dp(4.0f) && y2 <= this.nameY + AndroidUtilities.dp(20.0f)) {
                            this.forwardBotPressed = true;
                        }
                    }
                    if (this.drawSideButton != 0 && x >= this.sideStartX - AndroidUtilities.dp(24.0f) && x <= this.sideStartX + AndroidUtilities.dp(40.0f) && y2 >= this.sideStartY - AndroidUtilities.dp(24.0f)) {
                        if (y2 <= this.sideStartY + AndroidUtilities.dp(38 + ((this.drawSideButton != 3 || this.commentLayout == null) ? 0 : 18) + (this.drawSideButton2 != 5 ? 0 : 38))) {
                            if (this.currentMessageObject.isSent()) {
                                if (this.currentMessageObject.isSponsored()) {
                                    if (y2 > this.sideStartY + AndroidUtilities.dp(32.0f) && this.drawSideButton2 == 5) {
                                        this.pressedSideButton = 5;
                                    } else {
                                        this.pressedSideButton = 4;
                                    }
                                } else {
                                    this.pressedSideButton = this.drawSideButton;
                                }
                                this.sideButtonPressed = true;
                            }
                            invalidate();
                        }
                    }
                    if (this.replyNameLayout != null) {
                        if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                            i5 = this.replyStartX;
                            i6 = Math.max(this.replyNameWidth, this.replyTextWidth);
                        } else {
                            i5 = this.replyStartX;
                            i6 = this.backgroundDrawableRight;
                        }
                        int i13 = i5 + i6;
                        if (x >= this.replyStartX && x <= i13) {
                            int i14 = this.replyStartY;
                            if (y2 >= i14 && y2 <= i14 + this.replyHeight) {
                                this.replyPressed = true;
                                this.replyTouchX = x;
                                this.replyTouchY = getY() + y2;
                                Drawable drawable4 = this.replySelector;
                                if (drawable4 != null) {
                                    if (Build.VERSION.SDK_INT >= 21) {
                                        drawable4.setHotspot(x, y2);
                                    }
                                    this.replySelectorPressed = false;
                                    this.replySelectorCanBePressed = true;
                                    postDelayed(new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda3
                                        @Override // java.lang.Runnable
                                        public final void run() {
                                            ChatMessageCell.this.lambda$onTouchEvent$5();
                                        }
                                    }, ViewConfiguration.getTapTimeout() / 6);
                                    invalidate();
                                }
                                ButtonBounce buttonBounce3 = this.replyBounce;
                                if (buttonBounce3 != null) {
                                    buttonBounce3.setPressed(true);
                                    this.replyBounceX = x;
                                    this.replyBounceY = y2;
                                }
                            }
                        }
                    }
                    z3 = z;
                }
                if (z3) {
                    startCheckLongPress();
                }
                return z3;
            }
            return z;
        }
        if (motionEvent.getAction() != 2) {
            cancelCheckLongPress();
        }
        if (this.avatarPressed) {
            if (motionEvent.getAction() == 1) {
                this.avatarPressed = false;
                playSoundEffect(0);
                ChatMessageCellDelegate chatMessageCellDelegate3 = this.delegate;
                if (chatMessageCellDelegate3 != null) {
                    TLRPC$User tLRPC$User = this.currentUser;
                    if (tLRPC$User != null) {
                        if (tLRPC$User.id == 0) {
                            chatMessageCellDelegate3.didPressHiddenForward(this);
                            return z;
                        }
                        chatMessageCellDelegate3.didPressUserAvatar(this, tLRPC$User, this.lastTouchX, this.lastTouchY);
                        return z;
                    }
                    TLRPC$Chat tLRPC$Chat2 = this.currentChat;
                    if (tLRPC$Chat2 != null) {
                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = this.currentMessageObject.messageOwner.fwd_from;
                        if (tLRPC$MessageFwdHeader != null) {
                            if ((tLRPC$MessageFwdHeader.flags & 16) != 0) {
                                i4 = tLRPC$MessageFwdHeader.saved_from_msg_id;
                                tLRPC$Chat = tLRPC$Chat2;
                            } else {
                                i4 = tLRPC$MessageFwdHeader.channel_post;
                                tLRPC$Chat = this.currentForwardChannel;
                            }
                            i3 = i4;
                        } else {
                            tLRPC$Chat = tLRPC$Chat2;
                            i3 = 0;
                        }
                        chatMessageCellDelegate3.didPressChannelAvatar(this, tLRPC$Chat != null ? tLRPC$Chat : tLRPC$Chat2, i3, this.lastTouchX, this.lastTouchY);
                        return z;
                    } else if (this.currentMessageObject != null) {
                        chatMessageCellDelegate3.didPressInstantButton(this, this.drawInstantViewType);
                        return z;
                    } else {
                        return z;
                    }
                }
                return z;
            } else if (motionEvent.getAction() == 3) {
                this.avatarPressed = false;
                return z;
            } else if (motionEvent.getAction() == 2 && this.isAvatarVisible && !this.avatarImage.isInsideImage(x, y2 + getTop())) {
                this.avatarPressed = false;
                return z;
            } else {
                return z;
            }
        } else if (this.psaHintPressed) {
            if (motionEvent.getAction() == 1) {
                playSoundEffect(0);
                this.delegate.didPressHint(this, 1);
                this.psaHintPressed = false;
                if (Build.VERSION.SDK_INT >= 21) {
                    Drawable[] drawableArr3 = this.selectorDrawable;
                    if (drawableArr3[0] != null) {
                        drawableArr3[0].setState(StateSet.NOTHING);
                    }
                }
                invalidate();
                return z;
            }
            return z;
        } else if (this.forwardNamePressed) {
            if (motionEvent.getAction() == 1) {
                this.forwardNamePressed = false;
                ForwardBackground forwardBackground2 = this.forwardBg;
                if (forwardBackground2 != null) {
                    forwardBackground2.setPressed(false);
                }
                playSoundEffect(0);
                ChatMessageCellDelegate chatMessageCellDelegate4 = this.delegate;
                if (chatMessageCellDelegate4 != null) {
                    TLRPC$Chat tLRPC$Chat3 = this.currentForwardChannel;
                    if (tLRPC$Chat3 != null) {
                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2 = this.currentMessageObject.messageOwner.fwd_from;
                        chatMessageCellDelegate4.didPressChannelAvatar(this, tLRPC$Chat3, tLRPC$MessageFwdHeader2 != null ? tLRPC$MessageFwdHeader2.channel_post : 0, this.lastTouchX, this.lastTouchY);
                        return z;
                    }
                    TLRPC$User tLRPC$User2 = this.currentForwardUser;
                    if (tLRPC$User2 != null) {
                        chatMessageCellDelegate4.didPressUserAvatar(this, tLRPC$User2, this.lastTouchX, this.lastTouchY);
                        return z;
                    } else if (this.currentForwardName != null) {
                        chatMessageCellDelegate4.didPressHiddenForward(this);
                        return z;
                    } else {
                        return z;
                    }
                }
                return z;
            } else if (motionEvent.getAction() == 3) {
                this.forwardNamePressed = false;
                ForwardBackground forwardBackground3 = this.forwardBg;
                if (forwardBackground3 != null) {
                    forwardBackground3.setPressed(false);
                    return z;
                }
                return z;
            } else if (motionEvent.getAction() == 2) {
                float f3 = this.forwardNameX;
                if (x >= f3 && x <= f3 + this.forwardedNameWidth) {
                    int i15 = this.forwardNameY;
                    if (y2 >= i15 && y2 <= i15 + this.forwardHeight) {
                        return z;
                    }
                }
                this.forwardNamePressed = false;
                ForwardBackground forwardBackground4 = this.forwardBg;
                if (forwardBackground4 != null) {
                    forwardBackground4.setPressed(false);
                    return z;
                }
                return z;
            } else {
                return z;
            }
        } else if (this.forwardBotPressed) {
            if (motionEvent.getAction() == 1) {
                this.forwardBotPressed = false;
                playSoundEffect(0);
                ChatMessageCellDelegate chatMessageCellDelegate5 = this.delegate;
                if (chatMessageCellDelegate5 != null) {
                    TLRPC$User tLRPC$User3 = this.currentViaBotUser;
                    if (tLRPC$User3 != null && tLRPC$User3.bot_inline_placeholder == null) {
                        chatMessageCellDelegate5.didPressViaBotNotInline(this, tLRPC$User3 != null ? tLRPC$User3.id : 0L);
                        return z;
                    }
                    chatMessageCellDelegate5.didPressViaBot(this, tLRPC$User3 != null ? tLRPC$User3.username : this.currentMessageObject.messageOwner.via_bot_name);
                    return z;
                }
                return z;
            } else if (motionEvent.getAction() == 3) {
                this.forwardBotPressed = false;
                return z;
            } else if (motionEvent.getAction() == 2) {
                if (this.drawForwardedName && this.forwardedNameLayout[0] != null) {
                    float f4 = this.forwardNameX;
                    if (x >= f4 && x <= f4 + this.forwardedNameWidth) {
                        int i16 = this.forwardNameY;
                        if (y2 >= i16 && y2 <= i16 + this.forwardHeight) {
                            return z;
                        }
                    }
                    this.forwardBotPressed = false;
                    return z;
                }
                float f5 = this.nameX;
                int i17 = this.viaNameWidth;
                if (x < i17 + f5 || x > f5 + i17 + this.viaWidth || y2 < this.nameY - AndroidUtilities.dp(4.0f) || y2 > this.nameY + AndroidUtilities.dp(20.0f)) {
                    this.forwardBotPressed = false;
                    return z;
                }
                return z;
            } else {
                return z;
            }
        } else if (this.replyPressed) {
            if (motionEvent.getAction() == 1) {
                this.replyPressed = false;
                Drawable drawable5 = this.replySelector;
                if (drawable5 != null) {
                    if (!this.replySelectorPressed) {
                        drawable5.setState(new int[]{16842919, 16842910});
                        post(new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda5
                            @Override // java.lang.Runnable
                            public final void run() {
                                ChatMessageCell.this.lambda$onTouchEvent$6();
                            }
                        });
                        z2 = false;
                    } else {
                        z2 = false;
                        drawable5.setState(new int[0]);
                    }
                    this.replySelectorPressed = z2;
                    this.replySelectorCanBePressed = z2;
                    invalidate();
                    r1 = z2;
                } else {
                    r1 = 0;
                }
                ButtonBounce buttonBounce4 = this.replyBounce;
                if (buttonBounce4 != 0) {
                    buttonBounce4.setPressed(r1);
                }
                playSoundEffect(r1);
                if (this.replyPanelIsForward) {
                    ChatMessageCellDelegate chatMessageCellDelegate6 = this.delegate;
                    if (chatMessageCellDelegate6 != null) {
                        TLRPC$Chat tLRPC$Chat4 = this.currentForwardChannel;
                        if (tLRPC$Chat4 != null) {
                            chatMessageCellDelegate6.didPressChannelAvatar(this, tLRPC$Chat4, this.currentMessageObject.messageOwner.fwd_from.channel_post, this.lastTouchX, this.lastTouchY);
                            return z;
                        }
                        TLRPC$User tLRPC$User4 = this.currentForwardUser;
                        if (tLRPC$User4 != null) {
                            chatMessageCellDelegate6.didPressUserAvatar(this, tLRPC$User4, this.lastTouchX, this.lastTouchY);
                            return z;
                        } else if (this.currentForwardName != null) {
                            chatMessageCellDelegate6.didPressHiddenForward(this);
                            return z;
                        } else {
                            return z;
                        }
                    }
                    return z;
                } else if (this.delegate != null) {
                    if (this.currentMessageObject.hasValidReplyMessageObject() || this.currentMessageObject.isReplyToStory() || this.hasReplyQuote || !((tLRPC$Message = this.currentMessageObject.messageOwner) == null || (tLRPC$MessageReplyHeader = tLRPC$Message.reply_to) == null || tLRPC$MessageReplyHeader.reply_from == null)) {
                        this.delegate.didPressReplyMessage(this, this.currentMessageObject.getReplyMsgId());
                        return z;
                    }
                    return z;
                } else {
                    return z;
                }
            } else if (motionEvent.getAction() == 3) {
                this.replyPressed = false;
                this.replySelectorPressed = false;
                Drawable drawable6 = this.replySelector;
                if (drawable6 != null) {
                    drawable6.setState(new int[0]);
                }
                invalidate();
                ButtonBounce buttonBounce5 = this.replyBounce;
                if (buttonBounce5 != null) {
                    buttonBounce5.setPressed(false);
                    return z;
                }
                return z;
            } else if (motionEvent.getAction() == 2) {
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    i = this.replyStartX;
                    i2 = Math.max(this.replyNameWidth, this.replyTextWidth);
                } else {
                    i = this.replyStartX;
                    i2 = this.backgroundDrawableRight;
                }
                int i18 = i + i2;
                if (x >= this.replyStartX && x <= i18) {
                    int i19 = this.replyStartY;
                    if (y2 >= i19 && y2 <= i19 + this.replyHeight) {
                        if (this.replySelector == null || !this.replySelectorCanBePressed || Math.sqrt(Math.pow(x - this.replyTouchX, 2.0d) + Math.pow((y2 + getY()) - this.replyTouchY, 2.0d)) <= 0.75d) {
                            return z;
                        }
                        this.replySelectorCanBePressed = false;
                        return z;
                    }
                }
                this.replyPressed = false;
                this.replySelectorPressed = false;
                this.replySelectorCanBePressed = false;
                Drawable drawable7 = this.replySelector;
                if (drawable7 != null) {
                    drawable7.setState(new int[0]);
                }
                invalidate();
                ButtonBounce buttonBounce6 = this.replyBounce;
                if (buttonBounce6 != null) {
                    buttonBounce6.setPressed(false);
                    return z;
                }
                return z;
            } else {
                return z;
            }
        } else if (this.sideButtonPressed) {
            if (motionEvent.getAction() == 1) {
                playSoundEffect(0);
                ChatMessageCellDelegate chatMessageCellDelegate7 = this.delegate;
                if (chatMessageCellDelegate7 != null) {
                    int i20 = this.pressedSideButton;
                    if (i20 == 4) {
                        chatMessageCellDelegate7.didPressSponsoredClose(this);
                    } else if (i20 == 5) {
                        chatMessageCellDelegate7.didPressSponsoredInfo(this, x, y2);
                    } else if (i20 == 3) {
                        chatMessageCellDelegate7.didPressCommentButton(this);
                    } else {
                        chatMessageCellDelegate7.didPressSideButton(this);
                    }
                }
                this.sideButtonPressed = false;
                this.pressedSideButton = 0;
            } else if (motionEvent.getAction() == 3) {
                this.sideButtonPressed = false;
                this.pressedSideButton = 0;
            } else if (motionEvent.getAction() == 2) {
                if (x >= this.sideStartX - AndroidUtilities.dp(24.0f) && x <= this.sideStartX + AndroidUtilities.dp(40.0f) && y2 >= this.sideStartY - AndroidUtilities.dp(24.0f)) {
                }
                this.sideButtonPressed = false;
                this.pressedSideButton = 0;
            }
            invalidate();
            return z;
        } else {
            return z;
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$onTouchEvent$5() {
        if (this.replyPressed && !this.replySelectorPressed && this.replySelectorCanBePressed) {
            this.replySelectorPressed = true;
            this.replySelector.setState(new int[]{16842919, 16842910});
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$onTouchEvent$6() {
        this.replySelector.setState(new int[0]);
        invalidate();
    }

    private boolean checkReactionsTouchEvent(MotionEvent motionEvent) {
        MessageObject.GroupedMessages groupedMessages;
        if (this.currentMessageObject.hasValidGroupId() && (groupedMessages = this.currentMessagesGroup) != null && !groupedMessages.isDocuments) {
            ViewGroup viewGroup = (ViewGroup) getParent();
            if (viewGroup == null) {
                return false;
            }
            for (int i = 0; i < viewGroup.getChildCount(); i++) {
                View childAt = viewGroup.getChildAt(i);
                if (childAt instanceof ChatMessageCell) {
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    MessageObject.GroupedMessages currentMessagesGroup = chatMessageCell.getCurrentMessagesGroup();
                    MessageObject.GroupedMessagePosition currentPosition = chatMessageCell.getCurrentPosition();
                    if (currentMessagesGroup != null && currentMessagesGroup.groupId == this.currentMessagesGroup.groupId) {
                        int i2 = currentPosition.flags;
                        if ((i2 & 8) != 0 && (i2 & 1) != 0) {
                            if (chatMessageCell == this) {
                                return this.reactionsLayoutInBubble.chekTouchEvent(motionEvent);
                            }
                            motionEvent.offsetLocation(getLeft() - chatMessageCell.getLeft(), getTop() - chatMessageCell.getTop());
                            boolean chekTouchEvent = chatMessageCell.reactionsLayoutInBubble.chekTouchEvent(motionEvent);
                            motionEvent.offsetLocation(-(getLeft() - chatMessageCell.getLeft()), -(getTop() - chatMessageCell.getTop()));
                            return chekTouchEvent;
                        }
                    }
                }
            }
            return false;
        }
        return this.reactionsLayoutInBubble.chekTouchEvent(motionEvent);
    }

    private boolean checkPinchToZoom(MotionEvent motionEvent) {
        ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
        PinchToZoomHelper pinchToZoomHelper = chatMessageCellDelegate == null ? null : chatMessageCellDelegate.getPinchToZoomHelper();
        if (this.currentMessageObject == null || !this.photoImage.hasNotThumb() || pinchToZoomHelper == null || this.currentMessageObject.isSticker() || this.currentMessageObject.isAnimatedEmoji() || ((this.currentMessageObject.isVideo() && !this.autoPlayingMedia) || this.isRoundVideo || this.currentMessageObject.isAnimatedSticker() || ((this.currentMessageObject.isDocument() && !this.currentMessageObject.isGif()) || this.currentMessageObject.needDrawBluredPreview()))) {
            return false;
        }
        ImageReceiver imageReceiver = this.photoImage;
        MessageObject messageObject = this.currentMessageObject;
        SpoilerEffect2 spoilerEffect2 = this.mediaSpoilerEffect2;
        return pinchToZoomHelper.checkPinchToZoom(motionEvent, this, imageReceiver, null, null, messageObject, spoilerEffect2 == null ? 0 : spoilerEffect2.getAttachIndex(this));
    }

    private boolean checkTextSelection(MotionEvent motionEvent) {
        MessageObject messageObject;
        TLRPC$Message tLRPC$Message;
        int i;
        int dp;
        int i2;
        MessageObject.GroupedMessages groupedMessages;
        TextSelectionHelper.ChatListTextSelectionHelper textSelectionHelper = this.delegate.getTextSelectionHelper();
        if (textSelectionHelper == null || MessagesController.getInstance(this.currentAccount).isChatNoForwards(this.currentMessageObject.getChatId()) || ((tLRPC$Message = (messageObject = this.currentMessageObject).messageOwner) != null && tLRPC$Message.noforwards)) {
            return false;
        }
        ArrayList<MessageObject.TextLayoutBlock> arrayList = messageObject.textLayoutBlocks;
        if (((arrayList == null || arrayList.isEmpty()) ? false : true) || hasCaptionLayout()) {
            if ((this.drawSelectionBackground || this.currentMessagesGroup != null) && (this.currentMessagesGroup == null || this.delegate.hasSelectedMessages())) {
                if (this.currentMessageObject.hasValidGroupId() && (groupedMessages = this.currentMessagesGroup) != null && !groupedMessages.isDocuments) {
                    ViewGroup viewGroup = (ViewGroup) getParent();
                    if (viewGroup == null) {
                        return false;
                    }
                    for (int i3 = 0; i3 < viewGroup.getChildCount(); i3++) {
                        View childAt = viewGroup.getChildAt(i3);
                        if (childAt instanceof ChatMessageCell) {
                            ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                            MessageObject.GroupedMessages currentMessagesGroup = chatMessageCell.getCurrentMessagesGroup();
                            MessageObject.GroupedMessagePosition currentPosition = chatMessageCell.getCurrentPosition();
                            if (currentMessagesGroup != null && currentMessagesGroup.groupId == this.currentMessagesGroup.groupId) {
                                int i4 = currentPosition.flags;
                                if ((i4 & 8) != 0 && (i4 & 1) != 0) {
                                    textSelectionHelper.setMaybeTextCord((int) chatMessageCell.captionX, (int) chatMessageCell.captionY);
                                    textSelectionHelper.setMessageObject(chatMessageCell);
                                    if (chatMessageCell == this) {
                                        return textSelectionHelper.onTouchEvent(motionEvent);
                                    }
                                    motionEvent.offsetLocation(getLeft() - chatMessageCell.getLeft(), getTop() - chatMessageCell.getTop());
                                    boolean onTouchEvent = textSelectionHelper.onTouchEvent(motionEvent);
                                    motionEvent.offsetLocation(-(getLeft() - chatMessageCell.getLeft()), -(getTop() - chatMessageCell.getTop()));
                                    return onTouchEvent;
                                }
                            }
                        }
                    }
                    return false;
                }
                if (hasCaptionLayout()) {
                    textSelectionHelper.setIsDescription(false);
                    textSelectionHelper.setMaybeTextCord((int) this.captionX, (int) this.captionY);
                } else {
                    MessageObject messageObject2 = this.currentMessageObject;
                    if (messageObject2 != null && !messageObject2.preview && this.descriptionLayout != null && (!this.linkPreviewAbove ? motionEvent.getY() > this.descriptionY : motionEvent.getY() < this.textY)) {
                        textSelectionHelper.setIsDescription(true);
                        if (this.hasGamePreview) {
                            i2 = this.unmovedTextX - AndroidUtilities.dp(10.0f);
                        } else {
                            if (this.hasInvoicePreview) {
                                i = this.unmovedTextX;
                                dp = AndroidUtilities.dp(1.0f);
                            } else {
                                i = this.unmovedTextX;
                                dp = AndroidUtilities.dp(1.0f);
                            }
                            i2 = i + dp;
                        }
                        textSelectionHelper.setMaybeTextCord(i2 + AndroidUtilities.dp(10.0f) + this.descriptionX, this.descriptionY);
                    } else {
                        textSelectionHelper.setIsDescription(false);
                        textSelectionHelper.setMaybeTextCord(this.textX, this.textY);
                    }
                }
                textSelectionHelper.setMessageObject(this);
                return textSelectionHelper.onTouchEvent(motionEvent);
            }
            return false;
        }
        return false;
    }

    private void updateSelectionTextPosition() {
        int i;
        int dp;
        int i2;
        if (getDelegate() == null || getDelegate().getTextSelectionHelper() == null || !getDelegate().getTextSelectionHelper().isSelected(this.currentMessageObject)) {
            return;
        }
        int textSelectionType = getDelegate().getTextSelectionHelper().getTextSelectionType(this);
        if (textSelectionType == TextSelectionHelper.ChatListTextSelectionHelper.TYPE_DESCRIPTION) {
            if (this.hasGamePreview) {
                i2 = this.unmovedTextX - AndroidUtilities.dp(10.0f);
            } else {
                if (this.hasInvoicePreview) {
                    i = this.unmovedTextX;
                    dp = AndroidUtilities.dp(1.0f);
                } else {
                    i = this.unmovedTextX;
                    dp = AndroidUtilities.dp(1.0f);
                }
                i2 = i + dp;
            }
            getDelegate().getTextSelectionHelper().updateTextPosition(i2 + AndroidUtilities.dp(10.0f) + this.descriptionX, this.descriptionY);
        } else if (textSelectionType == TextSelectionHelper.ChatListTextSelectionHelper.TYPE_CAPTION) {
            updateCaptionLayout();
            getDelegate().getTextSelectionHelper().updateTextPosition((int) this.captionX, (int) this.captionY);
        } else {
            getDelegate().getTextSelectionHelper().updateTextPosition(this.textX, this.textY);
        }
    }

    public ArrayList<PollButton> getPollButtons() {
        return this.pollButtons;
    }

    public void updatePlayingMessageProgress() {
        String formatShortDuration;
        double d;
        double d2;
        double d3;
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null) {
            return;
        }
        VideoPlayerRewinder videoPlayerRewinder = this.videoPlayerRewinder;
        if (videoPlayerRewinder != null && videoPlayerRewinder.rewindCount != 0 && videoPlayerRewinder.rewindByBackSeek) {
            messageObject.audioProgress = videoPlayerRewinder.getVideoProgress();
        }
        double d4 = 0.0d;
        if (this.documentAttachType == 4) {
            SeekBar seekBar = this.seekBar;
            if (seekBar != null) {
                seekBar.clearTimestamps();
            }
            if (this.infoLayout == null || !(PhotoViewer.isPlayingMessage(this.currentMessageObject) || MediaController.getInstance().isGoingToShowMessageObject(this.currentMessageObject))) {
                AnimatedFileDrawable animation = this.photoImage.getAnimation();
                if (animation != null) {
                    MessageObject messageObject2 = this.currentMessageObject;
                    int durationMs = animation.getDurationMs() / 1000;
                    messageObject2.audioPlayerDuration = durationMs;
                    d3 = durationMs;
                    MessageObject messageObject3 = this.currentMessageObject;
                    TLRPC$Message tLRPC$Message = messageObject3.messageOwner;
                    if (tLRPC$Message.ttl > 0 && tLRPC$Message.destroyTime == 0 && !messageObject3.needDrawBluredPreview() && this.currentMessageObject.isVideo() && animation.hasBitmap()) {
                        this.delegate.didStartVideoStream(this.currentMessageObject);
                    }
                } else {
                    d3 = 0.0d;
                }
                if (d3 == 0.0d) {
                    d3 = this.currentMessageObject.getDuration();
                }
                if (MediaController.getInstance().isPlayingMessage(this.currentMessageObject)) {
                    double d5 = this.currentMessageObject.audioProgress;
                    Double.isNaN(d5);
                    d3 -= d5 * d3;
                } else if (animation != null) {
                    if (d3 != 0.0d) {
                        double currentProgressMs = animation.getCurrentProgressMs() / 1000;
                        Double.isNaN(currentProgressMs);
                        d3 -= currentProgressMs;
                    }
                    if (this.delegate != null && animation.getCurrentProgressMs() >= 3000) {
                        this.delegate.videoTimerReached();
                    }
                }
                if (this.lastTime != d3) {
                    String formatShortDuration2 = AndroidUtilities.formatShortDuration((int) d3);
                    this.infoWidth = (int) Math.ceil(Theme.chat_infoPaint.measureText(formatShortDuration2));
                    this.infoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration2, Theme.chat_infoPaint, this.infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                    this.lastTime = d3;
                    return;
                }
                return;
            }
            return;
        }
        if (this.isRoundVideo) {
            if (this.useSeekBarWaveform) {
                if (!this.seekBarWaveform.isDragging()) {
                    this.seekBarWaveform.setProgress(this.currentMessageObject.audioProgress, true);
                }
            } else {
                if (!this.seekBar.isDragging()) {
                    this.seekBar.setProgress(this.currentMessageObject.audioProgress);
                    this.seekBar.setBufferedProgress(this.currentMessageObject.bufferedProgress);
                }
                this.seekBar.clearTimestamps();
            }
            TLRPC$Document document = this.currentMessageObject.getDocument();
            if (document != null) {
                while (r1 < document.attributes.size()) {
                    TLRPC$DocumentAttribute tLRPC$DocumentAttribute = document.attributes.get(r1);
                    if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeVideo) {
                        d2 = tLRPC$DocumentAttribute.duration;
                        break;
                    }
                    r1++;
                }
            }
            d2 = 0.0d;
            long j = this.overridenDuration;
            if (j >= 0) {
                d2 = j;
            } else if (MediaController.getInstance().isPlayingMessage(this.currentMessageObject)) {
                double d6 = this.currentMessageObject.audioProgressSec;
                Double.isNaN(d6);
                d2 = Math.max(0.0d, d2 - d6);
            }
            if (this.lastTime != d2) {
                this.lastTime = d2;
                String formatLongDuration = AndroidUtilities.formatLongDuration((int) d2);
                this.timeWidthAudio = (int) Math.ceil(Theme.chat_timePaint.measureText(formatLongDuration));
                this.durationLayout = new CachedStaticLayout(new StaticLayout(formatLongDuration, Theme.chat_timePaint, this.timeWidthAudio, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            }
            float f = this.currentMessageObject.audioProgress;
            if (f != 0.0f) {
                this.lastDrawingAudioProgress = f;
                if (f > 0.9f) {
                    this.lastDrawingAudioProgress = 1.0f;
                }
            }
            invalidate();
        } else if (this.documentAttach != null) {
            if (this.useSeekBarWaveform) {
                if (!this.seekBarWaveform.isDragging()) {
                    this.seekBarWaveform.setProgress(this.currentMessageObject.audioProgress, true);
                }
            } else {
                if (!this.seekBar.isDragging()) {
                    this.seekBar.setProgress(this.currentMessageObject.audioProgress);
                    this.seekBar.setBufferedProgress(this.currentMessageObject.bufferedProgress);
                }
                this.seekBar.updateTimestamps(this.currentMessageObject, null);
            }
            if (this.documentAttachType == 3) {
                long j2 = this.overridenDuration;
                if (j2 >= 0) {
                    d = j2;
                } else if (MediaController.getInstance().isPlayingMessage(this.currentMessageObject)) {
                    d = this.currentMessageObject.audioProgressSec;
                } else {
                    while (true) {
                        if (r1 >= this.documentAttach.attributes.size()) {
                            break;
                        }
                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = this.documentAttach.attributes.get(r1);
                        if (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeAudio) {
                            d4 = tLRPC$DocumentAttribute2.duration;
                            break;
                        }
                        r1++;
                    }
                    d = d4;
                }
                if (this.lastTime != d) {
                    this.lastTime = d;
                    String formatLongDuration2 = AndroidUtilities.formatLongDuration((int) d);
                    this.timeWidthAudio = (int) Math.ceil(Theme.chat_audioTimePaint.measureText(formatLongDuration2));
                    this.durationLayout = new CachedStaticLayout(new StaticLayout(formatLongDuration2, Theme.chat_audioTimePaint, this.timeWidthAudio, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                }
            } else {
                double duration = this.currentMessageObject.getDuration();
                r1 = MediaController.getInstance().isPlayingMessage(this.currentMessageObject) ? this.currentMessageObject.audioProgressSec : 0;
                double d7 = r1;
                if (this.lastTime != d7) {
                    this.lastTime = d7;
                    this.durationLayout = new CachedStaticLayout(new StaticLayout(AndroidUtilities.formatShortDuration(r1, (int) duration), Theme.chat_audioTimePaint, (int) Math.ceil(Theme.chat_audioTimePaint.measureText(formatShortDuration)), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                }
            }
            invalidate();
        }
    }

    public void overrideDuration(long j) {
        this.overridenDuration = j;
    }

    public void setFullyDraw(boolean z) {
        this.fullyDraw = z;
    }

    public void setParentViewSize(int i, int i2) {
        Theme.MessageDrawable messageDrawable;
        this.parentWidth = i;
        this.parentHeight = i2;
        this.backgroundHeight = i2;
        if (!(this.currentMessageObject != null && hasGradientService() && this.currentMessageObject.shouldDrawWithoutBackground()) && ((messageDrawable = this.currentBackgroundDrawable) == null || messageDrawable.getGradientShader() == null)) {
            return;
        }
        invalidate();
    }

    public void copyVisiblePartTo(ChatMessageCell chatMessageCell) {
        if (chatMessageCell == null) {
            return;
        }
        chatMessageCell.setVisiblePart(this.childPosition, this.visibleHeight, this.visibleParent, this.visibleParentOffset, this.visibleTop, this.parentWidth, this.parentHeight, this.blurredViewTopOffset, this.blurredViewBottomOffset);
    }

    public void setVisiblePart(int i, int i2, int i3, float f, float f2, int i4, int i5, int i6, int i7) {
        MessageObject.TextLayoutBlock textLayoutBlock;
        MessageObject messageObject;
        this.childPosition = i;
        this.visibleHeight = i2;
        this.visibleParent = i3;
        this.parentWidth = i4;
        this.parentHeight = i5;
        this.visibleTop = f2;
        this.visibleParentOffset = f;
        this.backgroundHeight = i5;
        this.blurredViewTopOffset = i6;
        this.blurredViewBottomOffset = i7;
        if ((!this.botButtons.isEmpty() || (this.channelRecommendationsCell != null && (messageObject = this.currentMessageObject) != null && messageObject.type == 27)) && this.viewTop != f2) {
            invalidate();
        }
        this.viewTop = f2;
        if (i3 != this.parentHeight || f != this.parentViewTopOffset) {
            this.parentViewTopOffset = f;
            this.parentHeight = i3;
        }
        if (this.currentMessageObject != null && hasGradientService() && this.currentMessageObject.shouldDrawWithoutBackground()) {
            invalidate();
        }
        MessageObject messageObject2 = this.currentMessageObject;
        if (messageObject2 == null || messageObject2.textLayoutBlocks == null) {
            return;
        }
        int i8 = i - this.textY;
        int i9 = 0;
        for (int i10 = 0; i10 < this.currentMessageObject.textLayoutBlocks.size() && this.currentMessageObject.textLayoutBlocks.get(i10).textYOffset <= i8; i10++) {
            i9 = i10;
        }
        int i11 = -1;
        int i12 = -1;
        int i13 = 0;
        while (i9 < this.currentMessageObject.textLayoutBlocks.size()) {
            float f3 = this.currentMessageObject.textLayoutBlocks.get(i9).textYOffset;
            float f4 = i8;
            if (intersect(f3, textLayoutBlock.height + f3, f4, i8 + i2)) {
                if (i11 == -1) {
                    i11 = i9;
                }
                i13++;
                i12 = i9;
            } else if (f3 > f4) {
                break;
            }
            i9++;
        }
        if (this.lastVisibleBlockNum != i12 || this.firstVisibleBlockNum != i11 || this.totalVisibleBlocksCount != i13) {
            this.lastVisibleBlockNum = i12;
            this.firstVisibleBlockNum = i11;
            this.totalVisibleBlocksCount = i13;
            invalidate();
        } else if (this.animatedEmojiStack != null) {
            for (int i14 = 0; i14 < this.animatedEmojiStack.holders.size(); i14++) {
                AnimatedEmojiSpan.AnimatedEmojiHolder animatedEmojiHolder = this.animatedEmojiStack.holders.get(i14);
                if (animatedEmojiHolder != null && animatedEmojiHolder.skipDraw && !animatedEmojiHolder.outOfBounds((this.parentBoundsTop - getY()) - animatedEmojiHolder.drawingYOffset, (this.parentBoundsBottom - getY()) - animatedEmojiHolder.drawingYOffset)) {
                    invalidate();
                    return;
                }
            }
        }
    }

    public static StaticLayout generateStaticLayout(CharSequence charSequence, TextPaint textPaint, int i, int i2, int i3, int i4) {
        SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(charSequence);
        StaticLayout staticLayout = new StaticLayout(charSequence, textPaint, i2, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
        int i5 = i;
        int i6 = 0;
        for (int i7 = 0; i7 < i3; i7++) {
            staticLayout.getLineDirections(i7);
            if (staticLayout.getLineLeft(i7) != 0.0f || staticLayout.isRtlCharAt(staticLayout.getLineStart(i7)) || staticLayout.isRtlCharAt(staticLayout.getLineEnd(i7))) {
                i5 = i2;
            }
            int lineEnd = staticLayout.getLineEnd(i7);
            if (lineEnd == charSequence.length()) {
                break;
            }
            int i8 = (lineEnd - 1) + i6;
            if (spannableStringBuilder.charAt(i8) == ' ') {
                spannableStringBuilder.replace(i8, i8 + 1, (CharSequence) "\n");
            } else if (spannableStringBuilder.charAt(i8) != '\n') {
                spannableStringBuilder.insert(i8, (CharSequence) "\n");
                i6++;
            }
            if (i7 == staticLayout.getLineCount() - 1 || i7 == i4 - 1) {
                break;
            }
        }
        int i9 = i5;
        return StaticLayoutEx.createStaticLayout(spannableStringBuilder, textPaint, i9, Layout.Alignment.ALIGN_NORMAL, 1.0f, AndroidUtilities.dp(1.0f), false, TextUtils.TruncateAt.END, i9, i4, true);
    }

    private void didClickedImage() {
        ChatMessageCellDelegate chatMessageCellDelegate;
        TLRPC$WebPage tLRPC$WebPage;
        boolean z;
        TLRPC$MessageMedia tLRPC$MessageMedia;
        TLRPC$ReplyMarkup tLRPC$ReplyMarkup;
        if (this.currentMessageObject.hasMediaSpoilers() && !this.currentMessageObject.needDrawBluredPreview() && !this.currentMessageObject.isMediaSpoilersRevealed) {
            startRevealMedia(this.lastTouchX, this.lastTouchY);
            return;
        }
        MessageObject messageObject = this.currentMessageObject;
        int i = messageObject.type;
        if (i == 20) {
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            if (tLRPC$Message == null || (tLRPC$MessageMedia = tLRPC$Message.media) == null || tLRPC$MessageMedia.extended_media == null || (tLRPC$ReplyMarkup = tLRPC$Message.reply_markup) == null) {
                return;
            }
            Iterator<TLRPC$TL_keyboardButtonRow> it = tLRPC$ReplyMarkup.rows.iterator();
            while (it.hasNext()) {
                Iterator<TLRPC$KeyboardButton> it2 = it.next().buttons.iterator();
                if (it2.hasNext()) {
                    this.delegate.didPressExtendedMediaPreview(this, it2.next());
                    return;
                }
            }
        } else if (i == 1 || messageObject.isAnyKindOfSticker()) {
            int i2 = this.buttonState;
            if (i2 == -1) {
                this.delegate.didPressImage(this, this.lastTouchX, this.lastTouchY);
            } else if (i2 == 0) {
                didPressButton(true, false);
            }
        } else {
            MessageObject messageObject2 = this.currentMessageObject;
            int i3 = messageObject2.type;
            if (i3 == 12) {
                long j = MessageObject.getMedia(messageObject2.messageOwner).user_id;
                this.delegate.didPressUserAvatar(this, j != 0 ? MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(j)) : null, this.lastTouchX, this.lastTouchY);
            } else if (i3 == 5) {
                if (this.buttonState != -1) {
                    didPressButton(true, false);
                } else if (!MediaController.getInstance().isPlayingMessage(this.currentMessageObject) || MediaController.getInstance().isMessagePaused()) {
                    this.delegate.needPlayMessage(this, this.currentMessageObject, false);
                } else {
                    MediaController.getInstance().lambda$startAudioAgain$7(this.currentMessageObject);
                }
            } else if (i3 == 8) {
                int i4 = this.buttonState;
                if (i4 == -1 || (i4 == 1 && this.canStreamVideo && this.autoPlayingMedia)) {
                    this.delegate.didPressImage(this, this.lastTouchX, this.lastTouchY);
                } else if (i4 == 2 || i4 == 0) {
                    didPressButton(true, false);
                }
            } else {
                int i5 = this.documentAttachType;
                if (i5 == 4) {
                    int i6 = this.buttonState;
                    if (i6 == -1 || ((z = this.drawVideoImageButton) && (this.autoPlayingMedia || (SharedConfig.streamMedia && this.canStreamVideo)))) {
                        this.delegate.didPressImage(this, this.lastTouchX, this.lastTouchY);
                    } else if (z) {
                        didPressButton(true, true);
                    } else if (i6 == 0 || i6 == 3) {
                        didPressButton(true, false);
                    }
                } else if (i3 == 4 || i3 == 23 || i3 == 24) {
                    this.delegate.didPressImage(this, this.lastTouchX, this.lastTouchY);
                } else if (i5 == 1) {
                    if (this.buttonState == -1) {
                        this.delegate.didPressImage(this, this.lastTouchX, this.lastTouchY);
                    }
                } else if (i5 == 2) {
                    if (this.buttonState != -1 || (tLRPC$WebPage = MessageObject.getMedia(messageObject2.messageOwner).webpage) == null) {
                        return;
                    }
                    String str = tLRPC$WebPage.embed_url;
                    if (str != null && str.length() != 0) {
                        this.delegate.needOpenWebView(this.currentMessageObject, tLRPC$WebPage.embed_url, tLRPC$WebPage.site_name, tLRPC$WebPage.description, tLRPC$WebPage.url, tLRPC$WebPage.embed_width, tLRPC$WebPage.embed_height);
                    } else {
                        Browser.openUrl(getContext(), tLRPC$WebPage.url);
                    }
                } else if (this.hasInvoicePreview) {
                    if (this.buttonState == -1) {
                        this.delegate.didPressImage(this, this.lastTouchX, this.lastTouchY);
                    }
                } else if (Build.VERSION.SDK_INT < 26 || (chatMessageCellDelegate = this.delegate) == null) {
                } else {
                    if (i3 == 16) {
                        chatMessageCellDelegate.didLongPress(this, 0.0f, 0.0f);
                    } else {
                        chatMessageCellDelegate.didPressOther(this, this.otherX, this.otherY);
                    }
                }
            }
        }
    }

    private void updateSecretTimeText(MessageObject messageObject) {
        CharSequence secretTimeString;
        if (messageObject == null || !messageObject.needDrawBluredPreview() || (secretTimeString = messageObject.getSecretTimeString()) == null) {
            return;
        }
        if (secretTimeString instanceof String) {
            int ceil = (int) Math.ceil(Theme.chat_infoPaint.measureText((String) secretTimeString));
            this.infoWidth = ceil;
            this.infoLayout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(secretTimeString, Theme.chat_infoPaint, ceil, TextUtils.TruncateAt.END), Theme.chat_infoPaint, this.infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
        } else {
            CachedStaticLayout cachedStaticLayout = new CachedStaticLayout(new StaticLayout(secretTimeString, Theme.chat_infoBoldPaint, getMeasuredWidth() > 0 ? getMeasuredWidth() : 9999, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            this.infoLayout = cachedStaticLayout;
            this.infoWidth = cachedStaticLayout.getLineCount() > 0 ? (int) this.infoLayout.getLineWidth(0) : 0;
        }
        invalidate();
    }

    /* JADX WARN: Removed duplicated region for block: B:24:0x0048  */
    /* JADX WARN: Removed duplicated region for block: B:25:0x00ce  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private boolean isPhotoDataChanged(MessageObject messageObject) {
        int i;
        TLRPC$MessageMedia tLRPC$MessageMedia;
        String formapMapUrl;
        int i2;
        int i3 = messageObject.type;
        if (i3 == 0 || i3 == 14) {
            return false;
        }
        if (i3 == 4) {
            if (this.currentUrl == null) {
                return true;
            }
            TLRPC$GeoPoint tLRPC$GeoPoint = messageObject.messageOwner.media.geo;
            double d = tLRPC$GeoPoint.lat;
            double d2 = tLRPC$GeoPoint._long;
            if (((int) messageObject.getDialogId()) == 0 && (i2 = SharedConfig.mapPreviewType) != 0) {
                if (i2 == 1) {
                    i = 4;
                } else if (i2 == 3) {
                    i = 1;
                }
                tLRPC$MessageMedia = messageObject.messageOwner.media;
                if (!(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGeoLive)) {
                    int dp = this.backgroundWidth - AndroidUtilities.dp(21.0f);
                    int dp2 = AndroidUtilities.dp(195.0f);
                    double d3 = 268435456;
                    Double.isNaN(d3);
                    double d4 = d3 / 3.141592653589793d;
                    double d5 = (d * 3.141592653589793d) / 180.0d;
                    Double.isNaN(d3);
                    double round = Math.round(d3 - ((Math.log((Math.sin(d5) + 1.0d) / (1.0d - Math.sin(d5))) * d4) / 2.0d)) - (AndroidUtilities.dp(10.3f) << 6);
                    Double.isNaN(round);
                    Double.isNaN(d3);
                    int i4 = this.currentAccount;
                    float f = AndroidUtilities.density;
                    formapMapUrl = AndroidUtilities.formapMapUrl(i4, ((1.5707963267948966d - (Math.atan(Math.exp((round - d3) / d4)) * 2.0d)) * 180.0d) / 3.141592653589793d, d2, (int) (dp / f), (int) (dp2 / f), false, 15, i);
                } else if (!TextUtils.isEmpty(tLRPC$MessageMedia.title)) {
                    int dp3 = this.backgroundWidth - AndroidUtilities.dp(21.0f);
                    int dp4 = AndroidUtilities.dp(195.0f);
                    int i5 = this.currentAccount;
                    float f2 = AndroidUtilities.density;
                    formapMapUrl = AndroidUtilities.formapMapUrl(i5, d, d2, (int) (dp3 / f2), (int) (dp4 / f2), true, 15, i);
                } else {
                    int dp5 = this.backgroundWidth - AndroidUtilities.dp(12.0f);
                    int dp6 = AndroidUtilities.dp(195.0f);
                    int i6 = this.currentAccount;
                    float f3 = AndroidUtilities.density;
                    formapMapUrl = AndroidUtilities.formapMapUrl(i6, d, d2, (int) (dp5 / f3), (int) (dp6 / f3), true, 15, i);
                }
                return !formapMapUrl.equals(this.currentUrl);
            }
            i = -1;
            tLRPC$MessageMedia = messageObject.messageOwner.media;
            if (!(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGeoLive)) {
            }
            return !formapMapUrl.equals(this.currentUrl);
        }
        TLRPC$PhotoSize tLRPC$PhotoSize = this.currentPhotoObject;
        if (tLRPC$PhotoSize == null || (tLRPC$PhotoSize.location instanceof TLRPC$TL_fileLocationUnavailable)) {
            return i3 == 1 || i3 == 20 || i3 == 5 || i3 == 3 || i3 == 8 || messageObject.isAnyKindOfSticker();
        } else if (this.currentMessageObject == null || !this.photoNotSet) {
            return false;
        } else {
            return FileLoader.getInstance(this.currentAccount).getPathToMessage(this.currentMessageObject.messageOwner).exists();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public int getRepliesCount() {
        MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
        if (groupedMessages != null && !groupedMessages.messages.isEmpty()) {
            return this.currentMessagesGroup.messages.get(0).getRepliesCount();
        }
        return this.currentMessageObject.getRepliesCount();
    }

    private ArrayList<TLRPC$Peer> getRecentRepliers() {
        TLRPC$MessageReplies tLRPC$MessageReplies;
        MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
        if (groupedMessages != null && !groupedMessages.messages.isEmpty() && (tLRPC$MessageReplies = this.currentMessagesGroup.messages.get(0).messageOwner.replies) != null) {
            return tLRPC$MessageReplies.recent_repliers;
        }
        TLRPC$MessageReplies tLRPC$MessageReplies2 = this.currentMessageObject.messageOwner.replies;
        if (tLRPC$MessageReplies2 != null) {
            return tLRPC$MessageReplies2.recent_repliers;
        }
        return null;
    }

    public void updateAnimatedEmojis() {
        MessageObject messageObject;
        ArrayList<MessageObject.TextLayoutBlock> arrayList;
        if (!this.imageReceiversAttachState || (messageObject = this.currentMessageObject) == null) {
            return;
        }
        boolean z = false;
        int cacheTypeForEnterView = messageObject.wasJustSent ? AnimatedEmojiDrawable.getCacheTypeForEnterView() : 0;
        MessageObject.TextLayoutBlocks textLayoutBlocks = this.captionLayout;
        if (textLayoutBlocks != null && (arrayList = textLayoutBlocks.textLayoutBlocks) != null) {
            this.animatedEmojiStack = AnimatedEmojiSpan.update(cacheTypeForEnterView, (View) this, false, this.animatedEmojiStack, arrayList);
            return;
        }
        ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
        this.animatedEmojiStack = AnimatedEmojiSpan.update(cacheTypeForEnterView, this, (chatMessageCellDelegate == null || !chatMessageCellDelegate.canDrawOutboundsContent()) ? true : true, this.animatedEmojiStack, this.currentMessageObject.textLayoutBlocks);
    }

    /* JADX WARN: Removed duplicated region for block: B:84:0x00da  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private boolean isUserDataChanged() {
        TLRPC$FileLocation tLRPC$FileLocation;
        TLRPC$FileLocation tLRPC$FileLocation2;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        String str;
        String forwardedName;
        String str2;
        MessageObject messageObject;
        MessageObject messageObject2;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        TLRPC$ChatPhoto tLRPC$ChatPhoto;
        TLRPC$UserProfilePhoto tLRPC$UserProfilePhoto;
        MessageObject messageObject3 = this.currentMessageObject;
        if (messageObject3 == null || this.hasLinkPreview || MessageObject.getMedia(messageObject3.messageOwner) == null || !(MessageObject.getMedia(this.currentMessageObject.messageOwner).webpage instanceof TLRPC$TL_webPage)) {
            MessageObject messageObject4 = this.currentMessageObject;
            if (messageObject4 != null && (this.currentUser != null || this.currentChat != null)) {
                int i = this.lastSendState;
                TLRPC$Message tLRPC$Message = messageObject4.messageOwner;
                if (i != tLRPC$Message.send_state || this.lastDeleteDate != tLRPC$Message.destroyTime || this.lastViewsCount != tLRPC$Message.views || this.lastRepliesCount != getRepliesCount() || this.lastReactions != this.currentMessageObject.messageOwner.reactions) {
                    return true;
                }
                updateCurrentUserAndChat();
                if (this.isAvatarVisible) {
                    TLRPC$User tLRPC$User = this.currentUser;
                    if (tLRPC$User != null && (tLRPC$UserProfilePhoto = tLRPC$User.photo) != null) {
                        tLRPC$FileLocation = tLRPC$UserProfilePhoto.photo_small;
                    } else {
                        TLRPC$Chat tLRPC$Chat = this.currentChat;
                        if (tLRPC$Chat != null && (tLRPC$ChatPhoto = tLRPC$Chat.photo) != null) {
                            tLRPC$FileLocation = tLRPC$ChatPhoto.photo_small;
                        }
                    }
                    if (this.replyTextLayout != null && (messageObject2 = this.currentMessageObject.replyMessageObject) != null && (!this.isThreadChat || (tLRPC$MessageFwdHeader = messageObject2.messageOwner.fwd_from) == null || tLRPC$MessageFwdHeader.channel_post == 0)) {
                        return true;
                    }
                    tLRPC$FileLocation2 = this.currentPhoto;
                    if ((tLRPC$FileLocation2 != null && tLRPC$FileLocation != null) || ((tLRPC$FileLocation2 != null && tLRPC$FileLocation == null) || (tLRPC$FileLocation2 != null && (tLRPC$FileLocation2.local_id != tLRPC$FileLocation.local_id || tLRPC$FileLocation2.volume_id != tLRPC$FileLocation.volume_id)))) {
                        return true;
                    }
                    if (this.replyNameLayout != null || (messageObject = this.currentMessageObject.replyMessageObject) == null || (tLRPC$PhotoSize = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, 40)) == null || this.currentMessageObject.replyMessageObject.isAnyKindOfSticker()) {
                        tLRPC$PhotoSize = null;
                    }
                    if (this.currentReplyPhoto != null && tLRPC$PhotoSize != null) {
                        return true;
                    }
                    String authorName = isNeedAuthorName() ? getAuthorName() : null;
                    str = this.currentNameString;
                    if ((str != null && authorName != null) || ((str != null && authorName == null) || (str != null && !str.equals(authorName)))) {
                        return true;
                    }
                    if (this.drawForwardedName && this.currentMessageObject.needDrawForwarded()) {
                        forwardedName = this.currentMessageObject.getForwardedName();
                        str2 = this.currentForwardNameString;
                        if (str2 == null || forwardedName == null) {
                            if (str2 == null && forwardedName == null) {
                                return true;
                            }
                            return str2 == null && !str2.equals(forwardedName);
                        }
                        return true;
                    }
                }
                tLRPC$FileLocation = null;
                if (this.replyTextLayout != null) {
                }
                tLRPC$FileLocation2 = this.currentPhoto;
                if (tLRPC$FileLocation2 != null) {
                }
                if (this.replyNameLayout != null) {
                }
                tLRPC$PhotoSize = null;
                if (this.currentReplyPhoto != null) {
                }
                if (isNeedAuthorName()) {
                }
                str = this.currentNameString;
                if (str != null) {
                }
                if (this.drawForwardedName) {
                    forwardedName = this.currentMessageObject.getForwardedName();
                    str2 = this.currentForwardNameString;
                    if (str2 == null) {
                    }
                    if (str2 == null) {
                    }
                    if (str2 == null) {
                    }
                }
            }
            return false;
        }
        return true;
    }

    public ImageReceiver getPhotoImage() {
        return this.photoImage;
    }

    public ImageReceiver getBlurredPhotoImage() {
        return this.blurredPhotoImage;
    }

    public int getNoSoundIconCenterX() {
        return this.noSoundCenterX;
    }

    public int getForwardNameCenterX() {
        float f;
        TLRPC$User tLRPC$User = this.currentUser;
        if (tLRPC$User != null && tLRPC$User.id == 0) {
            f = this.avatarImage.getCenterX();
        } else {
            f = this.forwardNameX + this.forwardNameCenterX;
        }
        return (int) f;
    }

    public int getChecksX() {
        return this.layoutWidth - AndroidUtilities.dp(SharedConfig.bubbleRadius >= 10 ? 27.3f : 25.3f);
    }

    public int getChecksY() {
        float f;
        int intrinsicHeight;
        if (this.currentMessageObject.shouldDrawWithoutBackground()) {
            f = this.drawTimeY;
            intrinsicHeight = getThemedDrawable("drawableMsgStickerCheck").getIntrinsicHeight();
        } else {
            f = this.drawTimeY;
            intrinsicHeight = Theme.chat_msgMediaCheckDrawable.getIntrinsicHeight();
        }
        return (int) (f - intrinsicHeight);
    }

    public void overrideAudioVisualizer(AudioVisualizerDrawable audioVisualizerDrawable) {
        this.overridenAudioVisualizer = audioVisualizerDrawable;
    }

    public TLRPC$User getCurrentUser() {
        return this.currentUser;
    }

    public TLRPC$Chat getCurrentChat() {
        return this.currentChat;
    }

    @Override // android.view.ViewGroup, android.view.View
    protected void onDetachedFromWindow() {
        super.onDetachedFromWindow();
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.startSpoilers);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.stopSpoilers);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.emojiLoaded);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.didUpdatePremiumGiftStickers);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.userInfoDidLoad);
        cancelShakeAnimation();
        CheckBoxBase checkBoxBase = this.checkBox;
        if (checkBoxBase != null) {
            checkBoxBase.onDetachedFromWindow();
        }
        CheckBoxBase checkBoxBase2 = this.mediaCheckBox;
        if (checkBoxBase2 != null) {
            checkBoxBase2.onDetachedFromWindow();
        }
        if (this.pollCheckBox != null) {
            int i = 0;
            while (true) {
                CheckBoxBase[] checkBoxBaseArr = this.pollCheckBox;
                if (i >= checkBoxBaseArr.length) {
                    break;
                }
                checkBoxBaseArr[i].onDetachedFromWindow();
                i++;
            }
        }
        this.attachedToWindow = false;
        this.avatarImage.onDetachedFromWindow();
        checkImageReceiversAttachState();
        if (this.addedForTest && this.currentUrl != null && this.currentWebFile != null) {
            ImageLoader.getInstance().removeTestWebFile(this.currentUrl);
            this.addedForTest = false;
        }
        StickerSetLinkIcon stickerSetLinkIcon = this.stickerSetIcons;
        if (stickerSetLinkIcon != null) {
            stickerSetLinkIcon.detach(this);
        }
        DownloadController.getInstance(this.currentAccount).removeLoadingFileObserver(this);
        if (getDelegate() != null && getDelegate().getTextSelectionHelper() != null) {
            getDelegate().getTextSelectionHelper().onChatMessageCellDetached(this);
        }
        this.transitionParams.onDetach();
        if (MediaController.getInstance().isPlayingMessage(this.currentMessageObject)) {
            Theme.getCurrentAudiVisualizerDrawable().setParentView(null);
        }
        ValueAnimator valueAnimator = this.statusDrawableAnimator;
        if (valueAnimator != null) {
            valueAnimator.removeAllListeners();
            this.statusDrawableAnimator.cancel();
        }
        this.reactionsLayoutInBubble.onDetachFromWindow();
        this.statusDrawableAnimationInProgress = false;
        FlagSecureReason flagSecureReason = this.flagSecure;
        if (flagSecureReason != null) {
            flagSecureReason.detach();
        }
        MessageTopicButton messageTopicButton = this.topicButton;
        if (messageTopicButton != null) {
            messageTopicButton.onDetached(this);
        }
        AnimatedEmojiDrawable.SwapAnimatedEmojiDrawable swapAnimatedEmojiDrawable = this.currentNameStatusDrawable;
        if (swapAnimatedEmojiDrawable != null) {
            swapAnimatedEmojiDrawable.detach();
        }
        SpoilerEffect2 spoilerEffect2 = this.mediaSpoilerEffect2;
        if (spoilerEffect2 != null) {
            spoilerEffect2.detach(this);
        }
        ChannelRecommendationsCell channelRecommendationsCell = this.channelRecommendationsCell;
        if (channelRecommendationsCell != null) {
            channelRecommendationsCell.onDetachedFromWindow();
        }
    }

    @Override // android.view.ViewGroup, android.view.View
    protected void onAttachedToWindow() {
        super.onAttachedToWindow();
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.startSpoilers);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.stopSpoilers);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.emojiLoaded);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.didUpdatePremiumGiftStickers);
        NotificationCenter.getInstance(this.currentAccount).addObserver(this, NotificationCenter.userInfoDidLoad);
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null) {
            messageObject.animateComments = false;
        }
        MessageObject messageObject2 = this.messageObjectToSet;
        if (messageObject2 != null) {
            messageObject2.animateComments = false;
            setMessageContent(messageObject2, this.groupedMessagesToSet, this.bottomNearToSet, this.topNearToSet);
            this.messageObjectToSet = null;
            this.groupedMessagesToSet = null;
        }
        CheckBoxBase checkBoxBase = this.checkBox;
        if (checkBoxBase != null) {
            checkBoxBase.onAttachedToWindow();
        }
        CheckBoxBase checkBoxBase2 = this.mediaCheckBox;
        if (checkBoxBase2 != null) {
            checkBoxBase2.onAttachedToWindow();
        }
        if (this.pollCheckBox != null) {
            int i = 0;
            while (true) {
                CheckBoxBase[] checkBoxBaseArr = this.pollCheckBox;
                if (i >= checkBoxBaseArr.length) {
                    break;
                }
                checkBoxBaseArr[i].onAttachedToWindow();
                i++;
            }
        }
        this.attachedToWindow = true;
        this.animationOffsetX = 0.0f;
        this.slidingOffsetX = 0.0f;
        this.checkBoxTranslation = 0;
        updateTranslation();
        this.avatarImage.setParentView((View) getParent());
        this.avatarImage.onAttachedToWindow();
        checkImageReceiversAttachState();
        MessageObject messageObject3 = this.currentMessageObject;
        if (messageObject3 != null) {
            setAvatar(messageObject3);
        }
        int i2 = this.documentAttachType;
        if (i2 == 4 && this.autoPlayingMedia) {
            boolean isPlayingMessage = MediaController.getInstance().isPlayingMessage(this.currentMessageObject);
            this.animatingNoSoundPlaying = isPlayingMessage;
            this.animatingNoSoundProgress = isPlayingMessage ? 0.0f : 1.0f;
            this.animatingNoSound = 0;
        } else {
            this.animatingNoSoundPlaying = false;
            this.animatingNoSoundProgress = 0.0f;
            this.animatingDrawVideoImageButtonProgress = ((i2 == 4 || i2 == 2) && this.drawVideoSize) ? 1.0f : 0.0f;
        }
        if (getDelegate() != null && getDelegate().getTextSelectionHelper() != null) {
            getDelegate().getTextSelectionHelper().onChatMessageCellAttached(this);
        }
        if (this.documentAttachType == 5) {
            this.toSeekBarProgress = MediaController.getInstance().isPlayingMessage(this.currentMessageObject) ? 1.0f : 0.0f;
        }
        this.reactionsLayoutInBubble.onAttachToWindow();
        FlagSecureReason flagSecureReason = this.flagSecure;
        if (flagSecureReason != null) {
            flagSecureReason.attach();
        }
        updateFlagSecure();
        MessageObject messageObject4 = this.currentMessageObject;
        if (messageObject4 != null && messageObject4.type == 20 && this.unlockLayout != null) {
            invalidate();
        }
        MessageTopicButton messageTopicButton = this.topicButton;
        if (messageTopicButton != null) {
            messageTopicButton.onAttached(this);
        }
        AnimatedEmojiDrawable.SwapAnimatedEmojiDrawable swapAnimatedEmojiDrawable = this.currentNameStatusDrawable;
        if (swapAnimatedEmojiDrawable != null) {
            swapAnimatedEmojiDrawable.attach();
        }
        SpoilerEffect2 spoilerEffect2 = this.mediaSpoilerEffect2;
        if (spoilerEffect2 != null) {
            if (spoilerEffect2.destroyed) {
                SpoilerEffect2 spoilerEffect22 = SpoilerEffect2.getInstance(this);
                this.mediaSpoilerEffect2 = spoilerEffect22;
                Integer num = this.mediaSpoilerEffect2Index;
                if (num != null) {
                    spoilerEffect22.reassignAttach(this, num.intValue());
                }
            } else {
                spoilerEffect2.attach(this);
            }
        }
        ChannelRecommendationsCell channelRecommendationsCell = this.channelRecommendationsCell;
        if (channelRecommendationsCell != null) {
            channelRecommendationsCell.onAttachedToWindow();
        }
        StickerSetLinkIcon stickerSetLinkIcon = this.stickerSetIcons;
        if (stickerSetLinkIcon != null) {
            stickerSetLinkIcon.attach(this);
        }
    }

    public void copySpoilerEffect2AttachIndexFrom(ChatMessageCell chatMessageCell) {
        SpoilerEffect2 spoilerEffect2;
        if (chatMessageCell == null || (spoilerEffect2 = chatMessageCell.mediaSpoilerEffect2) == null) {
            return;
        }
        Integer valueOf = Integer.valueOf(spoilerEffect2.getAttachIndex(chatMessageCell));
        this.mediaSpoilerEffect2Index = valueOf;
        SpoilerEffect2 spoilerEffect22 = this.mediaSpoilerEffect2;
        if (spoilerEffect22 != null) {
            spoilerEffect22.reassignAttach(this, valueOf.intValue());
        }
    }

    private void checkImageReceiversAttachState() {
        boolean z = this.attachedToWindow;
        boolean z2 = false;
        if (z != this.imageReceiversAttachState) {
            this.imageReceiversAttachState = z;
            if (z) {
                this.radialProgress.onAttachedToWindow();
                this.videoRadialProgress.onAttachedToWindow();
                if (this.pollAvatarImages != null) {
                    int i = 0;
                    while (true) {
                        ImageReceiver[] imageReceiverArr = this.pollAvatarImages;
                        if (i >= imageReceiverArr.length) {
                            break;
                        }
                        imageReceiverArr[i].onAttachedToWindow();
                        i++;
                    }
                }
                if (this.commentAvatarImages != null) {
                    int i2 = 0;
                    while (true) {
                        ImageReceiver[] imageReceiverArr2 = this.commentAvatarImages;
                        if (i2 >= imageReceiverArr2.length) {
                            break;
                        }
                        imageReceiverArr2[i2].onAttachedToWindow();
                        i2++;
                    }
                }
                this.giveawayMessageCell.onAttachedToWindow();
                this.giveawayResultsMessageCell.onAttachedToWindow();
                this.replyImageReceiver.onAttachedToWindow();
                this.locationImageReceiver.onAttachedToWindow();
                this.blurredPhotoImage.onAttachedToWindow();
                if (this.photoImage.onAttachedToWindow()) {
                    if (this.drawPhotoImage) {
                        updateButtonState(false, false, false);
                    }
                } else {
                    updateButtonState(false, false, false);
                }
                AnimatedEmojiSpan.EmojiGroupedSpans emojiGroupedSpans = this.animatedEmojiReplyStack;
                Layout[] layoutArr = new Layout[1];
                CachedStaticLayout cachedStaticLayout = this.replyTextLayout;
                layoutArr[0] = cachedStaticLayout == null ? null : cachedStaticLayout.layout;
                this.animatedEmojiReplyStack = AnimatedEmojiSpan.update(0, (View) this, false, emojiGroupedSpans, layoutArr);
                this.animatedEmojiDescriptionStack = AnimatedEmojiSpan.update(0, (View) this, false, this.animatedEmojiDescriptionStack, getDescriptionLayout());
                updateAnimatedEmojis();
            } else {
                this.radialProgress.onDetachedFromWindow();
                this.videoRadialProgress.onDetachedFromWindow();
                if (this.pollAvatarImages != null) {
                    int i3 = 0;
                    while (true) {
                        ImageReceiver[] imageReceiverArr3 = this.pollAvatarImages;
                        if (i3 >= imageReceiverArr3.length) {
                            break;
                        }
                        imageReceiverArr3[i3].onDetachedFromWindow();
                        i3++;
                    }
                }
                if (this.commentAvatarImages != null) {
                    int i4 = 0;
                    while (true) {
                        ImageReceiver[] imageReceiverArr4 = this.commentAvatarImages;
                        if (i4 >= imageReceiverArr4.length) {
                            break;
                        }
                        imageReceiverArr4[i4].onDetachedFromWindow();
                        i4++;
                    }
                }
                this.replyImageReceiver.onDetachedFromWindow();
                this.locationImageReceiver.onDetachedFromWindow();
                this.photoImage.onDetachedFromWindow();
                this.blurredPhotoImage.onDetachedFromWindow();
                this.giveawayMessageCell.onDetachedFromWindow();
                this.giveawayResultsMessageCell.onDetachedFromWindow();
                AnimatedEmojiSpan.release(this, this.animatedEmojiDescriptionStack);
                AnimatedEmojiSpan.release(this, this.animatedEmojiReplyStack);
                AnimatedEmojiSpan.release(this, this.animatedEmojiStack);
            }
        }
        if (this.attachedToWindow && (this.visibleOnScreen || !this.shouldCheckVisibleOnScreen)) {
            z2 = true;
        }
        if (z2 != this.imageReceiversVisibleState) {
            this.imageReceiversVisibleState = z2;
            if (z2) {
                fileAttach(true, this.currentMessageObject);
            } else {
                fileDetach(this.currentMessageObject);
            }
        }
    }

    private void fileAttach(boolean z, MessageObject messageObject) {
        ImageReceiver imageReceiver = this.photoImage;
        if (imageReceiver != null) {
            imageReceiver.setFileLoadingPriority(1);
        }
        if (z && messageObject != null && (this.isRoundVideo || messageObject.isVideo())) {
            checkVideoPlayback(true, null);
        }
        if (messageObject == null || messageObject.mediaExists) {
            return;
        }
        int canDownloadMedia = DownloadController.getInstance(this.currentAccount).canDownloadMedia(messageObject.messageOwner);
        TLRPC$Document document = messageObject.getDocument();
        if ((MessageObject.isStickerDocument(document) || MessageObject.isAnimatedStickerDocument(document, true) || MessageObject.isGifDocument(document) || MessageObject.isRoundVideoDocument(document)) || this.isSmallImage) {
            return;
        }
        TLRPC$PhotoSize closestPhotoSizeWithSize = document == null ? FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, AndroidUtilities.getPhotoSize()) : null;
        if (canDownloadMedia == 2 || (canDownloadMedia == 1 && messageObject.isVideo())) {
            if (canDownloadMedia != 2 && document != null && !messageObject.shouldEncryptPhotoOrVideo() && messageObject.canStreamVideo()) {
                FileLoader.getInstance(this.currentAccount).loadFile(document, messageObject, 1, 0);
            }
        } else if (canDownloadMedia != 0) {
            if (document != null) {
                FileLoader.getInstance(this.currentAccount).loadFile(document, messageObject, 1, ((MessageObject.isVideoDocument(document) || messageObject.isVoiceOnce() || messageObject.isRoundOnce()) && messageObject.shouldEncryptPhotoOrVideo()) ? 2 : 0);
            } else if (closestPhotoSizeWithSize != null) {
                FileLoader.getInstance(this.currentAccount).loadFile(ImageLocation.getForObject(closestPhotoSizeWithSize, messageObject.photoThumbsObject), messageObject, null, 1, messageObject.shouldEncryptPhotoOrVideo() ? 2 : 0);
            }
        }
        if (z) {
            updateButtonState(false, false, false);
        }
    }

    private void fileDetach(MessageObject messageObject) {
        ImageReceiver imageReceiver = this.photoImage;
        if (imageReceiver != null) {
            imageReceiver.setFileLoadingPriority(0);
        }
        cancelLoading(messageObject);
    }

    private void cancelLoading(MessageObject messageObject) {
        if (messageObject == null || messageObject.mediaExists || messageObject.putInDownloadsStore || DownloadController.getInstance(this.currentAccount).isDownloading(messageObject.messageOwner.id) || PhotoViewer.getInstance().isVisible()) {
            return;
        }
        TLRPC$Document document = messageObject.getDocument();
        boolean z = true;
        if (!MessageObject.isStickerDocument(document) && !MessageObject.isAnimatedStickerDocument(document, true) && !MessageObject.isGifDocument(document) && !MessageObject.isRoundVideoDocument(document)) {
            z = false;
        }
        if (z) {
            return;
        }
        if (document != null) {
            FileLoader.getInstance(this.currentAccount).cancelLoadFile(document);
            return;
        }
        TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, AndroidUtilities.getPhotoSize());
        if (closestPhotoSizeWithSize != null) {
            FileLoader.getInstance(this.currentAccount).cancelLoadFile(closestPhotoSizeWithSize);
        }
    }

    /* JADX WARN: Can't wrap try/catch for region: R(15:981|(3:982|983|984)|(5:985|986|(3:989|990|987)|991|992)|993|994|995|(1:997)(1:1027)|998|(4:1001|(2:1003|1004)(2:1006|(2:1008|1009)(2:1010|1011))|1005|999)|1012|(1:1014)(1:1025)|1015|(1:1024)|1019|(2:1021|(1:1023))) */
    /* JADX WARN: Can't wrap try/catch for region: R(50:3450|3451|(1:3453)(2:3488|(1:3490)(1:3491))|3454|(45:3487|3458|(1:3484)|3461|3462|3463|3464|(28:3479|3470|3471|2963|(1:3449)|2965|2966|(4:3404|(1:3406)(1:3446)|3407|(8:3409|(2:3411|(1:3413)(1:3444))(1:3445)|3414|(1:3416)(1:3443)|3417|(1:3423)|3424|(2:3426|(3:3430|(2:3432|(1:3434))|3435)(1:(4:3437|(1:3439)|3440|(1:3442))))))|2968|2969|(3:2976|(1:2978)|2979)|(2:2983|(1:2985))|(2:3389|(3:3393|(1:3395)(2:3397|(1:3399))|3396)(3:3400|(1:3402)|3403))(3:2987|2988|(2:2992|(1:2994)(4:3374|(1:3376)|3377|(1:3379)(1:3380))))|2995|(1:3001)(1:3373)|3002|(1:3372)(1:3004)|3005|(1:3010)|3011|(2:3338|(10:3340|(2:3342|(1:3344))|3346|(2:3350|(2:3358|(1:3360)(9:3361|(7:3368|3365|3015|(1:3017)(1:3337)|3018|(2:3020|(2:3024|(2:3026|(2:3028|(2:3032|(1:3037)(2:(1:3190)(1:3186)|3187))(6:3191|(2:3193|(1:3195)(1:3289))(1:3290)|3196|(1:3200)(1:3288)|3201|(3:3206|(2:3208|(4:3212|3213|(1:3215)|(5:3222|(1:3224)|3225|(1:3227)(1:3229)|3228)(2:3230|(3:3235|(1:3237)(1:3239)|3238)(1:3240)))(1:3210))|(2:(5:3250|(1:3252)|3253|(1:3255)(1:3258)|3256)(3:3259|(1:3261)(1:3263)|3262)|3257)(3:3264|(1:3266)(1:3268)|3267))(2:3272|(1:3278)(2:(1:3282)|3283))))(2:3291|(2:3293|(1:3295)(3:3296|(1:3298)(1:3313)|(2:3306|(1:3310)(1:3311))(1:3312)))(1:3314)))(1:3315))(2:3316|(1:3318)(2:3319|(1:3321)(1:3322))))(2:3323|(1:3329)(2:3330|(2:(1:3336)(1:3333)|3334)))|3038)|3364|3365|3015|(0)(0)|3018|(0)(0)|3038)))|3014|3015|(0)(0)|3018|(0)(0)|3038))|3013|3014|3015|(0)(0)|3018|(0)(0)|3038)|3467|(35:3474|3475|2963|(2:3447|3449)|2965|2966|(0)|2968|2969|(4:2971|2976|(0)|2979)|(3:2981|2983|(0))|(22:3389|(21:3391|3393|(0)(0)|3396|2995|(17:2997|2999|3001|3002|(13:3370|3372|3005|(2:3008|3010)|3011|(0)|3013|3014|3015|(0)(0)|3018|(0)(0)|3038)|3004|3005|(0)|3011|(0)|3013|3014|3015|(0)(0)|3018|(0)(0)|3038)|3373|3002|(0)|3004|3005|(0)|3011|(0)|3013|3014|3015|(0)(0)|3018|(0)(0)|3038)|3400|(0)|3403|2995|(0)|3373|3002|(0)|3004|3005|(0)|3011|(0)|3013|3014|3015|(0)(0)|3018|(0)(0)|3038)|2987|2988|(20:2990|2992|(0)(0)|2995|(0)|3373|3002|(0)|3004|3005|(0)|3011|(0)|3013|3014|3015|(0)(0)|3018|(0)(0)|3038)|3381|2992|(0)(0)|2995|(0)|3373|3002|(0)|3004|3005|(0)|3011|(0)|3013|3014|3015|(0)(0)|3018|(0)(0)|3038)|3470|3471|2963|(0)|2965|2966|(0)|2968|2969|(0)|(0)|(0)|2987|2988|(0)|3381|2992|(0)(0)|2995|(0)|3373|3002|(0)|3004|3005|(0)|3011|(0)|3013|3014|3015|(0)(0)|3018|(0)(0)|3038)|3457|3458|(1:3460)(2:3482|3484)|3461|3462|3463|3464|(1:3466)(37:3477|3479|3470|3471|2963|(0)|2965|2966|(0)|2968|2969|(0)|(0)|(0)|2987|2988|(0)|3381|2992|(0)(0)|2995|(0)|3373|3002|(0)|3004|3005|(0)|3011|(0)|3013|3014|3015|(0)(0)|3018|(0)(0)|3038)|3467|(1:3469)(36:3472|3474|3475|2963|(0)|2965|2966|(0)|2968|2969|(0)|(0)|(0)|2987|2988|(0)|3381|2992|(0)(0)|2995|(0)|3373|3002|(0)|3004|3005|(0)|3011|(0)|3013|3014|3015|(0)(0)|3018|(0)(0)|3038)|3470|3471|2963|(0)|2965|2966|(0)|2968|2969|(0)|(0)|(0)|2987|2988|(0)|3381|2992|(0)(0)|2995|(0)|3373|3002|(0)|3004|3005|(0)|3011|(0)|3013|3014|3015|(0)(0)|3018|(0)(0)|3038) */
    /* JADX WARN: Code restructure failed: missing block: B:1056:0x0e79, code lost:
        if (r1.isSmall != false) goto L3494;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1175:0x1093, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1179:0x1097, code lost:
        org.telegram.messenger.FileLog.e(r0);
     */
    /* JADX WARN: Code restructure failed: missing block: B:1361:0x13bc, code lost:
        if (r2.revealingMediaSpoilers != false) goto L3346;
     */
    /* JADX WARN: Code restructure failed: missing block: B:2021:0x2468, code lost:
        if (r1 >= (r5 + org.telegram.messenger.AndroidUtilities.dp(r9 + r12))) goto L4087;
     */
    /* JADX WARN: Code restructure failed: missing block: B:3767:0x4766, code lost:
        if (r3 == 22) goto L2392;
     */
    /* JADX WARN: Code restructure failed: missing block: B:3771:0x476c, code lost:
        if (r15 == false) goto L2346;
     */
    /* JADX WARN: Code restructure failed: missing block: B:3978:0x4ade, code lost:
        if (r8.isSmallImage != false) goto L2229;
     */
    /* JADX WARN: Code restructure failed: missing block: B:4173:0x4f38, code lost:
        if (r8.isSmallImage != false) goto L2099;
     */
    /* JADX WARN: Code restructure failed: missing block: B:4865:0x5bb4, code lost:
        if (r0.revealingMediaSpoilers != false) goto L1607;
     */
    /* JADX WARN: Code restructure failed: missing block: B:50:0x0097, code lost:
        if (r8.isPlayingRound == ((!org.telegram.messenger.MediaController.getInstance().isPlayingMessage(r8.currentMessageObject) || (r6 = r8.delegate) == null || r6.keyboardIsOpened()) ? false : true)) goto L36;
     */
    /* JADX WARN: Code restructure failed: missing block: B:5259:0x63fe, code lost:
        if ((r2.flags & 8) == 0) goto L686;
     */
    /* JADX WARN: Code restructure failed: missing block: B:5330:0x658b, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:5331:0x658c, code lost:
        org.telegram.messenger.FileLog.e(r0);
     */
    /* JADX WARN: Code restructure failed: missing block: B:5798:0x6c7c, code lost:
        if (r7.button.url.startsWith("tg://resolve") != false) goto L937;
     */
    /* JADX WARN: Multi-variable search skipped. Vars limit reached: 8370 (expected less than 5000) */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:1005:0x0d98  */
    /* JADX WARN: Removed duplicated region for block: B:1008:0x0dc5  */
    /* JADX WARN: Removed duplicated region for block: B:1009:0x0dc8  */
    /* JADX WARN: Removed duplicated region for block: B:1012:0x0dd0  */
    /* JADX WARN: Removed duplicated region for block: B:1013:0x0dd2  */
    /* JADX WARN: Removed duplicated region for block: B:1017:0x0ddf  */
    /* JADX WARN: Removed duplicated region for block: B:1020:0x0de6  */
    /* JADX WARN: Removed duplicated region for block: B:1031:0x0e1d  */
    /* JADX WARN: Removed duplicated region for block: B:1042:0x0e42  */
    /* JADX WARN: Removed duplicated region for block: B:1064:0x0e93  */
    /* JADX WARN: Removed duplicated region for block: B:1066:0x0ea1  */
    /* JADX WARN: Removed duplicated region for block: B:106:0x0116  */
    /* JADX WARN: Removed duplicated region for block: B:1184:0x10a1  */
    /* JADX WARN: Removed duplicated region for block: B:1191:0x10bb  */
    /* JADX WARN: Removed duplicated region for block: B:1248:0x11d9  */
    /* JADX WARN: Removed duplicated region for block: B:1259:0x11f1  */
    /* JADX WARN: Removed duplicated region for block: B:1263:0x11fe  */
    /* JADX WARN: Removed duplicated region for block: B:1269:0x121b  */
    /* JADX WARN: Removed duplicated region for block: B:1272:0x1229 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:1283:0x1267  */
    /* JADX WARN: Removed duplicated region for block: B:1287:0x127e  */
    /* JADX WARN: Removed duplicated region for block: B:1288:0x1280  */
    /* JADX WARN: Removed duplicated region for block: B:1296:0x12e2  */
    /* JADX WARN: Removed duplicated region for block: B:1310:0x12fe  */
    /* JADX WARN: Removed duplicated region for block: B:1311:0x1314  */
    /* JADX WARN: Removed duplicated region for block: B:1322:0x1370  */
    /* JADX WARN: Removed duplicated region for block: B:1332:0x1381 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:1341:0x1391 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:1351:0x13a5  */
    /* JADX WARN: Removed duplicated region for block: B:138:0x0151  */
    /* JADX WARN: Removed duplicated region for block: B:1394:0x140f  */
    /* JADX WARN: Removed duplicated region for block: B:1395:0x1412  */
    /* JADX WARN: Removed duplicated region for block: B:1398:0x1418  */
    /* JADX WARN: Removed duplicated region for block: B:144:0x0160  */
    /* JADX WARN: Removed duplicated region for block: B:149:0x0173  */
    /* JADX WARN: Removed duplicated region for block: B:150:0x0177  */
    /* JADX WARN: Removed duplicated region for block: B:1584:0x1897  */
    /* JADX WARN: Removed duplicated region for block: B:162:0x0199  */
    /* JADX WARN: Removed duplicated region for block: B:1695:0x1a88  */
    /* JADX WARN: Removed duplicated region for block: B:1696:0x1a8b  */
    /* JADX WARN: Removed duplicated region for block: B:169:0x01a4  */
    /* JADX WARN: Removed duplicated region for block: B:175:0x01b0  */
    /* JADX WARN: Removed duplicated region for block: B:180:0x01ba  */
    /* JADX WARN: Removed duplicated region for block: B:1972:0x2238  */
    /* JADX WARN: Removed duplicated region for block: B:201:0x01e3 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:2029:0x2480  */
    /* JADX WARN: Removed duplicated region for block: B:2067:0x26a8  */
    /* JADX WARN: Removed duplicated region for block: B:2068:0x26b4  */
    /* JADX WARN: Removed duplicated region for block: B:2081:0x26d3  */
    /* JADX WARN: Removed duplicated region for block: B:2094:0x2717  */
    /* JADX WARN: Removed duplicated region for block: B:2095:0x271a  */
    /* JADX WARN: Removed duplicated region for block: B:2099:0x2734  */
    /* JADX WARN: Removed duplicated region for block: B:2119:0x2797  */
    /* JADX WARN: Removed duplicated region for block: B:2129:0x27f2  */
    /* JADX WARN: Removed duplicated region for block: B:2243:0x2a01  */
    /* JADX WARN: Removed duplicated region for block: B:2244:0x2a03  */
    /* JADX WARN: Removed duplicated region for block: B:2248:0x2a1b  */
    /* JADX WARN: Removed duplicated region for block: B:2261:0x2a5e  */
    /* JADX WARN: Removed duplicated region for block: B:2272:0x2a74  */
    /* JADX WARN: Removed duplicated region for block: B:227:0x0228  */
    /* JADX WARN: Removed duplicated region for block: B:2285:0x2a99  */
    /* JADX WARN: Removed duplicated region for block: B:2289:0x2ab6  */
    /* JADX WARN: Removed duplicated region for block: B:2292:0x2ac5  */
    /* JADX WARN: Removed duplicated region for block: B:2293:0x2ac8  */
    /* JADX WARN: Removed duplicated region for block: B:2306:0x2af6  */
    /* JADX WARN: Removed duplicated region for block: B:2310:0x2b0e  */
    /* JADX WARN: Removed duplicated region for block: B:2315:0x2b1b  */
    /* JADX WARN: Removed duplicated region for block: B:232:0x023d  */
    /* JADX WARN: Removed duplicated region for block: B:2334:0x2b56  */
    /* JADX WARN: Removed duplicated region for block: B:2335:0x2b58  */
    /* JADX WARN: Removed duplicated region for block: B:2339:0x2b6b  */
    /* JADX WARN: Removed duplicated region for block: B:2342:0x2b78  */
    /* JADX WARN: Removed duplicated region for block: B:2343:0x2b7a  */
    /* JADX WARN: Removed duplicated region for block: B:2369:0x2bd8  */
    /* JADX WARN: Removed duplicated region for block: B:239:0x0256 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:2402:0x2c43  */
    /* JADX WARN: Removed duplicated region for block: B:2409:0x2c79  */
    /* JADX WARN: Removed duplicated region for block: B:2414:0x2c84  */
    /* JADX WARN: Removed duplicated region for block: B:2418:0x2c8f  */
    /* JADX WARN: Removed duplicated region for block: B:243:0x0261  */
    /* JADX WARN: Removed duplicated region for block: B:244:0x0263  */
    /* JADX WARN: Removed duplicated region for block: B:247:0x026f  */
    /* JADX WARN: Removed duplicated region for block: B:248:0x0271  */
    /* JADX WARN: Removed duplicated region for block: B:252:0x027a A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:2744:0x33a7  */
    /* JADX WARN: Removed duplicated region for block: B:275:0x02ae  */
    /* JADX WARN: Removed duplicated region for block: B:2762:0x3416  */
    /* JADX WARN: Removed duplicated region for block: B:2763:0x341f  */
    /* JADX WARN: Removed duplicated region for block: B:279:0x02ca A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:284:0x02d7  */
    /* JADX WARN: Removed duplicated region for block: B:289:0x02e4  */
    /* JADX WARN: Removed duplicated region for block: B:296:0x0300  */
    /* JADX WARN: Removed duplicated region for block: B:300:0x0307  */
    /* JADX WARN: Removed duplicated region for block: B:3011:0x3907  */
    /* JADX WARN: Removed duplicated region for block: B:3016:0x3915  */
    /* JADX WARN: Removed duplicated region for block: B:3019:0x3922  */
    /* JADX WARN: Removed duplicated region for block: B:3028:0x3969  */
    /* JADX WARN: Removed duplicated region for block: B:3039:0x3986  */
    /* JADX WARN: Removed duplicated region for block: B:3040:0x398a  */
    /* JADX WARN: Removed duplicated region for block: B:3074:0x3a64  */
    /* JADX WARN: Removed duplicated region for block: B:3078:0x3a74  */
    /* JADX WARN: Removed duplicated region for block: B:3086:0x3a86  */
    /* JADX WARN: Removed duplicated region for block: B:3094:0x3abb  */
    /* JADX WARN: Removed duplicated region for block: B:3100:0x3ae6  */
    /* JADX WARN: Removed duplicated region for block: B:315:0x0324  */
    /* JADX WARN: Removed duplicated region for block: B:327:0x0345  */
    /* JADX WARN: Removed duplicated region for block: B:3404:0x4084 A[Catch: Exception -> 0x4330, TryCatch #3 {Exception -> 0x4330, blocks: (B:3404:0x4084, B:3407:0x408c, B:3410:0x4095, B:3417:0x40cc, B:3424:0x40f3, B:3431:0x411a, B:3427:0x40fc, B:3430:0x4109, B:3420:0x40d5, B:3423:0x40e2, B:3413:0x40ae, B:3416:0x40ba, B:3432:0x4142, B:3439:0x4180, B:3446:0x41a7, B:3453:0x41ce, B:3455:0x41d5, B:3457:0x41e1, B:3456:0x41dc, B:3449:0x41b0, B:3452:0x41bd, B:3442:0x4189, B:3445:0x4196, B:3435:0x415c, B:3438:0x4168, B:3402:0x4080), top: B:5819:0x4080 }] */
    /* JADX WARN: Removed duplicated region for block: B:342:0x03aa  */
    /* JADX WARN: Removed duplicated region for block: B:3432:0x4142 A[Catch: Exception -> 0x4330, TryCatch #3 {Exception -> 0x4330, blocks: (B:3404:0x4084, B:3407:0x408c, B:3410:0x4095, B:3417:0x40cc, B:3424:0x40f3, B:3431:0x411a, B:3427:0x40fc, B:3430:0x4109, B:3420:0x40d5, B:3423:0x40e2, B:3413:0x40ae, B:3416:0x40ba, B:3432:0x4142, B:3439:0x4180, B:3446:0x41a7, B:3453:0x41ce, B:3455:0x41d5, B:3457:0x41e1, B:3456:0x41dc, B:3449:0x41b0, B:3452:0x41bd, B:3442:0x4189, B:3445:0x4196, B:3435:0x415c, B:3438:0x4168, B:3402:0x4080), top: B:5819:0x4080 }] */
    /* JADX WARN: Removed duplicated region for block: B:343:0x03ac  */
    /* JADX WARN: Removed duplicated region for block: B:347:0x03c0  */
    /* JADX WARN: Removed duplicated region for block: B:3517:0x433b  */
    /* JADX WARN: Removed duplicated region for block: B:3521:0x4345  */
    /* JADX WARN: Removed duplicated region for block: B:3532:0x435a  */
    /* JADX WARN: Removed duplicated region for block: B:3541:0x43ac  */
    /* JADX WARN: Removed duplicated region for block: B:3542:0x43b2  */
    /* JADX WARN: Removed duplicated region for block: B:3549:0x4408  */
    /* JADX WARN: Removed duplicated region for block: B:3557:0x4425  */
    /* JADX WARN: Removed duplicated region for block: B:3563:0x4460  */
    /* JADX WARN: Removed duplicated region for block: B:3564:0x446f  */
    /* JADX WARN: Removed duplicated region for block: B:3568:0x447e  */
    /* JADX WARN: Removed duplicated region for block: B:3586:0x44c6  */
    /* JADX WARN: Removed duplicated region for block: B:3590:0x44d6  */
    /* JADX WARN: Removed duplicated region for block: B:3600:0x4504  */
    /* JADX WARN: Removed duplicated region for block: B:3604:0x4517  */
    /* JADX WARN: Removed duplicated region for block: B:360:0x03dc  */
    /* JADX WARN: Removed duplicated region for block: B:3611:0x4528  */
    /* JADX WARN: Removed duplicated region for block: B:3619:0x4543  */
    /* JADX WARN: Removed duplicated region for block: B:3623:0x4558  */
    /* JADX WARN: Removed duplicated region for block: B:3627:0x456c  */
    /* JADX WARN: Removed duplicated region for block: B:3640:0x4599  */
    /* JADX WARN: Removed duplicated region for block: B:3644:0x45a2  */
    /* JADX WARN: Removed duplicated region for block: B:3654:0x45c9  */
    /* JADX WARN: Removed duplicated region for block: B:370:0x03f3  */
    /* JADX WARN: Removed duplicated region for block: B:3741:0x4735  */
    /* JADX WARN: Removed duplicated region for block: B:3742:0x4738  */
    /* JADX WARN: Removed duplicated region for block: B:376:0x0412  */
    /* JADX WARN: Removed duplicated region for block: B:3776:0x4776  */
    /* JADX WARN: Removed duplicated region for block: B:3787:0x478f  */
    /* JADX WARN: Removed duplicated region for block: B:3788:0x4792  */
    /* JADX WARN: Removed duplicated region for block: B:3805:0x47b5  */
    /* JADX WARN: Removed duplicated region for block: B:3812:0x47c1 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:3890:0x48dc  */
    /* JADX WARN: Removed duplicated region for block: B:3912:0x4948  */
    /* JADX WARN: Removed duplicated region for block: B:3928:0x498d  */
    /* JADX WARN: Removed duplicated region for block: B:3933:0x49a2  */
    /* JADX WARN: Removed duplicated region for block: B:3937:0x49aa  */
    /* JADX WARN: Removed duplicated region for block: B:3941:0x49bd A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:3946:0x4a06  */
    /* JADX WARN: Removed duplicated region for block: B:4039:0x4c19  */
    /* JADX WARN: Removed duplicated region for block: B:4084:0x4d29  */
    /* JADX WARN: Removed duplicated region for block: B:4090:0x4d38 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:4094:0x4d41  */
    /* JADX WARN: Removed duplicated region for block: B:4095:0x4d42 A[Catch: Exception -> 0x4e1d, TRY_LEAVE, TryCatch #10 {Exception -> 0x4e1d, blocks: (B:4092:0x4d3d, B:4100:0x4d67, B:4105:0x4d8d, B:4106:0x4da7, B:4107:0x4db3, B:4109:0x4dbb, B:4110:0x4de1, B:4123:0x4e02, B:4113:0x4deb, B:4122:0x4dfa, B:4104:0x4d6e, B:4095:0x4d42), top: B:5832:0x4d3d }] */
    /* JADX WARN: Removed duplicated region for block: B:4110:0x4de1 A[Catch: Exception -> 0x4e1d, TryCatch #10 {Exception -> 0x4e1d, blocks: (B:4092:0x4d3d, B:4100:0x4d67, B:4105:0x4d8d, B:4106:0x4da7, B:4107:0x4db3, B:4109:0x4dbb, B:4110:0x4de1, B:4123:0x4e02, B:4113:0x4deb, B:4122:0x4dfa, B:4104:0x4d6e, B:4095:0x4d42), top: B:5832:0x4d3d }] */
    /* JADX WARN: Removed duplicated region for block: B:4128:0x4e25  */
    /* JADX WARN: Removed duplicated region for block: B:4129:0x4e29  */
    /* JADX WARN: Removed duplicated region for block: B:413:0x047b  */
    /* JADX WARN: Removed duplicated region for block: B:4143:0x4e65  */
    /* JADX WARN: Removed duplicated region for block: B:4146:0x4e6d A[Catch: Exception -> 0x4f51, TryCatch #12 {Exception -> 0x4f51, blocks: (B:4142:0x4e60, B:4144:0x4e67, B:4146:0x4e6d, B:4155:0x4e87, B:4159:0x4e92, B:4161:0x4ecd, B:4162:0x4f04, B:4164:0x4f0e, B:4165:0x4f1f, B:4175:0x4f3c, B:4176:0x4f3e, B:4172:0x4f36, B:4158:0x4e8f, B:4153:0x4e83, B:4160:0x4ea6), top: B:5836:0x4e60 }] */
    /* JADX WARN: Removed duplicated region for block: B:4150:0x4e7b  */
    /* JADX WARN: Removed duplicated region for block: B:4157:0x4e8d  */
    /* JADX WARN: Removed duplicated region for block: B:4158:0x4e8f A[Catch: Exception -> 0x4f51, TryCatch #12 {Exception -> 0x4f51, blocks: (B:4142:0x4e60, B:4144:0x4e67, B:4146:0x4e6d, B:4155:0x4e87, B:4159:0x4e92, B:4161:0x4ecd, B:4162:0x4f04, B:4164:0x4f0e, B:4165:0x4f1f, B:4175:0x4f3c, B:4176:0x4f3e, B:4172:0x4f36, B:4158:0x4e8f, B:4153:0x4e83, B:4160:0x4ea6), top: B:5836:0x4e60 }] */
    /* JADX WARN: Removed duplicated region for block: B:4165:0x4f1f A[Catch: Exception -> 0x4f51, TryCatch #12 {Exception -> 0x4f51, blocks: (B:4142:0x4e60, B:4144:0x4e67, B:4146:0x4e6d, B:4155:0x4e87, B:4159:0x4e92, B:4161:0x4ecd, B:4162:0x4f04, B:4164:0x4f0e, B:4165:0x4f1f, B:4175:0x4f3c, B:4176:0x4f3e, B:4172:0x4f36, B:4158:0x4e8f, B:4153:0x4e83, B:4160:0x4ea6), top: B:5836:0x4e60 }] */
    /* JADX WARN: Removed duplicated region for block: B:4185:0x4f5c  */
    /* JADX WARN: Removed duplicated region for block: B:4193:0x4f6e  */
    /* JADX WARN: Removed duplicated region for block: B:4196:0x4f75  */
    /* JADX WARN: Removed duplicated region for block: B:420:0x04c8  */
    /* JADX WARN: Removed duplicated region for block: B:4220:0x4fce  */
    /* JADX WARN: Removed duplicated region for block: B:4221:0x4fd0  */
    /* JADX WARN: Removed duplicated region for block: B:4224:0x4fdd  */
    /* JADX WARN: Removed duplicated region for block: B:4225:0x4fdf  */
    /* JADX WARN: Removed duplicated region for block: B:4228:0x4fe8  */
    /* JADX WARN: Removed duplicated region for block: B:4229:0x4feb  */
    /* JADX WARN: Removed duplicated region for block: B:4233:0x4ffc  */
    /* JADX WARN: Removed duplicated region for block: B:424:0x04f5  */
    /* JADX WARN: Removed duplicated region for block: B:432:0x0509  */
    /* JADX WARN: Removed duplicated region for block: B:433:0x050b  */
    /* JADX WARN: Removed duplicated region for block: B:437:0x0568 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:445:0x057d  */
    /* JADX WARN: Removed duplicated region for block: B:4509:0x5578  */
    /* JADX WARN: Removed duplicated region for block: B:4558:0x563f  */
    /* JADX WARN: Removed duplicated region for block: B:455:0x05ce  */
    /* JADX WARN: Removed duplicated region for block: B:4591:0x568d  */
    /* JADX WARN: Removed duplicated region for block: B:459:0x05db  */
    /* JADX WARN: Removed duplicated region for block: B:4621:0x56f7  */
    /* JADX WARN: Removed duplicated region for block: B:4625:0x56ff  */
    /* JADX WARN: Removed duplicated region for block: B:4628:0x5713  */
    /* JADX WARN: Removed duplicated region for block: B:4654:0x5759  */
    /* JADX WARN: Removed duplicated region for block: B:4658:0x5764  */
    /* JADX WARN: Removed duplicated region for block: B:4664:0x5774  */
    /* JADX WARN: Removed duplicated region for block: B:4665:0x5776  */
    /* JADX WARN: Removed duplicated region for block: B:4668:0x5785  */
    /* JADX WARN: Removed duplicated region for block: B:466:0x05eb  */
    /* JADX WARN: Removed duplicated region for block: B:4671:0x578d  */
    /* JADX WARN: Removed duplicated region for block: B:4678:0x579c  */
    /* JADX WARN: Removed duplicated region for block: B:4681:0x57aa  */
    /* JADX WARN: Removed duplicated region for block: B:4690:0x57be  */
    /* JADX WARN: Removed duplicated region for block: B:4694:0x57d1  */
    /* JADX WARN: Removed duplicated region for block: B:4706:0x5804  */
    /* JADX WARN: Removed duplicated region for block: B:470:0x05f7 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:4710:0x5812  */
    /* JADX WARN: Removed duplicated region for block: B:4714:0x581a  */
    /* JADX WARN: Removed duplicated region for block: B:4718:0x5832  */
    /* JADX WARN: Removed duplicated region for block: B:4722:0x5843  */
    /* JADX WARN: Removed duplicated region for block: B:4733:0x5882  */
    /* JADX WARN: Removed duplicated region for block: B:4734:0x5894  */
    /* JADX WARN: Removed duplicated region for block: B:4742:0x58c6  */
    /* JADX WARN: Removed duplicated region for block: B:4749:0x5929  */
    /* JADX WARN: Removed duplicated region for block: B:4757:0x5939  */
    /* JADX WARN: Removed duplicated region for block: B:479:0x062f  */
    /* JADX WARN: Removed duplicated region for block: B:488:0x0641  */
    /* JADX WARN: Removed duplicated region for block: B:4953:0x5e44  */
    /* JADX WARN: Removed duplicated region for block: B:4977:0x5eb9  */
    /* JADX WARN: Removed duplicated region for block: B:4981:0x5ed2  */
    /* JADX WARN: Removed duplicated region for block: B:498:0x0654  */
    /* JADX WARN: Removed duplicated region for block: B:4994:0x5f13  */
    /* JADX WARN: Removed duplicated region for block: B:5023:0x5f67  */
    /* JADX WARN: Removed duplicated region for block: B:5027:0x5fd1  */
    /* JADX WARN: Removed duplicated region for block: B:5028:0x5fd6  */
    /* JADX WARN: Removed duplicated region for block: B:5050:0x60d1  */
    /* JADX WARN: Removed duplicated region for block: B:5058:0x60f3  */
    /* JADX WARN: Removed duplicated region for block: B:5065:0x6117  */
    /* JADX WARN: Removed duplicated region for block: B:5089:0x6150  */
    /* JADX WARN: Removed duplicated region for block: B:5090:0x6152  */
    /* JADX WARN: Removed duplicated region for block: B:509:0x0677  */
    /* JADX WARN: Removed duplicated region for block: B:5102:0x61be  */
    /* JADX WARN: Removed duplicated region for block: B:510:0x0679  */
    /* JADX WARN: Removed duplicated region for block: B:5111:0x61f4  */
    /* JADX WARN: Removed duplicated region for block: B:513:0x067e  */
    /* JADX WARN: Removed duplicated region for block: B:514:0x0686  */
    /* JADX WARN: Removed duplicated region for block: B:5193:0x62fa  */
    /* JADX WARN: Removed duplicated region for block: B:5194:0x62fc  */
    /* JADX WARN: Removed duplicated region for block: B:5227:0x638d A[Catch: Exception -> 0x6443, TryCatch #25 {Exception -> 0x6443, blocks: (B:5218:0x634d, B:5225:0x6380, B:5227:0x638d, B:5234:0x63ac, B:5238:0x63b7, B:5248:0x63e6, B:5254:0x63f2, B:5257:0x63f9, B:5251:0x63ed, B:5241:0x63ca, B:5247:0x63d4, B:5244:0x63cf, B:5237:0x63b1, B:5230:0x6395, B:5231:0x63a1, B:5221:0x6354, B:5224:0x6359), top: B:5861:0x634d }] */
    /* JADX WARN: Removed duplicated region for block: B:5231:0x63a1 A[Catch: Exception -> 0x6443, TryCatch #25 {Exception -> 0x6443, blocks: (B:5218:0x634d, B:5225:0x6380, B:5227:0x638d, B:5234:0x63ac, B:5238:0x63b7, B:5248:0x63e6, B:5254:0x63f2, B:5257:0x63f9, B:5251:0x63ed, B:5241:0x63ca, B:5247:0x63d4, B:5244:0x63cf, B:5237:0x63b1, B:5230:0x6395, B:5231:0x63a1, B:5221:0x6354, B:5224:0x6359), top: B:5861:0x634d }] */
    /* JADX WARN: Removed duplicated region for block: B:5234:0x63ac A[Catch: Exception -> 0x6443, TryCatch #25 {Exception -> 0x6443, blocks: (B:5218:0x634d, B:5225:0x6380, B:5227:0x638d, B:5234:0x63ac, B:5238:0x63b7, B:5248:0x63e6, B:5254:0x63f2, B:5257:0x63f9, B:5251:0x63ed, B:5241:0x63ca, B:5247:0x63d4, B:5244:0x63cf, B:5237:0x63b1, B:5230:0x6395, B:5231:0x63a1, B:5221:0x6354, B:5224:0x6359), top: B:5861:0x634d }] */
    /* JADX WARN: Removed duplicated region for block: B:5281:0x644e  */
    /* JADX WARN: Removed duplicated region for block: B:5291:0x6468  */
    /* JADX WARN: Removed duplicated region for block: B:5304:0x64ed A[Catch: Exception -> 0x6500, TRY_LEAVE, TryCatch #30 {Exception -> 0x6500, blocks: (B:5300:0x64c9, B:5301:0x64ce, B:5303:0x64d6, B:5304:0x64ed), top: B:5871:0x64c9 }] */
    /* JADX WARN: Removed duplicated region for block: B:5314:0x650e  */
    /* JADX WARN: Removed duplicated region for block: B:5315:0x650f A[Catch: Exception -> 0x658b, TryCatch #17 {Exception -> 0x658b, blocks: (B:5312:0x6508, B:5316:0x6518, B:5317:0x6556, B:5321:0x6563, B:5322:0x6567, B:5325:0x6579, B:5327:0x657d, B:5328:0x6585, B:5315:0x650f), top: B:5846:0x6508 }] */
    /* JADX WARN: Removed duplicated region for block: B:531:0x06b2  */
    /* JADX WARN: Removed duplicated region for block: B:5320:0x6562  */
    /* JADX WARN: Removed duplicated region for block: B:5321:0x6563 A[Catch: Exception -> 0x658b, TryCatch #17 {Exception -> 0x658b, blocks: (B:5312:0x6508, B:5316:0x6518, B:5317:0x6556, B:5321:0x6563, B:5322:0x6567, B:5325:0x6579, B:5327:0x657d, B:5328:0x6585, B:5315:0x650f), top: B:5846:0x6508 }] */
    /* JADX WARN: Removed duplicated region for block: B:5322:0x6567 A[Catch: Exception -> 0x658b, TryCatch #17 {Exception -> 0x658b, blocks: (B:5312:0x6508, B:5316:0x6518, B:5317:0x6556, B:5321:0x6563, B:5322:0x6567, B:5325:0x6579, B:5327:0x657d, B:5328:0x6585, B:5315:0x650f), top: B:5846:0x6508 }] */
    /* JADX WARN: Removed duplicated region for block: B:5335:0x6595 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:5343:0x65b4  */
    /* JADX WARN: Removed duplicated region for block: B:5350:0x65cf  */
    /* JADX WARN: Removed duplicated region for block: B:5354:0x65e2  */
    /* JADX WARN: Removed duplicated region for block: B:5369:0x660a  */
    /* JADX WARN: Removed duplicated region for block: B:5370:0x660c  */
    /* JADX WARN: Removed duplicated region for block: B:5373:0x662a  */
    /* JADX WARN: Removed duplicated region for block: B:5374:0x662d  */
    /* JADX WARN: Removed duplicated region for block: B:5378:0x663a  */
    /* JADX WARN: Removed duplicated region for block: B:5397:0x6693  */
    /* JADX WARN: Removed duplicated region for block: B:5402:0x66af  */
    /* JADX WARN: Removed duplicated region for block: B:5403:0x66b1  */
    /* JADX WARN: Removed duplicated region for block: B:5410:0x66bd  */
    /* JADX WARN: Removed duplicated region for block: B:5418:0x66db  */
    /* JADX WARN: Removed duplicated region for block: B:5421:0x66e1  */
    /* JADX WARN: Removed duplicated region for block: B:5434:0x66ff  */
    /* JADX WARN: Removed duplicated region for block: B:5439:0x6717  */
    /* JADX WARN: Removed duplicated region for block: B:544:0x06cf  */
    /* JADX WARN: Removed duplicated region for block: B:5454:0x6748  */
    /* JADX WARN: Removed duplicated region for block: B:5466:0x6782  */
    /* JADX WARN: Removed duplicated region for block: B:5467:0x6784  */
    /* JADX WARN: Removed duplicated region for block: B:5473:0x67a5  */
    /* JADX WARN: Removed duplicated region for block: B:5474:0x67ab  */
    /* JADX WARN: Removed duplicated region for block: B:5484:0x67e2  */
    /* JADX WARN: Removed duplicated region for block: B:551:0x06f8 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:5553:0x6874  */
    /* JADX WARN: Removed duplicated region for block: B:5554:0x687a  */
    /* JADX WARN: Removed duplicated region for block: B:5561:0x688c  */
    /* JADX WARN: Removed duplicated region for block: B:5588:0x68cf  */
    /* JADX WARN: Removed duplicated region for block: B:5593:0x68e1  */
    /* JADX WARN: Removed duplicated region for block: B:5599:0x68f4  */
    /* JADX WARN: Removed duplicated region for block: B:561:0x070e A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:562:0x0711  */
    /* JADX WARN: Removed duplicated region for block: B:5659:0x69a5  */
    /* JADX WARN: Removed duplicated region for block: B:5687:0x69ed  */
    /* JADX WARN: Removed duplicated region for block: B:5694:0x6a02  */
    /* JADX WARN: Removed duplicated region for block: B:5705:0x6a29  */
    /* JADX WARN: Removed duplicated region for block: B:5706:0x6a2c  */
    /* JADX WARN: Removed duplicated region for block: B:570:0x072c  */
    /* JADX WARN: Removed duplicated region for block: B:5711:0x6a42  */
    /* JADX WARN: Removed duplicated region for block: B:575:0x0738 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:5766:0x6be5  */
    /* JADX WARN: Removed duplicated region for block: B:5775:0x6c1e  */
    /* JADX WARN: Removed duplicated region for block: B:5776:0x6c1f A[Catch: Exception -> 0x6c84, TryCatch #26 {Exception -> 0x6c84, blocks: (B:5773:0x6c04, B:5801:0x6c81, B:5776:0x6c1f, B:5782:0x6c39, B:5785:0x6c42, B:5788:0x6c4b, B:5791:0x6c54, B:5794:0x6c61, B:5797:0x6c70, B:5779:0x6c2c), top: B:5863:0x6c04 }] */
    /* JADX WARN: Removed duplicated region for block: B:5793:0x6c60  */
    /* JADX WARN: Removed duplicated region for block: B:5794:0x6c61 A[Catch: Exception -> 0x6c84, TryCatch #26 {Exception -> 0x6c84, blocks: (B:5773:0x6c04, B:5801:0x6c81, B:5776:0x6c1f, B:5782:0x6c39, B:5785:0x6c42, B:5788:0x6c4b, B:5791:0x6c54, B:5794:0x6c61, B:5797:0x6c70, B:5779:0x6c2c), top: B:5863:0x6c04 }] */
    /* JADX WARN: Removed duplicated region for block: B:5804:0x6c9d  */
    /* JADX WARN: Removed duplicated region for block: B:5815:0x4a13 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:581:0x077c  */
    /* JADX WARN: Removed duplicated region for block: B:582:0x077e  */
    /* JADX WARN: Removed duplicated region for block: B:5830:0x4c1f A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:5836:0x4e60 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:5840:0x4bc6 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:5848:0x0ff0 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:5873:0x0226 A[SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:5875:0x0502 A[EDGE_INSN: B:5875:0x0502->B:430:0x0502 ?: BREAK  , SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:587:0x0789  */
    /* JADX WARN: Removed duplicated region for block: B:590:0x079a  */
    /* JADX WARN: Removed duplicated region for block: B:632:0x088d  */
    /* JADX WARN: Removed duplicated region for block: B:633:0x0890  */
    /* JADX WARN: Removed duplicated region for block: B:636:0x08a0  */
    /* JADX WARN: Removed duplicated region for block: B:641:0x08e3  */
    /* JADX WARN: Removed duplicated region for block: B:647:0x08ef  */
    /* JADX WARN: Removed duplicated region for block: B:650:0x08f9  */
    /* JADX WARN: Removed duplicated region for block: B:651:0x0900  */
    /* JADX WARN: Removed duplicated region for block: B:656:0x093f  */
    /* JADX WARN: Removed duplicated region for block: B:807:0x0b0a  */
    /* JADX WARN: Removed duplicated region for block: B:810:0x0b15  */
    /* JADX WARN: Removed duplicated region for block: B:835:0x0b4e  */
    /* JADX WARN: Removed duplicated region for block: B:843:0x0b81  */
    /* JADX WARN: Removed duplicated region for block: B:846:0x0b8a  */
    /* JADX WARN: Removed duplicated region for block: B:879:0x0c04  */
    /* JADX WARN: Removed duplicated region for block: B:890:0x0c1a  */
    /* JADX WARN: Removed duplicated region for block: B:897:0x0c2d  */
    /* JADX WARN: Removed duplicated region for block: B:89:0x00ee  */
    /* JADX WARN: Removed duplicated region for block: B:908:0x0c45  */
    /* JADX WARN: Removed duplicated region for block: B:90:0x00f0  */
    /* JADX WARN: Removed duplicated region for block: B:927:0x0c75  */
    /* JADX WARN: Removed duplicated region for block: B:933:0x0c80 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:93:0x00f4  */
    /* JADX WARN: Removed duplicated region for block: B:945:0x0c9c  */
    /* JADX WARN: Removed duplicated region for block: B:965:0x0cee A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:971:0x0cfe  */
    /* JADX WARN: Removed duplicated region for block: B:978:0x0d1b  */
    /* JADX WARN: Removed duplicated region for block: B:985:0x0d47  */
    /* JADX WARN: Removed duplicated region for block: B:994:0x0d63  */
    /* JADX WARN: Removed duplicated region for block: B:995:0x0d6b  */
    /* JADX WARN: Type inference failed for: r0v188, types: [org.telegram.ui.Components.RadialProgress2] */
    /* JADX WARN: Type inference failed for: r0v203, types: [org.telegram.ui.Components.RadialProgress2] */
    /* JADX WARN: Type inference failed for: r0v892, types: [java.lang.CharSequence] */
    /* JADX WARN: Type inference failed for: r10v46, types: [boolean, int] */
    /* JADX WARN: Type inference failed for: r10v517 */
    /* JADX WARN: Type inference failed for: r10v65 */
    /* JADX WARN: Type inference failed for: r13v0 */
    /* JADX WARN: Type inference failed for: r13v246 */
    /* JADX WARN: Type inference failed for: r13v247 */
    /* JADX WARN: Type inference failed for: r13v263 */
    /* JADX WARN: Type inference failed for: r13v264 */
    /* JADX WARN: Type inference failed for: r13v267 */
    /* JADX WARN: Type inference failed for: r13v268 */
    /* JADX WARN: Type inference failed for: r13v65 */
    /* JADX WARN: Type inference failed for: r13v66 */
    /* JADX WARN: Type inference failed for: r2v1142 */
    /* JADX WARN: Type inference failed for: r2v1154 */
    /* JADX WARN: Type inference failed for: r2v1155 */
    /* JADX WARN: Type inference failed for: r2v1162 */
    /* JADX WARN: Type inference failed for: r2v1171, types: [org.telegram.messenger.WebFile, org.telegram.ui.CachedStaticLayout, java.lang.String] */
    /* JADX WARN: Type inference failed for: r2v1205 */
    /* JADX WARN: Type inference failed for: r2v1206 */
    /* JADX WARN: Type inference failed for: r2v1207 */
    /* JADX WARN: Type inference failed for: r2v167 */
    /* JADX WARN: Type inference failed for: r2v168, types: [org.telegram.tgnet.TLRPC$Document, java.lang.Object, org.telegram.tgnet.TLRPC$PhotoSize] */
    /* JADX WARN: Type inference failed for: r2v17 */
    /* JADX WARN: Type inference failed for: r2v172 */
    /* JADX WARN: Type inference failed for: r2v173 */
    /* JADX WARN: Type inference failed for: r2v18, types: [boolean, int] */
    /* JADX WARN: Type inference failed for: r2v199 */
    /* JADX WARN: Type inference failed for: r2v26 */
    /* JADX WARN: Type inference failed for: r2v27, types: [boolean, int] */
    /* JADX WARN: Type inference failed for: r2v29 */
    /* JADX WARN: Type inference failed for: r2v30, types: [boolean, int] */
    /* JADX WARN: Type inference failed for: r3v17 */
    /* JADX WARN: Type inference failed for: r3v18, types: [boolean, int] */
    /* JADX WARN: Type inference failed for: r3v326, types: [org.telegram.tgnet.TLRPC$InputStickerSet] */
    /* JADX WARN: Type inference failed for: r3v836 */
    /* JADX WARN: Type inference failed for: r70v1 */
    /* JADX WARN: Type inference failed for: r70v3 */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void setMessageContent(MessageObject messageObject, MessageObject.GroupedMessages groupedMessages, boolean z, boolean z2) {
        boolean z3;
        boolean z4;
        int i;
        boolean z5;
        boolean z6;
        int i2;
        int i3;
        float f;
        StickerSetLinkIcon stickerSetLinkIcon;
        MessageObject.GroupedMessages groupedMessages2;
        MessageObject.GroupedMessagePosition position;
        MessageObject.GroupedMessages groupedMessages3;
        ?? r2;
        boolean needDrawAvatar;
        ?? r22;
        boolean z7;
        ?? r23;
        ButtonBounce buttonBounce;
        ?? r3;
        ExpiredStoryView expiredStoryView;
        boolean z8;
        MessageObject.GroupedMessages groupedMessages4;
        boolean isLinkedToChat;
        CachedStaticLayout cachedStaticLayout;
        int i4;
        MessageObject messageObject2;
        int i5;
        int i6;
        float f2;
        int i7;
        boolean z9;
        int i8;
        int i9;
        int minTabletSide;
        int dp;
        int i10;
        MessageObject.TextLayoutBlocks textLayoutBlocks;
        int i11;
        int i12;
        MessageObject.TextLayoutBlocks textLayoutBlocks2;
        Float valueOf;
        int i13;
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        MessageObject messageObject3;
        float f3;
        int i14;
        int i15;
        boolean z10;
        int i16;
        int dp2;
        StringBuilder sb;
        StringBuilder sb2;
        HashMap hashMap;
        int i17;
        BotButton botButton;
        HashMap hashMap2;
        int i18;
        CharSequence string;
        Uri parse;
        boolean z11;
        String str;
        int minTabletSide2;
        boolean z12;
        MessageObject.GroupedMessagePosition groupedMessagePosition2;
        ?? r24;
        StickerSetLinkIcon stickerSetLinkIcon2;
        ?? r25;
        int dp3;
        int i19;
        int i20;
        int i21;
        int i22;
        MessageObject messageObject4;
        ArrayList<BotButton> arrayList;
        MessageObject messageObject5;
        String string2;
        boolean z13;
        CharSequence charSequence;
        String replace;
        ReactionsLayoutInBubble reactionsLayoutInBubble;
        int dp4;
        ReactionsLayoutInBubble reactionsLayoutInBubble2;
        MessageObject.GroupedMessagePosition groupedMessagePosition3;
        int min;
        MessageObject.GroupedMessagePosition groupedMessagePosition4;
        int min2;
        MessageObject.GroupedMessages groupedMessages5;
        boolean z14;
        boolean z15;
        String string3;
        ArrayList arrayList2;
        boolean z16;
        byte[] bArr;
        String string4;
        PollButton pollButton;
        int i23;
        int i24;
        byte[] bArr2;
        CharSequence ellipsize;
        int i25;
        MessageObject messageObject6;
        int i26;
        float f4;
        int i27;
        int dp5;
        int dp6;
        int i28;
        int i29;
        int i30;
        int i31;
        int i32;
        CachedStaticLayout cachedStaticLayout2;
        int dp7;
        boolean z17;
        SpoilerEffect2 spoilerEffect2;
        MessageObject.GroupedMessagePosition groupedMessagePosition5;
        int i33;
        int i34;
        int i35;
        int dp8;
        SpoilerEffect2 spoilerEffect22;
        MessageObject.GroupedMessagePosition groupedMessagePosition6;
        int i36;
        int dp9;
        TLRPC$Message tLRPC$Message;
        int i37;
        int i38;
        int i39;
        int i40;
        Drawable drawable;
        int i41;
        int i42;
        ReactionsLayoutInBubble reactionsLayoutInBubble3;
        int i43;
        int i44;
        int i45;
        int i46;
        float minTabletSide3;
        float f5;
        int dp10;
        MessageObject messageObject7;
        CachedStaticLayout[] cachedStaticLayoutArr;
        int i47;
        int i48;
        int i49;
        float minTabletSide4;
        float f6;
        int i50;
        int i51;
        Drawable drawable2;
        String str2;
        SvgHelper.SvgDrawable svgDrawable;
        MessageObject messageObject8;
        int i52;
        int i53;
        MessageObject messageObject9;
        int i54;
        int i55;
        boolean z18;
        String format;
        int i56;
        boolean z19;
        int i57;
        boolean z20;
        BitmapDrawable bitmapDrawable;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$PhotoSize tLRPC$PhotoSize2;
        TLRPC$Document document;
        int i58;
        int i59;
        MessageObject.GroupedMessagePosition groupedMessagePosition7;
        int i60;
        int dp11;
        MessageObject.GroupedMessagePosition groupedMessagePosition8;
        MessageObject.GroupedMessagePosition groupedMessagePosition9;
        float[] fArr;
        int dp12;
        int i61;
        int i62;
        int i63;
        int dp13;
        int i64;
        int i65;
        int i66;
        MessageObject.GroupedMessagePosition groupedMessagePosition10;
        boolean z21;
        int i67;
        int i68;
        int i69;
        double ceil;
        CharSequence charSequence2;
        int i70;
        int i71;
        boolean z22;
        int i72;
        boolean z23;
        int i73;
        int i74;
        int i75;
        MessageObject.TextLayoutBlocks textLayoutBlocks3;
        MessageObject.GroupedMessagePosition groupedMessagePosition11;
        ReactionsLayoutInBubble reactionsLayoutInBubble4;
        int i76;
        MessageObject.TextLayoutBlocks textLayoutBlocks4;
        int dp14;
        MessageObject messageObject10;
        int measureText;
        ImageLocation forObject;
        TLRPC$PhotoSize tLRPC$PhotoSize3;
        int i77;
        TLRPC$PhotoSize tLRPC$PhotoSize4;
        boolean z24;
        boolean z25;
        char c;
        ArrayList<TLRPC$PhotoSize> arrayList3;
        int i78;
        int i79;
        int minTabletSide5;
        boolean z26;
        int minTabletSide6;
        TLRPC$PhotoSize tLRPC$PhotoSize5;
        TLRPC$PhotoSize tLRPC$PhotoSize6;
        int i80;
        int i81;
        int i82;
        int i83;
        int i84;
        int minTabletSide7;
        int i85;
        MessageObject.GroupedMessagePosition groupedMessagePosition12;
        int minTabletSide8;
        int dp15;
        int i86;
        TLRPC$ThemeSettings tLRPC$ThemeSettings;
        TLRPC$Document tLRPC$Document;
        boolean z27;
        TL_stories$StoryItem tL_stories$StoryItem;
        boolean z28;
        TL_stories$StoryItem tL_stories$StoryItem2;
        TLRPC$TL_webPageAttributeStickerSet tLRPC$TL_webPageAttributeStickerSet;
        ArrayList<TLRPC$Document> arrayList4;
        boolean z29;
        ArrayList<TLRPC$Document> arrayList5;
        int i87;
        boolean z30;
        TL_stories$StoryItem tL_stories$StoryItem3;
        TLRPC$Document tLRPC$Document2;
        int i88;
        MessageObject messageObject11;
        MessageTopicButton messageTopicButton;
        int max;
        MessageObject messageObject12;
        int maxMessageTextWidth;
        int i89;
        boolean z31;
        String string5;
        String string6;
        String str3;
        TLRPC$Photo tLRPC$Photo;
        TL_stories$StoryItem tL_stories$StoryItem4;
        ArrayList<TLRPC$Document> arrayList6;
        String str4;
        CharSequence charSequence3;
        String str5;
        WebFile webFile;
        String str6;
        int i90;
        TLRPC$Document tLRPC$Document3;
        int i91;
        boolean z32;
        CharSequence charSequence4;
        CharSequence charSequence5;
        String string7;
        int i92;
        String string8;
        String str7;
        int i93;
        int i94;
        MessageObject messageObject13;
        int max2;
        WebFile webFile2;
        String str8;
        TLRPC$Document tLRPC$Document4;
        TLRPC$Photo tLRPC$Photo2;
        int i95;
        int i96;
        WebFile webFile3;
        int lineCount;
        int i97;
        CachedStaticLayout cachedStaticLayout3;
        int i98;
        int i99;
        int width;
        int i100;
        Exception exc;
        int i101;
        boolean z33;
        int i102;
        int i103;
        String str9;
        int i104;
        int i105;
        MessageObject messageObject14;
        boolean z34;
        CharSequence charSequence6;
        int i106;
        int i107;
        int i108;
        int i109;
        boolean z35;
        int i110;
        int i111;
        String str10;
        TLRPC$Photo tLRPC$Photo3;
        TLRPC$Document tLRPC$Document5;
        WebFile webFile4;
        TL_stories$StoryItem tL_stories$StoryItem5;
        TLRPC$MessageMedia tLRPC$MessageMedia;
        TLRPC$Document tLRPC$Document6;
        TLRPC$PhotoSize tLRPC$PhotoSize7;
        int i112;
        int i113;
        int i114;
        TLRPC$PhotoSize tLRPC$PhotoSize8;
        int i115;
        int i116;
        int i117;
        String str11;
        boolean z36;
        long j;
        TLRPC$User user;
        String str12;
        boolean canDownloadMedia;
        boolean z37;
        boolean z38;
        int i118;
        int i119;
        int i120;
        int i121;
        int i122;
        int i123;
        int i124;
        int minTabletSide9;
        int i125;
        String upperCase;
        int i126;
        int max3;
        int i127;
        int i128;
        float f7;
        TLRPC$PhotoSize tLRPC$PhotoSize9;
        boolean z39;
        BitmapDrawable bitmapDrawable2;
        boolean z40;
        WebFile webFile5;
        int i129;
        CharSequence charSequence7;
        int i130;
        TL_stories$StoryItem tL_stories$StoryItem6;
        TLRPC$User tLRPC$User;
        int dp16;
        CharSequence createExpiredStoryString;
        String str13;
        TLRPC$Document tLRPC$Document7;
        TLRPC$Document tLRPC$Document8;
        int i131;
        boolean z41;
        int i132;
        TLRPC$MessageMedia tLRPC$MessageMedia2;
        TLRPC$Document tLRPC$Document9;
        TLRPC$MessageMedia tLRPC$MessageMedia3;
        TLRPC$MessageMedia tLRPC$MessageMedia4;
        int i133;
        String str14;
        int i134;
        String str15;
        TLRPC$Document themeDocument;
        TLRPC$Photo tLRPC$Photo4;
        int max4;
        boolean z42;
        TLRPC$MessageMedia media;
        int i135;
        int i136;
        int minTabletSide10;
        int dp17;
        int measuredWidth;
        int minTabletSide11;
        int dp18;
        TLRPC$Peer tLRPC$Peer;
        int repliesCount;
        String string9;
        int i137;
        AnimatedNumberLayout animatedNumberLayout;
        boolean z43;
        AnimatedNumberLayout animatedNumberLayout2;
        String formatPluralString;
        TLRPC$User user2;
        TLRPC$Chat tLRPC$Chat;
        int i138;
        int i139;
        ArrayList<TLRPC$Peer> arrayList7;
        ArrayList<MessageObject.TextLayoutBlock> arrayList8;
        MessageObject.GroupedMessagePosition groupedMessagePosition13;
        TLRPC$TL_messageReactions tLRPC$TL_messageReactions;
        int i140;
        Drawable[] drawableArr;
        TLRPC$Message tLRPC$Message2;
        MessageObject.GroupedMessagePosition groupedMessagePosition14;
        TLRPC$Message tLRPC$Message3;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        ChatMessageCellDelegate chatMessageCellDelegate;
        MessageObject.GroupedMessagePosition groupedMessagePosition15;
        MessageObject.GroupedMessagePosition groupedMessagePosition16;
        TranscribeButton transcribeButton;
        boolean z44;
        boolean z45;
        boolean z46;
        ChatMessageCellDelegate chatMessageCellDelegate2;
        MessageObject messageObject15;
        int i141;
        int i142;
        LoadingDrawable loadingDrawable;
        boolean z47;
        boolean z48;
        TLRPC$Message tLRPC$Message4;
        ArrayList<TLRPC$TL_pollAnswerVoters> arrayList9;
        TLRPC$Poll tLRPC$Poll;
        int i143;
        TLRPC$Poll tLRPC$Poll2;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll;
        TLRPC$PollResults tLRPC$PollResults;
        int size;
        int i144;
        TLRPC$TL_pollAnswerVoters tLRPC$TL_pollAnswerVoters;
        int i145;
        String str16;
        MessageObject.GroupedMessagePosition groupedMessagePosition17;
        float[] fArr2;
        MessageObject messageObject16;
        int i146;
        ChatMessageCell chatMessageCell = this;
        MessageObject messageObject17 = messageObject;
        if (messageObject.checkLayout() || (chatMessageCell.currentPosition != null && chatMessageCell.lastHeight != AndroidUtilities.displaySize.y)) {
            chatMessageCell.currentMessageObject = null;
        }
        messageObject17.isOutOwnerCached = null;
        boolean z49 = 1;
        z49 = 1;
        z49 = 1;
        boolean z50 = chatMessageCell.lastWidth != getParentWidth();
        chatMessageCell.lastHeight = AndroidUtilities.displaySize.y;
        chatMessageCell.lastWidth = getParentWidth();
        chatMessageCell.isRoundVideo = messageObject.isRoundVideo();
        chatMessageCell.mediaSpoilerRevealProgress = 0.0f;
        TLRPC$Message tLRPC$Message5 = !messageObject.hasValidReplyMessageObject() ? null : messageObject17.replyMessageObject.messageOwner;
        MessageObject messageObject18 = chatMessageCell.currentMessageObject;
        boolean z51 = messageObject18 == null || messageObject18.getId() != messageObject.getId();
        if (chatMessageCell.currentMessageObject == messageObject17 && !messageObject17.forceUpdate) {
            if (chatMessageCell.isRoundVideo) {
            }
            z3 = false;
            MessageObject messageObject19 = chatMessageCell.currentMessageObject;
            boolean z52 = (messageObject19 != null && messageObject19.getId() == messageObject.getId() && chatMessageCell.lastSendState == 3 && messageObject.isSent()) || !((chatMessageCell.currentMessageObject != messageObject17 || (!isUserDataChanged() && !chatMessageCell.photoNotSet)) && chatMessageCell.lastPostAuthor == messageObject17.messageOwner.post_author && chatMessageCell.wasPinned == chatMessageCell.isPinned && tLRPC$Message5 == chatMessageCell.lastReplyMessage && messageObject17.translated == chatMessageCell.lastTranslated);
            z4 = groupedMessages != chatMessageCell.currentMessagesGroup;
            if (!z51 && (messageObject16 = chatMessageCell.currentMessageObject) != null) {
                i146 = messageObject17.stableId;
                messageObject17.copyStableParams(messageObject16);
                if (chatMessageCell.currentMessageObject.isSavedFiltered && messageObject17.isSavedFiltered) {
                    messageObject17.stableId = i146;
                }
            }
            chatMessageCell.accessibilityText = null;
            i = 4;
            z5 = (chatMessageCell.drawCommentButton || chatMessageCell.useTranscribeButton || (chatMessageCell.drawSideButton == 3 && (((!chatMessageCell.hasDiscussion || !messageObject17.isLinkedToChat(chatMessageCell.linkedChatId)) && !chatMessageCell.isRepliesChat) || ((groupedMessagePosition17 = chatMessageCell.currentPosition) != null && (((fArr2 = groupedMessagePosition17.siblingHeights) != null || (groupedMessagePosition17.flags & 8) == 0) && (fArr2 == null || (groupedMessagePosition17.flags & 4) != 0)))))) ? true : z52;
            if (!z3 && messageObject.isDice()) {
                chatMessageCell.setCurrentDiceValue(chatMessageCell.isUpdating);
            }
            if (!z3 && messageObject.isPoll()) {
                if (MessageObject.getMedia(messageObject17.messageOwner) instanceof TLRPC$TL_messageMediaPoll) {
                    tLRPC$Poll = null;
                    arrayList9 = null;
                    i143 = 0;
                } else {
                    TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll2 = (TLRPC$TL_messageMediaPoll) MessageObject.getMedia(messageObject17.messageOwner);
                    TLRPC$PollResults tLRPC$PollResults2 = tLRPC$TL_messageMediaPoll2.results;
                    arrayList9 = tLRPC$PollResults2.results;
                    tLRPC$Poll = tLRPC$TL_messageMediaPoll2.poll;
                    i143 = tLRPC$PollResults2.total_voters;
                }
                z6 = (arrayList9 == null || chatMessageCell.lastPollResults == null || i143 == chatMessageCell.lastPollResultsVoters) ? false : true;
                if (!z6 && arrayList9 != chatMessageCell.lastPollResults) {
                    z6 = true;
                }
                tLRPC$Poll2 = chatMessageCell.lastPoll;
                if (tLRPC$Poll2 != tLRPC$Poll && tLRPC$Poll2.closed != tLRPC$Poll.closed) {
                    if (!chatMessageCell.pollVoted) {
                        chatMessageCell.pollVoteInProgress = true;
                        chatMessageCell.vibrateOnPollVote = false;
                    }
                    z6 = true;
                }
                chatMessageCell.animatePollAvatars = false;
                if (z6 && chatMessageCell.attachedToWindow) {
                    chatMessageCell.pollAnimationProgressTime = 0.0f;
                    if (chatMessageCell.pollVoted && !messageObject.isVoted()) {
                        chatMessageCell.pollUnvoteInProgress = true;
                    }
                    int i147 = chatMessageCell.lastPollResultsVoters;
                    chatMessageCell.animatePollAvatars = i147 == 0 || (i147 != 0 && i143 == 0);
                }
                if (!z51 && tLRPC$Poll != null && chatMessageCell.lastPoll.quiz && tLRPC$Poll.quiz && chatMessageCell.currentMessageObject != null && !chatMessageCell.pollVoted && messageObject.isVoted() && (tLRPC$PollResults = (tLRPC$TL_messageMediaPoll = (TLRPC$TL_messageMediaPoll) MessageObject.getMedia(messageObject17.messageOwner)).results) != null && !tLRPC$PollResults.results.isEmpty()) {
                    size = tLRPC$TL_messageMediaPoll.results.results.size();
                    i144 = 0;
                    while (true) {
                        if (i144 < size) {
                            tLRPC$TL_pollAnswerVoters = null;
                            break;
                        }
                        tLRPC$TL_pollAnswerVoters = tLRPC$TL_messageMediaPoll.results.results.get(i144);
                        if (tLRPC$TL_pollAnswerVoters.chosen) {
                            break;
                        }
                        i144++;
                    }
                    if (tLRPC$TL_pollAnswerVoters != null) {
                        int i148 = i144 + 500;
                        if (tLRPC$TL_pollAnswerVoters.correct) {
                            i145 = R.string.AccDescrQuizCorrectAnswer;
                            str16 = "AccDescrQuizCorrectAnswer";
                        } else {
                            i145 = R.string.AccDescrQuizIncorrectAnswer;
                            str16 = "AccDescrQuizIncorrectAnswer";
                        }
                        chatMessageCell.sendAccessibilityEventForVirtualView(i148, 4, LocaleController.getString(str16, i145));
                    }
                }
            } else {
                z6 = false;
            }
            if (!z4 && groupedMessages != null) {
                z4 = (groupedMessages.messages.size() > 1 ? null : chatMessageCell.currentMessagesGroup.getPosition(chatMessageCell.currentMessageObject)) == chatMessageCell.currentPosition;
            }
            i2 = 5;
            i3 = -1;
            f = 1.0f;
            int i149 = 2;
            if (z3 || z5 || z4 || z6 || ((z50 && messageObject.isPoll()) || isPhotoDataChanged(messageObject) || chatMessageCell.pinnedBottom != z || chatMessageCell.pinnedTop != z2)) {
                chatMessageCell.updatedContent = true;
                stickerSetLinkIcon = chatMessageCell.stickerSetIcons;
                if (stickerSetLinkIcon != null) {
                    stickerSetLinkIcon.readyToDie();
                }
                chatMessageCell.wasPinned = chatMessageCell.isPinned;
                chatMessageCell.pinnedBottom = z;
                chatMessageCell.pinnedTop = z2;
                chatMessageCell.currentMessageObject = messageObject17;
                chatMessageCell.currentMessagesGroup = groupedMessages;
                chatMessageCell.lastTime = -2.0d;
                chatMessageCell.lastPostAuthor = messageObject17.messageOwner.post_author;
                if (!z51 || z4) {
                    chatMessageCell.isHighlightedAnimated = false;
                    chatMessageCell.wasTranscriptionOpen = false;
                    if (chatMessageCell.highlightedQuote) {
                        resetUrlPaths();
                    }
                    chatMessageCell.highlightedQuote = false;
                }
                chatMessageCell.widthBeforeNewTimeLine = -1;
                groupedMessages2 = chatMessageCell.currentMessagesGroup;
                if (groupedMessages2 != null && groupedMessages2.posArray.size() > 1) {
                    position = chatMessageCell.currentMessagesGroup.getPosition(chatMessageCell.currentMessageObject);
                    chatMessageCell.currentPosition = position;
                    if (position == null) {
                        chatMessageCell.currentMessagesGroup = null;
                    }
                } else {
                    chatMessageCell.currentMessagesGroup = null;
                    chatMessageCell.currentPosition = null;
                }
                groupedMessages3 = chatMessageCell.currentMessagesGroup;
                if (groupedMessages3 == null || groupedMessages3.isDocuments) {
                    chatMessageCell.drawPinnedTop = chatMessageCell.pinnedTop;
                    chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom;
                } else {
                    chatMessageCell.drawPinnedTop = chatMessageCell.pinnedTop && ((groupedMessagePosition16 = chatMessageCell.currentPosition) == null || (groupedMessagePosition16.flags & 4) != 0);
                    chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom && ((groupedMessagePosition15 = chatMessageCell.currentPosition) == null || (groupedMessagePosition15.flags & 8) != 0);
                }
                boolean z53 = chatMessageCell.isPlayingRound;
                chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
                chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
                chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
                chatMessageCell.photoImage.setGradientBitmap(null);
                chatMessageCell.photoImage.clearDecorators();
                chatMessageCell.photoImage.setInvalidateAll(false);
                chatMessageCell.linkPreviewY = 0;
                chatMessageCell.lastTranslated = messageObject17.translated;
                TLRPC$Message tLRPC$Message6 = messageObject17.messageOwner;
                chatMessageCell.lastSendState = tLRPC$Message6.send_state;
                chatMessageCell.lastDeleteDate = tLRPC$Message6.destroyTime;
                chatMessageCell.lastViewsCount = tLRPC$Message6.views;
                chatMessageCell.lastRepliesCount = getRepliesCount();
                if (z51) {
                    r2 = 0;
                    chatMessageCell.isPressed = false;
                    chatMessageCell.isCheckPressed = true;
                } else {
                    r2 = 0;
                }
                chatMessageCell.gamePreviewPressed = r2;
                chatMessageCell.sideButtonPressed = r2;
                chatMessageCell.pressedSideButton = r2;
                chatMessageCell.hasNewLineForTime = r2;
                chatMessageCell.flipImage = r2;
                chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
                chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                needDrawAvatar = needDrawAvatar();
                if (messageObject17.customAvatarDrawable == null && !messageObject17.forceAvatar) {
                    z7 = needDrawAvatar;
                    r22 = 0;
                } else {
                    chatMessageCell.isAvatarVisible = true;
                    r22 = 0;
                    z7 = true;
                }
                chatMessageCell.wasLayout = r22;
                chatMessageCell.groupPhotoInvisible = r22;
                chatMessageCell.animatingDrawVideoImageButton = r22;
                chatMessageCell.drawVideoSize = r22;
                chatMessageCell.canStreamVideo = r22;
                chatMessageCell.animatingNoSound = r22;
                if (!messageObject.isSponsored()) {
                    r23 = 0;
                    r23 = 0;
                    chatMessageCell.drawSideButton = 4;
                    if (messageObject17.sponsoredCanReport) {
                        chatMessageCell.drawSideButton2 = 5;
                    }
                } else if (MessagesController.getInstance(chatMessageCell.currentAccount).isChatNoForwards(messageObject.getChatId()) || ((tLRPC$Message2 = messageObject17.messageOwner) != null && tLRPC$Message2.noforwards)) {
                    r23 = 0;
                    chatMessageCell.drawSideButton = 0;
                } else {
                    int i150 = (!chatMessageCell.isRepliesChat && checkNeedDrawShareButton(messageObject)) ? 1 : 0;
                    chatMessageCell.drawSideButton = i150;
                    if (chatMessageCell.isPinnedChat || (i150 == 1 && ((messageObject17.messageOwner.fwd_from != null && !messageObject.isOutOwner() && messageObject17.messageOwner.fwd_from.saved_from_peer != null && messageObject.getDialogId() == UserConfig.getInstance(chatMessageCell.currentAccount).getClientUserId()) || messageObject17.isSaved))) {
                        chatMessageCell.drawSideButton = 2;
                    }
                    r23 = 0;
                }
                chatMessageCell.hasReplyQuote = r23;
                chatMessageCell.isReplyQuote = r23;
                chatMessageCell.replyNameLayout = null;
                chatMessageCell.adminLayout = null;
                chatMessageCell.boostCounterBounds = null;
                chatMessageCell.boostCounterSpan = null;
                chatMessageCell.checkOnlyButtonPressed = r23;
                chatMessageCell.replyTextLayout = null;
                AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                chatMessageCell.lastReplyMessage = null;
                chatMessageCell.hasEmbed = r23;
                chatMessageCell.autoPlayingMedia = r23;
                chatMessageCell.replyNameWidth = r23;
                chatMessageCell.replyTextWidth = r23;
                chatMessageCell.replyTextHeight = r23;
                chatMessageCell.viaWidth = r23;
                chatMessageCell.viaNameWidth = r23;
                chatMessageCell.viaOnly = r23;
                chatMessageCell.addedCaptionHeight = r23;
                chatMessageCell.currentReplyPhoto = null;
                chatMessageCell.currentUser = null;
                chatMessageCell.currentChat = null;
                chatMessageCell.currentViaBotUser = null;
                chatMessageCell.instantViewLayout = null;
                chatMessageCell.drawNameLayout = r23;
                chatMessageCell.linkPreviewAbove = r23;
                chatMessageCell.isSmallImage = r23;
                chatMessageCell.lastLoadingSizeTotal = 0L;
                if (chatMessageCell.scheduledInvalidate) {
                    AndroidUtilities.cancelRunOnUIThread(chatMessageCell.invalidateRunnable);
                    chatMessageCell.scheduledInvalidate = r23;
                }
                chatMessageCell.links.clear();
                chatMessageCell.pressedLink = null;
                chatMessageCell.pressedEmoji = null;
                chatMessageCell.pressedLinkType = -1;
                messageObject17.forceUpdate = r23;
                chatMessageCell.drawPhotoImage = r23;
                chatMessageCell.drawMediaCheckBox = r23;
                chatMessageCell.hasLinkPreview = r23;
                chatMessageCell.hasOldCaptionPreview = r23;
                chatMessageCell.hasGamePreview = r23;
                chatMessageCell.hasInvoicePreview = r23;
                chatMessageCell.commentButtonPressed = r23;
                chatMessageCell.instantPressed = r23;
                chatMessageCell.gradientDrawable = null;
                chatMessageCell.setInstantButtonPressed(r23);
                if (!z6 && Build.VERSION.SDK_INT >= 21) {
                    i140 = 0;
                    while (true) {
                        drawableArr = chatMessageCell.selectorDrawable;
                        if (i140 < drawableArr.length) {
                            break;
                        }
                        boolean z54 = z5;
                        if (drawableArr[i140] != null) {
                            drawableArr[i140].setVisible(false, false);
                            chatMessageCell.selectorDrawable[i140].setState(StateSet.NOTHING);
                        }
                        i140++;
                        messageObject17 = messageObject;
                        z5 = z54;
                        i = 4;
                        f = 1.0f;
                        i3 = -1;
                        z49 = 1;
                        i2 = 5;
                    }
                }
                resetContactButtonsPressedState();
                buttonBounce = chatMessageCell.titleLabelBounce;
                if (buttonBounce != null) {
                    r3 = 0;
                } else {
                    r3 = 0;
                    buttonBounce.setPressed(false);
                }
                chatMessageCell.drawnContactButtonsFlag = r3;
                chatMessageCell.drawContact = r3;
                chatMessageCell.drawContactView = r3;
                chatMessageCell.drawContactSendMessage = r3;
                chatMessageCell.drawContactAdd = r3;
                chatMessageCell.spoilerPressed = null;
                chatMessageCell.isSpoilerRevealing = r3;
                chatMessageCell.linkPreviewPressed = r3;
                chatMessageCell.buttonPressed = r3;
                chatMessageCell.additionalTimeOffsetY = r3;
                chatMessageCell.miniButtonPressed = r3;
                chatMessageCell.pressedBotButton = i3;
                chatMessageCell.pressedVoteButton = i3;
                chatMessageCell.pollHintPressed = r3;
                chatMessageCell.psaHintPressed = r3;
                chatMessageCell.linkPreviewHeight = r3;
                chatMessageCell.mediaOffsetY = r3;
                chatMessageCell.documentAttachType = r3;
                chatMessageCell.documentAttach = null;
                chatMessageCell.descriptionLayout = null;
                chatMessageCell.titleLayout = null;
                chatMessageCell.videoInfoLayout = null;
                chatMessageCell.photosCountLayout = null;
                chatMessageCell.siteNameLayout = null;
                chatMessageCell.titleLabelLayout = null;
                chatMessageCell.authorLayout = null;
                chatMessageCell.captionFullWidth = r3;
                chatMessageCell.captionLayout = null;
                chatMessageCell.captionWidth = r3;
                chatMessageCell.captionHeight = r3;
                chatMessageCell.captionOffsetX = r3;
                chatMessageCell.currentCaption = null;
                chatMessageCell.captionLayout = null;
                chatMessageCell.docTitleLayout = null;
                chatMessageCell.drawImageButton = r3;
                chatMessageCell.drawVideoImageButton = r3;
                chatMessageCell.currentPhotoLocation = null;
                chatMessageCell.currentPhotoThumbLocation = null;
                chatMessageCell.currentPhotoObject = null;
                chatMessageCell.photoParentObject = null;
                chatMessageCell.currentPhotoObjectThumb = null;
                chatMessageCell.currentPhotoObjectThumbStripped = null;
                if (!z3 || z51 || z5) {
                    chatMessageCell.currentPhotoFilter = null;
                }
                chatMessageCell.buttonState = i3;
                chatMessageCell.miniButtonState = i3;
                chatMessageCell.hasMiniProgress = 0;
                if (chatMessageCell.addedForTest && chatMessageCell.currentUrl != null && chatMessageCell.currentWebFile != null) {
                    ImageLoader.getInstance().removeTestWebFile(chatMessageCell.currentUrl);
                }
                chatMessageCell.addedForTest = false;
                chatMessageCell.photoNotSet = false;
                chatMessageCell.drawBackground = z49;
                chatMessageCell.drawName = false;
                chatMessageCell.useSeekBarWaveform = false;
                chatMessageCell.useTranscribeButton = false;
                chatMessageCell.drawInstantView = false;
                chatMessageCell.drawInstantViewType = 0;
                chatMessageCell.instantViewButtonText = null;
                chatMessageCell.drawForwardedName = false;
                chatMessageCell.drawCommentButton = false;
                chatMessageCell.photoImage.setSideClip(0.0f);
                chatMessageCell.photoImage.setAspectFit(false);
                chatMessageCell.gradientShader = null;
                chatMessageCell.motionBackgroundDrawable = null;
                chatMessageCell.imageBackgroundColor = 0;
                chatMessageCell.imageBackgroundGradientColor1 = 0;
                chatMessageCell.imageBackgroundGradientColor2 = 0;
                chatMessageCell.imageBackgroundIntensity = 0.0f;
                chatMessageCell.imageBackgroundGradientColor3 = 0;
                chatMessageCell.imageBackgroundGradientRotation = 45;
                chatMessageCell.imageBackgroundSideColor = 0;
                chatMessageCell.mediaBackground = false;
                expiredStoryView = chatMessageCell.expiredStoryView;
                if (expiredStoryView != null) {
                    expiredStoryView.visible = false;
                }
                chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2 = messageObject17.messageOwner.fwd_from;
                z8 = (tLRPC$MessageFwdHeader2 == null || TextUtils.isEmpty(tLRPC$MessageFwdHeader2.psa_type)) ? false : true;
                chatMessageCell.hasPsaHint = z8;
                if (z8) {
                    chatMessageCell.createSelectorDrawable(0);
                }
                chatMessageCell.photoImage.setAlpha(f);
                if ((!z3 || z5) && !chatMessageCell.pollUnvoteInProgress) {
                    chatMessageCell.pollButtons.clear();
                }
                chatMessageCell.availableTimeWidth = 0;
                chatMessageCell.photoImage.setForceLoading(false);
                chatMessageCell.photoImage.setNeedsQualityThumb(false);
                chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                chatMessageCell.photoImage.setColorFilter(null);
                chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                if (!z51 || messageObject17.reactionsChanged || z53 != chatMessageCell.isPlayingRound) {
                    messageObject17.reactionsChanged = false;
                    TLRPC$Message tLRPC$Message7 = messageObject17.messageOwner;
                    boolean z55 = (tLRPC$Message7 == null || (tLRPC$TL_messageReactions = tLRPC$Message7.reactions) == null || !tLRPC$TL_messageReactions.reactions_as_tags) ? false : true;
                    if (messageObject.shouldDrawReactions() && !messageObject.isExpiredStory() && ((groupedMessagePosition13 = chatMessageCell.currentPosition) == null || (groupedMessagePosition13.flags & 8) != 0)) {
                        boolean z56 = messageObject.shouldDrawReactionsInLayout();
                        if (chatMessageCell.currentPosition == null) {
                            MessageObject findPrimaryMessageObject = groupedMessages.findPrimaryMessageObject();
                            if (!z55) {
                                TLRPC$TL_messageReactions tLRPC$TL_messageReactions2 = findPrimaryMessageObject.messageOwner.reactions;
                                z55 = tLRPC$TL_messageReactions2 != null && tLRPC$TL_messageReactions2.reactions_as_tags;
                            }
                            chatMessageCell.reactionsLayoutInBubble.setMessage(groupedMessages.findPrimaryMessageObject(), !messageObject.shouldDrawReactionsInLayout(), z55, chatMessageCell.resourcesProvider);
                        } else {
                            chatMessageCell.reactionsLayoutInBubble.setMessage(messageObject17, z56, z55, chatMessageCell.resourcesProvider);
                        }
                    } else {
                        chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                    }
                }
                if (z3) {
                    chatMessageCell.firstVisibleBlockNum = 0;
                    chatMessageCell.lastVisibleBlockNum = 0;
                    MessageObject messageObject20 = chatMessageCell.currentMessageObject;
                    if (messageObject20 != null && (arrayList8 = messageObject20.textLayoutBlocks) != null && arrayList8.size() > z49) {
                        chatMessageCell.needNewVisiblePart = z49;
                    }
                }
                groupedMessages4 = chatMessageCell.currentMessagesGroup;
                if (groupedMessages4 != null && groupedMessages4.messages.size() > 0) {
                    isLinkedToChat = chatMessageCell.currentMessagesGroup.messages.get(0).isLinkedToChat(chatMessageCell.linkedChatId);
                } else {
                    isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                }
                if ((chatMessageCell.hasDiscussion && isLinkedToChat) || (chatMessageCell.isRepliesChat && !messageObject.isOutOwner())) {
                    MessageObject.GroupedMessagePosition groupedMessagePosition18 = chatMessageCell.currentPosition;
                    cachedStaticLayout = (groupedMessagePosition18 == null && (groupedMessagePosition18.flags & 8) == 0) ? null : null;
                    repliesCount = getRepliesCount();
                    if (!messageObject.shouldDrawWithoutBackground() && !messageObject.isAnimatedEmoji()) {
                        chatMessageCell.drawCommentButton = z49;
                        if (chatMessageCell.commentProgress == null) {
                            chatMessageCell.commentProgress = new InfiniteProgress(AndroidUtilities.dp(7.0f));
                        }
                        if (!chatMessageCell.isRepliesChat) {
                            i4 = 2;
                            string9 = LocaleController.getString("ViewInChat", R.string.ViewInChat);
                        } else {
                            if (LocaleController.isRTL) {
                                formatPluralString = repliesCount != 0 ? LocaleController.formatPluralString("CommentsCount", repliesCount, new Object[0]) : LocaleController.getString("LeaveAComment", R.string.LeaveAComment);
                            } else {
                                formatPluralString = repliesCount != 0 ? LocaleController.getPluralString("CommentsNoNumber", repliesCount) : LocaleController.getString("LeaveAComment", R.string.LeaveAComment);
                            }
                            String str17 = formatPluralString;
                            ArrayList<TLRPC$Peer> recentRepliers = getRecentRepliers();
                            if (repliesCount != 0 && recentRepliers != null && !recentRepliers.isEmpty()) {
                                createCommentUI();
                                int size2 = recentRepliers.size();
                                final int i151 = 0;
                                i137 = 0;
                                while (true) {
                                    ImageReceiver[] imageReceiverArr = chatMessageCell.commentAvatarImages;
                                    if (i151 >= imageReceiverArr.length) {
                                        break;
                                    }
                                    if (i151 >= size2) {
                                        if (size2 != 0) {
                                            imageReceiverArr[i151].setImageBitmap((Drawable) null);
                                            chatMessageCell.commentAvatarImagesVisible[i151] = false;
                                        }
                                        i138 = i151;
                                        i139 = size2;
                                        arrayList7 = recentRepliers;
                                    } else {
                                        imageReceiverArr[i151].setImageCoords(0.0f, 0.0f, AndroidUtilities.dp(24.0f), AndroidUtilities.dp(24.0f));
                                        final long peerId = MessageObject.getPeerId(recentRepliers.get(i151));
                                        if (DialogObject.isUserDialog(peerId)) {
                                            user2 = MessagesController.getInstance(chatMessageCell.currentAccount).getUser(Long.valueOf(peerId));
                                        } else if (DialogObject.isChatDialog(peerId)) {
                                            tLRPC$Chat = MessagesController.getInstance(chatMessageCell.currentAccount).getChat(Long.valueOf(-peerId));
                                            user2 = null;
                                            final TLRPC$User tLRPC$User2 = user2;
                                            i138 = i151;
                                            i139 = size2;
                                            final TLRPC$Chat tLRPC$Chat2 = tLRPC$Chat;
                                            arrayList7 = recentRepliers;
                                            chatMessageCell.post(new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda9
                                                @Override // java.lang.Runnable
                                                public final void run() {
                                                    ChatMessageCell.this.lambda$setMessageContent$7(tLRPC$User2, i151, tLRPC$Chat2, peerId);
                                                }
                                            });
                                            chatMessageCell.commentAvatarImagesVisible[i138] = z49;
                                            i137 += i138 == 0 ? 17 : 2;
                                        } else {
                                            user2 = null;
                                        }
                                        tLRPC$Chat = null;
                                        final TLRPC$User tLRPC$User22 = user2;
                                        i138 = i151;
                                        i139 = size2;
                                        final TLRPC$Chat tLRPC$Chat22 = tLRPC$Chat;
                                        arrayList7 = recentRepliers;
                                        chatMessageCell.post(new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda9
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                ChatMessageCell.this.lambda$setMessageContent$7(tLRPC$User22, i151, tLRPC$Chat22, peerId);
                                            }
                                        });
                                        chatMessageCell.commentAvatarImagesVisible[i138] = z49;
                                        i137 += i138 == 0 ? 17 : 2;
                                    }
                                    i151 = i138 + 1;
                                    recentRepliers = arrayList7;
                                    size2 = i139;
                                }
                                string9 = str17;
                                i4 = 2;
                                int ceil2 = (int) Math.ceil(Theme.chat_commentTextPaint.measureText(string9));
                                chatMessageCell.totalCommentWidth = ceil2;
                                chatMessageCell.commentWidth = ceil2;
                                chatMessageCell.commentLayout = new CachedStaticLayout(new StaticLayout(string9, Theme.chat_commentTextPaint, chatMessageCell.commentWidth + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                if (repliesCount != 0 && !LocaleController.isRTL) {
                                    chatMessageCell.drawCommentNumber = z49;
                                    animatedNumberLayout = chatMessageCell.commentNumberLayout;
                                    if (animatedNumberLayout != null) {
                                        AnimatedNumberLayout animatedNumberLayout3 = new AnimatedNumberLayout(chatMessageCell, Theme.chat_commentTextPaint);
                                        chatMessageCell.commentNumberLayout = animatedNumberLayout3;
                                        z43 = false;
                                        animatedNumberLayout3.setNumber(repliesCount, false);
                                    } else {
                                        animatedNumberLayout.setNumber(repliesCount, messageObject17.animateComments);
                                        z43 = false;
                                    }
                                    messageObject17.animateComments = z43;
                                    int width2 = chatMessageCell.commentNumberLayout.getWidth();
                                    chatMessageCell.commentNumberWidth = width2;
                                    chatMessageCell.totalCommentWidth += width2 + AndroidUtilities.dp(4.0f);
                                } else {
                                    chatMessageCell.drawCommentNumber = false;
                                    animatedNumberLayout2 = chatMessageCell.commentNumberLayout;
                                    if (animatedNumberLayout2 != null) {
                                        animatedNumberLayout2.setNumber(z49 ? 1 : 0, false);
                                    }
                                }
                                chatMessageCell.totalCommentWidth += AndroidUtilities.dp(i137 + 70);
                                if (messageObject17.type != 27) {
                                    messageObject2 = messageObject17;
                                    i5 = 3;
                                    i6 = 20;
                                    i149 = 2;
                                    f2 = 1.0f;
                                    chatMessageCell.drawBackground = true;
                                    chatMessageCell.drawForwardedName = false;
                                    chatMessageCell.hasReplyQuote = false;
                                    chatMessageCell.isReplyQuote = false;
                                    chatMessageCell.replyNameLayout = null;
                                    chatMessageCell.replyTextLayout = null;
                                    CachedStaticLayout[] cachedStaticLayoutArr2 = chatMessageCell.forwardedNameLayout;
                                    cachedStaticLayoutArr2[0] = null;
                                    cachedStaticLayoutArr2[1] = null;
                                    chatMessageCell.drawName = false;
                                    if (chatMessageCell.channelRecommendationsCell == null) {
                                        chatMessageCell.channelRecommendationsCell = new ChannelRecommendationsCell(chatMessageCell);
                                    }
                                    chatMessageCell.channelRecommendationsCell.setMessageObject(messageObject2);
                                } else if (messageObject.isExpiredStory()) {
                                    messageObject2 = messageObject17;
                                    i5 = 3;
                                    i6 = 20;
                                    i149 = 2;
                                    f2 = 1.0f;
                                    if (!z51) {
                                        requestLayout();
                                    }
                                    chatMessageCell.drawBackground = true;
                                    if (chatMessageCell.expiredStoryView == null) {
                                        chatMessageCell.expiredStoryView = new ExpiredStoryView();
                                    }
                                    ExpiredStoryView expiredStoryView2 = chatMessageCell.expiredStoryView;
                                    expiredStoryView2.visible = true;
                                    expiredStoryView2.measure(chatMessageCell);
                                    chatMessageCell.totalHeight = chatMessageCell.expiredStoryView.height + AndroidUtilities.dp(8.0f);
                                    chatMessageCell.backgroundWidth = chatMessageCell.expiredStoryView.width;
                                    chatMessageCell.measureTime(chatMessageCell.currentMessageObject);
                                    chatMessageCell.backgroundWidth += chatMessageCell.timeWidth + AndroidUtilities.dp(12.0f);
                                    chatMessageCell.drawForwardedName = false;
                                    chatMessageCell.hasReplyQuote = false;
                                    chatMessageCell.isReplyQuote = false;
                                    chatMessageCell.replyNameLayout = null;
                                    chatMessageCell.replyTextLayout = null;
                                    CachedStaticLayout[] cachedStaticLayoutArr3 = chatMessageCell.forwardedNameLayout;
                                    cachedStaticLayoutArr3[0] = null;
                                    cachedStaticLayoutArr3[1] = null;
                                    chatMessageCell.drawName = false;
                                } else {
                                    int i152 = messageObject17.type;
                                    if (i152 == 0 || i152 == 24 || messageObject.isGiveawayOrGiveawayResults() || messageObject.isSponsored()) {
                                        MessageObject messageObject21 = messageObject17;
                                        chatMessageCell.drawForwardedName = !chatMessageCell.isRepliesChat;
                                        if (z7) {
                                            if (AndroidUtilities.isTablet()) {
                                                minTabletSide8 = AndroidUtilities.getMinTabletSide();
                                                dp15 = AndroidUtilities.dp(122.0f);
                                            } else {
                                                minTabletSide8 = Math.min(getParentWidth(), AndroidUtilities.displaySize.y);
                                                dp15 = AndroidUtilities.dp(122.0f);
                                            }
                                            i86 = minTabletSide8 - dp15;
                                            chatMessageCell.drawName = true;
                                        } else {
                                            if (AndroidUtilities.isTablet()) {
                                                minTabletSide11 = AndroidUtilities.getMinTabletSide();
                                                dp18 = AndroidUtilities.dp(80.0f);
                                            } else {
                                                minTabletSide11 = Math.min(getParentWidth(), AndroidUtilities.displaySize.y);
                                                dp18 = AndroidUtilities.dp(80.0f);
                                            }
                                            i86 = minTabletSide11 - dp18;
                                            chatMessageCell.drawName = chatMessageCell.isPinnedChat || (chatMessageCell.isSavedChat && !messageObject.isOutOwner() && (messageObject.getSavedDialogId() < 0 || messageObject.getSavedDialogId() == UserObject.ANONYMOUS)) || (!((tLRPC$Peer = messageObject21.messageOwner.peer_id) == null || tLRPC$Peer.channel_id == 0 || (messageObject.isOutOwner() && !messageObject.isSupergroup())) || (messageObject.isImportedForward() && messageObject21.messageOwner.fwd_from.from_id == null));
                                        }
                                        int i153 = i86;
                                        chatMessageCell.availableTimeWidth = i153;
                                        if (messageObject.isRoundVideo()) {
                                            double d = chatMessageCell.availableTimeWidth;
                                            double ceil3 = Math.ceil(Theme.chat_audioTimePaint.measureText("00:00"));
                                            double dp19 = !messageObject.isOutOwner() ? AndroidUtilities.dp(64.0f) : 0;
                                            Double.isNaN(dp19);
                                            Double.isNaN(d);
                                            chatMessageCell.availableTimeWidth = (int) (d - (ceil3 + dp19));
                                        }
                                        measureTime(messageObject);
                                        int dp20 = chatMessageCell.timeWidth + AndroidUtilities.dp(6.0f);
                                        if (messageObject.isQuickReply() && !messageObject.isSendError()) {
                                            dp20 -= AndroidUtilities.dp(3.0f);
                                        } else if (messageObject.isOutOwner()) {
                                            dp20 += AndroidUtilities.dp(20.5f);
                                        }
                                        int extraTimeX = getExtraTimeX() + dp20;
                                        chatMessageCell.hasGamePreview = (MessageObject.getMedia(messageObject21.messageOwner) instanceof TLRPC$TL_messageMediaGame) && (MessageObject.getMedia(messageObject21.messageOwner).game instanceof TLRPC$TL_game);
                                        chatMessageCell.hasInvoicePreview = MessageObject.getMedia(messageObject21.messageOwner) instanceof TLRPC$TL_messageMediaInvoice;
                                        boolean z57 = !messageObject21.isRestrictedMessage && (MessageObject.getMedia(messageObject21.messageOwner) instanceof TLRPC$TL_messageMediaWebPage) && (MessageObject.getMedia(messageObject21.messageOwner).webpage instanceof TLRPC$TL_webPage);
                                        chatMessageCell.hasLinkPreview = z57;
                                        TLRPC$WebPage tLRPC$WebPage = !z57 ? null : MessageObject.getMedia(messageObject21.messageOwner).webpage;
                                        if (messageObject.isStoryMention()) {
                                            chatMessageCell.hasLinkPreview = true;
                                            tLRPC$WebPage = messageObject.getStoryMentionWebpage();
                                        }
                                        boolean z58 = chatMessageCell.hasLinkPreview;
                                        chatMessageCell.drawInstantView = z58 && tLRPC$WebPage.cached_page != null;
                                        String str18 = !z58 ? null : tLRPC$WebPage.site_name;
                                        chatMessageCell.hasEmbed = (!z58 || TextUtils.isEmpty(tLRPC$WebPage.embed_url) || messageObject.isGif() || "instagram".equalsIgnoreCase(str18)) ? false : true;
                                        String str19 = tLRPC$WebPage == null ? null : tLRPC$WebPage.type;
                                        if (messageObject.isGiveawayOrGiveawayResults()) {
                                            chatMessageCell.hasLinkPreview = true;
                                        }
                                        if (chatMessageCell.drawInstantView) {
                                            if (str18 != null) {
                                                String lowerCase = str18.toLowerCase();
                                                if ((lowerCase.equals("instagram") || lowerCase.equals("twitter") || "telegram_album".equals(str19)) && (tLRPC$WebPage.cached_page instanceof TLRPC$TL_page) && ((tLRPC$WebPage.photo instanceof TLRPC$TL_photo) || MessageObject.isVideoDocument(tLRPC$WebPage.document))) {
                                                    chatMessageCell.drawInstantView = false;
                                                    ArrayList<TLRPC$PageBlock> arrayList10 = MessageObject.getMedia(messageObject21.messageOwner).webpage.cached_page.blocks;
                                                    int i154 = 1;
                                                    for (int i155 = 0; i155 < arrayList10.size(); i155++) {
                                                        TLRPC$PageBlock tLRPC$PageBlock = arrayList10.get(i155);
                                                        if (tLRPC$PageBlock instanceof TLRPC$TL_pageBlockSlideshow) {
                                                            i154 = ((TLRPC$TL_pageBlockSlideshow) tLRPC$PageBlock).items.size();
                                                        } else if (tLRPC$PageBlock instanceof TLRPC$TL_pageBlockCollage) {
                                                            i154 = ((TLRPC$TL_pageBlockCollage) tLRPC$PageBlock).items.size();
                                                        }
                                                    }
                                                    String formatString = LocaleController.formatString("Of", R.string.Of, 1, Integer.valueOf(i154));
                                                    chatMessageCell.photosCountWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatString));
                                                    chatMessageCell.photosCountLayout = new CachedStaticLayout(new StaticLayout(formatString, Theme.chat_durationPaint, chatMessageCell.photosCountWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                    z27 = true;
                                                    tL_stories$StoryItem = null;
                                                    tLRPC$Document = null;
                                                    tLRPC$ThemeSettings = null;
                                                    arrayList5 = null;
                                                    z29 = false;
                                                    if (messageObject21.isRepostPreview) {
                                                        chatMessageCell.drawInstantView = false;
                                                    }
                                                    chatMessageCell.backgroundWidth = i153;
                                                    if ((chatMessageCell.hasLinkPreview || chatMessageCell.linkPreviewAbove) && !chatMessageCell.hasGamePreview && !chatMessageCell.hasInvoicePreview) {
                                                        i87 = messageObject21.lastLineWidth;
                                                        if (i153 - i87 >= extraTimeX) {
                                                            int i156 = i153 - i87;
                                                            if (i156 >= 0 && i156 <= extraTimeX) {
                                                                chatMessageCell.backgroundWidth = ((i153 + extraTimeX) - i156) + AndroidUtilities.dp(31.0f);
                                                            } else {
                                                                chatMessageCell.backgroundWidth = Math.max(i153, i87 + extraTimeX) + AndroidUtilities.dp(31.0f);
                                                            }
                                                            chatMessageCell.availableTimeWidth = chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f);
                                                            if (messageObject.isRoundVideo()) {
                                                                tL_stories$StoryItem3 = tL_stories$StoryItem;
                                                                tLRPC$Document2 = tLRPC$Document;
                                                                z30 = z29;
                                                            } else {
                                                                double d2 = chatMessageCell.availableTimeWidth;
                                                                z30 = z29;
                                                                double ceil4 = Math.ceil(Theme.chat_audioTimePaint.measureText("00:00"));
                                                                if (messageObject.isOutOwner()) {
                                                                    tL_stories$StoryItem3 = tL_stories$StoryItem;
                                                                    tLRPC$Document2 = tLRPC$Document;
                                                                    i88 = 0;
                                                                } else {
                                                                    tL_stories$StoryItem3 = tL_stories$StoryItem;
                                                                    tLRPC$Document2 = tLRPC$Document;
                                                                    i88 = AndroidUtilities.dp(64.0f);
                                                                }
                                                                double d3 = i88;
                                                                Double.isNaN(d3);
                                                                Double.isNaN(d2);
                                                                chatMessageCell.availableTimeWidth = (int) (d2 - (ceil4 + d3));
                                                            }
                                                            setMessageObjectInternal(messageObject);
                                                            chatMessageCell.giveawayMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                                            chatMessageCell.giveawayResultsMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                                            if (messageObject.isSponsored()) {
                                                                chatMessageCell.backgroundWidth = messageObject21.textWidth + (getExtraTextX() * 2) + ((chatMessageCell.hasGamePreview || chatMessageCell.hasInvoicePreview) ? AndroidUtilities.dp(10.0f) : 0);
                                                            } else if (AndroidUtilities.isTablet()) {
                                                                chatMessageCell.backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(50.0f), AndroidUtilities.dp(270.0f));
                                                            } else {
                                                                chatMessageCell.backgroundWidth = Math.min(getParentWidth() - AndroidUtilities.dp(50.0f), AndroidUtilities.dp(270.0f));
                                                            }
                                                            if (!messageObject.isSponsored()) {
                                                                chatMessageCell.totalHeight = AndroidUtilities.dp(22.5f);
                                                            } else {
                                                                chatMessageCell.totalHeight = messageObject21.textHeight + AndroidUtilities.dp(19.5f) + chatMessageCell.namesOffset;
                                                            }
                                                            if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                                if (messageObject.isGiveaway()) {
                                                                    measuredWidth = chatMessageCell.giveawayMessageCell.getMeasuredWidth();
                                                                } else {
                                                                    measuredWidth = !messageObject.isGiveawayResults() ? i153 : chatMessageCell.giveawayResultsMessageCell.getMeasuredWidth();
                                                                }
                                                                chatMessageCell.reactionsLayoutInBubble.measure(measuredWidth, 3);
                                                                ReactionsLayoutInBubble reactionsLayoutInBubble5 = chatMessageCell.reactionsLayoutInBubble;
                                                                if (!reactionsLayoutInBubble5.isEmpty) {
                                                                    reactionsLayoutInBubble5.totalHeight = reactionsLayoutInBubble5.height + AndroidUtilities.dp(8.0f);
                                                                    ReactionsLayoutInBubble reactionsLayoutInBubble6 = chatMessageCell.reactionsLayoutInBubble;
                                                                    int i157 = reactionsLayoutInBubble6.width;
                                                                    if (i157 > chatMessageCell.backgroundWidth) {
                                                                        chatMessageCell.backgroundWidth = i157;
                                                                    }
                                                                    chatMessageCell.totalHeight += reactionsLayoutInBubble6.totalHeight;
                                                                }
                                                            }
                                                            if (chatMessageCell.drawPinnedTop) {
                                                                chatMessageCell.namesOffset -= AndroidUtilities.dp(1.0f);
                                                            }
                                                            messageObject11 = chatMessageCell.currentMessageObject;
                                                            if (messageObject11 != null && messageObject11.hasCodeAtTop && chatMessageCell.namesOffset > 0) {
                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(5.0f);
                                                            }
                                                            int max5 = Math.max(Math.max(Math.max(chatMessageCell.backgroundWidth, chatMessageCell.nameWidth), chatMessageCell.forwardedNameWidth), chatMessageCell.replyNameWidth);
                                                            messageTopicButton = chatMessageCell.topicButton;
                                                            if (messageTopicButton != null) {
                                                                max5 = Math.max(max5, messageTopicButton.width());
                                                            }
                                                            max = Math.max(max5, chatMessageCell.replyTextWidth);
                                                            if (chatMessageCell.commentLayout != null && chatMessageCell.drawSideButton != 3) {
                                                                max = Math.max(max, chatMessageCell.totalCommentWidth);
                                                            }
                                                            if (chatMessageCell.hasLinkPreview || chatMessageCell.hasGamePreview || chatMessageCell.hasInvoicePreview) {
                                                                messageObject12 = chatMessageCell.currentMessageObject;
                                                                if (!messageObject12.isRepostPreview) {
                                                                    maxMessageTextWidth = messageObject12.getMaxMessageTextWidth();
                                                                } else {
                                                                    if (AndroidUtilities.isTablet()) {
                                                                        minTabletSide10 = AndroidUtilities.getMinTabletSide();
                                                                        dp17 = AndroidUtilities.dp(80 + (!z7 ? 0 : 52));
                                                                    } else {
                                                                        minTabletSide10 = getParentWidth();
                                                                        dp17 = AndroidUtilities.dp(80 + (!z7 ? 0 : 52));
                                                                    }
                                                                    maxMessageTextWidth = minTabletSide10 - dp17;
                                                                }
                                                                if (chatMessageCell.drawSideButton != 0) {
                                                                    MessageObject messageObject22 = chatMessageCell.currentMessageObject;
                                                                    maxMessageTextWidth -= AndroidUtilities.dp((messageObject22.isSaved && messageObject22.isOutOwner()) ? 25.0f : 20.0f);
                                                                }
                                                                int dp21 = AndroidUtilities.dp(48.0f);
                                                                int dp22 = AndroidUtilities.dp(10.0f);
                                                                if (!messageObject.isSponsored()) {
                                                                    i89 = maxMessageTextWidth;
                                                                    z31 = z30;
                                                                    TL_stories$StoryItem tL_stories$StoryItem7 = tL_stories$StoryItem3;
                                                                    if (messageObject21.sponsoredCanReport) {
                                                                        string5 = LocaleController.getString(R.string.SponsoredMessageAd);
                                                                        string6 = LocaleController.getString(R.string.SponsoredMessageAdWhatIsThis);
                                                                    } else {
                                                                        if (messageObject21.sponsoredRecommended) {
                                                                            string7 = LocaleController.getString(R.string.SponsoredMessage2Recommended);
                                                                        } else {
                                                                            string7 = LocaleController.getString(R.string.SponsoredMessage2);
                                                                        }
                                                                        string5 = string7;
                                                                        string6 = null;
                                                                    }
                                                                    str3 = messageObject21.customName;
                                                                    if (str3 == null) {
                                                                        str3 = getAuthorName();
                                                                    }
                                                                    CharSequence charSequence8 = messageObject21.messageText;
                                                                    String charSequence9 = charSequence8 == null ? null : charSequence8.toString();
                                                                    tLRPC$Photo = messageObject21.sponsoredPhoto;
                                                                    String str20 = string6;
                                                                    chatMessageCell.isSmallImage = tLRPC$Photo != null;
                                                                    chatMessageCell.linkPreviewAbove = false;
                                                                    tL_stories$StoryItem4 = tL_stories$StoryItem7;
                                                                    arrayList6 = arrayList5;
                                                                    str4 = charSequence9;
                                                                    charSequence3 = string5;
                                                                    str5 = str20;
                                                                    webFile = null;
                                                                    str6 = null;
                                                                    i90 = 0;
                                                                    tLRPC$Document3 = null;
                                                                    i91 = 0;
                                                                    z32 = true;
                                                                    charSequence4 = charSequence8;
                                                                    charSequence5 = null;
                                                                } else {
                                                                    int i158 = chatMessageCell.drawInstantViewType;
                                                                    if (i158 == 19) {
                                                                        i89 = maxMessageTextWidth;
                                                                        z31 = z30;
                                                                        chatMessageCell.isSmallImage = false;
                                                                        chatMessageCell.linkPreviewAbove = false;
                                                                        tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                                        arrayList6 = arrayList5;
                                                                        webFile = null;
                                                                        str3 = null;
                                                                        str6 = null;
                                                                        charSequence5 = null;
                                                                        i90 = 0;
                                                                        tLRPC$Document3 = null;
                                                                        tLRPC$Photo = null;
                                                                        charSequence4 = null;
                                                                        charSequence3 = null;
                                                                        i91 = 0;
                                                                        str4 = null;
                                                                        z32 = false;
                                                                        str5 = null;
                                                                    } else if (i158 == 17) {
                                                                        i89 = maxMessageTextWidth;
                                                                        z31 = z30;
                                                                        if (tL_stories$StoryItem3 != null) {
                                                                            tL_stories$StoryItem6 = tL_stories$StoryItem3;
                                                                            tLRPC$User = MessagesController.getInstance(chatMessageCell.currentAccount).getUser(Long.valueOf(tL_stories$StoryItem6.dialogId));
                                                                        } else {
                                                                            tL_stories$StoryItem6 = tL_stories$StoryItem3;
                                                                            tLRPC$User = null;
                                                                        }
                                                                        if (tL_stories$StoryItem6 instanceof TL_stories$TL_storyItemDeleted) {
                                                                            dp16 = AndroidUtilities.dp(14.0f) + 0;
                                                                            createExpiredStoryString = StoriesUtilities.createExpiredStoryString();
                                                                        } else {
                                                                            if (tLRPC$User != null) {
                                                                                createExpiredStoryString = UserObject.getUserName(tLRPC$User);
                                                                            } else {
                                                                                createExpiredStoryString = tLRPC$WebPage != null ? tLRPC$WebPage.title : null;
                                                                            }
                                                                            dp16 = 0;
                                                                        }
                                                                        if (tL_stories$StoryItem6 == null) {
                                                                            str13 = tLRPC$WebPage != null ? tLRPC$WebPage.description : null;
                                                                        } else {
                                                                            str13 = tL_stories$StoryItem6.caption;
                                                                        }
                                                                        if (tL_stories$StoryItem6 == null || (tLRPC$MessageMedia4 = tL_stories$StoryItem6.media) == null || (tLRPC$Document7 = tLRPC$MessageMedia4.document) == null) {
                                                                            tLRPC$Document7 = tLRPC$WebPage != null ? tLRPC$WebPage.document : null;
                                                                        }
                                                                        if (tL_stories$StoryItem6 == null || (tLRPC$MessageMedia3 = tL_stories$StoryItem6.media) == null || (tLRPC$Photo = tLRPC$MessageMedia3.photo) == null) {
                                                                            tLRPC$Photo = tLRPC$WebPage != null ? tLRPC$WebPage.photo : null;
                                                                        }
                                                                        String str21 = tLRPC$WebPage != null ? tLRPC$WebPage.type : null;
                                                                        CharSequence charSequence10 = createExpiredStoryString;
                                                                        if (tL_stories$StoryItem6 == null || (tLRPC$MessageMedia2 = tL_stories$StoryItem6.media) == null || (tLRPC$Document9 = tLRPC$MessageMedia2.document) == null) {
                                                                            tLRPC$Document8 = tLRPC$Document7;
                                                                            i131 = dp16;
                                                                            z41 = false;
                                                                            i132 = 0;
                                                                        } else {
                                                                            tLRPC$Document8 = tLRPC$Document7;
                                                                            i131 = dp16;
                                                                            i132 = (int) MessageObject.getDocumentDuration(tLRPC$Document9);
                                                                            z41 = false;
                                                                        }
                                                                        chatMessageCell.isSmallImage = z41;
                                                                        TLRPC$Message tLRPC$Message8 = chatMessageCell.currentMessageObject.messageOwner;
                                                                        chatMessageCell.linkPreviewAbove = tLRPC$Message8 != null && tLRPC$Message8.invert_media;
                                                                        tL_stories$StoryItem4 = tL_stories$StoryItem6;
                                                                        str4 = str13;
                                                                        arrayList6 = arrayList5;
                                                                        str6 = str21;
                                                                        tLRPC$Document3 = tLRPC$Document8;
                                                                        webFile = null;
                                                                        str3 = null;
                                                                        charSequence5 = null;
                                                                        z32 = false;
                                                                        str5 = null;
                                                                        i91 = i132;
                                                                        i90 = i131;
                                                                        charSequence3 = charSequence10;
                                                                        charSequence4 = null;
                                                                    } else if (chatMessageCell.hasLinkPreview) {
                                                                        TLRPC$TL_webPage tLRPC$TL_webPage = (TLRPC$TL_webPage) tLRPC$WebPage;
                                                                        String str22 = tLRPC$TL_webPage.site_name;
                                                                        int i159 = maxMessageTextWidth;
                                                                        if (i158 == 6 || i158 == 7) {
                                                                            i133 = 6;
                                                                            str14 = null;
                                                                        } else {
                                                                            str14 = tLRPC$TL_webPage.title;
                                                                            i133 = 6;
                                                                        }
                                                                        if (i158 == i133 || i158 == 7) {
                                                                            i134 = 6;
                                                                            str15 = null;
                                                                        } else {
                                                                            str15 = tLRPC$TL_webPage.author;
                                                                            i134 = 6;
                                                                        }
                                                                        str4 = (i158 == i134 || i158 == 7) ? null : tLRPC$TL_webPage.description;
                                                                        TLRPC$Photo tLRPC$Photo5 = tLRPC$TL_webPage.photo;
                                                                        z31 = z30;
                                                                        if (i158 == 7) {
                                                                            themeDocument = tLRPC$ThemeSettings == null ? tLRPC$Document2 : new DocumentObject.ThemeDocument(tLRPC$ThemeSettings);
                                                                        } else {
                                                                            themeDocument = tLRPC$TL_webPage.document;
                                                                        }
                                                                        String str23 = tLRPC$TL_webPage.type;
                                                                        int i160 = tLRPC$TL_webPage.duration;
                                                                        if (str22 == null || tLRPC$Photo5 == null) {
                                                                            tLRPC$Photo4 = tLRPC$Photo5;
                                                                        } else {
                                                                            tLRPC$Photo4 = tLRPC$Photo5;
                                                                            if (str22.toString().toLowerCase().equals("instagram")) {
                                                                                max4 = Math.max(AndroidUtilities.displaySize.y / 3, chatMessageCell.currentMessageObject.textWidth);
                                                                                boolean z59 = "app".equals(str23) || "profile".equals(str23) || "article".equals(str23) || "telegram_bot".equals(str23) || "telegram_user".equals(str23) || "telegram_channel".equals(str23) || "telegram_megagroup".equals(str23) || "telegram_voicechat".equals(str23) || "telegram_livestream".equals(str23) || "telegram_channel_boost".equals(str23) || "telegram_group_boost".equals(str23);
                                                                                if (z27) {
                                                                                    i89 = max4;
                                                                                } else {
                                                                                    if (chatMessageCell.drawInstantView) {
                                                                                        int i161 = chatMessageCell.drawInstantViewType;
                                                                                        i89 = max4;
                                                                                        if (i161 != 1) {
                                                                                            if (i161 != 2) {
                                                                                                if (i161 != 9) {
                                                                                                    if (i161 != 11) {
                                                                                                        if (i161 != 13) {
                                                                                                            if (i161 != 18) {
                                                                                                                if (i161 != 20) {
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    } else {
                                                                                        i89 = max4;
                                                                                    }
                                                                                    if (themeDocument == null) {
                                                                                    }
                                                                                }
                                                                                i136 = chatMessageCell.drawInstantViewType;
                                                                                if ((i136 != 23 && i136 != 24) || arrayList5 == null || arrayList5.isEmpty()) {
                                                                                    z42 = false;
                                                                                    media = MessageObject.getMedia(messageObject21.messageOwner);
                                                                                    if (media == null) {
                                                                                        z32 = z42;
                                                                                    } else {
                                                                                        int i162 = chatMessageCell.drawInstantViewType;
                                                                                        z32 = z42;
                                                                                        if (i162 != 23 && i162 != 24) {
                                                                                            if (media.force_large_media) {
                                                                                                z32 = false;
                                                                                            }
                                                                                            if (media.force_small_media) {
                                                                                                z32 = true;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    MessageObject messageObject23 = chatMessageCell.currentMessageObject;
                                                                                    TLRPC$Message tLRPC$Message9 = messageObject23.messageOwner;
                                                                                    chatMessageCell.linkPreviewAbove = tLRPC$Message9 != null && tLRPC$Message9.invert_media;
                                                                                    chatMessageCell.isSmallImage = ((!z32 || str23 == null || messageObject23.photoThumbs == null) && (((i135 = chatMessageCell.drawInstantViewType) != 23 && i135 != 24) || arrayList5 == null || arrayList5.isEmpty())) ? false : true;
                                                                                    tLRPC$Photo = tLRPC$Photo4;
                                                                                    tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                                                    webFile = null;
                                                                                    charSequence4 = null;
                                                                                    str5 = null;
                                                                                    charSequence3 = str22;
                                                                                    i90 = 0;
                                                                                    ArrayList<TLRPC$Document> arrayList11 = arrayList5;
                                                                                    str6 = str23;
                                                                                    str3 = str14;
                                                                                    i91 = i160;
                                                                                    tLRPC$Document3 = themeDocument;
                                                                                    charSequence5 = str15;
                                                                                    arrayList6 = arrayList11;
                                                                                }
                                                                                z42 = true;
                                                                                media = MessageObject.getMedia(messageObject21.messageOwner);
                                                                                if (media == null) {
                                                                                }
                                                                                MessageObject messageObject232 = chatMessageCell.currentMessageObject;
                                                                                TLRPC$Message tLRPC$Message92 = messageObject232.messageOwner;
                                                                                if (tLRPC$Message92 != null) {
                                                                                    chatMessageCell.linkPreviewAbove = tLRPC$Message92 != null && tLRPC$Message92.invert_media;
                                                                                    if (!z32) {
                                                                                        chatMessageCell.isSmallImage = ((!z32 || str23 == null || messageObject232.photoThumbs == null) && (((i135 = chatMessageCell.drawInstantViewType) != 23 && i135 != 24) || arrayList5 == null || arrayList5.isEmpty())) ? false : true;
                                                                                        tLRPC$Photo = tLRPC$Photo4;
                                                                                        tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                                                        webFile = null;
                                                                                        charSequence4 = null;
                                                                                        str5 = null;
                                                                                        charSequence3 = str22;
                                                                                        i90 = 0;
                                                                                        ArrayList<TLRPC$Document> arrayList112 = arrayList5;
                                                                                        str6 = str23;
                                                                                        str3 = str14;
                                                                                        i91 = i160;
                                                                                        tLRPC$Document3 = themeDocument;
                                                                                        charSequence5 = str15;
                                                                                        arrayList6 = arrayList112;
                                                                                    }
                                                                                    chatMessageCell.isSmallImage = ((!z32 || str23 == null || messageObject232.photoThumbs == null) && (((i135 = chatMessageCell.drawInstantViewType) != 23 && i135 != 24) || arrayList5 == null || arrayList5.isEmpty())) ? false : true;
                                                                                    tLRPC$Photo = tLRPC$Photo4;
                                                                                    tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                                                    webFile = null;
                                                                                    charSequence4 = null;
                                                                                    str5 = null;
                                                                                    charSequence3 = str22;
                                                                                    i90 = 0;
                                                                                    ArrayList<TLRPC$Document> arrayList1122 = arrayList5;
                                                                                    str6 = str23;
                                                                                    str3 = str14;
                                                                                    i91 = i160;
                                                                                    tLRPC$Document3 = themeDocument;
                                                                                    charSequence5 = str15;
                                                                                    arrayList6 = arrayList1122;
                                                                                }
                                                                                chatMessageCell.linkPreviewAbove = tLRPC$Message92 != null && tLRPC$Message92.invert_media;
                                                                                chatMessageCell.isSmallImage = ((!z32 || str23 == null || messageObject232.photoThumbs == null) && (((i135 = chatMessageCell.drawInstantViewType) != 23 && i135 != 24) || arrayList5 == null || arrayList5.isEmpty())) ? false : true;
                                                                                tLRPC$Photo = tLRPC$Photo4;
                                                                                tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                                                webFile = null;
                                                                                charSequence4 = null;
                                                                                str5 = null;
                                                                                charSequence3 = str22;
                                                                                i90 = 0;
                                                                                ArrayList<TLRPC$Document> arrayList11222 = arrayList5;
                                                                                str6 = str23;
                                                                                str3 = str14;
                                                                                i91 = i160;
                                                                                tLRPC$Document3 = themeDocument;
                                                                                charSequence5 = str15;
                                                                                arrayList6 = arrayList11222;
                                                                            }
                                                                        }
                                                                        max4 = i159;
                                                                        if ("app".equals(str23)) {
                                                                            if (z27) {
                                                                            }
                                                                            i136 = chatMessageCell.drawInstantViewType;
                                                                            if (i136 != 23) {
                                                                                z42 = false;
                                                                                media = MessageObject.getMedia(messageObject21.messageOwner);
                                                                                if (media == null) {
                                                                                }
                                                                                MessageObject messageObject2322 = chatMessageCell.currentMessageObject;
                                                                                TLRPC$Message tLRPC$Message922 = messageObject2322.messageOwner;
                                                                                chatMessageCell.linkPreviewAbove = tLRPC$Message922 != null && tLRPC$Message922.invert_media;
                                                                                chatMessageCell.isSmallImage = ((!z32 || str23 == null || messageObject2322.photoThumbs == null) && (((i135 = chatMessageCell.drawInstantViewType) != 23 && i135 != 24) || arrayList5 == null || arrayList5.isEmpty())) ? false : true;
                                                                                tLRPC$Photo = tLRPC$Photo4;
                                                                                tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                                                webFile = null;
                                                                                charSequence4 = null;
                                                                                str5 = null;
                                                                                charSequence3 = str22;
                                                                                i90 = 0;
                                                                                ArrayList<TLRPC$Document> arrayList112222 = arrayList5;
                                                                                str6 = str23;
                                                                                str3 = str14;
                                                                                i91 = i160;
                                                                                tLRPC$Document3 = themeDocument;
                                                                                charSequence5 = str15;
                                                                                arrayList6 = arrayList112222;
                                                                            }
                                                                            z42 = false;
                                                                            media = MessageObject.getMedia(messageObject21.messageOwner);
                                                                            if (media == null) {
                                                                            }
                                                                            MessageObject messageObject23222 = chatMessageCell.currentMessageObject;
                                                                            TLRPC$Message tLRPC$Message9222 = messageObject23222.messageOwner;
                                                                            chatMessageCell.linkPreviewAbove = tLRPC$Message9222 != null && tLRPC$Message9222.invert_media;
                                                                            chatMessageCell.isSmallImage = ((!z32 || str23 == null || messageObject23222.photoThumbs == null) && (((i135 = chatMessageCell.drawInstantViewType) != 23 && i135 != 24) || arrayList5 == null || arrayList5.isEmpty())) ? false : true;
                                                                            tLRPC$Photo = tLRPC$Photo4;
                                                                            tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                                            webFile = null;
                                                                            charSequence4 = null;
                                                                            str5 = null;
                                                                            charSequence3 = str22;
                                                                            i90 = 0;
                                                                            ArrayList<TLRPC$Document> arrayList1122222 = arrayList5;
                                                                            str6 = str23;
                                                                            str3 = str14;
                                                                            i91 = i160;
                                                                            tLRPC$Document3 = themeDocument;
                                                                            charSequence5 = str15;
                                                                            arrayList6 = arrayList1122222;
                                                                        }
                                                                        if (z27) {
                                                                        }
                                                                        i136 = chatMessageCell.drawInstantViewType;
                                                                        if (i136 != 23) {
                                                                        }
                                                                        z42 = false;
                                                                        media = MessageObject.getMedia(messageObject21.messageOwner);
                                                                        if (media == null) {
                                                                        }
                                                                        MessageObject messageObject232222 = chatMessageCell.currentMessageObject;
                                                                        TLRPC$Message tLRPC$Message92222 = messageObject232222.messageOwner;
                                                                        chatMessageCell.linkPreviewAbove = tLRPC$Message92222 != null && tLRPC$Message92222.invert_media;
                                                                        chatMessageCell.isSmallImage = ((!z32 || str23 == null || messageObject232222.photoThumbs == null) && (((i135 = chatMessageCell.drawInstantViewType) != 23 && i135 != 24) || arrayList5 == null || arrayList5.isEmpty())) ? false : true;
                                                                        tLRPC$Photo = tLRPC$Photo4;
                                                                        tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                                        webFile = null;
                                                                        charSequence4 = null;
                                                                        str5 = null;
                                                                        charSequence3 = str22;
                                                                        i90 = 0;
                                                                        ArrayList<TLRPC$Document> arrayList11222222 = arrayList5;
                                                                        str6 = str23;
                                                                        str3 = str14;
                                                                        i91 = i160;
                                                                        tLRPC$Document3 = themeDocument;
                                                                        charSequence5 = str15;
                                                                        arrayList6 = arrayList11222222;
                                                                    } else if (chatMessageCell.hasInvoicePreview) {
                                                                        String str24 = MessageObject.getMedia(messageObject21.messageOwner).title;
                                                                        TLRPC$WebDocument tLRPC$WebDocument = ((TLRPC$TL_messageMediaInvoice) MessageObject.getMedia(messageObject21.messageOwner)).webPhoto;
                                                                        webFile = !(tLRPC$WebDocument instanceof TLRPC$TL_webDocument) ? null : WebFile.createWithWebDocument(tLRPC$WebDocument);
                                                                        chatMessageCell.isSmallImage = false;
                                                                        chatMessageCell.linkPreviewAbove = false;
                                                                        i89 = maxMessageTextWidth;
                                                                        arrayList6 = arrayList5;
                                                                        z31 = z30;
                                                                        tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                                        charSequence5 = null;
                                                                        i90 = 0;
                                                                        tLRPC$Photo = null;
                                                                        charSequence4 = null;
                                                                        i91 = 0;
                                                                        str4 = null;
                                                                        z32 = false;
                                                                        str5 = null;
                                                                        str6 = "invoice";
                                                                        charSequence3 = str24;
                                                                        str3 = null;
                                                                        tLRPC$Document3 = null;
                                                                    } else {
                                                                        TLRPC$TL_game tLRPC$TL_game = MessageObject.getMedia(messageObject21.messageOwner).game;
                                                                        String str25 = tLRPC$TL_game.title;
                                                                        String str26 = !TextUtils.isEmpty(messageObject21.messageText) ? null : tLRPC$TL_game.description;
                                                                        TLRPC$Photo tLRPC$Photo6 = tLRPC$TL_game.photo;
                                                                        TLRPC$Document tLRPC$Document10 = tLRPC$TL_game.document;
                                                                        chatMessageCell.isSmallImage = false;
                                                                        chatMessageCell.linkPreviewAbove = false;
                                                                        i89 = maxMessageTextWidth;
                                                                        str4 = str26;
                                                                        arrayList6 = arrayList5;
                                                                        str6 = "game";
                                                                        z31 = z30;
                                                                        tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                                        str3 = null;
                                                                        i90 = 0;
                                                                        charSequence4 = null;
                                                                        i91 = 0;
                                                                        z32 = false;
                                                                        str5 = null;
                                                                        tLRPC$Photo = tLRPC$Photo6;
                                                                        charSequence3 = str25;
                                                                        charSequence5 = null;
                                                                        tLRPC$Document3 = tLRPC$Document10;
                                                                        webFile = null;
                                                                    }
                                                                }
                                                                i92 = chatMessageCell.drawInstantViewType;
                                                                if (i92 != 18) {
                                                                    string8 = LocaleController.getString("BoostChannel", R.string.BoostChannel);
                                                                } else if (i92 == 22) {
                                                                    string8 = LocaleController.getString("BoostGroup", R.string.BoostGroup);
                                                                } else if (i92 == 11) {
                                                                    string8 = LocaleController.getString("VoipChannelVoiceChat", R.string.VoipChannelVoiceChat);
                                                                } else if (i92 == 9) {
                                                                    string8 = LocaleController.getString("VoipGroupVoiceChat", R.string.VoipGroupVoiceChat);
                                                                } else if (i92 == 6) {
                                                                    string8 = LocaleController.getString("ChatBackground", R.string.ChatBackground);
                                                                } else {
                                                                    str7 = charSequence3;
                                                                    if ("telegram_theme".equals(str19)) {
                                                                        string8 = LocaleController.getString("ColorTheme", R.string.ColorTheme);
                                                                    }
                                                                    int dp23 = AndroidUtilities.dp(20.0f);
                                                                    if (chatMessageCell.hasInvoicePreview) {
                                                                        dp23 = 0;
                                                                    }
                                                                    if (chatMessageCell.drawInstantViewType == 17) {
                                                                        dp23 += AndroidUtilities.dp(20.0f);
                                                                    }
                                                                    i93 = dp23;
                                                                    i94 = i89 - i93;
                                                                    messageObject13 = chatMessageCell.currentMessageObject;
                                                                    if (messageObject13.photoThumbs == null && tLRPC$Photo != null) {
                                                                        messageObject13.generateThumbs(true);
                                                                    }
                                                                    chatMessageCell.totalHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                                                    chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                                                    chatMessageCell.totalHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                                                    chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                                                    max2 = Math.max(Math.max(max, chatMessageCell.giveawayMessageCell.getMeasuredWidth()), chatMessageCell.giveawayResultsMessageCell.getMeasuredWidth());
                                                                    if (str7 == null) {
                                                                        webFile2 = webFile;
                                                                        str8 = str6;
                                                                        tLRPC$Document4 = tLRPC$Document3;
                                                                        tLRPC$Photo2 = tLRPC$Photo;
                                                                        i96 = 0;
                                                                        i95 = 3;
                                                                    } else {
                                                                        try {
                                                                            webFile3 = webFile;
                                                                            try {
                                                                                int ceil5 = (int) Math.ceil(Theme.chat_replyNamePaint.measureText(str7.toString()) + 1.0f + i90);
                                                                                if (!chatMessageCell.isSmallImage) {
                                                                                    chatMessageCell.siteNameLayout = new CachedStaticLayout(new StaticLayout(str7, Theme.chat_replyNamePaint, Math.min(ceil5, i94), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                    i97 = 0;
                                                                                    lineCount = 3;
                                                                                } else {
                                                                                    try {
                                                                                        CachedStaticLayout cachedStaticLayout4 = new CachedStaticLayout(generateStaticLayout(str7, Theme.chat_replyNamePaint, i94, (i94 - dp21) - dp22, 3, 1));
                                                                                        chatMessageCell.siteNameLayout = cachedStaticLayout4;
                                                                                        lineCount = 3 - cachedStaticLayout4.getLineCount();
                                                                                        i97 = 3;
                                                                                    } catch (Exception e) {
                                                                                        e = e;
                                                                                        str8 = str6;
                                                                                        webFile2 = webFile3;
                                                                                        tLRPC$Document4 = tLRPC$Document3;
                                                                                        tLRPC$Photo2 = tLRPC$Photo;
                                                                                        i95 = 3;
                                                                                        FileLog.e(e);
                                                                                        i96 = 0;
                                                                                        if (str5 != null) {
                                                                                        }
                                                                                        if (str3 != null) {
                                                                                        }
                                                                                        if (z33) {
                                                                                        }
                                                                                        if (charSequence5 != null) {
                                                                                        }
                                                                                        int i163 = i103;
                                                                                        if (str4 == null) {
                                                                                        }
                                                                                        if (z32) {
                                                                                        }
                                                                                        z35 = z32;
                                                                                        if (!z35) {
                                                                                        }
                                                                                        if (chatMessageCell.drawInstantViewType == 17) {
                                                                                        }
                                                                                        i7 = 0;
                                                                                        if (chatMessageCell.currentPosition == null) {
                                                                                        }
                                                                                        i8 = 5;
                                                                                        i11 = -1;
                                                                                        i12 = 8;
                                                                                        groupedMessagePosition = chatMessageCell.currentPosition;
                                                                                        if (groupedMessagePosition != null) {
                                                                                        }
                                                                                        int i164 = chatMessageCell.widthBeforeNewTimeLine;
                                                                                        messageObject3 = chatMessageCell.currentMessageObject;
                                                                                        if (messageObject3.eventId == 0) {
                                                                                        }
                                                                                        f3 = 0.0f;
                                                                                        chatMessageCell.botButtons.clear();
                                                                                        if (z51) {
                                                                                        }
                                                                                        if (!messageObject2.isRestrictedMessage) {
                                                                                        }
                                                                                        chatMessageCell.substractBackgroundHeight = 0;
                                                                                        chatMessageCell.keyboardHeight = 0;
                                                                                        if (chatMessageCell.drawCommentButton) {
                                                                                        }
                                                                                        z12 = chatMessageCell.drawPinnedBottom;
                                                                                        if (z12) {
                                                                                        }
                                                                                        if (z12) {
                                                                                        }
                                                                                        if (!chatMessageCell.mediaBackground) {
                                                                                        }
                                                                                        if (messageObject2.type != 19) {
                                                                                        }
                                                                                        if (chatMessageCell.drawPhotoImage) {
                                                                                        }
                                                                                        if (chatMessageCell.documentAttachType != i8) {
                                                                                        }
                                                                                        calculateUnlockXY();
                                                                                        if (z9) {
                                                                                        }
                                                                                        updateAnimatedEmojis();
                                                                                        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                                        if (stickerSetLinkIcon2 != null) {
                                                                                        }
                                                                                        r25 = 0;
                                                                                        if (z51) {
                                                                                        }
                                                                                        transcribeButton = chatMessageCell.transcribeButton;
                                                                                        if (transcribeButton != null) {
                                                                                        }
                                                                                        updateWaveform();
                                                                                        if (z51) {
                                                                                        }
                                                                                        z44 = true;
                                                                                        z45 = false;
                                                                                        z46 = false;
                                                                                        chatMessageCell.updateButtonState(z45, z46, z44);
                                                                                        if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                                        }
                                                                                        chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                                        if (chatMessageCellDelegate2 != null) {
                                                                                        }
                                                                                        chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                                        chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                                        chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                                        chatMessageCell.highlightCaptionToSetStart = i11;
                                                                                        updateFlagSecure();
                                                                                    }
                                                                                }
                                                                                try {
                                                                                    chatMessageCell.siteNameLeft = chatMessageCell.siteNameLayout.getWidth();
                                                                                    chatMessageCell.siteNameLayoutWidth = 0.0f;
                                                                                    i95 = lineCount;
                                                                                    int i165 = 0;
                                                                                    while (i165 < chatMessageCell.siteNameLayout.getLineCount()) {
                                                                                        try {
                                                                                            try {
                                                                                                i99 = max2;
                                                                                                str8 = str6;
                                                                                                webFile2 = webFile3;
                                                                                                tLRPC$Document4 = tLRPC$Document3;
                                                                                                tLRPC$Photo2 = tLRPC$Photo;
                                                                                                int lineLeft = (int) chatMessageCell.siteNameLayout.getLineLeft(i165);
                                                                                                if (i165 > 0) {
                                                                                                    if ((chatMessageCell.siteNameLeft == 0.0f) != (lineLeft == 0)) {
                                                                                                        chatMessageCell.siteNameLayoutWidth = chatMessageCell.siteNameLayout.getWidth();
                                                                                                    }
                                                                                                }
                                                                                                chatMessageCell.siteNameLeft = Math.min(chatMessageCell.siteNameLeft, lineLeft);
                                                                                                chatMessageCell.siteNameLayoutWidth = Math.max(chatMessageCell.siteNameLayoutWidth, chatMessageCell.siteNameLayout.getLineWidth(i165));
                                                                                                i165++;
                                                                                                str6 = str8;
                                                                                                max2 = i99;
                                                                                                tLRPC$Photo = tLRPC$Photo2;
                                                                                                tLRPC$Document3 = tLRPC$Document4;
                                                                                                webFile3 = webFile2;
                                                                                            } catch (Exception e2) {
                                                                                                e = e2;
                                                                                                max2 = i99;
                                                                                                FileLog.e(e);
                                                                                                i96 = 0;
                                                                                                if (str5 != null) {
                                                                                                }
                                                                                                if (str3 != null) {
                                                                                                }
                                                                                                if (z33) {
                                                                                                }
                                                                                                if (charSequence5 != null) {
                                                                                                }
                                                                                                int i1632 = i103;
                                                                                                if (str4 == null) {
                                                                                                }
                                                                                                if (z32) {
                                                                                                }
                                                                                                z35 = z32;
                                                                                                if (!z35) {
                                                                                                }
                                                                                                if (chatMessageCell.drawInstantViewType == 17) {
                                                                                                }
                                                                                                i7 = 0;
                                                                                                if (chatMessageCell.currentPosition == null) {
                                                                                                }
                                                                                                i8 = 5;
                                                                                                i11 = -1;
                                                                                                i12 = 8;
                                                                                                groupedMessagePosition = chatMessageCell.currentPosition;
                                                                                                if (groupedMessagePosition != null) {
                                                                                                }
                                                                                                int i1642 = chatMessageCell.widthBeforeNewTimeLine;
                                                                                                messageObject3 = chatMessageCell.currentMessageObject;
                                                                                                if (messageObject3.eventId == 0) {
                                                                                                }
                                                                                                f3 = 0.0f;
                                                                                                chatMessageCell.botButtons.clear();
                                                                                                if (z51) {
                                                                                                }
                                                                                                if (!messageObject2.isRestrictedMessage) {
                                                                                                }
                                                                                                chatMessageCell.substractBackgroundHeight = 0;
                                                                                                chatMessageCell.keyboardHeight = 0;
                                                                                                if (chatMessageCell.drawCommentButton) {
                                                                                                }
                                                                                                z12 = chatMessageCell.drawPinnedBottom;
                                                                                                if (z12) {
                                                                                                }
                                                                                                if (z12) {
                                                                                                }
                                                                                                if (!chatMessageCell.mediaBackground) {
                                                                                                }
                                                                                                if (messageObject2.type != 19) {
                                                                                                }
                                                                                                if (chatMessageCell.drawPhotoImage) {
                                                                                                }
                                                                                                if (chatMessageCell.documentAttachType != i8) {
                                                                                                }
                                                                                                calculateUnlockXY();
                                                                                                if (z9) {
                                                                                                }
                                                                                                updateAnimatedEmojis();
                                                                                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                                                if (stickerSetLinkIcon2 != null) {
                                                                                                }
                                                                                                r25 = 0;
                                                                                                if (z51) {
                                                                                                }
                                                                                                transcribeButton = chatMessageCell.transcribeButton;
                                                                                                if (transcribeButton != null) {
                                                                                                }
                                                                                                updateWaveform();
                                                                                                if (z51) {
                                                                                                }
                                                                                                z44 = true;
                                                                                                z45 = false;
                                                                                                z46 = false;
                                                                                                chatMessageCell.updateButtonState(z45, z46, z44);
                                                                                                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                                                }
                                                                                                chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                                                if (chatMessageCellDelegate2 != null) {
                                                                                                }
                                                                                                chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                                                chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                                                chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                                                chatMessageCell.highlightCaptionToSetStart = i11;
                                                                                                updateFlagSecure();
                                                                                            }
                                                                                        } catch (Exception e3) {
                                                                                            e = e3;
                                                                                            str8 = str6;
                                                                                            webFile2 = webFile3;
                                                                                            tLRPC$Document4 = tLRPC$Document3;
                                                                                            tLRPC$Photo2 = tLRPC$Photo;
                                                                                            FileLog.e(e);
                                                                                            i96 = 0;
                                                                                            if (str5 != null) {
                                                                                            }
                                                                                            if (str3 != null) {
                                                                                            }
                                                                                            if (z33) {
                                                                                            }
                                                                                            if (charSequence5 != null) {
                                                                                            }
                                                                                            int i16322 = i103;
                                                                                            if (str4 == null) {
                                                                                            }
                                                                                            if (z32) {
                                                                                            }
                                                                                            z35 = z32;
                                                                                            if (!z35) {
                                                                                            }
                                                                                            if (chatMessageCell.drawInstantViewType == 17) {
                                                                                            }
                                                                                            i7 = 0;
                                                                                            if (chatMessageCell.currentPosition == null) {
                                                                                            }
                                                                                            i8 = 5;
                                                                                            i11 = -1;
                                                                                            i12 = 8;
                                                                                            groupedMessagePosition = chatMessageCell.currentPosition;
                                                                                            if (groupedMessagePosition != null) {
                                                                                            }
                                                                                            int i16422 = chatMessageCell.widthBeforeNewTimeLine;
                                                                                            messageObject3 = chatMessageCell.currentMessageObject;
                                                                                            if (messageObject3.eventId == 0) {
                                                                                            }
                                                                                            f3 = 0.0f;
                                                                                            chatMessageCell.botButtons.clear();
                                                                                            if (z51) {
                                                                                            }
                                                                                            if (!messageObject2.isRestrictedMessage) {
                                                                                            }
                                                                                            chatMessageCell.substractBackgroundHeight = 0;
                                                                                            chatMessageCell.keyboardHeight = 0;
                                                                                            if (chatMessageCell.drawCommentButton) {
                                                                                            }
                                                                                            z12 = chatMessageCell.drawPinnedBottom;
                                                                                            if (z12) {
                                                                                            }
                                                                                            if (z12) {
                                                                                            }
                                                                                            if (!chatMessageCell.mediaBackground) {
                                                                                            }
                                                                                            if (messageObject2.type != 19) {
                                                                                            }
                                                                                            if (chatMessageCell.drawPhotoImage) {
                                                                                            }
                                                                                            if (chatMessageCell.documentAttachType != i8) {
                                                                                            }
                                                                                            calculateUnlockXY();
                                                                                            if (z9) {
                                                                                            }
                                                                                            updateAnimatedEmojis();
                                                                                            stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                                            if (stickerSetLinkIcon2 != null) {
                                                                                            }
                                                                                            r25 = 0;
                                                                                            if (z51) {
                                                                                            }
                                                                                            transcribeButton = chatMessageCell.transcribeButton;
                                                                                            if (transcribeButton != null) {
                                                                                            }
                                                                                            updateWaveform();
                                                                                            if (z51) {
                                                                                            }
                                                                                            z44 = true;
                                                                                            z45 = false;
                                                                                            z46 = false;
                                                                                            chatMessageCell.updateButtonState(z45, z46, z44);
                                                                                            if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                                            }
                                                                                            chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                                            if (chatMessageCellDelegate2 != null) {
                                                                                            }
                                                                                            chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                                            chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                                            chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                                            chatMessageCell.highlightCaptionToSetStart = i11;
                                                                                            updateFlagSecure();
                                                                                        }
                                                                                    }
                                                                                    int lineBottom = chatMessageCell.siteNameLayout.getLineBottom(cachedStaticLayout3.getLineCount() - 1);
                                                                                    chatMessageCell.linkPreviewHeight += lineBottom;
                                                                                    chatMessageCell.totalHeight += lineBottom;
                                                                                    str8 = str6;
                                                                                    int i166 = 0;
                                                                                    i98 = 0;
                                                                                    while (i166 < chatMessageCell.siteNameLayout.getLineCount()) {
                                                                                        try {
                                                                                            i99 = max2;
                                                                                            try {
                                                                                                int max6 = (int) Math.max(0.0f, chatMessageCell.siteNameLayout.getLineLeft(i166));
                                                                                                if (max6 != 0) {
                                                                                                    webFile2 = webFile3;
                                                                                                    tLRPC$Document4 = tLRPC$Document3;
                                                                                                    tLRPC$Photo2 = tLRPC$Photo;
                                                                                                    width = chatMessageCell.siteNameLayout.getWidth() - max6;
                                                                                                } else {
                                                                                                    try {
                                                                                                        if (i166 >= i97) {
                                                                                                            if (max6 == 0) {
                                                                                                            }
                                                                                                            i100 = i94;
                                                                                                            tLRPC$Document4 = tLRPC$Document3;
                                                                                                            tLRPC$Photo2 = tLRPC$Photo;
                                                                                                            webFile2 = webFile3;
                                                                                                            width = (int) Math.min(i100, Math.ceil(chatMessageCell.siteNameLayout.getLineWidth(i166)));
                                                                                                        }
                                                                                                        webFile2 = webFile3;
                                                                                                        width = (int) Math.min(i100, Math.ceil(chatMessageCell.siteNameLayout.getLineWidth(i166)));
                                                                                                    } catch (Exception e4) {
                                                                                                        e = e4;
                                                                                                        webFile2 = webFile3;
                                                                                                        max2 = i99;
                                                                                                        FileLog.e(e);
                                                                                                        i96 = 0;
                                                                                                        if (str5 != null) {
                                                                                                        }
                                                                                                        if (str3 != null) {
                                                                                                        }
                                                                                                        if (z33) {
                                                                                                        }
                                                                                                        if (charSequence5 != null) {
                                                                                                        }
                                                                                                        int i163222 = i103;
                                                                                                        if (str4 == null) {
                                                                                                        }
                                                                                                        if (z32) {
                                                                                                        }
                                                                                                        z35 = z32;
                                                                                                        if (!z35) {
                                                                                                        }
                                                                                                        if (chatMessageCell.drawInstantViewType == 17) {
                                                                                                        }
                                                                                                        i7 = 0;
                                                                                                        if (chatMessageCell.currentPosition == null) {
                                                                                                        }
                                                                                                        i8 = 5;
                                                                                                        i11 = -1;
                                                                                                        i12 = 8;
                                                                                                        groupedMessagePosition = chatMessageCell.currentPosition;
                                                                                                        if (groupedMessagePosition != null) {
                                                                                                        }
                                                                                                        int i164222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                                                        messageObject3 = chatMessageCell.currentMessageObject;
                                                                                                        if (messageObject3.eventId == 0) {
                                                                                                        }
                                                                                                        f3 = 0.0f;
                                                                                                        chatMessageCell.botButtons.clear();
                                                                                                        if (z51) {
                                                                                                        }
                                                                                                        if (!messageObject2.isRestrictedMessage) {
                                                                                                        }
                                                                                                        chatMessageCell.substractBackgroundHeight = 0;
                                                                                                        chatMessageCell.keyboardHeight = 0;
                                                                                                        if (chatMessageCell.drawCommentButton) {
                                                                                                        }
                                                                                                        z12 = chatMessageCell.drawPinnedBottom;
                                                                                                        if (z12) {
                                                                                                        }
                                                                                                        if (z12) {
                                                                                                        }
                                                                                                        if (!chatMessageCell.mediaBackground) {
                                                                                                        }
                                                                                                        if (messageObject2.type != 19) {
                                                                                                        }
                                                                                                        if (chatMessageCell.drawPhotoImage) {
                                                                                                        }
                                                                                                        if (chatMessageCell.documentAttachType != i8) {
                                                                                                        }
                                                                                                        calculateUnlockXY();
                                                                                                        if (z9) {
                                                                                                        }
                                                                                                        updateAnimatedEmojis();
                                                                                                        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                                                        if (stickerSetLinkIcon2 != null) {
                                                                                                        }
                                                                                                        r25 = 0;
                                                                                                        if (z51) {
                                                                                                        }
                                                                                                        transcribeButton = chatMessageCell.transcribeButton;
                                                                                                        if (transcribeButton != null) {
                                                                                                        }
                                                                                                        updateWaveform();
                                                                                                        if (z51) {
                                                                                                        }
                                                                                                        z44 = true;
                                                                                                        z45 = false;
                                                                                                        z46 = false;
                                                                                                        chatMessageCell.updateButtonState(z45, z46, z44);
                                                                                                        if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                                                        }
                                                                                                        chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                                                        if (chatMessageCellDelegate2 != null) {
                                                                                                        }
                                                                                                        chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                                                        chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                                                        chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                                                        chatMessageCell.highlightCaptionToSetStart = i11;
                                                                                                        updateFlagSecure();
                                                                                                    }
                                                                                                    i100 = i94 - (dp21 + dp22);
                                                                                                    tLRPC$Document4 = tLRPC$Document3;
                                                                                                    tLRPC$Photo2 = tLRPC$Photo;
                                                                                                }
                                                                                                if (i166 >= i97) {
                                                                                                    if (max6 != 0) {
                                                                                                        if (!chatMessageCell.isSmallImage) {
                                                                                                        }
                                                                                                    }
                                                                                                    i98 = Math.max(i98, width);
                                                                                                    i166++;
                                                                                                    max2 = i99;
                                                                                                    tLRPC$Photo = tLRPC$Photo2;
                                                                                                    tLRPC$Document3 = tLRPC$Document4;
                                                                                                    webFile3 = webFile2;
                                                                                                }
                                                                                                width += dp21 + dp22;
                                                                                                i98 = Math.max(i98, width);
                                                                                                i166++;
                                                                                                max2 = i99;
                                                                                                tLRPC$Photo = tLRPC$Photo2;
                                                                                                tLRPC$Document3 = tLRPC$Document4;
                                                                                                webFile3 = webFile2;
                                                                                            } catch (Exception e5) {
                                                                                                e = e5;
                                                                                                webFile2 = webFile3;
                                                                                                tLRPC$Document4 = tLRPC$Document3;
                                                                                                tLRPC$Photo2 = tLRPC$Photo;
                                                                                            }
                                                                                        } catch (Exception e6) {
                                                                                            e = e6;
                                                                                        }
                                                                                    }
                                                                                } catch (Exception e7) {
                                                                                    e = e7;
                                                                                    i95 = lineCount;
                                                                                }
                                                                            } catch (Exception e8) {
                                                                                e = e8;
                                                                            }
                                                                        } catch (Exception e9) {
                                                                            e = e9;
                                                                            webFile2 = webFile;
                                                                            str8 = str6;
                                                                        }
                                                                        try {
                                                                            chatMessageCell.siteNameWidth = i98;
                                                                            int i167 = i98 + i93;
                                                                            max2 = Math.max(max2, i167);
                                                                            webFile2 = webFile3;
                                                                            tLRPC$Document4 = tLRPC$Document3;
                                                                            tLRPC$Photo2 = tLRPC$Photo;
                                                                            i96 = Math.max(0, i167);
                                                                        } catch (Exception e10) {
                                                                            e = e10;
                                                                            webFile2 = webFile3;
                                                                            tLRPC$Document4 = tLRPC$Document3;
                                                                            tLRPC$Photo2 = tLRPC$Photo;
                                                                            FileLog.e(e);
                                                                            i96 = 0;
                                                                            if (str5 != null) {
                                                                            }
                                                                            if (str3 != null) {
                                                                            }
                                                                            if (z33) {
                                                                            }
                                                                            if (charSequence5 != null) {
                                                                            }
                                                                            int i1632222 = i103;
                                                                            if (str4 == null) {
                                                                            }
                                                                            if (z32) {
                                                                            }
                                                                            z35 = z32;
                                                                            if (!z35) {
                                                                            }
                                                                            if (chatMessageCell.drawInstantViewType == 17) {
                                                                            }
                                                                            i7 = 0;
                                                                            if (chatMessageCell.currentPosition == null) {
                                                                            }
                                                                            i8 = 5;
                                                                            i11 = -1;
                                                                            i12 = 8;
                                                                            groupedMessagePosition = chatMessageCell.currentPosition;
                                                                            if (groupedMessagePosition != null) {
                                                                            }
                                                                            int i1642222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                            messageObject3 = chatMessageCell.currentMessageObject;
                                                                            if (messageObject3.eventId == 0) {
                                                                            }
                                                                            f3 = 0.0f;
                                                                            chatMessageCell.botButtons.clear();
                                                                            if (z51) {
                                                                            }
                                                                            if (!messageObject2.isRestrictedMessage) {
                                                                            }
                                                                            chatMessageCell.substractBackgroundHeight = 0;
                                                                            chatMessageCell.keyboardHeight = 0;
                                                                            if (chatMessageCell.drawCommentButton) {
                                                                            }
                                                                            z12 = chatMessageCell.drawPinnedBottom;
                                                                            if (z12) {
                                                                            }
                                                                            if (z12) {
                                                                            }
                                                                            if (!chatMessageCell.mediaBackground) {
                                                                            }
                                                                            if (messageObject2.type != 19) {
                                                                            }
                                                                            if (chatMessageCell.drawPhotoImage) {
                                                                            }
                                                                            if (chatMessageCell.documentAttachType != i8) {
                                                                            }
                                                                            calculateUnlockXY();
                                                                            if (z9) {
                                                                            }
                                                                            updateAnimatedEmojis();
                                                                            stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                            if (stickerSetLinkIcon2 != null) {
                                                                            }
                                                                            r25 = 0;
                                                                            if (z51) {
                                                                            }
                                                                            transcribeButton = chatMessageCell.transcribeButton;
                                                                            if (transcribeButton != null) {
                                                                            }
                                                                            updateWaveform();
                                                                            if (z51) {
                                                                            }
                                                                            z44 = true;
                                                                            z45 = false;
                                                                            z46 = false;
                                                                            chatMessageCell.updateButtonState(z45, z46, z44);
                                                                            if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                            }
                                                                            chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                            if (chatMessageCellDelegate2 != null) {
                                                                            }
                                                                            chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                            chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                            chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                            chatMessageCell.highlightCaptionToSetStart = i11;
                                                                            updateFlagSecure();
                                                                        }
                                                                    }
                                                                    if (str5 != null) {
                                                                        try {
                                                                            int ceil6 = (int) Math.ceil(Theme.chat_titleLabelTextPaint.measureText(str5.toString()));
                                                                            CachedStaticLayout cachedStaticLayout5 = new CachedStaticLayout(new StaticLayout(str5, Theme.chat_titleLabelTextPaint, Math.min(ceil6, i94), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                            chatMessageCell.titleLabelLayout = cachedStaticLayout5;
                                                                            chatMessageCell.titleLabelLayoutWidth = cachedStaticLayout5.getLineWidth(0);
                                                                            chatMessageCell.titleLabelLayoutHeight = chatMessageCell.titleLabelLayout.getLineBottom(0);
                                                                            max2 = Math.max(max2, chatMessageCell.siteNameWidth + ceil6 + i93);
                                                                            i96 = Math.max(i96, chatMessageCell.siteNameWidth + ceil6 + i93);
                                                                        } catch (Exception e11) {
                                                                            FileLog.e(e11);
                                                                        }
                                                                    }
                                                                    if (str3 != null) {
                                                                        i102 = i96;
                                                                        i103 = i95;
                                                                        z33 = false;
                                                                    } else {
                                                                        try {
                                                                            int i168 = chatMessageCell.linkPreviewHeight;
                                                                            if (i168 != 0) {
                                                                                chatMessageCell.linkPreviewHeight = i168 + AndroidUtilities.dp(2.0f);
                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(2.0f);
                                                                            }
                                                                            try {
                                                                                str9 = Emoji.replaceEmoji((CharSequence) str3, Theme.chat_replyNamePaint.getFontMetricsInt(), AndroidUtilities.dp(14.0f), false);
                                                                            } catch (Exception unused) {
                                                                                str9 = str3;
                                                                            }
                                                                            int i169 = !chatMessageCell.currentMessageObject.isRepostPreview ? 4 : 1;
                                                                            if (!chatMessageCell.isSmallImage) {
                                                                                chatMessageCell.titleLayout = new CachedStaticLayout(StaticLayoutEx.createStaticLayout(str9, Theme.chat_replyNamePaint, i94, Layout.Alignment.ALIGN_NORMAL, 1.0f, AndroidUtilities.dp(1.0f), false, TextUtils.TruncateAt.END, i94, i169));
                                                                                i104 = 0;
                                                                                i105 = 0;
                                                                            } else {
                                                                                CachedStaticLayout cachedStaticLayout6 = new CachedStaticLayout(generateStaticLayout(str9, Theme.chat_replyNamePaint, i94, (i94 - dp21) - dp22, i95, i169));
                                                                                chatMessageCell.titleLayout = cachedStaticLayout6;
                                                                                i105 = 0;
                                                                                int i170 = i95;
                                                                                i95 -= cachedStaticLayout6.getLineCount();
                                                                                i104 = i170;
                                                                            }
                                                                            chatMessageCell.titleLayoutWidth = i105;
                                                                            chatMessageCell.titleLayoutLeft = chatMessageCell.titleLayout.getWidth();
                                                                            for (int i171 = 0; i171 < chatMessageCell.titleLayout.getLineCount(); i171++) {
                                                                                chatMessageCell.titleLayoutLeft = (int) Math.min(chatMessageCell.titleLayoutLeft, chatMessageCell.titleLayout.getLineLeft(i171));
                                                                                float lineWidth = chatMessageCell.titleLayout.getLineWidth(i171);
                                                                                if (i171 >= i104) {
                                                                                    if (chatMessageCell.titleLayoutLeft != 0) {
                                                                                        if (!chatMessageCell.isSmallImage) {
                                                                                        }
                                                                                    }
                                                                                    chatMessageCell.titleLayoutWidth = (int) Math.max(chatMessageCell.titleLayoutWidth, lineWidth);
                                                                                }
                                                                                lineWidth += dp21 + dp22;
                                                                                chatMessageCell.titleLayoutWidth = (int) Math.max(chatMessageCell.titleLayoutWidth, lineWidth);
                                                                            }
                                                                            max2 = Math.max(max2, chatMessageCell.titleLayoutWidth + i93);
                                                                            i96 = Math.max(i96, chatMessageCell.titleLayoutWidth + i93);
                                                                            boolean z60 = chatMessageCell.titleLayoutLeft != 0;
                                                                            try {
                                                                                CachedStaticLayout cachedStaticLayout7 = chatMessageCell.titleLayout;
                                                                                int lineBottom2 = cachedStaticLayout7.getLineBottom(cachedStaticLayout7.getLineCount() - 1);
                                                                                chatMessageCell.linkPreviewHeight += lineBottom2;
                                                                                chatMessageCell.totalHeight += lineBottom2;
                                                                                i102 = i96;
                                                                                z33 = z60;
                                                                            } catch (Exception e12) {
                                                                                exc = e12;
                                                                                i101 = i96;
                                                                                z33 = z60;
                                                                                FileLog.e(exc);
                                                                                i102 = i101;
                                                                                i103 = i95;
                                                                                if (z33) {
                                                                                }
                                                                                if (charSequence5 != null) {
                                                                                }
                                                                                int i16322222 = i103;
                                                                                if (str4 == null) {
                                                                                }
                                                                                if (z32) {
                                                                                }
                                                                                z35 = z32;
                                                                                if (!z35) {
                                                                                }
                                                                                if (chatMessageCell.drawInstantViewType == 17) {
                                                                                }
                                                                                i7 = 0;
                                                                                if (chatMessageCell.currentPosition == null) {
                                                                                }
                                                                                i8 = 5;
                                                                                i11 = -1;
                                                                                i12 = 8;
                                                                                groupedMessagePosition = chatMessageCell.currentPosition;
                                                                                if (groupedMessagePosition != null) {
                                                                                }
                                                                                int i16422222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                                messageObject3 = chatMessageCell.currentMessageObject;
                                                                                if (messageObject3.eventId == 0) {
                                                                                }
                                                                                f3 = 0.0f;
                                                                                chatMessageCell.botButtons.clear();
                                                                                if (z51) {
                                                                                }
                                                                                if (!messageObject2.isRestrictedMessage) {
                                                                                }
                                                                                chatMessageCell.substractBackgroundHeight = 0;
                                                                                chatMessageCell.keyboardHeight = 0;
                                                                                if (chatMessageCell.drawCommentButton) {
                                                                                }
                                                                                z12 = chatMessageCell.drawPinnedBottom;
                                                                                if (z12) {
                                                                                }
                                                                                if (z12) {
                                                                                }
                                                                                if (!chatMessageCell.mediaBackground) {
                                                                                }
                                                                                if (messageObject2.type != 19) {
                                                                                }
                                                                                if (chatMessageCell.drawPhotoImage) {
                                                                                }
                                                                                if (chatMessageCell.documentAttachType != i8) {
                                                                                }
                                                                                calculateUnlockXY();
                                                                                if (z9) {
                                                                                }
                                                                                updateAnimatedEmojis();
                                                                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                                if (stickerSetLinkIcon2 != null) {
                                                                                }
                                                                                r25 = 0;
                                                                                if (z51) {
                                                                                }
                                                                                transcribeButton = chatMessageCell.transcribeButton;
                                                                                if (transcribeButton != null) {
                                                                                }
                                                                                updateWaveform();
                                                                                if (z51) {
                                                                                }
                                                                                z44 = true;
                                                                                z45 = false;
                                                                                z46 = false;
                                                                                chatMessageCell.updateButtonState(z45, z46, z44);
                                                                                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                                }
                                                                                chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                                if (chatMessageCellDelegate2 != null) {
                                                                                }
                                                                                chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                                chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                                chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                                chatMessageCell.highlightCaptionToSetStart = i11;
                                                                                updateFlagSecure();
                                                                            }
                                                                        } catch (Exception e13) {
                                                                            exc = e13;
                                                                            i101 = i96;
                                                                            z33 = false;
                                                                        }
                                                                        i103 = i95;
                                                                    }
                                                                    if (z33 && chatMessageCell.isSmallImage) {
                                                                        i94 -= AndroidUtilities.dp(48.0f);
                                                                    }
                                                                    if (charSequence5 != null && str3 == null) {
                                                                        try {
                                                                            i129 = chatMessageCell.linkPreviewHeight;
                                                                            if (i129 == 0) {
                                                                                chatMessageCell.linkPreviewHeight = i129 + AndroidUtilities.dp(2.0f);
                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(2.0f);
                                                                            }
                                                                            try {
                                                                                charSequence5 = Emoji.replaceEmoji(charSequence5, Theme.chat_replyNamePaint.getFontMetricsInt(), AndroidUtilities.dp(14.0f), false);
                                                                            } catch (Exception unused2) {
                                                                            }
                                                                            charSequence7 = charSequence5;
                                                                            if (i103 == 3 || (chatMessageCell.isSmallImage && str4 != null)) {
                                                                                CachedStaticLayout cachedStaticLayout8 = new CachedStaticLayout(generateStaticLayout(charSequence7, Theme.chat_replyNamePaint, i94, (i94 - dp21) - dp22, i103, 1));
                                                                                chatMessageCell.authorLayout = cachedStaticLayout8;
                                                                                i103 -= cachedStaticLayout8.getLineCount();
                                                                                chatMessageCell.authorLayoutLeft = chatMessageCell.authorLayout.getWidth();
                                                                                chatMessageCell.authorLayoutWidth = 0;
                                                                                for (i130 = 0; i130 < chatMessageCell.authorLayout.getLineCount(); i130++) {
                                                                                    int lineLeft2 = (int) chatMessageCell.authorLayout.getLineLeft(i130);
                                                                                    if (i130 > 0) {
                                                                                        if ((chatMessageCell.authorLayoutLeft == 0) != (lineLeft2 == 0)) {
                                                                                            chatMessageCell.authorLayoutWidth = chatMessageCell.authorLayout.getWidth();
                                                                                        }
                                                                                    }
                                                                                    chatMessageCell.authorLayoutLeft = Math.min(chatMessageCell.authorLayoutLeft, lineLeft2);
                                                                                    chatMessageCell.authorLayoutWidth = (int) Math.max(chatMessageCell.authorLayoutWidth, chatMessageCell.authorLayout.getLineWidth(i130));
                                                                                }
                                                                                CachedStaticLayout cachedStaticLayout9 = chatMessageCell.authorLayout;
                                                                                int lineBottom3 = cachedStaticLayout9.getLineBottom(cachedStaticLayout9.getLineCount() - 1);
                                                                                chatMessageCell.linkPreviewHeight += lineBottom3;
                                                                                chatMessageCell.totalHeight += lineBottom3;
                                                                                max2 = Math.max(max2, chatMessageCell.authorLayoutWidth + i93);
                                                                                Math.max(i102, chatMessageCell.authorLayoutWidth + i93);
                                                                            }
                                                                            chatMessageCell.authorLayout = new CachedStaticLayout(new StaticLayout(charSequence7, Theme.chat_replyNamePaint, i94, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                            chatMessageCell.authorLayoutLeft = chatMessageCell.authorLayout.getWidth();
                                                                            chatMessageCell.authorLayoutWidth = 0;
                                                                            while (i130 < chatMessageCell.authorLayout.getLineCount()) {
                                                                            }
                                                                            CachedStaticLayout cachedStaticLayout92 = chatMessageCell.authorLayout;
                                                                            int lineBottom32 = cachedStaticLayout92.getLineBottom(cachedStaticLayout92.getLineCount() - 1);
                                                                            chatMessageCell.linkPreviewHeight += lineBottom32;
                                                                            chatMessageCell.totalHeight += lineBottom32;
                                                                            max2 = Math.max(max2, chatMessageCell.authorLayoutWidth + i93);
                                                                            Math.max(i102, chatMessageCell.authorLayoutWidth + i93);
                                                                        } catch (Exception e14) {
                                                                            FileLog.e(e14);
                                                                        }
                                                                    }
                                                                    int i163222222 = i103;
                                                                    if (str4 == null) {
                                                                        messageObject14 = messageObject;
                                                                    } else {
                                                                        try {
                                                                            chatMessageCell.descriptionX = 0;
                                                                            chatMessageCell.currentMessageObject.generateLinkDescription();
                                                                            int i172 = chatMessageCell.linkPreviewHeight;
                                                                            if (i172 != 0) {
                                                                                chatMessageCell.linkPreviewHeight = i172 + AndroidUtilities.dp(2.0f);
                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(2.0f);
                                                                            }
                                                                            if (str7 != null) {
                                                                                if (str7.toString().toLowerCase().equals("twitter")) {
                                                                                    z34 = true;
                                                                                    messageObject14 = messageObject;
                                                                                    if (charSequence4 != null) {
                                                                                        try {
                                                                                            charSequence6 = messageObject14.linkDescription;
                                                                                        } catch (Exception e15) {
                                                                                            e = e15;
                                                                                            FileLog.e(e);
                                                                                            if (z32) {
                                                                                            }
                                                                                            z35 = z32;
                                                                                            if (!z35) {
                                                                                            }
                                                                                            if (chatMessageCell.drawInstantViewType == 17) {
                                                                                            }
                                                                                            i7 = 0;
                                                                                            if (chatMessageCell.currentPosition == null) {
                                                                                            }
                                                                                            i8 = 5;
                                                                                            i11 = -1;
                                                                                            i12 = 8;
                                                                                            groupedMessagePosition = chatMessageCell.currentPosition;
                                                                                            if (groupedMessagePosition != null) {
                                                                                            }
                                                                                            int i164222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                                            messageObject3 = chatMessageCell.currentMessageObject;
                                                                                            if (messageObject3.eventId == 0) {
                                                                                            }
                                                                                            f3 = 0.0f;
                                                                                            chatMessageCell.botButtons.clear();
                                                                                            if (z51) {
                                                                                            }
                                                                                            if (!messageObject2.isRestrictedMessage) {
                                                                                            }
                                                                                            chatMessageCell.substractBackgroundHeight = 0;
                                                                                            chatMessageCell.keyboardHeight = 0;
                                                                                            if (chatMessageCell.drawCommentButton) {
                                                                                            }
                                                                                            z12 = chatMessageCell.drawPinnedBottom;
                                                                                            if (z12) {
                                                                                            }
                                                                                            if (z12) {
                                                                                            }
                                                                                            if (!chatMessageCell.mediaBackground) {
                                                                                            }
                                                                                            if (messageObject2.type != 19) {
                                                                                            }
                                                                                            if (chatMessageCell.drawPhotoImage) {
                                                                                            }
                                                                                            if (chatMessageCell.documentAttachType != i8) {
                                                                                            }
                                                                                            calculateUnlockXY();
                                                                                            if (z9) {
                                                                                            }
                                                                                            updateAnimatedEmojis();
                                                                                            stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                                            if (stickerSetLinkIcon2 != null) {
                                                                                            }
                                                                                            r25 = 0;
                                                                                            if (z51) {
                                                                                            }
                                                                                            transcribeButton = chatMessageCell.transcribeButton;
                                                                                            if (transcribeButton != null) {
                                                                                            }
                                                                                            updateWaveform();
                                                                                            if (z51) {
                                                                                            }
                                                                                            z44 = true;
                                                                                            z45 = false;
                                                                                            z46 = false;
                                                                                            chatMessageCell.updateButtonState(z45, z46, z44);
                                                                                            if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                                            }
                                                                                            chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                                            if (chatMessageCellDelegate2 != null) {
                                                                                            }
                                                                                            chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                                            chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                                            chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                                            chatMessageCell.highlightCaptionToSetStart = i11;
                                                                                            updateFlagSecure();
                                                                                        }
                                                                                    } else {
                                                                                        charSequence6 = charSequence4;
                                                                                    }
                                                                                    boolean isRTL = AndroidUtilities.isRTL(charSequence6);
                                                                                    if (!z34) {
                                                                                        i106 = 3;
                                                                                        i107 = 100;
                                                                                    } else if (chatMessageCell.currentMessageObject.isRepostPreview) {
                                                                                        i106 = 3;
                                                                                        i107 = 3;
                                                                                    } else {
                                                                                        i106 = 3;
                                                                                        i107 = 6;
                                                                                    }
                                                                                    if (i163222222 == i106 && !chatMessageCell.isSmallImage) {
                                                                                        chatMessageCell.descriptionLayout = new CachedStaticLayout(StaticLayoutEx.createStaticLayout(charSequence6, Theme.chat_replyTextPaint, i94, Layout.Alignment.ALIGN_NORMAL, 1.0f, AndroidUtilities.dp(1.0f), false, TextUtils.TruncateAt.END, i94, i107));
                                                                                        i163222222 = 0;
                                                                                        chatMessageCell.animatedEmojiDescriptionStack = AnimatedEmojiSpan.update(0, (View) chatMessageCell, false, chatMessageCell.animatedEmojiDescriptionStack, chatMessageCell.descriptionLayout.layout);
                                                                                        StaticLayout staticLayout = chatMessageCell.descriptionLayout.layout;
                                                                                        int lineBottom4 = staticLayout.getLineBottom(staticLayout.getLineCount() - 1);
                                                                                        chatMessageCell.linkPreviewHeight += lineBottom4;
                                                                                        chatMessageCell.totalHeight += lineBottom4;
                                                                                        chatMessageCell.descriptionLayoutWidth = 0;
                                                                                        int width3 = chatMessageCell.descriptionLayout.layout.getWidth();
                                                                                        int i173 = 0;
                                                                                        for (i108 = 0; i108 < chatMessageCell.descriptionLayout.layout.getLineCount(); i108++) {
                                                                                            width3 = (int) Math.min(width3, chatMessageCell.descriptionLayout.layout.getLineLeft(i108));
                                                                                            if (i108 >= i163222222) {
                                                                                                if (i163222222 != 0) {
                                                                                                    if (width3 == 0) {
                                                                                                    }
                                                                                                }
                                                                                                i109 = 0;
                                                                                                i173 = (int) Math.max(i173, chatMessageCell.descriptionLayout.layout.getLineRight(i108) + i109);
                                                                                            }
                                                                                            i109 = dp21 + dp22;
                                                                                            i173 = (int) Math.max(i173, chatMessageCell.descriptionLayout.layout.getLineRight(i108) + i109);
                                                                                        }
                                                                                        int abs = Math.abs(i173 - width3);
                                                                                        chatMessageCell.descriptionLayoutWidth = abs;
                                                                                        chatMessageCell.descriptionLayoutLeft = width3;
                                                                                        int i174 = abs + i93;
                                                                                        max2 = Math.max(max2, abs + i93);
                                                                                    }
                                                                                    chatMessageCell.descriptionLayout = new CachedStaticLayout(generateStaticLayout(charSequence6, Theme.chat_replyTextPaint, i94 - (isRTL ? 0 : (dp22 * 2) + dp21), (i94 - dp21) - (dp22 * 2), i163222222, i107));
                                                                                    chatMessageCell.animatedEmojiDescriptionStack = AnimatedEmojiSpan.update(0, (View) chatMessageCell, false, chatMessageCell.animatedEmojiDescriptionStack, chatMessageCell.descriptionLayout.layout);
                                                                                    StaticLayout staticLayout2 = chatMessageCell.descriptionLayout.layout;
                                                                                    int lineBottom42 = staticLayout2.getLineBottom(staticLayout2.getLineCount() - 1);
                                                                                    chatMessageCell.linkPreviewHeight += lineBottom42;
                                                                                    chatMessageCell.totalHeight += lineBottom42;
                                                                                    chatMessageCell.descriptionLayoutWidth = 0;
                                                                                    int width32 = chatMessageCell.descriptionLayout.layout.getWidth();
                                                                                    int i1732 = 0;
                                                                                    while (i108 < chatMessageCell.descriptionLayout.layout.getLineCount()) {
                                                                                    }
                                                                                    int abs2 = Math.abs(i1732 - width32);
                                                                                    chatMessageCell.descriptionLayoutWidth = abs2;
                                                                                    chatMessageCell.descriptionLayoutLeft = width32;
                                                                                    int i1742 = abs2 + i93;
                                                                                    max2 = Math.max(max2, abs2 + i93);
                                                                                }
                                                                            }
                                                                            z34 = false;
                                                                            messageObject14 = messageObject;
                                                                            if (charSequence4 != null) {
                                                                            }
                                                                            boolean isRTL2 = AndroidUtilities.isRTL(charSequence6);
                                                                            if (!z34) {
                                                                            }
                                                                            if (i163222222 == i106) {
                                                                                chatMessageCell.descriptionLayout = new CachedStaticLayout(StaticLayoutEx.createStaticLayout(charSequence6, Theme.chat_replyTextPaint, i94, Layout.Alignment.ALIGN_NORMAL, 1.0f, AndroidUtilities.dp(1.0f), false, TextUtils.TruncateAt.END, i94, i107));
                                                                                i163222222 = 0;
                                                                                chatMessageCell.animatedEmojiDescriptionStack = AnimatedEmojiSpan.update(0, (View) chatMessageCell, false, chatMessageCell.animatedEmojiDescriptionStack, chatMessageCell.descriptionLayout.layout);
                                                                                StaticLayout staticLayout22 = chatMessageCell.descriptionLayout.layout;
                                                                                int lineBottom422 = staticLayout22.getLineBottom(staticLayout22.getLineCount() - 1);
                                                                                chatMessageCell.linkPreviewHeight += lineBottom422;
                                                                                chatMessageCell.totalHeight += lineBottom422;
                                                                                chatMessageCell.descriptionLayoutWidth = 0;
                                                                                int width322 = chatMessageCell.descriptionLayout.layout.getWidth();
                                                                                int i17322 = 0;
                                                                                while (i108 < chatMessageCell.descriptionLayout.layout.getLineCount()) {
                                                                                }
                                                                                int abs22 = Math.abs(i17322 - width322);
                                                                                chatMessageCell.descriptionLayoutWidth = abs22;
                                                                                chatMessageCell.descriptionLayoutLeft = width322;
                                                                                int i17422 = abs22 + i93;
                                                                                max2 = Math.max(max2, abs22 + i93);
                                                                            }
                                                                            chatMessageCell.descriptionLayout = new CachedStaticLayout(generateStaticLayout(charSequence6, Theme.chat_replyTextPaint, i94 - (isRTL2 ? 0 : (dp22 * 2) + dp21), (i94 - dp21) - (dp22 * 2), i163222222, i107));
                                                                            chatMessageCell.animatedEmojiDescriptionStack = AnimatedEmojiSpan.update(0, (View) chatMessageCell, false, chatMessageCell.animatedEmojiDescriptionStack, chatMessageCell.descriptionLayout.layout);
                                                                            StaticLayout staticLayout222 = chatMessageCell.descriptionLayout.layout;
                                                                            int lineBottom4222 = staticLayout222.getLineBottom(staticLayout222.getLineCount() - 1);
                                                                            chatMessageCell.linkPreviewHeight += lineBottom4222;
                                                                            chatMessageCell.totalHeight += lineBottom4222;
                                                                            chatMessageCell.descriptionLayoutWidth = 0;
                                                                            int width3222 = chatMessageCell.descriptionLayout.layout.getWidth();
                                                                            int i173222 = 0;
                                                                            while (i108 < chatMessageCell.descriptionLayout.layout.getLineCount()) {
                                                                            }
                                                                            int abs222 = Math.abs(i173222 - width3222);
                                                                            chatMessageCell.descriptionLayoutWidth = abs222;
                                                                            chatMessageCell.descriptionLayoutLeft = width3222;
                                                                            int i174222 = abs222 + i93;
                                                                            max2 = Math.max(max2, abs222 + i93);
                                                                        } catch (Exception e16) {
                                                                            e = e16;
                                                                            messageObject14 = messageObject;
                                                                        }
                                                                    }
                                                                    if (z32 && chatMessageCell.descriptionLayout == null && chatMessageCell.titleLayout == null) {
                                                                        chatMessageCell.isSmallImage = false;
                                                                        z35 = false;
                                                                    } else {
                                                                        z35 = z32;
                                                                    }
                                                                    if (!z35) {
                                                                        dp21 = i94;
                                                                    }
                                                                    if (chatMessageCell.drawInstantViewType == 17) {
                                                                        i110 = extraTimeX;
                                                                        i111 = i153;
                                                                        str10 = str8;
                                                                        tLRPC$Photo3 = tLRPC$Photo2;
                                                                        tLRPC$Document5 = tLRPC$Document4;
                                                                        webFile4 = webFile2;
                                                                        if (tL_stories$StoryItem4 != null && (tLRPC$MessageMedia = (tL_stories$StoryItem5 = tL_stories$StoryItem4).media) != null) {
                                                                            int i175 = (int) ((dp21 * 16.0f) / 9.0f);
                                                                            TLRPC$Document tLRPC$Document11 = tLRPC$MessageMedia.document;
                                                                            if (tLRPC$Document11 != null) {
                                                                                chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document11.thumbs, i175);
                                                                                BitmapDrawable bitmapDrawable3 = chatMessageCell.currentMessageObject.strippedThumb;
                                                                                if (bitmapDrawable3 == null) {
                                                                                    chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document11.thumbs, 40);
                                                                                } else {
                                                                                    chatMessageCell.currentPhotoObjectThumbStripped = bitmapDrawable3;
                                                                                }
                                                                                TLRPC$PhotoSize tLRPC$PhotoSize10 = chatMessageCell.currentPhotoObject;
                                                                                if (tLRPC$PhotoSize10 != null && (tLRPC$PhotoSize10.w == 0 || tLRPC$PhotoSize10.h == 0)) {
                                                                                    int i176 = 0;
                                                                                    while (true) {
                                                                                        if (i176 >= tLRPC$Document11.attributes.size()) {
                                                                                            break;
                                                                                        }
                                                                                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$Document11.attributes.get(i176);
                                                                                        if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeImageSize) {
                                                                                            TLRPC$PhotoSize tLRPC$PhotoSize11 = chatMessageCell.currentPhotoObject;
                                                                                            tLRPC$PhotoSize11.w = tLRPC$DocumentAttribute.w;
                                                                                            tLRPC$PhotoSize11.h = tLRPC$DocumentAttribute.h;
                                                                                            break;
                                                                                        }
                                                                                        i176++;
                                                                                    }
                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize12 = chatMessageCell.currentPhotoObject;
                                                                                    if (tLRPC$PhotoSize12.w == 0 || tLRPC$PhotoSize12.h == 0) {
                                                                                        tLRPC$PhotoSize12.w = AndroidUtilities.dp(150.0f);
                                                                                        chatMessageCell.currentPhotoObject.h = (int) ((tLRPC$PhotoSize7.w / 9.0f) * 16.0f);
                                                                                    }
                                                                                }
                                                                                chatMessageCell.documentAttach = tLRPC$Document11;
                                                                                tLRPC$Document6 = tLRPC$Document11;
                                                                            } else {
                                                                                TLRPC$Photo tLRPC$Photo7 = tLRPC$MessageMedia.photo;
                                                                                if (tLRPC$Photo7 != null) {
                                                                                    chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo7.sizes, i175);
                                                                                    BitmapDrawable bitmapDrawable4 = chatMessageCell.currentMessageObject.strippedThumb;
                                                                                    if (bitmapDrawable4 == null) {
                                                                                        chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo7.sizes, 40);
                                                                                    } else {
                                                                                        chatMessageCell.currentPhotoObjectThumbStripped = bitmapDrawable4;
                                                                                    }
                                                                                    tLRPC$Photo3 = tLRPC$Photo7;
                                                                                }
                                                                                tLRPC$Document6 = tLRPC$Document5;
                                                                            }
                                                                            chatMessageCell.photoParentObject = tL_stories$StoryItem5;
                                                                            chatMessageCell.documentAttachType = 10;
                                                                            i112 = chatMessageCell.documentAttachType;
                                                                            if (i112 == 5) {
                                                                            }
                                                                            messageObject2 = messageObject14;
                                                                            i5 = 3;
                                                                            i6 = 20;
                                                                            i149 = 2;
                                                                            i = 4;
                                                                            z9 = true;
                                                                            f2 = 1.0f;
                                                                            if (!chatMessageCell.hasInvoicePreview) {
                                                                            }
                                                                            if (!chatMessageCell.hasInvoicePreview) {
                                                                            }
                                                                            chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                            createInstantViewButton();
                                                                        }
                                                                        tLRPC$Document6 = tLRPC$Document5;
                                                                        i112 = chatMessageCell.documentAttachType;
                                                                        if (i112 == 5) {
                                                                        }
                                                                        messageObject2 = messageObject14;
                                                                        i5 = 3;
                                                                        i6 = 20;
                                                                        i149 = 2;
                                                                        i = 4;
                                                                        z9 = true;
                                                                        f2 = 1.0f;
                                                                        if (!chatMessageCell.hasInvoicePreview) {
                                                                        }
                                                                        if (!chatMessageCell.hasInvoicePreview) {
                                                                        }
                                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                        createInstantViewButton();
                                                                    } else if (tLRPC$Document4 != null) {
                                                                        str10 = str8;
                                                                        webFile4 = webFile2;
                                                                        if (MessageObject.isRoundVideoDocument(tLRPC$Document4)) {
                                                                            i110 = extraTimeX;
                                                                            i111 = i153;
                                                                            tLRPC$Photo3 = tLRPC$Photo2;
                                                                            TLRPC$Document tLRPC$Document12 = tLRPC$Document4;
                                                                            chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document12.thumbs, 90);
                                                                            chatMessageCell.photoParentObject = tLRPC$Document12;
                                                                            chatMessageCell.documentAttach = tLRPC$Document12;
                                                                            chatMessageCell.isSmallImage = false;
                                                                            chatMessageCell.documentAttachType = 7;
                                                                            tLRPC$Document6 = tLRPC$Document12;
                                                                        } else {
                                                                            tLRPC$Document5 = tLRPC$Document4;
                                                                            if (MessageObject.isGifDocument(tLRPC$Document5, messageObject.hasValidGroupId())) {
                                                                                i110 = extraTimeX;
                                                                                i111 = i153;
                                                                                tLRPC$Photo3 = tLRPC$Photo2;
                                                                                if (!messageObject.isGame() && (!SharedConfig.isAutoplayGifs() || messageObject14.isRepostPreview)) {
                                                                                    f7 = 1.0f;
                                                                                    messageObject14.gifState = 1.0f;
                                                                                } else {
                                                                                    f7 = 1.0f;
                                                                                }
                                                                                chatMessageCell.photoImage.setAllowStartAnimation(messageObject14.gifState != f7);
                                                                                TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document5.thumbs, 90);
                                                                                chatMessageCell.currentPhotoObject = closestPhotoSizeWithSize;
                                                                                if (closestPhotoSizeWithSize != null) {
                                                                                    chatMessageCell.photoParentObject = tLRPC$Document5;
                                                                                } else if (tLRPC$Photo3 != null) {
                                                                                    chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo3.sizes, 90);
                                                                                    chatMessageCell.photoParentObject = tLRPC$Photo3;
                                                                                }
                                                                                TLRPC$PhotoSize tLRPC$PhotoSize13 = chatMessageCell.currentPhotoObject;
                                                                                if (tLRPC$PhotoSize13 != null && (tLRPC$PhotoSize13.w == 0 || tLRPC$PhotoSize13.h == 0)) {
                                                                                    for (int i177 = 0; i177 < tLRPC$Document5.attributes.size(); i177++) {
                                                                                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = tLRPC$Document5.attributes.get(i177);
                                                                                        if ((tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeImageSize) || (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeVideo)) {
                                                                                            TLRPC$PhotoSize tLRPC$PhotoSize14 = chatMessageCell.currentPhotoObject;
                                                                                            tLRPC$PhotoSize14.w = tLRPC$DocumentAttribute2.w;
                                                                                            tLRPC$PhotoSize14.h = tLRPC$DocumentAttribute2.h;
                                                                                            break;
                                                                                        }
                                                                                    }
                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize15 = chatMessageCell.currentPhotoObject;
                                                                                    if (tLRPC$PhotoSize15.w == 0 || tLRPC$PhotoSize15.h == 0) {
                                                                                        int dp24 = AndroidUtilities.dp(150.0f);
                                                                                        tLRPC$PhotoSize15.h = dp24;
                                                                                        tLRPC$PhotoSize15.w = dp24;
                                                                                    }
                                                                                }
                                                                                chatMessageCell.documentAttach = tLRPC$Document5;
                                                                                chatMessageCell.documentAttachType = 2;
                                                                                tLRPC$Document6 = tLRPC$Document5;
                                                                                i112 = chatMessageCell.documentAttachType;
                                                                                if (i112 == 5) {
                                                                                }
                                                                                messageObject2 = messageObject14;
                                                                                i5 = 3;
                                                                                i6 = 20;
                                                                                i149 = 2;
                                                                                i = 4;
                                                                                z9 = true;
                                                                                f2 = 1.0f;
                                                                                if (!chatMessageCell.hasInvoicePreview) {
                                                                                }
                                                                                if (!chatMessageCell.hasInvoicePreview) {
                                                                                }
                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                                createInstantViewButton();
                                                                            } else {
                                                                                if (MessageObject.isVideoDocument(tLRPC$Document5)) {
                                                                                    i110 = extraTimeX;
                                                                                    i111 = i153;
                                                                                    if (tLRPC$Photo2 == null) {
                                                                                        tLRPC$Photo3 = tLRPC$Photo2;
                                                                                    } else {
                                                                                        tLRPC$Photo3 = tLRPC$Photo2;
                                                                                        chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo3.sizes, AndroidUtilities.getPhotoSize(), true);
                                                                                        chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo3.sizes, 40);
                                                                                        chatMessageCell.photoParentObject = tLRPC$Photo3;
                                                                                    }
                                                                                    if (chatMessageCell.currentPhotoObject == null) {
                                                                                        chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document5.thumbs, 320);
                                                                                        chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document5.thumbs, 40);
                                                                                        chatMessageCell.photoParentObject = tLRPC$Document5;
                                                                                    }
                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize16 = chatMessageCell.currentPhotoObject;
                                                                                    if (tLRPC$PhotoSize16 != chatMessageCell.currentPhotoObjectThumb) {
                                                                                        tLRPC$PhotoSize9 = null;
                                                                                    } else {
                                                                                        tLRPC$PhotoSize9 = null;
                                                                                        chatMessageCell.currentPhotoObjectThumb = null;
                                                                                    }
                                                                                    BitmapDrawable bitmapDrawable5 = chatMessageCell.currentMessageObject.strippedThumb;
                                                                                    if (bitmapDrawable5 != null) {
                                                                                        chatMessageCell.currentPhotoObjectThumb = tLRPC$PhotoSize9;
                                                                                        chatMessageCell.currentPhotoObjectThumbStripped = bitmapDrawable5;
                                                                                    }
                                                                                    if (tLRPC$PhotoSize16 == null) {
                                                                                        TLRPC$TL_photoSize tLRPC$TL_photoSize = new TLRPC$TL_photoSize();
                                                                                        chatMessageCell.currentPhotoObject = tLRPC$TL_photoSize;
                                                                                        tLRPC$TL_photoSize.type = "s";
                                                                                        tLRPC$TL_photoSize.location = new TLRPC$TL_fileLocationUnavailable();
                                                                                    }
                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize17 = chatMessageCell.currentPhotoObject;
                                                                                    if (tLRPC$PhotoSize17 != null && (tLRPC$PhotoSize17.w == 0 || tLRPC$PhotoSize17.h == 0 || (tLRPC$PhotoSize17 instanceof TLRPC$TL_photoStrippedSize))) {
                                                                                        int i178 = 0;
                                                                                        while (true) {
                                                                                            if (i178 >= tLRPC$Document5.attributes.size()) {
                                                                                                break;
                                                                                            }
                                                                                            TLRPC$DocumentAttribute tLRPC$DocumentAttribute3 = tLRPC$Document5.attributes.get(i178);
                                                                                            if (tLRPC$DocumentAttribute3 instanceof TLRPC$TL_documentAttributeVideo) {
                                                                                                TLRPC$PhotoSize tLRPC$PhotoSize18 = chatMessageCell.currentPhotoObject;
                                                                                                if (tLRPC$PhotoSize18 instanceof TLRPC$TL_photoStrippedSize) {
                                                                                                    int i179 = tLRPC$DocumentAttribute3.w;
                                                                                                    float max7 = Math.max(i179, i179) / 50.0f;
                                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize19 = chatMessageCell.currentPhotoObject;
                                                                                                    tLRPC$PhotoSize19.w = (int) (tLRPC$DocumentAttribute3.w / max7);
                                                                                                    tLRPC$PhotoSize19.h = (int) (tLRPC$DocumentAttribute3.h / max7);
                                                                                                } else {
                                                                                                    tLRPC$PhotoSize18.w = tLRPC$DocumentAttribute3.w;
                                                                                                    tLRPC$PhotoSize18.h = tLRPC$DocumentAttribute3.h;
                                                                                                }
                                                                                            } else {
                                                                                                i178++;
                                                                                            }
                                                                                        }
                                                                                        TLRPC$PhotoSize tLRPC$PhotoSize20 = chatMessageCell.currentPhotoObject;
                                                                                        if (tLRPC$PhotoSize20.w == 0 || tLRPC$PhotoSize20.h == 0) {
                                                                                            int dp25 = AndroidUtilities.dp(150.0f);
                                                                                            tLRPC$PhotoSize20.h = dp25;
                                                                                            tLRPC$PhotoSize20.w = dp25;
                                                                                        }
                                                                                    }
                                                                                    chatMessageCell.createDocumentLayout(0, messageObject14);
                                                                                } else {
                                                                                    if (MessageObject.isStickerDocument(tLRPC$Document5) || MessageObject.isAnimatedStickerDocument(tLRPC$Document5, true)) {
                                                                                        i110 = extraTimeX;
                                                                                        i111 = i153;
                                                                                        TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document5.thumbs, 90);
                                                                                        chatMessageCell.currentPhotoObject = closestPhotoSizeWithSize2;
                                                                                        chatMessageCell.photoParentObject = tLRPC$Document5;
                                                                                        if (closestPhotoSizeWithSize2 != null && (closestPhotoSizeWithSize2.w == 0 || closestPhotoSizeWithSize2.h == 0)) {
                                                                                            int i180 = 0;
                                                                                            while (true) {
                                                                                                if (i180 >= tLRPC$Document5.attributes.size()) {
                                                                                                    break;
                                                                                                }
                                                                                                TLRPC$DocumentAttribute tLRPC$DocumentAttribute4 = tLRPC$Document5.attributes.get(i180);
                                                                                                if (tLRPC$DocumentAttribute4 instanceof TLRPC$TL_documentAttributeImageSize) {
                                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize21 = chatMessageCell.currentPhotoObject;
                                                                                                    tLRPC$PhotoSize21.w = tLRPC$DocumentAttribute4.w;
                                                                                                    tLRPC$PhotoSize21.h = tLRPC$DocumentAttribute4.h;
                                                                                                    break;
                                                                                                }
                                                                                                i180++;
                                                                                            }
                                                                                            TLRPC$PhotoSize tLRPC$PhotoSize22 = chatMessageCell.currentPhotoObject;
                                                                                            if (tLRPC$PhotoSize22.w == 0 || tLRPC$PhotoSize22.h == 0) {
                                                                                                int dp26 = AndroidUtilities.dp(150.0f);
                                                                                                tLRPC$PhotoSize22.h = dp26;
                                                                                                tLRPC$PhotoSize22.w = dp26;
                                                                                            }
                                                                                        }
                                                                                        chatMessageCell.documentAttach = tLRPC$Document5;
                                                                                        chatMessageCell.isSmallImage = false;
                                                                                        chatMessageCell.documentAttachType = 6;
                                                                                    } else {
                                                                                        int i181 = chatMessageCell.drawInstantViewType;
                                                                                        if (i181 == 6) {
                                                                                            i110 = extraTimeX;
                                                                                            i111 = i153;
                                                                                            TLRPC$PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document5.thumbs, 320);
                                                                                            chatMessageCell.currentPhotoObject = closestPhotoSizeWithSize3;
                                                                                            chatMessageCell.photoParentObject = tLRPC$Document5;
                                                                                            if (closestPhotoSizeWithSize3 != null && (closestPhotoSizeWithSize3.w == 0 || closestPhotoSizeWithSize3.h == 0)) {
                                                                                                int i182 = 0;
                                                                                                while (true) {
                                                                                                    if (i182 >= tLRPC$Document5.attributes.size()) {
                                                                                                        break;
                                                                                                    }
                                                                                                    TLRPC$DocumentAttribute tLRPC$DocumentAttribute5 = tLRPC$Document5.attributes.get(i182);
                                                                                                    if (tLRPC$DocumentAttribute5 instanceof TLRPC$TL_documentAttributeImageSize) {
                                                                                                        TLRPC$PhotoSize tLRPC$PhotoSize23 = chatMessageCell.currentPhotoObject;
                                                                                                        tLRPC$PhotoSize23.w = tLRPC$DocumentAttribute5.w;
                                                                                                        tLRPC$PhotoSize23.h = tLRPC$DocumentAttribute5.h;
                                                                                                        break;
                                                                                                    }
                                                                                                    i182++;
                                                                                                }
                                                                                                TLRPC$PhotoSize tLRPC$PhotoSize24 = chatMessageCell.currentPhotoObject;
                                                                                                if (tLRPC$PhotoSize24.w == 0 || tLRPC$PhotoSize24.h == 0) {
                                                                                                    int dp27 = AndroidUtilities.dp(150.0f);
                                                                                                    tLRPC$PhotoSize24.h = dp27;
                                                                                                    tLRPC$PhotoSize24.w = dp27;
                                                                                                }
                                                                                            }
                                                                                            chatMessageCell.documentAttach = tLRPC$Document5;
                                                                                            chatMessageCell.isSmallImage = false;
                                                                                            chatMessageCell.documentAttachType = 8;
                                                                                            String formatFileSize = AndroidUtilities.formatFileSize(tLRPC$Document5.size);
                                                                                            chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatFileSize));
                                                                                            chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatFileSize, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                        } else if (i181 == 7) {
                                                                                            i110 = extraTimeX;
                                                                                            i111 = i153;
                                                                                            chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document5.thumbs, 700);
                                                                                            BitmapDrawable bitmapDrawable6 = chatMessageCell.currentMessageObject.strippedThumb;
                                                                                            if (bitmapDrawable6 == null) {
                                                                                                chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document5.thumbs, 40);
                                                                                            } else {
                                                                                                chatMessageCell.currentPhotoObjectThumbStripped = bitmapDrawable6;
                                                                                            }
                                                                                            chatMessageCell.photoParentObject = tLRPC$Document5;
                                                                                            TLRPC$PhotoSize tLRPC$PhotoSize25 = chatMessageCell.currentPhotoObject;
                                                                                            if (tLRPC$PhotoSize25 != null && (tLRPC$PhotoSize25.w == 0 || tLRPC$PhotoSize25.h == 0)) {
                                                                                                int i183 = 0;
                                                                                                while (true) {
                                                                                                    if (i183 >= tLRPC$Document5.attributes.size()) {
                                                                                                        break;
                                                                                                    }
                                                                                                    TLRPC$DocumentAttribute tLRPC$DocumentAttribute6 = tLRPC$Document5.attributes.get(i183);
                                                                                                    if (tLRPC$DocumentAttribute6 instanceof TLRPC$TL_documentAttributeImageSize) {
                                                                                                        TLRPC$PhotoSize tLRPC$PhotoSize26 = chatMessageCell.currentPhotoObject;
                                                                                                        tLRPC$PhotoSize26.w = tLRPC$DocumentAttribute6.w;
                                                                                                        tLRPC$PhotoSize26.h = tLRPC$DocumentAttribute6.h;
                                                                                                        break;
                                                                                                    }
                                                                                                    i183++;
                                                                                                }
                                                                                                TLRPC$PhotoSize tLRPC$PhotoSize27 = chatMessageCell.currentPhotoObject;
                                                                                                if (tLRPC$PhotoSize27.w == 0 || tLRPC$PhotoSize27.h == 0) {
                                                                                                    int dp28 = AndroidUtilities.dp(150.0f);
                                                                                                    tLRPC$PhotoSize27.h = dp28;
                                                                                                    tLRPC$PhotoSize27.w = dp28;
                                                                                                }
                                                                                            }
                                                                                            chatMessageCell.isSmallImage = false;
                                                                                            chatMessageCell.documentAttach = tLRPC$Document5;
                                                                                            chatMessageCell.documentAttachType = 9;
                                                                                        } else {
                                                                                            i110 = extraTimeX;
                                                                                            i111 = i153;
                                                                                            chatMessageCell.calcBackgroundWidth(i111, i110, max2);
                                                                                            if (chatMessageCell.backgroundWidth < AndroidUtilities.dp(20.0f) + i111) {
                                                                                                chatMessageCell.backgroundWidth = AndroidUtilities.dp(20.0f) + i111;
                                                                                            }
                                                                                            if (MessageObject.isVoiceDocument(tLRPC$Document5)) {
                                                                                                chatMessageCell.createDocumentLayout(chatMessageCell.backgroundWidth - AndroidUtilities.dp(10.0f), messageObject14);
                                                                                                chatMessageCell.mediaOffsetY = (!chatMessageCell.linkPreviewAbove ? chatMessageCell.currentMessageObject.textHeight : 0) + AndroidUtilities.dp(8.0f) + chatMessageCell.linkPreviewHeight;
                                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(44 + (!chatMessageCell.hasLinkPreview ? !chatMessageCell.linkPreviewAbove ? 0 : -4 : 4));
                                                                                                chatMessageCell.linkPreviewHeight += AndroidUtilities.dp(44 + (!chatMessageCell.hasLinkPreview ? 0 : 4));
                                                                                                int dp29 = i111 - AndroidUtilities.dp(86.0f);
                                                                                                max2 = AndroidUtilities.isTablet() ? Math.max(max2, (Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(!z7 ? 0.0f : 52.0f), AndroidUtilities.dp(220.0f)) - AndroidUtilities.dp(30.0f)) + i93) : Math.max(max2, (Math.min(getParentWidth() - AndroidUtilities.dp(!z7 ? 0.0f : 52.0f), AndroidUtilities.dp(220.0f)) - AndroidUtilities.dp(30.0f)) + i93);
                                                                                                chatMessageCell.calcBackgroundWidth(dp29, i110, max2);
                                                                                                i111 = dp29;
                                                                                            } else if (MessageObject.isMusicDocument(tLRPC$Document5)) {
                                                                                                int createDocumentLayout = chatMessageCell.createDocumentLayout(chatMessageCell.backgroundWidth - AndroidUtilities.dp(10.0f), messageObject14);
                                                                                                chatMessageCell.mediaOffsetY = (!chatMessageCell.linkPreviewAbove ? chatMessageCell.currentMessageObject.textHeight : 0) + AndroidUtilities.dp(8.0f) + chatMessageCell.linkPreviewHeight;
                                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(56 + (!chatMessageCell.linkPreviewAbove ? 0 : -4));
                                                                                                chatMessageCell.linkPreviewHeight += AndroidUtilities.dp(60.0f);
                                                                                                i111 -= AndroidUtilities.dp(86.0f);
                                                                                                int max8 = Math.max(max2, createDocumentLayout + i93 + AndroidUtilities.dp(94.0f));
                                                                                                CachedStaticLayout cachedStaticLayout10 = chatMessageCell.songLayout;
                                                                                                if (cachedStaticLayout10 != null && cachedStaticLayout10.getLineCount() > 0) {
                                                                                                    max8 = (int) Math.max(max8, chatMessageCell.songLayout.getLineWidth(0) + i93 + AndroidUtilities.dp(86.0f));
                                                                                                }
                                                                                                CachedStaticLayout cachedStaticLayout11 = chatMessageCell.performerLayout;
                                                                                                if (cachedStaticLayout11 != null && cachedStaticLayout11.getLineCount() > 0) {
                                                                                                    max8 = (int) Math.max(max8, chatMessageCell.performerLayout.getLineWidth(0) + i93 + AndroidUtilities.dp(86.0f));
                                                                                                }
                                                                                                max2 = max8;
                                                                                                chatMessageCell.calcBackgroundWidth(i111, i110, max2);
                                                                                            } else {
                                                                                                chatMessageCell.createDocumentLayout(chatMessageCell.backgroundWidth - AndroidUtilities.dp(168.0f), messageObject14);
                                                                                                chatMessageCell.drawImageButton = true;
                                                                                                if (chatMessageCell.drawPhotoImage) {
                                                                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(100.0f);
                                                                                                    chatMessageCell.linkPreviewHeight += AndroidUtilities.dp(86.0f);
                                                                                                    chatMessageCell.photoImage.setImageCoords(0.0f, chatMessageCell.totalHeight + chatMessageCell.namesOffset, AndroidUtilities.dp(86.0f), AndroidUtilities.dp(86.0f));
                                                                                                } else {
                                                                                                    chatMessageCell.mediaOffsetY = (!chatMessageCell.linkPreviewAbove ? chatMessageCell.currentMessageObject.textHeight : 0) + AndroidUtilities.dp(8.0f) + chatMessageCell.linkPreviewHeight;
                                                                                                    chatMessageCell.photoImage.setImageCoords(0.0f, (chatMessageCell.totalHeight + chatMessageCell.namesOffset) - AndroidUtilities.dp(14.0f), AndroidUtilities.dp(56.0f), AndroidUtilities.dp(56.0f));
                                                                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(64 + (!chatMessageCell.linkPreviewAbove ? 0 : -4));
                                                                                                    chatMessageCell.linkPreviewHeight += AndroidUtilities.dp(50.0f);
                                                                                                    CachedStaticLayout cachedStaticLayout12 = chatMessageCell.docTitleLayout;
                                                                                                    if (cachedStaticLayout12 != null && cachedStaticLayout12.getLineCount() > 1) {
                                                                                                        int lineCount2 = (chatMessageCell.docTitleLayout.getLineCount() - 1) * AndroidUtilities.dp(16.0f);
                                                                                                        chatMessageCell.totalHeight += lineCount2;
                                                                                                        chatMessageCell.linkPreviewHeight += lineCount2;
                                                                                                    }
                                                                                                }
                                                                                                tLRPC$Photo3 = tLRPC$Photo2;
                                                                                            }
                                                                                            tLRPC$Document6 = tLRPC$Document5;
                                                                                            tLRPC$Photo3 = tLRPC$Photo2;
                                                                                            i112 = chatMessageCell.documentAttachType;
                                                                                            if (i112 == 5) {
                                                                                            }
                                                                                            messageObject2 = messageObject14;
                                                                                            i5 = 3;
                                                                                            i6 = 20;
                                                                                            i149 = 2;
                                                                                            i = 4;
                                                                                            z9 = true;
                                                                                            f2 = 1.0f;
                                                                                            if (!chatMessageCell.hasInvoicePreview) {
                                                                                            }
                                                                                            if (!chatMessageCell.hasInvoicePreview) {
                                                                                            }
                                                                                            chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                                            createInstantViewButton();
                                                                                        }
                                                                                    }
                                                                                    tLRPC$Document6 = tLRPC$Document5;
                                                                                    tLRPC$Photo3 = tLRPC$Photo2;
                                                                                }
                                                                                tLRPC$Document6 = tLRPC$Document5;
                                                                                i112 = chatMessageCell.documentAttachType;
                                                                                if (i112 == 5) {
                                                                                }
                                                                                messageObject2 = messageObject14;
                                                                                i5 = 3;
                                                                                i6 = 20;
                                                                                i149 = 2;
                                                                                i = 4;
                                                                                z9 = true;
                                                                                f2 = 1.0f;
                                                                                if (!chatMessageCell.hasInvoicePreview) {
                                                                                }
                                                                                if (!chatMessageCell.hasInvoicePreview) {
                                                                                }
                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                                createInstantViewButton();
                                                                            }
                                                                        }
                                                                        z35 = false;
                                                                        i112 = chatMessageCell.documentAttachType;
                                                                        if (i112 == 5) {
                                                                        }
                                                                        messageObject2 = messageObject14;
                                                                        i5 = 3;
                                                                        i6 = 20;
                                                                        i149 = 2;
                                                                        i = 4;
                                                                        z9 = true;
                                                                        f2 = 1.0f;
                                                                        if (!chatMessageCell.hasInvoicePreview) {
                                                                        }
                                                                        if (!chatMessageCell.hasInvoicePreview) {
                                                                        }
                                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                        createInstantViewButton();
                                                                    } else {
                                                                        if (tLRPC$Photo2 != null) {
                                                                            webFile4 = webFile2;
                                                                            if (str8 == null) {
                                                                                str10 = str8;
                                                                            } else {
                                                                                str10 = str8;
                                                                                if (str10.equals("photo")) {
                                                                                    z39 = true;
                                                                                    chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(messageObject14.photoThumbs, (!z39 && z35) ? dp21 : AndroidUtilities.getPhotoSize(), !z39);
                                                                                    chatMessageCell.photoParentObject = messageObject14.photoThumbsObject;
                                                                                    chatMessageCell.checkOnlyButtonPressed = !z39;
                                                                                    bitmapDrawable2 = chatMessageCell.currentMessageObject.strippedThumb;
                                                                                    if (bitmapDrawable2 == null) {
                                                                                        chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(messageObject14.photoThumbs, 40);
                                                                                    } else {
                                                                                        chatMessageCell.currentPhotoObjectThumbStripped = bitmapDrawable2;
                                                                                    }
                                                                                    if (chatMessageCell.currentPhotoObjectThumb == chatMessageCell.currentPhotoObject) {
                                                                                        chatMessageCell.currentPhotoObjectThumb = null;
                                                                                    }
                                                                                    i110 = extraTimeX;
                                                                                    i111 = i153;
                                                                                    tLRPC$Photo3 = tLRPC$Photo2;
                                                                                    tLRPC$Document5 = tLRPC$Document4;
                                                                                }
                                                                            }
                                                                            z39 = false;
                                                                            if (z39) {
                                                                                chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(messageObject14.photoThumbs, (!z39 && z35) ? dp21 : AndroidUtilities.getPhotoSize(), !z39);
                                                                                chatMessageCell.photoParentObject = messageObject14.photoThumbsObject;
                                                                                chatMessageCell.checkOnlyButtonPressed = !z39;
                                                                                bitmapDrawable2 = chatMessageCell.currentMessageObject.strippedThumb;
                                                                                if (bitmapDrawable2 == null) {
                                                                                }
                                                                                if (chatMessageCell.currentPhotoObjectThumb == chatMessageCell.currentPhotoObject) {
                                                                                }
                                                                                i110 = extraTimeX;
                                                                                i111 = i153;
                                                                                tLRPC$Photo3 = tLRPC$Photo2;
                                                                                tLRPC$Document5 = tLRPC$Document4;
                                                                            }
                                                                            chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(messageObject14.photoThumbs, (!z39 && z35) ? dp21 : AndroidUtilities.getPhotoSize(), !z39);
                                                                            chatMessageCell.photoParentObject = messageObject14.photoThumbsObject;
                                                                            chatMessageCell.checkOnlyButtonPressed = !z39;
                                                                            bitmapDrawable2 = chatMessageCell.currentMessageObject.strippedThumb;
                                                                            if (bitmapDrawable2 == null) {
                                                                            }
                                                                            if (chatMessageCell.currentPhotoObjectThumb == chatMessageCell.currentPhotoObject) {
                                                                            }
                                                                            i110 = extraTimeX;
                                                                            i111 = i153;
                                                                            tLRPC$Photo3 = tLRPC$Photo2;
                                                                            tLRPC$Document5 = tLRPC$Document4;
                                                                        } else if (webFile2 == null) {
                                                                            i110 = extraTimeX;
                                                                            i111 = i153;
                                                                            str10 = str8;
                                                                            tLRPC$Photo3 = tLRPC$Photo2;
                                                                            tLRPC$Document5 = tLRPC$Document4;
                                                                            webFile4 = webFile2;
                                                                        } else {
                                                                            WebFile webFile6 = webFile2;
                                                                            if (webFile6.mime_type.startsWith("image/")) {
                                                                                webFile5 = webFile6;
                                                                                z40 = false;
                                                                            } else {
                                                                                z40 = false;
                                                                                webFile5 = null;
                                                                            }
                                                                            chatMessageCell.drawImageButton = z40;
                                                                            webFile4 = webFile5;
                                                                            i110 = extraTimeX;
                                                                            i111 = i153;
                                                                            str10 = str8;
                                                                            tLRPC$Photo3 = tLRPC$Photo2;
                                                                            tLRPC$Document6 = tLRPC$Document4;
                                                                            i112 = chatMessageCell.documentAttachType;
                                                                            if (i112 == 5 || i112 == 3 || i112 == 1) {
                                                                                messageObject2 = messageObject14;
                                                                                i5 = 3;
                                                                                i6 = 20;
                                                                                i149 = 2;
                                                                                i = 4;
                                                                                z9 = true;
                                                                                f2 = 1.0f;
                                                                            } else {
                                                                                if (chatMessageCell.currentPhotoObject != null || chatMessageCell.currentPhotoLocation != null || webFile4 != null || i112 == 8 || i112 == 9 || (((i128 = chatMessageCell.drawInstantViewType) == 23 || i128 == 24) && arrayList6 != null && !arrayList6.isEmpty())) {
                                                                                    chatMessageCell.drawImageButton = !(tLRPC$Photo3 == null || z35) || (str10 != null && (str10.equals("photo") || ((str10.equals("document") && chatMessageCell.documentAttachType != 6) || str10.equals("gif") || (i113 = chatMessageCell.documentAttachType) == 4 || i113 == 8)));
                                                                                    if (chatMessageCell.isSmallImage) {
                                                                                        chatMessageCell.drawImageButton = false;
                                                                                    }
                                                                                    i114 = chatMessageCell.linkPreviewHeight;
                                                                                    if (i114 != 0) {
                                                                                        chatMessageCell.linkPreviewHeight = i114 + AndroidUtilities.dp(2.0f);
                                                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(2.0f);
                                                                                    }
                                                                                    if (chatMessageCell.imageBackgroundSideColor != 0) {
                                                                                        dp21 = AndroidUtilities.dp(208.0f);
                                                                                    } else {
                                                                                        TLRPC$PhotoSize tLRPC$PhotoSize28 = chatMessageCell.currentPhotoObject;
                                                                                        if ((tLRPC$PhotoSize28 instanceof TLRPC$TL_photoSizeEmpty) && (i125 = tLRPC$PhotoSize28.w) != 0) {
                                                                                            dp21 = i125;
                                                                                        } else {
                                                                                            int i184 = chatMessageCell.documentAttachType;
                                                                                            if (i184 == 6 || i184 == 8 || i184 == 9) {
                                                                                                if (AndroidUtilities.isTablet()) {
                                                                                                    minTabletSide9 = AndroidUtilities.getMinTabletSide();
                                                                                                } else {
                                                                                                    minTabletSide9 = getParentWidth();
                                                                                                }
                                                                                                dp21 = (int) (minTabletSide9 * 0.5f);
                                                                                            } else if (i184 == 7) {
                                                                                                dp21 = AndroidUtilities.roundMessageSize;
                                                                                                chatMessageCell.photoImage.setAllowDecodeSingleFrame(true);
                                                                                            } else if (i184 == 10) {
                                                                                                dp21 /= 2;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    if (chatMessageCell.hasInvoicePreview && dp21 < (i124 = messageObject14.textWidth)) {
                                                                                        dp21 = AndroidUtilities.dp(22.0f) + i124;
                                                                                    }
                                                                                    max2 = Math.max(max2, (dp21 - (!chatMessageCell.hasInvoicePreview ? 0 : AndroidUtilities.dp(12.0f))) + i93);
                                                                                    tLRPC$PhotoSize8 = chatMessageCell.currentPhotoObject;
                                                                                    if (tLRPC$PhotoSize8 != null) {
                                                                                        tLRPC$PhotoSize8.size = -1;
                                                                                        TLRPC$PhotoSize tLRPC$PhotoSize29 = chatMessageCell.currentPhotoObjectThumb;
                                                                                        if (tLRPC$PhotoSize29 != null) {
                                                                                            tLRPC$PhotoSize29.size = -1;
                                                                                        }
                                                                                    } else if (webFile4 != null) {
                                                                                        webFile4.size = -1;
                                                                                    }
                                                                                    if (chatMessageCell.imageBackgroundSideColor != 0) {
                                                                                        chatMessageCell.imageBackgroundSideWidth = max2 - AndroidUtilities.dp(13.0f);
                                                                                    }
                                                                                    if (z35 || chatMessageCell.documentAttachType == 7) {
                                                                                        chatMessageCell.photoImage.setInvalidateAll(true);
                                                                                        i115 = dp21;
                                                                                    } else if (chatMessageCell.hasGamePreview || chatMessageCell.hasInvoicePreview) {
                                                                                        if (chatMessageCell.hasInvoicePreview) {
                                                                                            int size3 = webFile4.attributes.size();
                                                                                            for (int i185 = 0; i185 < size3; i185++) {
                                                                                                TLRPC$DocumentAttribute tLRPC$DocumentAttribute7 = webFile4.attributes.get(i185);
                                                                                                if (tLRPC$DocumentAttribute7 instanceof TLRPC$TL_documentAttributeImageSize) {
                                                                                                    i118 = tLRPC$DocumentAttribute7.w;
                                                                                                    i119 = tLRPC$DocumentAttribute7.h;
                                                                                                    break;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        i118 = 640;
                                                                                        i119 = 360;
                                                                                        float f8 = i118;
                                                                                        float dp30 = f8 / (dp21 - AndroidUtilities.dp(2.0f));
                                                                                        dp21 = (int) (i119 / dp30);
                                                                                        i115 = (int) (f8 / dp30);
                                                                                    } else {
                                                                                        if (chatMessageCell.drawInstantViewType == 7) {
                                                                                            TLRPC$PhotoSize tLRPC$PhotoSize30 = chatMessageCell.currentPhotoObject;
                                                                                            if (tLRPC$PhotoSize30 == null) {
                                                                                                i120 = 30;
                                                                                                i121 = 50;
                                                                                            } else {
                                                                                                int i186 = tLRPC$PhotoSize30.w;
                                                                                                i121 = tLRPC$PhotoSize30.h;
                                                                                                i120 = i186;
                                                                                            }
                                                                                        } else {
                                                                                            i120 = 560;
                                                                                            i121 = 678;
                                                                                        }
                                                                                        float f9 = i120;
                                                                                        float dp31 = f9 / (dp21 - AndroidUtilities.dp(2.0f));
                                                                                        i115 = (int) (f9 / dp31);
                                                                                        dp21 = (int) (i121 / dp31);
                                                                                        if (str7 == null || (!str7.toString().toLowerCase().equals("instagram") && chatMessageCell.documentAttachType == 0)) {
                                                                                            i122 = AndroidUtilities.displaySize.y;
                                                                                            if (dp21 > i122 / 3) {
                                                                                                dp21 = i122 / 3;
                                                                                                if (chatMessageCell.imageBackgroundSideColor != 0) {
                                                                                                    float f10 = dp21;
                                                                                                    float dp32 = f10 / AndroidUtilities.dp(160.0f);
                                                                                                    i115 = (int) (i115 / dp32);
                                                                                                    dp21 = (int) (f10 / dp32);
                                                                                                }
                                                                                                if (dp21 < AndroidUtilities.dp(60.0f)) {
                                                                                                    dp21 = AndroidUtilities.dp(60.0f);
                                                                                                }
                                                                                            }
                                                                                        } else {
                                                                                            i123 = AndroidUtilities.displaySize.y;
                                                                                            if (dp21 > i123 / 2) {
                                                                                                dp21 = i123 / 2;
                                                                                            }
                                                                                        }
                                                                                        if (chatMessageCell.imageBackgroundSideColor != 0) {
                                                                                        }
                                                                                        if (dp21 < AndroidUtilities.dp(60.0f)) {
                                                                                        }
                                                                                    }
                                                                                    if (chatMessageCell.isSmallImage) {
                                                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(12.0f) + dp21;
                                                                                        chatMessageCell.linkPreviewHeight += dp21;
                                                                                    } else {
                                                                                        if (AndroidUtilities.dp(50.0f) > chatMessageCell.linkPreviewHeight) {
                                                                                            chatMessageCell.totalHeight += (AndroidUtilities.dp(50.0f) - chatMessageCell.linkPreviewHeight) + AndroidUtilities.dp(8.0f);
                                                                                            chatMessageCell.linkPreviewHeight = AndroidUtilities.dp(50.0f);
                                                                                        }
                                                                                        chatMessageCell.linkPreviewHeight -= AndroidUtilities.dp(8.0f);
                                                                                    }
                                                                                    if (chatMessageCell.documentAttachType == 8 && chatMessageCell.imageBackgroundSideColor == 0) {
                                                                                        chatMessageCell.photoImage.setImageCoords(0.0f, 0.0f, Math.max(max2 - AndroidUtilities.dp(13.0f), i115), dp21);
                                                                                    } else {
                                                                                        chatMessageCell.photoImage.setImageCoords(0.0f, 0.0f, i115, dp21);
                                                                                    }
                                                                                    float f11 = AndroidUtilities.density;
                                                                                    int i187 = (int) (i115 / f11);
                                                                                    int i188 = (int) (dp21 / f11);
                                                                                    Locale locale = Locale.US;
                                                                                    chatMessageCell.currentPhotoFilter = String.format(locale, "%d_%d", Integer.valueOf(i187), Integer.valueOf(i188));
                                                                                    chatMessageCell.currentPhotoFilterThumb = String.format(locale, "%d_%d_b", Integer.valueOf(i187), Integer.valueOf(i188));
                                                                                    i116 = chatMessageCell.drawInstantViewType;
                                                                                    if ((i116 == 23 || i116 == 24) && arrayList6 != null && !arrayList6.isEmpty()) {
                                                                                        messageObject2 = messageObject14;
                                                                                        i117 = i111;
                                                                                        str11 = str10;
                                                                                        i5 = 3;
                                                                                        i6 = 20;
                                                                                        i149 = 2;
                                                                                        f2 = 1.0f;
                                                                                        StickerSetLinkIcon stickerSetLinkIcon3 = chatMessageCell.stickerSetIcons;
                                                                                        ArrayList<TLRPC$Document> arrayList12 = arrayList6;
                                                                                        if (stickerSetLinkIcon3 == null || !stickerSetLinkIcon3.equals(arrayList12)) {
                                                                                            StickerSetLinkIcon stickerSetLinkIcon4 = chatMessageCell.stickerSetIcons;
                                                                                            if (stickerSetLinkIcon4 != null) {
                                                                                                stickerSetLinkIcon4.detach(chatMessageCell);
                                                                                            }
                                                                                            StickerSetLinkIcon stickerSetLinkIcon5 = new StickerSetLinkIcon(chatMessageCell.currentAccount, chatMessageCell.currentMessageObject.isOutOwner(), arrayList12, z31);
                                                                                            chatMessageCell.stickerSetIcons = stickerSetLinkIcon5;
                                                                                            if (chatMessageCell.attachedToWindow) {
                                                                                                stickerSetLinkIcon5.attach(chatMessageCell);
                                                                                            }
                                                                                        }
                                                                                        StickerSetLinkIcon stickerSetLinkIcon6 = chatMessageCell.stickerSetIcons;
                                                                                        if (stickerSetLinkIcon6 != null) {
                                                                                            stickerSetLinkIcon6.keepAlive();
                                                                                        }
                                                                                        chatMessageCell.photoImage.setImageBitmap(chatMessageCell.stickerSetIcons);
                                                                                    } else if (webFile4 == null) {
                                                                                        messageObject2 = messageObject14;
                                                                                        i117 = i111;
                                                                                        str11 = str10;
                                                                                        i5 = 3;
                                                                                        i6 = 20;
                                                                                        i149 = 2;
                                                                                        f2 = 1.0f;
                                                                                        chatMessageCell.photoImage.setImage(ImageLocation.getForWebFile(webFile4), chatMessageCell.currentPhotoFilter, null, null, webFile4.size, null, messageObject, 1);
                                                                                    } else {
                                                                                        int i189 = chatMessageCell.documentAttachType;
                                                                                        if (i189 == 8) {
                                                                                            messageObject2 = messageObject14;
                                                                                            i117 = i111;
                                                                                            str11 = str10;
                                                                                            i5 = 3;
                                                                                            f2 = 1.0f;
                                                                                            if (messageObject2.mediaExists) {
                                                                                                chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(chatMessageCell.documentAttach), chatMessageCell.currentPhotoFilter, ImageLocation.getForDocument(chatMessageCell.currentPhotoObject, tLRPC$Document6), "b1", 0L, "jpg", messageObject, 1);
                                                                                            } else {
                                                                                                chatMessageCell.photoImage.setImage(null, null, ImageLocation.getForDocument(chatMessageCell.currentPhotoObject, tLRPC$Document6), "b1", 0L, "jpg", messageObject, 1);
                                                                                            }
                                                                                        } else if (i189 == 9) {
                                                                                            messageObject2 = messageObject14;
                                                                                            i117 = i111;
                                                                                            str11 = str10;
                                                                                            i5 = 3;
                                                                                            f2 = 1.0f;
                                                                                            if (tLRPC$Document6 instanceof DocumentObject.ThemeDocument) {
                                                                                                chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(tLRPC$Document6), chatMessageCell.currentPhotoFilter, null, "b1", 0L, "jpg", messageObject, 1);
                                                                                            } else {
                                                                                                chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(chatMessageCell.currentPhotoObject, tLRPC$Document6), chatMessageCell.currentPhotoFilter, ImageLocation.getForDocument(chatMessageCell.currentPhotoObjectThumb, tLRPC$Document6), "b1", chatMessageCell.currentPhotoObjectThumbStripped, 0L, "jpg", messageObject, 1);
                                                                                            }
                                                                                        } else if (i189 == 10) {
                                                                                            messageObject2 = messageObject14;
                                                                                            i117 = i111;
                                                                                            str11 = str10;
                                                                                            i5 = 3;
                                                                                            f2 = 1.0f;
                                                                                            if (tLRPC$Document6 != null) {
                                                                                                chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(chatMessageCell.currentPhotoObject, tLRPC$Document6), chatMessageCell.currentPhotoFilter, ImageLocation.getForDocument(chatMessageCell.currentPhotoObjectThumb, tLRPC$Document6), "b1", chatMessageCell.currentPhotoObjectThumbStripped, 0L, "jpg", messageObject, 1);
                                                                                            } else if (tLRPC$Photo3 != null) {
                                                                                                chatMessageCell.photoImage.setImage(ImageLocation.getForPhoto(chatMessageCell.currentPhotoObject, tLRPC$Photo3), chatMessageCell.currentPhotoFilter, ImageLocation.getForPhoto(chatMessageCell.currentPhotoObjectThumb, tLRPC$Photo3), "b1", chatMessageCell.currentPhotoObjectThumbStripped, 0L, "jpg", messageObject, 1);
                                                                                            }
                                                                                            TLRPC$PhotoSize tLRPC$PhotoSize31 = chatMessageCell.currentPhotoObject;
                                                                                            if (tLRPC$PhotoSize31 != null && tLRPC$PhotoSize31.gradientTopColor != 0 && tLRPC$PhotoSize31.gradientBottomColor != 0) {
                                                                                                GradientDrawable.Orientation orientation = GradientDrawable.Orientation.TOP_BOTTOM;
                                                                                                TLRPC$PhotoSize tLRPC$PhotoSize32 = chatMessageCell.currentPhotoObject;
                                                                                                chatMessageCell.gradientDrawable = new GradientDrawable(orientation, new int[]{tLRPC$PhotoSize32.gradientTopColor, tLRPC$PhotoSize32.gradientBottomColor});
                                                                                            } else {
                                                                                                BitmapDrawable bitmapDrawable7 = chatMessageCell.currentPhotoObjectThumbStripped;
                                                                                                if (bitmapDrawable7 != null && bitmapDrawable7.getBitmap() != null) {
                                                                                                    int[] colorsSync = DominantColors.getColorsSync(false, chatMessageCell.currentPhotoObjectThumbStripped.getBitmap(), Theme.isCurrentThemeDark());
                                                                                                    chatMessageCell.gradientDrawable = new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM, colorsSync);
                                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize33 = chatMessageCell.currentPhotoObject;
                                                                                                    if (tLRPC$PhotoSize33 != null) {
                                                                                                        tLRPC$PhotoSize33.gradientTopColor = colorsSync[0];
                                                                                                        tLRPC$PhotoSize33.gradientBottomColor = colorsSync[1];
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        } else if (i189 != 6) {
                                                                                            if (i189 == 4) {
                                                                                                messageObject2 = messageObject14;
                                                                                                i117 = i111;
                                                                                                str11 = str10;
                                                                                                f2 = 1.0f;
                                                                                                chatMessageCell.photoImage.setNeedsQualityThumb(true);
                                                                                                chatMessageCell.photoImage.setShouldGenerateQualityThumb(true);
                                                                                                if (!chatMessageCell.isSmallImage && SharedConfig.isAutoplayVideo()) {
                                                                                                    MessageObject messageObject24 = chatMessageCell.currentMessageObject;
                                                                                                    if (!messageObject24.isRepostPreview) {
                                                                                                        if (messageObject24.hasMediaSpoilers()) {
                                                                                                            MessageObject messageObject25 = chatMessageCell.currentMessageObject;
                                                                                                            if (!messageObject25.isMediaSpoilersRevealed) {
                                                                                                            }
                                                                                                        }
                                                                                                        MessageObject messageObject26 = chatMessageCell.currentMessageObject;
                                                                                                        if (messageObject26.mediaExists || messageObject26.attachPathExists || (messageObject.canStreamVideo() && DownloadController.getInstance(chatMessageCell.currentAccount).canDownloadMedia(chatMessageCell.currentMessageObject))) {
                                                                                                            chatMessageCell.photoImage.setAllowDecodeSingleFrame(true);
                                                                                                            chatMessageCell.photoImage.setAllowStartAnimation(true);
                                                                                                            chatMessageCell.photoImage.startAnimation();
                                                                                                            chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(chatMessageCell.documentAttach), ImageLoader.AUTOPLAY_FILTER, ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForDocument(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.documentAttach), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, chatMessageCell.documentAttach.size, null, messageObject, 0);
                                                                                                            chatMessageCell.autoPlayingMedia = true;
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                if (chatMessageCell.currentPhotoObjectThumb != null || chatMessageCell.currentPhotoObjectThumbStripped != null) {
                                                                                                    chatMessageCell.photoImage.setImage(ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, messageObject, 0);
                                                                                                } else {
                                                                                                    ImageReceiver imageReceiver = chatMessageCell.photoImage;
                                                                                                    ImageLocation forObject2 = ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject);
                                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize34 = chatMessageCell.currentPhotoObject;
                                                                                                    imageReceiver.setImage(null, null, forObject2, ((tLRPC$PhotoSize34 instanceof TLRPC$TL_photoStrippedSize) || "s".equals(tLRPC$PhotoSize34.type)) ? chatMessageCell.currentPhotoFilterThumb : chatMessageCell.currentPhotoFilter, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, messageObject, 0);
                                                                                                }
                                                                                            } else if (i189 == 2 || i189 == 7) {
                                                                                                messageObject2 = messageObject14;
                                                                                                f2 = 1.0f;
                                                                                                chatMessageCell.photoImage.setAllowDecodeSingleFrame(true);
                                                                                                if (MessageObject.isRoundVideoDocument(tLRPC$Document6)) {
                                                                                                    chatMessageCell.photoImage.setRoundRadius(AndroidUtilities.roundMessageSize / 2);
                                                                                                    canDownloadMedia = DownloadController.getInstance(chatMessageCell.currentAccount).canDownloadMedia(chatMessageCell.currentMessageObject);
                                                                                                    z37 = false;
                                                                                                } else if (MessageObject.isGifDocument(tLRPC$Document6, messageObject.hasValidGroupId())) {
                                                                                                    canDownloadMedia = DownloadController.getInstance(chatMessageCell.currentAccount).canDownloadMedia(chatMessageCell.currentMessageObject);
                                                                                                    z37 = true;
                                                                                                } else {
                                                                                                    z37 = true;
                                                                                                    canDownloadMedia = false;
                                                                                                }
                                                                                                TLRPC$PhotoSize tLRPC$PhotoSize35 = chatMessageCell.currentPhotoObject;
                                                                                                String str27 = ((tLRPC$PhotoSize35 instanceof TLRPC$TL_photoStrippedSize) || "s".equals(tLRPC$PhotoSize35.type)) ? chatMessageCell.currentPhotoFilterThumb : chatMessageCell.currentPhotoFilter;
                                                                                                if ((messageObject2.mediaExists || canDownloadMedia) && !chatMessageCell.currentMessageObject.isRepostPreview) {
                                                                                                    chatMessageCell.autoPlayingMedia = true;
                                                                                                    TLRPC$VideoSize documentVideoThumb = MessageObject.getDocumentVideoThumb(tLRPC$Document6);
                                                                                                    if (!messageObject2.mediaExists && documentVideoThumb != null && (chatMessageCell.currentPhotoObject == null || chatMessageCell.currentPhotoObjectThumb == null)) {
                                                                                                        i117 = i111;
                                                                                                        str11 = str10;
                                                                                                        ImageReceiver imageReceiver2 = chatMessageCell.photoImage;
                                                                                                        ImageLocation forDocument = ImageLocation.getForDocument(tLRPC$Document6);
                                                                                                        String str28 = tLRPC$Document6.size >= 32768 ? ImageLoader.AUTOPLAY_FILTER : null;
                                                                                                        ImageLocation forDocument2 = ImageLocation.getForDocument(documentVideoThumb, chatMessageCell.documentAttach);
                                                                                                        TLRPC$PhotoSize tLRPC$PhotoSize36 = chatMessageCell.currentPhotoObject;
                                                                                                        if (tLRPC$PhotoSize36 == null) {
                                                                                                            tLRPC$PhotoSize36 = chatMessageCell.currentPhotoObjectThumb;
                                                                                                        }
                                                                                                        imageReceiver2.setImage(forDocument, str28, forDocument2, null, ImageLocation.getForDocument(tLRPC$PhotoSize36, chatMessageCell.documentAttach), chatMessageCell.currentPhotoObject == null ? chatMessageCell.currentPhotoFilterThumb : str27, chatMessageCell.currentPhotoObjectThumbStripped, tLRPC$Document6.size, null, messageObject, 0);
                                                                                                    } else {
                                                                                                        i117 = i111;
                                                                                                        str11 = str10;
                                                                                                        chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(tLRPC$Document6), tLRPC$Document6.size >= 32768 ? ImageLoader.AUTOPLAY_FILTER : null, ImageLocation.getForDocument(chatMessageCell.currentPhotoObject, chatMessageCell.documentAttach), str27, ImageLocation.getForDocument(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.documentAttach), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, tLRPC$Document6.size, null, messageObject, 0);
                                                                                                    }
                                                                                                } else {
                                                                                                    chatMessageCell.photoImage.setImage(null, null, ImageLocation.getForDocument(chatMessageCell.currentPhotoObject, chatMessageCell.documentAttach), str27, 0L, null, chatMessageCell.currentMessageObject, 0);
                                                                                                    i117 = i111;
                                                                                                    str11 = str10;
                                                                                                }
                                                                                                z9 = z37;
                                                                                                i5 = 3;
                                                                                                i6 = 20;
                                                                                                i149 = 2;
                                                                                                if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                                                    chatMessageCell.blurredPhotoImage.getBitmap().recycle();
                                                                                                    chatMessageCell.blurredPhotoImage.setImageBitmap((Bitmap) null);
                                                                                                }
                                                                                                if (chatMessageCell.photoImage.getBitmap() != null && !chatMessageCell.photoImage.getBitmap().isRecycled() && chatMessageCell.currentMessageObject.hasMediaSpoilers() && !chatMessageCell.currentMessageObject.isMediaSpoilersRevealed) {
                                                                                                    chatMessageCell.blurredPhotoImage.setImageBitmap(Utilities.stackBlurBitmapMax(chatMessageCell.photoImage.getBitmap(), chatMessageCell.currentMessageObject.isRoundVideo()));
                                                                                                    chatMessageCell.blurredPhotoImage.setColorFilter(getFancyBlurFilter());
                                                                                                }
                                                                                                chatMessageCell.drawPhotoImage = true;
                                                                                                if (((str11 != null && str11.equals(MediaStreamTrack.VIDEO_TRACK_KIND)) || chatMessageCell.documentAttachType == 10) && i91 != 0) {
                                                                                                    String formatShortDuration = AndroidUtilities.formatShortDuration(i91);
                                                                                                    chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatShortDuration));
                                                                                                    chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                                } else if (chatMessageCell.hasGamePreview) {
                                                                                                    try {
                                                                                                        TLRPC$Message tLRPC$Message10 = messageObject2.messageOwner;
                                                                                                        j = tLRPC$Message10.via_bot_id;
                                                                                                        if (j == 0) {
                                                                                                            j = tLRPC$Message10.from_id.user_id;
                                                                                                        }
                                                                                                    } catch (Exception unused3) {
                                                                                                    }
                                                                                                    if (j != 0 && (user = MessagesController.getInstance(chatMessageCell.currentAccount).getUser(Long.valueOf(j))) != null && (str12 = user.username) != null) {
                                                                                                        if (str12.equals("donate")) {
                                                                                                            z36 = false;
                                                                                                            if (z36) {
                                                                                                                String upperCase2 = LocaleController.getString("AttachGame", R.string.AttachGame).toUpperCase();
                                                                                                                chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_gamePaint.measureText(upperCase2));
                                                                                                                chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(upperCase2, Theme.chat_gamePaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    z36 = true;
                                                                                                    if (z36) {
                                                                                                    }
                                                                                                }
                                                                                            } else {
                                                                                                boolean z61 = messageObject14.mediaExists;
                                                                                                String attachFileName = FileLoader.getAttachFileName(chatMessageCell.currentPhotoObject);
                                                                                                if (chatMessageCell.hasGamePreview || z61 || DownloadController.getInstance(chatMessageCell.currentAccount).canDownloadMedia(chatMessageCell.currentMessageObject) || FileLoader.getInstance(chatMessageCell.currentAccount).isLoadingFile(attachFileName)) {
                                                                                                    messageObject2 = messageObject14;
                                                                                                    z38 = false;
                                                                                                    f2 = 1.0f;
                                                                                                } else if (chatMessageCell.currentMessageObject.isSponsored()) {
                                                                                                    messageObject2 = messageObject14;
                                                                                                    f2 = 1.0f;
                                                                                                    z38 = false;
                                                                                                } else {
                                                                                                    chatMessageCell.photoNotSet = true;
                                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize37 = chatMessageCell.currentPhotoObjectThumb;
                                                                                                    if (tLRPC$PhotoSize37 != null || chatMessageCell.currentPhotoObjectThumbStripped != null) {
                                                                                                        f2 = 1.0f;
                                                                                                        messageObject2 = messageObject;
                                                                                                        chatMessageCell.photoImage.setImage(null, null, ImageLocation.getForObject(tLRPC$PhotoSize37, chatMessageCell.photoParentObject), String.format(locale, "%d_%d_b", Integer.valueOf(i187), Integer.valueOf(i188)), chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, messageObject, 0);
                                                                                                        i117 = i111;
                                                                                                        str11 = str10;
                                                                                                    } else {
                                                                                                        chatMessageCell.photoImage.setImageBitmap((Drawable) null);
                                                                                                        messageObject2 = messageObject14;
                                                                                                        i117 = i111;
                                                                                                        str11 = str10;
                                                                                                        i5 = 3;
                                                                                                        i6 = 20;
                                                                                                        i149 = 2;
                                                                                                        f2 = 1.0f;
                                                                                                    }
                                                                                                }
                                                                                                chatMessageCell.photoNotSet = z38;
                                                                                                ImageLocation imageLocation = chatMessageCell.currentPhotoLocation;
                                                                                                if (imageLocation != null) {
                                                                                                    chatMessageCell.photoImage.setImage(imageLocation, chatMessageCell.currentPhotoFilter, chatMessageCell.currentPhotoThumbLocation, chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, messageObject, 0);
                                                                                                } else {
                                                                                                    chatMessageCell.photoImage.setImage(ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, messageObject, 0);
                                                                                                }
                                                                                                i117 = i111;
                                                                                                str11 = str10;
                                                                                            }
                                                                                            i5 = 3;
                                                                                        } else {
                                                                                            messageObject2 = messageObject14;
                                                                                            i117 = i111;
                                                                                            str11 = str10;
                                                                                            f2 = 1.0f;
                                                                                            boolean isSticker = messageObject.isSticker();
                                                                                            if (!SharedConfig.loopStickers() && messageObject.isVideoSticker()) {
                                                                                                chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 1;
                                                                                            }
                                                                                            if (SharedConfig.loopStickers() || (isSticker && !messageObject.isVideoSticker())) {
                                                                                                i5 = 3;
                                                                                                chatMessageCell.photoImage.setAutoRepeat(1);
                                                                                            } else {
                                                                                                i5 = 3;
                                                                                                chatMessageCell.currentPhotoFilter = String.format(locale, "%d_%d_nr_messageId=%d", Integer.valueOf(i187), Integer.valueOf(i188), Integer.valueOf(messageObject2.stableId));
                                                                                                ImageReceiver imageReceiver3 = chatMessageCell.photoImage;
                                                                                                ChatMessageCellDelegate chatMessageCellDelegate3 = chatMessageCell.delegate;
                                                                                                imageReceiver3.setAutoRepeat((chatMessageCellDelegate3 != null && chatMessageCellDelegate3.shouldRepeatSticker(messageObject2)) ? 2 : 3);
                                                                                            }
                                                                                            chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(chatMessageCell.documentAttach), chatMessageCell.currentPhotoFilter, ImageLocation.getForDocument(chatMessageCell.currentPhotoObject, chatMessageCell.documentAttach), "b1", chatMessageCell.documentAttach.size, "webp", messageObject, 1);
                                                                                        }
                                                                                        i6 = 20;
                                                                                        i149 = 2;
                                                                                    }
                                                                                    z9 = true;
                                                                                    if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                                    }
                                                                                    if (chatMessageCell.photoImage.getBitmap() != null) {
                                                                                        chatMessageCell.blurredPhotoImage.setImageBitmap(Utilities.stackBlurBitmapMax(chatMessageCell.photoImage.getBitmap(), chatMessageCell.currentMessageObject.isRoundVideo()));
                                                                                        chatMessageCell.blurredPhotoImage.setColorFilter(getFancyBlurFilter());
                                                                                    }
                                                                                    chatMessageCell.drawPhotoImage = true;
                                                                                    if (str11 != null) {
                                                                                        String formatShortDuration2 = AndroidUtilities.formatShortDuration(i91);
                                                                                        chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatShortDuration2));
                                                                                        chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration2, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                    }
                                                                                    String formatShortDuration22 = AndroidUtilities.formatShortDuration(i91);
                                                                                    chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatShortDuration22));
                                                                                    chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration22, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                } else {
                                                                                    chatMessageCell.photoImage.setImageBitmap((Drawable) null);
                                                                                    if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                                        chatMessageCell.blurredPhotoImage.getBitmap().recycle();
                                                                                        chatMessageCell.blurredPhotoImage.setImageBitmap((Bitmap) null);
                                                                                    }
                                                                                    chatMessageCell.linkPreviewHeight -= AndroidUtilities.dp(4.0f);
                                                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(4.0f);
                                                                                    messageObject2 = messageObject14;
                                                                                    i117 = i111;
                                                                                    i5 = 3;
                                                                                    i6 = 20;
                                                                                    i149 = 2;
                                                                                    z9 = true;
                                                                                    f2 = 1.0f;
                                                                                }
                                                                                if (chatMessageCell.hasInvoicePreview) {
                                                                                    i = 4;
                                                                                    if ((MessageObject.getMedia(messageObject2.messageOwner).flags & 4) != 0) {
                                                                                        upperCase = LocaleController.getString("PaymentReceipt", R.string.PaymentReceipt).toUpperCase();
                                                                                    } else if (MessageObject.getMedia(messageObject2.messageOwner).test) {
                                                                                        upperCase = LocaleController.getString("PaymentTestInvoice", R.string.PaymentTestInvoice).toUpperCase();
                                                                                    } else {
                                                                                        upperCase = LocaleController.getString("PaymentInvoice", R.string.PaymentInvoice).toUpperCase();
                                                                                    }
                                                                                    String formatCurrencyString = LocaleController.getInstance().formatCurrencyString(MessageObject.getMedia(messageObject2.messageOwner).total_amount, MessageObject.getMedia(messageObject2.messageOwner).currency);
                                                                                    SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(formatCurrencyString + " " + ((Object) upperCase));
                                                                                    spannableStringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface(AndroidUtilities.TYPEFACE_ROBOTO_MEDIUM)), 0, formatCurrencyString.length(), 33);
                                                                                    chatMessageCell.durationWidth = (int) Math.ceil((double) Theme.chat_shipmentPaint.measureText(spannableStringBuilder, 0, spannableStringBuilder.length()));
                                                                                    chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(spannableStringBuilder, Theme.chat_shipmentPaint, chatMessageCell.durationWidth + AndroidUtilities.dp(10.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                    if (chatMessageCell.drawPhotoImage) {
                                                                                        i126 = i117;
                                                                                    } else {
                                                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(6.0f);
                                                                                        int dp33 = chatMessageCell.timeWidth + AndroidUtilities.dp(14 + (!messageObject.isOutOwner() ? 0 : 20));
                                                                                        int i190 = chatMessageCell.durationWidth;
                                                                                        i126 = i117;
                                                                                        if (i190 + dp33 > i126) {
                                                                                            max3 = Math.max(i190, max2);
                                                                                            chatMessageCell.totalHeight += AndroidUtilities.dp(12.0f);
                                                                                        } else {
                                                                                            max3 = Math.max(i190 + dp33, max2);
                                                                                        }
                                                                                        max2 = max3;
                                                                                    }
                                                                                } else {
                                                                                    i126 = i117;
                                                                                    i = 4;
                                                                                }
                                                                                if (chatMessageCell.hasGamePreview && (i127 = messageObject2.textHeight) != 0) {
                                                                                    chatMessageCell.linkPreviewHeight += i127 + AndroidUtilities.dp(6.0f);
                                                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(4.0f);
                                                                                }
                                                                                chatMessageCell.calcBackgroundWidth(i126, i110, max2);
                                                                            }
                                                                            if (!chatMessageCell.hasInvoicePreview && !chatMessageCell.currentMessageObject.isGiveawayOrGiveawayResults()) {
                                                                                chatMessageCell.linkPreviewHeight += AndroidUtilities.dp(6.0f);
                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(6.0f);
                                                                            }
                                                                            if (!chatMessageCell.hasInvoicePreview && !chatMessageCell.currentMessageObject.isGiveawayOrGiveawayResults() && ((chatMessageCell.currentPhotoObject != null || chatMessageCell.documentAttachType == i) && (chatMessageCell.authorLayout != null || chatMessageCell.descriptionLayout != null || chatMessageCell.titleLayout != null || chatMessageCell.siteNameLayout != null))) {
                                                                                chatMessageCell.linkPreviewHeight += AndroidUtilities.dp(2.66f);
                                                                            }
                                                                            chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                            createInstantViewButton();
                                                                        }
                                                                        tLRPC$Document6 = tLRPC$Document5;
                                                                        i112 = chatMessageCell.documentAttachType;
                                                                        if (i112 == 5) {
                                                                            if (chatMessageCell.currentPhotoObject != null) {
                                                                                chatMessageCell.photoImage.setImageBitmap((Drawable) null);
                                                                                if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                                }
                                                                                chatMessageCell.linkPreviewHeight -= AndroidUtilities.dp(4.0f);
                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(4.0f);
                                                                                messageObject2 = messageObject14;
                                                                                i117 = i111;
                                                                                i5 = 3;
                                                                                i6 = 20;
                                                                                i149 = 2;
                                                                                z9 = true;
                                                                                f2 = 1.0f;
                                                                                if (chatMessageCell.hasInvoicePreview) {
                                                                                }
                                                                                if (chatMessageCell.hasGamePreview) {
                                                                                    chatMessageCell.linkPreviewHeight += i127 + AndroidUtilities.dp(6.0f);
                                                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(4.0f);
                                                                                }
                                                                                chatMessageCell.calcBackgroundWidth(i126, i110, max2);
                                                                                if (!chatMessageCell.hasInvoicePreview) {
                                                                                    chatMessageCell.linkPreviewHeight += AndroidUtilities.dp(6.0f);
                                                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(6.0f);
                                                                                }
                                                                                if (!chatMessageCell.hasInvoicePreview) {
                                                                                    chatMessageCell.linkPreviewHeight += AndroidUtilities.dp(2.66f);
                                                                                }
                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                                createInstantViewButton();
                                                                            }
                                                                            if (tLRPC$Photo3 == null) {
                                                                                chatMessageCell.drawImageButton = !(tLRPC$Photo3 == null || z35) || (str10 != null && (str10.equals("photo") || ((str10.equals("document") && chatMessageCell.documentAttachType != 6) || str10.equals("gif") || (i113 = chatMessageCell.documentAttachType) == 4 || i113 == 8)));
                                                                                if (chatMessageCell.isSmallImage) {
                                                                                }
                                                                                i114 = chatMessageCell.linkPreviewHeight;
                                                                                if (i114 != 0) {
                                                                                }
                                                                                if (chatMessageCell.imageBackgroundSideColor != 0) {
                                                                                }
                                                                                if (chatMessageCell.hasInvoicePreview) {
                                                                                    dp21 = AndroidUtilities.dp(22.0f) + i124;
                                                                                }
                                                                                max2 = Math.max(max2, (dp21 - (!chatMessageCell.hasInvoicePreview ? 0 : AndroidUtilities.dp(12.0f))) + i93);
                                                                                tLRPC$PhotoSize8 = chatMessageCell.currentPhotoObject;
                                                                                if (tLRPC$PhotoSize8 != null) {
                                                                                }
                                                                                if (chatMessageCell.imageBackgroundSideColor != 0) {
                                                                                }
                                                                                if (z35) {
                                                                                    if (chatMessageCell.hasGamePreview) {
                                                                                        if (chatMessageCell.drawInstantViewType == 7) {
                                                                                        }
                                                                                        float f92 = i120;
                                                                                        float dp312 = f92 / (dp21 - AndroidUtilities.dp(2.0f));
                                                                                        i115 = (int) (f92 / dp312);
                                                                                        dp21 = (int) (i121 / dp312);
                                                                                        if (str7 == null) {
                                                                                            i123 = AndroidUtilities.displaySize.y;
                                                                                            if (dp21 > i123 / 2) {
                                                                                            }
                                                                                            if (chatMessageCell.imageBackgroundSideColor != 0) {
                                                                                            }
                                                                                            if (dp21 < AndroidUtilities.dp(60.0f)) {
                                                                                            }
                                                                                            if (chatMessageCell.isSmallImage) {
                                                                                            }
                                                                                            if (chatMessageCell.documentAttachType == 8) {
                                                                                                chatMessageCell.photoImage.setImageCoords(0.0f, 0.0f, Math.max(max2 - AndroidUtilities.dp(13.0f), i115), dp21);
                                                                                                float f112 = AndroidUtilities.density;
                                                                                                int i1872 = (int) (i115 / f112);
                                                                                                int i1882 = (int) (dp21 / f112);
                                                                                                Locale locale2 = Locale.US;
                                                                                                chatMessageCell.currentPhotoFilter = String.format(locale2, "%d_%d", Integer.valueOf(i1872), Integer.valueOf(i1882));
                                                                                                chatMessageCell.currentPhotoFilterThumb = String.format(locale2, "%d_%d_b", Integer.valueOf(i1872), Integer.valueOf(i1882));
                                                                                                i116 = chatMessageCell.drawInstantViewType;
                                                                                                if (i116 == 23) {
                                                                                                    if (webFile4 == null) {
                                                                                                    }
                                                                                                    z9 = true;
                                                                                                    if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                                                    }
                                                                                                    if (chatMessageCell.photoImage.getBitmap() != null) {
                                                                                                    }
                                                                                                    chatMessageCell.drawPhotoImage = true;
                                                                                                    if (str11 != null) {
                                                                                                    }
                                                                                                    String formatShortDuration222 = AndroidUtilities.formatShortDuration(i91);
                                                                                                    chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatShortDuration222));
                                                                                                    chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration222, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                                    if (chatMessageCell.hasInvoicePreview) {
                                                                                                    }
                                                                                                    if (chatMessageCell.hasGamePreview) {
                                                                                                    }
                                                                                                    chatMessageCell.calcBackgroundWidth(i126, i110, max2);
                                                                                                    if (!chatMessageCell.hasInvoicePreview) {
                                                                                                    }
                                                                                                    if (!chatMessageCell.hasInvoicePreview) {
                                                                                                    }
                                                                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                                                    createInstantViewButton();
                                                                                                }
                                                                                                if (webFile4 == null) {
                                                                                                }
                                                                                                z9 = true;
                                                                                                if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                                                }
                                                                                                if (chatMessageCell.photoImage.getBitmap() != null) {
                                                                                                }
                                                                                                chatMessageCell.drawPhotoImage = true;
                                                                                                if (str11 != null) {
                                                                                                }
                                                                                                String formatShortDuration2222 = AndroidUtilities.formatShortDuration(i91);
                                                                                                chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatShortDuration2222));
                                                                                                chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration2222, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                                if (chatMessageCell.hasInvoicePreview) {
                                                                                                }
                                                                                                if (chatMessageCell.hasGamePreview) {
                                                                                                }
                                                                                                chatMessageCell.calcBackgroundWidth(i126, i110, max2);
                                                                                                if (!chatMessageCell.hasInvoicePreview) {
                                                                                                }
                                                                                                if (!chatMessageCell.hasInvoicePreview) {
                                                                                                }
                                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                                                createInstantViewButton();
                                                                                            }
                                                                                            chatMessageCell.photoImage.setImageCoords(0.0f, 0.0f, i115, dp21);
                                                                                            float f1122 = AndroidUtilities.density;
                                                                                            int i18722 = (int) (i115 / f1122);
                                                                                            int i18822 = (int) (dp21 / f1122);
                                                                                            Locale locale22 = Locale.US;
                                                                                            chatMessageCell.currentPhotoFilter = String.format(locale22, "%d_%d", Integer.valueOf(i18722), Integer.valueOf(i18822));
                                                                                            chatMessageCell.currentPhotoFilterThumb = String.format(locale22, "%d_%d_b", Integer.valueOf(i18722), Integer.valueOf(i18822));
                                                                                            i116 = chatMessageCell.drawInstantViewType;
                                                                                            if (i116 == 23) {
                                                                                            }
                                                                                            if (webFile4 == null) {
                                                                                            }
                                                                                            z9 = true;
                                                                                            if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                                            }
                                                                                            if (chatMessageCell.photoImage.getBitmap() != null) {
                                                                                            }
                                                                                            chatMessageCell.drawPhotoImage = true;
                                                                                            if (str11 != null) {
                                                                                            }
                                                                                            String formatShortDuration22222 = AndroidUtilities.formatShortDuration(i91);
                                                                                            chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatShortDuration22222));
                                                                                            chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration22222, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                            if (chatMessageCell.hasInvoicePreview) {
                                                                                            }
                                                                                            if (chatMessageCell.hasGamePreview) {
                                                                                            }
                                                                                            chatMessageCell.calcBackgroundWidth(i126, i110, max2);
                                                                                            if (!chatMessageCell.hasInvoicePreview) {
                                                                                            }
                                                                                            if (!chatMessageCell.hasInvoicePreview) {
                                                                                            }
                                                                                            chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                                            createInstantViewButton();
                                                                                        }
                                                                                        i122 = AndroidUtilities.displaySize.y;
                                                                                        if (dp21 > i122 / 3) {
                                                                                        }
                                                                                        if (chatMessageCell.imageBackgroundSideColor != 0) {
                                                                                        }
                                                                                        if (dp21 < AndroidUtilities.dp(60.0f)) {
                                                                                        }
                                                                                        if (chatMessageCell.isSmallImage) {
                                                                                        }
                                                                                        if (chatMessageCell.documentAttachType == 8) {
                                                                                        }
                                                                                        chatMessageCell.photoImage.setImageCoords(0.0f, 0.0f, i115, dp21);
                                                                                        float f11222 = AndroidUtilities.density;
                                                                                        int i187222 = (int) (i115 / f11222);
                                                                                        int i188222 = (int) (dp21 / f11222);
                                                                                        Locale locale222 = Locale.US;
                                                                                        chatMessageCell.currentPhotoFilter = String.format(locale222, "%d_%d", Integer.valueOf(i187222), Integer.valueOf(i188222));
                                                                                        chatMessageCell.currentPhotoFilterThumb = String.format(locale222, "%d_%d_b", Integer.valueOf(i187222), Integer.valueOf(i188222));
                                                                                        i116 = chatMessageCell.drawInstantViewType;
                                                                                        if (i116 == 23) {
                                                                                        }
                                                                                        if (webFile4 == null) {
                                                                                        }
                                                                                        z9 = true;
                                                                                        if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                                        }
                                                                                        if (chatMessageCell.photoImage.getBitmap() != null) {
                                                                                        }
                                                                                        chatMessageCell.drawPhotoImage = true;
                                                                                        if (str11 != null) {
                                                                                        }
                                                                                        String formatShortDuration222222 = AndroidUtilities.formatShortDuration(i91);
                                                                                        chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatShortDuration222222));
                                                                                        chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration222222, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                        if (chatMessageCell.hasInvoicePreview) {
                                                                                        }
                                                                                        if (chatMessageCell.hasGamePreview) {
                                                                                        }
                                                                                        chatMessageCell.calcBackgroundWidth(i126, i110, max2);
                                                                                        if (!chatMessageCell.hasInvoicePreview) {
                                                                                        }
                                                                                        if (!chatMessageCell.hasInvoicePreview) {
                                                                                        }
                                                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                                        createInstantViewButton();
                                                                                    }
                                                                                    if (chatMessageCell.hasInvoicePreview) {
                                                                                    }
                                                                                    i118 = 640;
                                                                                    i119 = 360;
                                                                                    float f82 = i118;
                                                                                    float dp302 = f82 / (dp21 - AndroidUtilities.dp(2.0f));
                                                                                    dp21 = (int) (i119 / dp302);
                                                                                    i115 = (int) (f82 / dp302);
                                                                                    if (chatMessageCell.isSmallImage) {
                                                                                    }
                                                                                    if (chatMessageCell.documentAttachType == 8) {
                                                                                    }
                                                                                    chatMessageCell.photoImage.setImageCoords(0.0f, 0.0f, i115, dp21);
                                                                                    float f112222 = AndroidUtilities.density;
                                                                                    int i1872222 = (int) (i115 / f112222);
                                                                                    int i1882222 = (int) (dp21 / f112222);
                                                                                    Locale locale2222 = Locale.US;
                                                                                    chatMessageCell.currentPhotoFilter = String.format(locale2222, "%d_%d", Integer.valueOf(i1872222), Integer.valueOf(i1882222));
                                                                                    chatMessageCell.currentPhotoFilterThumb = String.format(locale2222, "%d_%d_b", Integer.valueOf(i1872222), Integer.valueOf(i1882222));
                                                                                    i116 = chatMessageCell.drawInstantViewType;
                                                                                    if (i116 == 23) {
                                                                                    }
                                                                                    if (webFile4 == null) {
                                                                                    }
                                                                                    z9 = true;
                                                                                    if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                                    }
                                                                                    if (chatMessageCell.photoImage.getBitmap() != null) {
                                                                                    }
                                                                                    chatMessageCell.drawPhotoImage = true;
                                                                                    if (str11 != null) {
                                                                                    }
                                                                                    String formatShortDuration2222222 = AndroidUtilities.formatShortDuration(i91);
                                                                                    chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatShortDuration2222222));
                                                                                    chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration2222222, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                    if (chatMessageCell.hasInvoicePreview) {
                                                                                    }
                                                                                    if (chatMessageCell.hasGamePreview) {
                                                                                    }
                                                                                    chatMessageCell.calcBackgroundWidth(i126, i110, max2);
                                                                                    if (!chatMessageCell.hasInvoicePreview) {
                                                                                    }
                                                                                    if (!chatMessageCell.hasInvoicePreview) {
                                                                                    }
                                                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                                    createInstantViewButton();
                                                                                }
                                                                                chatMessageCell.photoImage.setInvalidateAll(true);
                                                                                i115 = dp21;
                                                                                if (chatMessageCell.isSmallImage) {
                                                                                }
                                                                                if (chatMessageCell.documentAttachType == 8) {
                                                                                }
                                                                                chatMessageCell.photoImage.setImageCoords(0.0f, 0.0f, i115, dp21);
                                                                                float f1122222 = AndroidUtilities.density;
                                                                                int i18722222 = (int) (i115 / f1122222);
                                                                                int i18822222 = (int) (dp21 / f1122222);
                                                                                Locale locale22222 = Locale.US;
                                                                                chatMessageCell.currentPhotoFilter = String.format(locale22222, "%d_%d", Integer.valueOf(i18722222), Integer.valueOf(i18822222));
                                                                                chatMessageCell.currentPhotoFilterThumb = String.format(locale22222, "%d_%d_b", Integer.valueOf(i18722222), Integer.valueOf(i18822222));
                                                                                i116 = chatMessageCell.drawInstantViewType;
                                                                                if (i116 == 23) {
                                                                                }
                                                                                if (webFile4 == null) {
                                                                                }
                                                                                z9 = true;
                                                                                if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                                }
                                                                                if (chatMessageCell.photoImage.getBitmap() != null) {
                                                                                }
                                                                                chatMessageCell.drawPhotoImage = true;
                                                                                if (str11 != null) {
                                                                                }
                                                                                String formatShortDuration22222222 = AndroidUtilities.formatShortDuration(i91);
                                                                                chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatShortDuration22222222));
                                                                                chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration22222222, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                if (chatMessageCell.hasInvoicePreview) {
                                                                                }
                                                                                if (chatMessageCell.hasGamePreview) {
                                                                                }
                                                                                chatMessageCell.calcBackgroundWidth(i126, i110, max2);
                                                                                if (!chatMessageCell.hasInvoicePreview) {
                                                                                }
                                                                                if (!chatMessageCell.hasInvoicePreview) {
                                                                                }
                                                                                chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                                createInstantViewButton();
                                                                            }
                                                                            chatMessageCell.drawImageButton = !(tLRPC$Photo3 == null || z35) || (str10 != null && (str10.equals("photo") || ((str10.equals("document") && chatMessageCell.documentAttachType != 6) || str10.equals("gif") || (i113 = chatMessageCell.documentAttachType) == 4 || i113 == 8)));
                                                                            if (chatMessageCell.isSmallImage) {
                                                                            }
                                                                            i114 = chatMessageCell.linkPreviewHeight;
                                                                            if (i114 != 0) {
                                                                            }
                                                                            if (chatMessageCell.imageBackgroundSideColor != 0) {
                                                                            }
                                                                            if (chatMessageCell.hasInvoicePreview) {
                                                                            }
                                                                            max2 = Math.max(max2, (dp21 - (!chatMessageCell.hasInvoicePreview ? 0 : AndroidUtilities.dp(12.0f))) + i93);
                                                                            tLRPC$PhotoSize8 = chatMessageCell.currentPhotoObject;
                                                                            if (tLRPC$PhotoSize8 != null) {
                                                                            }
                                                                            if (chatMessageCell.imageBackgroundSideColor != 0) {
                                                                            }
                                                                            if (z35) {
                                                                            }
                                                                            chatMessageCell.photoImage.setInvalidateAll(true);
                                                                            i115 = dp21;
                                                                            if (chatMessageCell.isSmallImage) {
                                                                            }
                                                                            if (chatMessageCell.documentAttachType == 8) {
                                                                            }
                                                                            chatMessageCell.photoImage.setImageCoords(0.0f, 0.0f, i115, dp21);
                                                                            float f11222222 = AndroidUtilities.density;
                                                                            int i187222222 = (int) (i115 / f11222222);
                                                                            int i188222222 = (int) (dp21 / f11222222);
                                                                            Locale locale222222 = Locale.US;
                                                                            chatMessageCell.currentPhotoFilter = String.format(locale222222, "%d_%d", Integer.valueOf(i187222222), Integer.valueOf(i188222222));
                                                                            chatMessageCell.currentPhotoFilterThumb = String.format(locale222222, "%d_%d_b", Integer.valueOf(i187222222), Integer.valueOf(i188222222));
                                                                            i116 = chatMessageCell.drawInstantViewType;
                                                                            if (i116 == 23) {
                                                                            }
                                                                            if (webFile4 == null) {
                                                                            }
                                                                            z9 = true;
                                                                            if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                            }
                                                                            if (chatMessageCell.photoImage.getBitmap() != null) {
                                                                            }
                                                                            chatMessageCell.drawPhotoImage = true;
                                                                            if (str11 != null) {
                                                                            }
                                                                            String formatShortDuration222222222 = AndroidUtilities.formatShortDuration(i91);
                                                                            chatMessageCell.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatShortDuration222222222));
                                                                            chatMessageCell.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatShortDuration222222222, Theme.chat_durationPaint, chatMessageCell.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                            if (chatMessageCell.hasInvoicePreview) {
                                                                            }
                                                                            if (chatMessageCell.hasGamePreview) {
                                                                            }
                                                                            chatMessageCell.calcBackgroundWidth(i126, i110, max2);
                                                                            if (!chatMessageCell.hasInvoicePreview) {
                                                                            }
                                                                            if (!chatMessageCell.hasInvoicePreview) {
                                                                            }
                                                                            chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                            createInstantViewButton();
                                                                        }
                                                                        messageObject2 = messageObject14;
                                                                        i5 = 3;
                                                                        i6 = 20;
                                                                        i149 = 2;
                                                                        i = 4;
                                                                        z9 = true;
                                                                        f2 = 1.0f;
                                                                        if (!chatMessageCell.hasInvoicePreview) {
                                                                        }
                                                                        if (!chatMessageCell.hasInvoicePreview) {
                                                                        }
                                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(i149 + (!chatMessageCell.drawInstantView ? 0 : 4));
                                                                        createInstantViewButton();
                                                                    }
                                                                }
                                                                str7 = string8;
                                                                int dp232 = AndroidUtilities.dp(20.0f);
                                                                if (chatMessageCell.hasInvoicePreview) {
                                                                }
                                                                if (chatMessageCell.drawInstantViewType == 17) {
                                                                }
                                                                i93 = dp232;
                                                                i94 = i89 - i93;
                                                                messageObject13 = chatMessageCell.currentMessageObject;
                                                                if (messageObject13.photoThumbs == null) {
                                                                    messageObject13.generateThumbs(true);
                                                                }
                                                                chatMessageCell.totalHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                                                chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                                                chatMessageCell.totalHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                                                chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                                                max2 = Math.max(Math.max(max, chatMessageCell.giveawayMessageCell.getMeasuredWidth()), chatMessageCell.giveawayResultsMessageCell.getMeasuredWidth());
                                                                if (str7 == null) {
                                                                }
                                                                if (str5 != null) {
                                                                }
                                                                if (str3 != null) {
                                                                }
                                                                if (z33) {
                                                                    i94 -= AndroidUtilities.dp(48.0f);
                                                                }
                                                                if (charSequence5 != null) {
                                                                    i129 = chatMessageCell.linkPreviewHeight;
                                                                    if (i129 == 0) {
                                                                    }
                                                                    charSequence5 = Emoji.replaceEmoji(charSequence5, Theme.chat_replyNamePaint.getFontMetricsInt(), AndroidUtilities.dp(14.0f), false);
                                                                    charSequence7 = charSequence5;
                                                                    if (i103 == 3) {
                                                                    }
                                                                    CachedStaticLayout cachedStaticLayout82 = new CachedStaticLayout(generateStaticLayout(charSequence7, Theme.chat_replyNamePaint, i94, (i94 - dp21) - dp22, i103, 1));
                                                                    chatMessageCell.authorLayout = cachedStaticLayout82;
                                                                    i103 -= cachedStaticLayout82.getLineCount();
                                                                    chatMessageCell.authorLayoutLeft = chatMessageCell.authorLayout.getWidth();
                                                                    chatMessageCell.authorLayoutWidth = 0;
                                                                    while (i130 < chatMessageCell.authorLayout.getLineCount()) {
                                                                    }
                                                                    CachedStaticLayout cachedStaticLayout922 = chatMessageCell.authorLayout;
                                                                    int lineBottom322 = cachedStaticLayout922.getLineBottom(cachedStaticLayout922.getLineCount() - 1);
                                                                    chatMessageCell.linkPreviewHeight += lineBottom322;
                                                                    chatMessageCell.totalHeight += lineBottom322;
                                                                    max2 = Math.max(max2, chatMessageCell.authorLayoutWidth + i93);
                                                                    Math.max(i102, chatMessageCell.authorLayoutWidth + i93);
                                                                }
                                                                int i1632222222 = i103;
                                                                if (str4 == null) {
                                                                }
                                                                if (z32) {
                                                                    chatMessageCell.isSmallImage = false;
                                                                    z35 = false;
                                                                    if (!z35) {
                                                                    }
                                                                    if (chatMessageCell.drawInstantViewType == 17) {
                                                                    }
                                                                }
                                                                z35 = z32;
                                                                if (!z35) {
                                                                }
                                                                if (chatMessageCell.drawInstantViewType == 17) {
                                                                }
                                                            } else {
                                                                chatMessageCell.photoImage.setImageBitmap((Drawable) null);
                                                                chatMessageCell.calcBackgroundWidth(i153, extraTimeX, max);
                                                                if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                                    chatMessageCell.blurredPhotoImage.getBitmap().recycle();
                                                                    chatMessageCell.blurredPhotoImage.setImageBitmap((Bitmap) null);
                                                                }
                                                                if (messageObject.isUnsupported()) {
                                                                    createInstantViewButton();
                                                                }
                                                                messageObject2 = messageObject21;
                                                                i5 = 3;
                                                                i6 = 20;
                                                                i149 = 2;
                                                                i = 4;
                                                                z9 = true;
                                                                f2 = 1.0f;
                                                            }
                                                            i7 = 0;
                                                        }
                                                    }
                                                    int max9 = Math.max(i153, messageObject21.lastLineWidth) + AndroidUtilities.dp(31.0f);
                                                    chatMessageCell.backgroundWidth = max9;
                                                    chatMessageCell.backgroundWidth = Math.max(max9, chatMessageCell.timeWidth + AndroidUtilities.dp(31.0f));
                                                    chatMessageCell.availableTimeWidth = chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f);
                                                    if (messageObject.isRoundVideo()) {
                                                    }
                                                    setMessageObjectInternal(messageObject);
                                                    chatMessageCell.giveawayMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                                    chatMessageCell.giveawayResultsMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                                    if (messageObject.isSponsored()) {
                                                    }
                                                    if (!messageObject.isSponsored()) {
                                                    }
                                                    if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                    }
                                                    if (chatMessageCell.drawPinnedTop) {
                                                    }
                                                    messageObject11 = chatMessageCell.currentMessageObject;
                                                    if (messageObject11 != null) {
                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(5.0f);
                                                    }
                                                    int max52 = Math.max(Math.max(Math.max(chatMessageCell.backgroundWidth, chatMessageCell.nameWidth), chatMessageCell.forwardedNameWidth), chatMessageCell.replyNameWidth);
                                                    messageTopicButton = chatMessageCell.topicButton;
                                                    if (messageTopicButton != null) {
                                                    }
                                                    max = Math.max(max52, chatMessageCell.replyTextWidth);
                                                    if (chatMessageCell.commentLayout != null) {
                                                        max = Math.max(max, chatMessageCell.totalCommentWidth);
                                                    }
                                                    if (chatMessageCell.hasLinkPreview) {
                                                        chatMessageCell.photoImage.setImageBitmap((Drawable) null);
                                                        chatMessageCell.calcBackgroundWidth(i153, extraTimeX, max);
                                                        if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                        }
                                                        if (messageObject.isUnsupported()) {
                                                        }
                                                        messageObject2 = messageObject21;
                                                        i5 = 3;
                                                        i6 = 20;
                                                        i149 = 2;
                                                        i = 4;
                                                        z9 = true;
                                                        f2 = 1.0f;
                                                        i7 = 0;
                                                    }
                                                    messageObject12 = chatMessageCell.currentMessageObject;
                                                    if (!messageObject12.isRepostPreview) {
                                                    }
                                                    if (chatMessageCell.drawSideButton != 0) {
                                                    }
                                                    int dp212 = AndroidUtilities.dp(48.0f);
                                                    int dp222 = AndroidUtilities.dp(10.0f);
                                                    if (!messageObject.isSponsored()) {
                                                    }
                                                    i92 = chatMessageCell.drawInstantViewType;
                                                    if (i92 != 18) {
                                                    }
                                                    str7 = string8;
                                                    int dp2322 = AndroidUtilities.dp(20.0f);
                                                    if (chatMessageCell.hasInvoicePreview) {
                                                    }
                                                    if (chatMessageCell.drawInstantViewType == 17) {
                                                    }
                                                    i93 = dp2322;
                                                    i94 = i89 - i93;
                                                    messageObject13 = chatMessageCell.currentMessageObject;
                                                    if (messageObject13.photoThumbs == null) {
                                                    }
                                                    chatMessageCell.totalHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                                    chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                                    chatMessageCell.totalHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                                    chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                                    max2 = Math.max(Math.max(max, chatMessageCell.giveawayMessageCell.getMeasuredWidth()), chatMessageCell.giveawayResultsMessageCell.getMeasuredWidth());
                                                    if (str7 == null) {
                                                    }
                                                    if (str5 != null) {
                                                    }
                                                    if (str3 != null) {
                                                    }
                                                    if (z33) {
                                                    }
                                                    if (charSequence5 != null) {
                                                    }
                                                    int i16322222222 = i103;
                                                    if (str4 == null) {
                                                    }
                                                    if (z32) {
                                                    }
                                                    z35 = z32;
                                                    if (!z35) {
                                                    }
                                                    if (chatMessageCell.drawInstantViewType == 17) {
                                                    }
                                                    i7 = 0;
                                                }
                                            }
                                        } else if (messageObject.isUnsupported()) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 21;
                                        } else if (messageObject.isSponsored()) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.hasLinkPreview = true;
                                            chatMessageCell.instantViewButtonText = messageObject21.sponsoredButtonText;
                                            chatMessageCell.drawInstantViewType = 1;
                                        } else if (messageObject.isGiveawayOrGiveawayResults()) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 19;
                                        } else if ("telegram_channel_boost".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 18;
                                        } else if ("telegram_group_boost".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 22;
                                        } else if ("telegram_giftcode".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 20;
                                        } else if ("telegram_livestream".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 11;
                                        } else if ("telegram_voicechat".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 9;
                                        } else if ("telegram_channel".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 1;
                                        } else if ("telegram_user".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 13;
                                        } else if ("telegram_megagroup".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 2;
                                        } else if ("telegram_message".equals(str19) || ("photo".equals(str19) && tLRPC$WebPage != null && Browser.isTMe(tLRPC$WebPage.url))) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 3;
                                        } else if ("telegram_community".equals(str19) || "telegram_chatlist".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 14;
                                        } else if ("telegram_botapp".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 15;
                                        } else if ("telegram_theme".equals(str19)) {
                                            int size4 = MessageObject.getMedia(messageObject21.messageOwner).webpage.attributes.size();
                                            TLRPC$Document tLRPC$Document13 = null;
                                            for (int i191 = 0; i191 < size4; i191++) {
                                                TLRPC$WebPageAttribute tLRPC$WebPageAttribute = MessageObject.getMedia(messageObject21.messageOwner).webpage.attributes.get(i191);
                                                if (tLRPC$WebPageAttribute instanceof TLRPC$TL_webPageAttributeTheme) {
                                                    TLRPC$TL_webPageAttributeTheme tLRPC$TL_webPageAttributeTheme = (TLRPC$TL_webPageAttributeTheme) tLRPC$WebPageAttribute;
                                                    ArrayList<TLRPC$Document> arrayList13 = tLRPC$TL_webPageAttributeTheme.documents;
                                                    int size5 = arrayList13.size();
                                                    int i192 = 0;
                                                    while (true) {
                                                        if (i192 >= size5) {
                                                            z28 = true;
                                                            break;
                                                        }
                                                        TLRPC$Document tLRPC$Document14 = arrayList13.get(i192);
                                                        if ("application/x-tgtheme-android".equals(tLRPC$Document14.mime_type)) {
                                                            z28 = true;
                                                            chatMessageCell.drawInstantView = true;
                                                            chatMessageCell.drawInstantViewType = 7;
                                                            tLRPC$Document13 = tLRPC$Document14;
                                                            break;
                                                        }
                                                        i192++;
                                                    }
                                                    if (chatMessageCell.drawInstantView) {
                                                        break;
                                                    }
                                                    tLRPC$ThemeSettings = tLRPC$TL_webPageAttributeTheme.settings;
                                                    if (tLRPC$ThemeSettings != null) {
                                                        chatMessageCell.drawInstantView = z28;
                                                        chatMessageCell.drawInstantViewType = 7;
                                                        break;
                                                    }
                                                }
                                            }
                                            tLRPC$ThemeSettings = null;
                                            tLRPC$Document = tLRPC$Document13;
                                            z27 = false;
                                            tL_stories$StoryItem = null;
                                            arrayList5 = null;
                                            z29 = false;
                                            if (messageObject21.isRepostPreview) {
                                            }
                                            chatMessageCell.backgroundWidth = i153;
                                            if (chatMessageCell.hasLinkPreview) {
                                            }
                                            i87 = messageObject21.lastLineWidth;
                                            if (i153 - i87 >= extraTimeX) {
                                            }
                                            int max92 = Math.max(i153, messageObject21.lastLineWidth) + AndroidUtilities.dp(31.0f);
                                            chatMessageCell.backgroundWidth = max92;
                                            chatMessageCell.backgroundWidth = Math.max(max92, chatMessageCell.timeWidth + AndroidUtilities.dp(31.0f));
                                            chatMessageCell.availableTimeWidth = chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f);
                                            if (messageObject.isRoundVideo()) {
                                            }
                                            setMessageObjectInternal(messageObject);
                                            chatMessageCell.giveawayMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                            chatMessageCell.giveawayResultsMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                            if (messageObject.isSponsored()) {
                                            }
                                            if (!messageObject.isSponsored()) {
                                            }
                                            if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                            }
                                            if (chatMessageCell.drawPinnedTop) {
                                            }
                                            messageObject11 = chatMessageCell.currentMessageObject;
                                            if (messageObject11 != null) {
                                            }
                                            int max522 = Math.max(Math.max(Math.max(chatMessageCell.backgroundWidth, chatMessageCell.nameWidth), chatMessageCell.forwardedNameWidth), chatMessageCell.replyNameWidth);
                                            messageTopicButton = chatMessageCell.topicButton;
                                            if (messageTopicButton != null) {
                                            }
                                            max = Math.max(max522, chatMessageCell.replyTextWidth);
                                            if (chatMessageCell.commentLayout != null) {
                                            }
                                            if (chatMessageCell.hasLinkPreview) {
                                            }
                                            messageObject12 = chatMessageCell.currentMessageObject;
                                            if (!messageObject12.isRepostPreview) {
                                            }
                                            if (chatMessageCell.drawSideButton != 0) {
                                            }
                                            int dp2122 = AndroidUtilities.dp(48.0f);
                                            int dp2222 = AndroidUtilities.dp(10.0f);
                                            if (!messageObject.isSponsored()) {
                                            }
                                            i92 = chatMessageCell.drawInstantViewType;
                                            if (i92 != 18) {
                                            }
                                            str7 = string8;
                                            int dp23222 = AndroidUtilities.dp(20.0f);
                                            if (chatMessageCell.hasInvoicePreview) {
                                            }
                                            if (chatMessageCell.drawInstantViewType == 17) {
                                            }
                                            i93 = dp23222;
                                            i94 = i89 - i93;
                                            messageObject13 = chatMessageCell.currentMessageObject;
                                            if (messageObject13.photoThumbs == null) {
                                            }
                                            chatMessageCell.totalHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                            chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                            chatMessageCell.totalHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                            chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                            max2 = Math.max(Math.max(max, chatMessageCell.giveawayMessageCell.getMeasuredWidth()), chatMessageCell.giveawayResultsMessageCell.getMeasuredWidth());
                                            if (str7 == null) {
                                            }
                                            if (str5 != null) {
                                            }
                                            if (str3 != null) {
                                            }
                                            if (z33) {
                                            }
                                            if (charSequence5 != null) {
                                            }
                                            int i163222222222 = i103;
                                            if (str4 == null) {
                                            }
                                            if (z32) {
                                            }
                                            z35 = z32;
                                            if (!z35) {
                                            }
                                            if (chatMessageCell.drawInstantViewType == 17) {
                                            }
                                            i7 = 0;
                                        } else if ("telegram_story".equals(str19)) {
                                            int size6 = tLRPC$WebPage.attributes.size();
                                            int i193 = 0;
                                            while (true) {
                                                if (i193 >= size6) {
                                                    tL_stories$StoryItem2 = null;
                                                    break;
                                                }
                                                TLRPC$WebPageAttribute tLRPC$WebPageAttribute2 = tLRPC$WebPage.attributes.get(i193);
                                                if (tLRPC$WebPageAttribute2 instanceof TLRPC$TL_webPageAttributeStory) {
                                                    chatMessageCell.drawInstantView = true;
                                                    chatMessageCell.drawInstantViewType = 17;
                                                    TLRPC$TL_webPageAttributeStory tLRPC$TL_webPageAttributeStory = (TLRPC$TL_webPageAttributeStory) tLRPC$WebPageAttribute2;
                                                    tL_stories$StoryItem2 = tLRPC$TL_webPageAttributeStory.storyItem;
                                                    if (tL_stories$StoryItem2 != null) {
                                                        tL_stories$StoryItem2.messageId = messageObject.getId();
                                                        tL_stories$StoryItem2.dialogId = DialogObject.getPeerDialogId(tLRPC$TL_webPageAttributeStory.peer);
                                                        if (tL_stories$StoryItem2 instanceof TL_stories$TL_storyItemDeleted) {
                                                            chatMessageCell.drawInstantView = false;
                                                            chatMessageCell.hasLinkPreview = false;
                                                            chatMessageCell.drawInstantViewType = 0;
                                                        }
                                                    } else {
                                                        chatMessageCell.drawInstantView = false;
                                                        chatMessageCell.hasLinkPreview = false;
                                                        chatMessageCell.drawInstantViewType = 0;
                                                    }
                                                } else {
                                                    i193++;
                                                }
                                            }
                                            tL_stories$StoryItem = tL_stories$StoryItem2;
                                            z27 = false;
                                            tLRPC$Document = null;
                                            tLRPC$ThemeSettings = null;
                                            arrayList5 = null;
                                            z29 = false;
                                            if (messageObject21.isRepostPreview) {
                                            }
                                            chatMessageCell.backgroundWidth = i153;
                                            if (chatMessageCell.hasLinkPreview) {
                                            }
                                            i87 = messageObject21.lastLineWidth;
                                            if (i153 - i87 >= extraTimeX) {
                                            }
                                            int max922 = Math.max(i153, messageObject21.lastLineWidth) + AndroidUtilities.dp(31.0f);
                                            chatMessageCell.backgroundWidth = max922;
                                            chatMessageCell.backgroundWidth = Math.max(max922, chatMessageCell.timeWidth + AndroidUtilities.dp(31.0f));
                                            chatMessageCell.availableTimeWidth = chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f);
                                            if (messageObject.isRoundVideo()) {
                                            }
                                            setMessageObjectInternal(messageObject);
                                            chatMessageCell.giveawayMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                            chatMessageCell.giveawayResultsMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                            if (messageObject.isSponsored()) {
                                            }
                                            if (!messageObject.isSponsored()) {
                                            }
                                            if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                            }
                                            if (chatMessageCell.drawPinnedTop) {
                                            }
                                            messageObject11 = chatMessageCell.currentMessageObject;
                                            if (messageObject11 != null) {
                                            }
                                            int max5222 = Math.max(Math.max(Math.max(chatMessageCell.backgroundWidth, chatMessageCell.nameWidth), chatMessageCell.forwardedNameWidth), chatMessageCell.replyNameWidth);
                                            messageTopicButton = chatMessageCell.topicButton;
                                            if (messageTopicButton != null) {
                                            }
                                            max = Math.max(max5222, chatMessageCell.replyTextWidth);
                                            if (chatMessageCell.commentLayout != null) {
                                            }
                                            if (chatMessageCell.hasLinkPreview) {
                                            }
                                            messageObject12 = chatMessageCell.currentMessageObject;
                                            if (!messageObject12.isRepostPreview) {
                                            }
                                            if (chatMessageCell.drawSideButton != 0) {
                                            }
                                            int dp21222 = AndroidUtilities.dp(48.0f);
                                            int dp22222 = AndroidUtilities.dp(10.0f);
                                            if (!messageObject.isSponsored()) {
                                            }
                                            i92 = chatMessageCell.drawInstantViewType;
                                            if (i92 != 18) {
                                            }
                                            str7 = string8;
                                            int dp232222 = AndroidUtilities.dp(20.0f);
                                            if (chatMessageCell.hasInvoicePreview) {
                                            }
                                            if (chatMessageCell.drawInstantViewType == 17) {
                                            }
                                            i93 = dp232222;
                                            i94 = i89 - i93;
                                            messageObject13 = chatMessageCell.currentMessageObject;
                                            if (messageObject13.photoThumbs == null) {
                                            }
                                            chatMessageCell.totalHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                            chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                            chatMessageCell.totalHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                            chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                            max2 = Math.max(Math.max(max, chatMessageCell.giveawayMessageCell.getMeasuredWidth()), chatMessageCell.giveawayResultsMessageCell.getMeasuredWidth());
                                            if (str7 == null) {
                                            }
                                            if (str5 != null) {
                                            }
                                            if (str3 != null) {
                                            }
                                            if (z33) {
                                            }
                                            if (charSequence5 != null) {
                                            }
                                            int i1632222222222 = i103;
                                            if (str4 == null) {
                                            }
                                            if (z32) {
                                            }
                                            z35 = z32;
                                            if (!z35) {
                                            }
                                            if (chatMessageCell.drawInstantViewType == 17) {
                                            }
                                            i7 = 0;
                                        } else if ("telegram_background".equals(str19)) {
                                            chatMessageCell.drawInstantView = true;
                                            chatMessageCell.drawInstantViewType = 6;
                                            try {
                                                Uri parse2 = Uri.parse(MessageObject.getMedia(messageObject21.messageOwner).webpage.url);
                                                chatMessageCell.imageBackgroundIntensity = Utilities.parseInt((CharSequence) parse2.getQueryParameter("intensity")).intValue();
                                                String queryParameter = parse2.getQueryParameter("bg_color");
                                                String queryParameter2 = parse2.getQueryParameter("rotation");
                                                if (queryParameter2 != null) {
                                                    chatMessageCell.imageBackgroundGradientRotation = Utilities.parseInt((CharSequence) queryParameter2).intValue();
                                                }
                                                if (TextUtils.isEmpty(queryParameter)) {
                                                    TLRPC$Document document2 = messageObject.getDocument();
                                                    if (document2 != null && "image/png".equals(document2.mime_type)) {
                                                        queryParameter = "ffffff";
                                                    }
                                                    if (chatMessageCell.imageBackgroundIntensity == 0.0f) {
                                                        try {
                                                            chatMessageCell.imageBackgroundIntensity = 50.0f;
                                                            if (queryParameter == null) {
                                                                int parseInt = Integer.parseInt(queryParameter.substring(0, 6), 16) | (-16777216);
                                                                chatMessageCell.imageBackgroundColor = parseInt;
                                                                if (queryParameter.length() >= 13 && AndroidUtilities.isValidWallChar(queryParameter.charAt(6))) {
                                                                    int parseInt2 = Integer.parseInt(queryParameter.substring(7, 13), 16) | (-16777216);
                                                                    chatMessageCell.imageBackgroundGradientColor1 = parseInt2;
                                                                    parseInt = AndroidUtilities.getAverageColor(chatMessageCell.imageBackgroundColor, parseInt2);
                                                                }
                                                                if (queryParameter.length() >= 20 && AndroidUtilities.isValidWallChar(queryParameter.charAt(13))) {
                                                                    chatMessageCell.imageBackgroundGradientColor2 = Integer.parseInt(queryParameter.substring(14, 20), 16) | (-16777216);
                                                                }
                                                                if (queryParameter.length() == 27 && AndroidUtilities.isValidWallChar(queryParameter.charAt(20))) {
                                                                    chatMessageCell.imageBackgroundGradientColor3 = Integer.parseInt(queryParameter.substring(21), 16) | (-16777216);
                                                                }
                                                                if (chatMessageCell.imageBackgroundIntensity < 0.0f) {
                                                                    chatMessageCell.imageBackgroundSideColor = -15658735;
                                                                } else {
                                                                    chatMessageCell.imageBackgroundSideColor = AndroidUtilities.getPatternSideColor(parseInt);
                                                                }
                                                                chatMessageCell.photoImage.setColorFilter(new PorterDuffColorFilter(AndroidUtilities.getPatternColor(parseInt), PorterDuff.Mode.SRC_IN));
                                                                chatMessageCell.photoImage.setAlpha(Math.abs(chatMessageCell.imageBackgroundIntensity) / 100.0f);
                                                            } else {
                                                                String lastPathSegment = parse2.getLastPathSegment();
                                                                if (lastPathSegment != null && lastPathSegment.length() >= 6) {
                                                                    chatMessageCell.imageBackgroundColor = Integer.parseInt(lastPathSegment.substring(0, 6), 16) | (-16777216);
                                                                    if (lastPathSegment.length() >= 13 && AndroidUtilities.isValidWallChar(lastPathSegment.charAt(6))) {
                                                                        chatMessageCell.imageBackgroundGradientColor1 = Integer.parseInt(lastPathSegment.substring(7, 13), 16) | (-16777216);
                                                                    }
                                                                    if (lastPathSegment.length() >= 20 && AndroidUtilities.isValidWallChar(lastPathSegment.charAt(13))) {
                                                                        chatMessageCell.imageBackgroundGradientColor2 = Integer.parseInt(lastPathSegment.substring(14, 20), 16) | (-16777216);
                                                                    }
                                                                    if (lastPathSegment.length() == 27 && AndroidUtilities.isValidWallChar(lastPathSegment.charAt(20))) {
                                                                        chatMessageCell.imageBackgroundGradientColor3 = Integer.parseInt(lastPathSegment.substring(21), 16) | (-16777216);
                                                                    }
                                                                    TLRPC$TL_photoSizeEmpty tLRPC$TL_photoSizeEmpty = new TLRPC$TL_photoSizeEmpty();
                                                                    chatMessageCell.currentPhotoObject = tLRPC$TL_photoSizeEmpty;
                                                                    tLRPC$TL_photoSizeEmpty.type = "s";
                                                                    tLRPC$TL_photoSizeEmpty.w = AndroidUtilities.dp(180.0f);
                                                                    chatMessageCell.currentPhotoObject.h = AndroidUtilities.dp(150.0f);
                                                                    chatMessageCell.currentPhotoObject.location = new TLRPC$TL_fileLocationUnavailable();
                                                                }
                                                            }
                                                        } catch (Exception unused4) {
                                                        }
                                                    }
                                                }
                                                if (queryParameter == null) {
                                                }
                                            } catch (Exception unused5) {
                                            }
                                        } else if ("telegram_stickerset".equals(str19)) {
                                            int i194 = 0;
                                            while (true) {
                                                if (i194 >= tLRPC$WebPage.attributes.size()) {
                                                    tLRPC$TL_webPageAttributeStickerSet = null;
                                                    break;
                                                }
                                                if (tLRPC$WebPage.attributes.get(i194) instanceof TLRPC$TL_webPageAttributeStickerSet) {
                                                    tLRPC$TL_webPageAttributeStickerSet = (TLRPC$TL_webPageAttributeStickerSet) tLRPC$WebPage.attributes.get(i194);
                                                    break;
                                                }
                                                i194++;
                                            }
                                            chatMessageCell.drawInstantView = true;
                                            if (tLRPC$TL_webPageAttributeStickerSet != null && tLRPC$TL_webPageAttributeStickerSet.emojis) {
                                                chatMessageCell.drawInstantViewType = 24;
                                            } else {
                                                chatMessageCell.drawInstantViewType = 23;
                                            }
                                            chatMessageCell.isSmallImage = true;
                                            if (tLRPC$TL_webPageAttributeStickerSet == null) {
                                                arrayList4 = null;
                                                z29 = false;
                                            } else {
                                                arrayList4 = tLRPC$TL_webPageAttributeStickerSet.stickers;
                                                z29 = tLRPC$TL_webPageAttributeStickerSet.text_color;
                                            }
                                            arrayList5 = arrayList4;
                                            z27 = false;
                                            tL_stories$StoryItem = null;
                                            tLRPC$Document = null;
                                            tLRPC$ThemeSettings = null;
                                            if (messageObject21.isRepostPreview) {
                                            }
                                            chatMessageCell.backgroundWidth = i153;
                                            if (chatMessageCell.hasLinkPreview) {
                                            }
                                            i87 = messageObject21.lastLineWidth;
                                            if (i153 - i87 >= extraTimeX) {
                                            }
                                            int max9222 = Math.max(i153, messageObject21.lastLineWidth) + AndroidUtilities.dp(31.0f);
                                            chatMessageCell.backgroundWidth = max9222;
                                            chatMessageCell.backgroundWidth = Math.max(max9222, chatMessageCell.timeWidth + AndroidUtilities.dp(31.0f));
                                            chatMessageCell.availableTimeWidth = chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f);
                                            if (messageObject.isRoundVideo()) {
                                            }
                                            setMessageObjectInternal(messageObject);
                                            chatMessageCell.giveawayMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                            chatMessageCell.giveawayResultsMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                            if (messageObject.isSponsored()) {
                                            }
                                            if (!messageObject.isSponsored()) {
                                            }
                                            if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                            }
                                            if (chatMessageCell.drawPinnedTop) {
                                            }
                                            messageObject11 = chatMessageCell.currentMessageObject;
                                            if (messageObject11 != null) {
                                            }
                                            int max52222 = Math.max(Math.max(Math.max(chatMessageCell.backgroundWidth, chatMessageCell.nameWidth), chatMessageCell.forwardedNameWidth), chatMessageCell.replyNameWidth);
                                            messageTopicButton = chatMessageCell.topicButton;
                                            if (messageTopicButton != null) {
                                            }
                                            max = Math.max(max52222, chatMessageCell.replyTextWidth);
                                            if (chatMessageCell.commentLayout != null) {
                                            }
                                            if (chatMessageCell.hasLinkPreview) {
                                            }
                                            messageObject12 = chatMessageCell.currentMessageObject;
                                            if (!messageObject12.isRepostPreview) {
                                            }
                                            if (chatMessageCell.drawSideButton != 0) {
                                            }
                                            int dp212222 = AndroidUtilities.dp(48.0f);
                                            int dp222222 = AndroidUtilities.dp(10.0f);
                                            if (!messageObject.isSponsored()) {
                                            }
                                            i92 = chatMessageCell.drawInstantViewType;
                                            if (i92 != 18) {
                                            }
                                            str7 = string8;
                                            int dp2322222 = AndroidUtilities.dp(20.0f);
                                            if (chatMessageCell.hasInvoicePreview) {
                                            }
                                            if (chatMessageCell.drawInstantViewType == 17) {
                                            }
                                            i93 = dp2322222;
                                            i94 = i89 - i93;
                                            messageObject13 = chatMessageCell.currentMessageObject;
                                            if (messageObject13.photoThumbs == null) {
                                            }
                                            chatMessageCell.totalHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                            chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                            chatMessageCell.totalHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                            chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                            max2 = Math.max(Math.max(max, chatMessageCell.giveawayMessageCell.getMeasuredWidth()), chatMessageCell.giveawayResultsMessageCell.getMeasuredWidth());
                                            if (str7 == null) {
                                            }
                                            if (str5 != null) {
                                            }
                                            if (str3 != null) {
                                            }
                                            if (z33) {
                                            }
                                            if (charSequence5 != null) {
                                            }
                                            int i16322222222222 = i103;
                                            if (str4 == null) {
                                            }
                                            if (z32) {
                                            }
                                            z35 = z32;
                                            if (!z35) {
                                            }
                                            if (chatMessageCell.drawInstantViewType == 17) {
                                            }
                                            i7 = 0;
                                        }
                                        z27 = false;
                                        tL_stories$StoryItem = null;
                                        tLRPC$Document = null;
                                        tLRPC$ThemeSettings = null;
                                        arrayList5 = null;
                                        z29 = false;
                                        if (messageObject21.isRepostPreview) {
                                        }
                                        chatMessageCell.backgroundWidth = i153;
                                        if (chatMessageCell.hasLinkPreview) {
                                        }
                                        i87 = messageObject21.lastLineWidth;
                                        if (i153 - i87 >= extraTimeX) {
                                        }
                                        int max92222 = Math.max(i153, messageObject21.lastLineWidth) + AndroidUtilities.dp(31.0f);
                                        chatMessageCell.backgroundWidth = max92222;
                                        chatMessageCell.backgroundWidth = Math.max(max92222, chatMessageCell.timeWidth + AndroidUtilities.dp(31.0f));
                                        chatMessageCell.availableTimeWidth = chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f);
                                        if (messageObject.isRoundVideo()) {
                                        }
                                        setMessageObjectInternal(messageObject);
                                        chatMessageCell.giveawayMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                        chatMessageCell.giveawayResultsMessageCell.setMessageContent(messageObject21, getParentWidth(), chatMessageCell.forwardedNameWidth);
                                        if (messageObject.isSponsored()) {
                                        }
                                        if (!messageObject.isSponsored()) {
                                        }
                                        if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                        }
                                        if (chatMessageCell.drawPinnedTop) {
                                        }
                                        messageObject11 = chatMessageCell.currentMessageObject;
                                        if (messageObject11 != null) {
                                        }
                                        int max522222 = Math.max(Math.max(Math.max(chatMessageCell.backgroundWidth, chatMessageCell.nameWidth), chatMessageCell.forwardedNameWidth), chatMessageCell.replyNameWidth);
                                        messageTopicButton = chatMessageCell.topicButton;
                                        if (messageTopicButton != null) {
                                        }
                                        max = Math.max(max522222, chatMessageCell.replyTextWidth);
                                        if (chatMessageCell.commentLayout != null) {
                                        }
                                        if (chatMessageCell.hasLinkPreview) {
                                        }
                                        messageObject12 = chatMessageCell.currentMessageObject;
                                        if (!messageObject12.isRepostPreview) {
                                        }
                                        if (chatMessageCell.drawSideButton != 0) {
                                        }
                                        int dp2122222 = AndroidUtilities.dp(48.0f);
                                        int dp2222222 = AndroidUtilities.dp(10.0f);
                                        if (!messageObject.isSponsored()) {
                                        }
                                        i92 = chatMessageCell.drawInstantViewType;
                                        if (i92 != 18) {
                                        }
                                        str7 = string8;
                                        int dp23222222 = AndroidUtilities.dp(20.0f);
                                        if (chatMessageCell.hasInvoicePreview) {
                                        }
                                        if (chatMessageCell.drawInstantViewType == 17) {
                                        }
                                        i93 = dp23222222;
                                        i94 = i89 - i93;
                                        messageObject13 = chatMessageCell.currentMessageObject;
                                        if (messageObject13.photoThumbs == null) {
                                        }
                                        chatMessageCell.totalHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                        chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayMessageCell.getMeasuredHeight();
                                        chatMessageCell.totalHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                        chatMessageCell.linkPreviewHeight += chatMessageCell.giveawayResultsMessageCell.getMeasuredHeight();
                                        max2 = Math.max(Math.max(max, chatMessageCell.giveawayMessageCell.getMeasuredWidth()), chatMessageCell.giveawayResultsMessageCell.getMeasuredWidth());
                                        if (str7 == null) {
                                        }
                                        if (str5 != null) {
                                        }
                                        if (str3 != null) {
                                        }
                                        if (z33) {
                                        }
                                        if (charSequence5 != null) {
                                        }
                                        int i163222222222222 = i103;
                                        if (str4 == null) {
                                        }
                                        if (z32) {
                                        }
                                        z35 = z32;
                                        if (!z35) {
                                        }
                                        if (chatMessageCell.drawInstantViewType == 17) {
                                        }
                                        i7 = 0;
                                    } else {
                                        int i195 = messageObject17.type;
                                        if (i195 != 16) {
                                            if (i195 == 12) {
                                                MessageObject messageObject27 = messageObject17;
                                                chatMessageCell.drawContact = true;
                                                chatMessageCell.drawName = (chatMessageCell.isSavedChat && !messageObject.isOutOwner() && (messageObject.getSavedDialogId() < 0 || messageObject.getSavedDialogId() == UserObject.ANONYMOUS)) || (messageObject.isFromGroup() && messageObject.isSupergroup()) || (messageObject.isImportedForward() && messageObject27.messageOwner.fwd_from.from_id == null);
                                                chatMessageCell.drawForwardedName = !chatMessageCell.isRepliesChat;
                                                chatMessageCell.drawPhotoImage = true;
                                                chatMessageCell.photoImage.setRoundRadius(AndroidUtilities.dp(22.0f));
                                                if (AndroidUtilities.isTablet()) {
                                                    chatMessageCell.backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(270.0f));
                                                } else {
                                                    chatMessageCell.backgroundWidth = Math.min(getParentWidth() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(270.0f));
                                                }
                                                chatMessageCell.availableTimeWidth = chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f);
                                                long j2 = MessageObject.getMedia(messageObject27.messageOwner).user_id;
                                                TLRPC$User user3 = j2 == 0 ? null : MessagesController.getInstance(chatMessageCell.currentAccount).getUser(Long.valueOf(j2));
                                                int maxNameWidth = getMaxNameWidth() - AndroidUtilities.dp(80.0f);
                                                if (maxNameWidth < 0) {
                                                    maxNameWidth = AndroidUtilities.dp(10.0f);
                                                }
                                                if (user3 != null) {
                                                    chatMessageCell.contactAvatarDrawable.setInfo(chatMessageCell.currentAccount, user3);
                                                } else if (!TextUtils.isEmpty(MessageObject.getMedia(messageObject27.messageOwner).first_name) || !TextUtils.isEmpty(MessageObject.getMedia(messageObject27.messageOwner).last_name)) {
                                                    chatMessageCell.contactAvatarDrawable.setInfo(0L, MessageObject.getMedia(messageObject27.messageOwner).first_name, MessageObject.getMedia(messageObject27.messageOwner).last_name);
                                                } else {
                                                    z13 = false;
                                                    chatMessageCell.photoImage.setForUserOrChat(user3, z13 ? Theme.chat_contactDrawable[!messageObject.isOutOwner() ? (char) 0 : (char) 1] : chatMessageCell.contactAvatarDrawable, messageObject27);
                                                    if (TextUtils.isEmpty(messageObject27.vCardData)) {
                                                        charSequence = messageObject27.vCardData;
                                                    } else if (user3 != null && !TextUtils.isEmpty(user3.phone)) {
                                                        charSequence = PhoneFormat.getInstance().format("+" + user3.phone);
                                                    } else {
                                                        String str29 = MessageObject.getMedia(messageObject27.messageOwner).phone_number;
                                                        if (!TextUtils.isEmpty(str29)) {
                                                            charSequence = PhoneFormat.getInstance().format(str29);
                                                        } else {
                                                            charSequence = LocaleController.getString("NumberUnknown", R.string.NumberUnknown);
                                                        }
                                                    }
                                                    CharSequence charSequence11 = charSequence;
                                                    if (user3 == null || !TextUtils.isEmpty(messageObject27.vCardData) || (MessageObject.getMedia(messageObject27.messageOwner) instanceof TLRPC$TL_messageMediaContact)) {
                                                        if (user3 == null) {
                                                            chatMessageCell.drawContactSendMessage = true;
                                                            chatMessageCell.drawContactAdd = !user3.contact;
                                                        } else {
                                                            chatMessageCell.drawContactView = true;
                                                        }
                                                    }
                                                    replace = ContactsController.formatName(MessageObject.getMedia(messageObject27.messageOwner).first_name, MessageObject.getMedia(messageObject27.messageOwner).last_name).replace('\n', ' ');
                                                    if (replace.length() == 0 && (replace = MessageObject.getMedia(messageObject27.messageOwner).phone_number) == null) {
                                                        replace = "";
                                                    }
                                                    chatMessageCell.titleLayout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(replace, Theme.chat_contactNamePaint, maxNameWidth, TextUtils.TruncateAt.END), Theme.chat_contactNamePaint, maxNameWidth + AndroidUtilities.dp(4.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                    chatMessageCell.docTitleLayout = new CachedStaticLayout(new StaticLayout(charSequence11, Theme.chat_contactPhonePaint, maxNameWidth + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, AndroidUtilities.dp(1.0f), false));
                                                    setMessageObjectInternal(messageObject);
                                                    if (chatMessageCell.drawForwardedName && messageObject.needDrawForwarded() && ((groupedMessagePosition3 = chatMessageCell.currentPosition) == null || groupedMessagePosition3.minY == 0)) {
                                                        chatMessageCell.namesOffset += AndroidUtilities.dp(5.0f);
                                                    } else if (chatMessageCell.drawNameLayout && messageObject.getReplyMsgId() == 0) {
                                                        chatMessageCell.namesOffset += AndroidUtilities.dp(7.0f);
                                                    }
                                                    chatMessageCell.totalHeight = AndroidUtilities.dp(65.0f) + chatMessageCell.namesOffset + chatMessageCell.docTitleLayout.getHeight();
                                                    if (chatMessageCell.drawPinnedTop) {
                                                        chatMessageCell.namesOffset -= AndroidUtilities.dp(1.0f);
                                                    }
                                                    if (chatMessageCell.drawContactSendMessage || chatMessageCell.drawContactAdd || chatMessageCell.drawContactView) {
                                                        createContactButtons();
                                                    } else if (chatMessageCell.docTitleLayout.getLineCount() > 0) {
                                                        int dp34 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(110.0f);
                                                        CachedStaticLayout cachedStaticLayout13 = chatMessageCell.docTitleLayout;
                                                        if (dp34 - ((int) Math.ceil(cachedStaticLayout13.getLineWidth(cachedStaticLayout13.getLineCount() - 1))) < chatMessageCell.timeWidth) {
                                                            chatMessageCell.totalHeight += AndroidUtilities.dp(8.0f);
                                                        }
                                                    }
                                                    reactionsLayoutInBubble = chatMessageCell.reactionsLayoutInBubble;
                                                    if (!reactionsLayoutInBubble.isSmall && !reactionsLayoutInBubble.isEmpty) {
                                                        reactionsLayoutInBubble.measure(chatMessageCell.backgroundWidth - AndroidUtilities.dp(32.0f), 3);
                                                        ReactionsLayoutInBubble reactionsLayoutInBubble7 = chatMessageCell.reactionsLayoutInBubble;
                                                        reactionsLayoutInBubble7.totalHeight = reactionsLayoutInBubble7.height;
                                                        dp4 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(32.0f);
                                                        reactionsLayoutInBubble2 = chatMessageCell.reactionsLayoutInBubble;
                                                        if (dp4 - reactionsLayoutInBubble2.lastLineX < chatMessageCell.timeWidth) {
                                                            reactionsLayoutInBubble2.totalHeight += AndroidUtilities.dp(12.0f);
                                                            chatMessageCell.reactionsLayoutInBubble.positionOffsetY += -AndroidUtilities.dp(12.0f);
                                                        }
                                                        chatMessageCell.totalHeight += chatMessageCell.reactionsLayoutInBubble.totalHeight;
                                                    }
                                                    messageObject2 = messageObject27;
                                                    i5 = 3;
                                                    i6 = 20;
                                                    i149 = 2;
                                                    i = 4;
                                                    i7 = 0;
                                                    z9 = false;
                                                }
                                                z13 = true;
                                                if (z13) {
                                                }
                                                chatMessageCell.photoImage.setForUserOrChat(user3, z13 ? Theme.chat_contactDrawable[!messageObject.isOutOwner() ? (char) 0 : (char) 1] : chatMessageCell.contactAvatarDrawable, messageObject27);
                                                if (TextUtils.isEmpty(messageObject27.vCardData)) {
                                                }
                                                CharSequence charSequence112 = charSequence;
                                                if (user3 == null) {
                                                }
                                                if (user3 == null) {
                                                }
                                                replace = ContactsController.formatName(MessageObject.getMedia(messageObject27.messageOwner).first_name, MessageObject.getMedia(messageObject27.messageOwner).last_name).replace('\n', ' ');
                                                if (replace.length() == 0) {
                                                    replace = "";
                                                }
                                                chatMessageCell.titleLayout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(replace, Theme.chat_contactNamePaint, maxNameWidth, TextUtils.TruncateAt.END), Theme.chat_contactNamePaint, maxNameWidth + AndroidUtilities.dp(4.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                chatMessageCell.docTitleLayout = new CachedStaticLayout(new StaticLayout(charSequence112, Theme.chat_contactPhonePaint, maxNameWidth + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, AndroidUtilities.dp(1.0f), false));
                                                setMessageObjectInternal(messageObject);
                                                if (chatMessageCell.drawForwardedName) {
                                                    chatMessageCell.namesOffset += AndroidUtilities.dp(5.0f);
                                                    chatMessageCell.totalHeight = AndroidUtilities.dp(65.0f) + chatMessageCell.namesOffset + chatMessageCell.docTitleLayout.getHeight();
                                                    if (chatMessageCell.drawPinnedTop) {
                                                    }
                                                    if (chatMessageCell.drawContactSendMessage) {
                                                        if (chatMessageCell.docTitleLayout.getLineCount() > 0) {
                                                        }
                                                        reactionsLayoutInBubble = chatMessageCell.reactionsLayoutInBubble;
                                                        if (!reactionsLayoutInBubble.isSmall) {
                                                            reactionsLayoutInBubble.measure(chatMessageCell.backgroundWidth - AndroidUtilities.dp(32.0f), 3);
                                                            ReactionsLayoutInBubble reactionsLayoutInBubble72 = chatMessageCell.reactionsLayoutInBubble;
                                                            reactionsLayoutInBubble72.totalHeight = reactionsLayoutInBubble72.height;
                                                            dp4 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(32.0f);
                                                            reactionsLayoutInBubble2 = chatMessageCell.reactionsLayoutInBubble;
                                                            if (dp4 - reactionsLayoutInBubble2.lastLineX < chatMessageCell.timeWidth) {
                                                            }
                                                            chatMessageCell.totalHeight += chatMessageCell.reactionsLayoutInBubble.totalHeight;
                                                        }
                                                        messageObject2 = messageObject27;
                                                        i5 = 3;
                                                        i6 = 20;
                                                        i149 = 2;
                                                        i = 4;
                                                        i7 = 0;
                                                        z9 = false;
                                                    }
                                                    createContactButtons();
                                                    reactionsLayoutInBubble = chatMessageCell.reactionsLayoutInBubble;
                                                    if (!reactionsLayoutInBubble.isSmall) {
                                                    }
                                                    messageObject2 = messageObject27;
                                                    i5 = 3;
                                                    i6 = 20;
                                                    i149 = 2;
                                                    i = 4;
                                                    i7 = 0;
                                                    z9 = false;
                                                }
                                                if (chatMessageCell.drawNameLayout) {
                                                    chatMessageCell.namesOffset += AndroidUtilities.dp(7.0f);
                                                }
                                                chatMessageCell.totalHeight = AndroidUtilities.dp(65.0f) + chatMessageCell.namesOffset + chatMessageCell.docTitleLayout.getHeight();
                                                if (chatMessageCell.drawPinnedTop) {
                                                }
                                                if (chatMessageCell.drawContactSendMessage) {
                                                }
                                                createContactButtons();
                                                reactionsLayoutInBubble = chatMessageCell.reactionsLayoutInBubble;
                                                if (!reactionsLayoutInBubble.isSmall) {
                                                }
                                                messageObject2 = messageObject27;
                                                i5 = 3;
                                                i6 = 20;
                                                i149 = 2;
                                                i = 4;
                                                i7 = 0;
                                                z9 = false;
                                            } else if (i195 == i4) {
                                                messageObject5 = messageObject17;
                                                chatMessageCell.drawForwardedName = !chatMessageCell.isRepliesChat;
                                                chatMessageCell.drawName = (chatMessageCell.isSavedChat && !messageObject.isOutOwner() && (messageObject.getSavedDialogId() < 0 || messageObject.getSavedDialogId() == UserObject.ANONYMOUS)) || (messageObject.isFromGroup() && messageObject.isSupergroup()) || (messageObject.isImportedForward() && messageObject5.messageOwner.fwd_from.from_id == null);
                                                if (AndroidUtilities.isTablet()) {
                                                    min = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(270.0f));
                                                    chatMessageCell.backgroundWidth = min;
                                                } else {
                                                    min = Math.min(getParentWidth() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(270.0f));
                                                    chatMessageCell.backgroundWidth = min;
                                                }
                                                chatMessageCell.createDocumentLayout(chatMessageCell.backgroundWidth, messageObject5);
                                                setMessageObjectInternal(messageObject);
                                                int dp35 = AndroidUtilities.dp(70.0f);
                                                int i196 = chatMessageCell.namesOffset;
                                                chatMessageCell.totalHeight = dp35 + i196;
                                                if (chatMessageCell.drawPinnedTop) {
                                                    chatMessageCell.namesOffset = i196 - AndroidUtilities.dp(1.0f);
                                                }
                                                ReactionsLayoutInBubble reactionsLayoutInBubble8 = chatMessageCell.reactionsLayoutInBubble;
                                                if (!reactionsLayoutInBubble8.isSmall) {
                                                    reactionsLayoutInBubble8.measure(min - AndroidUtilities.dp(!messageObject.isOutOwner() ? 24.0f : 32.0f), 3);
                                                    ReactionsLayoutInBubble reactionsLayoutInBubble9 = chatMessageCell.reactionsLayoutInBubble;
                                                    if (!reactionsLayoutInBubble9.isEmpty) {
                                                        reactionsLayoutInBubble9.totalHeight = reactionsLayoutInBubble9.height;
                                                        if (TextUtils.isEmpty(messageObject5.caption)) {
                                                            chatMessageCell.reactionsLayoutInBubble.totalHeight += AndroidUtilities.dp(12.0f);
                                                        } else {
                                                            chatMessageCell.reactionsLayoutInBubble.totalHeight += AndroidUtilities.dp(8.0f);
                                                        }
                                                        int i197 = chatMessageCell.reactionsLayoutInBubble.width;
                                                        if (i197 > chatMessageCell.backgroundWidth) {
                                                            chatMessageCell.backgroundWidth = i197;
                                                        }
                                                        int dp36 = chatMessageCell.timeWidth + AndroidUtilities.dp(6.0f);
                                                        if (messageObject.isQuickReply() && !messageObject.isSendError()) {
                                                            dp36 -= AndroidUtilities.dp(3.0f);
                                                        } else if (messageObject.isOutOwner()) {
                                                            dp36 += AndroidUtilities.dp(20.5f);
                                                        }
                                                        int extraTimeX2 = dp36 + getExtraTimeX();
                                                        ReactionsLayoutInBubble reactionsLayoutInBubble10 = chatMessageCell.reactionsLayoutInBubble;
                                                        if (reactionsLayoutInBubble10.lastLineX + extraTimeX2 >= chatMessageCell.backgroundWidth) {
                                                            reactionsLayoutInBubble10.totalHeight += AndroidUtilities.dp(12.0f);
                                                            chatMessageCell.reactionsLayoutInBubble.positionOffsetY -= AndroidUtilities.dp(12.0f);
                                                        }
                                                        chatMessageCell.totalHeight += chatMessageCell.reactionsLayoutInBubble.totalHeight;
                                                    }
                                                }
                                            } else if (i195 == 14) {
                                                messageObject5 = messageObject17;
                                                chatMessageCell.drawName = (chatMessageCell.isSavedChat && !messageObject.isOutOwner() && (messageObject.getSavedDialogId() < 0 || messageObject.getSavedDialogId() == UserObject.ANONYMOUS)) || (((messageObject.isFromGroup() && messageObject.isSupergroup()) || (messageObject.isImportedForward() && messageObject5.messageOwner.fwd_from.from_id == null)) && ((groupedMessagePosition4 = chatMessageCell.currentPosition) == null || (groupedMessagePosition4.flags & 4) != 0));
                                                if (AndroidUtilities.isTablet()) {
                                                    min2 = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(270.0f));
                                                    chatMessageCell.backgroundWidth = min2;
                                                } else {
                                                    min2 = Math.min(getParentWidth() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(270.0f));
                                                    chatMessageCell.backgroundWidth = min2;
                                                }
                                                int createDocumentLayout2 = chatMessageCell.createDocumentLayout(chatMessageCell.backgroundWidth, messageObject5);
                                                setMessageObjectInternal(messageObject);
                                                chatMessageCell.totalHeight = AndroidUtilities.dp(82.0f) + chatMessageCell.namesOffset;
                                                if (AndroidUtilities.dp(76.0f) + createDocumentLayout2 >= (chatMessageCell.backgroundWidth - chatMessageCell.timeWidth) - AndroidUtilities.dp(12.0f)) {
                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(14.0f);
                                                }
                                                if (chatMessageCell.currentPosition != null && (groupedMessages5 = chatMessageCell.currentMessagesGroup) != null && groupedMessages5.messages.size() > 1) {
                                                    if ((chatMessageCell.currentPosition.flags & 4) == 0) {
                                                        chatMessageCell.totalHeight -= AndroidUtilities.dp(6.0f);
                                                        chatMessageCell.mediaOffsetY -= AndroidUtilities.dp(6.0f);
                                                    }
                                                    if ((chatMessageCell.currentPosition.flags & 8) == 0) {
                                                        chatMessageCell.totalHeight -= AndroidUtilities.dp(6.0f);
                                                    }
                                                }
                                                if (chatMessageCell.drawPinnedTop) {
                                                    chatMessageCell.namesOffset -= AndroidUtilities.dp(1.0f);
                                                }
                                                ReactionsLayoutInBubble reactionsLayoutInBubble11 = chatMessageCell.reactionsLayoutInBubble;
                                                if (!reactionsLayoutInBubble11.isSmall) {
                                                    reactionsLayoutInBubble11.measure(min2 - AndroidUtilities.dp(24.0f), 3);
                                                    ReactionsLayoutInBubble reactionsLayoutInBubble12 = chatMessageCell.reactionsLayoutInBubble;
                                                    if (!reactionsLayoutInBubble12.isEmpty) {
                                                        reactionsLayoutInBubble12.totalHeight = reactionsLayoutInBubble12.height + AndroidUtilities.dp(12.0f);
                                                        measureTime(messageObject);
                                                        ReactionsLayoutInBubble reactionsLayoutInBubble13 = chatMessageCell.reactionsLayoutInBubble;
                                                        int i198 = reactionsLayoutInBubble13.width;
                                                        if (i198 > chatMessageCell.backgroundWidth) {
                                                            chatMessageCell.backgroundWidth = i198;
                                                        }
                                                        if (reactionsLayoutInBubble13.lastLineX + chatMessageCell.timeWidth + AndroidUtilities.dp(24.0f) > chatMessageCell.backgroundWidth) {
                                                            chatMessageCell.reactionsLayoutInBubble.totalHeight += AndroidUtilities.dp(12.0f);
                                                            chatMessageCell.reactionsLayoutInBubble.positionOffsetY -= AndroidUtilities.dp(12.0f);
                                                        }
                                                        if (!messageObject5.isRestrictedMessage && messageObject5.caption != null) {
                                                            chatMessageCell.reactionsLayoutInBubble.positionOffsetY += AndroidUtilities.dp(14.0f);
                                                        }
                                                        chatMessageCell.totalHeight += chatMessageCell.reactionsLayoutInBubble.totalHeight;
                                                    }
                                                }
                                            } else if (i195 == 17) {
                                                messageObject5 = messageObject17;
                                                boolean z62 = false;
                                                ArrayList arrayList14 = null;
                                                boolean z63 = true;
                                                z63 = true;
                                                z63 = true;
                                                float f12 = 0.0f;
                                                int i199 = 2;
                                                if (chatMessageCell.timerParticles == null) {
                                                    chatMessageCell.timerParticles = new TimerParticles();
                                                }
                                                chatMessageCell.createSelectorDrawable(0);
                                                chatMessageCell.drawName = true;
                                                chatMessageCell.drawForwardedName = !chatMessageCell.isRepliesChat;
                                                chatMessageCell.drawPhotoImage = false;
                                                int min3 = Math.min(AndroidUtilities.dp(500.0f), messageObject.getMaxMessageTextWidth());
                                                chatMessageCell.backgroundWidth = AndroidUtilities.dp(31.0f) + min3;
                                                TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll3 = (TLRPC$TL_messageMediaPoll) MessageObject.getMedia(messageObject5.messageOwner);
                                                chatMessageCell.timerTransitionProgress = tLRPC$TL_messageMediaPoll3.poll.close_date - ConnectionsManager.getInstance(chatMessageCell.currentAccount).getCurrentTime() >= 60 ? 1.0f : 0.0f;
                                                chatMessageCell.pollClosed = tLRPC$TL_messageMediaPoll3.poll.closed;
                                                boolean isVoted = messageObject.isVoted();
                                                chatMessageCell.pollVoted = isVoted;
                                                if (isVoted) {
                                                    messageObject5.checkedVotes.clear();
                                                }
                                                CharSequence replaceEmoji = Emoji.replaceEmoji((CharSequence) new SpannableStringBuilder(tLRPC$TL_messageMediaPoll3.poll.question.text), Theme.chat_audioTitlePaint.getFontMetricsInt(), AndroidUtilities.dp(16.0f), false);
                                                ArrayList<TLRPC$MessageEntity> arrayList15 = tLRPC$TL_messageMediaPoll3.poll.question.entities;
                                                if (arrayList15 != null) {
                                                    replaceEmoji = MessageObject.replaceAnimatedEmoji(replaceEmoji, arrayList15, Theme.chat_audioTitlePaint.getFontMetricsInt(), true);
                                                    MessageObject.addEntitiesToText(replaceEmoji, tLRPC$TL_messageMediaPoll3.poll.question.entities, chatMessageCell.currentMessageObject.isOutOwner(), false, false, false);
                                                }
                                                CachedStaticLayout cachedStaticLayout14 = new CachedStaticLayout(new StaticLayout(replaceEmoji, Theme.chat_audioTitlePaint, (AndroidUtilities.dp(2.0f) + min3) - (getExtraTextX() * 2), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                chatMessageCell.titleLayout = cachedStaticLayout14;
                                                chatMessageCell.animatedEmojiPollQuestion = AnimatedEmojiSpan.update(0, (View) chatMessageCell, false, chatMessageCell.animatedEmojiPollQuestion, cachedStaticLayout14.layout);
                                                CachedStaticLayout cachedStaticLayout15 = chatMessageCell.titleLayout;
                                                if (cachedStaticLayout15 == null) {
                                                    z15 = false;
                                                } else {
                                                    int lineCount3 = cachedStaticLayout15.getLineCount();
                                                    int i200 = 0;
                                                    while (true) {
                                                        if (i200 >= lineCount3) {
                                                            z14 = false;
                                                            break;
                                                        }
                                                        if (chatMessageCell.titleLayout.getLineLeft(i200) > 0.0f) {
                                                            z14 = true;
                                                            break;
                                                        }
                                                        i200++;
                                                    }
                                                    z15 = z14;
                                                }
                                                if (chatMessageCell.pollClosed) {
                                                    string3 = LocaleController.getString("FinalResults", R.string.FinalResults);
                                                } else {
                                                    TLRPC$Poll tLRPC$Poll3 = tLRPC$TL_messageMediaPoll3.poll;
                                                    if (tLRPC$Poll3.quiz) {
                                                        if (tLRPC$Poll3.public_voters) {
                                                            string3 = LocaleController.getString("QuizPoll", R.string.QuizPoll);
                                                        } else {
                                                            string3 = LocaleController.getString("AnonymousQuizPoll", R.string.AnonymousQuizPoll);
                                                        }
                                                    } else if (tLRPC$Poll3.public_voters) {
                                                        string3 = LocaleController.getString("PublicPoll", R.string.PublicPoll);
                                                    } else {
                                                        string3 = LocaleController.getString("AnonymousPoll", R.string.AnonymousPoll);
                                                    }
                                                }
                                                float f13 = min3;
                                                CachedStaticLayout cachedStaticLayout16 = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(string3, Theme.chat_timePaint, f13, TextUtils.TruncateAt.END), Theme.chat_timePaint, (AndroidUtilities.dp(2.0f) + min3) - (getExtraTextX() * 2), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                chatMessageCell.docTitleLayout = cachedStaticLayout16;
                                                if (cachedStaticLayout16.getLineCount() > 0) {
                                                    if (z15 && !LocaleController.isRTL) {
                                                        chatMessageCell.docTitleOffsetX = (int) Math.ceil(f13 - chatMessageCell.docTitleLayout.getLineWidth(0));
                                                    } else if (!z15 && LocaleController.isRTL) {
                                                        chatMessageCell.docTitleOffsetX = -((int) Math.ceil(chatMessageCell.docTitleLayout.getLineLeft(0)));
                                                    } else {
                                                        chatMessageCell.docTitleOffsetX = 0;
                                                    }
                                                }
                                                int dp37 = min3 - AndroidUtilities.dp(!messageObject.isOutOwner() ? 8.0f : 28.0f);
                                                if (!chatMessageCell.isBot) {
                                                    TLRPC$Poll tLRPC$Poll4 = tLRPC$TL_messageMediaPoll3.poll;
                                                    TextPaint textPaint = (tLRPC$Poll4.public_voters || tLRPC$Poll4.multiple_choice) ? Theme.chat_locationAddressPaint : Theme.chat_livePaint;
                                                    if (tLRPC$Poll4.quiz) {
                                                        int i201 = tLRPC$TL_messageMediaPoll3.results.total_voters;
                                                        ellipsize = TextUtils.ellipsize(i201 != 0 ? LocaleController.formatPluralString("Answer", i201, new Object[0]) : LocaleController.getString("NoVotesQuiz", R.string.NoVotesQuiz), textPaint, dp37, TextUtils.TruncateAt.END);
                                                    } else {
                                                        int i202 = tLRPC$TL_messageMediaPoll3.results.total_voters;
                                                        ellipsize = TextUtils.ellipsize(i202 != 0 ? LocaleController.formatPluralString("Vote", i202, new Object[0]) : LocaleController.getString("NoVotes", R.string.NoVotes), textPaint, dp37, TextUtils.TruncateAt.END);
                                                    }
                                                    CachedStaticLayout cachedStaticLayout17 = new CachedStaticLayout(new StaticLayout(ellipsize, textPaint, dp37, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                    chatMessageCell.infoLayout = cachedStaticLayout17;
                                                    TLRPC$Poll tLRPC$Poll5 = tLRPC$TL_messageMediaPoll3.poll;
                                                    if (!tLRPC$Poll5.public_voters && !tLRPC$Poll5.multiple_choice) {
                                                        chatMessageCell.infoX = (int) Math.ceil(cachedStaticLayout17.getLineCount() <= 0 ? 0.0d : -chatMessageCell.infoLayout.getLineLeft(0));
                                                        chatMessageCell.availableTimeWidth = (int) ((f13 - chatMessageCell.infoLayout.getLineWidth(0)) - AndroidUtilities.dp(16.0f));
                                                    } else {
                                                        double dp38 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(28.0f);
                                                        double ceil7 = Math.ceil(chatMessageCell.infoLayout.getLineWidth(0));
                                                        Double.isNaN(dp38);
                                                        double lineLeft3 = chatMessageCell.infoLayout.getLineLeft(0);
                                                        Double.isNaN(lineLeft3);
                                                        chatMessageCell.infoX = (int) (((dp38 - ceil7) / 2.0d) - lineLeft3);
                                                        chatMessageCell.availableTimeWidth = min3;
                                                    }
                                                }
                                                measureTime(messageObject);
                                                TLRPC$Poll tLRPC$Poll6 = tLRPC$TL_messageMediaPoll3.poll;
                                                chatMessageCell.lastPoll = tLRPC$Poll6;
                                                TLRPC$PollResults tLRPC$PollResults3 = tLRPC$TL_messageMediaPoll3.results;
                                                chatMessageCell.lastPollResults = tLRPC$PollResults3.results;
                                                int i203 = tLRPC$PollResults3.total_voters;
                                                chatMessageCell.lastPollResultsVoters = i203;
                                                if ((tLRPC$Poll6.multiple_choice && !chatMessageCell.pollVoted && !chatMessageCell.pollClosed) || (!chatMessageCell.isBot && tLRPC$Poll6.public_voters && (chatMessageCell.pollVoted || (chatMessageCell.pollClosed && tLRPC$PollResults3 != null && i203 != 0)))) {
                                                    chatMessageCell.drawInstantView = true;
                                                    chatMessageCell.drawInstantViewType = 8;
                                                    createInstantViewButton();
                                                }
                                                if (tLRPC$TL_messageMediaPoll3.poll.multiple_choice) {
                                                    createPollUI();
                                                }
                                                if (tLRPC$TL_messageMediaPoll3.results != null) {
                                                    createPollUI();
                                                    int size7 = tLRPC$TL_messageMediaPoll3.results.recent_voters.size();
                                                    int i204 = 0;
                                                    while (true) {
                                                        ImageReceiver[] imageReceiverArr2 = chatMessageCell.pollAvatarImages;
                                                        if (i204 >= imageReceiverArr2.length) {
                                                            break;
                                                        }
                                                        int i205 = min3;
                                                        if (!chatMessageCell.isBot && i204 < size7) {
                                                            imageReceiverArr2[i204].setImageCoords(0.0f, 0.0f, AndroidUtilities.dp(16.0f), AndroidUtilities.dp(16.0f));
                                                            TLRPC$Peer tLRPC$Peer2 = tLRPC$TL_messageMediaPoll3.results.recent_voters.get(i204);
                                                            TLObject userOrChat = MessagesController.getInstance(chatMessageCell.currentAccount).getUserOrChat(DialogObject.getPeerDialogId(tLRPC$Peer2));
                                                            if (userOrChat != null) {
                                                                chatMessageCell.pollAvatarDrawables[i204].setInfo(chatMessageCell.currentAccount, userOrChat);
                                                                chatMessageCell.pollAvatarImages[i204].setForUserOrChat(userOrChat, chatMessageCell.pollAvatarDrawables[i204]);
                                                            } else {
                                                                chatMessageCell.pollAvatarDrawables[i204].setInfo(DialogObject.getPeerDialogId(tLRPC$Peer2), "", "");
                                                            }
                                                            chatMessageCell.pollAvatarImagesVisible[i204] = true;
                                                        } else if (!chatMessageCell.pollUnvoteInProgress || size7 != 0) {
                                                            imageReceiverArr2[i204].setImageBitmap((Drawable) null);
                                                            chatMessageCell.pollAvatarImagesVisible[i204] = false;
                                                        }
                                                        i204++;
                                                        min3 = i205;
                                                        z62 = false;
                                                        arrayList14 = null;
                                                        z63 = true;
                                                        f12 = 0.0f;
                                                        i199 = 2;
                                                    }
                                                } else if (chatMessageCell.pollAvatarImages != null) {
                                                    int i206 = 0;
                                                    while (true) {
                                                        ImageReceiver[] imageReceiverArr3 = chatMessageCell.pollAvatarImages;
                                                        if (i206 >= imageReceiverArr3.length) {
                                                            break;
                                                        }
                                                        imageReceiverArr3[i206].setImageBitmap((Drawable) null);
                                                        chatMessageCell.pollAvatarImagesVisible[i206] = false;
                                                        i206++;
                                                    }
                                                }
                                                if (!chatMessageCell.animatePollAnswer && chatMessageCell.pollVoteInProgress && chatMessageCell.vibrateOnPollVote) {
                                                    chatMessageCell.performHapticFeedback(3, i199);
                                                }
                                                boolean z64 = chatMessageCell.attachedToWindow && (chatMessageCell.pollVoteInProgress || chatMessageCell.pollUnvoteInProgress);
                                                chatMessageCell.animatePollAnswer = z64;
                                                chatMessageCell.animatePollAnswerAlpha = z64;
                                                ArrayList arrayList16 = new ArrayList();
                                                if (chatMessageCell.pollButtons.isEmpty()) {
                                                    arrayList2 = arrayList14;
                                                    z16 = z63;
                                                } else {
                                                    ArrayList arrayList17 = new ArrayList(chatMessageCell.pollButtons);
                                                    chatMessageCell.pollButtons.clear();
                                                    if (!chatMessageCell.animatePollAnswer) {
                                                        chatMessageCell.animatePollAnswer = chatMessageCell.attachedToWindow && (chatMessageCell.pollVoted || chatMessageCell.pollClosed);
                                                    }
                                                    float f14 = chatMessageCell.pollAnimationProgress;
                                                    if (f14 > f12 && f14 < 1.0f) {
                                                        int size8 = arrayList17.size();
                                                        int i207 = 0;
                                                        z63 = z63;
                                                        while (i207 < size8) {
                                                            int i208 = min3;
                                                            PollButton pollButton2 = (PollButton) arrayList17.get(i207);
                                                            pollButton2.percent = (int) Math.ceil(pollButton2.prevPercent + ((pollButton2.percent - pollButton2.prevPercent) * chatMessageCell.pollAnimationProgress));
                                                            pollButton2.percentProgress = pollButton2.prevPercentProgress + ((pollButton2.percentProgress - pollButton2.prevPercentProgress) * chatMessageCell.pollAnimationProgress);
                                                            i207++;
                                                            min3 = i208;
                                                            z62 = false;
                                                            arrayList14 = null;
                                                            z63 = true;
                                                            i199 = 2;
                                                        }
                                                    }
                                                    arrayList2 = arrayList17;
                                                    z16 = z63;
                                                }
                                                chatMessageCell.pollAnimationProgress = !chatMessageCell.animatePollAnswer ? 1.0f : 0.0f;
                                                if (chatMessageCell.animatePollAnswerAlpha) {
                                                    bArr = arrayList14;
                                                } else {
                                                    chatMessageCell.pollVoteInProgress = z62;
                                                    chatMessageCell.pollVoteInProgressNum = -1;
                                                    bArr = SendMessagesHelper.getInstance(chatMessageCell.currentAccount).isSendingVote(chatMessageCell.currentMessageObject);
                                                }
                                                CachedStaticLayout cachedStaticLayout18 = chatMessageCell.titleLayout;
                                                int height = cachedStaticLayout18 == null ? 0 : cachedStaticLayout18.getHeight();
                                                int i209 = 100;
                                                int size9 = tLRPC$TL_messageMediaPoll3.poll.answers.size();
                                                byte[] bArr3 = bArr;
                                                int i210 = height;
                                                int i211 = 0;
                                                int i212 = 0;
                                                int i213 = 0;
                                                boolean z65 = false;
                                                ?? r10 = z16;
                                                while (i213 < size9) {
                                                    TLRPC$PollAnswer tLRPC$PollAnswer = tLRPC$TL_messageMediaPoll3.poll.answers.get(i213);
                                                    int i214 = size9;
                                                    CharSequence replaceEmoji2 = Emoji.replaceEmoji(new SpannableStringBuilder(tLRPC$PollAnswer.text.text), Theme.chat_audioTitlePaint.getFontMetricsInt(), AndroidUtilities.dp(16.0f), z62);
                                                    ArrayList<TLRPC$MessageEntity> arrayList18 = tLRPC$PollAnswer.text.entities;
                                                    if (arrayList18 != null) {
                                                        replaceEmoji2 = MessageObject.replaceAnimatedEmoji(replaceEmoji2, arrayList18, Theme.chat_audioPerformerPaint.getFontMetricsInt(), true);
                                                        MessageObject.addEntitiesToText(replaceEmoji2, tLRPC$PollAnswer.text.entities, chatMessageCell.currentMessageObject.isOutOwner(), false, false, false);
                                                    }
                                                    PollButton pollButton3 = new PollButton();
                                                    pollButton3.answer = tLRPC$PollAnswer;
                                                    pollButton3.title = new CachedStaticLayout(new StaticLayout(replaceEmoji2, Theme.chat_audioPerformerPaint, min3 - AndroidUtilities.dp(33.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                    AnimatedEmojiSpan.EmojiGroupedSpans emojiGroupedSpans = pollButton3.animatedEmoji;
                                                    Layout[] layoutArr = new Layout[1];
                                                    layoutArr[0] = pollButton3.title != null ? pollButton3.title.layout : null;
                                                    pollButton3.animatedEmoji = AnimatedEmojiSpan.update(0, (View) chatMessageCell, false, emojiGroupedSpans, layoutArr);
                                                    pollButton3.y = AndroidUtilities.dp(52.0f) + i210;
                                                    pollButton3.height = pollButton3.title.getHeight();
                                                    chatMessageCell.pollButtons.add(pollButton3);
                                                    arrayList16.add(pollButton3);
                                                    i210 += pollButton3.height + AndroidUtilities.dp(26.0f);
                                                    if (!tLRPC$TL_messageMediaPoll3.results.results.isEmpty()) {
                                                        int size10 = tLRPC$TL_messageMediaPoll3.results.results.size();
                                                        int i215 = 0;
                                                        while (i215 < size10) {
                                                            TLRPC$TL_pollAnswerVoters tLRPC$TL_pollAnswerVoters2 = tLRPC$TL_messageMediaPoll3.results.results.get(i215);
                                                            i23 = min3;
                                                            if (Arrays.equals(pollButton3.answer.option, tLRPC$TL_pollAnswerVoters2.option)) {
                                                                pollButton3.chosen = tLRPC$TL_pollAnswerVoters2.chosen;
                                                                pollButton3.count = tLRPC$TL_pollAnswerVoters2.voters;
                                                                pollButton3.correct = tLRPC$TL_pollAnswerVoters2.correct;
                                                                if ((!chatMessageCell.pollVoted && !chatMessageCell.pollClosed) || (i24 = tLRPC$TL_messageMediaPoll3.results.total_voters) <= 0) {
                                                                    pollButton3.percent = 0;
                                                                    pollButton3.decimal = 0.0f;
                                                                } else {
                                                                    pollButton3.decimal = (tLRPC$TL_pollAnswerVoters2.voters / i24) * 100.0f;
                                                                    pollButton3.percent = (int) pollButton3.decimal;
                                                                    PollButton.access$3124(pollButton3, pollButton3.percent);
                                                                }
                                                                if (i211 != 0) {
                                                                    if (pollButton3.percent != 0 && i211 != pollButton3.percent) {
                                                                        z65 = true;
                                                                    }
                                                                } else {
                                                                    i211 = pollButton3.percent;
                                                                }
                                                                i209 -= pollButton3.percent;
                                                                i212 = Math.max(pollButton3.percent, i212);
                                                                if (arrayList2 != null) {
                                                                    int size11 = arrayList2.size();
                                                                    int i216 = 0;
                                                                    while (true) {
                                                                        if (i216 >= size11) {
                                                                            break;
                                                                        }
                                                                        PollButton pollButton4 = (PollButton) arrayList2.get(i216);
                                                                        if (Arrays.equals(pollButton3.answer.option, pollButton4.answer.option)) {
                                                                            pollButton3.prevPercent = pollButton4.percent;
                                                                            pollButton3.prevPercentProgress = pollButton4.percentProgress;
                                                                            pollButton3.prevChosen = pollButton4.chosen;
                                                                            break;
                                                                        }
                                                                        i216++;
                                                                    }
                                                                }
                                                                bArr2 = bArr3;
                                                                if (bArr2 != null && pollButton3.answer.option.length > 0 && Arrays.binarySearch(bArr2, pollButton3.answer.option[0]) >= 0) {
                                                                    chatMessageCell.pollVoteInProgressNum = i213;
                                                                    chatMessageCell.pollVoteInProgress = true;
                                                                    chatMessageCell.vibrateOnPollVote = true;
                                                                    bArr3 = null;
                                                                } else {
                                                                    bArr3 = bArr2;
                                                                }
                                                                if (chatMessageCell.currentMessageObject.checkedVotes.contains(pollButton3.answer)) {
                                                                    chatMessageCell.pollCheckBox[i213].setChecked(true, false);
                                                                } else {
                                                                    chatMessageCell.pollCheckBox[i213].setChecked(false, false);
                                                                }
                                                                i213++;
                                                                size9 = i214;
                                                                min3 = i23;
                                                                z62 = false;
                                                                r10 = 1;
                                                                i199 = 2;
                                                            } else {
                                                                i215++;
                                                                min3 = i23;
                                                            }
                                                        }
                                                    }
                                                    i23 = min3;
                                                    if (arrayList2 != null) {
                                                    }
                                                    bArr2 = bArr3;
                                                    if (bArr2 != null) {
                                                        chatMessageCell.pollVoteInProgressNum = i213;
                                                        chatMessageCell.pollVoteInProgress = true;
                                                        chatMessageCell.vibrateOnPollVote = true;
                                                        bArr3 = null;
                                                        if (chatMessageCell.currentMessageObject.checkedVotes.contains(pollButton3.answer)) {
                                                        }
                                                        i213++;
                                                        size9 = i214;
                                                        min3 = i23;
                                                        z62 = false;
                                                        r10 = 1;
                                                        i199 = 2;
                                                    }
                                                    bArr3 = bArr2;
                                                    if (chatMessageCell.currentMessageObject.checkedVotes.contains(pollButton3.answer)) {
                                                    }
                                                    i213++;
                                                    size9 = i214;
                                                    min3 = i23;
                                                    z62 = false;
                                                    r10 = 1;
                                                    i199 = 2;
                                                }
                                                if (z65 && i209 != 0) {
                                                    Collections.sort(arrayList16, new Comparator() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda11
                                                        @Override // java.util.Comparator
                                                        public final int compare(Object obj, Object obj2) {
                                                            int lambda$setMessageContent$8;
                                                            lambda$setMessageContent$8 = ChatMessageCell.lambda$setMessageContent$8((ChatMessageCell.PollButton) obj, (ChatMessageCell.PollButton) obj2);
                                                            return lambda$setMessageContent$8;
                                                        }
                                                    });
                                                    int min4 = Math.min(i209, arrayList16.size());
                                                    int i217 = 0;
                                                    while (i217 < min4) {
                                                        PollButton.access$2412((PollButton) arrayList16.get(i217), r10);
                                                        i217++;
                                                        i199 = 2;
                                                    }
                                                }
                                                int dp39 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(76.0f);
                                                int size12 = chatMessageCell.pollButtons.size();
                                                int i218 = 0;
                                                while (i218 < size12) {
                                                    chatMessageCell.pollButtons.get(i218).percentProgress = Math.max(AndroidUtilities.dp(5.0f) / dp39, i212 == 0 ? 0.0f : pollButton.percent / i212);
                                                    i218++;
                                                    i199 = 2;
                                                }
                                                setMessageObjectInternal(messageObject);
                                                chatMessageCell.pollInstantViewTouchesBottom = z62;
                                                if (chatMessageCell.isBot && !chatMessageCell.drawInstantView) {
                                                    i210 -= AndroidUtilities.dp(10.0f);
                                                } else {
                                                    TLRPC$Poll tLRPC$Poll7 = tLRPC$TL_messageMediaPoll3.poll;
                                                    if (tLRPC$Poll7.public_voters || tLRPC$Poll7.multiple_choice) {
                                                        chatMessageCell.pollInstantViewTouchesBottom = r10;
                                                        i210 += AndroidUtilities.dp(13.0f);
                                                    }
                                                }
                                                int dp40 = AndroidUtilities.dp(73.0f);
                                                int i219 = chatMessageCell.namesOffset;
                                                chatMessageCell.totalHeight = dp40 + i219 + i210;
                                                if (chatMessageCell.drawPinnedTop) {
                                                    chatMessageCell.namesOffset = i219 - AndroidUtilities.dp(1.0f);
                                                }
                                                chatMessageCell.instantTextNewLine = z62;
                                                TLRPC$Poll tLRPC$Poll8 = tLRPC$TL_messageMediaPoll3.poll;
                                                if (tLRPC$Poll8.public_voters || tLRPC$Poll8.multiple_choice) {
                                                    int i220 = 0;
                                                    int i221 = 0;
                                                    for (int i222 = 3; i221 < i222; i222 = 3) {
                                                        if (i221 == 0) {
                                                            string4 = LocaleController.getString("PollViewResults", R.string.PollViewResults);
                                                        } else if (i221 == r10) {
                                                            string4 = LocaleController.getString("PollSubmitVotes", R.string.PollSubmitVotes);
                                                        } else {
                                                            string4 = LocaleController.getString("NoVotes", R.string.NoVotes);
                                                        }
                                                        i220 = Math.max(i220, (int) Math.ceil(Theme.chat_instantViewPaint.measureText(string4)));
                                                        i221++;
                                                    }
                                                    int dp41 = chatMessageCell.timeWidth + (!messageObject.isOutOwner() ? 0 : AndroidUtilities.dp(20.0f)) + getExtraTimeX();
                                                    ReactionsLayoutInBubble reactionsLayoutInBubble14 = chatMessageCell.reactionsLayoutInBubble;
                                                    if (!reactionsLayoutInBubble14.isSmall && reactionsLayoutInBubble14.isEmpty && dp41 >= ((chatMessageCell.backgroundWidth - AndroidUtilities.dp(76.0f)) - i220) / i199) {
                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(18.0f);
                                                        chatMessageCell.instantTextNewLine = r10;
                                                    }
                                                }
                                                ReactionsLayoutInBubble reactionsLayoutInBubble15 = chatMessageCell.reactionsLayoutInBubble;
                                                if (!reactionsLayoutInBubble15.isSmall && !reactionsLayoutInBubble15.isEmpty) {
                                                    reactionsLayoutInBubble15.measure(min3, 3);
                                                    chatMessageCell.totalHeight += chatMessageCell.reactionsLayoutInBubble.height + AndroidUtilities.dp(12.0f);
                                                    if (chatMessageCell.timeWidth + (!messageObject.isOutOwner() ? 0 : AndroidUtilities.dp(20.0f)) + getExtraTimeX() >= (chatMessageCell.backgroundWidth - AndroidUtilities.dp(24.0f)) - chatMessageCell.reactionsLayoutInBubble.lastLineX) {
                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(16.0f);
                                                        chatMessageCell.reactionsLayoutInBubble.positionOffsetY -= AndroidUtilities.dp(16.0f);
                                                    }
                                                }
                                            } else {
                                                chatMessageCell.drawForwardedName = !(messageObject17.messageOwner.fwd_from == null || (messageObject.isAnyKindOfSticker() && messageObject.isDice())) || messageObject17.type == 23;
                                                if (!messageObject.isAnyKindOfSticker() && messageObject17.type != i2) {
                                                    chatMessageCell.drawName = ((chatMessageCell.isSavedChat && !messageObject.isOutOwner() && (messageObject.getSavedDialogId() < 0 || messageObject.getSavedDialogId() == UserObject.ANONYMOUS)) || ((messageObject.isFromGroup() && messageObject.isSupergroup()) || messageObject17.isRepostPreview || (messageObject.isImportedForward() && messageObject17.messageOwner.fwd_from.from_id == null))) && ((groupedMessagePosition12 = chatMessageCell.currentPosition) == null || (groupedMessagePosition12.flags & i) != 0);
                                                }
                                                chatMessageCell.mediaBackground = messageObject17.type != 9;
                                                chatMessageCell.drawImageButton = z49;
                                                chatMessageCell.drawPhotoImage = z49;
                                                if (messageObject17.gifState != 2.0f && (!SharedConfig.isAutoplayGifs() || messageObject17.isRepostPreview)) {
                                                    int i223 = messageObject17.type;
                                                    i25 = 8;
                                                    if (i223 == 8 || i223 == i2) {
                                                        messageObject17.gifState = 1.0f;
                                                    }
                                                } else {
                                                    i25 = 8;
                                                }
                                                chatMessageCell.photoImage.setAllowDecodeSingleFrame(z49);
                                                if (messageObject.isVideo()) {
                                                    chatMessageCell.photoImage.setAllowStartAnimation(z49);
                                                } else if (messageObject.isRoundVideo()) {
                                                    MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
                                                    chatMessageCell.photoImage.setAllowStartAnimation(playingMessageObject == null || !playingMessageObject.isRoundVideo());
                                                } else {
                                                    chatMessageCell.photoImage.setAllowStartAnimation(messageObject17.gifState == 0.0f);
                                                }
                                                chatMessageCell.photoImage.setForcePreview(messageObject.needDrawBluredPreview());
                                                int i224 = messageObject17.type;
                                                if (i224 == 9) {
                                                    messageObject6 = messageObject17;
                                                    i26 = 1;
                                                    f4 = 1.0f;
                                                    int i225 = 3;
                                                    if (AndroidUtilities.isTablet()) {
                                                        chatMessageCell.backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(300.0f));
                                                    } else {
                                                        chatMessageCell.backgroundWidth = Math.min(getParentWidth() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(300.0f));
                                                    }
                                                    if (checkNeedDrawShareButton(messageObject)) {
                                                        chatMessageCell.backgroundWidth -= AndroidUtilities.dp(20.0f);
                                                    }
                                                    int dp42 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(138.0f);
                                                    chatMessageCell.createDocumentLayout(dp42, messageObject6);
                                                    int dp43 = (chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f)) - AndroidUtilities.dp(10.0f);
                                                    chatMessageCell.captionFullWidth = dp43;
                                                    int extraTextX = dp43 - (getExtraTextX() * 2);
                                                    CachedStaticLayout cachedStaticLayout19 = chatMessageCell.docTitleLayout;
                                                    if (cachedStaticLayout19 == null) {
                                                        i27 = 0;
                                                    } else {
                                                        int lineCount4 = cachedStaticLayout19.getLineCount();
                                                        int i226 = 0;
                                                        i27 = 0;
                                                        while (i226 < lineCount4) {
                                                            i27 = Math.max(i27, ((int) Math.ceil(chatMessageCell.docTitleLayout.getLineWidth(i226) + chatMessageCell.docTitleLayout.getLineLeft(i226))) + AndroidUtilities.dp(86 + (!chatMessageCell.drawPhotoImage ? 22 : 52)));
                                                            i226++;
                                                            i = 4;
                                                            f4 = 1.0f;
                                                            i225 = 3;
                                                        }
                                                    }
                                                    CachedStaticLayout cachedStaticLayout20 = chatMessageCell.infoLayout;
                                                    if (cachedStaticLayout20 != null) {
                                                        int lineCount5 = cachedStaticLayout20.getLineCount();
                                                        int i227 = 0;
                                                        while (i227 < lineCount5) {
                                                            i27 = Math.max(i27, chatMessageCell.infoWidth + AndroidUtilities.dp(86 + (!chatMessageCell.drawPhotoImage ? 22 : 52)));
                                                            i227++;
                                                            i = 4;
                                                            f4 = 1.0f;
                                                        }
                                                    }
                                                    MessageObject.TextLayoutBlocks textLayoutBlocks5 = chatMessageCell.captionLayout;
                                                    if (textLayoutBlocks5 != null) {
                                                        i27 = Math.max(textLayoutBlocks5.textWidth, i27);
                                                    }
                                                    ReactionsLayoutInBubble reactionsLayoutInBubble16 = chatMessageCell.reactionsLayoutInBubble;
                                                    if (!reactionsLayoutInBubble16.isSmall) {
                                                        reactionsLayoutInBubble16.measure(extraTextX, i225);
                                                        ReactionsLayoutInBubble reactionsLayoutInBubble17 = chatMessageCell.reactionsLayoutInBubble;
                                                        if (!reactionsLayoutInBubble17.isEmpty && reactionsLayoutInBubble17.width + AndroidUtilities.dp(31.0f) > i27) {
                                                            i27 = chatMessageCell.reactionsLayoutInBubble.width + AndroidUtilities.dp(31.0f);
                                                        }
                                                    }
                                                    if (i27 > 0 && chatMessageCell.currentPosition == null) {
                                                        chatMessageCell.backgroundWidth = i27;
                                                        dp42 = i27 - AndroidUtilities.dp(31.0f);
                                                    }
                                                    chatMessageCell.availableTimeWidth = dp42;
                                                    if (chatMessageCell.drawPhotoImage) {
                                                        dp5 = AndroidUtilities.dp(86.0f);
                                                        dp6 = AndroidUtilities.dp(86.0f);
                                                        chatMessageCell.availableTimeWidth -= dp5;
                                                    } else {
                                                        dp5 = AndroidUtilities.dp(56.0f);
                                                        dp6 = AndroidUtilities.dp(56.0f);
                                                        CachedStaticLayout cachedStaticLayout21 = chatMessageCell.docTitleLayout;
                                                        if (cachedStaticLayout21 != null && cachedStaticLayout21.getLineCount() > 1) {
                                                            dp6 += (chatMessageCell.docTitleLayout.getLineCount() - 1) * AndroidUtilities.dp(16.0f);
                                                        }
                                                        if (TextUtils.isEmpty(messageObject6.caption) && (cachedStaticLayout2 = chatMessageCell.infoLayout) != null) {
                                                            int lineCount6 = cachedStaticLayout2.getLineCount();
                                                            measureTime(messageObject);
                                                            int dp44 = (chatMessageCell.backgroundWidth - AndroidUtilities.dp(122.0f)) - chatMessageCell.infoWidth;
                                                            ReactionsLayoutInBubble reactionsLayoutInBubble18 = chatMessageCell.reactionsLayoutInBubble;
                                                            if (reactionsLayoutInBubble18.isSmall || reactionsLayoutInBubble18.isEmpty) {
                                                                if (dp44 < chatMessageCell.timeWidth) {
                                                                    dp7 = AndroidUtilities.dp(12.0f);
                                                                } else if (lineCount6 == 1) {
                                                                    dp7 = AndroidUtilities.dp(4.0f);
                                                                }
                                                                dp6 += dp7;
                                                            }
                                                        }
                                                    }
                                                    i28 = dp5;
                                                    i29 = dp6;
                                                    ReactionsLayoutInBubble reactionsLayoutInBubble19 = chatMessageCell.reactionsLayoutInBubble;
                                                    if (reactionsLayoutInBubble19.isSmall || reactionsLayoutInBubble19.isEmpty) {
                                                        i30 = 0;
                                                    } else {
                                                        if (!chatMessageCell.drawPhotoImage) {
                                                            reactionsLayoutInBubble19.positionOffsetY += AndroidUtilities.dp(2.0f);
                                                        }
                                                        ReactionsLayoutInBubble reactionsLayoutInBubble20 = chatMessageCell.reactionsLayoutInBubble;
                                                        reactionsLayoutInBubble20.totalHeight = reactionsLayoutInBubble20.height + AndroidUtilities.dp((chatMessageCell.drawPhotoImage && chatMessageCell.captionLayout != null) ? 0.0f : 8.0f);
                                                        measureTime(messageObject);
                                                        if (chatMessageCell.drawPhotoImage && chatMessageCell.captionLayout == null) {
                                                            chatMessageCell.reactionsLayoutInBubble.totalHeight += AndroidUtilities.dp(8.0f);
                                                        }
                                                        if ((chatMessageCell.backgroundWidth - chatMessageCell.reactionsLayoutInBubble.lastLineX) - AndroidUtilities.dp(42.0f) < chatMessageCell.timeWidth) {
                                                            chatMessageCell.reactionsLayoutInBubble.totalHeight += AndroidUtilities.dp(chatMessageCell.captionLayout == null ? 15.0f : 12.0f);
                                                            chatMessageCell.reactionsLayoutInBubble.positionOffsetY -= AndroidUtilities.dp(15.0f);
                                                        }
                                                        i30 = chatMessageCell.reactionsLayoutInBubble.totalHeight + 0;
                                                    }
                                                    i31 = i30;
                                                    i32 = 0;
                                                } else if (i224 == i) {
                                                    MessageObject messageObject28 = messageObject17;
                                                    TLRPC$GeoPoint tLRPC$GeoPoint = MessageObject.getMedia(messageObject28.messageOwner).geo;
                                                    double d4 = tLRPC$GeoPoint.lat;
                                                    double d5 = tLRPC$GeoPoint._long;
                                                    if (((int) messageObject.getDialogId()) == 0 && (i46 = SharedConfig.mapPreviewType) != 0) {
                                                        if (i46 == 1) {
                                                            i36 = 4;
                                                        } else if (i46 == 3) {
                                                            i36 = 1;
                                                        }
                                                        if (!(MessageObject.getMedia(messageObject28.messageOwner) instanceof TLRPC$TL_messageMediaGeoLive)) {
                                                            if (AndroidUtilities.isTablet()) {
                                                                chatMessageCell.backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(289.0f));
                                                            } else {
                                                                chatMessageCell.backgroundWidth = Math.min(getParentWidth() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(289.0f));
                                                            }
                                                            chatMessageCell.backgroundWidth -= AndroidUtilities.dp(4.0f);
                                                            if (checkNeedDrawShareButton(messageObject)) {
                                                                chatMessageCell.backgroundWidth -= AndroidUtilities.dp(20.0f);
                                                            }
                                                            int dp45 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(37.0f);
                                                            chatMessageCell.availableTimeWidth = dp45;
                                                            int dp46 = dp45 - AndroidUtilities.dp(54.0f);
                                                            int dp47 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(17.0f);
                                                            int dp48 = AndroidUtilities.dp(195.0f);
                                                            double d6 = 268435456;
                                                            Double.isNaN(d6);
                                                            double d7 = d6 / 3.141592653589793d;
                                                            double d8 = (d4 * 3.141592653589793d) / 180.0d;
                                                            Double.isNaN(d6);
                                                            double round = Math.round(d6 - ((Math.log((Math.sin(d8) + 1.0d) / (1.0d - Math.sin(d8))) * d7) / 2.0d)) - (AndroidUtilities.dp(10.3f) << 6);
                                                            Double.isNaN(round);
                                                            Double.isNaN(d6);
                                                            double atan = ((1.5707963267948966d - (Math.atan(Math.exp((round - d6) / d7)) * 2.0d)) * 180.0d) / 3.141592653589793d;
                                                            int i228 = chatMessageCell.currentAccount;
                                                            float f15 = dp47;
                                                            float f16 = AndroidUtilities.density;
                                                            float f17 = dp48;
                                                            chatMessageCell.currentUrl = AndroidUtilities.formapMapUrl(i228, atan, d5, (int) (f15 / f16), (int) (f17 / f16), false, 15, i36);
                                                            long j3 = tLRPC$GeoPoint.access_hash;
                                                            float f18 = AndroidUtilities.density;
                                                            chatMessageCell = this;
                                                            chatMessageCell.currentWebFile = WebFile.createWithGeoPoint(atan, d5, j3, (int) (f15 / f18), (int) (f17 / f18), 15, Math.min(2, (int) Math.ceil(f18)));
                                                            chatMessageCell.photoImage.setCrossfadeWithOldImage(true);
                                                            boolean isCurrentLocationTimeExpired = isCurrentLocationTimeExpired(messageObject);
                                                            chatMessageCell.locationExpired = isCurrentLocationTimeExpired;
                                                            if (isCurrentLocationTimeExpired) {
                                                                chatMessageCell.backgroundWidth -= AndroidUtilities.dp(9.0f);
                                                                dp9 = 0;
                                                            } else {
                                                                chatMessageCell.mediaBackground = false;
                                                                dp9 = AndroidUtilities.dp(56.0f);
                                                                AndroidUtilities.runOnUIThread(chatMessageCell.invalidateRunnable, 1000L);
                                                                chatMessageCell.scheduledInvalidate = true;
                                                            }
                                                            chatMessageCell.docTitleLayout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(LocaleController.getString("AttachLiveLocation", R.string.AttachLiveLocation), Theme.chat_locationTitlePaint, dp46, TextUtils.TruncateAt.END), Theme.chat_locationTitlePaint, dp46 + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                            updateCurrentUserAndChat();
                                                            TLRPC$User tLRPC$User3 = chatMessageCell.currentUser;
                                                            if (tLRPC$User3 != null) {
                                                                chatMessageCell.contactAvatarDrawable.setInfo(chatMessageCell.currentAccount, tLRPC$User3);
                                                                chatMessageCell.locationImageReceiver.setForUserOrChat(chatMessageCell.currentUser, chatMessageCell.contactAvatarDrawable);
                                                            } else {
                                                                TLRPC$Chat tLRPC$Chat3 = chatMessageCell.currentChat;
                                                                if (tLRPC$Chat3 != null) {
                                                                    TLRPC$ChatPhoto tLRPC$ChatPhoto = tLRPC$Chat3.photo;
                                                                    if (tLRPC$ChatPhoto != null) {
                                                                        chatMessageCell.currentPhoto = tLRPC$ChatPhoto.photo_small;
                                                                    }
                                                                    chatMessageCell.contactAvatarDrawable.setInfo(chatMessageCell.currentAccount, tLRPC$Chat3);
                                                                    chatMessageCell.locationImageReceiver.setForUserOrChat(chatMessageCell.currentChat, chatMessageCell.contactAvatarDrawable);
                                                                } else {
                                                                    chatMessageCell.locationImageReceiver.setImage(null, null, chatMessageCell.contactAvatarDrawable, null, null, 0);
                                                                }
                                                            }
                                                            int i229 = messageObject28.messageOwner.edit_date;
                                                            chatMessageCell.infoLayout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(LocaleController.formatLocationUpdateDate(i229 == 0 ? tLRPC$Message.date : i229), Theme.chat_locationAddressPaint, AndroidUtilities.dp(2.0f) + dp46, TextUtils.TruncateAt.END), Theme.chat_locationAddressPaint, dp46, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                            i37 = dp47;
                                                            i38 = dp48;
                                                            i39 = dp9;
                                                        } else if (!TextUtils.isEmpty(MessageObject.getMedia(messageObject28.messageOwner).title)) {
                                                            if (AndroidUtilities.isTablet()) {
                                                                chatMessageCell.backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(289.0f));
                                                            } else {
                                                                chatMessageCell.backgroundWidth = Math.min(getParentWidth() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(289.0f));
                                                            }
                                                            chatMessageCell.backgroundWidth -= AndroidUtilities.dp(4.0f);
                                                            if (checkNeedDrawShareButton(messageObject)) {
                                                                chatMessageCell.backgroundWidth -= AndroidUtilities.dp(20.0f);
                                                            }
                                                            int dp49 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(34.0f);
                                                            chatMessageCell.availableTimeWidth = dp49;
                                                            int dp50 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(17.0f);
                                                            int dp51 = AndroidUtilities.dp(195.0f);
                                                            chatMessageCell.mediaBackground = false;
                                                            int i230 = chatMessageCell.currentAccount;
                                                            float f19 = dp50;
                                                            float f20 = AndroidUtilities.density;
                                                            float f21 = dp51;
                                                            chatMessageCell.currentUrl = AndroidUtilities.formapMapUrl(i230, d4, d5, (int) (f19 / f20), (int) (f21 / f20), true, 15, i36);
                                                            float f22 = AndroidUtilities.density;
                                                            chatMessageCell.currentWebFile = WebFile.createWithGeoPoint(tLRPC$GeoPoint, (int) (f19 / f22), (int) (f21 / f22), 15, Math.min(2, (int) Math.ceil(f22)));
                                                            chatMessageCell.docTitleLayout = new CachedStaticLayout(StaticLayoutEx.createStaticLayout(MessageObject.getMedia(messageObject28.messageOwner).title, Theme.chat_locationTitlePaint, dp49 + AndroidUtilities.dp(4.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.END, dp49, 1));
                                                            int dp52 = AndroidUtilities.dp(50.0f) + 0;
                                                            chatMessageCell.docTitleLayout.getLineCount();
                                                            if (!TextUtils.isEmpty(MessageObject.getMedia(messageObject28.messageOwner).address)) {
                                                                chatMessageCell.infoLayout = new CachedStaticLayout(StaticLayoutEx.createStaticLayout(MessageObject.getMedia(messageObject28.messageOwner).address, Theme.chat_locationAddressPaint, dp49, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.END, dp49, 1));
                                                                measureTime(messageObject);
                                                                int ceil8 = (chatMessageCell.backgroundWidth - ((int) Math.ceil(chatMessageCell.infoLayout.getLineWidth(0)))) - AndroidUtilities.dp(24.0f);
                                                                boolean z66 = chatMessageCell.infoLayout.getLineLeft(0) > 0.0f;
                                                                if (!z66) {
                                                                    int i231 = chatMessageCell.timeWidth;
                                                                    if (messageObject.isOutOwner()) {
                                                                        i43 = 20;
                                                                        i44 = 20;
                                                                    } else {
                                                                        i43 = 20;
                                                                        i44 = 0;
                                                                    }
                                                                }
                                                                dp52 += AndroidUtilities.dp(!z66 ? 8.0f : 10.0f);
                                                                i45 = dp52;
                                                            } else {
                                                                chatMessageCell.infoLayout = null;
                                                                i45 = dp52;
                                                            }
                                                            i37 = dp50;
                                                            i38 = dp51;
                                                            i39 = i45;
                                                        } else {
                                                            if (AndroidUtilities.isTablet()) {
                                                                chatMessageCell.backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(289.0f));
                                                            } else {
                                                                chatMessageCell.backgroundWidth = Math.min(getParentWidth() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(289.0f));
                                                            }
                                                            chatMessageCell.backgroundWidth -= AndroidUtilities.dp(4.0f);
                                                            if (checkNeedDrawShareButton(messageObject)) {
                                                                chatMessageCell.backgroundWidth -= AndroidUtilities.dp(20.0f);
                                                            }
                                                            chatMessageCell.availableTimeWidth = chatMessageCell.backgroundWidth - AndroidUtilities.dp(34.0f);
                                                            int dp53 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(8.0f);
                                                            int dp54 = AndroidUtilities.dp(195.0f);
                                                            int i232 = chatMessageCell.currentAccount;
                                                            float f23 = dp53;
                                                            float f24 = AndroidUtilities.density;
                                                            float f25 = dp54;
                                                            chatMessageCell.currentUrl = AndroidUtilities.formapMapUrl(i232, d4, d5, (int) (f23 / f24), (int) (f25 / f24), true, 15, i36);
                                                            float f26 = AndroidUtilities.density;
                                                            chatMessageCell.currentWebFile = WebFile.createWithGeoPoint(tLRPC$GeoPoint, (int) (f23 / f26), (int) (f25 / f26), 15, Math.min(2, (int) Math.ceil(f26)));
                                                            i37 = dp53;
                                                            i38 = dp54;
                                                            i39 = 0;
                                                        }
                                                        if (((int) messageObject.getDialogId()) != 0) {
                                                            int i233 = SharedConfig.mapPreviewType;
                                                            if (i233 == 0) {
                                                                i40 = -1;
                                                                chatMessageCell.currentMapProvider = 2;
                                                            } else if (i233 == 1) {
                                                                i40 = -1;
                                                                chatMessageCell.currentMapProvider = 1;
                                                            } else if (i233 == 3) {
                                                                i40 = -1;
                                                                chatMessageCell.currentMapProvider = 1;
                                                            } else {
                                                                i40 = -1;
                                                                chatMessageCell.currentMapProvider = -1;
                                                            }
                                                        } else {
                                                            chatMessageCell.currentMapProvider = MessagesController.getInstance(messageObject28.currentAccount).mapProvider;
                                                            i40 = -1;
                                                        }
                                                        if (chatMessageCell.locationLoadingThumb == null) {
                                                            SvgHelper.SvgDrawable svgThumb = DocumentObject.getSvgThumb(R.raw.map_placeholder, Theme.key_chat_outLocationIcon, (!Theme.isCurrentThemeDark() ? 6 : 3) * 0.12f);
                                                            svgThumb.setAspectCenter(true);
                                                            chatMessageCell.locationLoadingThumb = new ClipRoundedDrawable(svgThumb);
                                                        }
                                                        drawable = chatMessageCell.locationLoadingThumb;
                                                        if ((drawable instanceof ClipRoundedDrawable) && (((ClipRoundedDrawable) drawable).getDrawable() instanceof SvgHelper.SvgDrawable)) {
                                                            ((SvgHelper.SvgDrawable) ((ClipRoundedDrawable) chatMessageCell.locationLoadingThumb).getDrawable()).setColorKey(messageObject.isOutOwner() ? Theme.key_chat_inLocationIcon : Theme.key_chat_outLocationIcon, chatMessageCell.resourcesProvider);
                                                        }
                                                        chatMessageCell.photoImage.setCrossfadeDuration(300);
                                                        chatMessageCell.photoImage.setCrossfadeByScale(0.05f);
                                                        i41 = chatMessageCell.currentMapProvider;
                                                        if (i41 == i40) {
                                                            if (i41 == 2) {
                                                                WebFile webFile7 = chatMessageCell.currentWebFile;
                                                                if (webFile7 != null) {
                                                                    Object obj = messageObject28.lastGeoWebFileLoaded;
                                                                    ImageLocation imageLocation2 = !(obj instanceof ImageLocation) ? null : (ImageLocation) obj;
                                                                    messageObject28.lastGeoWebFileSet = ImageLocation.getForWebFile(webFile7);
                                                                    chatMessageCell.photoImage.setImage(ImageLocation.getForWebFile(chatMessageCell.currentWebFile), (String) null, imageLocation2, (String) null, chatMessageCell.locationLoadingThumb, messageObject, 0);
                                                                }
                                                            } else {
                                                                if (i41 == 3 || i41 == 4) {
                                                                    ImageLoader.getInstance().addTestWebFile(chatMessageCell.currentUrl, chatMessageCell.currentWebFile);
                                                                    chatMessageCell.addedForTest = true;
                                                                }
                                                                String str30 = chatMessageCell.currentUrl;
                                                                if (str30 != null) {
                                                                    chatMessageCell.photoImage.setImage(str30, null, chatMessageCell.locationLoadingThumb, null, 0L);
                                                                }
                                                            }
                                                            messageObject6 = messageObject28;
                                                            i = 4;
                                                            i26 = 1;
                                                            f4 = 1.0f;
                                                            i42 = 3;
                                                        } else {
                                                            i = 4;
                                                            i26 = 1;
                                                            f4 = 1.0f;
                                                            i42 = 3;
                                                            messageObject6 = messageObject28;
                                                            chatMessageCell.photoImage.setImage(null, null, null, null, messageObject, 0);
                                                        }
                                                        reactionsLayoutInBubble3 = chatMessageCell.reactionsLayoutInBubble;
                                                        if (!reactionsLayoutInBubble3.isSmall && !reactionsLayoutInBubble3.isEmpty) {
                                                            reactionsLayoutInBubble3.measure(chatMessageCell.backgroundWidth - AndroidUtilities.dp(16.0f), i42);
                                                            ReactionsLayoutInBubble reactionsLayoutInBubble21 = chatMessageCell.reactionsLayoutInBubble;
                                                            reactionsLayoutInBubble21.totalHeight = reactionsLayoutInBubble21.height + AndroidUtilities.dp(14.0f);
                                                            measureTime(messageObject);
                                                            if (chatMessageCell.reactionsLayoutInBubble.lastLineX + chatMessageCell.timeWidth + AndroidUtilities.dp(24.0f) > chatMessageCell.backgroundWidth) {
                                                                chatMessageCell.reactionsLayoutInBubble.totalHeight += AndroidUtilities.dp(12.0f);
                                                                chatMessageCell.reactionsLayoutInBubble.positionOffsetY -= AndroidUtilities.dp(12.0f);
                                                            }
                                                            i39 += chatMessageCell.reactionsLayoutInBubble.totalHeight;
                                                        }
                                                        i31 = i39;
                                                        i29 = i38;
                                                        i28 = i37;
                                                        i32 = 0;
                                                    }
                                                    i36 = -1;
                                                    if (!(MessageObject.getMedia(messageObject28.messageOwner) instanceof TLRPC$TL_messageMediaGeoLive)) {
                                                    }
                                                    if (((int) messageObject.getDialogId()) != 0) {
                                                    }
                                                    if (chatMessageCell.locationLoadingThumb == null) {
                                                    }
                                                    drawable = chatMessageCell.locationLoadingThumb;
                                                    if (drawable instanceof ClipRoundedDrawable) {
                                                        ((SvgHelper.SvgDrawable) ((ClipRoundedDrawable) chatMessageCell.locationLoadingThumb).getDrawable()).setColorKey(messageObject.isOutOwner() ? Theme.key_chat_inLocationIcon : Theme.key_chat_outLocationIcon, chatMessageCell.resourcesProvider);
                                                    }
                                                    chatMessageCell.photoImage.setCrossfadeDuration(300);
                                                    chatMessageCell.photoImage.setCrossfadeByScale(0.05f);
                                                    i41 = chatMessageCell.currentMapProvider;
                                                    if (i41 == i40) {
                                                    }
                                                    reactionsLayoutInBubble3 = chatMessageCell.reactionsLayoutInBubble;
                                                    if (!reactionsLayoutInBubble3.isSmall) {
                                                        reactionsLayoutInBubble3.measure(chatMessageCell.backgroundWidth - AndroidUtilities.dp(16.0f), i42);
                                                        ReactionsLayoutInBubble reactionsLayoutInBubble212 = chatMessageCell.reactionsLayoutInBubble;
                                                        reactionsLayoutInBubble212.totalHeight = reactionsLayoutInBubble212.height + AndroidUtilities.dp(14.0f);
                                                        measureTime(messageObject);
                                                        if (chatMessageCell.reactionsLayoutInBubble.lastLineX + chatMessageCell.timeWidth + AndroidUtilities.dp(24.0f) > chatMessageCell.backgroundWidth) {
                                                        }
                                                        i39 += chatMessageCell.reactionsLayoutInBubble.totalHeight;
                                                    }
                                                    i31 = i39;
                                                    i29 = i38;
                                                    i28 = i37;
                                                    i32 = 0;
                                                } else if (i224 == 19) {
                                                    MessageObject messageObject29 = messageObject17;
                                                    chatMessageCell.drawBackground = false;
                                                    int i234 = messageObject29.textWidth;
                                                    int dp55 = messageObject29.textHeight + AndroidUtilities.dp(32.0f);
                                                    chatMessageCell.backgroundWidth = AndroidUtilities.dp(14.0f) + i234;
                                                    chatMessageCell.availableTimeWidth = i234 - AndroidUtilities.dp(12.0f);
                                                    if (AndroidUtilities.isTablet()) {
                                                        minTabletSide3 = AndroidUtilities.getMinTabletSide();
                                                        f5 = 0.4f;
                                                    } else {
                                                        minTabletSide3 = Math.min(getParentWidth(), AndroidUtilities.displaySize.y);
                                                        f5 = 0.5f;
                                                    }
                                                    int max10 = Math.max(chatMessageCell.backgroundWidth, (int) (minTabletSide3 * f5));
                                                    ReactionsLayoutInBubble reactionsLayoutInBubble22 = chatMessageCell.reactionsLayoutInBubble;
                                                    if (reactionsLayoutInBubble22.isSmall) {
                                                        dp10 = 0;
                                                    } else {
                                                        reactionsLayoutInBubble22.measure(max10, !chatMessageCell.currentMessageObject.isOutOwner() ? 3 : 5);
                                                        ReactionsLayoutInBubble reactionsLayoutInBubble23 = chatMessageCell.reactionsLayoutInBubble;
                                                        reactionsLayoutInBubble23.drawServiceShaderBackground = 1.0f;
                                                        int i235 = reactionsLayoutInBubble23.height;
                                                        reactionsLayoutInBubble23.totalHeight = i235;
                                                        dp10 = 0 + i235 + AndroidUtilities.dp(8.0f);
                                                        chatMessageCell.reactionsLayoutInBubble.positionOffsetY += AndroidUtilities.dp(8.0f);
                                                    }
                                                    if (!chatMessageCell.drawTopic || (((messageObject7 = chatMessageCell.currentMessageObject) == null || messageObject7.replyMessageObject == null) && ((cachedStaticLayoutArr = chatMessageCell.forwardedNameLayout) == null || cachedStaticLayoutArr[0] == null))) {
                                                        dp10 -= AndroidUtilities.dp(17.0f);
                                                    }
                                                    i28 = i234;
                                                    messageObject6 = messageObject29;
                                                    i29 = dp55;
                                                    i31 = dp10;
                                                    i32 = 0;
                                                    i = 4;
                                                    i26 = 1;
                                                    f4 = 1.0f;
                                                } else {
                                                    if (messageObject.isAnyKindOfSticker()) {
                                                        chatMessageCell.drawBackground = false;
                                                        boolean z67 = messageObject.type == 13;
                                                        TLRPC$Document document3 = messageObject.getDocument();
                                                        if (document3 != null) {
                                                            for (int i236 = 0; i236 < document3.attributes.size(); i236++) {
                                                                TLRPC$DocumentAttribute tLRPC$DocumentAttribute8 = document3.attributes.get(i236);
                                                                if (tLRPC$DocumentAttribute8 instanceof TLRPC$TL_documentAttributeImageSize) {
                                                                    i47 = tLRPC$DocumentAttribute8.w;
                                                                    i48 = tLRPC$DocumentAttribute8.h;
                                                                } else if (tLRPC$DocumentAttribute8 instanceof TLRPC$TL_documentAttributeVideo) {
                                                                    i47 = tLRPC$DocumentAttribute8.w;
                                                                    i48 = tLRPC$DocumentAttribute8.h;
                                                                }
                                                                i49 = i47;
                                                            }
                                                        }
                                                        i48 = 0;
                                                        i49 = 0;
                                                        if ((messageObject.isAnimatedSticker() || messageObject.isVideoSticker()) && i49 == 0 && i48 == 0) {
                                                            i49 = LiteMode.FLAG_CALLS_ANIMATIONS;
                                                            i48 = LiteMode.FLAG_CALLS_ANIMATIONS;
                                                        }
                                                        if (messageObject.isAnimatedAnimatedEmoji()) {
                                                            i49 = Math.max((int) LiteMode.FLAG_CALLS_ANIMATIONS, i49);
                                                            i48 = Math.max((int) LiteMode.FLAG_CALLS_ANIMATIONS, i48);
                                                            if (MessageObject.isTextColorEmoji(messageObject.getDocument())) {
                                                                chatMessageCell.photoImage.setColorFilter(chatMessageCell.getAdaptiveEmojiColorFilter(0, chatMessageCell.getThemedColor(Theme.key_windowBackgroundWhiteBlackText)));
                                                            }
                                                        }
                                                        if (AndroidUtilities.isTablet()) {
                                                            minTabletSide4 = AndroidUtilities.getMinTabletSide();
                                                            f6 = 0.4f;
                                                        } else {
                                                            minTabletSide4 = Math.min(getParentWidth(), AndroidUtilities.displaySize.y);
                                                            f6 = 0.5f;
                                                        }
                                                        int i237 = (int) (minTabletSide4 * f6);
                                                        float f27 = i237;
                                                        if (messageObject.isAnimatedEmoji() || messageObject.isDice()) {
                                                            float f28 = MessagesController.getInstance(chatMessageCell.currentAccount).animatedEmojisZoom;
                                                            i50 = (int) ((i48 / 512.0f) * f27 * f28);
                                                            i51 = (int) ((i49 / 512.0f) * i237 * f28);
                                                        } else {
                                                            if (i49 == 0) {
                                                                i48 = (int) f27;
                                                                i49 = i48 + AndroidUtilities.dp(100.0f);
                                                            }
                                                            float f29 = i237;
                                                            int i238 = (int) (i48 * (f29 / i49));
                                                            float f30 = i238;
                                                            if (f30 <= f27) {
                                                                i51 = i237;
                                                                i50 = i238;
                                                            } else {
                                                                i51 = (int) (f29 * (f27 / f30));
                                                                i50 = (int) f27;
                                                            }
                                                        }
                                                        float f31 = AndroidUtilities.density;
                                                        int i239 = (int) (i51 / f31);
                                                        int i240 = (int) (i50 / f31);
                                                        ChatMessageCellDelegate chatMessageCellDelegate4 = chatMessageCell.delegate;
                                                        boolean z68 = chatMessageCellDelegate4 != null && chatMessageCellDelegate4.shouldRepeatSticker(messageObject);
                                                        BitmapDrawable bitmapDrawable8 = chatMessageCell.currentMessageObject.strippedThumb;
                                                        if (bitmapDrawable8 == null) {
                                                            chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, 40);
                                                        } else {
                                                            chatMessageCell.currentPhotoObjectThumbStripped = bitmapDrawable8;
                                                        }
                                                        chatMessageCell.photoParentObject = messageObject.photoThumbsObject;
                                                        if (messageObject.isDice()) {
                                                            String format2 = String.format(Locale.US, "%d_%d_dice_%s_%s", Integer.valueOf(i239), Integer.valueOf(i240), messageObject.getDiceEmoji(), messageObject.toString());
                                                            chatMessageCell.photoImage.setAutoRepeat(2);
                                                            String diceEmoji = chatMessageCell.currentMessageObject.getDiceEmoji();
                                                            TLRPC$TL_messages_stickerSet stickerSetByEmojiOrName = MediaDataController.getInstance(chatMessageCell.currentAccount).getStickerSetByEmojiOrName(diceEmoji);
                                                            if (stickerSetByEmojiOrName != null && stickerSetByEmojiOrName.documents.size() > 0 && chatMessageCell.currentMessageObject.getDiceValue() <= 0) {
                                                                TLRPC$Document tLRPC$Document15 = stickerSetByEmojiOrName.documents.get(0);
                                                                if ("🎰".equals(diceEmoji)) {
                                                                    drawable2 = null;
                                                                    chatMessageCell.currentPhotoObjectThumb = null;
                                                                } else {
                                                                    chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document15.thumbs, 40);
                                                                    drawable2 = null;
                                                                }
                                                                chatMessageCell.photoParentObject = tLRPC$Document15;
                                                            } else {
                                                                drawable2 = null;
                                                            }
                                                            str2 = format2;
                                                            svgDrawable = drawable2;
                                                            messageObject8 = messageObject;
                                                        } else {
                                                            if (messageObject.isAnimatedEmoji()) {
                                                                if (!LiteMode.isEnabled(LiteMode.FLAG_ANIMATED_EMOJI_CHAT)) {
                                                                    String format3 = String.format(Locale.US, "%d_%d_nr_messageId=%d" + messageObject.emojiAnimatedStickerColor, Integer.valueOf(i239), Integer.valueOf(i240), Integer.valueOf(messageObject.stableId));
                                                                    SvgHelper.SvgDrawable circleThumb = DocumentObject.getCircleThumb(0.4f, Theme.key_chat_serviceBackground, chatMessageCell.resourcesProvider, 0.65f);
                                                                    chatMessageCell.photoImage.setAutoRepeat(3);
                                                                    messageObject.loadAnimatedEmojiDocument();
                                                                    str2 = format3;
                                                                    svgDrawable = circleThumb;
                                                                } else if (messageObject.emojiAnimatedSticker == null && messageObject.emojiAnimatedStickerId != null) {
                                                                    String format4 = String.format(Locale.US, "%d_%d_nr_messageId=%d" + messageObject.emojiAnimatedStickerColor, Integer.valueOf(i239), Integer.valueOf(i240), Integer.valueOf(messageObject.stableId));
                                                                    SvgHelper.SvgDrawable circleThumb2 = DocumentObject.getCircleThumb(0.4f, Theme.key_chat_serviceBackground, chatMessageCell.resourcesProvider, 0.65f);
                                                                    chatMessageCell.photoImage.setAutoRepeat(1);
                                                                    messageObject.loadAnimatedEmojiDocument();
                                                                    str2 = format4;
                                                                    svgDrawable = circleThumb2;
                                                                } else {
                                                                    String format5 = String.format(Locale.US, "%d_%d_nr_messageId=%d" + messageObject.emojiAnimatedStickerColor, Integer.valueOf(i239), Integer.valueOf(i240), Integer.valueOf(messageObject.stableId));
                                                                    if (MessageObject.isAnimatedEmoji(messageObject.emojiAnimatedSticker)) {
                                                                        z18 = true;
                                                                        chatMessageCell.photoImage.setAutoRepeat(1);
                                                                    } else {
                                                                        chatMessageCell.photoImage.setAutoRepeat(!z68 ? 3 : 2);
                                                                        z18 = true;
                                                                    }
                                                                    ?? inputStickerSet = MessageObject.getInputStickerSet(messageObject.emojiAnimatedSticker);
                                                                    if (messageObject.emojiAnimatedStickerId != null) {
                                                                        chatMessageCell.photoImage.setCrossfadeWithOldImage(z18);
                                                                    }
                                                                    str2 = format5;
                                                                    messageObject8 = inputStickerSet;
                                                                }
                                                                messageObject8 = messageObject;
                                                            } else {
                                                                if (SharedConfig.loopStickers() || (z67 && !messageObject.isVideoSticker())) {
                                                                    format = String.format(Locale.US, "%d_%d", Integer.valueOf(i239), Integer.valueOf(i240));
                                                                    chatMessageCell.photoImage.setAutoRepeat(1);
                                                                } else {
                                                                    format = String.format(Locale.US, "%d_%d_nr_messageId=%d", Integer.valueOf(i239), Integer.valueOf(i240), Integer.valueOf(messageObject.stableId));
                                                                    chatMessageCell.photoImage.setAutoRepeat(!z68 ? 3 : 2);
                                                                }
                                                                str2 = format;
                                                                messageObject8 = messageObject;
                                                            }
                                                            svgDrawable = null;
                                                        }
                                                        chatMessageCell.documentAttachType = 6;
                                                        chatMessageCell.availableTimeWidth = i51 - AndroidUtilities.dp(14.0f);
                                                        chatMessageCell.backgroundWidth = AndroidUtilities.dp(12.0f) + i51;
                                                        chatMessageCell.photoImage.setRoundRadius(0);
                                                        if (!messageObject.isOutOwner() && MessageObject.isPremiumSticker(messageObject.getDocument())) {
                                                            chatMessageCell.flipImage = true;
                                                        }
                                                        if (messageObject.getDocument() != null) {
                                                            if (messageObject.isVideoSticker()) {
                                                                i52 = i51;
                                                                i53 = i50;
                                                                messageObject9 = messageObject;
                                                                i54 = 0;
                                                                if (!loopStickers()) {
                                                                    chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 1;
                                                                }
                                                                chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(messageObject.getDocument()), ImageLoader.AUTOPLAY_FILTER, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), "b1", messageObject9.pathThumb, messageObject.getDocument().size, !z67 ? null : "webp", messageObject8, 1);
                                                            } else if (messageObject.pathThumb != null) {
                                                                i52 = i51;
                                                                i53 = i50;
                                                                messageObject9 = messageObject;
                                                                i54 = 0;
                                                                chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(messageObject.getDocument()), str2, messageObject9.pathThumb, messageObject.getDocument().size, !z67 ? null : "webp", messageObject8, 1);
                                                            } else if (messageObject.attachPathExists) {
                                                                i52 = i51;
                                                                i53 = i50;
                                                                messageObject9 = messageObject;
                                                                i54 = 0;
                                                                ImageReceiver imageReceiver4 = chatMessageCell.photoImage;
                                                                ImageLocation forPath = ImageLocation.getForPath(messageObject9.messageOwner.attachPath);
                                                                ImageLocation forObject3 = ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject);
                                                                if (svgDrawable == null) {
                                                                    svgDrawable = chatMessageCell.currentPhotoObjectThumbStripped;
                                                                }
                                                                imageReceiver4.setImage(forPath, str2, forObject3, "b1", svgDrawable, messageObject.getDocument().size, !z67 ? null : "webp", messageObject8, 1);
                                                            } else if (messageObject.getDocument().id != 0) {
                                                                i52 = i51;
                                                                i53 = i50;
                                                                messageObject9 = messageObject;
                                                                i54 = 0;
                                                                ImageReceiver imageReceiver5 = chatMessageCell.photoImage;
                                                                ImageLocation forDocument3 = ImageLocation.getForDocument(messageObject.getDocument());
                                                                ImageLocation forObject4 = ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject);
                                                                if (svgDrawable == null) {
                                                                    svgDrawable = chatMessageCell.currentPhotoObjectThumbStripped;
                                                                }
                                                                imageReceiver5.setImage(forDocument3, str2, forObject4, "b1", svgDrawable, messageObject.getDocument().size, !z67 ? null : "webp", messageObject8, 1);
                                                            } else {
                                                                i54 = 0;
                                                                i52 = i51;
                                                                i53 = i50;
                                                                chatMessageCell.photoImage.setImage(null, null, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), "b1", svgDrawable, 0L, null, messageObject, 0);
                                                                messageObject9 = messageObject;
                                                            }
                                                        } else {
                                                            chatMessageCell.photoImage.setImage(null, null, svgDrawable, null, messageObject, 0);
                                                            i52 = i51;
                                                            i53 = i50;
                                                            messageObject9 = messageObject;
                                                            i54 = 0;
                                                        }
                                                        ReactionsLayoutInBubble reactionsLayoutInBubble24 = chatMessageCell.reactionsLayoutInBubble;
                                                        if (reactionsLayoutInBubble24.isSmall) {
                                                            i55 = 0;
                                                        } else {
                                                            reactionsLayoutInBubble24.measure(i237 + AndroidUtilities.dp(36.0f), (chatMessageCell.currentMessageObject.isOutOwner() && (chatMessageCell.currentMessageObject.isAnimatedEmoji() || chatMessageCell.currentMessageObject.isAnyKindOfSticker())) ? 5 : 3);
                                                            ReactionsLayoutInBubble reactionsLayoutInBubble25 = chatMessageCell.reactionsLayoutInBubble;
                                                            reactionsLayoutInBubble25.drawServiceShaderBackground = 1.0f;
                                                            reactionsLayoutInBubble25.totalHeight = reactionsLayoutInBubble25.height + AndroidUtilities.dp(8.0f);
                                                            i55 = i54 + chatMessageCell.reactionsLayoutInBubble.totalHeight;
                                                            if (!chatMessageCell.currentMessageObject.isAnimatedEmoji()) {
                                                                chatMessageCell.reactionsLayoutInBubble.positionOffsetY += AndroidUtilities.dp(4.0f);
                                                            }
                                                        }
                                                        if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                            chatMessageCell.blurredPhotoImage.getBitmap().recycle();
                                                            chatMessageCell.blurredPhotoImage.setImageBitmap((Bitmap) null);
                                                        }
                                                        if (chatMessageCell.photoImage.getBitmap() != null && !chatMessageCell.photoImage.getBitmap().isRecycled() && chatMessageCell.currentMessageObject.hasMediaSpoilers() && !chatMessageCell.currentMessageObject.isMediaSpoilersRevealed) {
                                                            chatMessageCell.blurredPhotoImage.setImageBitmap(Utilities.stackBlurBitmapMax(chatMessageCell.photoImage.getBitmap(), chatMessageCell.currentMessageObject.isRoundVideo()));
                                                            chatMessageCell.blurredPhotoImage.setColorFilter(getFancyBlurFilter());
                                                        }
                                                        i29 = i53;
                                                        i28 = i52;
                                                        messageObject6 = messageObject9;
                                                        i31 = i55;
                                                        i32 = 0;
                                                        i = 4;
                                                        i26 = 1;
                                                        f4 = 1.0f;
                                                        z17 = false;
                                                    } else {
                                                        chatMessageCell.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(messageObject17.photoThumbs, AndroidUtilities.getPhotoSize());
                                                        chatMessageCell.photoParentObject = messageObject17.photoThumbsObject;
                                                        if (messageObject17.type == i2) {
                                                            chatMessageCell.documentAttach = messageObject.getDocument();
                                                            chatMessageCell.documentAttachType = 7;
                                                            i56 = 0;
                                                        } else {
                                                            if (AndroidUtilities.isTablet()) {
                                                                minTabletSide7 = AndroidUtilities.getMinTabletSide();
                                                            } else {
                                                                TLRPC$PhotoSize tLRPC$PhotoSize38 = chatMessageCell.currentPhotoObject;
                                                                if (tLRPC$PhotoSize38 != null && (((i85 = messageObject17.type) == z49 || i85 == 20 || i85 == 3 || i85 == i25) && tLRPC$PhotoSize38.w >= tLRPC$PhotoSize38.h)) {
                                                                    i56 = Math.min(getParentWidth(), AndroidUtilities.displaySize.y) - AndroidUtilities.dp(64 + (!checkNeedDrawShareButton(messageObject) ? 0 : 10));
                                                                    z19 = true;
                                                                    int dp56 = AndroidUtilities.dp(100.0f) + i56;
                                                                    if (z19) {
                                                                        if (messageObject17.type != i2 && checkNeedDrawShareButton(messageObject)) {
                                                                            i56 -= AndroidUtilities.dp(20.0f);
                                                                        }
                                                                        if (i56 > AndroidUtilities.getPhotoSize()) {
                                                                            i56 = AndroidUtilities.getPhotoSize();
                                                                        }
                                                                        if (dp56 > AndroidUtilities.getPhotoSize()) {
                                                                            dp56 = AndroidUtilities.getPhotoSize();
                                                                        }
                                                                    } else if (z7) {
                                                                        i56 -= AndroidUtilities.dp(52.0f);
                                                                    }
                                                                    i57 = messageObject17.type;
                                                                    if (i57 == z49 || i57 == 20) {
                                                                        updateSecretTimeText(messageObject);
                                                                        chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(messageObject17.photoThumbs, 40);
                                                                    } else {
                                                                        if (i57 == 3 || i57 == i25) {
                                                                            chatMessageCell.createDocumentLayout(0, messageObject17);
                                                                            chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(messageObject17.photoThumbs, 40);
                                                                            updateSecretTimeText(messageObject);
                                                                        } else if (i57 == i2) {
                                                                            chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(messageObject17.photoThumbs, 40);
                                                                        }
                                                                        z20 = true;
                                                                        bitmapDrawable = chatMessageCell.currentMessageObject.strippedThumb;
                                                                        if (bitmapDrawable != null) {
                                                                            chatMessageCell.currentPhotoObjectThumb = null;
                                                                            chatMessageCell.currentPhotoObjectThumbStripped = bitmapDrawable;
                                                                        }
                                                                        if (messageObject17.type == i2) {
                                                                            if (chatMessageCell.isPlayingRound && !messageObject.isVoiceTranscriptionOpen()) {
                                                                                i28 = AndroidUtilities.roundPlayingMessageSize;
                                                                            } else {
                                                                                i28 = AndroidUtilities.roundMessageSize;
                                                                            }
                                                                            i29 = i28;
                                                                        } else {
                                                                            TLRPC$PhotoSize tLRPC$PhotoSize39 = chatMessageCell.currentPhotoObject;
                                                                            if (tLRPC$PhotoSize39 == null) {
                                                                                tLRPC$PhotoSize39 = chatMessageCell.currentPhotoObjectThumb;
                                                                            }
                                                                            if (messageObject.hasExtendedMediaPreview()) {
                                                                                TLRPC$TL_messageExtendedMediaPreview tLRPC$TL_messageExtendedMediaPreview = (TLRPC$TL_messageExtendedMediaPreview) messageObject17.messageOwner.media.extended_media;
                                                                                int i241 = tLRPC$TL_messageExtendedMediaPreview.w;
                                                                                if (i241 == 0 || (i84 = tLRPC$TL_messageExtendedMediaPreview.h) == 0) {
                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize40 = tLRPC$TL_messageExtendedMediaPreview.thumb;
                                                                                    if (tLRPC$PhotoSize40 == null) {
                                                                                        i81 = 0;
                                                                                        i241 = 0;
                                                                                    } else {
                                                                                        i241 = tLRPC$PhotoSize40.w;
                                                                                        i81 = tLRPC$PhotoSize40.h;
                                                                                    }
                                                                                } else {
                                                                                    i81 = i84;
                                                                                }
                                                                                int i242 = i241;
                                                                                i82 = i81;
                                                                                i83 = i242;
                                                                            } else if (tLRPC$PhotoSize39 != null && !(tLRPC$PhotoSize39 instanceof TLRPC$TL_photoStrippedSize)) {
                                                                                i83 = tLRPC$PhotoSize39.w;
                                                                                i82 = tLRPC$PhotoSize39.h;
                                                                            } else {
                                                                                TLRPC$Document tLRPC$Document16 = chatMessageCell.documentAttach;
                                                                                if (tLRPC$Document16 == null) {
                                                                                    i83 = 0;
                                                                                    i82 = 0;
                                                                                } else {
                                                                                    int size13 = tLRPC$Document16.attributes.size();
                                                                                    int i243 = 0;
                                                                                    int i244 = 0;
                                                                                    for (int i245 = 0; i245 < size13; i245++) {
                                                                                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute9 = chatMessageCell.documentAttach.attributes.get(i245);
                                                                                        if (tLRPC$DocumentAttribute9 instanceof TLRPC$TL_documentAttributeVideo) {
                                                                                            int i246 = tLRPC$DocumentAttribute9.w;
                                                                                            i244 = tLRPC$DocumentAttribute9.h;
                                                                                            i243 = i246;
                                                                                        }
                                                                                    }
                                                                                    i83 = i243;
                                                                                    i82 = i244;
                                                                                }
                                                                            }
                                                                            Point messageSize = getMessageSize(i83, i82, i56, dp56);
                                                                            i28 = (int) messageSize.x;
                                                                            i29 = (int) messageSize.y;
                                                                        }
                                                                        tLRPC$PhotoSize = chatMessageCell.currentPhotoObject;
                                                                        if (tLRPC$PhotoSize != null && "s".equals(tLRPC$PhotoSize.type)) {
                                                                            chatMessageCell.currentPhotoObject = null;
                                                                        }
                                                                        tLRPC$PhotoSize2 = chatMessageCell.currentPhotoObject;
                                                                        if (tLRPC$PhotoSize2 != null && tLRPC$PhotoSize2 == chatMessageCell.currentPhotoObjectThumb) {
                                                                            i80 = messageObject17.type;
                                                                            if (i80 == z49 || i80 == 20) {
                                                                                chatMessageCell.currentPhotoObjectThumb = null;
                                                                                chatMessageCell.currentPhotoObjectThumbStripped = null;
                                                                            } else {
                                                                                chatMessageCell.currentPhotoObject = null;
                                                                            }
                                                                        }
                                                                        if (z20 && !messageObject.needDrawBluredPreview() && (((tLRPC$PhotoSize5 = chatMessageCell.currentPhotoObject) == null || tLRPC$PhotoSize5 == chatMessageCell.currentPhotoObjectThumb) && ((tLRPC$PhotoSize6 = chatMessageCell.currentPhotoObjectThumb) == null || !"m".equals(tLRPC$PhotoSize6.type)))) {
                                                                            chatMessageCell.photoImage.setNeedsQualityThumb(z49);
                                                                            chatMessageCell.photoImage.setShouldGenerateQualityThumb(z49);
                                                                        }
                                                                        if (chatMessageCell.currentMessagesGroup == null && messageObject17.caption != null) {
                                                                            chatMessageCell.mediaBackground = false;
                                                                        }
                                                                        if ((i28 != 0 || i29 == 0) && messageObject17.type == i25 && (document = messageObject.getDocument()) != null) {
                                                                            for (i58 = 0; i58 < document.attributes.size(); i58++) {
                                                                                TLRPC$DocumentAttribute tLRPC$DocumentAttribute10 = document.attributes.get(i58);
                                                                                if ((tLRPC$DocumentAttribute10 instanceof TLRPC$TL_documentAttributeImageSize) || (tLRPC$DocumentAttribute10 instanceof TLRPC$TL_documentAttributeVideo)) {
                                                                                    int i247 = tLRPC$DocumentAttribute10.w;
                                                                                    float f32 = i56;
                                                                                    float f33 = i247 / f32;
                                                                                    int i248 = (int) (i247 / f33);
                                                                                    i29 = (int) (tLRPC$DocumentAttribute10.h / f33);
                                                                                    if (i29 > dp56) {
                                                                                        i28 = (int) (i248 / (i29 / dp56));
                                                                                    } else if (i29 >= AndroidUtilities.dp(120.0f)) {
                                                                                        i28 = i248;
                                                                                        dp56 = i29;
                                                                                    } else {
                                                                                        dp56 = AndroidUtilities.dp(120.0f);
                                                                                        float f34 = tLRPC$DocumentAttribute10.h / dp56;
                                                                                        int i249 = tLRPC$DocumentAttribute10.w;
                                                                                        if (i249 / f34 < f32) {
                                                                                            i248 = (int) (i249 / f34);
                                                                                        }
                                                                                        i28 = i248;
                                                                                    }
                                                                                    i29 = dp56;
                                                                                }
                                                                            }
                                                                            dp56 = i29;
                                                                            i29 = dp56;
                                                                        }
                                                                        if (i28 != 0 || i29 == 0) {
                                                                            i29 = AndroidUtilities.dp(150.0f);
                                                                            i28 = i29;
                                                                        }
                                                                        if (messageObject17.type == 3 && i28 < chatMessageCell.infoWidth + AndroidUtilities.dp(40.0f)) {
                                                                            i28 = chatMessageCell.infoWidth + AndroidUtilities.dp(40.0f);
                                                                        }
                                                                        i59 = messageObject17.type;
                                                                        if (i59 != 23 || i59 == 24) {
                                                                            double d9 = AndroidUtilities.displaySize.x;
                                                                            Double.isNaN(d9);
                                                                            i28 = (int) Math.min(d9 * 0.53d, AndroidUtilities.dp(300.0f));
                                                                            i29 = (int) ((i28 * 16.0f) / 9.0f);
                                                                        }
                                                                        if (chatMessageCell.commentLayout != null && chatMessageCell.drawSideButton != 3 && i28 < chatMessageCell.totalCommentWidth + AndroidUtilities.dp(10.0f)) {
                                                                            i28 = chatMessageCell.totalCommentWidth + AndroidUtilities.dp(10.0f);
                                                                        }
                                                                        if (chatMessageCell.currentMessagesGroup != null) {
                                                                            int groupPhotosWidth = getGroupPhotosWidth();
                                                                            int i250 = 0;
                                                                            int i251 = 0;
                                                                            ?? r13 = z49;
                                                                            while (i250 < chatMessageCell.currentMessagesGroup.posArray.size()) {
                                                                                if (chatMessageCell.currentMessagesGroup.posArray.get(i250).minY != 0) {
                                                                                    break;
                                                                                }
                                                                                double d10 = i251;
                                                                                double ceil9 = Math.ceil(((groupedMessagePosition7.pw + groupedMessagePosition7.leftSpanOffset) / 1000.0f) * groupPhotosWidth);
                                                                                Double.isNaN(d10);
                                                                                i251 = (int) (d10 + ceil9);
                                                                                i250++;
                                                                                messageObject17 = messageObject;
                                                                                z5 = z5;
                                                                                i25 = 8;
                                                                                i = 4;
                                                                                i4 = 2;
                                                                                r13 = 1;
                                                                                i2 = 5;
                                                                            }
                                                                            chatMessageCell.availableTimeWidth = i251 - AndroidUtilities.dp(35.0f);
                                                                            i60 = r13;
                                                                        } else {
                                                                            chatMessageCell.availableTimeWidth = i56 - AndroidUtilities.dp(14.0f);
                                                                            i60 = z49;
                                                                        }
                                                                        if (messageObject17.type == i2) {
                                                                            double d11 = AndroidUtilities.roundMessageSize;
                                                                            double ceil10 = Math.ceil(Theme.chat_audioTimePaint.measureText("00:00"));
                                                                            Double.isNaN(d11);
                                                                            double d12 = d11 - ceil10;
                                                                            double dp57 = AndroidUtilities.dp(46.0f);
                                                                            Double.isNaN(dp57);
                                                                            chatMessageCell.availableTimeWidth = (int) (d12 - dp57);
                                                                        }
                                                                        measureTime(messageObject);
                                                                        dp11 = chatMessageCell.timeWidth + AndroidUtilities.dp((SharedConfig.bubbleRadius < 10 ? 18 : 22) + (!messageObject.isOutOwner() ? 0 : 20));
                                                                        if (i28 < dp11) {
                                                                            i28 = dp11;
                                                                        }
                                                                        if (messageObject.isRoundVideo()) {
                                                                            int min5 = Math.min(i28, i29);
                                                                            boolean isVoiceTranscriptionOpen = messageObject.isVoiceTranscriptionOpen();
                                                                            chatMessageCell.drawBackground = isVoiceTranscriptionOpen;
                                                                            chatMessageCell.mediaBackground = !isVoiceTranscriptionOpen;
                                                                            int i252 = !isVoiceTranscriptionOpen ? min5 : 0;
                                                                            chatMessageCell.photoImage.setRoundRadius(min5 / 2);
                                                                            i28 = min5;
                                                                            i29 = i252;
                                                                            z17 = false;
                                                                        } else {
                                                                            if (messageObject.needDrawBluredPreview() && !messageObject.hasExtendedMediaPreview()) {
                                                                                if (AndroidUtilities.isTablet()) {
                                                                                    minTabletSide6 = AndroidUtilities.getMinTabletSide();
                                                                                } else {
                                                                                    minTabletSide6 = Math.min(getParentWidth(), AndroidUtilities.displaySize.y);
                                                                                }
                                                                                i28 = (int) (minTabletSide6 * 0.6f);
                                                                                i29 = (int) (i28 * 0.61f);
                                                                            }
                                                                            z17 = true;
                                                                        }
                                                                        if (chatMessageCell.currentMessagesGroup != null) {
                                                                            float max11 = Math.max(getParentWidth(), AndroidUtilities.displaySize.y) * 0.5f;
                                                                            float groupPhotosWidth2 = getGroupPhotosWidth();
                                                                            int ceil11 = (int) Math.ceil((chatMessageCell.currentPosition.pw / 1000.0f) * groupPhotosWidth2);
                                                                            if (chatMessageCell.currentPosition.minY != 0 && ((messageObject.isOutOwner() && (chatMessageCell.currentPosition.flags & i60) != 0) || (!messageObject.isOutOwner() && (chatMessageCell.currentPosition.flags & i4) != 0))) {
                                                                                int i253 = 0;
                                                                                int i254 = 0;
                                                                                int i255 = 0;
                                                                                while (i253 < chatMessageCell.currentMessagesGroup.posArray.size()) {
                                                                                    MessageObject.GroupedMessagePosition groupedMessagePosition19 = chatMessageCell.currentMessagesGroup.posArray.get(i253);
                                                                                    byte b = groupedMessagePosition19.minY;
                                                                                    if (b == 0) {
                                                                                        i72 = dp11;
                                                                                        z23 = z5;
                                                                                        double d13 = i254;
                                                                                        double ceil12 = Math.ceil((groupedMessagePosition19.pw / 1000.0f) * groupPhotosWidth2);
                                                                                        double ceil13 = groupedMessagePosition19.leftSpanOffset == 0 ? 0.0d : Math.ceil((i73 / 1000.0f) * groupPhotosWidth2);
                                                                                        Double.isNaN(d13);
                                                                                        i254 = (int) (d13 + ceil12 + ceil13);
                                                                                    } else {
                                                                                        byte b2 = chatMessageCell.currentPosition.minY;
                                                                                        if (b == b2) {
                                                                                            i72 = dp11;
                                                                                            z23 = z5;
                                                                                            double d14 = i255;
                                                                                            double ceil14 = Math.ceil((groupedMessagePosition19.pw / 1000.0f) * groupPhotosWidth2);
                                                                                            double ceil15 = groupedMessagePosition19.leftSpanOffset == 0 ? 0.0d : Math.ceil((i74 / 1000.0f) * groupPhotosWidth2);
                                                                                            Double.isNaN(d14);
                                                                                            i255 = (int) (d14 + ceil14 + ceil15);
                                                                                        } else if (b > b2) {
                                                                                            break;
                                                                                        } else {
                                                                                            i72 = dp11;
                                                                                            z23 = z5;
                                                                                        }
                                                                                    }
                                                                                    i253++;
                                                                                    messageObject17 = messageObject;
                                                                                    dp11 = i72;
                                                                                    z5 = z23;
                                                                                    i25 = 8;
                                                                                    i = 4;
                                                                                    i4 = 2;
                                                                                }
                                                                                ceil11 += i254 - i255;
                                                                            }
                                                                            int dp58 = ceil11 - AndroidUtilities.dp(9.0f);
                                                                            if (chatMessageCell.isAvatarVisible) {
                                                                                dp58 -= AndroidUtilities.dp(48.0f);
                                                                            }
                                                                            int i256 = dp58;
                                                                            if (chatMessageCell.currentPosition.siblingHeights != null) {
                                                                                int i257 = 0;
                                                                                int i258 = 0;
                                                                                while (true) {
                                                                                    groupedMessagePosition9 = chatMessageCell.currentPosition;
                                                                                    if (i257 >= groupedMessagePosition9.siblingHeights.length) {
                                                                                        break;
                                                                                    }
                                                                                    i258 += (int) Math.ceil(fArr[i257] * max11);
                                                                                    i257++;
                                                                                    messageObject17 = messageObject;
                                                                                    i25 = 8;
                                                                                    i = 4;
                                                                                    i4 = 2;
                                                                                }
                                                                                i29 = i258 + ((groupedMessagePosition9.maxY - groupedMessagePosition9.minY) * Math.round(AndroidUtilities.density * 7.0f));
                                                                            } else {
                                                                                i29 = (int) Math.ceil(max11 * groupedMessagePosition8.ph);
                                                                            }
                                                                            chatMessageCell.backgroundWidth = i256;
                                                                            int i259 = chatMessageCell.currentPosition.flags;
                                                                            if ((i259 & 2) != 0 && (i259 & 1) != 0) {
                                                                                dp12 = AndroidUtilities.dp(8.0f);
                                                                            } else if ((i259 & 2) == 0 && (i259 & 1) == 0) {
                                                                                dp12 = AndroidUtilities.dp(11.0f);
                                                                            } else if ((i259 & i4) != 0) {
                                                                                dp12 = AndroidUtilities.dp(10.0f);
                                                                            } else {
                                                                                dp12 = AndroidUtilities.dp(9.0f);
                                                                            }
                                                                            int i260 = i256 - dp12;
                                                                            int dp59 = chatMessageCell.currentPosition.edge ? i260 : AndroidUtilities.dp(10.0f) + i260;
                                                                            int dp60 = 0 + (dp59 - AndroidUtilities.dp(15.0f));
                                                                            MessageObject.GroupedMessagePosition groupedMessagePosition20 = chatMessageCell.currentPosition;
                                                                            int i261 = groupedMessagePosition20.flags;
                                                                            if ((i261 & 8) == 0 && !(chatMessageCell.currentMessagesGroup.hasSibling && (i261 & i) == 0)) {
                                                                                i62 = dp60;
                                                                                i61 = i260;
                                                                            } else {
                                                                                int additionalWidthForPosition = dp60 + chatMessageCell.getAdditionalWidthForPosition(groupedMessagePosition20);
                                                                                int min6 = Math.min(chatMessageCell.currentMessagesGroup.posArray.size(), chatMessageCell.currentMessagesGroup.messages.size());
                                                                                int i262 = additionalWidthForPosition;
                                                                                int i263 = 0;
                                                                                boolean z69 = true;
                                                                                while (i263 < min6) {
                                                                                    int i264 = dp11;
                                                                                    MessageObject messageObject30 = chatMessageCell.currentMessagesGroup.messages.get(i263);
                                                                                    MessageObject.GroupedMessagePosition groupedMessagePosition21 = chatMessageCell.currentMessagesGroup.posArray.get(i263);
                                                                                    if (groupedMessagePosition21 != chatMessageCell.currentPosition && (groupedMessagePosition21.flags & 8) != 0) {
                                                                                        int ceil16 = (int) Math.ceil((groupedMessagePosition21.pw / 1000.0f) * groupPhotosWidth2);
                                                                                        if (groupedMessagePosition21.minY != 0 && ((messageObject.isOutOwner() && (groupedMessagePosition21.flags & 1) != 0) || !(messageObject.isOutOwner() || (groupedMessagePosition21.flags & 2) == 0))) {
                                                                                            int i265 = 0;
                                                                                            int i266 = 0;
                                                                                            int i267 = 0;
                                                                                            while (true) {
                                                                                                if (i266 >= chatMessageCell.currentMessagesGroup.posArray.size()) {
                                                                                                    i63 = i29;
                                                                                                    break;
                                                                                                }
                                                                                                MessageObject.GroupedMessagePosition groupedMessagePosition22 = chatMessageCell.currentMessagesGroup.posArray.get(i266);
                                                                                                byte b3 = groupedMessagePosition22.minY;
                                                                                                if (b3 == 0) {
                                                                                                    i64 = i263;
                                                                                                    i63 = i29;
                                                                                                    i65 = i264;
                                                                                                    i66 = dp59;
                                                                                                    groupedMessagePosition10 = groupedMessagePosition21;
                                                                                                    z21 = z5;
                                                                                                    i67 = ceil16;
                                                                                                    double d15 = i265;
                                                                                                    double ceil17 = Math.ceil((groupedMessagePosition22.pw / 1000.0f) * groupPhotosWidth2);
                                                                                                    double ceil18 = groupedMessagePosition22.leftSpanOffset == 0 ? 0.0d : Math.ceil((i68 / 1000.0f) * groupPhotosWidth2);
                                                                                                    Double.isNaN(d15);
                                                                                                    i265 = (int) (d15 + ceil17 + ceil18);
                                                                                                } else {
                                                                                                    i63 = i29;
                                                                                                    byte b4 = groupedMessagePosition21.minY;
                                                                                                    if (b3 == b4) {
                                                                                                        i64 = i263;
                                                                                                        i67 = ceil16;
                                                                                                        double d16 = i267;
                                                                                                        i65 = i264;
                                                                                                        i66 = dp59;
                                                                                                        double ceil19 = Math.ceil((groupedMessagePosition22.pw / 1000.0f) * groupPhotosWidth2);
                                                                                                        if (groupedMessagePosition22.leftSpanOffset == 0) {
                                                                                                            groupedMessagePosition10 = groupedMessagePosition21;
                                                                                                            z21 = z5;
                                                                                                            ceil = 0.0d;
                                                                                                        } else {
                                                                                                            groupedMessagePosition10 = groupedMessagePosition21;
                                                                                                            z21 = z5;
                                                                                                            ceil = Math.ceil((i69 / 1000.0f) * groupPhotosWidth2);
                                                                                                        }
                                                                                                        Double.isNaN(d16);
                                                                                                        i267 = (int) (d16 + ceil19 + ceil);
                                                                                                    } else if (b3 > b4) {
                                                                                                        break;
                                                                                                    } else {
                                                                                                        i64 = i263;
                                                                                                        i67 = ceil16;
                                                                                                        i65 = i264;
                                                                                                        i66 = dp59;
                                                                                                        groupedMessagePosition10 = groupedMessagePosition21;
                                                                                                        z21 = z5;
                                                                                                    }
                                                                                                }
                                                                                                i266++;
                                                                                                ceil16 = i67;
                                                                                                i263 = i64;
                                                                                                i29 = i63;
                                                                                                dp59 = i66;
                                                                                                i264 = i65;
                                                                                                z5 = z21;
                                                                                                groupedMessagePosition21 = groupedMessagePosition10;
                                                                                            }
                                                                                            ceil16 += i265 - i267;
                                                                                        } else {
                                                                                            i63 = i29;
                                                                                        }
                                                                                        int dp61 = ceil16 - AndroidUtilities.dp(9.0f);
                                                                                        int i268 = groupedMessagePosition21.flags;
                                                                                        if ((i268 & 2) != 0 && (i268 & 1) != 0) {
                                                                                            dp13 = AndroidUtilities.dp(8.0f);
                                                                                        } else if ((i268 & 2) == 0 && (i268 & 1) == 0) {
                                                                                            dp13 = AndroidUtilities.dp(11.0f);
                                                                                        } else if ((i268 & 2) != 0) {
                                                                                            dp13 = AndroidUtilities.dp(10.0f);
                                                                                        } else {
                                                                                            dp13 = AndroidUtilities.dp(9.0f);
                                                                                        }
                                                                                        int i269 = dp61 - dp13;
                                                                                        if ((((chatMessageCell.isChat || messageObject30.isRepostPreview) && !chatMessageCell.isThreadPost && !messageObject30.isOutOwner()) || messageObject30.forceAvatar) && messageObject30.needDrawAvatar() && groupedMessagePosition21.edge) {
                                                                                            i269 -= AndroidUtilities.dp(48.0f);
                                                                                        }
                                                                                        int additionalWidthForPosition2 = i269 + chatMessageCell.getAdditionalWidthForPosition(groupedMessagePosition21);
                                                                                        if (!groupedMessagePosition21.edge) {
                                                                                            additionalWidthForPosition2 += AndroidUtilities.dp(10.0f);
                                                                                        }
                                                                                        i262 += additionalWidthForPosition2;
                                                                                        if (groupedMessagePosition21.minX < chatMessageCell.currentPosition.minX || (chatMessageCell.currentMessagesGroup.hasSibling && groupedMessagePosition21.minY != groupedMessagePosition21.maxY)) {
                                                                                            chatMessageCell.captionOffsetX -= additionalWidthForPosition2;
                                                                                        }
                                                                                        i260 = additionalWidthForPosition2;
                                                                                        if (z69 && (charSequence2 = messageObject30.caption) != null) {
                                                                                            if (chatMessageCell.currentCaption == null) {
                                                                                                chatMessageCell.currentCaption = null;
                                                                                                z69 = false;
                                                                                            } else {
                                                                                                chatMessageCell.currentCaption = charSequence2;
                                                                                            }
                                                                                        }
                                                                                        i263++;
                                                                                        messageObject17 = messageObject;
                                                                                        dp11 = i264;
                                                                                        i29 = i63;
                                                                                        i25 = 8;
                                                                                        i = 4;
                                                                                    }
                                                                                    i63 = i29;
                                                                                    if (z69) {
                                                                                        if (chatMessageCell.currentCaption == null) {
                                                                                        }
                                                                                    }
                                                                                    i263++;
                                                                                    messageObject17 = messageObject;
                                                                                    dp11 = i264;
                                                                                    i29 = i63;
                                                                                    i25 = 8;
                                                                                    i = 4;
                                                                                }
                                                                                i61 = i260;
                                                                                i62 = i262;
                                                                            }
                                                                            i70 = i62;
                                                                            i71 = i61;
                                                                            i28 = dp59;
                                                                            z22 = false;
                                                                        } else {
                                                                            chatMessageCell.currentCaption = messageObject17.caption;
                                                                            if (AndroidUtilities.isTablet()) {
                                                                                minTabletSide5 = AndroidUtilities.getMinTabletSide();
                                                                            } else {
                                                                                minTabletSide5 = Math.min(getParentWidth(), AndroidUtilities.displaySize.y);
                                                                            }
                                                                            int i270 = (int) (minTabletSide5 * 0.65f);
                                                                            if (!messageObject.needDrawBluredPreview()) {
                                                                                if (chatMessageCell.currentCaption == null) {
                                                                                    ReactionsLayoutInBubble reactionsLayoutInBubble26 = chatMessageCell.reactionsLayoutInBubble;
                                                                                    if (!reactionsLayoutInBubble26.isEmpty) {
                                                                                    }
                                                                                }
                                                                                if (i28 < i270) {
                                                                                    z26 = true;
                                                                                    int dp62 = AndroidUtilities.dp(8.0f) + i28;
                                                                                    chatMessageCell.backgroundWidth = dp62;
                                                                                    if (!chatMessageCell.mediaBackground) {
                                                                                        chatMessageCell.backgroundWidth = dp62 + AndroidUtilities.dp(9.0f);
                                                                                    }
                                                                                    z22 = z26;
                                                                                    i71 = i28;
                                                                                    i70 = i270;
                                                                                }
                                                                            }
                                                                            i270 = i28 - AndroidUtilities.dp(10.0f);
                                                                            z26 = false;
                                                                            int dp622 = AndroidUtilities.dp(8.0f) + i28;
                                                                            chatMessageCell.backgroundWidth = dp622;
                                                                            if (!chatMessageCell.mediaBackground) {
                                                                            }
                                                                            z22 = z26;
                                                                            i71 = i28;
                                                                            i70 = i270;
                                                                        }
                                                                        if (chatMessageCell.currentCaption != null) {
                                                                            try {
                                                                                chatMessageCell.captionFullWidth = i70;
                                                                                i70 -= getExtraTextX() * 2;
                                                                                MessageObject.TextLayoutBlocks textLayoutBlocks6 = new MessageObject.TextLayoutBlocks(chatMessageCell.currentMessageObject, chatMessageCell.currentCaption, Theme.chat_msgTextPaint, i70);
                                                                                chatMessageCell.captionLayout = textLayoutBlocks6;
                                                                                if (z22) {
                                                                                    int i271 = textLayoutBlocks6.textWidth;
                                                                                    chatMessageCell.captionWidth = i271;
                                                                                    if (i271 > i70) {
                                                                                        chatMessageCell.captionWidth = i70;
                                                                                    }
                                                                                } else {
                                                                                    chatMessageCell.captionWidth = i70;
                                                                                }
                                                                                int i272 = textLayoutBlocks6.textHeight;
                                                                                chatMessageCell.captionHeight = i272;
                                                                                chatMessageCell.addedCaptionHeight = i272 + AndroidUtilities.dp(9.0f);
                                                                                textLayoutBlocks3 = chatMessageCell.captionLayout;
                                                                            } catch (Exception e17) {
                                                                                e = e17;
                                                                                i75 = 0;
                                                                            }
                                                                            if (!textLayoutBlocks3.hasCodeAtBottom && !textLayoutBlocks3.hasQuoteAtBottom) {
                                                                                groupedMessagePosition11 = chatMessageCell.currentPosition;
                                                                                if (groupedMessagePosition11 != null && (groupedMessagePosition11.flags & i25) == 0) {
                                                                                    chatMessageCell.captionLayout = null;
                                                                                }
                                                                                i75 = 0 + chatMessageCell.addedCaptionHeight;
                                                                                int max12 = Math.max(chatMessageCell.captionWidth, i28 - AndroidUtilities.dp(10.0f));
                                                                                reactionsLayoutInBubble4 = chatMessageCell.reactionsLayoutInBubble;
                                                                                if (!reactionsLayoutInBubble4.isEmpty && !reactionsLayoutInBubble4.isSmall) {
                                                                                    i32 = 0;
                                                                                    i76 = chatMessageCell.highlightCaptionToSetStart;
                                                                                    if (i76 >= 0 && (textLayoutBlocks4 = chatMessageCell.captionLayout) != null) {
                                                                                        chatMessageCell.highlight(i76, chatMessageCell.highlightCaptionToSetEnd, textLayoutBlocks4.textLayoutBlocks);
                                                                                    }
                                                                                    chatMessageCell.highlightCaptionToSetEnd = -1;
                                                                                    chatMessageCell.highlightCaptionToSetStart = -1;
                                                                                    if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                                                        boolean z70 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(24.0f) > i70;
                                                                                        int max13 = Math.max(chatMessageCell.backgroundWidth - AndroidUtilities.dp(36.0f), i70);
                                                                                        chatMessageCell.reactionsLayoutInBubble.measure(max13, 3);
                                                                                        ReactionsLayoutInBubble reactionsLayoutInBubble27 = chatMessageCell.reactionsLayoutInBubble;
                                                                                        if (!reactionsLayoutInBubble27.isEmpty) {
                                                                                            if (chatMessageCell.isRoundVideo) {
                                                                                                reactionsLayoutInBubble27.drawServiceShaderBackground = 1.0f - getVideoTranscriptionProgress();
                                                                                            } else if (shouldDrawTimeOnMedia()) {
                                                                                                chatMessageCell.reactionsLayoutInBubble.drawServiceShaderBackground = 1.0f;
                                                                                            }
                                                                                            int i273 = chatMessageCell.reactionsLayoutInBubble.height;
                                                                                            if (chatMessageCell.captionLayout == null) {
                                                                                                dp14 = i273 + AndroidUtilities.dp(12.0f) + AndroidUtilities.dp(4.0f);
                                                                                            } else {
                                                                                                dp14 = i273 + AndroidUtilities.dp(12.0f);
                                                                                                chatMessageCell.reactionsLayoutInBubble.positionOffsetY += AndroidUtilities.dp(12.0f);
                                                                                            }
                                                                                            chatMessageCell.reactionsLayoutInBubble.totalHeight = dp14;
                                                                                            i75 += dp14;
                                                                                            if (chatMessageCell.isRoundVideo && (messageObject10 = chatMessageCell.currentMessageObject) != null && messageObject10.isVoiceTranscriptionOpen()) {
                                                                                                chatMessageCell.reactionsLayoutInBubble.positionOffsetY += AndroidUtilities.dp(8.0f);
                                                                                            }
                                                                                            if (!shouldDrawTimeOnMedia()) {
                                                                                                int min7 = Math.min(max13, chatMessageCell.reactionsLayoutInBubble.width + dp11 + getExtraTimeX() + AndroidUtilities.dp(2.0f));
                                                                                                float f35 = chatMessageCell.reactionsLayoutInBubble.lastLineX;
                                                                                                if (!shouldDrawTimeOnMedia() && min7 - f35 < getExtraTimeX() + dp11) {
                                                                                                    i75 += AndroidUtilities.dp(14.0f);
                                                                                                    chatMessageCell.reactionsLayoutInBubble.totalHeight += AndroidUtilities.dp(14.0f);
                                                                                                    chatMessageCell.reactionsLayoutInBubble.positionOffsetY -= AndroidUtilities.dp(14.0f);
                                                                                                    if (!z70) {
                                                                                                        int i274 = chatMessageCell.captionWidth;
                                                                                                        int i275 = chatMessageCell.reactionsLayoutInBubble.width;
                                                                                                        if (i274 < i275) {
                                                                                                            chatMessageCell.captionWidth = i275;
                                                                                                        }
                                                                                                    }
                                                                                                    i32 = 1;
                                                                                                } else if (!z70) {
                                                                                                    ReactionsLayoutInBubble reactionsLayoutInBubble28 = chatMessageCell.reactionsLayoutInBubble;
                                                                                                    int i276 = reactionsLayoutInBubble28.lastLineX;
                                                                                                    if (i276 + dp11 > chatMessageCell.captionWidth) {
                                                                                                        chatMessageCell.captionWidth = i276 + dp11;
                                                                                                    }
                                                                                                    int i277 = reactionsLayoutInBubble28.width;
                                                                                                    if (i277 > chatMessageCell.captionWidth) {
                                                                                                        chatMessageCell.captionWidth = i277;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    i31 = i75;
                                                                                    measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                                                    if (chatMessageCell.currentMessagesGroup == null && (((i79 = chatMessageCell.documentAttachType) == i || i79 == 2) && i28 < measureText)) {
                                                                                        int dp63 = AndroidUtilities.dp(8.0f) + measureText;
                                                                                        chatMessageCell.backgroundWidth = dp63;
                                                                                        if (!chatMessageCell.mediaBackground) {
                                                                                            chatMessageCell.backgroundWidth = dp63 + AndroidUtilities.dp(9.0f);
                                                                                        }
                                                                                        i28 = measureText;
                                                                                    }
                                                                                    if (z22 && i28 < chatMessageCell.captionWidth + AndroidUtilities.dp(10.0f)) {
                                                                                        i28 = chatMessageCell.captionWidth + AndroidUtilities.dp(10.0f);
                                                                                        int dp64 = AndroidUtilities.dp(8.0f) + i28;
                                                                                        chatMessageCell.backgroundWidth = dp64;
                                                                                        if (!chatMessageCell.mediaBackground) {
                                                                                            chatMessageCell.backgroundWidth = dp64 + AndroidUtilities.dp(9.0f);
                                                                                        }
                                                                                    }
                                                                                    if (z3 || z51 || z5) {
                                                                                        String format6 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                                        chatMessageCell.currentPhotoFilterThumb = format6;
                                                                                        chatMessageCell.currentPhotoFilter = format6;
                                                                                        arrayList3 = messageObject17.photoThumbs;
                                                                                        if ((arrayList3 != null && arrayList3.size() > 1) || (i78 = messageObject17.type) == 3 || i78 == 8 || i78 == 5) {
                                                                                            if (messageObject.needDrawBluredPreview()) {
                                                                                                chatMessageCell.photoImage.setColorFilter(getFancyBlurFilter());
                                                                                                if (!messageObject.isRoundOnce()) {
                                                                                                    chatMessageCell.currentPhotoFilter += "_b2";
                                                                                                }
                                                                                                if (messageObject.isRoundOnce()) {
                                                                                                    chatMessageCell.currentPhotoFilterThumb += "_b2r";
                                                                                                } else {
                                                                                                    chatMessageCell.currentPhotoFilterThumb += "_b2";
                                                                                                }
                                                                                            } else {
                                                                                                chatMessageCell.currentPhotoFilterThumb += "_b";
                                                                                            }
                                                                                        }
                                                                                    } else {
                                                                                        String format7 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                                        if (!messageObject.needDrawBluredPreview() && !format7.equals(chatMessageCell.currentPhotoFilter)) {
                                                                                            if (ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject) == null) {
                                                                                                if (ImageLoader.getInstance().isInMemCache(forObject.getKey(chatMessageCell.photoParentObject, null, false) + "@" + chatMessageCell.currentPhotoFilter, false)) {
                                                                                                    chatMessageCell.currentPhotoObjectThumb = chatMessageCell.currentPhotoObject;
                                                                                                    chatMessageCell.currentPhotoFilterThumb = chatMessageCell.currentPhotoFilter;
                                                                                                    chatMessageCell.currentPhotoFilter = format7;
                                                                                                }
                                                                                            }
                                                                                        } else if (messageObject.needDrawBluredPreview()) {
                                                                                            chatMessageCell.photoImage.setColorFilter(getFancyBlurFilter());
                                                                                        }
                                                                                    }
                                                                                    int i278 = messageObject17.type;
                                                                                    boolean z71 = i278 == 3 || i278 == 8 || i278 == 5;
                                                                                    tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                                    if (tLRPC$PhotoSize3 == null || z71 || tLRPC$PhotoSize3.size != 0) {
                                                                                        i77 = -1;
                                                                                    } else {
                                                                                        i77 = -1;
                                                                                        tLRPC$PhotoSize3.size = -1;
                                                                                    }
                                                                                    tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                                    if (tLRPC$PhotoSize4 != null && !z71 && tLRPC$PhotoSize4.size == 0) {
                                                                                        tLRPC$PhotoSize4.size = i77;
                                                                                    }
                                                                                    if (SharedConfig.isAutoplayVideo()) {
                                                                                        MessageObject messageObject31 = chatMessageCell.currentMessageObject;
                                                                                        if (!messageObject31.isRepostPreview) {
                                                                                            if (messageObject31.hasMediaSpoilers()) {
                                                                                                MessageObject messageObject32 = chatMessageCell.currentMessageObject;
                                                                                                if (!messageObject32.isMediaSpoilersRevealed) {
                                                                                                }
                                                                                            }
                                                                                            if (messageObject17.type == 3 && !messageObject.needDrawBluredPreview()) {
                                                                                                MessageObject messageObject33 = chatMessageCell.currentMessageObject;
                                                                                                if (messageObject33.mediaExists || messageObject33.attachPathExists || (messageObject.canStreamVideo() && DownloadController.getInstance(chatMessageCell.currentAccount).canDownloadMedia(chatMessageCell.currentMessageObject))) {
                                                                                                    MessageObject.GroupedMessagePosition groupedMessagePosition23 = chatMessageCell.currentPosition;
                                                                                                    if (groupedMessagePosition23 != null) {
                                                                                                        int i279 = groupedMessagePosition23.flags;
                                                                                                        if ((i279 & 1) != 0 && (i279 & 2) != 0) {
                                                                                                            z24 = true;
                                                                                                            chatMessageCell.autoPlayingMedia = z24;
                                                                                                            int i280 = chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo() ? 0 : 2;
                                                                                                            if (!chatMessageCell.autoPlayingMedia) {
                                                                                                                chatMessageCell.photoImage.setAllowStartAnimation(true);
                                                                                                                chatMessageCell.photoImage.startAnimation();
                                                                                                                TLRPC$Document document4 = messageObject.getDocument();
                                                                                                                VideoEditedInfo videoEditedInfo = chatMessageCell.currentMessageObject.videoEditedInfo;
                                                                                                                if (videoEditedInfo != null && videoEditedInfo.canAutoPlaySourceVideo() && messageObject.getDocument() != null) {
                                                                                                                    chatMessageCell.photoImage.setImage(ImageLocation.getForPath(chatMessageCell.currentMessageObject.videoEditedInfo.originalPath), ImageLoader.AUTOPLAY_FILTER, ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForDocument(chatMessageCell.currentPhotoObjectThumb, document4), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, messageObject.getDocument().size, null, messageObject, 0);
                                                                                                                    ImageReceiver imageReceiver6 = chatMessageCell.photoImage;
                                                                                                                    VideoEditedInfo videoEditedInfo2 = chatMessageCell.currentMessageObject.videoEditedInfo;
                                                                                                                    imageReceiver6.setMediaStartEndTime(videoEditedInfo2.startTime / 1000, videoEditedInfo2.endTime / 1000);
                                                                                                                } else if (messageObject.getDocument() != null) {
                                                                                                                    if (!z51 && !z5) {
                                                                                                                        chatMessageCell.photoImage.setCrossfadeWithOldImage(true);
                                                                                                                    }
                                                                                                                    chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(document4), ImageLoader.AUTOPLAY_FILTER, ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForDocument(chatMessageCell.currentPhotoObjectThumb, document4), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, messageObject.getDocument().size, null, messageObject, 0);
                                                                                                                }
                                                                                                            } else {
                                                                                                                int i281 = messageObject17.type;
                                                                                                                if (i281 == 23 || i281 == 24) {
                                                                                                                    TL_stories$StoryItem tL_stories$StoryItem8 = messageObject17.messageOwner.media.storyItem;
                                                                                                                    if (tL_stories$StoryItem8 != null) {
                                                                                                                        if (tL_stories$StoryItem8 instanceof TL_stories$TL_storyItemDeleted) {
                                                                                                                            chatMessageCell.photoImage.setImageBitmap(StoriesUtilities.getExpiredStoryDrawable());
                                                                                                                        } else {
                                                                                                                            StoriesUtilities.setImage(chatMessageCell.photoImage, tL_stories$StoryItem8);
                                                                                                                        }
                                                                                                                    } else {
                                                                                                                        chatMessageCell.photoImage.clearImage();
                                                                                                                    }
                                                                                                                } else if (i281 == 20) {
                                                                                                                    chatMessageCell.photoImage.setImage(null, null, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, chatMessageCell.currentMessageObject, i280);
                                                                                                                } else if (i281 == 1) {
                                                                                                                    MessageObject messageObject34 = messageObject17;
                                                                                                                    if (messageObject34.useCustomPhoto) {
                                                                                                                        chatMessageCell.photoImage.setImageBitmap(getResources().getDrawable(R.drawable.theme_preview_image));
                                                                                                                    } else {
                                                                                                                        TLRPC$PhotoSize tLRPC$PhotoSize41 = chatMessageCell.currentPhotoObject;
                                                                                                                        if (tLRPC$PhotoSize41 != null) {
                                                                                                                            String attachFileName2 = FileLoader.getAttachFileName(tLRPC$PhotoSize41);
                                                                                                                            if (messageObject34.mediaExists) {
                                                                                                                                DownloadController.getInstance(chatMessageCell.currentAccount).removeLoadingFileObserver(chatMessageCell);
                                                                                                                                z25 = true;
                                                                                                                            } else {
                                                                                                                                z25 = false;
                                                                                                                            }
                                                                                                                            if (z25 || ((!chatMessageCell.currentMessageObject.loadingCancelled && DownloadController.getInstance(chatMessageCell.currentAccount).canDownloadMedia(chatMessageCell.currentMessageObject)) || FileLoader.getInstance(chatMessageCell.currentAccount).isLoadingFile(attachFileName2))) {
                                                                                                                                chatMessageCell.photoImage.setImage(ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, chatMessageCell.currentPhotoObject.size, null, chatMessageCell.currentMessageObject, i280);
                                                                                                                            } else {
                                                                                                                                chatMessageCell.photoNotSet = true;
                                                                                                                                TLRPC$PhotoSize tLRPC$PhotoSize42 = chatMessageCell.currentPhotoObjectThumb;
                                                                                                                                if (tLRPC$PhotoSize42 != null || chatMessageCell.currentPhotoObjectThumbStripped != null) {
                                                                                                                                    chatMessageCell.photoImage.setImage(null, null, ImageLocation.getForObject(tLRPC$PhotoSize42, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, chatMessageCell.currentMessageObject, i280);
                                                                                                                                } else {
                                                                                                                                    chatMessageCell.photoImage.setImageBitmap((Drawable) null);
                                                                                                                                }
                                                                                                                            }
                                                                                                                        } else {
                                                                                                                            chatMessageCell.photoImage.setImageBitmap((Drawable) null);
                                                                                                                        }
                                                                                                                    }
                                                                                                                } else if (i281 == 8 || i281 == 5) {
                                                                                                                    MessageObject messageObject35 = messageObject17;
                                                                                                                    String attachFileName3 = FileLoader.getAttachFileName(messageObject.getDocument());
                                                                                                                    if (messageObject35.attachPathExists) {
                                                                                                                        DownloadController.getInstance(chatMessageCell.currentAccount).removeLoadingFileObserver(chatMessageCell);
                                                                                                                        c = 1;
                                                                                                                    } else {
                                                                                                                        c = !messageObject35.mediaExists ? (char) 0 : (char) 2;
                                                                                                                    }
                                                                                                                    TLRPC$Document document5 = messageObject.getDocument();
                                                                                                                    boolean canDownloadMedia2 = (MessageObject.isGifDocument(document5, messageObject.hasValidGroupId()) || messageObject35.type == 5) ? DownloadController.getInstance(chatMessageCell.currentAccount).canDownloadMedia(chatMessageCell.currentMessageObject) : false;
                                                                                                                    TLRPC$VideoSize documentVideoThumb2 = MessageObject.getDocumentVideoThumb(document5);
                                                                                                                    if (((MessageObject.isGifDocument(document5, messageObject.hasValidGroupId()) && messageObject35.videoEditedInfo == null) || !(messageObject.isSending() || messageObject.isEditing())) && (c != 0 || FileLoader.getInstance(chatMessageCell.currentAccount).isLoadingFile(attachFileName3) || canDownloadMedia2)) {
                                                                                                                        char c2 = 1;
                                                                                                                        if (c != 1) {
                                                                                                                            if (!messageObject.needDrawBluredPreview() && (c != 0 || (messageObject.canStreamVideo() && canDownloadMedia2))) {
                                                                                                                                chatMessageCell.autoPlayingMedia = true;
                                                                                                                                if (!z51) {
                                                                                                                                    chatMessageCell.photoImage.setCrossfadeWithOldImage(true);
                                                                                                                                    chatMessageCell.photoImage.setCrossfadeDuration(250);
                                                                                                                                }
                                                                                                                                if (c == 0 && documentVideoThumb2 != null && (chatMessageCell.currentPhotoObject == null || chatMessageCell.currentPhotoObjectThumb == null)) {
                                                                                                                                    ImageReceiver imageReceiver7 = chatMessageCell.photoImage;
                                                                                                                                    ImageLocation forDocument4 = ImageLocation.getForDocument(document5);
                                                                                                                                    ImageLocation forDocument5 = ImageLocation.getForDocument(documentVideoThumb2, chatMessageCell.documentAttach);
                                                                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize43 = chatMessageCell.currentPhotoObject;
                                                                                                                                    if (tLRPC$PhotoSize43 == null) {
                                                                                                                                        tLRPC$PhotoSize43 = chatMessageCell.currentPhotoObjectThumb;
                                                                                                                                    }
                                                                                                                                    imageReceiver7.setImage(forDocument4, ImageLoader.AUTOPLAY_FILTER, forDocument5, null, ImageLocation.getForDocument(tLRPC$PhotoSize43, chatMessageCell.documentAttach), chatMessageCell.currentPhotoObject == null ? chatMessageCell.currentPhotoFilterThumb : chatMessageCell.currentPhotoFilter, chatMessageCell.currentPhotoObjectThumbStripped, document5.size, null, messageObject, i280);
                                                                                                                                } else if (chatMessageCell.isRoundVideo && !z51 && chatMessageCell.photoImage.hasStaticThumb()) {
                                                                                                                                    chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(document5), ImageLoader.AUTOPLAY_FILTER, ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, null, null, chatMessageCell.photoImage.getStaticThumb(), document5.size, null, messageObject, !messageObject.isRoundOnce() ? 0 : i280);
                                                                                                                                } else {
                                                                                                                                    chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(document5), ImageLoader.AUTOPLAY_FILTER, ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, document5.size, null, messageObject, i280);
                                                                                                                                }
                                                                                                                            } else {
                                                                                                                                c2 = 1;
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (c == c2) {
                                                                                                                            chatMessageCell.photoImage.setImage(ImageLocation.getForPath(!messageObject.isSendError() ? messageObject.messageOwner.attachPath : null), null, ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, messageObject, i280);
                                                                                                                        } else if (documentVideoThumb2 != null && (chatMessageCell.currentPhotoObject == null || chatMessageCell.currentPhotoObjectThumb == null)) {
                                                                                                                            ImageReceiver imageReceiver8 = chatMessageCell.photoImage;
                                                                                                                            ImageLocation forDocument6 = ImageLocation.getForDocument(document5);
                                                                                                                            ImageLocation forDocument7 = ImageLocation.getForDocument(documentVideoThumb2, chatMessageCell.documentAttach);
                                                                                                                            TLRPC$PhotoSize tLRPC$PhotoSize44 = chatMessageCell.currentPhotoObject;
                                                                                                                            if (tLRPC$PhotoSize44 == null) {
                                                                                                                                tLRPC$PhotoSize44 = chatMessageCell.currentPhotoObjectThumb;
                                                                                                                            }
                                                                                                                            imageReceiver8.setImage(forDocument6, null, forDocument7, null, ImageLocation.getForDocument(tLRPC$PhotoSize44, chatMessageCell.documentAttach), chatMessageCell.currentPhotoObject == null ? chatMessageCell.currentPhotoFilterThumb : chatMessageCell.currentPhotoFilter, chatMessageCell.currentPhotoObjectThumbStripped, document5.size, null, messageObject, i280);
                                                                                                                        } else {
                                                                                                                            chatMessageCell.photoImage.setImage(ImageLocation.getForDocument(document5), null, ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, document5.size, null, messageObject, !messageObject.isRoundOnce() ? 0 : i280);
                                                                                                                        }
                                                                                                                    } else if (messageObject35.videoEditedInfo != null && messageObject35.type == 5 && !chatMessageCell.currentMessageObject.needDrawBluredPreview()) {
                                                                                                                        chatMessageCell.photoImage.setImage(ImageLocation.getForPath(messageObject35.videoEditedInfo.originalPath), chatMessageCell.currentPhotoFilter, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, messageObject, 0);
                                                                                                                        ImageReceiver imageReceiver9 = chatMessageCell.photoImage;
                                                                                                                        VideoEditedInfo videoEditedInfo3 = chatMessageCell.currentMessageObject.videoEditedInfo;
                                                                                                                        imageReceiver9.setMediaStartEndTime(videoEditedInfo3.startTime / 1000, videoEditedInfo3.endTime / 1000);
                                                                                                                    } else {
                                                                                                                        if (!z51 && !chatMessageCell.currentMessageObject.needDrawBluredPreview()) {
                                                                                                                            chatMessageCell.photoImage.setCrossfadeWithOldImage(true);
                                                                                                                            chatMessageCell.photoImage.setCrossfadeDuration(250);
                                                                                                                        }
                                                                                                                        chatMessageCell.photoImage.setImage(ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, messageObject, i280);
                                                                                                                    }
                                                                                                                } else if (messageObject17.videoEditedInfo != null && i281 == 5 && !chatMessageCell.currentMessageObject.needDrawBluredPreview()) {
                                                                                                                    chatMessageCell.photoImage.setImage(ImageLocation.getForPath(messageObject17.videoEditedInfo.originalPath), chatMessageCell.currentPhotoFilter, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, messageObject, i280);
                                                                                                                    ImageReceiver imageReceiver10 = chatMessageCell.photoImage;
                                                                                                                    VideoEditedInfo videoEditedInfo4 = chatMessageCell.currentMessageObject.videoEditedInfo;
                                                                                                                    imageReceiver10.setMediaStartEndTime(videoEditedInfo4.startTime / 1000, videoEditedInfo4.endTime / 1000);
                                                                                                                } else {
                                                                                                                    if (!z51 && !chatMessageCell.currentMessageObject.needDrawBluredPreview()) {
                                                                                                                        chatMessageCell.photoImage.setCrossfadeWithOldImage(true);
                                                                                                                        chatMessageCell.photoImage.setCrossfadeDuration(250);
                                                                                                                    }
                                                                                                                    chatMessageCell.photoImage.setImage(ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilter, ImageLocation.getForObject(chatMessageCell.currentPhotoObjectThumb, chatMessageCell.photoParentObject), chatMessageCell.currentPhotoFilterThumb, chatMessageCell.currentPhotoObjectThumbStripped, 0L, null, messageObject, i280);
                                                                                                                }
                                                                                                            }
                                                                                                            messageObject6 = messageObject;
                                                                                                            i = 4;
                                                                                                            i26 = 1;
                                                                                                            f4 = 1.0f;
                                                                                                        }
                                                                                                        z24 = false;
                                                                                                        chatMessageCell.autoPlayingMedia = z24;
                                                                                                        if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                                        }
                                                                                                        if (!chatMessageCell.autoPlayingMedia) {
                                                                                                        }
                                                                                                        messageObject6 = messageObject;
                                                                                                        i = 4;
                                                                                                        i26 = 1;
                                                                                                        f4 = 1.0f;
                                                                                                    } else {
                                                                                                        chatMessageCell.autoPlayingMedia = true;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                            }
                                                                                            if (!chatMessageCell.autoPlayingMedia) {
                                                                                            }
                                                                                            messageObject6 = messageObject;
                                                                                            i = 4;
                                                                                            i26 = 1;
                                                                                            f4 = 1.0f;
                                                                                        }
                                                                                    }
                                                                                    if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                    }
                                                                                    if (!chatMessageCell.autoPlayingMedia) {
                                                                                    }
                                                                                    messageObject6 = messageObject;
                                                                                    i = 4;
                                                                                    i26 = 1;
                                                                                    f4 = 1.0f;
                                                                                }
                                                                                if (!shouldDrawTimeOnMedia() && (max12 + AndroidUtilities.dp(2.0f)) - chatMessageCell.captionLayout.lastLineWidth < getExtraTimeX() + dp11) {
                                                                                    i75 += AndroidUtilities.dp(14.0f);
                                                                                    chatMessageCell.addedCaptionHeight += AndroidUtilities.dp(14.0f);
                                                                                    i32 = 1;
                                                                                    i76 = chatMessageCell.highlightCaptionToSetStart;
                                                                                    if (i76 >= 0) {
                                                                                        chatMessageCell.highlight(i76, chatMessageCell.highlightCaptionToSetEnd, textLayoutBlocks4.textLayoutBlocks);
                                                                                    }
                                                                                    chatMessageCell.highlightCaptionToSetEnd = -1;
                                                                                    chatMessageCell.highlightCaptionToSetStart = -1;
                                                                                    if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                                                    }
                                                                                    i31 = i75;
                                                                                    measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                                                    if (chatMessageCell.currentMessagesGroup == null) {
                                                                                        int dp632 = AndroidUtilities.dp(8.0f) + measureText;
                                                                                        chatMessageCell.backgroundWidth = dp632;
                                                                                        if (!chatMessageCell.mediaBackground) {
                                                                                        }
                                                                                        i28 = measureText;
                                                                                    }
                                                                                    if (z22) {
                                                                                        i28 = chatMessageCell.captionWidth + AndroidUtilities.dp(10.0f);
                                                                                        int dp642 = AndroidUtilities.dp(8.0f) + i28;
                                                                                        chatMessageCell.backgroundWidth = dp642;
                                                                                        if (!chatMessageCell.mediaBackground) {
                                                                                        }
                                                                                    }
                                                                                    if (z3) {
                                                                                        String format72 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                                        if (!messageObject.needDrawBluredPreview()) {
                                                                                            if (ImageLocation.getForObject(chatMessageCell.currentPhotoObject, chatMessageCell.photoParentObject) == null) {
                                                                                            }
                                                                                            int i2782 = messageObject17.type;
                                                                                            if (i2782 == 3) {
                                                                                                tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                                                if (tLRPC$PhotoSize3 == null) {
                                                                                                    i77 = -1;
                                                                                                    tLRPC$PhotoSize3.size = -1;
                                                                                                    tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                                                    if (tLRPC$PhotoSize4 != null) {
                                                                                                        tLRPC$PhotoSize4.size = i77;
                                                                                                    }
                                                                                                    if (SharedConfig.isAutoplayVideo()) {
                                                                                                    }
                                                                                                    if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                                    }
                                                                                                    if (!chatMessageCell.autoPlayingMedia) {
                                                                                                    }
                                                                                                    messageObject6 = messageObject;
                                                                                                    i = 4;
                                                                                                    i26 = 1;
                                                                                                    f4 = 1.0f;
                                                                                                }
                                                                                                i77 = -1;
                                                                                                tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                                                if (tLRPC$PhotoSize4 != null) {
                                                                                                }
                                                                                                if (SharedConfig.isAutoplayVideo()) {
                                                                                                }
                                                                                                if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                                }
                                                                                                if (!chatMessageCell.autoPlayingMedia) {
                                                                                                }
                                                                                                messageObject6 = messageObject;
                                                                                                i = 4;
                                                                                                i26 = 1;
                                                                                                f4 = 1.0f;
                                                                                            }
                                                                                            tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                                            if (tLRPC$PhotoSize3 == null) {
                                                                                            }
                                                                                            i77 = -1;
                                                                                            tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                                            if (tLRPC$PhotoSize4 != null) {
                                                                                            }
                                                                                            if (SharedConfig.isAutoplayVideo()) {
                                                                                            }
                                                                                            if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                            }
                                                                                            if (!chatMessageCell.autoPlayingMedia) {
                                                                                            }
                                                                                            messageObject6 = messageObject;
                                                                                            i = 4;
                                                                                            i26 = 1;
                                                                                            f4 = 1.0f;
                                                                                        }
                                                                                        if (messageObject.needDrawBluredPreview()) {
                                                                                        }
                                                                                        int i27822 = messageObject17.type;
                                                                                        if (i27822 == 3) {
                                                                                        }
                                                                                        tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                                        if (tLRPC$PhotoSize3 == null) {
                                                                                        }
                                                                                        i77 = -1;
                                                                                        tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                                        if (tLRPC$PhotoSize4 != null) {
                                                                                        }
                                                                                        if (SharedConfig.isAutoplayVideo()) {
                                                                                        }
                                                                                        if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                        }
                                                                                        if (!chatMessageCell.autoPlayingMedia) {
                                                                                        }
                                                                                        messageObject6 = messageObject;
                                                                                        i = 4;
                                                                                        i26 = 1;
                                                                                        f4 = 1.0f;
                                                                                    }
                                                                                    String format62 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                                    chatMessageCell.currentPhotoFilterThumb = format62;
                                                                                    chatMessageCell.currentPhotoFilter = format62;
                                                                                    arrayList3 = messageObject17.photoThumbs;
                                                                                    if (arrayList3 != null) {
                                                                                        if (messageObject.needDrawBluredPreview()) {
                                                                                        }
                                                                                        int i278222 = messageObject17.type;
                                                                                        if (i278222 == 3) {
                                                                                        }
                                                                                        tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                                        if (tLRPC$PhotoSize3 == null) {
                                                                                        }
                                                                                        i77 = -1;
                                                                                        tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                                        if (tLRPC$PhotoSize4 != null) {
                                                                                        }
                                                                                        if (SharedConfig.isAutoplayVideo()) {
                                                                                        }
                                                                                        if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                        }
                                                                                        if (!chatMessageCell.autoPlayingMedia) {
                                                                                        }
                                                                                        messageObject6 = messageObject;
                                                                                        i = 4;
                                                                                        i26 = 1;
                                                                                        f4 = 1.0f;
                                                                                    }
                                                                                    if (messageObject.needDrawBluredPreview()) {
                                                                                    }
                                                                                    int i2782222 = messageObject17.type;
                                                                                    if (i2782222 == 3) {
                                                                                    }
                                                                                    tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                                    if (tLRPC$PhotoSize3 == null) {
                                                                                    }
                                                                                    i77 = -1;
                                                                                    tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                                    if (tLRPC$PhotoSize4 != null) {
                                                                                    }
                                                                                    if (SharedConfig.isAutoplayVideo()) {
                                                                                    }
                                                                                    if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                    }
                                                                                    if (!chatMessageCell.autoPlayingMedia) {
                                                                                    }
                                                                                    messageObject6 = messageObject;
                                                                                    i = 4;
                                                                                    i26 = 1;
                                                                                    f4 = 1.0f;
                                                                                }
                                                                                i32 = 0;
                                                                                i76 = chatMessageCell.highlightCaptionToSetStart;
                                                                                if (i76 >= 0) {
                                                                                }
                                                                                chatMessageCell.highlightCaptionToSetEnd = -1;
                                                                                chatMessageCell.highlightCaptionToSetStart = -1;
                                                                                if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                                                }
                                                                                i31 = i75;
                                                                                measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                                                if (chatMessageCell.currentMessagesGroup == null) {
                                                                                }
                                                                                if (z22) {
                                                                                }
                                                                                if (z3) {
                                                                                }
                                                                                String format622 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                                chatMessageCell.currentPhotoFilterThumb = format622;
                                                                                chatMessageCell.currentPhotoFilter = format622;
                                                                                arrayList3 = messageObject17.photoThumbs;
                                                                                if (arrayList3 != null) {
                                                                                }
                                                                                if (messageObject.needDrawBluredPreview()) {
                                                                                }
                                                                                int i27822222 = messageObject17.type;
                                                                                if (i27822222 == 3) {
                                                                                }
                                                                                tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                                if (tLRPC$PhotoSize3 == null) {
                                                                                }
                                                                                i77 = -1;
                                                                                tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                                if (tLRPC$PhotoSize4 != null) {
                                                                                }
                                                                                if (SharedConfig.isAutoplayVideo()) {
                                                                                }
                                                                                if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                }
                                                                                if (!chatMessageCell.autoPlayingMedia) {
                                                                                }
                                                                                messageObject6 = messageObject;
                                                                                i = 4;
                                                                                i26 = 1;
                                                                                f4 = 1.0f;
                                                                            }
                                                                            chatMessageCell.captionHeight += AndroidUtilities.dp(14.0f);
                                                                            chatMessageCell.addedCaptionHeight += AndroidUtilities.dp(14.0f);
                                                                            groupedMessagePosition11 = chatMessageCell.currentPosition;
                                                                            if (groupedMessagePosition11 != null) {
                                                                                chatMessageCell.captionLayout = null;
                                                                            }
                                                                            i75 = 0 + chatMessageCell.addedCaptionHeight;
                                                                            int max122 = Math.max(chatMessageCell.captionWidth, i28 - AndroidUtilities.dp(10.0f));
                                                                            reactionsLayoutInBubble4 = chatMessageCell.reactionsLayoutInBubble;
                                                                            if (!reactionsLayoutInBubble4.isEmpty) {
                                                                                i32 = 0;
                                                                                i76 = chatMessageCell.highlightCaptionToSetStart;
                                                                                if (i76 >= 0) {
                                                                                }
                                                                                chatMessageCell.highlightCaptionToSetEnd = -1;
                                                                                chatMessageCell.highlightCaptionToSetStart = -1;
                                                                                if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                                                }
                                                                                i31 = i75;
                                                                                measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                                                if (chatMessageCell.currentMessagesGroup == null) {
                                                                                }
                                                                                if (z22) {
                                                                                }
                                                                                if (z3) {
                                                                                }
                                                                                String format6222 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                                chatMessageCell.currentPhotoFilterThumb = format6222;
                                                                                chatMessageCell.currentPhotoFilter = format6222;
                                                                                arrayList3 = messageObject17.photoThumbs;
                                                                                if (arrayList3 != null) {
                                                                                }
                                                                                if (messageObject.needDrawBluredPreview()) {
                                                                                }
                                                                                int i278222222 = messageObject17.type;
                                                                                if (i278222222 == 3) {
                                                                                }
                                                                                tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                                if (tLRPC$PhotoSize3 == null) {
                                                                                }
                                                                                i77 = -1;
                                                                                tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                                if (tLRPC$PhotoSize4 != null) {
                                                                                }
                                                                                if (SharedConfig.isAutoplayVideo()) {
                                                                                }
                                                                                if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                }
                                                                                if (!chatMessageCell.autoPlayingMedia) {
                                                                                }
                                                                                messageObject6 = messageObject;
                                                                                i = 4;
                                                                                i26 = 1;
                                                                                f4 = 1.0f;
                                                                            }
                                                                            if (!shouldDrawTimeOnMedia()) {
                                                                                i75 += AndroidUtilities.dp(14.0f);
                                                                                chatMessageCell.addedCaptionHeight += AndroidUtilities.dp(14.0f);
                                                                                i32 = 1;
                                                                                i76 = chatMessageCell.highlightCaptionToSetStart;
                                                                                if (i76 >= 0) {
                                                                                }
                                                                                chatMessageCell.highlightCaptionToSetEnd = -1;
                                                                                chatMessageCell.highlightCaptionToSetStart = -1;
                                                                                if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                                                }
                                                                                i31 = i75;
                                                                                measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                                                if (chatMessageCell.currentMessagesGroup == null) {
                                                                                }
                                                                                if (z22) {
                                                                                }
                                                                                if (z3) {
                                                                                }
                                                                                String format62222 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                                chatMessageCell.currentPhotoFilterThumb = format62222;
                                                                                chatMessageCell.currentPhotoFilter = format62222;
                                                                                arrayList3 = messageObject17.photoThumbs;
                                                                                if (arrayList3 != null) {
                                                                                }
                                                                                if (messageObject.needDrawBluredPreview()) {
                                                                                }
                                                                                int i2782222222 = messageObject17.type;
                                                                                if (i2782222222 == 3) {
                                                                                }
                                                                                tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                                if (tLRPC$PhotoSize3 == null) {
                                                                                }
                                                                                i77 = -1;
                                                                                tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                                if (tLRPC$PhotoSize4 != null) {
                                                                                }
                                                                                if (SharedConfig.isAutoplayVideo()) {
                                                                                }
                                                                                if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                                }
                                                                                if (!chatMessageCell.autoPlayingMedia) {
                                                                                }
                                                                                messageObject6 = messageObject;
                                                                                i = 4;
                                                                                i26 = 1;
                                                                                f4 = 1.0f;
                                                                            }
                                                                            i32 = 0;
                                                                            i76 = chatMessageCell.highlightCaptionToSetStart;
                                                                            if (i76 >= 0) {
                                                                            }
                                                                            chatMessageCell.highlightCaptionToSetEnd = -1;
                                                                            chatMessageCell.highlightCaptionToSetStart = -1;
                                                                            if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                                            }
                                                                            i31 = i75;
                                                                            measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                                            if (chatMessageCell.currentMessagesGroup == null) {
                                                                            }
                                                                            if (z22) {
                                                                            }
                                                                            if (z3) {
                                                                            }
                                                                            String format622222 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                            chatMessageCell.currentPhotoFilterThumb = format622222;
                                                                            chatMessageCell.currentPhotoFilter = format622222;
                                                                            arrayList3 = messageObject17.photoThumbs;
                                                                            if (arrayList3 != null) {
                                                                            }
                                                                            if (messageObject.needDrawBluredPreview()) {
                                                                            }
                                                                            int i27822222222 = messageObject17.type;
                                                                            if (i27822222222 == 3) {
                                                                            }
                                                                            tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                            if (tLRPC$PhotoSize3 == null) {
                                                                            }
                                                                            i77 = -1;
                                                                            tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                            if (tLRPC$PhotoSize4 != null) {
                                                                            }
                                                                            if (SharedConfig.isAutoplayVideo()) {
                                                                            }
                                                                            if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                            }
                                                                            if (!chatMessageCell.autoPlayingMedia) {
                                                                            }
                                                                            messageObject6 = messageObject;
                                                                            i = 4;
                                                                            i26 = 1;
                                                                            f4 = 1.0f;
                                                                        }
                                                                        i32 = 0;
                                                                        i75 = 0;
                                                                        i76 = chatMessageCell.highlightCaptionToSetStart;
                                                                        if (i76 >= 0) {
                                                                        }
                                                                        chatMessageCell.highlightCaptionToSetEnd = -1;
                                                                        chatMessageCell.highlightCaptionToSetStart = -1;
                                                                        if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                                        }
                                                                        i31 = i75;
                                                                        measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                                        if (chatMessageCell.currentMessagesGroup == null) {
                                                                        }
                                                                        if (z22) {
                                                                        }
                                                                        if (z3) {
                                                                        }
                                                                        String format6222222 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                        chatMessageCell.currentPhotoFilterThumb = format6222222;
                                                                        chatMessageCell.currentPhotoFilter = format6222222;
                                                                        arrayList3 = messageObject17.photoThumbs;
                                                                        if (arrayList3 != null) {
                                                                        }
                                                                        if (messageObject.needDrawBluredPreview()) {
                                                                        }
                                                                        int i278222222222 = messageObject17.type;
                                                                        if (i278222222222 == 3) {
                                                                        }
                                                                        tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                        if (tLRPC$PhotoSize3 == null) {
                                                                        }
                                                                        i77 = -1;
                                                                        tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                        if (tLRPC$PhotoSize4 != null) {
                                                                        }
                                                                        if (SharedConfig.isAutoplayVideo()) {
                                                                        }
                                                                        if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                        }
                                                                        if (!chatMessageCell.autoPlayingMedia) {
                                                                        }
                                                                        messageObject6 = messageObject;
                                                                        i = 4;
                                                                        i26 = 1;
                                                                        f4 = 1.0f;
                                                                    }
                                                                    z20 = false;
                                                                    bitmapDrawable = chatMessageCell.currentMessageObject.strippedThumb;
                                                                    if (bitmapDrawable != null) {
                                                                    }
                                                                    if (messageObject17.type == i2) {
                                                                    }
                                                                    tLRPC$PhotoSize = chatMessageCell.currentPhotoObject;
                                                                    if (tLRPC$PhotoSize != null) {
                                                                        chatMessageCell.currentPhotoObject = null;
                                                                    }
                                                                    tLRPC$PhotoSize2 = chatMessageCell.currentPhotoObject;
                                                                    if (tLRPC$PhotoSize2 != null) {
                                                                        i80 = messageObject17.type;
                                                                        if (i80 == z49) {
                                                                            chatMessageCell.currentPhotoObject = null;
                                                                        }
                                                                        chatMessageCell.currentPhotoObjectThumb = null;
                                                                        chatMessageCell.currentPhotoObjectThumbStripped = null;
                                                                    }
                                                                    if (z20) {
                                                                        chatMessageCell.photoImage.setNeedsQualityThumb(z49);
                                                                        chatMessageCell.photoImage.setShouldGenerateQualityThumb(z49);
                                                                    }
                                                                    if (chatMessageCell.currentMessagesGroup == null) {
                                                                        chatMessageCell.mediaBackground = false;
                                                                    }
                                                                    if (i28 != 0) {
                                                                    }
                                                                    while (i58 < document.attributes.size()) {
                                                                    }
                                                                    dp56 = i29;
                                                                    i29 = dp56;
                                                                    if (i28 != 0) {
                                                                    }
                                                                    i29 = AndroidUtilities.dp(150.0f);
                                                                    i28 = i29;
                                                                    if (messageObject17.type == 3) {
                                                                        i28 = chatMessageCell.infoWidth + AndroidUtilities.dp(40.0f);
                                                                    }
                                                                    i59 = messageObject17.type;
                                                                    if (i59 != 23) {
                                                                    }
                                                                    double d92 = AndroidUtilities.displaySize.x;
                                                                    Double.isNaN(d92);
                                                                    i28 = (int) Math.min(d92 * 0.53d, AndroidUtilities.dp(300.0f));
                                                                    i29 = (int) ((i28 * 16.0f) / 9.0f);
                                                                    if (chatMessageCell.commentLayout != null) {
                                                                        i28 = chatMessageCell.totalCommentWidth + AndroidUtilities.dp(10.0f);
                                                                    }
                                                                    if (chatMessageCell.currentMessagesGroup != null) {
                                                                    }
                                                                    if (messageObject17.type == i2) {
                                                                    }
                                                                    measureTime(messageObject);
                                                                    dp11 = chatMessageCell.timeWidth + AndroidUtilities.dp((SharedConfig.bubbleRadius < 10 ? 18 : 22) + (!messageObject.isOutOwner() ? 0 : 20));
                                                                    if (i28 < dp11) {
                                                                    }
                                                                    if (messageObject.isRoundVideo()) {
                                                                    }
                                                                    if (chatMessageCell.currentMessagesGroup != null) {
                                                                    }
                                                                    if (chatMessageCell.currentCaption != null) {
                                                                    }
                                                                    i32 = 0;
                                                                    i75 = 0;
                                                                    i76 = chatMessageCell.highlightCaptionToSetStart;
                                                                    if (i76 >= 0) {
                                                                    }
                                                                    chatMessageCell.highlightCaptionToSetEnd = -1;
                                                                    chatMessageCell.highlightCaptionToSetStart = -1;
                                                                    if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                                    }
                                                                    i31 = i75;
                                                                    measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                                    if (chatMessageCell.currentMessagesGroup == null) {
                                                                    }
                                                                    if (z22) {
                                                                    }
                                                                    if (z3) {
                                                                    }
                                                                    String format62222222 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                    chatMessageCell.currentPhotoFilterThumb = format62222222;
                                                                    chatMessageCell.currentPhotoFilter = format62222222;
                                                                    arrayList3 = messageObject17.photoThumbs;
                                                                    if (arrayList3 != null) {
                                                                    }
                                                                    if (messageObject.needDrawBluredPreview()) {
                                                                    }
                                                                    int i2782222222222 = messageObject17.type;
                                                                    if (i2782222222222 == 3) {
                                                                    }
                                                                    tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                    if (tLRPC$PhotoSize3 == null) {
                                                                    }
                                                                    i77 = -1;
                                                                    tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                    if (tLRPC$PhotoSize4 != null) {
                                                                    }
                                                                    if (SharedConfig.isAutoplayVideo()) {
                                                                    }
                                                                    if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                    }
                                                                    if (!chatMessageCell.autoPlayingMedia) {
                                                                    }
                                                                    messageObject6 = messageObject;
                                                                    i = 4;
                                                                    i26 = 1;
                                                                    f4 = 1.0f;
                                                                } else {
                                                                    minTabletSide7 = Math.min(getParentWidth(), AndroidUtilities.displaySize.y);
                                                                }
                                                            }
                                                            i56 = (int) (minTabletSide7 * 0.7f);
                                                        }
                                                        z19 = false;
                                                        int dp562 = AndroidUtilities.dp(100.0f) + i56;
                                                        if (z19) {
                                                        }
                                                        i57 = messageObject17.type;
                                                        if (i57 == z49) {
                                                            if (i57 == 3) {
                                                                if (i57 == i2) {
                                                                }
                                                                z20 = false;
                                                                bitmapDrawable = chatMessageCell.currentMessageObject.strippedThumb;
                                                                if (bitmapDrawable != null) {
                                                                }
                                                                if (messageObject17.type == i2) {
                                                                }
                                                                tLRPC$PhotoSize = chatMessageCell.currentPhotoObject;
                                                                if (tLRPC$PhotoSize != null) {
                                                                }
                                                                tLRPC$PhotoSize2 = chatMessageCell.currentPhotoObject;
                                                                if (tLRPC$PhotoSize2 != null) {
                                                                }
                                                                if (z20) {
                                                                }
                                                                if (chatMessageCell.currentMessagesGroup == null) {
                                                                }
                                                                if (i28 != 0) {
                                                                }
                                                                while (i58 < document.attributes.size()) {
                                                                }
                                                                dp562 = i29;
                                                                i29 = dp562;
                                                                if (i28 != 0) {
                                                                }
                                                                i29 = AndroidUtilities.dp(150.0f);
                                                                i28 = i29;
                                                                if (messageObject17.type == 3) {
                                                                }
                                                                i59 = messageObject17.type;
                                                                if (i59 != 23) {
                                                                }
                                                                double d922 = AndroidUtilities.displaySize.x;
                                                                Double.isNaN(d922);
                                                                i28 = (int) Math.min(d922 * 0.53d, AndroidUtilities.dp(300.0f));
                                                                i29 = (int) ((i28 * 16.0f) / 9.0f);
                                                                if (chatMessageCell.commentLayout != null) {
                                                                }
                                                                if (chatMessageCell.currentMessagesGroup != null) {
                                                                }
                                                                if (messageObject17.type == i2) {
                                                                }
                                                                measureTime(messageObject);
                                                                dp11 = chatMessageCell.timeWidth + AndroidUtilities.dp((SharedConfig.bubbleRadius < 10 ? 18 : 22) + (!messageObject.isOutOwner() ? 0 : 20));
                                                                if (i28 < dp11) {
                                                                }
                                                                if (messageObject.isRoundVideo()) {
                                                                }
                                                                if (chatMessageCell.currentMessagesGroup != null) {
                                                                }
                                                                if (chatMessageCell.currentCaption != null) {
                                                                }
                                                                i32 = 0;
                                                                i75 = 0;
                                                                i76 = chatMessageCell.highlightCaptionToSetStart;
                                                                if (i76 >= 0) {
                                                                }
                                                                chatMessageCell.highlightCaptionToSetEnd = -1;
                                                                chatMessageCell.highlightCaptionToSetStart = -1;
                                                                if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                                }
                                                                i31 = i75;
                                                                measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                                if (chatMessageCell.currentMessagesGroup == null) {
                                                                }
                                                                if (z22) {
                                                                }
                                                                if (z3) {
                                                                }
                                                                String format622222222 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                                chatMessageCell.currentPhotoFilterThumb = format622222222;
                                                                chatMessageCell.currentPhotoFilter = format622222222;
                                                                arrayList3 = messageObject17.photoThumbs;
                                                                if (arrayList3 != null) {
                                                                }
                                                                if (messageObject.needDrawBluredPreview()) {
                                                                }
                                                                int i27822222222222 = messageObject17.type;
                                                                if (i27822222222222 == 3) {
                                                                }
                                                                tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                                if (tLRPC$PhotoSize3 == null) {
                                                                }
                                                                i77 = -1;
                                                                tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                                if (tLRPC$PhotoSize4 != null) {
                                                                }
                                                                if (SharedConfig.isAutoplayVideo()) {
                                                                }
                                                                if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                                }
                                                                if (!chatMessageCell.autoPlayingMedia) {
                                                                }
                                                                messageObject6 = messageObject;
                                                                i = 4;
                                                                i26 = 1;
                                                                f4 = 1.0f;
                                                            }
                                                            chatMessageCell.createDocumentLayout(0, messageObject17);
                                                            chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(messageObject17.photoThumbs, 40);
                                                            updateSecretTimeText(messageObject);
                                                            z20 = true;
                                                            bitmapDrawable = chatMessageCell.currentMessageObject.strippedThumb;
                                                            if (bitmapDrawable != null) {
                                                            }
                                                            if (messageObject17.type == i2) {
                                                            }
                                                            tLRPC$PhotoSize = chatMessageCell.currentPhotoObject;
                                                            if (tLRPC$PhotoSize != null) {
                                                            }
                                                            tLRPC$PhotoSize2 = chatMessageCell.currentPhotoObject;
                                                            if (tLRPC$PhotoSize2 != null) {
                                                            }
                                                            if (z20) {
                                                            }
                                                            if (chatMessageCell.currentMessagesGroup == null) {
                                                            }
                                                            if (i28 != 0) {
                                                            }
                                                            while (i58 < document.attributes.size()) {
                                                            }
                                                            dp562 = i29;
                                                            i29 = dp562;
                                                            if (i28 != 0) {
                                                            }
                                                            i29 = AndroidUtilities.dp(150.0f);
                                                            i28 = i29;
                                                            if (messageObject17.type == 3) {
                                                            }
                                                            i59 = messageObject17.type;
                                                            if (i59 != 23) {
                                                            }
                                                            double d9222 = AndroidUtilities.displaySize.x;
                                                            Double.isNaN(d9222);
                                                            i28 = (int) Math.min(d9222 * 0.53d, AndroidUtilities.dp(300.0f));
                                                            i29 = (int) ((i28 * 16.0f) / 9.0f);
                                                            if (chatMessageCell.commentLayout != null) {
                                                            }
                                                            if (chatMessageCell.currentMessagesGroup != null) {
                                                            }
                                                            if (messageObject17.type == i2) {
                                                            }
                                                            measureTime(messageObject);
                                                            dp11 = chatMessageCell.timeWidth + AndroidUtilities.dp((SharedConfig.bubbleRadius < 10 ? 18 : 22) + (!messageObject.isOutOwner() ? 0 : 20));
                                                            if (i28 < dp11) {
                                                            }
                                                            if (messageObject.isRoundVideo()) {
                                                            }
                                                            if (chatMessageCell.currentMessagesGroup != null) {
                                                            }
                                                            if (chatMessageCell.currentCaption != null) {
                                                            }
                                                            i32 = 0;
                                                            i75 = 0;
                                                            i76 = chatMessageCell.highlightCaptionToSetStart;
                                                            if (i76 >= 0) {
                                                            }
                                                            chatMessageCell.highlightCaptionToSetEnd = -1;
                                                            chatMessageCell.highlightCaptionToSetStart = -1;
                                                            if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                            }
                                                            i31 = i75;
                                                            measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                            if (chatMessageCell.currentMessagesGroup == null) {
                                                            }
                                                            if (z22) {
                                                            }
                                                            if (z3) {
                                                            }
                                                            String format6222222222 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                            chatMessageCell.currentPhotoFilterThumb = format6222222222;
                                                            chatMessageCell.currentPhotoFilter = format6222222222;
                                                            arrayList3 = messageObject17.photoThumbs;
                                                            if (arrayList3 != null) {
                                                            }
                                                            if (messageObject.needDrawBluredPreview()) {
                                                            }
                                                            int i278222222222222 = messageObject17.type;
                                                            if (i278222222222222 == 3) {
                                                            }
                                                            tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                            if (tLRPC$PhotoSize3 == null) {
                                                            }
                                                            i77 = -1;
                                                            tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                            if (tLRPC$PhotoSize4 != null) {
                                                            }
                                                            if (SharedConfig.isAutoplayVideo()) {
                                                            }
                                                            if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                            }
                                                            if (!chatMessageCell.autoPlayingMedia) {
                                                            }
                                                            messageObject6 = messageObject;
                                                            i = 4;
                                                            i26 = 1;
                                                            f4 = 1.0f;
                                                        }
                                                        updateSecretTimeText(messageObject);
                                                        chatMessageCell.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(messageObject17.photoThumbs, 40);
                                                        z20 = false;
                                                        bitmapDrawable = chatMessageCell.currentMessageObject.strippedThumb;
                                                        if (bitmapDrawable != null) {
                                                        }
                                                        if (messageObject17.type == i2) {
                                                        }
                                                        tLRPC$PhotoSize = chatMessageCell.currentPhotoObject;
                                                        if (tLRPC$PhotoSize != null) {
                                                        }
                                                        tLRPC$PhotoSize2 = chatMessageCell.currentPhotoObject;
                                                        if (tLRPC$PhotoSize2 != null) {
                                                        }
                                                        if (z20) {
                                                        }
                                                        if (chatMessageCell.currentMessagesGroup == null) {
                                                        }
                                                        if (i28 != 0) {
                                                        }
                                                        while (i58 < document.attributes.size()) {
                                                        }
                                                        dp562 = i29;
                                                        i29 = dp562;
                                                        if (i28 != 0) {
                                                        }
                                                        i29 = AndroidUtilities.dp(150.0f);
                                                        i28 = i29;
                                                        if (messageObject17.type == 3) {
                                                        }
                                                        i59 = messageObject17.type;
                                                        if (i59 != 23) {
                                                        }
                                                        double d92222 = AndroidUtilities.displaySize.x;
                                                        Double.isNaN(d92222);
                                                        i28 = (int) Math.min(d92222 * 0.53d, AndroidUtilities.dp(300.0f));
                                                        i29 = (int) ((i28 * 16.0f) / 9.0f);
                                                        if (chatMessageCell.commentLayout != null) {
                                                        }
                                                        if (chatMessageCell.currentMessagesGroup != null) {
                                                        }
                                                        if (messageObject17.type == i2) {
                                                        }
                                                        measureTime(messageObject);
                                                        dp11 = chatMessageCell.timeWidth + AndroidUtilities.dp((SharedConfig.bubbleRadius < 10 ? 18 : 22) + (!messageObject.isOutOwner() ? 0 : 20));
                                                        if (i28 < dp11) {
                                                        }
                                                        if (messageObject.isRoundVideo()) {
                                                        }
                                                        if (chatMessageCell.currentMessagesGroup != null) {
                                                        }
                                                        if (chatMessageCell.currentCaption != null) {
                                                        }
                                                        i32 = 0;
                                                        i75 = 0;
                                                        i76 = chatMessageCell.highlightCaptionToSetStart;
                                                        if (i76 >= 0) {
                                                        }
                                                        chatMessageCell.highlightCaptionToSetEnd = -1;
                                                        chatMessageCell.highlightCaptionToSetStart = -1;
                                                        if (!chatMessageCell.reactionsLayoutInBubble.isSmall) {
                                                        }
                                                        i31 = i75;
                                                        measureText = (int) (Theme.chat_infoPaint.measureText("100%") + AndroidUtilities.dp(100.0f));
                                                        if (chatMessageCell.currentMessagesGroup == null) {
                                                        }
                                                        if (z22) {
                                                        }
                                                        if (z3) {
                                                        }
                                                        String format62222222222 = String.format(Locale.US, "%d_%d", Integer.valueOf((int) (i71 / AndroidUtilities.density)), Integer.valueOf((int) (i29 / AndroidUtilities.density)));
                                                        chatMessageCell.currentPhotoFilterThumb = format62222222222;
                                                        chatMessageCell.currentPhotoFilter = format62222222222;
                                                        arrayList3 = messageObject17.photoThumbs;
                                                        if (arrayList3 != null) {
                                                        }
                                                        if (messageObject.needDrawBluredPreview()) {
                                                        }
                                                        int i2782222222222222 = messageObject17.type;
                                                        if (i2782222222222222 == 3) {
                                                        }
                                                        tLRPC$PhotoSize3 = chatMessageCell.currentPhotoObject;
                                                        if (tLRPC$PhotoSize3 == null) {
                                                        }
                                                        i77 = -1;
                                                        tLRPC$PhotoSize4 = chatMessageCell.currentPhotoObjectThumb;
                                                        if (tLRPC$PhotoSize4 != null) {
                                                        }
                                                        if (SharedConfig.isAutoplayVideo()) {
                                                        }
                                                        if (chatMessageCell.currentMessageObject.shouldEncryptPhotoOrVideo()) {
                                                        }
                                                        if (!chatMessageCell.autoPlayingMedia) {
                                                        }
                                                        messageObject6 = messageObject;
                                                        i = 4;
                                                        i26 = 1;
                                                        f4 = 1.0f;
                                                    }
                                                    if (chatMessageCell.blurredPhotoImage.getBitmap() == null) {
                                                        spoilerEffect2 = null;
                                                    } else {
                                                        chatMessageCell.blurredPhotoImage.getBitmap().recycle();
                                                        spoilerEffect2 = null;
                                                        chatMessageCell.blurredPhotoImage.setImageBitmap((Bitmap) null);
                                                    }
                                                    if (chatMessageCell.photoImage.getBitmap() != null && !chatMessageCell.photoImage.getBitmap().isRecycled() && chatMessageCell.currentMessageObject.hasMediaSpoilers() && !chatMessageCell.currentMessageObject.isMediaSpoilersRevealed) {
                                                        chatMessageCell.blurredPhotoImage.setImageBitmap(Utilities.stackBlurBitmapMax(chatMessageCell.photoImage.getBitmap(), chatMessageCell.currentMessageObject.isRoundVideo()));
                                                        chatMessageCell.blurredPhotoImage.setColorFilter(getFancyBlurFilter());
                                                    }
                                                    setMessageObjectInternal(messageObject);
                                                    if (chatMessageCell.drawForwardedName && messageObject.needDrawForwarded() && ((groupedMessagePosition6 = chatMessageCell.currentPosition) == null || groupedMessagePosition6.minY == 0)) {
                                                        if (messageObject6.type != 5) {
                                                            chatMessageCell.namesOffset += AndroidUtilities.dp(5.0f);
                                                        }
                                                    } else if (chatMessageCell.drawNameLayout && (messageObject.getReplyMsgId() == 0 || (chatMessageCell.isThreadChat && messageObject.getReplyTopMsgId() == 0))) {
                                                        chatMessageCell.namesOffset += AndroidUtilities.dp(7.0f);
                                                    }
                                                    chatMessageCell.totalHeight = AndroidUtilities.dp(14.0f) + i29 + chatMessageCell.namesOffset + i31;
                                                    if (messageObject.isVoiceTranscriptionOpen()) {
                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(56.0f);
                                                    }
                                                    groupedMessagePosition5 = chatMessageCell.currentPosition;
                                                    if (groupedMessagePosition5 != null) {
                                                        i33 = 8;
                                                    } else {
                                                        i33 = 8;
                                                        if ((groupedMessagePosition5.flags & 8) == 0 && !chatMessageCell.currentMessageObject.isDocument() && chatMessageCell.currentMessageObject.type != 19) {
                                                            chatMessageCell.totalHeight -= AndroidUtilities.dp(3.0f);
                                                        }
                                                    }
                                                    if (chatMessageCell.currentMessageObject.isDice()) {
                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(21.0f);
                                                        chatMessageCell.additionalTimeOffsetY = AndroidUtilities.dp(21.0f);
                                                    }
                                                    if (chatMessageCell.currentPosition != null && !chatMessageCell.currentMessageObject.isDocument()) {
                                                        i28 += chatMessageCell.getAdditionalWidthForPosition(chatMessageCell.currentPosition);
                                                        if ((chatMessageCell.currentPosition.flags & i) == 0) {
                                                            i34 = 0;
                                                        } else {
                                                            i29 += AndroidUtilities.dp(4.0f);
                                                            i34 = 0 - AndroidUtilities.dp(4.0f);
                                                        }
                                                        if ((chatMessageCell.currentPosition.flags & i33) == 0) {
                                                            i29 += AndroidUtilities.dp(f4);
                                                        }
                                                    } else {
                                                        if (chatMessageCell.currentPosition != null && chatMessageCell.currentMessageObject.isDocument()) {
                                                            i35 = chatMessageCell.currentPosition.flags;
                                                            if ((i35 & 4) == 0 && (i35 & i33) != 0 && !messageObject.isOutOwner() && !chatMessageCell.drawPhotoImage) {
                                                                chatMessageCell.totalHeight -= AndroidUtilities.dp(2.0f);
                                                            }
                                                        }
                                                        i34 = 0;
                                                    }
                                                    if (chatMessageCell.currentMessageObject.type == 19) {
                                                        dp8 = 0;
                                                    } else {
                                                        if (chatMessageCell.drawPinnedTop) {
                                                            chatMessageCell.namesOffset -= AndroidUtilities.dp(chatMessageCell.documentAttachType != i26 ? 1.0f : 2.0f);
                                                        }
                                                        if (chatMessageCell.drawPinnedTop && !messageObject.isOutOwner()) {
                                                            chatMessageCell.totalHeight += AndroidUtilities.dp(chatMessageCell.documentAttachType != i26 ? 0.0f : 2.0f);
                                                        }
                                                        if (chatMessageCell.namesOffset > 0) {
                                                            dp8 = AndroidUtilities.dp(7.0f);
                                                            chatMessageCell.totalHeight -= AndroidUtilities.dp(2.0f);
                                                        } else {
                                                            dp8 = AndroidUtilities.dp(5.0f);
                                                            chatMessageCell.totalHeight -= AndroidUtilities.dp(4.0f);
                                                        }
                                                    }
                                                    if (chatMessageCell.currentPosition != null) {
                                                        MessageObject.GroupedMessages groupedMessages6 = chatMessageCell.currentMessagesGroup;
                                                        if (groupedMessages6.isDocuments && groupedMessages6.messages.size() > i26) {
                                                            if ((chatMessageCell.currentPosition.flags & i) == 0) {
                                                                chatMessageCell.totalHeight -= AndroidUtilities.dp(!chatMessageCell.drawPhotoImage ? 6.0f : 3.0f);
                                                                chatMessageCell.mediaOffsetY -= AndroidUtilities.dp(!chatMessageCell.drawPhotoImage ? 6.0f : 3.0f);
                                                                dp8 -= AndroidUtilities.dp(!chatMessageCell.drawPhotoImage ? 6.0f : 3.0f);
                                                            }
                                                            if ((chatMessageCell.currentPosition.flags & i33) == 0) {
                                                                chatMessageCell.totalHeight -= AndroidUtilities.dp(!chatMessageCell.drawPhotoImage ? 6.0f : 3.0f);
                                                            }
                                                        }
                                                    }
                                                    if (messageObject.isRoundVideo() && messageObject.isVoiceTranscriptionOpen()) {
                                                        chatMessageCell.photoImage.setImageCoords(0.0f, AndroidUtilities.dp(13.0f), AndroidUtilities.dp(44.0f), AndroidUtilities.dp(44.0f));
                                                    } else {
                                                        chatMessageCell.photoImage.setImageCoords(0.0f, dp8 + chatMessageCell.namesOffset + i34, i28, i29);
                                                    }
                                                    if (messageObject.hasMediaSpoilers() && SpoilerEffect2.supports()) {
                                                        if (chatMessageCell.mediaSpoilerEffect2 == null) {
                                                            SpoilerEffect2 spoilerEffect23 = SpoilerEffect2.getInstance(this);
                                                            chatMessageCell.mediaSpoilerEffect2 = spoilerEffect23;
                                                            Integer num = chatMessageCell.mediaSpoilerEffect2Index;
                                                            if (num != null) {
                                                                spoilerEffect23.reassignAttach(chatMessageCell, num.intValue());
                                                            }
                                                        }
                                                    } else {
                                                        spoilerEffect22 = chatMessageCell.mediaSpoilerEffect2;
                                                        if (spoilerEffect22 != null) {
                                                            spoilerEffect22.detach(chatMessageCell);
                                                            chatMessageCell.mediaSpoilerEffect2 = spoilerEffect2;
                                                        }
                                                    }
                                                    invalidate();
                                                    i7 = i32;
                                                    messageObject2 = messageObject6;
                                                    z9 = z17;
                                                    i5 = 3;
                                                    i6 = 20;
                                                    i149 = 2;
                                                }
                                                z17 = true;
                                                if (chatMessageCell.blurredPhotoImage.getBitmap() == null) {
                                                }
                                                if (chatMessageCell.photoImage.getBitmap() != null) {
                                                    chatMessageCell.blurredPhotoImage.setImageBitmap(Utilities.stackBlurBitmapMax(chatMessageCell.photoImage.getBitmap(), chatMessageCell.currentMessageObject.isRoundVideo()));
                                                    chatMessageCell.blurredPhotoImage.setColorFilter(getFancyBlurFilter());
                                                }
                                                setMessageObjectInternal(messageObject);
                                                if (chatMessageCell.drawForwardedName) {
                                                    if (messageObject6.type != 5) {
                                                    }
                                                    chatMessageCell.totalHeight = AndroidUtilities.dp(14.0f) + i29 + chatMessageCell.namesOffset + i31;
                                                    if (messageObject.isVoiceTranscriptionOpen()) {
                                                    }
                                                    groupedMessagePosition5 = chatMessageCell.currentPosition;
                                                    if (groupedMessagePosition5 != null) {
                                                    }
                                                    if (chatMessageCell.currentMessageObject.isDice()) {
                                                    }
                                                    if (chatMessageCell.currentPosition != null) {
                                                        i28 += chatMessageCell.getAdditionalWidthForPosition(chatMessageCell.currentPosition);
                                                        if ((chatMessageCell.currentPosition.flags & i) == 0) {
                                                        }
                                                        if ((chatMessageCell.currentPosition.flags & i33) == 0) {
                                                        }
                                                        if (chatMessageCell.currentMessageObject.type == 19) {
                                                        }
                                                        if (chatMessageCell.currentPosition != null) {
                                                        }
                                                        if (messageObject.isRoundVideo()) {
                                                            chatMessageCell.photoImage.setImageCoords(0.0f, AndroidUtilities.dp(13.0f), AndroidUtilities.dp(44.0f), AndroidUtilities.dp(44.0f));
                                                            if (messageObject.hasMediaSpoilers()) {
                                                                if (chatMessageCell.mediaSpoilerEffect2 == null) {
                                                                }
                                                                invalidate();
                                                                i7 = i32;
                                                                messageObject2 = messageObject6;
                                                                z9 = z17;
                                                                i5 = 3;
                                                                i6 = 20;
                                                                i149 = 2;
                                                            }
                                                            spoilerEffect22 = chatMessageCell.mediaSpoilerEffect2;
                                                            if (spoilerEffect22 != null) {
                                                            }
                                                            invalidate();
                                                            i7 = i32;
                                                            messageObject2 = messageObject6;
                                                            z9 = z17;
                                                            i5 = 3;
                                                            i6 = 20;
                                                            i149 = 2;
                                                        }
                                                        chatMessageCell.photoImage.setImageCoords(0.0f, dp8 + chatMessageCell.namesOffset + i34, i28, i29);
                                                        if (messageObject.hasMediaSpoilers()) {
                                                        }
                                                        spoilerEffect22 = chatMessageCell.mediaSpoilerEffect2;
                                                        if (spoilerEffect22 != null) {
                                                        }
                                                        invalidate();
                                                        i7 = i32;
                                                        messageObject2 = messageObject6;
                                                        z9 = z17;
                                                        i5 = 3;
                                                        i6 = 20;
                                                        i149 = 2;
                                                    }
                                                    if (chatMessageCell.currentPosition != null) {
                                                        i35 = chatMessageCell.currentPosition.flags;
                                                        if ((i35 & 4) == 0) {
                                                            chatMessageCell.totalHeight -= AndroidUtilities.dp(2.0f);
                                                        }
                                                    }
                                                    i34 = 0;
                                                    if (chatMessageCell.currentMessageObject.type == 19) {
                                                    }
                                                    if (chatMessageCell.currentPosition != null) {
                                                    }
                                                    if (messageObject.isRoundVideo()) {
                                                    }
                                                    chatMessageCell.photoImage.setImageCoords(0.0f, dp8 + chatMessageCell.namesOffset + i34, i28, i29);
                                                    if (messageObject.hasMediaSpoilers()) {
                                                    }
                                                    spoilerEffect22 = chatMessageCell.mediaSpoilerEffect2;
                                                    if (spoilerEffect22 != null) {
                                                    }
                                                    invalidate();
                                                    i7 = i32;
                                                    messageObject2 = messageObject6;
                                                    z9 = z17;
                                                    i5 = 3;
                                                    i6 = 20;
                                                    i149 = 2;
                                                }
                                                if (chatMessageCell.drawNameLayout) {
                                                    chatMessageCell.namesOffset += AndroidUtilities.dp(7.0f);
                                                }
                                                chatMessageCell.totalHeight = AndroidUtilities.dp(14.0f) + i29 + chatMessageCell.namesOffset + i31;
                                                if (messageObject.isVoiceTranscriptionOpen()) {
                                                }
                                                groupedMessagePosition5 = chatMessageCell.currentPosition;
                                                if (groupedMessagePosition5 != null) {
                                                }
                                                if (chatMessageCell.currentMessageObject.isDice()) {
                                                }
                                                if (chatMessageCell.currentPosition != null) {
                                                }
                                                if (chatMessageCell.currentPosition != null) {
                                                }
                                                i34 = 0;
                                                if (chatMessageCell.currentMessageObject.type == 19) {
                                                }
                                                if (chatMessageCell.currentPosition != null) {
                                                }
                                                if (messageObject.isRoundVideo()) {
                                                }
                                                chatMessageCell.photoImage.setImageCoords(0.0f, dp8 + chatMessageCell.namesOffset + i34, i28, i29);
                                                if (messageObject.hasMediaSpoilers()) {
                                                }
                                                spoilerEffect22 = chatMessageCell.mediaSpoilerEffect2;
                                                if (spoilerEffect22 != null) {
                                                }
                                                invalidate();
                                                i7 = i32;
                                                messageObject2 = messageObject6;
                                                z9 = z17;
                                                i5 = 3;
                                                i6 = 20;
                                                i149 = 2;
                                            }
                                            f2 = 1.0f;
                                        } else {
                                            messageObject5 = messageObject17;
                                            chatMessageCell.createSelectorDrawable(0);
                                            chatMessageCell.drawName = false;
                                            chatMessageCell.drawForwardedName = false;
                                            chatMessageCell.drawPhotoImage = false;
                                            if (AndroidUtilities.isTablet()) {
                                                chatMessageCell.backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(270.0f));
                                            } else {
                                                chatMessageCell.backgroundWidth = Math.min(getParentWidth() - AndroidUtilities.dp(!z7 ? 50.0f : 102.0f), AndroidUtilities.dp(270.0f));
                                            }
                                            chatMessageCell.availableTimeWidth = chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f);
                                            int maxNameWidth2 = getMaxNameWidth() - AndroidUtilities.dp(50.0f);
                                            if (maxNameWidth2 < 0) {
                                                maxNameWidth2 = AndroidUtilities.dp(10.0f);
                                            }
                                            String format8 = LocaleController.getInstance().formatterDay.format(messageObject5.messageOwner.date * 1000);
                                            TLRPC$TL_messageActionPhoneCall tLRPC$TL_messageActionPhoneCall = (TLRPC$TL_messageActionPhoneCall) messageObject5.messageOwner.action;
                                            boolean z72 = tLRPC$TL_messageActionPhoneCall.reason instanceof TLRPC$TL_phoneCallDiscardReasonMissed;
                                            if (messageObject.isOutOwner()) {
                                                if (z72) {
                                                    if (tLRPC$TL_messageActionPhoneCall.video) {
                                                        string2 = LocaleController.getString("CallMessageVideoOutgoingMissed", R.string.CallMessageVideoOutgoingMissed);
                                                    } else {
                                                        string2 = LocaleController.getString("CallMessageOutgoingMissed", R.string.CallMessageOutgoingMissed);
                                                    }
                                                } else if (tLRPC$TL_messageActionPhoneCall.video) {
                                                    string2 = LocaleController.getString("CallMessageVideoOutgoing", R.string.CallMessageVideoOutgoing);
                                                } else {
                                                    string2 = LocaleController.getString("CallMessageOutgoing", R.string.CallMessageOutgoing);
                                                }
                                            } else if (z72) {
                                                if (tLRPC$TL_messageActionPhoneCall.video) {
                                                    string2 = LocaleController.getString("CallMessageVideoIncomingMissed", R.string.CallMessageVideoIncomingMissed);
                                                } else {
                                                    string2 = LocaleController.getString("CallMessageIncomingMissed", R.string.CallMessageIncomingMissed);
                                                }
                                            } else if (tLRPC$TL_messageActionPhoneCall.reason instanceof TLRPC$TL_phoneCallDiscardReasonBusy) {
                                                if (tLRPC$TL_messageActionPhoneCall.video) {
                                                    string2 = LocaleController.getString("CallMessageVideoIncomingDeclined", R.string.CallMessageVideoIncomingDeclined);
                                                } else {
                                                    string2 = LocaleController.getString("CallMessageIncomingDeclined", R.string.CallMessageIncomingDeclined);
                                                }
                                            } else if (tLRPC$TL_messageActionPhoneCall.video) {
                                                string2 = LocaleController.getString("CallMessageVideoIncoming", R.string.CallMessageVideoIncoming);
                                            } else {
                                                string2 = LocaleController.getString("CallMessageIncoming", R.string.CallMessageIncoming);
                                            }
                                            if (tLRPC$TL_messageActionPhoneCall.duration > 0) {
                                                format8 = format8 + ", " + LocaleController.formatCallDuration(tLRPC$TL_messageActionPhoneCall.duration);
                                            }
                                            chatMessageCell.titleLayout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(string2, Theme.chat_audioTitlePaint, maxNameWidth2, TextUtils.TruncateAt.END), Theme.chat_audioTitlePaint, maxNameWidth2 + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                            chatMessageCell.docTitleLayout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(format8, Theme.chat_contactPhonePaint, maxNameWidth2 - AndroidUtilities.dp(19.0f), TextUtils.TruncateAt.END), Theme.chat_contactPhonePaint, maxNameWidth2 + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                            setMessageObjectInternal(messageObject);
                                            int dp65 = AndroidUtilities.dp(65.0f);
                                            int i282 = chatMessageCell.namesOffset;
                                            chatMessageCell.totalHeight = dp65 + i282;
                                            if (chatMessageCell.drawPinnedTop) {
                                                chatMessageCell.namesOffset = i282 - AndroidUtilities.dp(1.0f);
                                            }
                                        }
                                        messageObject2 = messageObject5;
                                        i5 = 3;
                                        i6 = 20;
                                        i149 = 2;
                                        i = 4;
                                        f2 = 1.0f;
                                    }
                                    if (!(chatMessageCell.currentPosition == null || chatMessageCell.currentMessageObject.isMusic() || chatMessageCell.currentMessageObject.isDocument()) || messageObject.isAnyKindOfSticker() || chatMessageCell.addedCaptionHeight != 0 || messageObject.isExpiredStory() || messageObject.isUnsupported()) {
                                        i8 = 5;
                                        i11 = -1;
                                    } else {
                                        if (!messageObject2.isRestrictedMessage && chatMessageCell.captionLayout == null && (messageObject2.caption != null || messageObject.isVoiceTranscriptionOpen())) {
                                            CharSequence voiceTranscription = !messageObject.isVoiceTranscriptionOpen() ? messageObject2.caption : messageObject.getVoiceTranscription();
                                            chatMessageCell.currentCaption = voiceTranscription;
                                            if (voiceTranscription != null && !TextUtils.isEmpty(messageObject2.messageOwner.voiceTranscription) && chatMessageCell.currentMessageObject.isVoiceTranscriptionOpen() && !chatMessageCell.currentMessageObject.messageOwner.voiceTranscriptionFinal) {
                                                String str31 = ((Object) chatMessageCell.currentCaption) + " ";
                                                chatMessageCell.currentCaption = str31;
                                                if (!(str31 instanceof Spannable)) {
                                                    chatMessageCell.currentCaption = new SpannableString(chatMessageCell.currentCaption);
                                                }
                                                ((SpannableString) chatMessageCell.currentCaption).setSpan(new TranscribeButton.LoadingPointsSpan(), chatMessageCell.currentCaption.length() - 1, chatMessageCell.currentCaption.length(), 33);
                                            }
                                            try {
                                                i9 = chatMessageCell.backgroundWidth;
                                            } catch (Exception e18) {
                                                e = e18;
                                                i8 = 5;
                                            }
                                            try {
                                                if (chatMessageCell.currentMessageObject.type != i149 && !chatMessageCell.isRoundVideo) {
                                                    if (chatMessageCell.drawSideButton != 0 && chatMessageCell.isRoundVideo) {
                                                        i9 -= AndroidUtilities.dp(24.0f);
                                                    }
                                                    i8 = 5;
                                                    int dp66 = (i9 - AndroidUtilities.dp(31 + (chatMessageCell.currentMessageObject.type != 5 ? 0 : 14))) - (getExtraTextX() * 2);
                                                    chatMessageCell.captionFullWidth = dp66;
                                                    chatMessageCell.captionLayout = new MessageObject.TextLayoutBlocks(chatMessageCell.currentMessageObject, chatMessageCell.currentCaption, Theme.chat_msgTextPaint, dp66);
                                                    chatMessageCell.updateSeekBarWaveformWidth(null);
                                                }
                                                int dp662 = (i9 - AndroidUtilities.dp(31 + (chatMessageCell.currentMessageObject.type != 5 ? 0 : 14))) - (getExtraTextX() * 2);
                                                chatMessageCell.captionFullWidth = dp662;
                                                chatMessageCell.captionLayout = new MessageObject.TextLayoutBlocks(chatMessageCell.currentMessageObject, chatMessageCell.currentCaption, Theme.chat_msgTextPaint, dp662);
                                                chatMessageCell.updateSeekBarWaveformWidth(null);
                                            } catch (Exception e19) {
                                                e = e19;
                                                FileLog.e(e);
                                                i10 = chatMessageCell.highlightCaptionToSetStart;
                                                if (i10 >= 0) {
                                                    chatMessageCell.highlight(i10, chatMessageCell.highlightCaptionToSetEnd, textLayoutBlocks.textLayoutBlocks);
                                                }
                                                i11 = -1;
                                                chatMessageCell.highlightCaptionToSetEnd = -1;
                                                chatMessageCell.highlightCaptionToSetStart = -1;
                                                if (chatMessageCell.captionLayout == null) {
                                                }
                                                try {
                                                    if (messageObject.isVoiceTranscriptionOpen()) {
                                                        float dp67 = ((chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f)) - AndroidUtilities.dp(10.0f)) - (getExtraTextX() * 2);
                                                        chatMessageCell.backgroundWidth = (int) (chatMessageCell.backgroundWidth + (Math.max(dp67, chatMessageCell.captionLayout.textWidth) - dp67));
                                                    }
                                                    int dp68 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f);
                                                    if (chatMessageCell.captionLayout == null) {
                                                    }
                                                    if (valueOf != null) {
                                                    }
                                                    i12 = 8;
                                                } catch (Exception e20) {
                                                    e = e20;
                                                    i12 = 8;
                                                }
                                                groupedMessagePosition = chatMessageCell.currentPosition;
                                                if (groupedMessagePosition != null) {
                                                }
                                                int i1642222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                messageObject3 = chatMessageCell.currentMessageObject;
                                                if (messageObject3.eventId == 0) {
                                                }
                                                f3 = 0.0f;
                                                chatMessageCell.botButtons.clear();
                                                if (z51) {
                                                }
                                                if (!messageObject2.isRestrictedMessage) {
                                                }
                                                chatMessageCell.substractBackgroundHeight = 0;
                                                chatMessageCell.keyboardHeight = 0;
                                                if (chatMessageCell.drawCommentButton) {
                                                }
                                                z12 = chatMessageCell.drawPinnedBottom;
                                                if (z12) {
                                                }
                                                if (z12) {
                                                }
                                                if (!chatMessageCell.mediaBackground) {
                                                }
                                                if (messageObject2.type != 19) {
                                                }
                                                if (chatMessageCell.drawPhotoImage) {
                                                }
                                                if (chatMessageCell.documentAttachType != i8) {
                                                }
                                                calculateUnlockXY();
                                                if (z9) {
                                                }
                                                updateAnimatedEmojis();
                                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                if (stickerSetLinkIcon2 != null) {
                                                }
                                                r25 = 0;
                                                if (z51) {
                                                }
                                                transcribeButton = chatMessageCell.transcribeButton;
                                                if (transcribeButton != null) {
                                                }
                                                updateWaveform();
                                                if (z51) {
                                                }
                                                z44 = true;
                                                z45 = false;
                                                z46 = false;
                                                chatMessageCell.updateButtonState(z45, z46, z44);
                                                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                }
                                                chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                if (chatMessageCellDelegate2 != null) {
                                                }
                                                chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                chatMessageCell.highlightCaptionToSetEnd = i11;
                                                chatMessageCell.highlightCaptionToSetStart = i11;
                                                updateFlagSecure();
                                            }
                                            if (messageObject.isVoiceTranscriptionOpen()) {
                                                if (AndroidUtilities.isTablet()) {
                                                    minTabletSide = AndroidUtilities.getMinTabletSide();
                                                    dp = AndroidUtilities.dp(z7 ? 102.0f : 50.0f);
                                                } else {
                                                    minTabletSide = getParentWidth();
                                                    dp = AndroidUtilities.dp(z7 ? 102.0f : 50.0f);
                                                }
                                                i9 = minTabletSide - dp;
                                            }
                                            if (chatMessageCell.drawSideButton != 0) {
                                                i9 -= AndroidUtilities.dp(24.0f);
                                            }
                                            i8 = 5;
                                        } else {
                                            i8 = 5;
                                        }
                                        i10 = chatMessageCell.highlightCaptionToSetStart;
                                        if (i10 >= 0 && (textLayoutBlocks = chatMessageCell.captionLayout) != null) {
                                            chatMessageCell.highlight(i10, chatMessageCell.highlightCaptionToSetEnd, textLayoutBlocks.textLayoutBlocks);
                                        }
                                        i11 = -1;
                                        chatMessageCell.highlightCaptionToSetEnd = -1;
                                        chatMessageCell.highlightCaptionToSetStart = -1;
                                        if (chatMessageCell.captionLayout == null || (i13 = chatMessageCell.currentMessageObject.type) == i149 || i13 == i8) {
                                            if (messageObject.isVoiceTranscriptionOpen() && chatMessageCell.captionLayout != null) {
                                                float dp672 = ((chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f)) - AndroidUtilities.dp(10.0f)) - (getExtraTextX() * 2);
                                                chatMessageCell.backgroundWidth = (int) (chatMessageCell.backgroundWidth + (Math.max(dp672, chatMessageCell.captionLayout.textWidth) - dp672));
                                            }
                                            int dp682 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(31.0f);
                                            if (chatMessageCell.captionLayout == null) {
                                                valueOf = Float.valueOf(textLayoutBlocks2.lastLineWidth);
                                            } else {
                                                valueOf = chatMessageCell.currentMessageObject.type != i149 ? null : Float.valueOf(AndroidUtilities.dp(64.0f));
                                            }
                                            if (valueOf != null) {
                                                MessageObject.TextLayoutBlocks textLayoutBlocks7 = chatMessageCell.captionLayout;
                                                if (textLayoutBlocks7 != null) {
                                                    chatMessageCell.captionWidth = dp682;
                                                    chatMessageCell.captionHeight = textLayoutBlocks7.textHeight;
                                                }
                                                chatMessageCell.totalHeight += chatMessageCell.captionHeight + AndroidUtilities.dp(9.0f);
                                                MessageObject.TextLayoutBlocks textLayoutBlocks8 = chatMessageCell.captionLayout;
                                                if (textLayoutBlocks8 != null) {
                                                    if (!textLayoutBlocks8.hasCodeAtBottom && !textLayoutBlocks8.hasQuoteAtBottom) {
                                                    }
                                                    chatMessageCell.captionHeight += AndroidUtilities.dp(10.0f);
                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(10.0f);
                                                }
                                                ReactionsLayoutInBubble reactionsLayoutInBubble29 = chatMessageCell.reactionsLayoutInBubble;
                                                if (!reactionsLayoutInBubble29.isEmpty && !reactionsLayoutInBubble29.isSmall) {
                                                }
                                                MessageObject.GroupedMessagePosition groupedMessagePosition24 = chatMessageCell.currentPosition;
                                                if (groupedMessagePosition24 == null) {
                                                    i12 = 8;
                                                } else {
                                                    i12 = 8;
                                                }
                                                try {
                                                    if ((dp682 - AndroidUtilities.dp(8.0f)) - valueOf.floatValue() < chatMessageCell.timeWidth + (!messageObject.isOutOwner() ? 0 : AndroidUtilities.dp(20.0f)) + getExtraTimeX()) {
                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(14.0f);
                                                        if (chatMessageCell.captionLayout != null) {
                                                            chatMessageCell.captionHeight += AndroidUtilities.dp(14.0f);
                                                            i7 = 2;
                                                        }
                                                    }
                                                } catch (Exception e21) {
                                                    e = e21;
                                                    FileLog.e(e);
                                                    groupedMessagePosition = chatMessageCell.currentPosition;
                                                    if (groupedMessagePosition != null) {
                                                    }
                                                    int i16422222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                    messageObject3 = chatMessageCell.currentMessageObject;
                                                    if (messageObject3.eventId == 0) {
                                                    }
                                                    f3 = 0.0f;
                                                    chatMessageCell.botButtons.clear();
                                                    if (z51) {
                                                    }
                                                    if (!messageObject2.isRestrictedMessage) {
                                                    }
                                                    chatMessageCell.substractBackgroundHeight = 0;
                                                    chatMessageCell.keyboardHeight = 0;
                                                    if (chatMessageCell.drawCommentButton) {
                                                    }
                                                    z12 = chatMessageCell.drawPinnedBottom;
                                                    if (z12) {
                                                    }
                                                    if (z12) {
                                                    }
                                                    if (!chatMessageCell.mediaBackground) {
                                                    }
                                                    if (messageObject2.type != 19) {
                                                    }
                                                    if (chatMessageCell.drawPhotoImage) {
                                                    }
                                                    if (chatMessageCell.documentAttachType != i8) {
                                                    }
                                                    calculateUnlockXY();
                                                    if (z9) {
                                                    }
                                                    updateAnimatedEmojis();
                                                    stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                    if (stickerSetLinkIcon2 != null) {
                                                    }
                                                    r25 = 0;
                                                    if (z51) {
                                                    }
                                                    transcribeButton = chatMessageCell.transcribeButton;
                                                    if (transcribeButton != null) {
                                                    }
                                                    updateWaveform();
                                                    if (z51) {
                                                    }
                                                    z44 = true;
                                                    z45 = false;
                                                    z46 = false;
                                                    chatMessageCell.updateButtonState(z45, z46, z44);
                                                    if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                    }
                                                    chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                    if (chatMessageCellDelegate2 != null) {
                                                    }
                                                    chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                    chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                    chatMessageCell.highlightCaptionToSetEnd = i11;
                                                    chatMessageCell.highlightCaptionToSetStart = i11;
                                                    updateFlagSecure();
                                                }
                                                groupedMessagePosition = chatMessageCell.currentPosition;
                                                if ((groupedMessagePosition != null || (groupedMessagePosition.flags & i12) != 0) && chatMessageCell.captionLayout == null) {
                                                    int i164222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                }
                                                messageObject3 = chatMessageCell.currentMessageObject;
                                                if (messageObject3.eventId == 0 || messageObject3.isMediaEmpty() || MessageObject.getMedia(chatMessageCell.currentMessageObject.messageOwner).webpage == null) {
                                                    f3 = 0.0f;
                                                } else {
                                                    int dp69 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(41.0f);
                                                    chatMessageCell.hasOldCaptionPreview = true;
                                                    chatMessageCell.linkPreviewHeight = 0;
                                                    TLRPC$WebPage tLRPC$WebPage2 = MessageObject.getMedia(chatMessageCell.currentMessageObject.messageOwner).webpage;
                                                    try {
                                                        int ceil20 = (int) Math.ceil(Theme.chat_replyNamePaint.measureText(tLRPC$WebPage2.site_name) + f2);
                                                        chatMessageCell.siteNameWidth = ceil20;
                                                        chatMessageCell.siteNameLayout = new CachedStaticLayout(new StaticLayout(tLRPC$WebPage2.site_name, Theme.chat_replyNamePaint, Math.min(ceil20, dp69), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                        f3 = 0.0f;
                                                    } catch (Exception e22) {
                                                        e = e22;
                                                        f3 = 0.0f;
                                                    }
                                                    try {
                                                        chatMessageCell.siteNameLayoutWidth = 0.0f;
                                                        chatMessageCell.siteNameLeft = 0.0f;
                                                        for (i16 = 0; i16 < chatMessageCell.siteNameLayout.getLineCount(); i16++) {
                                                            chatMessageCell.siteNameLeft = chatMessageCell.siteNameLayout.getLineLeft(i16);
                                                            chatMessageCell.siteNameLayoutWidth = chatMessageCell.siteNameLayout.getLineWidth(i16);
                                                        }
                                                        CachedStaticLayout cachedStaticLayout22 = chatMessageCell.siteNameLayout;
                                                        int lineBottom5 = cachedStaticLayout22.getLineBottom(cachedStaticLayout22.getLineCount() - 1);
                                                        chatMessageCell.linkPreviewHeight += lineBottom5;
                                                        chatMessageCell.totalHeight += lineBottom5;
                                                    } catch (Exception e23) {
                                                        e = e23;
                                                        FileLog.e(e);
                                                        chatMessageCell.descriptionX = 0;
                                                        if (chatMessageCell.linkPreviewHeight != 0) {
                                                        }
                                                        CachedStaticLayout cachedStaticLayout23 = new CachedStaticLayout(StaticLayoutEx.createStaticLayout(tLRPC$WebPage2.description, Theme.chat_replyTextPaint, dp69, Layout.Alignment.ALIGN_NORMAL, 1.0f, AndroidUtilities.dp(f2), false, TextUtils.TruncateAt.END, dp69, 6));
                                                        chatMessageCell.descriptionLayout = cachedStaticLayout23;
                                                        StaticLayout staticLayout3 = cachedStaticLayout23.layout;
                                                        int lineBottom6 = staticLayout3.getLineBottom(staticLayout3.getLineCount() - 1);
                                                        chatMessageCell.linkPreviewHeight += lineBottom6;
                                                        chatMessageCell.totalHeight += lineBottom6;
                                                        z10 = false;
                                                        while (i15 < chatMessageCell.descriptionLayout.layout.getLineCount()) {
                                                        }
                                                        if (z10) {
                                                        }
                                                        i14 = messageObject2.type;
                                                        if (i14 != 1) {
                                                        }
                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(6.0f);
                                                        int dp70 = chatMessageCell.totalHeight + AndroidUtilities.dp(17.0f);
                                                        chatMessageCell.totalHeight = dp70;
                                                        if (i7 != 0) {
                                                        }
                                                        chatMessageCell.botButtons.clear();
                                                        if (z51) {
                                                        }
                                                        if (!messageObject2.isRestrictedMessage) {
                                                        }
                                                        chatMessageCell.substractBackgroundHeight = 0;
                                                        chatMessageCell.keyboardHeight = 0;
                                                        if (chatMessageCell.drawCommentButton) {
                                                        }
                                                        z12 = chatMessageCell.drawPinnedBottom;
                                                        if (z12) {
                                                        }
                                                        if (z12) {
                                                        }
                                                        if (!chatMessageCell.mediaBackground) {
                                                        }
                                                        if (messageObject2.type != 19) {
                                                        }
                                                        if (chatMessageCell.drawPhotoImage) {
                                                        }
                                                        if (chatMessageCell.documentAttachType != i8) {
                                                        }
                                                        calculateUnlockXY();
                                                        if (z9) {
                                                        }
                                                        updateAnimatedEmojis();
                                                        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                        if (stickerSetLinkIcon2 != null) {
                                                        }
                                                        r25 = 0;
                                                        if (z51) {
                                                        }
                                                        transcribeButton = chatMessageCell.transcribeButton;
                                                        if (transcribeButton != null) {
                                                        }
                                                        updateWaveform();
                                                        if (z51) {
                                                        }
                                                        z44 = true;
                                                        z45 = false;
                                                        z46 = false;
                                                        chatMessageCell.updateButtonState(z45, z46, z44);
                                                        if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                        }
                                                        chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                        if (chatMessageCellDelegate2 != null) {
                                                        }
                                                        chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                        chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                        chatMessageCell.highlightCaptionToSetEnd = i11;
                                                        chatMessageCell.highlightCaptionToSetStart = i11;
                                                        updateFlagSecure();
                                                    }
                                                    chatMessageCell.descriptionX = 0;
                                                    if (chatMessageCell.linkPreviewHeight != 0) {
                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(2.0f);
                                                    }
                                                    CachedStaticLayout cachedStaticLayout232 = new CachedStaticLayout(StaticLayoutEx.createStaticLayout(tLRPC$WebPage2.description, Theme.chat_replyTextPaint, dp69, Layout.Alignment.ALIGN_NORMAL, 1.0f, AndroidUtilities.dp(f2), false, TextUtils.TruncateAt.END, dp69, 6));
                                                    chatMessageCell.descriptionLayout = cachedStaticLayout232;
                                                    StaticLayout staticLayout32 = cachedStaticLayout232.layout;
                                                    int lineBottom62 = staticLayout32.getLineBottom(staticLayout32.getLineCount() - 1);
                                                    chatMessageCell.linkPreviewHeight += lineBottom62;
                                                    chatMessageCell.totalHeight += lineBottom62;
                                                    z10 = false;
                                                    for (i15 = 0; i15 < chatMessageCell.descriptionLayout.layout.getLineCount(); i15++) {
                                                        int ceil21 = (int) Math.ceil(chatMessageCell.descriptionLayout.layout.getLineLeft(i15));
                                                        if (ceil21 == 0) {
                                                            z10 = true;
                                                        } else {
                                                            int i283 = chatMessageCell.descriptionX;
                                                            if (i283 == 0) {
                                                                chatMessageCell.descriptionX = -ceil21;
                                                            } else {
                                                                chatMessageCell.descriptionX = Math.max(i283, -ceil21);
                                                            }
                                                        }
                                                    }
                                                    if (z10) {
                                                        chatMessageCell.descriptionX = 0;
                                                    }
                                                    i14 = messageObject2.type;
                                                    if (i14 != 1 || i14 == i5 || i14 == i6) {
                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(6.0f);
                                                    }
                                                    int dp702 = chatMessageCell.totalHeight + AndroidUtilities.dp(17.0f);
                                                    chatMessageCell.totalHeight = dp702;
                                                    if (i7 != 0) {
                                                        chatMessageCell.totalHeight = dp702 - AndroidUtilities.dp(14.0f);
                                                        if (i7 == i149) {
                                                            chatMessageCell.captionHeight -= AndroidUtilities.dp(14.0f);
                                                        }
                                                    }
                                                }
                                                chatMessageCell.botButtons.clear();
                                                if (z51) {
                                                    chatMessageCell.botButtonsByData.clear();
                                                    chatMessageCell.botButtonsByPosition.clear();
                                                    chatMessageCell.botButtonsLayout = null;
                                                }
                                                if (!messageObject2.isRestrictedMessage && !messageObject2.isRepostPreview && chatMessageCell.currentPosition == null && (messageObject2.messageOwner.reply_markup instanceof TLRPC$TL_replyInlineMarkup) && !messageObject.hasExtendedMedia()) {
                                                    TLRPC$ReplyMarkup tLRPC$ReplyMarkup = messageObject2.messageOwner.reply_markup;
                                                    int size14 = tLRPC$ReplyMarkup instanceof TLRPC$TL_replyInlineMarkup ? 1 : tLRPC$ReplyMarkup.rows.size();
                                                    int dp71 = (AndroidUtilities.dp(48.0f) * size14) + AndroidUtilities.dp(f2);
                                                    chatMessageCell.keyboardHeight = dp71;
                                                    chatMessageCell.substractBackgroundHeight = dp71;
                                                    dp2 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(chatMessageCell.mediaBackground ? 9.0f : 0.0f);
                                                    chatMessageCell.widthForButtons = dp2;
                                                    if (messageObject2.wantedBotKeyboardWidth > dp2) {
                                                        int i284 = -AndroidUtilities.dp(!z7 ? 10.0f : 62.0f);
                                                        if (AndroidUtilities.isTablet()) {
                                                            minTabletSide2 = AndroidUtilities.getMinTabletSide();
                                                        } else {
                                                            minTabletSide2 = Math.min(getParentWidth(), AndroidUtilities.displaySize.y) - AndroidUtilities.dp(5.0f);
                                                        }
                                                        chatMessageCell.widthForButtons = Math.max(chatMessageCell.backgroundWidth, Math.min(messageObject2.wantedBotKeyboardWidth, i284 + minTabletSide2));
                                                    }
                                                    HashMap hashMap3 = new HashMap(chatMessageCell.botButtonsByData);
                                                    sb = messageObject2.botButtonsLayout;
                                                    if (sb != null && (str = chatMessageCell.botButtonsLayout) != null && str.equals(sb.toString())) {
                                                        hashMap = new HashMap(chatMessageCell.botButtonsByPosition);
                                                    } else {
                                                        sb2 = messageObject2.botButtonsLayout;
                                                        if (sb2 != null) {
                                                            chatMessageCell.botButtonsLayout = sb2.toString();
                                                        }
                                                        hashMap = null;
                                                    }
                                                    chatMessageCell.botButtonsByData.clear();
                                                    if (messageObject2.messageOwner.reply_markup instanceof TLRPC$TL_replyInlineMarkup) {
                                                        int i285 = 0;
                                                        int i286 = 0;
                                                        while (i285 < size14) {
                                                            TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow = messageObject2.messageOwner.reply_markup.rows.get(i285);
                                                            int size15 = tLRPC$TL_keyboardButtonRow.buttons.size();
                                                            if (size15 != 0) {
                                                                int dp72 = ((chatMessageCell.widthForButtons - (AndroidUtilities.dp(5.0f) * (size15 - 1))) - AndroidUtilities.dp(2.0f)) / size15;
                                                                int i287 = 0;
                                                                while (i287 < tLRPC$TL_keyboardButtonRow.buttons.size()) {
                                                                    BotButton botButton2 = new BotButton();
                                                                    botButton2.button = tLRPC$TL_keyboardButtonRow.buttons.get(i287);
                                                                    String bytesToHex = Utilities.bytesToHex(botButton2.button.data);
                                                                    String str32 = tLRPC$TL_keyboardButtonRow + "" + i287;
                                                                    if (hashMap != null) {
                                                                        botButton = (BotButton) hashMap.get(str32);
                                                                    } else {
                                                                        botButton = (BotButton) hashMap3.get(bytesToHex);
                                                                    }
                                                                    if (botButton == null) {
                                                                        hashMap2 = hashMap3;
                                                                        botButton2.lastUpdateTime = System.currentTimeMillis();
                                                                    } else {
                                                                        hashMap2 = hashMap3;
                                                                        botButton2.progressAlpha = botButton.progressAlpha;
                                                                        botButton2.angle = botButton.angle;
                                                                        botButton2.lastUpdateTime = botButton.lastUpdateTime;
                                                                    }
                                                                    chatMessageCell.botButtonsByData.put(bytesToHex, botButton2);
                                                                    chatMessageCell.botButtonsByPosition.put(str32, botButton2);
                                                                    botButton2.x = (AndroidUtilities.dp(5.0f) + dp72) * i287;
                                                                    botButton2.y = (AndroidUtilities.dp(48.0f) * i285) + AndroidUtilities.dp(2.5f);
                                                                    botButton2.width = dp72;
                                                                    botButton2.height = AndroidUtilities.dp(44.0f);
                                                                    if (i287 != 0) {
                                                                        i18 = 1;
                                                                    } else {
                                                                        i18 = 1;
                                                                        BotButton.access$3776(botButton2, 1);
                                                                    }
                                                                    if (i287 == tLRPC$TL_keyboardButtonRow.buttons.size() - i18) {
                                                                        BotButton.access$3776(botButton2, i149);
                                                                    }
                                                                    if (i285 == 0) {
                                                                        BotButton.access$3776(botButton2, 4);
                                                                    }
                                                                    if (i285 == size14 - 1) {
                                                                        BotButton.access$3776(botButton2, 8);
                                                                    }
                                                                    TextPaint textPaint2 = (TextPaint) chatMessageCell.getThemedPaint("paintChatBotButton");
                                                                    if ((botButton2.button instanceof TLRPC$TL_keyboardButtonBuy) && (MessageObject.getMedia(messageObject2.messageOwner).flags & 4) != 0) {
                                                                        string = LocaleController.getString("PaymentReceipt", R.string.PaymentReceipt);
                                                                        botButton2.title = new CachedStaticLayout(new StaticLayout(string, textPaint2, dp72 - AndroidUtilities.dp(10.0f), Layout.Alignment.ALIGN_CENTER, 1.0f, 0.0f, false));
                                                                        chatMessageCell.botButtons.add(botButton2);
                                                                        if (i287 == tLRPC$TL_keyboardButtonRow.buttons.size() - 1) {
                                                                            i286 = Math.max(i286, botButton2.x + botButton2.width);
                                                                        }
                                                                        if (messageObject.isFromUser() && (botButton2.button instanceof TLRPC$TL_keyboardButtonUrl)) {
                                                                            try {
                                                                                parse = Uri.parse(botButton2.button.url);
                                                                                String lowerCase2 = parse.getHost().toLowerCase();
                                                                                if (parse.getQueryParameter("startgroup") != null) {
                                                                                    if (!"http".equals(parse.getScheme()) && !"https".equals(parse.getScheme())) {
                                                                                        if ("tg".equals(parse.getScheme())) {
                                                                                            if (botButton2.button.url.startsWith("tg:resolve")) {
                                                                                            }
                                                                                            z11 = true;
                                                                                            botButton2.isInviteButton = z11;
                                                                                        }
                                                                                    }
                                                                                    if (!"t.me".equals(lowerCase2)) {
                                                                                        if (!"telegram.me".equals(lowerCase2)) {
                                                                                            if ("telegram.dog".equals(lowerCase2)) {
                                                                                            }
                                                                                            if ("tg".equals(parse.getScheme())) {
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    z11 = true;
                                                                                    botButton2.isInviteButton = z11;
                                                                                }
                                                                                z11 = false;
                                                                                botButton2.isInviteButton = z11;
                                                                            } catch (Exception unused6) {
                                                                            }
                                                                        }
                                                                        i287++;
                                                                        hashMap3 = hashMap2;
                                                                        i149 = 2;
                                                                    }
                                                                    string = TextUtils.ellipsize(Emoji.replaceEmoji((CharSequence) (botButton2.button.text != null ? botButton2.button.text : ""), textPaint2.getFontMetricsInt(), AndroidUtilities.dp(15.0f), false), textPaint2, dp72 - AndroidUtilities.dp(10.0f), TextUtils.TruncateAt.END);
                                                                    botButton2.title = new CachedStaticLayout(new StaticLayout(string, textPaint2, dp72 - AndroidUtilities.dp(10.0f), Layout.Alignment.ALIGN_CENTER, 1.0f, 0.0f, false));
                                                                    chatMessageCell.botButtons.add(botButton2);
                                                                    if (i287 == tLRPC$TL_keyboardButtonRow.buttons.size() - 1) {
                                                                    }
                                                                    if (messageObject.isFromUser()) {
                                                                        parse = Uri.parse(botButton2.button.url);
                                                                        String lowerCase22 = parse.getHost().toLowerCase();
                                                                        if (parse.getQueryParameter("startgroup") != null) {
                                                                        }
                                                                        z11 = false;
                                                                        botButton2.isInviteButton = z11;
                                                                    }
                                                                    i287++;
                                                                    hashMap3 = hashMap2;
                                                                    i149 = 2;
                                                                }
                                                            }
                                                            i285++;
                                                            hashMap3 = hashMap3;
                                                            i5 = 3;
                                                            i149 = 2;
                                                            i8 = 5;
                                                            i = 4;
                                                            i11 = -1;
                                                            f3 = 0.0f;
                                                        }
                                                        i17 = i286;
                                                    } else {
                                                        i17 = 0;
                                                    }
                                                    chatMessageCell.widthForButtons = i17;
                                                } else {
                                                    chatMessageCell.substractBackgroundHeight = 0;
                                                    chatMessageCell.keyboardHeight = 0;
                                                }
                                                if (chatMessageCell.drawCommentButton) {
                                                    chatMessageCell.totalHeight += AndroidUtilities.dp(!shouldDrawTimeOnMedia() ? 43.0f : 41.3f);
                                                    chatMessageCell.createSelectorDrawable(1);
                                                }
                                                z12 = chatMessageCell.drawPinnedBottom;
                                                if (z12 && chatMessageCell.drawPinnedTop) {
                                                    chatMessageCell.totalHeight -= AndroidUtilities.dp(2.0f);
                                                } else if (z12) {
                                                    chatMessageCell.totalHeight -= AndroidUtilities.dp(f2);
                                                } else if (chatMessageCell.drawPinnedTop && chatMessageCell.pinnedBottom && (groupedMessagePosition2 = chatMessageCell.currentPosition) != null && groupedMessagePosition2.siblingHeights == null) {
                                                    chatMessageCell.totalHeight -= AndroidUtilities.dp(f2);
                                                }
                                                if (!chatMessageCell.mediaBackground) {
                                                    if (messageObject2.type == 0) {
                                                        chatMessageCell.totalHeight -= AndroidUtilities.dp(2.0f);
                                                    }
                                                    if (chatMessageCell.drawPinnedBottom) {
                                                        chatMessageCell.totalHeight -= AndroidUtilities.dp(f2);
                                                    }
                                                    if (chatMessageCell.drawPinnedTop) {
                                                        chatMessageCell.totalHeight -= AndroidUtilities.dp(f2);
                                                    }
                                                }
                                                if (messageObject2.type != 19) {
                                                    if (messageObject.isAnyKindOfSticker() && chatMessageCell.totalHeight < AndroidUtilities.dp(70.0f)) {
                                                        int dp73 = AndroidUtilities.dp(70.0f);
                                                        int i288 = chatMessageCell.totalHeight;
                                                        int i289 = dp73 - i288;
                                                        chatMessageCell.additionalTimeOffsetY = i289;
                                                        chatMessageCell.totalHeight = i288 + i289;
                                                    } else if (messageObject.isAnimatedEmoji()) {
                                                        chatMessageCell.additionalTimeOffsetY = AndroidUtilities.dp(16.0f);
                                                        chatMessageCell.totalHeight += AndroidUtilities.dp(16.0f);
                                                    }
                                                }
                                                if (chatMessageCell.drawPhotoImage) {
                                                    r24 = 0;
                                                    r24 = 0;
                                                    chatMessageCell.photoImage.setImageBitmap((Drawable) null);
                                                    if (chatMessageCell.blurredPhotoImage.getBitmap() != null) {
                                                        chatMessageCell.blurredPhotoImage.getBitmap().recycle();
                                                        chatMessageCell.blurredPhotoImage.setImageBitmap((Bitmap) null);
                                                    }
                                                } else {
                                                    r24 = 0;
                                                }
                                                if (chatMessageCell.documentAttachType != i8) {
                                                    if (MessageObject.isDocumentHasThumb(chatMessageCell.documentAttach)) {
                                                        chatMessageCell.radialProgress.setImageOverlay(FileLoader.getClosestPhotoSizeWithSize(chatMessageCell.documentAttach.thumbs, 90), chatMessageCell.documentAttach, messageObject2);
                                                    } else {
                                                        String artworkUrl = messageObject2.getArtworkUrl(true);
                                                        if (!TextUtils.isEmpty(artworkUrl)) {
                                                            chatMessageCell.radialProgress.setImageOverlay(artworkUrl);
                                                        } else {
                                                            chatMessageCell.radialProgress.setImageOverlay(r24, r24, r24);
                                                        }
                                                    }
                                                } else {
                                                    chatMessageCell.radialProgress.setImageOverlay(r24, r24, r24);
                                                }
                                                calculateUnlockXY();
                                                if (z9) {
                                                    int dp74 = AndroidUtilities.dp(4.0f);
                                                    int i290 = SharedConfig.bubbleRadius;
                                                    if (i290 > i149) {
                                                        dp3 = AndroidUtilities.dp(i290 - i149);
                                                    } else {
                                                        dp3 = AndroidUtilities.dp(i290);
                                                    }
                                                    int min8 = Math.min(AndroidUtilities.dp(3.0f), dp3);
                                                    if (dp74 > dp3) {
                                                        dp74 = dp3;
                                                    }
                                                    if (chatMessageCell.hasLinkPreview || chatMessageCell.hasGamePreview || chatMessageCell.hasInvoicePreview) {
                                                        dp3 = dp74;
                                                    }
                                                    int i291 = (chatMessageCell.forwardedNameLayout[0] == null && chatMessageCell.replyNameLayout == null && !chatMessageCell.drawNameLayout) ? dp3 : dp74;
                                                    if (chatMessageCell.captionLayout != null || chatMessageCell.drawCommentButton || ((arrayList = chatMessageCell.botButtons) != null && !arrayList.isEmpty())) {
                                                        dp3 = dp74;
                                                    }
                                                    if (chatMessageCell.documentAttachType != 1) {
                                                        i20 = dp3;
                                                        i19 = i291;
                                                    } else {
                                                        i19 = dp74;
                                                        i20 = i19;
                                                    }
                                                    MessageObject.GroupedMessagePosition groupedMessagePosition25 = chatMessageCell.currentPosition;
                                                    if (groupedMessagePosition25 != null && chatMessageCell.currentMessagesGroup != null) {
                                                        int i292 = groupedMessagePosition25.flags;
                                                        if ((i292 & 2) == 0) {
                                                            i19 = dp74;
                                                            i20 = i19;
                                                        }
                                                        if ((i292 & 1) == 0) {
                                                            dp3 = dp74;
                                                            i291 = dp3;
                                                        }
                                                        if ((i292 & 8) == 0) {
                                                            dp3 = dp74;
                                                            i20 = dp3;
                                                        }
                                                        if ((i292 & i) == 0) {
                                                            i19 = dp74;
                                                            if (chatMessageCell.pinnedTop) {
                                                                int i293 = i19;
                                                                i21 = dp74;
                                                                i22 = i293;
                                                            } else if (chatMessageCell.currentMessageObject.isOutOwner()) {
                                                                i21 = dp74;
                                                                i22 = min8;
                                                            } else {
                                                                i22 = i19;
                                                                i21 = min8;
                                                            }
                                                            if (chatMessageCell.pinnedBottom) {
                                                                if (chatMessageCell.currentMessageObject.isOutOwner()) {
                                                                    i20 = min8;
                                                                } else {
                                                                    dp3 = min8;
                                                                }
                                                            }
                                                            if (!chatMessageCell.mediaBackground && !chatMessageCell.currentMessageObject.isOutOwner()) {
                                                                dp3 = min8;
                                                            }
                                                            messageObject4 = chatMessageCell.currentMessageObject;
                                                            if (messageObject4.type == i && ((MessageObject.getMedia(messageObject4) instanceof TLRPC$TL_messageMediaVenue) || (!chatMessageCell.locationExpired && (MessageObject.getMedia(chatMessageCell.currentMessageObject) instanceof TLRPC$TL_messageMediaGeoLive)))) {
                                                                dp3 = min8;
                                                                i20 = dp3;
                                                            }
                                                            if (chatMessageCell.documentAttachType == 10) {
                                                                i22 = 0;
                                                                dp3 = 0;
                                                                i21 = 0;
                                                                i20 = 0;
                                                            }
                                                            chatMessageCell.photoImage.setRoundRadius(i21, i22, i20, dp3);
                                                        }
                                                    }
                                                    dp74 = i291;
                                                    if (chatMessageCell.pinnedTop) {
                                                    }
                                                    if (chatMessageCell.pinnedBottom) {
                                                    }
                                                    if (!chatMessageCell.mediaBackground) {
                                                        dp3 = min8;
                                                    }
                                                    messageObject4 = chatMessageCell.currentMessageObject;
                                                    if (messageObject4.type == i) {
                                                        dp3 = min8;
                                                        i20 = dp3;
                                                    }
                                                    if (chatMessageCell.documentAttachType == 10) {
                                                    }
                                                    chatMessageCell.photoImage.setRoundRadius(i21, i22, i20, dp3);
                                                }
                                                updateAnimatedEmojis();
                                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                if (stickerSetLinkIcon2 != null && stickerSetLinkIcon2.die()) {
                                                    chatMessageCell.stickerSetIcons.detach(chatMessageCell);
                                                    r25 = 0;
                                                    chatMessageCell.stickerSetIcons = null;
                                                } else {
                                                    r25 = 0;
                                                }
                                            }
                                        }
                                    }
                                    i12 = 8;
                                    groupedMessagePosition = chatMessageCell.currentPosition;
                                    if (groupedMessagePosition != null) {
                                    }
                                    int i1642222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                    messageObject3 = chatMessageCell.currentMessageObject;
                                    if (messageObject3.eventId == 0) {
                                        int dp692 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(41.0f);
                                        chatMessageCell.hasOldCaptionPreview = true;
                                        chatMessageCell.linkPreviewHeight = 0;
                                        TLRPC$WebPage tLRPC$WebPage22 = MessageObject.getMedia(chatMessageCell.currentMessageObject.messageOwner).webpage;
                                        int ceil202 = (int) Math.ceil(Theme.chat_replyNamePaint.measureText(tLRPC$WebPage22.site_name) + f2);
                                        chatMessageCell.siteNameWidth = ceil202;
                                        chatMessageCell.siteNameLayout = new CachedStaticLayout(new StaticLayout(tLRPC$WebPage22.site_name, Theme.chat_replyNamePaint, Math.min(ceil202, dp692), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                        f3 = 0.0f;
                                        chatMessageCell.siteNameLayoutWidth = 0.0f;
                                        chatMessageCell.siteNameLeft = 0.0f;
                                        while (i16 < chatMessageCell.siteNameLayout.getLineCount()) {
                                        }
                                        CachedStaticLayout cachedStaticLayout222 = chatMessageCell.siteNameLayout;
                                        int lineBottom52 = cachedStaticLayout222.getLineBottom(cachedStaticLayout222.getLineCount() - 1);
                                        chatMessageCell.linkPreviewHeight += lineBottom52;
                                        chatMessageCell.totalHeight += lineBottom52;
                                        chatMessageCell.descriptionX = 0;
                                        if (chatMessageCell.linkPreviewHeight != 0) {
                                        }
                                        CachedStaticLayout cachedStaticLayout2322 = new CachedStaticLayout(StaticLayoutEx.createStaticLayout(tLRPC$WebPage22.description, Theme.chat_replyTextPaint, dp692, Layout.Alignment.ALIGN_NORMAL, 1.0f, AndroidUtilities.dp(f2), false, TextUtils.TruncateAt.END, dp692, 6));
                                        chatMessageCell.descriptionLayout = cachedStaticLayout2322;
                                        StaticLayout staticLayout322 = cachedStaticLayout2322.layout;
                                        int lineBottom622 = staticLayout322.getLineBottom(staticLayout322.getLineCount() - 1);
                                        chatMessageCell.linkPreviewHeight += lineBottom622;
                                        chatMessageCell.totalHeight += lineBottom622;
                                        z10 = false;
                                        while (i15 < chatMessageCell.descriptionLayout.layout.getLineCount()) {
                                        }
                                        if (z10) {
                                        }
                                        i14 = messageObject2.type;
                                        if (i14 != 1) {
                                        }
                                        chatMessageCell.totalHeight += AndroidUtilities.dp(6.0f);
                                        int dp7022 = chatMessageCell.totalHeight + AndroidUtilities.dp(17.0f);
                                        chatMessageCell.totalHeight = dp7022;
                                        if (i7 != 0) {
                                        }
                                        chatMessageCell.botButtons.clear();
                                        if (z51) {
                                        }
                                        if (!messageObject2.isRestrictedMessage) {
                                            TLRPC$ReplyMarkup tLRPC$ReplyMarkup2 = messageObject2.messageOwner.reply_markup;
                                            if (tLRPC$ReplyMarkup2 instanceof TLRPC$TL_replyInlineMarkup) {
                                            }
                                            int dp712 = (AndroidUtilities.dp(48.0f) * size14) + AndroidUtilities.dp(f2);
                                            chatMessageCell.keyboardHeight = dp712;
                                            chatMessageCell.substractBackgroundHeight = dp712;
                                            dp2 = chatMessageCell.backgroundWidth - AndroidUtilities.dp(chatMessageCell.mediaBackground ? 9.0f : 0.0f);
                                            chatMessageCell.widthForButtons = dp2;
                                            if (messageObject2.wantedBotKeyboardWidth > dp2) {
                                            }
                                            HashMap hashMap32 = new HashMap(chatMessageCell.botButtonsByData);
                                            sb = messageObject2.botButtonsLayout;
                                            if (sb != null) {
                                                hashMap = new HashMap(chatMessageCell.botButtonsByPosition);
                                                chatMessageCell.botButtonsByData.clear();
                                                if (messageObject2.messageOwner.reply_markup instanceof TLRPC$TL_replyInlineMarkup) {
                                                }
                                                chatMessageCell.widthForButtons = i17;
                                                if (chatMessageCell.drawCommentButton) {
                                                }
                                                z12 = chatMessageCell.drawPinnedBottom;
                                                if (z12) {
                                                    chatMessageCell.totalHeight -= AndroidUtilities.dp(2.0f);
                                                    if (!chatMessageCell.mediaBackground) {
                                                    }
                                                    if (messageObject2.type != 19) {
                                                    }
                                                    if (chatMessageCell.drawPhotoImage) {
                                                    }
                                                    if (chatMessageCell.documentAttachType != i8) {
                                                    }
                                                    calculateUnlockXY();
                                                    if (z9) {
                                                    }
                                                    updateAnimatedEmojis();
                                                    stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                    if (stickerSetLinkIcon2 != null) {
                                                        chatMessageCell.stickerSetIcons.detach(chatMessageCell);
                                                        r25 = 0;
                                                        chatMessageCell.stickerSetIcons = null;
                                                    }
                                                    r25 = 0;
                                                }
                                                if (z12) {
                                                }
                                                if (!chatMessageCell.mediaBackground) {
                                                }
                                                if (messageObject2.type != 19) {
                                                }
                                                if (chatMessageCell.drawPhotoImage) {
                                                }
                                                if (chatMessageCell.documentAttachType != i8) {
                                                }
                                                calculateUnlockXY();
                                                if (z9) {
                                                }
                                                updateAnimatedEmojis();
                                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                if (stickerSetLinkIcon2 != null) {
                                                }
                                                r25 = 0;
                                            }
                                            sb2 = messageObject2.botButtonsLayout;
                                            if (sb2 != null) {
                                            }
                                            hashMap = null;
                                            chatMessageCell.botButtonsByData.clear();
                                            if (messageObject2.messageOwner.reply_markup instanceof TLRPC$TL_replyInlineMarkup) {
                                            }
                                            chatMessageCell.widthForButtons = i17;
                                            if (chatMessageCell.drawCommentButton) {
                                            }
                                            z12 = chatMessageCell.drawPinnedBottom;
                                            if (z12) {
                                            }
                                            if (z12) {
                                            }
                                            if (!chatMessageCell.mediaBackground) {
                                            }
                                            if (messageObject2.type != 19) {
                                            }
                                            if (chatMessageCell.drawPhotoImage) {
                                            }
                                            if (chatMessageCell.documentAttachType != i8) {
                                            }
                                            calculateUnlockXY();
                                            if (z9) {
                                            }
                                            updateAnimatedEmojis();
                                            stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                            if (stickerSetLinkIcon2 != null) {
                                            }
                                            r25 = 0;
                                        }
                                        chatMessageCell.substractBackgroundHeight = 0;
                                        chatMessageCell.keyboardHeight = 0;
                                        if (chatMessageCell.drawCommentButton) {
                                        }
                                        z12 = chatMessageCell.drawPinnedBottom;
                                        if (z12) {
                                        }
                                        if (z12) {
                                        }
                                        if (!chatMessageCell.mediaBackground) {
                                        }
                                        if (messageObject2.type != 19) {
                                        }
                                        if (chatMessageCell.drawPhotoImage) {
                                        }
                                        if (chatMessageCell.documentAttachType != i8) {
                                        }
                                        calculateUnlockXY();
                                        if (z9) {
                                        }
                                        updateAnimatedEmojis();
                                        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                        if (stickerSetLinkIcon2 != null) {
                                        }
                                        r25 = 0;
                                    }
                                    f3 = 0.0f;
                                    chatMessageCell.botButtons.clear();
                                    if (z51) {
                                    }
                                    if (!messageObject2.isRestrictedMessage) {
                                    }
                                    chatMessageCell.substractBackgroundHeight = 0;
                                    chatMessageCell.keyboardHeight = 0;
                                    if (chatMessageCell.drawCommentButton) {
                                    }
                                    z12 = chatMessageCell.drawPinnedBottom;
                                    if (z12) {
                                    }
                                    if (z12) {
                                    }
                                    if (!chatMessageCell.mediaBackground) {
                                    }
                                    if (messageObject2.type != 19) {
                                    }
                                    if (chatMessageCell.drawPhotoImage) {
                                    }
                                    if (chatMessageCell.documentAttachType != i8) {
                                    }
                                    calculateUnlockXY();
                                    if (z9) {
                                    }
                                    updateAnimatedEmojis();
                                    stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                    if (stickerSetLinkIcon2 != null) {
                                    }
                                    r25 = 0;
                                }
                                i7 = 0;
                                z9 = true;
                                if (chatMessageCell.currentPosition == null) {
                                    i8 = 5;
                                    i11 = -1;
                                    i12 = 8;
                                    groupedMessagePosition = chatMessageCell.currentPosition;
                                    if (groupedMessagePosition != null) {
                                    }
                                    int i16422222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                    messageObject3 = chatMessageCell.currentMessageObject;
                                    if (messageObject3.eventId == 0) {
                                    }
                                    f3 = 0.0f;
                                    chatMessageCell.botButtons.clear();
                                    if (z51) {
                                    }
                                    if (!messageObject2.isRestrictedMessage) {
                                    }
                                    chatMessageCell.substractBackgroundHeight = 0;
                                    chatMessageCell.keyboardHeight = 0;
                                    if (chatMessageCell.drawCommentButton) {
                                    }
                                    z12 = chatMessageCell.drawPinnedBottom;
                                    if (z12) {
                                    }
                                    if (z12) {
                                    }
                                    if (!chatMessageCell.mediaBackground) {
                                    }
                                    if (messageObject2.type != 19) {
                                    }
                                    if (chatMessageCell.drawPhotoImage) {
                                    }
                                    if (chatMessageCell.documentAttachType != i8) {
                                    }
                                    calculateUnlockXY();
                                    if (z9) {
                                    }
                                    updateAnimatedEmojis();
                                    stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                    if (stickerSetLinkIcon2 != null) {
                                    }
                                    r25 = 0;
                                }
                                i8 = 5;
                                i11 = -1;
                                i12 = 8;
                                groupedMessagePosition = chatMessageCell.currentPosition;
                                if (groupedMessagePosition != null) {
                                }
                                int i164222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                messageObject3 = chatMessageCell.currentMessageObject;
                                if (messageObject3.eventId == 0) {
                                }
                                f3 = 0.0f;
                                chatMessageCell.botButtons.clear();
                                if (z51) {
                                }
                                if (!messageObject2.isRestrictedMessage) {
                                }
                                chatMessageCell.substractBackgroundHeight = 0;
                                chatMessageCell.keyboardHeight = 0;
                                if (chatMessageCell.drawCommentButton) {
                                }
                                z12 = chatMessageCell.drawPinnedBottom;
                                if (z12) {
                                }
                                if (z12) {
                                }
                                if (!chatMessageCell.mediaBackground) {
                                }
                                if (messageObject2.type != 19) {
                                }
                                if (chatMessageCell.drawPhotoImage) {
                                }
                                if (chatMessageCell.documentAttachType != i8) {
                                }
                                calculateUnlockXY();
                                if (z9) {
                                }
                                updateAnimatedEmojis();
                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                if (stickerSetLinkIcon2 != null) {
                                }
                                r25 = 0;
                            } else {
                                if (chatMessageCell.commentAvatarImages != null) {
                                    int i294 = 0;
                                    while (true) {
                                        ImageReceiver[] imageReceiverArr4 = chatMessageCell.commentAvatarImages;
                                        if (i294 >= imageReceiverArr4.length) {
                                            break;
                                        }
                                        imageReceiverArr4[i294].setImageBitmap((Drawable) null);
                                        chatMessageCell.commentAvatarImagesVisible[i294] = false;
                                        i294++;
                                    }
                                }
                                string9 = str17;
                                i4 = 2;
                            }
                        }
                        i137 = 0;
                        int ceil22 = (int) Math.ceil(Theme.chat_commentTextPaint.measureText(string9));
                        chatMessageCell.totalCommentWidth = ceil22;
                        chatMessageCell.commentWidth = ceil22;
                        chatMessageCell.commentLayout = new CachedStaticLayout(new StaticLayout(string9, Theme.chat_commentTextPaint, chatMessageCell.commentWidth + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                        if (repliesCount != 0) {
                            chatMessageCell.drawCommentNumber = z49;
                            animatedNumberLayout = chatMessageCell.commentNumberLayout;
                            if (animatedNumberLayout != null) {
                            }
                            messageObject17.animateComments = z43;
                            int width22 = chatMessageCell.commentNumberLayout.getWidth();
                            chatMessageCell.commentNumberWidth = width22;
                            chatMessageCell.totalCommentWidth += width22 + AndroidUtilities.dp(4.0f);
                            chatMessageCell.totalCommentWidth += AndroidUtilities.dp(i137 + 70);
                            if (messageObject17.type != 27) {
                            }
                            i7 = 0;
                            z9 = true;
                            if (chatMessageCell.currentPosition == null) {
                            }
                            i8 = 5;
                            i11 = -1;
                            i12 = 8;
                            groupedMessagePosition = chatMessageCell.currentPosition;
                            if (groupedMessagePosition != null) {
                            }
                            int i1642222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                            messageObject3 = chatMessageCell.currentMessageObject;
                            if (messageObject3.eventId == 0) {
                            }
                            f3 = 0.0f;
                            chatMessageCell.botButtons.clear();
                            if (z51) {
                            }
                            if (!messageObject2.isRestrictedMessage) {
                            }
                            chatMessageCell.substractBackgroundHeight = 0;
                            chatMessageCell.keyboardHeight = 0;
                            if (chatMessageCell.drawCommentButton) {
                            }
                            z12 = chatMessageCell.drawPinnedBottom;
                            if (z12) {
                            }
                            if (z12) {
                            }
                            if (!chatMessageCell.mediaBackground) {
                            }
                            if (messageObject2.type != 19) {
                            }
                            if (chatMessageCell.drawPhotoImage) {
                            }
                            if (chatMessageCell.documentAttachType != i8) {
                            }
                            calculateUnlockXY();
                            if (z9) {
                            }
                            updateAnimatedEmojis();
                            stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                            if (stickerSetLinkIcon2 != null) {
                            }
                            r25 = 0;
                        }
                        chatMessageCell.drawCommentNumber = false;
                        animatedNumberLayout2 = chatMessageCell.commentNumberLayout;
                        if (animatedNumberLayout2 != null) {
                        }
                        chatMessageCell.totalCommentWidth += AndroidUtilities.dp(i137 + 70);
                        if (messageObject17.type != 27) {
                        }
                        i7 = 0;
                        z9 = true;
                        if (chatMessageCell.currentPosition == null) {
                        }
                        i8 = 5;
                        i11 = -1;
                        i12 = 8;
                        groupedMessagePosition = chatMessageCell.currentPosition;
                        if (groupedMessagePosition != null) {
                        }
                        int i16422222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                        messageObject3 = chatMessageCell.currentMessageObject;
                        if (messageObject3.eventId == 0) {
                        }
                        f3 = 0.0f;
                        chatMessageCell.botButtons.clear();
                        if (z51) {
                        }
                        if (!messageObject2.isRestrictedMessage) {
                        }
                        chatMessageCell.substractBackgroundHeight = 0;
                        chatMessageCell.keyboardHeight = 0;
                        if (chatMessageCell.drawCommentButton) {
                        }
                        z12 = chatMessageCell.drawPinnedBottom;
                        if (z12) {
                        }
                        if (z12) {
                        }
                        if (!chatMessageCell.mediaBackground) {
                        }
                        if (messageObject2.type != 19) {
                        }
                        if (chatMessageCell.drawPhotoImage) {
                        }
                        if (chatMessageCell.documentAttachType != i8) {
                        }
                        calculateUnlockXY();
                        if (z9) {
                        }
                        updateAnimatedEmojis();
                        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                        if (stickerSetLinkIcon2 != null) {
                        }
                        r25 = 0;
                    } else {
                        if (!chatMessageCell.isRepliesChat && repliesCount > 0) {
                            String formatShortNumber = LocaleController.formatShortNumber(repliesCount, null);
                            int ceil23 = (int) Math.ceil(Theme.chat_stickerCommentCountPaint.measureText(formatShortNumber));
                            chatMessageCell.totalCommentWidth = ceil23;
                            chatMessageCell.commentWidth = ceil23;
                            chatMessageCell.commentLayout = new CachedStaticLayout(new StaticLayout(formatShortNumber, Theme.chat_stickerCommentCountPaint, chatMessageCell.commentWidth + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                        } else {
                            chatMessageCell.commentLayout = null;
                        }
                        chatMessageCell.drawCommentNumber = false;
                        chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                        i4 = 2;
                        if (messageObject17.type != 27) {
                        }
                        i7 = 0;
                        z9 = true;
                        if (chatMessageCell.currentPosition == null) {
                        }
                        i8 = 5;
                        i11 = -1;
                        i12 = 8;
                        groupedMessagePosition = chatMessageCell.currentPosition;
                        if (groupedMessagePosition != null) {
                        }
                        int i164222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                        messageObject3 = chatMessageCell.currentMessageObject;
                        if (messageObject3.eventId == 0) {
                        }
                        f3 = 0.0f;
                        chatMessageCell.botButtons.clear();
                        if (z51) {
                        }
                        if (!messageObject2.isRestrictedMessage) {
                        }
                        chatMessageCell.substractBackgroundHeight = 0;
                        chatMessageCell.keyboardHeight = 0;
                        if (chatMessageCell.drawCommentButton) {
                        }
                        z12 = chatMessageCell.drawPinnedBottom;
                        if (z12) {
                        }
                        if (z12) {
                        }
                        if (!chatMessageCell.mediaBackground) {
                        }
                        if (messageObject2.type != 19) {
                        }
                        if (chatMessageCell.drawPhotoImage) {
                        }
                        if (chatMessageCell.documentAttachType != i8) {
                        }
                        calculateUnlockXY();
                        if (z9) {
                        }
                        updateAnimatedEmojis();
                        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                        if (stickerSetLinkIcon2 != null) {
                        }
                        r25 = 0;
                    }
                }
                chatMessageCell.commentLayout = cachedStaticLayout;
                chatMessageCell.drawCommentNumber = false;
                i4 = 2;
                if (messageObject17.type != 27) {
                }
                i7 = 0;
                z9 = true;
                if (chatMessageCell.currentPosition == null) {
                }
                i8 = 5;
                i11 = -1;
                i12 = 8;
                groupedMessagePosition = chatMessageCell.currentPosition;
                if (groupedMessagePosition != null) {
                }
                int i1642222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                messageObject3 = chatMessageCell.currentMessageObject;
                if (messageObject3.eventId == 0) {
                }
                f3 = 0.0f;
                chatMessageCell.botButtons.clear();
                if (z51) {
                }
                if (!messageObject2.isRestrictedMessage) {
                }
                chatMessageCell.substractBackgroundHeight = 0;
                chatMessageCell.keyboardHeight = 0;
                if (chatMessageCell.drawCommentButton) {
                }
                z12 = chatMessageCell.drawPinnedBottom;
                if (z12) {
                }
                if (z12) {
                }
                if (!chatMessageCell.mediaBackground) {
                }
                if (messageObject2.type != 19) {
                }
                if (chatMessageCell.drawPhotoImage) {
                }
                if (chatMessageCell.documentAttachType != i8) {
                }
                calculateUnlockXY();
                if (z9) {
                }
                updateAnimatedEmojis();
                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                if (stickerSetLinkIcon2 != null) {
                }
                r25 = 0;
            } else {
                messageObject2 = messageObject17;
                r25 = 0;
                i5 = 3;
                i8 = 5;
                i11 = -1;
                f3 = 0.0f;
            }
            if (z51) {
                chatMessageCell.currentUrl = r25;
                chatMessageCell.currentWebFile = r25;
                chatMessageCell.loadingProgressLayout = r25;
                chatMessageCell.animatingLoadingProgressProgress = f3;
                chatMessageCell.lastLoadingSizeTotal = 0L;
                chatMessageCell.selectedBackgroundProgress = f3;
                ValueAnimator valueAnimator = chatMessageCell.statusDrawableAnimator;
                if (valueAnimator != null) {
                    valueAnimator.removeAllListeners();
                    chatMessageCell.statusDrawableAnimator.cancel();
                }
                AnimatedFloat animatedFloat = chatMessageCell.translationLoadingFloat;
                if (animatedFloat != null) {
                    animatedFloat.set(f3, true);
                }
                LinkPath linkPath = chatMessageCell.translationLoadingPath;
                if (linkPath == null) {
                    loadingDrawable = null;
                } else {
                    linkPath.reset();
                    loadingDrawable = null;
                    chatMessageCell.translationLoadingPath = null;
                }
                LoadingDrawable loadingDrawable2 = chatMessageCell.translationLoadingDrawable;
                if (loadingDrawable2 != null) {
                    loadingDrawable2.reset();
                    chatMessageCell.translationLoadingDrawable = loadingDrawable;
                }
                AnimatedFloat animatedFloat2 = chatMessageCell.timerParticlesAlpha;
                if (animatedFloat2 != null) {
                    MessageObject messageObject36 = chatMessageCell.currentMessageObject;
                    if (messageObject36 == null || !messageObject36.needDrawBluredPreview() || (tLRPC$Message4 = chatMessageCell.currentMessageObject.messageOwner) == null || tLRPC$Message4.destroyTime == 0 || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject)) {
                        z47 = true;
                        z48 = false;
                    } else {
                        z47 = true;
                        z48 = true;
                    }
                    animatedFloat2.set(z48, z47);
                }
                chatMessageCell.transitionParams.lastStatusDrawableParams = i11;
                chatMessageCell.statusDrawableAnimationInProgress = false;
                if (chatMessageCell.documentAttachType == i8) {
                    chatMessageCell.toSeekBarProgress = !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) ? 0.0f : 1.0f;
                }
                SeekBar seekBar = chatMessageCell.seekBar;
                if (seekBar != null) {
                    seekBar.updateTimestamps(chatMessageCell.currentMessageObject, null);
                }
                chatMessageCell.seekBarWaveform.setProgress(f3);
                AnimatedEmojiDrawable.SwapAnimatedEmojiDrawable swapAnimatedEmojiDrawable = chatMessageCell.currentNameStatusDrawable;
                if (swapAnimatedEmojiDrawable != null) {
                    swapAnimatedEmojiDrawable.play();
                }
                ReplyMessageLine replyMessageLine = chatMessageCell.replyLine;
                if (replyMessageLine != null) {
                    replyMessageLine.resetAnimation();
                }
                chatMessageCell.quoteHighlight = null;
            }
            transcribeButton = chatMessageCell.transcribeButton;
            if (transcribeButton != null) {
                MessageObject messageObject37 = chatMessageCell.currentMessageObject;
                TLRPC$Message tLRPC$Message11 = messageObject37.messageOwner;
                transcribeButton.setOpen(tLRPC$Message11 != null && tLRPC$Message11.voiceTranscriptionOpen && tLRPC$Message11.voiceTranscriptionFinal && TranscribeButton.isVideoTranscriptionOpen(messageObject37), !z51);
                chatMessageCell.transcribeButton.setLoading(TranscribeButton.isTranscribing(chatMessageCell.currentMessageObject), !z51);
                chatMessageCell.transcribeButton.setLock(TranscribeButton.showTranscribeLock(chatMessageCell.currentMessageObject), !z51);
            }
            updateWaveform();
            if (z51 || messageObject2.cancelEditing) {
                z44 = true;
                z45 = false;
                z46 = false;
            } else {
                z44 = true;
                z45 = false;
                z46 = true;
            }
            chatMessageCell.updateButtonState(z45, z46, z44);
            if (!chatMessageCell.currentMessageObject.loadingCancelled && chatMessageCell.buttonState == i149 && chatMessageCell.documentAttachType == i5 && DownloadController.getInstance(chatMessageCell.currentAccount).canDownloadMedia(messageObject2)) {
                FileLoader fileLoader = FileLoader.getInstance(chatMessageCell.currentAccount);
                TLRPC$Document tLRPC$Document17 = chatMessageCell.documentAttach;
                messageObject15 = chatMessageCell.currentMessageObject;
                if (messageObject15.shouldEncryptPhotoOrVideo()) {
                    i141 = 1;
                    i142 = 0;
                } else {
                    i141 = 1;
                    i142 = 2;
                }
                fileLoader.loadFile(tLRPC$Document17, messageObject15, i141, i142);
                chatMessageCell.buttonState = i;
                chatMessageCell.radialProgress.setIcon(getIconForCurrentState(), false, false);
            }
            chatMessageCellDelegate2 = chatMessageCell.delegate;
            if (chatMessageCellDelegate2 != null && chatMessageCellDelegate2.getTextSelectionHelper() != null && !z51 && z3 && !messageObject2.preview) {
                chatMessageCell.delegate.getTextSelectionHelper().checkDataChanged(messageObject2);
            }
            chatMessageCell.accessibilityVirtualViewBounds.clear();
            chatMessageCell.transitionParams.updatePhotoImageX = true;
            chatMessageCell.highlightCaptionToSetEnd = i11;
            chatMessageCell.highlightCaptionToSetStart = i11;
            updateFlagSecure();
        }
        z3 = true;
        MessageObject messageObject192 = chatMessageCell.currentMessageObject;
        if (messageObject192 != null) {
            if (groupedMessages != chatMessageCell.currentMessagesGroup) {
            }
            if (!z51) {
                i146 = messageObject17.stableId;
                messageObject17.copyStableParams(messageObject16);
                if (chatMessageCell.currentMessageObject.isSavedFiltered) {
                    messageObject17.stableId = i146;
                }
            }
            chatMessageCell.accessibilityText = null;
            i = 4;
            if (chatMessageCell.drawCommentButton) {
                if (!z3) {
                    chatMessageCell.setCurrentDiceValue(chatMessageCell.isUpdating);
                }
                if (z3) {
                    if (MessageObject.getMedia(messageObject17.messageOwner) instanceof TLRPC$TL_messageMediaPoll) {
                    }
                    if (arrayList9 == null) {
                        if (!z6) {
                            z6 = true;
                        }
                        tLRPC$Poll2 = chatMessageCell.lastPoll;
                        if (tLRPC$Poll2 != tLRPC$Poll) {
                            if (!chatMessageCell.pollVoted) {
                            }
                            z6 = true;
                        }
                        chatMessageCell.animatePollAvatars = false;
                        if (z6) {
                            chatMessageCell.pollAnimationProgressTime = 0.0f;
                            if (chatMessageCell.pollVoted) {
                                chatMessageCell.pollUnvoteInProgress = true;
                            }
                            int i1472 = chatMessageCell.lastPollResultsVoters;
                            if (i1472 == 0) {
                                chatMessageCell.animatePollAvatars = i1472 == 0 || (i1472 != 0 && i143 == 0);
                            }
                            chatMessageCell.animatePollAvatars = i1472 == 0 || (i1472 != 0 && i143 == 0);
                        }
                        if (!z51) {
                            size = tLRPC$TL_messageMediaPoll.results.results.size();
                            i144 = 0;
                            while (true) {
                                if (i144 < size) {
                                }
                                i144++;
                            }
                            if (tLRPC$TL_pollAnswerVoters != null) {
                            }
                        }
                        if (!z4) {
                            if ((groupedMessages.messages.size() > 1 ? null : chatMessageCell.currentMessagesGroup.getPosition(chatMessageCell.currentMessageObject)) == chatMessageCell.currentPosition) {
                            }
                        }
                        i2 = 5;
                        i3 = -1;
                        f = 1.0f;
                        int i1492 = 2;
                        if (z3) {
                            messageObject2 = messageObject17;
                            r25 = 0;
                            i5 = 3;
                            i8 = 5;
                            i11 = -1;
                            f3 = 0.0f;
                            if (z51) {
                            }
                            transcribeButton = chatMessageCell.transcribeButton;
                            if (transcribeButton != null) {
                            }
                            updateWaveform();
                            if (z51) {
                                z44 = true;
                                z45 = false;
                                z46 = true;
                                chatMessageCell.updateButtonState(z45, z46, z44);
                                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                    FileLoader fileLoader2 = FileLoader.getInstance(chatMessageCell.currentAccount);
                                    TLRPC$Document tLRPC$Document172 = chatMessageCell.documentAttach;
                                    messageObject15 = chatMessageCell.currentMessageObject;
                                    if (messageObject15.shouldEncryptPhotoOrVideo()) {
                                    }
                                    fileLoader2.loadFile(tLRPC$Document172, messageObject15, i141, i142);
                                    chatMessageCell.buttonState = i;
                                    chatMessageCell.radialProgress.setIcon(getIconForCurrentState(), false, false);
                                }
                                chatMessageCellDelegate2 = chatMessageCell.delegate;
                                if (chatMessageCellDelegate2 != null) {
                                    chatMessageCell.delegate.getTextSelectionHelper().checkDataChanged(messageObject2);
                                }
                                chatMessageCell.accessibilityVirtualViewBounds.clear();
                                chatMessageCell.transitionParams.updatePhotoImageX = true;
                                chatMessageCell.highlightCaptionToSetEnd = i11;
                                chatMessageCell.highlightCaptionToSetStart = i11;
                                updateFlagSecure();
                            }
                            z44 = true;
                            z45 = false;
                            z46 = false;
                            chatMessageCell.updateButtonState(z45, z46, z44);
                            if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                            }
                            chatMessageCellDelegate2 = chatMessageCell.delegate;
                            if (chatMessageCellDelegate2 != null) {
                            }
                            chatMessageCell.accessibilityVirtualViewBounds.clear();
                            chatMessageCell.transitionParams.updatePhotoImageX = true;
                            chatMessageCell.highlightCaptionToSetEnd = i11;
                            chatMessageCell.highlightCaptionToSetStart = i11;
                            updateFlagSecure();
                        }
                        chatMessageCell.updatedContent = true;
                        stickerSetLinkIcon = chatMessageCell.stickerSetIcons;
                        if (stickerSetLinkIcon != null) {
                        }
                        chatMessageCell.wasPinned = chatMessageCell.isPinned;
                        chatMessageCell.pinnedBottom = z;
                        chatMessageCell.pinnedTop = z2;
                        chatMessageCell.currentMessageObject = messageObject17;
                        chatMessageCell.currentMessagesGroup = groupedMessages;
                        chatMessageCell.lastTime = -2.0d;
                        chatMessageCell.lastPostAuthor = messageObject17.messageOwner.post_author;
                        if (!z51) {
                        }
                        chatMessageCell.isHighlightedAnimated = false;
                        chatMessageCell.wasTranscriptionOpen = false;
                        if (chatMessageCell.highlightedQuote) {
                        }
                        chatMessageCell.highlightedQuote = false;
                        chatMessageCell.widthBeforeNewTimeLine = -1;
                        groupedMessages2 = chatMessageCell.currentMessagesGroup;
                        if (groupedMessages2 != null) {
                            position = chatMessageCell.currentMessagesGroup.getPosition(chatMessageCell.currentMessageObject);
                            chatMessageCell.currentPosition = position;
                            if (position == null) {
                            }
                            groupedMessages3 = chatMessageCell.currentMessagesGroup;
                            if (groupedMessages3 == null) {
                                if (chatMessageCell.pinnedTop) {
                                    chatMessageCell.drawPinnedTop = chatMessageCell.pinnedTop && ((groupedMessagePosition16 = chatMessageCell.currentPosition) == null || (groupedMessagePosition16.flags & 4) != 0);
                                    if (chatMessageCell.pinnedBottom) {
                                        chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom && ((groupedMessagePosition15 = chatMessageCell.currentPosition) == null || (groupedMessagePosition15.flags & 8) != 0);
                                        boolean z532 = chatMessageCell.isPlayingRound;
                                        if (!chatMessageCell.isRoundVideo) {
                                            chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
                                            chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
                                            chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                                            chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
                                            chatMessageCell.photoImage.setGradientBitmap(null);
                                            chatMessageCell.photoImage.clearDecorators();
                                            chatMessageCell.photoImage.setInvalidateAll(false);
                                            chatMessageCell.linkPreviewY = 0;
                                            chatMessageCell.lastTranslated = messageObject17.translated;
                                            TLRPC$Message tLRPC$Message62 = messageObject17.messageOwner;
                                            chatMessageCell.lastSendState = tLRPC$Message62.send_state;
                                            chatMessageCell.lastDeleteDate = tLRPC$Message62.destroyTime;
                                            chatMessageCell.lastViewsCount = tLRPC$Message62.views;
                                            chatMessageCell.lastRepliesCount = getRepliesCount();
                                            if (z51) {
                                            }
                                            chatMessageCell.gamePreviewPressed = r2;
                                            chatMessageCell.sideButtonPressed = r2;
                                            chatMessageCell.pressedSideButton = r2;
                                            chatMessageCell.hasNewLineForTime = r2;
                                            chatMessageCell.flipImage = r2;
                                            if (chatMessageCell.isThreadChat) {
                                                chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
                                                if (needDrawAvatar()) {
                                                    chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                                                    needDrawAvatar = needDrawAvatar();
                                                    if (messageObject17.customAvatarDrawable == null) {
                                                        z7 = needDrawAvatar;
                                                        r22 = 0;
                                                        chatMessageCell.wasLayout = r22;
                                                        chatMessageCell.groupPhotoInvisible = r22;
                                                        chatMessageCell.animatingDrawVideoImageButton = r22;
                                                        chatMessageCell.drawVideoSize = r22;
                                                        chatMessageCell.canStreamVideo = r22;
                                                        chatMessageCell.animatingNoSound = r22;
                                                        if (!messageObject.isSponsored()) {
                                                        }
                                                        chatMessageCell.hasReplyQuote = r23;
                                                        chatMessageCell.isReplyQuote = r23;
                                                        chatMessageCell.replyNameLayout = null;
                                                        chatMessageCell.adminLayout = null;
                                                        chatMessageCell.boostCounterBounds = null;
                                                        chatMessageCell.boostCounterSpan = null;
                                                        chatMessageCell.checkOnlyButtonPressed = r23;
                                                        chatMessageCell.replyTextLayout = null;
                                                        AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                                                        chatMessageCell.lastReplyMessage = null;
                                                        chatMessageCell.hasEmbed = r23;
                                                        chatMessageCell.autoPlayingMedia = r23;
                                                        chatMessageCell.replyNameWidth = r23;
                                                        chatMessageCell.replyTextWidth = r23;
                                                        chatMessageCell.replyTextHeight = r23;
                                                        chatMessageCell.viaWidth = r23;
                                                        chatMessageCell.viaNameWidth = r23;
                                                        chatMessageCell.viaOnly = r23;
                                                        chatMessageCell.addedCaptionHeight = r23;
                                                        chatMessageCell.currentReplyPhoto = null;
                                                        chatMessageCell.currentUser = null;
                                                        chatMessageCell.currentChat = null;
                                                        chatMessageCell.currentViaBotUser = null;
                                                        chatMessageCell.instantViewLayout = null;
                                                        chatMessageCell.drawNameLayout = r23;
                                                        chatMessageCell.linkPreviewAbove = r23;
                                                        chatMessageCell.isSmallImage = r23;
                                                        chatMessageCell.lastLoadingSizeTotal = 0L;
                                                        if (chatMessageCell.scheduledInvalidate) {
                                                        }
                                                        chatMessageCell.links.clear();
                                                        chatMessageCell.pressedLink = null;
                                                        chatMessageCell.pressedEmoji = null;
                                                        chatMessageCell.pressedLinkType = -1;
                                                        messageObject17.forceUpdate = r23;
                                                        chatMessageCell.drawPhotoImage = r23;
                                                        chatMessageCell.drawMediaCheckBox = r23;
                                                        chatMessageCell.hasLinkPreview = r23;
                                                        chatMessageCell.hasOldCaptionPreview = r23;
                                                        chatMessageCell.hasGamePreview = r23;
                                                        chatMessageCell.hasInvoicePreview = r23;
                                                        chatMessageCell.commentButtonPressed = r23;
                                                        chatMessageCell.instantPressed = r23;
                                                        chatMessageCell.gradientDrawable = null;
                                                        chatMessageCell.setInstantButtonPressed(r23);
                                                        if (!z6) {
                                                            i140 = 0;
                                                            while (true) {
                                                                drawableArr = chatMessageCell.selectorDrawable;
                                                                if (i140 < drawableArr.length) {
                                                                }
                                                                i140++;
                                                                messageObject17 = messageObject;
                                                                z5 = z54;
                                                                i = 4;
                                                                f = 1.0f;
                                                                i3 = -1;
                                                                z49 = 1;
                                                                i2 = 5;
                                                            }
                                                        }
                                                        resetContactButtonsPressedState();
                                                        buttonBounce = chatMessageCell.titleLabelBounce;
                                                        if (buttonBounce != null) {
                                                        }
                                                        chatMessageCell.drawnContactButtonsFlag = r3;
                                                        chatMessageCell.drawContact = r3;
                                                        chatMessageCell.drawContactView = r3;
                                                        chatMessageCell.drawContactSendMessage = r3;
                                                        chatMessageCell.drawContactAdd = r3;
                                                        chatMessageCell.spoilerPressed = null;
                                                        chatMessageCell.isSpoilerRevealing = r3;
                                                        chatMessageCell.linkPreviewPressed = r3;
                                                        chatMessageCell.buttonPressed = r3;
                                                        chatMessageCell.additionalTimeOffsetY = r3;
                                                        chatMessageCell.miniButtonPressed = r3;
                                                        chatMessageCell.pressedBotButton = i3;
                                                        chatMessageCell.pressedVoteButton = i3;
                                                        chatMessageCell.pollHintPressed = r3;
                                                        chatMessageCell.psaHintPressed = r3;
                                                        chatMessageCell.linkPreviewHeight = r3;
                                                        chatMessageCell.mediaOffsetY = r3;
                                                        chatMessageCell.documentAttachType = r3;
                                                        chatMessageCell.documentAttach = null;
                                                        chatMessageCell.descriptionLayout = null;
                                                        chatMessageCell.titleLayout = null;
                                                        chatMessageCell.videoInfoLayout = null;
                                                        chatMessageCell.photosCountLayout = null;
                                                        chatMessageCell.siteNameLayout = null;
                                                        chatMessageCell.titleLabelLayout = null;
                                                        chatMessageCell.authorLayout = null;
                                                        chatMessageCell.captionFullWidth = r3;
                                                        chatMessageCell.captionLayout = null;
                                                        chatMessageCell.captionWidth = r3;
                                                        chatMessageCell.captionHeight = r3;
                                                        chatMessageCell.captionOffsetX = r3;
                                                        chatMessageCell.currentCaption = null;
                                                        chatMessageCell.captionLayout = null;
                                                        chatMessageCell.docTitleLayout = null;
                                                        chatMessageCell.drawImageButton = r3;
                                                        chatMessageCell.drawVideoImageButton = r3;
                                                        chatMessageCell.currentPhotoLocation = null;
                                                        chatMessageCell.currentPhotoThumbLocation = null;
                                                        chatMessageCell.currentPhotoObject = null;
                                                        chatMessageCell.photoParentObject = null;
                                                        chatMessageCell.currentPhotoObjectThumb = null;
                                                        chatMessageCell.currentPhotoObjectThumbStripped = null;
                                                        if (!z3) {
                                                        }
                                                        chatMessageCell.currentPhotoFilter = null;
                                                        chatMessageCell.buttonState = i3;
                                                        chatMessageCell.miniButtonState = i3;
                                                        chatMessageCell.hasMiniProgress = 0;
                                                        if (chatMessageCell.addedForTest) {
                                                            ImageLoader.getInstance().removeTestWebFile(chatMessageCell.currentUrl);
                                                        }
                                                        chatMessageCell.addedForTest = false;
                                                        chatMessageCell.photoNotSet = false;
                                                        chatMessageCell.drawBackground = z49;
                                                        chatMessageCell.drawName = false;
                                                        chatMessageCell.useSeekBarWaveform = false;
                                                        chatMessageCell.useTranscribeButton = false;
                                                        chatMessageCell.drawInstantView = false;
                                                        chatMessageCell.drawInstantViewType = 0;
                                                        chatMessageCell.instantViewButtonText = null;
                                                        chatMessageCell.drawForwardedName = false;
                                                        chatMessageCell.drawCommentButton = false;
                                                        chatMessageCell.photoImage.setSideClip(0.0f);
                                                        chatMessageCell.photoImage.setAspectFit(false);
                                                        chatMessageCell.gradientShader = null;
                                                        chatMessageCell.motionBackgroundDrawable = null;
                                                        chatMessageCell.imageBackgroundColor = 0;
                                                        chatMessageCell.imageBackgroundGradientColor1 = 0;
                                                        chatMessageCell.imageBackgroundGradientColor2 = 0;
                                                        chatMessageCell.imageBackgroundIntensity = 0.0f;
                                                        chatMessageCell.imageBackgroundGradientColor3 = 0;
                                                        chatMessageCell.imageBackgroundGradientRotation = 45;
                                                        chatMessageCell.imageBackgroundSideColor = 0;
                                                        chatMessageCell.mediaBackground = false;
                                                        expiredStoryView = chatMessageCell.expiredStoryView;
                                                        if (expiredStoryView != null) {
                                                        }
                                                        chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader22 = messageObject17.messageOwner.fwd_from;
                                                        if (tLRPC$MessageFwdHeader22 == null) {
                                                            chatMessageCell.hasPsaHint = z8;
                                                            if (z8) {
                                                            }
                                                            chatMessageCell.photoImage.setAlpha(f);
                                                            if (!z3) {
                                                            }
                                                            chatMessageCell.pollButtons.clear();
                                                            chatMessageCell.availableTimeWidth = 0;
                                                            chatMessageCell.photoImage.setForceLoading(false);
                                                            chatMessageCell.photoImage.setNeedsQualityThumb(false);
                                                            chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                                                            chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                                                            chatMessageCell.photoImage.setColorFilter(null);
                                                            chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                                                            if (!z51) {
                                                            }
                                                            messageObject17.reactionsChanged = false;
                                                            TLRPC$Message tLRPC$Message72 = messageObject17.messageOwner;
                                                            if (tLRPC$Message72 == null) {
                                                                if (messageObject.shouldDrawReactions()) {
                                                                    if (messageObject.shouldDrawReactionsInLayout()) {
                                                                    }
                                                                    if (chatMessageCell.currentPosition == null) {
                                                                    }
                                                                    if (z3) {
                                                                    }
                                                                    groupedMessages4 = chatMessageCell.currentMessagesGroup;
                                                                    if (groupedMessages4 != null) {
                                                                        isLinkedToChat = chatMessageCell.currentMessagesGroup.messages.get(0).isLinkedToChat(chatMessageCell.linkedChatId);
                                                                        if (chatMessageCell.hasDiscussion) {
                                                                            MessageObject.GroupedMessagePosition groupedMessagePosition182 = chatMessageCell.currentPosition;
                                                                            if (groupedMessagePosition182 == null) {
                                                                                chatMessageCell.commentLayout = cachedStaticLayout;
                                                                                chatMessageCell.drawCommentNumber = false;
                                                                                i4 = 2;
                                                                                if (messageObject17.type != 27) {
                                                                                }
                                                                                i7 = 0;
                                                                                z9 = true;
                                                                                if (chatMessageCell.currentPosition == null) {
                                                                                }
                                                                                i8 = 5;
                                                                                i11 = -1;
                                                                                i12 = 8;
                                                                                groupedMessagePosition = chatMessageCell.currentPosition;
                                                                                if (groupedMessagePosition != null) {
                                                                                }
                                                                                int i16422222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                                messageObject3 = chatMessageCell.currentMessageObject;
                                                                                if (messageObject3.eventId == 0) {
                                                                                }
                                                                                f3 = 0.0f;
                                                                                chatMessageCell.botButtons.clear();
                                                                                if (z51) {
                                                                                }
                                                                                if (!messageObject2.isRestrictedMessage) {
                                                                                }
                                                                                chatMessageCell.substractBackgroundHeight = 0;
                                                                                chatMessageCell.keyboardHeight = 0;
                                                                                if (chatMessageCell.drawCommentButton) {
                                                                                }
                                                                                z12 = chatMessageCell.drawPinnedBottom;
                                                                                if (z12) {
                                                                                }
                                                                                if (z12) {
                                                                                }
                                                                                if (!chatMessageCell.mediaBackground) {
                                                                                }
                                                                                if (messageObject2.type != 19) {
                                                                                }
                                                                                if (chatMessageCell.drawPhotoImage) {
                                                                                }
                                                                                if (chatMessageCell.documentAttachType != i8) {
                                                                                }
                                                                                calculateUnlockXY();
                                                                                if (z9) {
                                                                                }
                                                                                updateAnimatedEmojis();
                                                                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                                if (stickerSetLinkIcon2 != null) {
                                                                                }
                                                                                r25 = 0;
                                                                                if (z51) {
                                                                                }
                                                                                transcribeButton = chatMessageCell.transcribeButton;
                                                                                if (transcribeButton != null) {
                                                                                }
                                                                                updateWaveform();
                                                                                if (z51) {
                                                                                }
                                                                                z44 = true;
                                                                                z45 = false;
                                                                                z46 = false;
                                                                                chatMessageCell.updateButtonState(z45, z46, z44);
                                                                                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                                }
                                                                                chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                                if (chatMessageCellDelegate2 != null) {
                                                                                }
                                                                                chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                                chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                                chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                                chatMessageCell.highlightCaptionToSetStart = i11;
                                                                                updateFlagSecure();
                                                                            }
                                                                            repliesCount = getRepliesCount();
                                                                            if (!messageObject.shouldDrawWithoutBackground()) {
                                                                                chatMessageCell.drawCommentButton = z49;
                                                                                if (chatMessageCell.commentProgress == null) {
                                                                                }
                                                                                if (!chatMessageCell.isRepliesChat) {
                                                                                }
                                                                                i137 = 0;
                                                                                int ceil222 = (int) Math.ceil(Theme.chat_commentTextPaint.measureText(string9));
                                                                                chatMessageCell.totalCommentWidth = ceil222;
                                                                                chatMessageCell.commentWidth = ceil222;
                                                                                chatMessageCell.commentLayout = new CachedStaticLayout(new StaticLayout(string9, Theme.chat_commentTextPaint, chatMessageCell.commentWidth + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                if (repliesCount != 0) {
                                                                                }
                                                                                chatMessageCell.drawCommentNumber = false;
                                                                                animatedNumberLayout2 = chatMessageCell.commentNumberLayout;
                                                                                if (animatedNumberLayout2 != null) {
                                                                                }
                                                                                chatMessageCell.totalCommentWidth += AndroidUtilities.dp(i137 + 70);
                                                                                if (messageObject17.type != 27) {
                                                                                }
                                                                                i7 = 0;
                                                                                z9 = true;
                                                                                if (chatMessageCell.currentPosition == null) {
                                                                                }
                                                                                i8 = 5;
                                                                                i11 = -1;
                                                                                i12 = 8;
                                                                                groupedMessagePosition = chatMessageCell.currentPosition;
                                                                                if (groupedMessagePosition != null) {
                                                                                }
                                                                                int i164222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                                messageObject3 = chatMessageCell.currentMessageObject;
                                                                                if (messageObject3.eventId == 0) {
                                                                                }
                                                                                f3 = 0.0f;
                                                                                chatMessageCell.botButtons.clear();
                                                                                if (z51) {
                                                                                }
                                                                                if (!messageObject2.isRestrictedMessage) {
                                                                                }
                                                                                chatMessageCell.substractBackgroundHeight = 0;
                                                                                chatMessageCell.keyboardHeight = 0;
                                                                                if (chatMessageCell.drawCommentButton) {
                                                                                }
                                                                                z12 = chatMessageCell.drawPinnedBottom;
                                                                                if (z12) {
                                                                                }
                                                                                if (z12) {
                                                                                }
                                                                                if (!chatMessageCell.mediaBackground) {
                                                                                }
                                                                                if (messageObject2.type != 19) {
                                                                                }
                                                                                if (chatMessageCell.drawPhotoImage) {
                                                                                }
                                                                                if (chatMessageCell.documentAttachType != i8) {
                                                                                }
                                                                                calculateUnlockXY();
                                                                                if (z9) {
                                                                                }
                                                                                updateAnimatedEmojis();
                                                                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                                if (stickerSetLinkIcon2 != null) {
                                                                                }
                                                                                r25 = 0;
                                                                                if (z51) {
                                                                                }
                                                                                transcribeButton = chatMessageCell.transcribeButton;
                                                                                if (transcribeButton != null) {
                                                                                }
                                                                                updateWaveform();
                                                                                if (z51) {
                                                                                }
                                                                                z44 = true;
                                                                                z45 = false;
                                                                                z46 = false;
                                                                                chatMessageCell.updateButtonState(z45, z46, z44);
                                                                                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                                }
                                                                                chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                                if (chatMessageCellDelegate2 != null) {
                                                                                }
                                                                                chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                                chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                                chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                                chatMessageCell.highlightCaptionToSetStart = i11;
                                                                                updateFlagSecure();
                                                                            }
                                                                            if (!chatMessageCell.isRepliesChat) {
                                                                                String formatShortNumber2 = LocaleController.formatShortNumber(repliesCount, null);
                                                                                int ceil232 = (int) Math.ceil(Theme.chat_stickerCommentCountPaint.measureText(formatShortNumber2));
                                                                                chatMessageCell.totalCommentWidth = ceil232;
                                                                                chatMessageCell.commentWidth = ceil232;
                                                                                chatMessageCell.commentLayout = new CachedStaticLayout(new StaticLayout(formatShortNumber2, Theme.chat_stickerCommentCountPaint, chatMessageCell.commentWidth + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                                                                chatMessageCell.drawCommentNumber = false;
                                                                                chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                                                                i4 = 2;
                                                                                if (messageObject17.type != 27) {
                                                                                }
                                                                                i7 = 0;
                                                                                z9 = true;
                                                                                if (chatMessageCell.currentPosition == null) {
                                                                                }
                                                                                i8 = 5;
                                                                                i11 = -1;
                                                                                i12 = 8;
                                                                                groupedMessagePosition = chatMessageCell.currentPosition;
                                                                                if (groupedMessagePosition != null) {
                                                                                }
                                                                                int i1642222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                                messageObject3 = chatMessageCell.currentMessageObject;
                                                                                if (messageObject3.eventId == 0) {
                                                                                }
                                                                                f3 = 0.0f;
                                                                                chatMessageCell.botButtons.clear();
                                                                                if (z51) {
                                                                                }
                                                                                if (!messageObject2.isRestrictedMessage) {
                                                                                }
                                                                                chatMessageCell.substractBackgroundHeight = 0;
                                                                                chatMessageCell.keyboardHeight = 0;
                                                                                if (chatMessageCell.drawCommentButton) {
                                                                                }
                                                                                z12 = chatMessageCell.drawPinnedBottom;
                                                                                if (z12) {
                                                                                }
                                                                                if (z12) {
                                                                                }
                                                                                if (!chatMessageCell.mediaBackground) {
                                                                                }
                                                                                if (messageObject2.type != 19) {
                                                                                }
                                                                                if (chatMessageCell.drawPhotoImage) {
                                                                                }
                                                                                if (chatMessageCell.documentAttachType != i8) {
                                                                                }
                                                                                calculateUnlockXY();
                                                                                if (z9) {
                                                                                }
                                                                                updateAnimatedEmojis();
                                                                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                                if (stickerSetLinkIcon2 != null) {
                                                                                }
                                                                                r25 = 0;
                                                                                if (z51) {
                                                                                }
                                                                                transcribeButton = chatMessageCell.transcribeButton;
                                                                                if (transcribeButton != null) {
                                                                                }
                                                                                updateWaveform();
                                                                                if (z51) {
                                                                                }
                                                                                z44 = true;
                                                                                z45 = false;
                                                                                z46 = false;
                                                                                chatMessageCell.updateButtonState(z45, z46, z44);
                                                                                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                                }
                                                                                chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                                if (chatMessageCellDelegate2 != null) {
                                                                                }
                                                                                chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                                chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                                chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                                chatMessageCell.highlightCaptionToSetStart = i11;
                                                                                updateFlagSecure();
                                                                            }
                                                                            chatMessageCell.commentLayout = null;
                                                                            chatMessageCell.drawCommentNumber = false;
                                                                            chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                                                            i4 = 2;
                                                                            if (messageObject17.type != 27) {
                                                                            }
                                                                            i7 = 0;
                                                                            z9 = true;
                                                                            if (chatMessageCell.currentPosition == null) {
                                                                            }
                                                                            i8 = 5;
                                                                            i11 = -1;
                                                                            i12 = 8;
                                                                            groupedMessagePosition = chatMessageCell.currentPosition;
                                                                            if (groupedMessagePosition != null) {
                                                                            }
                                                                            int i16422222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                            messageObject3 = chatMessageCell.currentMessageObject;
                                                                            if (messageObject3.eventId == 0) {
                                                                            }
                                                                            f3 = 0.0f;
                                                                            chatMessageCell.botButtons.clear();
                                                                            if (z51) {
                                                                            }
                                                                            if (!messageObject2.isRestrictedMessage) {
                                                                            }
                                                                            chatMessageCell.substractBackgroundHeight = 0;
                                                                            chatMessageCell.keyboardHeight = 0;
                                                                            if (chatMessageCell.drawCommentButton) {
                                                                            }
                                                                            z12 = chatMessageCell.drawPinnedBottom;
                                                                            if (z12) {
                                                                            }
                                                                            if (z12) {
                                                                            }
                                                                            if (!chatMessageCell.mediaBackground) {
                                                                            }
                                                                            if (messageObject2.type != 19) {
                                                                            }
                                                                            if (chatMessageCell.drawPhotoImage) {
                                                                            }
                                                                            if (chatMessageCell.documentAttachType != i8) {
                                                                            }
                                                                            calculateUnlockXY();
                                                                            if (z9) {
                                                                            }
                                                                            updateAnimatedEmojis();
                                                                            stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                            if (stickerSetLinkIcon2 != null) {
                                                                            }
                                                                            r25 = 0;
                                                                            if (z51) {
                                                                            }
                                                                            transcribeButton = chatMessageCell.transcribeButton;
                                                                            if (transcribeButton != null) {
                                                                            }
                                                                            updateWaveform();
                                                                            if (z51) {
                                                                            }
                                                                            z44 = true;
                                                                            z45 = false;
                                                                            z46 = false;
                                                                            chatMessageCell.updateButtonState(z45, z46, z44);
                                                                            if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                            }
                                                                            chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                            if (chatMessageCellDelegate2 != null) {
                                                                            }
                                                                            chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                            chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                            chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                            chatMessageCell.highlightCaptionToSetStart = i11;
                                                                            updateFlagSecure();
                                                                        }
                                                                        MessageObject.GroupedMessagePosition groupedMessagePosition1822 = chatMessageCell.currentPosition;
                                                                        if (groupedMessagePosition1822 == null) {
                                                                        }
                                                                        repliesCount = getRepliesCount();
                                                                        if (!messageObject.shouldDrawWithoutBackground()) {
                                                                        }
                                                                        if (!chatMessageCell.isRepliesChat) {
                                                                        }
                                                                        chatMessageCell.commentLayout = null;
                                                                        chatMessageCell.drawCommentNumber = false;
                                                                        chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                                                        i4 = 2;
                                                                        if (messageObject17.type != 27) {
                                                                        }
                                                                        i7 = 0;
                                                                        z9 = true;
                                                                        if (chatMessageCell.currentPosition == null) {
                                                                        }
                                                                        i8 = 5;
                                                                        i11 = -1;
                                                                        i12 = 8;
                                                                        groupedMessagePosition = chatMessageCell.currentPosition;
                                                                        if (groupedMessagePosition != null) {
                                                                        }
                                                                        int i164222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                        messageObject3 = chatMessageCell.currentMessageObject;
                                                                        if (messageObject3.eventId == 0) {
                                                                        }
                                                                        f3 = 0.0f;
                                                                        chatMessageCell.botButtons.clear();
                                                                        if (z51) {
                                                                        }
                                                                        if (!messageObject2.isRestrictedMessage) {
                                                                        }
                                                                        chatMessageCell.substractBackgroundHeight = 0;
                                                                        chatMessageCell.keyboardHeight = 0;
                                                                        if (chatMessageCell.drawCommentButton) {
                                                                        }
                                                                        z12 = chatMessageCell.drawPinnedBottom;
                                                                        if (z12) {
                                                                        }
                                                                        if (z12) {
                                                                        }
                                                                        if (!chatMessageCell.mediaBackground) {
                                                                        }
                                                                        if (messageObject2.type != 19) {
                                                                        }
                                                                        if (chatMessageCell.drawPhotoImage) {
                                                                        }
                                                                        if (chatMessageCell.documentAttachType != i8) {
                                                                        }
                                                                        calculateUnlockXY();
                                                                        if (z9) {
                                                                        }
                                                                        updateAnimatedEmojis();
                                                                        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                        if (stickerSetLinkIcon2 != null) {
                                                                        }
                                                                        r25 = 0;
                                                                        if (z51) {
                                                                        }
                                                                        transcribeButton = chatMessageCell.transcribeButton;
                                                                        if (transcribeButton != null) {
                                                                        }
                                                                        updateWaveform();
                                                                        if (z51) {
                                                                        }
                                                                        z44 = true;
                                                                        z45 = false;
                                                                        z46 = false;
                                                                        chatMessageCell.updateButtonState(z45, z46, z44);
                                                                        if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                        }
                                                                        chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                        if (chatMessageCellDelegate2 != null) {
                                                                        }
                                                                        chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                        chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                        chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                        chatMessageCell.highlightCaptionToSetStart = i11;
                                                                        updateFlagSecure();
                                                                    }
                                                                    isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                                                                    if (chatMessageCell.hasDiscussion) {
                                                                    }
                                                                    MessageObject.GroupedMessagePosition groupedMessagePosition18222 = chatMessageCell.currentPosition;
                                                                    if (groupedMessagePosition18222 == null) {
                                                                    }
                                                                    repliesCount = getRepliesCount();
                                                                    if (!messageObject.shouldDrawWithoutBackground()) {
                                                                    }
                                                                    if (!chatMessageCell.isRepliesChat) {
                                                                    }
                                                                    chatMessageCell.commentLayout = null;
                                                                    chatMessageCell.drawCommentNumber = false;
                                                                    chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                                                    i4 = 2;
                                                                    if (messageObject17.type != 27) {
                                                                    }
                                                                    i7 = 0;
                                                                    z9 = true;
                                                                    if (chatMessageCell.currentPosition == null) {
                                                                    }
                                                                    i8 = 5;
                                                                    i11 = -1;
                                                                    i12 = 8;
                                                                    groupedMessagePosition = chatMessageCell.currentPosition;
                                                                    if (groupedMessagePosition != null) {
                                                                    }
                                                                    int i1642222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                    messageObject3 = chatMessageCell.currentMessageObject;
                                                                    if (messageObject3.eventId == 0) {
                                                                    }
                                                                    f3 = 0.0f;
                                                                    chatMessageCell.botButtons.clear();
                                                                    if (z51) {
                                                                    }
                                                                    if (!messageObject2.isRestrictedMessage) {
                                                                    }
                                                                    chatMessageCell.substractBackgroundHeight = 0;
                                                                    chatMessageCell.keyboardHeight = 0;
                                                                    if (chatMessageCell.drawCommentButton) {
                                                                    }
                                                                    z12 = chatMessageCell.drawPinnedBottom;
                                                                    if (z12) {
                                                                    }
                                                                    if (z12) {
                                                                    }
                                                                    if (!chatMessageCell.mediaBackground) {
                                                                    }
                                                                    if (messageObject2.type != 19) {
                                                                    }
                                                                    if (chatMessageCell.drawPhotoImage) {
                                                                    }
                                                                    if (chatMessageCell.documentAttachType != i8) {
                                                                    }
                                                                    calculateUnlockXY();
                                                                    if (z9) {
                                                                    }
                                                                    updateAnimatedEmojis();
                                                                    stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                    if (stickerSetLinkIcon2 != null) {
                                                                    }
                                                                    r25 = 0;
                                                                    if (z51) {
                                                                    }
                                                                    transcribeButton = chatMessageCell.transcribeButton;
                                                                    if (transcribeButton != null) {
                                                                    }
                                                                    updateWaveform();
                                                                    if (z51) {
                                                                    }
                                                                    z44 = true;
                                                                    z45 = false;
                                                                    z46 = false;
                                                                    chatMessageCell.updateButtonState(z45, z46, z44);
                                                                    if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                    }
                                                                    chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                    if (chatMessageCellDelegate2 != null) {
                                                                    }
                                                                    chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                    chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                    chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                    chatMessageCell.highlightCaptionToSetStart = i11;
                                                                    updateFlagSecure();
                                                                }
                                                                chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                                                                if (z3) {
                                                                }
                                                                groupedMessages4 = chatMessageCell.currentMessagesGroup;
                                                                if (groupedMessages4 != null) {
                                                                }
                                                                isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                                                                if (chatMessageCell.hasDiscussion) {
                                                                }
                                                                MessageObject.GroupedMessagePosition groupedMessagePosition182222 = chatMessageCell.currentPosition;
                                                                if (groupedMessagePosition182222 == null) {
                                                                }
                                                                repliesCount = getRepliesCount();
                                                                if (!messageObject.shouldDrawWithoutBackground()) {
                                                                }
                                                                if (!chatMessageCell.isRepliesChat) {
                                                                }
                                                                chatMessageCell.commentLayout = null;
                                                                chatMessageCell.drawCommentNumber = false;
                                                                chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                                                i4 = 2;
                                                                if (messageObject17.type != 27) {
                                                                }
                                                                i7 = 0;
                                                                z9 = true;
                                                                if (chatMessageCell.currentPosition == null) {
                                                                }
                                                                i8 = 5;
                                                                i11 = -1;
                                                                i12 = 8;
                                                                groupedMessagePosition = chatMessageCell.currentPosition;
                                                                if (groupedMessagePosition != null) {
                                                                }
                                                                int i16422222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                                messageObject3 = chatMessageCell.currentMessageObject;
                                                                if (messageObject3.eventId == 0) {
                                                                }
                                                                f3 = 0.0f;
                                                                chatMessageCell.botButtons.clear();
                                                                if (z51) {
                                                                }
                                                                if (!messageObject2.isRestrictedMessage) {
                                                                }
                                                                chatMessageCell.substractBackgroundHeight = 0;
                                                                chatMessageCell.keyboardHeight = 0;
                                                                if (chatMessageCell.drawCommentButton) {
                                                                }
                                                                z12 = chatMessageCell.drawPinnedBottom;
                                                                if (z12) {
                                                                }
                                                                if (z12) {
                                                                }
                                                                if (!chatMessageCell.mediaBackground) {
                                                                }
                                                                if (messageObject2.type != 19) {
                                                                }
                                                                if (chatMessageCell.drawPhotoImage) {
                                                                }
                                                                if (chatMessageCell.documentAttachType != i8) {
                                                                }
                                                                calculateUnlockXY();
                                                                if (z9) {
                                                                }
                                                                updateAnimatedEmojis();
                                                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                                if (stickerSetLinkIcon2 != null) {
                                                                }
                                                                r25 = 0;
                                                                if (z51) {
                                                                }
                                                                transcribeButton = chatMessageCell.transcribeButton;
                                                                if (transcribeButton != null) {
                                                                }
                                                                updateWaveform();
                                                                if (z51) {
                                                                }
                                                                z44 = true;
                                                                z45 = false;
                                                                z46 = false;
                                                                chatMessageCell.updateButtonState(z45, z46, z44);
                                                                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                                }
                                                                chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                                if (chatMessageCellDelegate2 != null) {
                                                                }
                                                                chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                                chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                                chatMessageCell.highlightCaptionToSetEnd = i11;
                                                                chatMessageCell.highlightCaptionToSetStart = i11;
                                                                updateFlagSecure();
                                                            }
                                                            if (messageObject.shouldDrawReactions()) {
                                                            }
                                                            chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                                                            if (z3) {
                                                            }
                                                            groupedMessages4 = chatMessageCell.currentMessagesGroup;
                                                            if (groupedMessages4 != null) {
                                                            }
                                                            isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                                                            if (chatMessageCell.hasDiscussion) {
                                                            }
                                                            MessageObject.GroupedMessagePosition groupedMessagePosition1822222 = chatMessageCell.currentPosition;
                                                            if (groupedMessagePosition1822222 == null) {
                                                            }
                                                            repliesCount = getRepliesCount();
                                                            if (!messageObject.shouldDrawWithoutBackground()) {
                                                            }
                                                            if (!chatMessageCell.isRepliesChat) {
                                                            }
                                                            chatMessageCell.commentLayout = null;
                                                            chatMessageCell.drawCommentNumber = false;
                                                            chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                                            i4 = 2;
                                                            if (messageObject17.type != 27) {
                                                            }
                                                            i7 = 0;
                                                            z9 = true;
                                                            if (chatMessageCell.currentPosition == null) {
                                                            }
                                                            i8 = 5;
                                                            i11 = -1;
                                                            i12 = 8;
                                                            groupedMessagePosition = chatMessageCell.currentPosition;
                                                            if (groupedMessagePosition != null) {
                                                            }
                                                            int i164222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                            messageObject3 = chatMessageCell.currentMessageObject;
                                                            if (messageObject3.eventId == 0) {
                                                            }
                                                            f3 = 0.0f;
                                                            chatMessageCell.botButtons.clear();
                                                            if (z51) {
                                                            }
                                                            if (!messageObject2.isRestrictedMessage) {
                                                            }
                                                            chatMessageCell.substractBackgroundHeight = 0;
                                                            chatMessageCell.keyboardHeight = 0;
                                                            if (chatMessageCell.drawCommentButton) {
                                                            }
                                                            z12 = chatMessageCell.drawPinnedBottom;
                                                            if (z12) {
                                                            }
                                                            if (z12) {
                                                            }
                                                            if (!chatMessageCell.mediaBackground) {
                                                            }
                                                            if (messageObject2.type != 19) {
                                                            }
                                                            if (chatMessageCell.drawPhotoImage) {
                                                            }
                                                            if (chatMessageCell.documentAttachType != i8) {
                                                            }
                                                            calculateUnlockXY();
                                                            if (z9) {
                                                            }
                                                            updateAnimatedEmojis();
                                                            stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                            if (stickerSetLinkIcon2 != null) {
                                                            }
                                                            r25 = 0;
                                                            if (z51) {
                                                            }
                                                            transcribeButton = chatMessageCell.transcribeButton;
                                                            if (transcribeButton != null) {
                                                            }
                                                            updateWaveform();
                                                            if (z51) {
                                                            }
                                                            z44 = true;
                                                            z45 = false;
                                                            z46 = false;
                                                            chatMessageCell.updateButtonState(z45, z46, z44);
                                                            if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                            }
                                                            chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                            if (chatMessageCellDelegate2 != null) {
                                                            }
                                                            chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                            chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                            chatMessageCell.highlightCaptionToSetEnd = i11;
                                                            chatMessageCell.highlightCaptionToSetStart = i11;
                                                            updateFlagSecure();
                                                        }
                                                        chatMessageCell.hasPsaHint = z8;
                                                        if (z8) {
                                                        }
                                                        chatMessageCell.photoImage.setAlpha(f);
                                                        if (!z3) {
                                                        }
                                                        chatMessageCell.pollButtons.clear();
                                                        chatMessageCell.availableTimeWidth = 0;
                                                        chatMessageCell.photoImage.setForceLoading(false);
                                                        chatMessageCell.photoImage.setNeedsQualityThumb(false);
                                                        chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                                                        chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                                                        chatMessageCell.photoImage.setColorFilter(null);
                                                        chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                                                        if (!z51) {
                                                        }
                                                        messageObject17.reactionsChanged = false;
                                                        TLRPC$Message tLRPC$Message722 = messageObject17.messageOwner;
                                                        if (tLRPC$Message722 == null) {
                                                        }
                                                        if (messageObject.shouldDrawReactions()) {
                                                        }
                                                        chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                                                        if (z3) {
                                                        }
                                                        groupedMessages4 = chatMessageCell.currentMessagesGroup;
                                                        if (groupedMessages4 != null) {
                                                        }
                                                        isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                                                        if (chatMessageCell.hasDiscussion) {
                                                        }
                                                        MessageObject.GroupedMessagePosition groupedMessagePosition18222222 = chatMessageCell.currentPosition;
                                                        if (groupedMessagePosition18222222 == null) {
                                                        }
                                                        repliesCount = getRepliesCount();
                                                        if (!messageObject.shouldDrawWithoutBackground()) {
                                                        }
                                                        if (!chatMessageCell.isRepliesChat) {
                                                        }
                                                        chatMessageCell.commentLayout = null;
                                                        chatMessageCell.drawCommentNumber = false;
                                                        chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                                        i4 = 2;
                                                        if (messageObject17.type != 27) {
                                                        }
                                                        i7 = 0;
                                                        z9 = true;
                                                        if (chatMessageCell.currentPosition == null) {
                                                        }
                                                        i8 = 5;
                                                        i11 = -1;
                                                        i12 = 8;
                                                        groupedMessagePosition = chatMessageCell.currentPosition;
                                                        if (groupedMessagePosition != null) {
                                                        }
                                                        int i1642222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                        messageObject3 = chatMessageCell.currentMessageObject;
                                                        if (messageObject3.eventId == 0) {
                                                        }
                                                        f3 = 0.0f;
                                                        chatMessageCell.botButtons.clear();
                                                        if (z51) {
                                                        }
                                                        if (!messageObject2.isRestrictedMessage) {
                                                        }
                                                        chatMessageCell.substractBackgroundHeight = 0;
                                                        chatMessageCell.keyboardHeight = 0;
                                                        if (chatMessageCell.drawCommentButton) {
                                                        }
                                                        z12 = chatMessageCell.drawPinnedBottom;
                                                        if (z12) {
                                                        }
                                                        if (z12) {
                                                        }
                                                        if (!chatMessageCell.mediaBackground) {
                                                        }
                                                        if (messageObject2.type != 19) {
                                                        }
                                                        if (chatMessageCell.drawPhotoImage) {
                                                        }
                                                        if (chatMessageCell.documentAttachType != i8) {
                                                        }
                                                        calculateUnlockXY();
                                                        if (z9) {
                                                        }
                                                        updateAnimatedEmojis();
                                                        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                        if (stickerSetLinkIcon2 != null) {
                                                        }
                                                        r25 = 0;
                                                        if (z51) {
                                                        }
                                                        transcribeButton = chatMessageCell.transcribeButton;
                                                        if (transcribeButton != null) {
                                                        }
                                                        updateWaveform();
                                                        if (z51) {
                                                        }
                                                        z44 = true;
                                                        z45 = false;
                                                        z46 = false;
                                                        chatMessageCell.updateButtonState(z45, z46, z44);
                                                        if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                        }
                                                        chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                        if (chatMessageCellDelegate2 != null) {
                                                        }
                                                        chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                        chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                        chatMessageCell.highlightCaptionToSetEnd = i11;
                                                        chatMessageCell.highlightCaptionToSetStart = i11;
                                                        updateFlagSecure();
                                                    }
                                                    chatMessageCell.isAvatarVisible = true;
                                                    r22 = 0;
                                                    z7 = true;
                                                    chatMessageCell.wasLayout = r22;
                                                    chatMessageCell.groupPhotoInvisible = r22;
                                                    chatMessageCell.animatingDrawVideoImageButton = r22;
                                                    chatMessageCell.drawVideoSize = r22;
                                                    chatMessageCell.canStreamVideo = r22;
                                                    chatMessageCell.animatingNoSound = r22;
                                                    if (!messageObject.isSponsored()) {
                                                    }
                                                    chatMessageCell.hasReplyQuote = r23;
                                                    chatMessageCell.isReplyQuote = r23;
                                                    chatMessageCell.replyNameLayout = null;
                                                    chatMessageCell.adminLayout = null;
                                                    chatMessageCell.boostCounterBounds = null;
                                                    chatMessageCell.boostCounterSpan = null;
                                                    chatMessageCell.checkOnlyButtonPressed = r23;
                                                    chatMessageCell.replyTextLayout = null;
                                                    AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                                                    chatMessageCell.lastReplyMessage = null;
                                                    chatMessageCell.hasEmbed = r23;
                                                    chatMessageCell.autoPlayingMedia = r23;
                                                    chatMessageCell.replyNameWidth = r23;
                                                    chatMessageCell.replyTextWidth = r23;
                                                    chatMessageCell.replyTextHeight = r23;
                                                    chatMessageCell.viaWidth = r23;
                                                    chatMessageCell.viaNameWidth = r23;
                                                    chatMessageCell.viaOnly = r23;
                                                    chatMessageCell.addedCaptionHeight = r23;
                                                    chatMessageCell.currentReplyPhoto = null;
                                                    chatMessageCell.currentUser = null;
                                                    chatMessageCell.currentChat = null;
                                                    chatMessageCell.currentViaBotUser = null;
                                                    chatMessageCell.instantViewLayout = null;
                                                    chatMessageCell.drawNameLayout = r23;
                                                    chatMessageCell.linkPreviewAbove = r23;
                                                    chatMessageCell.isSmallImage = r23;
                                                    chatMessageCell.lastLoadingSizeTotal = 0L;
                                                    if (chatMessageCell.scheduledInvalidate) {
                                                    }
                                                    chatMessageCell.links.clear();
                                                    chatMessageCell.pressedLink = null;
                                                    chatMessageCell.pressedEmoji = null;
                                                    chatMessageCell.pressedLinkType = -1;
                                                    messageObject17.forceUpdate = r23;
                                                    chatMessageCell.drawPhotoImage = r23;
                                                    chatMessageCell.drawMediaCheckBox = r23;
                                                    chatMessageCell.hasLinkPreview = r23;
                                                    chatMessageCell.hasOldCaptionPreview = r23;
                                                    chatMessageCell.hasGamePreview = r23;
                                                    chatMessageCell.hasInvoicePreview = r23;
                                                    chatMessageCell.commentButtonPressed = r23;
                                                    chatMessageCell.instantPressed = r23;
                                                    chatMessageCell.gradientDrawable = null;
                                                    chatMessageCell.setInstantButtonPressed(r23);
                                                    if (!z6) {
                                                    }
                                                    resetContactButtonsPressedState();
                                                    buttonBounce = chatMessageCell.titleLabelBounce;
                                                    if (buttonBounce != null) {
                                                    }
                                                    chatMessageCell.drawnContactButtonsFlag = r3;
                                                    chatMessageCell.drawContact = r3;
                                                    chatMessageCell.drawContactView = r3;
                                                    chatMessageCell.drawContactSendMessage = r3;
                                                    chatMessageCell.drawContactAdd = r3;
                                                    chatMessageCell.spoilerPressed = null;
                                                    chatMessageCell.isSpoilerRevealing = r3;
                                                    chatMessageCell.linkPreviewPressed = r3;
                                                    chatMessageCell.buttonPressed = r3;
                                                    chatMessageCell.additionalTimeOffsetY = r3;
                                                    chatMessageCell.miniButtonPressed = r3;
                                                    chatMessageCell.pressedBotButton = i3;
                                                    chatMessageCell.pressedVoteButton = i3;
                                                    chatMessageCell.pollHintPressed = r3;
                                                    chatMessageCell.psaHintPressed = r3;
                                                    chatMessageCell.linkPreviewHeight = r3;
                                                    chatMessageCell.mediaOffsetY = r3;
                                                    chatMessageCell.documentAttachType = r3;
                                                    chatMessageCell.documentAttach = null;
                                                    chatMessageCell.descriptionLayout = null;
                                                    chatMessageCell.titleLayout = null;
                                                    chatMessageCell.videoInfoLayout = null;
                                                    chatMessageCell.photosCountLayout = null;
                                                    chatMessageCell.siteNameLayout = null;
                                                    chatMessageCell.titleLabelLayout = null;
                                                    chatMessageCell.authorLayout = null;
                                                    chatMessageCell.captionFullWidth = r3;
                                                    chatMessageCell.captionLayout = null;
                                                    chatMessageCell.captionWidth = r3;
                                                    chatMessageCell.captionHeight = r3;
                                                    chatMessageCell.captionOffsetX = r3;
                                                    chatMessageCell.currentCaption = null;
                                                    chatMessageCell.captionLayout = null;
                                                    chatMessageCell.docTitleLayout = null;
                                                    chatMessageCell.drawImageButton = r3;
                                                    chatMessageCell.drawVideoImageButton = r3;
                                                    chatMessageCell.currentPhotoLocation = null;
                                                    chatMessageCell.currentPhotoThumbLocation = null;
                                                    chatMessageCell.currentPhotoObject = null;
                                                    chatMessageCell.photoParentObject = null;
                                                    chatMessageCell.currentPhotoObjectThumb = null;
                                                    chatMessageCell.currentPhotoObjectThumbStripped = null;
                                                    if (!z3) {
                                                    }
                                                    chatMessageCell.currentPhotoFilter = null;
                                                    chatMessageCell.buttonState = i3;
                                                    chatMessageCell.miniButtonState = i3;
                                                    chatMessageCell.hasMiniProgress = 0;
                                                    if (chatMessageCell.addedForTest) {
                                                    }
                                                    chatMessageCell.addedForTest = false;
                                                    chatMessageCell.photoNotSet = false;
                                                    chatMessageCell.drawBackground = z49;
                                                    chatMessageCell.drawName = false;
                                                    chatMessageCell.useSeekBarWaveform = false;
                                                    chatMessageCell.useTranscribeButton = false;
                                                    chatMessageCell.drawInstantView = false;
                                                    chatMessageCell.drawInstantViewType = 0;
                                                    chatMessageCell.instantViewButtonText = null;
                                                    chatMessageCell.drawForwardedName = false;
                                                    chatMessageCell.drawCommentButton = false;
                                                    chatMessageCell.photoImage.setSideClip(0.0f);
                                                    chatMessageCell.photoImage.setAspectFit(false);
                                                    chatMessageCell.gradientShader = null;
                                                    chatMessageCell.motionBackgroundDrawable = null;
                                                    chatMessageCell.imageBackgroundColor = 0;
                                                    chatMessageCell.imageBackgroundGradientColor1 = 0;
                                                    chatMessageCell.imageBackgroundGradientColor2 = 0;
                                                    chatMessageCell.imageBackgroundIntensity = 0.0f;
                                                    chatMessageCell.imageBackgroundGradientColor3 = 0;
                                                    chatMessageCell.imageBackgroundGradientRotation = 45;
                                                    chatMessageCell.imageBackgroundSideColor = 0;
                                                    chatMessageCell.mediaBackground = false;
                                                    expiredStoryView = chatMessageCell.expiredStoryView;
                                                    if (expiredStoryView != null) {
                                                    }
                                                    chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                                                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader222 = messageObject17.messageOwner.fwd_from;
                                                    if (tLRPC$MessageFwdHeader222 == null) {
                                                    }
                                                    chatMessageCell.hasPsaHint = z8;
                                                    if (z8) {
                                                    }
                                                    chatMessageCell.photoImage.setAlpha(f);
                                                    if (!z3) {
                                                    }
                                                    chatMessageCell.pollButtons.clear();
                                                    chatMessageCell.availableTimeWidth = 0;
                                                    chatMessageCell.photoImage.setForceLoading(false);
                                                    chatMessageCell.photoImage.setNeedsQualityThumb(false);
                                                    chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                                                    chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                                                    chatMessageCell.photoImage.setColorFilter(null);
                                                    chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                                                    if (!z51) {
                                                    }
                                                    messageObject17.reactionsChanged = false;
                                                    TLRPC$Message tLRPC$Message7222 = messageObject17.messageOwner;
                                                    if (tLRPC$Message7222 == null) {
                                                    }
                                                    if (messageObject.shouldDrawReactions()) {
                                                    }
                                                    chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                                                    if (z3) {
                                                    }
                                                    groupedMessages4 = chatMessageCell.currentMessagesGroup;
                                                    if (groupedMessages4 != null) {
                                                    }
                                                    isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                                                    if (chatMessageCell.hasDiscussion) {
                                                    }
                                                    MessageObject.GroupedMessagePosition groupedMessagePosition182222222 = chatMessageCell.currentPosition;
                                                    if (groupedMessagePosition182222222 == null) {
                                                    }
                                                    repliesCount = getRepliesCount();
                                                    if (!messageObject.shouldDrawWithoutBackground()) {
                                                    }
                                                    if (!chatMessageCell.isRepliesChat) {
                                                    }
                                                    chatMessageCell.commentLayout = null;
                                                    chatMessageCell.drawCommentNumber = false;
                                                    chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                                    i4 = 2;
                                                    if (messageObject17.type != 27) {
                                                    }
                                                    i7 = 0;
                                                    z9 = true;
                                                    if (chatMessageCell.currentPosition == null) {
                                                    }
                                                    i8 = 5;
                                                    i11 = -1;
                                                    i12 = 8;
                                                    groupedMessagePosition = chatMessageCell.currentPosition;
                                                    if (groupedMessagePosition != null) {
                                                    }
                                                    int i16422222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                    messageObject3 = chatMessageCell.currentMessageObject;
                                                    if (messageObject3.eventId == 0) {
                                                    }
                                                    f3 = 0.0f;
                                                    chatMessageCell.botButtons.clear();
                                                    if (z51) {
                                                    }
                                                    if (!messageObject2.isRestrictedMessage) {
                                                    }
                                                    chatMessageCell.substractBackgroundHeight = 0;
                                                    chatMessageCell.keyboardHeight = 0;
                                                    if (chatMessageCell.drawCommentButton) {
                                                    }
                                                    z12 = chatMessageCell.drawPinnedBottom;
                                                    if (z12) {
                                                    }
                                                    if (z12) {
                                                    }
                                                    if (!chatMessageCell.mediaBackground) {
                                                    }
                                                    if (messageObject2.type != 19) {
                                                    }
                                                    if (chatMessageCell.drawPhotoImage) {
                                                    }
                                                    if (chatMessageCell.documentAttachType != i8) {
                                                    }
                                                    calculateUnlockXY();
                                                    if (z9) {
                                                    }
                                                    updateAnimatedEmojis();
                                                    stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                    if (stickerSetLinkIcon2 != null) {
                                                    }
                                                    r25 = 0;
                                                    if (z51) {
                                                    }
                                                    transcribeButton = chatMessageCell.transcribeButton;
                                                    if (transcribeButton != null) {
                                                    }
                                                    updateWaveform();
                                                    if (z51) {
                                                    }
                                                    z44 = true;
                                                    z45 = false;
                                                    z46 = false;
                                                    chatMessageCell.updateButtonState(z45, z46, z44);
                                                    if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                    }
                                                    chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                    if (chatMessageCellDelegate2 != null) {
                                                    }
                                                    chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                    chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                    chatMessageCell.highlightCaptionToSetEnd = i11;
                                                    chatMessageCell.highlightCaptionToSetStart = i11;
                                                    updateFlagSecure();
                                                }
                                                chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                                                needDrawAvatar = needDrawAvatar();
                                                if (messageObject17.customAvatarDrawable == null) {
                                                }
                                                chatMessageCell.isAvatarVisible = true;
                                                r22 = 0;
                                                z7 = true;
                                                chatMessageCell.wasLayout = r22;
                                                chatMessageCell.groupPhotoInvisible = r22;
                                                chatMessageCell.animatingDrawVideoImageButton = r22;
                                                chatMessageCell.drawVideoSize = r22;
                                                chatMessageCell.canStreamVideo = r22;
                                                chatMessageCell.animatingNoSound = r22;
                                                if (!messageObject.isSponsored()) {
                                                }
                                                chatMessageCell.hasReplyQuote = r23;
                                                chatMessageCell.isReplyQuote = r23;
                                                chatMessageCell.replyNameLayout = null;
                                                chatMessageCell.adminLayout = null;
                                                chatMessageCell.boostCounterBounds = null;
                                                chatMessageCell.boostCounterSpan = null;
                                                chatMessageCell.checkOnlyButtonPressed = r23;
                                                chatMessageCell.replyTextLayout = null;
                                                AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                                                chatMessageCell.lastReplyMessage = null;
                                                chatMessageCell.hasEmbed = r23;
                                                chatMessageCell.autoPlayingMedia = r23;
                                                chatMessageCell.replyNameWidth = r23;
                                                chatMessageCell.replyTextWidth = r23;
                                                chatMessageCell.replyTextHeight = r23;
                                                chatMessageCell.viaWidth = r23;
                                                chatMessageCell.viaNameWidth = r23;
                                                chatMessageCell.viaOnly = r23;
                                                chatMessageCell.addedCaptionHeight = r23;
                                                chatMessageCell.currentReplyPhoto = null;
                                                chatMessageCell.currentUser = null;
                                                chatMessageCell.currentChat = null;
                                                chatMessageCell.currentViaBotUser = null;
                                                chatMessageCell.instantViewLayout = null;
                                                chatMessageCell.drawNameLayout = r23;
                                                chatMessageCell.linkPreviewAbove = r23;
                                                chatMessageCell.isSmallImage = r23;
                                                chatMessageCell.lastLoadingSizeTotal = 0L;
                                                if (chatMessageCell.scheduledInvalidate) {
                                                }
                                                chatMessageCell.links.clear();
                                                chatMessageCell.pressedLink = null;
                                                chatMessageCell.pressedEmoji = null;
                                                chatMessageCell.pressedLinkType = -1;
                                                messageObject17.forceUpdate = r23;
                                                chatMessageCell.drawPhotoImage = r23;
                                                chatMessageCell.drawMediaCheckBox = r23;
                                                chatMessageCell.hasLinkPreview = r23;
                                                chatMessageCell.hasOldCaptionPreview = r23;
                                                chatMessageCell.hasGamePreview = r23;
                                                chatMessageCell.hasInvoicePreview = r23;
                                                chatMessageCell.commentButtonPressed = r23;
                                                chatMessageCell.instantPressed = r23;
                                                chatMessageCell.gradientDrawable = null;
                                                chatMessageCell.setInstantButtonPressed(r23);
                                                if (!z6) {
                                                }
                                                resetContactButtonsPressedState();
                                                buttonBounce = chatMessageCell.titleLabelBounce;
                                                if (buttonBounce != null) {
                                                }
                                                chatMessageCell.drawnContactButtonsFlag = r3;
                                                chatMessageCell.drawContact = r3;
                                                chatMessageCell.drawContactView = r3;
                                                chatMessageCell.drawContactSendMessage = r3;
                                                chatMessageCell.drawContactAdd = r3;
                                                chatMessageCell.spoilerPressed = null;
                                                chatMessageCell.isSpoilerRevealing = r3;
                                                chatMessageCell.linkPreviewPressed = r3;
                                                chatMessageCell.buttonPressed = r3;
                                                chatMessageCell.additionalTimeOffsetY = r3;
                                                chatMessageCell.miniButtonPressed = r3;
                                                chatMessageCell.pressedBotButton = i3;
                                                chatMessageCell.pressedVoteButton = i3;
                                                chatMessageCell.pollHintPressed = r3;
                                                chatMessageCell.psaHintPressed = r3;
                                                chatMessageCell.linkPreviewHeight = r3;
                                                chatMessageCell.mediaOffsetY = r3;
                                                chatMessageCell.documentAttachType = r3;
                                                chatMessageCell.documentAttach = null;
                                                chatMessageCell.descriptionLayout = null;
                                                chatMessageCell.titleLayout = null;
                                                chatMessageCell.videoInfoLayout = null;
                                                chatMessageCell.photosCountLayout = null;
                                                chatMessageCell.siteNameLayout = null;
                                                chatMessageCell.titleLabelLayout = null;
                                                chatMessageCell.authorLayout = null;
                                                chatMessageCell.captionFullWidth = r3;
                                                chatMessageCell.captionLayout = null;
                                                chatMessageCell.captionWidth = r3;
                                                chatMessageCell.captionHeight = r3;
                                                chatMessageCell.captionOffsetX = r3;
                                                chatMessageCell.currentCaption = null;
                                                chatMessageCell.captionLayout = null;
                                                chatMessageCell.docTitleLayout = null;
                                                chatMessageCell.drawImageButton = r3;
                                                chatMessageCell.drawVideoImageButton = r3;
                                                chatMessageCell.currentPhotoLocation = null;
                                                chatMessageCell.currentPhotoThumbLocation = null;
                                                chatMessageCell.currentPhotoObject = null;
                                                chatMessageCell.photoParentObject = null;
                                                chatMessageCell.currentPhotoObjectThumb = null;
                                                chatMessageCell.currentPhotoObjectThumbStripped = null;
                                                if (!z3) {
                                                }
                                                chatMessageCell.currentPhotoFilter = null;
                                                chatMessageCell.buttonState = i3;
                                                chatMessageCell.miniButtonState = i3;
                                                chatMessageCell.hasMiniProgress = 0;
                                                if (chatMessageCell.addedForTest) {
                                                }
                                                chatMessageCell.addedForTest = false;
                                                chatMessageCell.photoNotSet = false;
                                                chatMessageCell.drawBackground = z49;
                                                chatMessageCell.drawName = false;
                                                chatMessageCell.useSeekBarWaveform = false;
                                                chatMessageCell.useTranscribeButton = false;
                                                chatMessageCell.drawInstantView = false;
                                                chatMessageCell.drawInstantViewType = 0;
                                                chatMessageCell.instantViewButtonText = null;
                                                chatMessageCell.drawForwardedName = false;
                                                chatMessageCell.drawCommentButton = false;
                                                chatMessageCell.photoImage.setSideClip(0.0f);
                                                chatMessageCell.photoImage.setAspectFit(false);
                                                chatMessageCell.gradientShader = null;
                                                chatMessageCell.motionBackgroundDrawable = null;
                                                chatMessageCell.imageBackgroundColor = 0;
                                                chatMessageCell.imageBackgroundGradientColor1 = 0;
                                                chatMessageCell.imageBackgroundGradientColor2 = 0;
                                                chatMessageCell.imageBackgroundIntensity = 0.0f;
                                                chatMessageCell.imageBackgroundGradientColor3 = 0;
                                                chatMessageCell.imageBackgroundGradientRotation = 45;
                                                chatMessageCell.imageBackgroundSideColor = 0;
                                                chatMessageCell.mediaBackground = false;
                                                expiredStoryView = chatMessageCell.expiredStoryView;
                                                if (expiredStoryView != null) {
                                                }
                                                chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                                                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2222 = messageObject17.messageOwner.fwd_from;
                                                if (tLRPC$MessageFwdHeader2222 == null) {
                                                }
                                                chatMessageCell.hasPsaHint = z8;
                                                if (z8) {
                                                }
                                                chatMessageCell.photoImage.setAlpha(f);
                                                if (!z3) {
                                                }
                                                chatMessageCell.pollButtons.clear();
                                                chatMessageCell.availableTimeWidth = 0;
                                                chatMessageCell.photoImage.setForceLoading(false);
                                                chatMessageCell.photoImage.setNeedsQualityThumb(false);
                                                chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                                                chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                                                chatMessageCell.photoImage.setColorFilter(null);
                                                chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                                                if (!z51) {
                                                }
                                                messageObject17.reactionsChanged = false;
                                                TLRPC$Message tLRPC$Message72222 = messageObject17.messageOwner;
                                                if (tLRPC$Message72222 == null) {
                                                }
                                                if (messageObject.shouldDrawReactions()) {
                                                }
                                                chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                                                if (z3) {
                                                }
                                                groupedMessages4 = chatMessageCell.currentMessagesGroup;
                                                if (groupedMessages4 != null) {
                                                }
                                                isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                                                if (chatMessageCell.hasDiscussion) {
                                                }
                                                MessageObject.GroupedMessagePosition groupedMessagePosition1822222222 = chatMessageCell.currentPosition;
                                                if (groupedMessagePosition1822222222 == null) {
                                                }
                                                repliesCount = getRepliesCount();
                                                if (!messageObject.shouldDrawWithoutBackground()) {
                                                }
                                                if (!chatMessageCell.isRepliesChat) {
                                                }
                                                chatMessageCell.commentLayout = null;
                                                chatMessageCell.drawCommentNumber = false;
                                                chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                                i4 = 2;
                                                if (messageObject17.type != 27) {
                                                }
                                                i7 = 0;
                                                z9 = true;
                                                if (chatMessageCell.currentPosition == null) {
                                                }
                                                i8 = 5;
                                                i11 = -1;
                                                i12 = 8;
                                                groupedMessagePosition = chatMessageCell.currentPosition;
                                                if (groupedMessagePosition != null) {
                                                }
                                                int i164222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                                messageObject3 = chatMessageCell.currentMessageObject;
                                                if (messageObject3.eventId == 0) {
                                                }
                                                f3 = 0.0f;
                                                chatMessageCell.botButtons.clear();
                                                if (z51) {
                                                }
                                                if (!messageObject2.isRestrictedMessage) {
                                                }
                                                chatMessageCell.substractBackgroundHeight = 0;
                                                chatMessageCell.keyboardHeight = 0;
                                                if (chatMessageCell.drawCommentButton) {
                                                }
                                                z12 = chatMessageCell.drawPinnedBottom;
                                                if (z12) {
                                                }
                                                if (z12) {
                                                }
                                                if (!chatMessageCell.mediaBackground) {
                                                }
                                                if (messageObject2.type != 19) {
                                                }
                                                if (chatMessageCell.drawPhotoImage) {
                                                }
                                                if (chatMessageCell.documentAttachType != i8) {
                                                }
                                                calculateUnlockXY();
                                                if (z9) {
                                                }
                                                updateAnimatedEmojis();
                                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                                if (stickerSetLinkIcon2 != null) {
                                                }
                                                r25 = 0;
                                                if (z51) {
                                                }
                                                transcribeButton = chatMessageCell.transcribeButton;
                                                if (transcribeButton != null) {
                                                }
                                                updateWaveform();
                                                if (z51) {
                                                }
                                                z44 = true;
                                                z45 = false;
                                                z46 = false;
                                                chatMessageCell.updateButtonState(z45, z46, z44);
                                                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                                }
                                                chatMessageCellDelegate2 = chatMessageCell.delegate;
                                                if (chatMessageCellDelegate2 != null) {
                                                }
                                                chatMessageCell.accessibilityVirtualViewBounds.clear();
                                                chatMessageCell.transitionParams.updatePhotoImageX = true;
                                                chatMessageCell.highlightCaptionToSetEnd = i11;
                                                chatMessageCell.highlightCaptionToSetStart = i11;
                                                updateFlagSecure();
                                            }
                                            chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
                                            chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                                            needDrawAvatar = needDrawAvatar();
                                            if (messageObject17.customAvatarDrawable == null) {
                                            }
                                            chatMessageCell.isAvatarVisible = true;
                                            r22 = 0;
                                            z7 = true;
                                            chatMessageCell.wasLayout = r22;
                                            chatMessageCell.groupPhotoInvisible = r22;
                                            chatMessageCell.animatingDrawVideoImageButton = r22;
                                            chatMessageCell.drawVideoSize = r22;
                                            chatMessageCell.canStreamVideo = r22;
                                            chatMessageCell.animatingNoSound = r22;
                                            if (!messageObject.isSponsored()) {
                                            }
                                            chatMessageCell.hasReplyQuote = r23;
                                            chatMessageCell.isReplyQuote = r23;
                                            chatMessageCell.replyNameLayout = null;
                                            chatMessageCell.adminLayout = null;
                                            chatMessageCell.boostCounterBounds = null;
                                            chatMessageCell.boostCounterSpan = null;
                                            chatMessageCell.checkOnlyButtonPressed = r23;
                                            chatMessageCell.replyTextLayout = null;
                                            AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                                            chatMessageCell.lastReplyMessage = null;
                                            chatMessageCell.hasEmbed = r23;
                                            chatMessageCell.autoPlayingMedia = r23;
                                            chatMessageCell.replyNameWidth = r23;
                                            chatMessageCell.replyTextWidth = r23;
                                            chatMessageCell.replyTextHeight = r23;
                                            chatMessageCell.viaWidth = r23;
                                            chatMessageCell.viaNameWidth = r23;
                                            chatMessageCell.viaOnly = r23;
                                            chatMessageCell.addedCaptionHeight = r23;
                                            chatMessageCell.currentReplyPhoto = null;
                                            chatMessageCell.currentUser = null;
                                            chatMessageCell.currentChat = null;
                                            chatMessageCell.currentViaBotUser = null;
                                            chatMessageCell.instantViewLayout = null;
                                            chatMessageCell.drawNameLayout = r23;
                                            chatMessageCell.linkPreviewAbove = r23;
                                            chatMessageCell.isSmallImage = r23;
                                            chatMessageCell.lastLoadingSizeTotal = 0L;
                                            if (chatMessageCell.scheduledInvalidate) {
                                            }
                                            chatMessageCell.links.clear();
                                            chatMessageCell.pressedLink = null;
                                            chatMessageCell.pressedEmoji = null;
                                            chatMessageCell.pressedLinkType = -1;
                                            messageObject17.forceUpdate = r23;
                                            chatMessageCell.drawPhotoImage = r23;
                                            chatMessageCell.drawMediaCheckBox = r23;
                                            chatMessageCell.hasLinkPreview = r23;
                                            chatMessageCell.hasOldCaptionPreview = r23;
                                            chatMessageCell.hasGamePreview = r23;
                                            chatMessageCell.hasInvoicePreview = r23;
                                            chatMessageCell.commentButtonPressed = r23;
                                            chatMessageCell.instantPressed = r23;
                                            chatMessageCell.gradientDrawable = null;
                                            chatMessageCell.setInstantButtonPressed(r23);
                                            if (!z6) {
                                            }
                                            resetContactButtonsPressedState();
                                            buttonBounce = chatMessageCell.titleLabelBounce;
                                            if (buttonBounce != null) {
                                            }
                                            chatMessageCell.drawnContactButtonsFlag = r3;
                                            chatMessageCell.drawContact = r3;
                                            chatMessageCell.drawContactView = r3;
                                            chatMessageCell.drawContactSendMessage = r3;
                                            chatMessageCell.drawContactAdd = r3;
                                            chatMessageCell.spoilerPressed = null;
                                            chatMessageCell.isSpoilerRevealing = r3;
                                            chatMessageCell.linkPreviewPressed = r3;
                                            chatMessageCell.buttonPressed = r3;
                                            chatMessageCell.additionalTimeOffsetY = r3;
                                            chatMessageCell.miniButtonPressed = r3;
                                            chatMessageCell.pressedBotButton = i3;
                                            chatMessageCell.pressedVoteButton = i3;
                                            chatMessageCell.pollHintPressed = r3;
                                            chatMessageCell.psaHintPressed = r3;
                                            chatMessageCell.linkPreviewHeight = r3;
                                            chatMessageCell.mediaOffsetY = r3;
                                            chatMessageCell.documentAttachType = r3;
                                            chatMessageCell.documentAttach = null;
                                            chatMessageCell.descriptionLayout = null;
                                            chatMessageCell.titleLayout = null;
                                            chatMessageCell.videoInfoLayout = null;
                                            chatMessageCell.photosCountLayout = null;
                                            chatMessageCell.siteNameLayout = null;
                                            chatMessageCell.titleLabelLayout = null;
                                            chatMessageCell.authorLayout = null;
                                            chatMessageCell.captionFullWidth = r3;
                                            chatMessageCell.captionLayout = null;
                                            chatMessageCell.captionWidth = r3;
                                            chatMessageCell.captionHeight = r3;
                                            chatMessageCell.captionOffsetX = r3;
                                            chatMessageCell.currentCaption = null;
                                            chatMessageCell.captionLayout = null;
                                            chatMessageCell.docTitleLayout = null;
                                            chatMessageCell.drawImageButton = r3;
                                            chatMessageCell.drawVideoImageButton = r3;
                                            chatMessageCell.currentPhotoLocation = null;
                                            chatMessageCell.currentPhotoThumbLocation = null;
                                            chatMessageCell.currentPhotoObject = null;
                                            chatMessageCell.photoParentObject = null;
                                            chatMessageCell.currentPhotoObjectThumb = null;
                                            chatMessageCell.currentPhotoObjectThumbStripped = null;
                                            if (!z3) {
                                            }
                                            chatMessageCell.currentPhotoFilter = null;
                                            chatMessageCell.buttonState = i3;
                                            chatMessageCell.miniButtonState = i3;
                                            chatMessageCell.hasMiniProgress = 0;
                                            if (chatMessageCell.addedForTest) {
                                            }
                                            chatMessageCell.addedForTest = false;
                                            chatMessageCell.photoNotSet = false;
                                            chatMessageCell.drawBackground = z49;
                                            chatMessageCell.drawName = false;
                                            chatMessageCell.useSeekBarWaveform = false;
                                            chatMessageCell.useTranscribeButton = false;
                                            chatMessageCell.drawInstantView = false;
                                            chatMessageCell.drawInstantViewType = 0;
                                            chatMessageCell.instantViewButtonText = null;
                                            chatMessageCell.drawForwardedName = false;
                                            chatMessageCell.drawCommentButton = false;
                                            chatMessageCell.photoImage.setSideClip(0.0f);
                                            chatMessageCell.photoImage.setAspectFit(false);
                                            chatMessageCell.gradientShader = null;
                                            chatMessageCell.motionBackgroundDrawable = null;
                                            chatMessageCell.imageBackgroundColor = 0;
                                            chatMessageCell.imageBackgroundGradientColor1 = 0;
                                            chatMessageCell.imageBackgroundGradientColor2 = 0;
                                            chatMessageCell.imageBackgroundIntensity = 0.0f;
                                            chatMessageCell.imageBackgroundGradientColor3 = 0;
                                            chatMessageCell.imageBackgroundGradientRotation = 45;
                                            chatMessageCell.imageBackgroundSideColor = 0;
                                            chatMessageCell.mediaBackground = false;
                                            expiredStoryView = chatMessageCell.expiredStoryView;
                                            if (expiredStoryView != null) {
                                            }
                                            chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                                            TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader22222 = messageObject17.messageOwner.fwd_from;
                                            if (tLRPC$MessageFwdHeader22222 == null) {
                                            }
                                            chatMessageCell.hasPsaHint = z8;
                                            if (z8) {
                                            }
                                            chatMessageCell.photoImage.setAlpha(f);
                                            if (!z3) {
                                            }
                                            chatMessageCell.pollButtons.clear();
                                            chatMessageCell.availableTimeWidth = 0;
                                            chatMessageCell.photoImage.setForceLoading(false);
                                            chatMessageCell.photoImage.setNeedsQualityThumb(false);
                                            chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                                            chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                                            chatMessageCell.photoImage.setColorFilter(null);
                                            chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                                            if (!z51) {
                                            }
                                            messageObject17.reactionsChanged = false;
                                            TLRPC$Message tLRPC$Message722222 = messageObject17.messageOwner;
                                            if (tLRPC$Message722222 == null) {
                                            }
                                            if (messageObject.shouldDrawReactions()) {
                                            }
                                            chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                                            if (z3) {
                                            }
                                            groupedMessages4 = chatMessageCell.currentMessagesGroup;
                                            if (groupedMessages4 != null) {
                                            }
                                            isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                                            if (chatMessageCell.hasDiscussion) {
                                            }
                                            MessageObject.GroupedMessagePosition groupedMessagePosition18222222222 = chatMessageCell.currentPosition;
                                            if (groupedMessagePosition18222222222 == null) {
                                            }
                                            repliesCount = getRepliesCount();
                                            if (!messageObject.shouldDrawWithoutBackground()) {
                                            }
                                            if (!chatMessageCell.isRepliesChat) {
                                            }
                                            chatMessageCell.commentLayout = null;
                                            chatMessageCell.drawCommentNumber = false;
                                            chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                            i4 = 2;
                                            if (messageObject17.type != 27) {
                                            }
                                            i7 = 0;
                                            z9 = true;
                                            if (chatMessageCell.currentPosition == null) {
                                            }
                                            i8 = 5;
                                            i11 = -1;
                                            i12 = 8;
                                            groupedMessagePosition = chatMessageCell.currentPosition;
                                            if (groupedMessagePosition != null) {
                                            }
                                            int i1642222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                            messageObject3 = chatMessageCell.currentMessageObject;
                                            if (messageObject3.eventId == 0) {
                                            }
                                            f3 = 0.0f;
                                            chatMessageCell.botButtons.clear();
                                            if (z51) {
                                            }
                                            if (!messageObject2.isRestrictedMessage) {
                                            }
                                            chatMessageCell.substractBackgroundHeight = 0;
                                            chatMessageCell.keyboardHeight = 0;
                                            if (chatMessageCell.drawCommentButton) {
                                            }
                                            z12 = chatMessageCell.drawPinnedBottom;
                                            if (z12) {
                                            }
                                            if (z12) {
                                            }
                                            if (!chatMessageCell.mediaBackground) {
                                            }
                                            if (messageObject2.type != 19) {
                                            }
                                            if (chatMessageCell.drawPhotoImage) {
                                            }
                                            if (chatMessageCell.documentAttachType != i8) {
                                            }
                                            calculateUnlockXY();
                                            if (z9) {
                                            }
                                            updateAnimatedEmojis();
                                            stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                            if (stickerSetLinkIcon2 != null) {
                                            }
                                            r25 = 0;
                                            if (z51) {
                                            }
                                            transcribeButton = chatMessageCell.transcribeButton;
                                            if (transcribeButton != null) {
                                            }
                                            updateWaveform();
                                            if (z51) {
                                            }
                                            z44 = true;
                                            z45 = false;
                                            z46 = false;
                                            chatMessageCell.updateButtonState(z45, z46, z44);
                                            if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                            }
                                            chatMessageCellDelegate2 = chatMessageCell.delegate;
                                            if (chatMessageCellDelegate2 != null) {
                                            }
                                            chatMessageCell.accessibilityVirtualViewBounds.clear();
                                            chatMessageCell.transitionParams.updatePhotoImageX = true;
                                            chatMessageCell.highlightCaptionToSetEnd = i11;
                                            chatMessageCell.highlightCaptionToSetStart = i11;
                                            updateFlagSecure();
                                        }
                                        chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
                                        chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
                                        chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                                        chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
                                        chatMessageCell.photoImage.setGradientBitmap(null);
                                        chatMessageCell.photoImage.clearDecorators();
                                        chatMessageCell.photoImage.setInvalidateAll(false);
                                        chatMessageCell.linkPreviewY = 0;
                                        chatMessageCell.lastTranslated = messageObject17.translated;
                                        TLRPC$Message tLRPC$Message622 = messageObject17.messageOwner;
                                        chatMessageCell.lastSendState = tLRPC$Message622.send_state;
                                        chatMessageCell.lastDeleteDate = tLRPC$Message622.destroyTime;
                                        chatMessageCell.lastViewsCount = tLRPC$Message622.views;
                                        chatMessageCell.lastRepliesCount = getRepliesCount();
                                        if (z51) {
                                        }
                                        chatMessageCell.gamePreviewPressed = r2;
                                        chatMessageCell.sideButtonPressed = r2;
                                        chatMessageCell.pressedSideButton = r2;
                                        chatMessageCell.hasNewLineForTime = r2;
                                        chatMessageCell.flipImage = r2;
                                        chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
                                        chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                                        needDrawAvatar = needDrawAvatar();
                                        if (messageObject17.customAvatarDrawable == null) {
                                        }
                                        chatMessageCell.isAvatarVisible = true;
                                        r22 = 0;
                                        z7 = true;
                                        chatMessageCell.wasLayout = r22;
                                        chatMessageCell.groupPhotoInvisible = r22;
                                        chatMessageCell.animatingDrawVideoImageButton = r22;
                                        chatMessageCell.drawVideoSize = r22;
                                        chatMessageCell.canStreamVideo = r22;
                                        chatMessageCell.animatingNoSound = r22;
                                        if (!messageObject.isSponsored()) {
                                        }
                                        chatMessageCell.hasReplyQuote = r23;
                                        chatMessageCell.isReplyQuote = r23;
                                        chatMessageCell.replyNameLayout = null;
                                        chatMessageCell.adminLayout = null;
                                        chatMessageCell.boostCounterBounds = null;
                                        chatMessageCell.boostCounterSpan = null;
                                        chatMessageCell.checkOnlyButtonPressed = r23;
                                        chatMessageCell.replyTextLayout = null;
                                        AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                                        chatMessageCell.lastReplyMessage = null;
                                        chatMessageCell.hasEmbed = r23;
                                        chatMessageCell.autoPlayingMedia = r23;
                                        chatMessageCell.replyNameWidth = r23;
                                        chatMessageCell.replyTextWidth = r23;
                                        chatMessageCell.replyTextHeight = r23;
                                        chatMessageCell.viaWidth = r23;
                                        chatMessageCell.viaNameWidth = r23;
                                        chatMessageCell.viaOnly = r23;
                                        chatMessageCell.addedCaptionHeight = r23;
                                        chatMessageCell.currentReplyPhoto = null;
                                        chatMessageCell.currentUser = null;
                                        chatMessageCell.currentChat = null;
                                        chatMessageCell.currentViaBotUser = null;
                                        chatMessageCell.instantViewLayout = null;
                                        chatMessageCell.drawNameLayout = r23;
                                        chatMessageCell.linkPreviewAbove = r23;
                                        chatMessageCell.isSmallImage = r23;
                                        chatMessageCell.lastLoadingSizeTotal = 0L;
                                        if (chatMessageCell.scheduledInvalidate) {
                                        }
                                        chatMessageCell.links.clear();
                                        chatMessageCell.pressedLink = null;
                                        chatMessageCell.pressedEmoji = null;
                                        chatMessageCell.pressedLinkType = -1;
                                        messageObject17.forceUpdate = r23;
                                        chatMessageCell.drawPhotoImage = r23;
                                        chatMessageCell.drawMediaCheckBox = r23;
                                        chatMessageCell.hasLinkPreview = r23;
                                        chatMessageCell.hasOldCaptionPreview = r23;
                                        chatMessageCell.hasGamePreview = r23;
                                        chatMessageCell.hasInvoicePreview = r23;
                                        chatMessageCell.commentButtonPressed = r23;
                                        chatMessageCell.instantPressed = r23;
                                        chatMessageCell.gradientDrawable = null;
                                        chatMessageCell.setInstantButtonPressed(r23);
                                        if (!z6) {
                                        }
                                        resetContactButtonsPressedState();
                                        buttonBounce = chatMessageCell.titleLabelBounce;
                                        if (buttonBounce != null) {
                                        }
                                        chatMessageCell.drawnContactButtonsFlag = r3;
                                        chatMessageCell.drawContact = r3;
                                        chatMessageCell.drawContactView = r3;
                                        chatMessageCell.drawContactSendMessage = r3;
                                        chatMessageCell.drawContactAdd = r3;
                                        chatMessageCell.spoilerPressed = null;
                                        chatMessageCell.isSpoilerRevealing = r3;
                                        chatMessageCell.linkPreviewPressed = r3;
                                        chatMessageCell.buttonPressed = r3;
                                        chatMessageCell.additionalTimeOffsetY = r3;
                                        chatMessageCell.miniButtonPressed = r3;
                                        chatMessageCell.pressedBotButton = i3;
                                        chatMessageCell.pressedVoteButton = i3;
                                        chatMessageCell.pollHintPressed = r3;
                                        chatMessageCell.psaHintPressed = r3;
                                        chatMessageCell.linkPreviewHeight = r3;
                                        chatMessageCell.mediaOffsetY = r3;
                                        chatMessageCell.documentAttachType = r3;
                                        chatMessageCell.documentAttach = null;
                                        chatMessageCell.descriptionLayout = null;
                                        chatMessageCell.titleLayout = null;
                                        chatMessageCell.videoInfoLayout = null;
                                        chatMessageCell.photosCountLayout = null;
                                        chatMessageCell.siteNameLayout = null;
                                        chatMessageCell.titleLabelLayout = null;
                                        chatMessageCell.authorLayout = null;
                                        chatMessageCell.captionFullWidth = r3;
                                        chatMessageCell.captionLayout = null;
                                        chatMessageCell.captionWidth = r3;
                                        chatMessageCell.captionHeight = r3;
                                        chatMessageCell.captionOffsetX = r3;
                                        chatMessageCell.currentCaption = null;
                                        chatMessageCell.captionLayout = null;
                                        chatMessageCell.docTitleLayout = null;
                                        chatMessageCell.drawImageButton = r3;
                                        chatMessageCell.drawVideoImageButton = r3;
                                        chatMessageCell.currentPhotoLocation = null;
                                        chatMessageCell.currentPhotoThumbLocation = null;
                                        chatMessageCell.currentPhotoObject = null;
                                        chatMessageCell.photoParentObject = null;
                                        chatMessageCell.currentPhotoObjectThumb = null;
                                        chatMessageCell.currentPhotoObjectThumbStripped = null;
                                        if (!z3) {
                                        }
                                        chatMessageCell.currentPhotoFilter = null;
                                        chatMessageCell.buttonState = i3;
                                        chatMessageCell.miniButtonState = i3;
                                        chatMessageCell.hasMiniProgress = 0;
                                        if (chatMessageCell.addedForTest) {
                                        }
                                        chatMessageCell.addedForTest = false;
                                        chatMessageCell.photoNotSet = false;
                                        chatMessageCell.drawBackground = z49;
                                        chatMessageCell.drawName = false;
                                        chatMessageCell.useSeekBarWaveform = false;
                                        chatMessageCell.useTranscribeButton = false;
                                        chatMessageCell.drawInstantView = false;
                                        chatMessageCell.drawInstantViewType = 0;
                                        chatMessageCell.instantViewButtonText = null;
                                        chatMessageCell.drawForwardedName = false;
                                        chatMessageCell.drawCommentButton = false;
                                        chatMessageCell.photoImage.setSideClip(0.0f);
                                        chatMessageCell.photoImage.setAspectFit(false);
                                        chatMessageCell.gradientShader = null;
                                        chatMessageCell.motionBackgroundDrawable = null;
                                        chatMessageCell.imageBackgroundColor = 0;
                                        chatMessageCell.imageBackgroundGradientColor1 = 0;
                                        chatMessageCell.imageBackgroundGradientColor2 = 0;
                                        chatMessageCell.imageBackgroundIntensity = 0.0f;
                                        chatMessageCell.imageBackgroundGradientColor3 = 0;
                                        chatMessageCell.imageBackgroundGradientRotation = 45;
                                        chatMessageCell.imageBackgroundSideColor = 0;
                                        chatMessageCell.mediaBackground = false;
                                        expiredStoryView = chatMessageCell.expiredStoryView;
                                        if (expiredStoryView != null) {
                                        }
                                        chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader222222 = messageObject17.messageOwner.fwd_from;
                                        if (tLRPC$MessageFwdHeader222222 == null) {
                                        }
                                        chatMessageCell.hasPsaHint = z8;
                                        if (z8) {
                                        }
                                        chatMessageCell.photoImage.setAlpha(f);
                                        if (!z3) {
                                        }
                                        chatMessageCell.pollButtons.clear();
                                        chatMessageCell.availableTimeWidth = 0;
                                        chatMessageCell.photoImage.setForceLoading(false);
                                        chatMessageCell.photoImage.setNeedsQualityThumb(false);
                                        chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                                        chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                                        chatMessageCell.photoImage.setColorFilter(null);
                                        chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                                        if (!z51) {
                                        }
                                        messageObject17.reactionsChanged = false;
                                        TLRPC$Message tLRPC$Message7222222 = messageObject17.messageOwner;
                                        if (tLRPC$Message7222222 == null) {
                                        }
                                        if (messageObject.shouldDrawReactions()) {
                                        }
                                        chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                                        if (z3) {
                                        }
                                        groupedMessages4 = chatMessageCell.currentMessagesGroup;
                                        if (groupedMessages4 != null) {
                                        }
                                        isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                                        if (chatMessageCell.hasDiscussion) {
                                        }
                                        MessageObject.GroupedMessagePosition groupedMessagePosition182222222222 = chatMessageCell.currentPosition;
                                        if (groupedMessagePosition182222222222 == null) {
                                        }
                                        repliesCount = getRepliesCount();
                                        if (!messageObject.shouldDrawWithoutBackground()) {
                                        }
                                        if (!chatMessageCell.isRepliesChat) {
                                        }
                                        chatMessageCell.commentLayout = null;
                                        chatMessageCell.drawCommentNumber = false;
                                        chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                        i4 = 2;
                                        if (messageObject17.type != 27) {
                                        }
                                        i7 = 0;
                                        z9 = true;
                                        if (chatMessageCell.currentPosition == null) {
                                        }
                                        i8 = 5;
                                        i11 = -1;
                                        i12 = 8;
                                        groupedMessagePosition = chatMessageCell.currentPosition;
                                        if (groupedMessagePosition != null) {
                                        }
                                        int i16422222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                        messageObject3 = chatMessageCell.currentMessageObject;
                                        if (messageObject3.eventId == 0) {
                                        }
                                        f3 = 0.0f;
                                        chatMessageCell.botButtons.clear();
                                        if (z51) {
                                        }
                                        if (!messageObject2.isRestrictedMessage) {
                                        }
                                        chatMessageCell.substractBackgroundHeight = 0;
                                        chatMessageCell.keyboardHeight = 0;
                                        if (chatMessageCell.drawCommentButton) {
                                        }
                                        z12 = chatMessageCell.drawPinnedBottom;
                                        if (z12) {
                                        }
                                        if (z12) {
                                        }
                                        if (!chatMessageCell.mediaBackground) {
                                        }
                                        if (messageObject2.type != 19) {
                                        }
                                        if (chatMessageCell.drawPhotoImage) {
                                        }
                                        if (chatMessageCell.documentAttachType != i8) {
                                        }
                                        calculateUnlockXY();
                                        if (z9) {
                                        }
                                        updateAnimatedEmojis();
                                        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                        if (stickerSetLinkIcon2 != null) {
                                        }
                                        r25 = 0;
                                        if (z51) {
                                        }
                                        transcribeButton = chatMessageCell.transcribeButton;
                                        if (transcribeButton != null) {
                                        }
                                        updateWaveform();
                                        if (z51) {
                                        }
                                        z44 = true;
                                        z45 = false;
                                        z46 = false;
                                        chatMessageCell.updateButtonState(z45, z46, z44);
                                        if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                        }
                                        chatMessageCellDelegate2 = chatMessageCell.delegate;
                                        if (chatMessageCellDelegate2 != null) {
                                        }
                                        chatMessageCell.accessibilityVirtualViewBounds.clear();
                                        chatMessageCell.transitionParams.updatePhotoImageX = true;
                                        chatMessageCell.highlightCaptionToSetEnd = i11;
                                        chatMessageCell.highlightCaptionToSetStart = i11;
                                        updateFlagSecure();
                                    }
                                    chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom && ((groupedMessagePosition15 = chatMessageCell.currentPosition) == null || (groupedMessagePosition15.flags & 8) != 0);
                                    boolean z5322 = chatMessageCell.isPlayingRound;
                                    chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
                                    chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
                                    chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                                    chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
                                    chatMessageCell.photoImage.setGradientBitmap(null);
                                    chatMessageCell.photoImage.clearDecorators();
                                    chatMessageCell.photoImage.setInvalidateAll(false);
                                    chatMessageCell.linkPreviewY = 0;
                                    chatMessageCell.lastTranslated = messageObject17.translated;
                                    TLRPC$Message tLRPC$Message6222 = messageObject17.messageOwner;
                                    chatMessageCell.lastSendState = tLRPC$Message6222.send_state;
                                    chatMessageCell.lastDeleteDate = tLRPC$Message6222.destroyTime;
                                    chatMessageCell.lastViewsCount = tLRPC$Message6222.views;
                                    chatMessageCell.lastRepliesCount = getRepliesCount();
                                    if (z51) {
                                    }
                                    chatMessageCell.gamePreviewPressed = r2;
                                    chatMessageCell.sideButtonPressed = r2;
                                    chatMessageCell.pressedSideButton = r2;
                                    chatMessageCell.hasNewLineForTime = r2;
                                    chatMessageCell.flipImage = r2;
                                    chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
                                    chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                                    needDrawAvatar = needDrawAvatar();
                                    if (messageObject17.customAvatarDrawable == null) {
                                    }
                                    chatMessageCell.isAvatarVisible = true;
                                    r22 = 0;
                                    z7 = true;
                                    chatMessageCell.wasLayout = r22;
                                    chatMessageCell.groupPhotoInvisible = r22;
                                    chatMessageCell.animatingDrawVideoImageButton = r22;
                                    chatMessageCell.drawVideoSize = r22;
                                    chatMessageCell.canStreamVideo = r22;
                                    chatMessageCell.animatingNoSound = r22;
                                    if (!messageObject.isSponsored()) {
                                    }
                                    chatMessageCell.hasReplyQuote = r23;
                                    chatMessageCell.isReplyQuote = r23;
                                    chatMessageCell.replyNameLayout = null;
                                    chatMessageCell.adminLayout = null;
                                    chatMessageCell.boostCounterBounds = null;
                                    chatMessageCell.boostCounterSpan = null;
                                    chatMessageCell.checkOnlyButtonPressed = r23;
                                    chatMessageCell.replyTextLayout = null;
                                    AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                                    chatMessageCell.lastReplyMessage = null;
                                    chatMessageCell.hasEmbed = r23;
                                    chatMessageCell.autoPlayingMedia = r23;
                                    chatMessageCell.replyNameWidth = r23;
                                    chatMessageCell.replyTextWidth = r23;
                                    chatMessageCell.replyTextHeight = r23;
                                    chatMessageCell.viaWidth = r23;
                                    chatMessageCell.viaNameWidth = r23;
                                    chatMessageCell.viaOnly = r23;
                                    chatMessageCell.addedCaptionHeight = r23;
                                    chatMessageCell.currentReplyPhoto = null;
                                    chatMessageCell.currentUser = null;
                                    chatMessageCell.currentChat = null;
                                    chatMessageCell.currentViaBotUser = null;
                                    chatMessageCell.instantViewLayout = null;
                                    chatMessageCell.drawNameLayout = r23;
                                    chatMessageCell.linkPreviewAbove = r23;
                                    chatMessageCell.isSmallImage = r23;
                                    chatMessageCell.lastLoadingSizeTotal = 0L;
                                    if (chatMessageCell.scheduledInvalidate) {
                                    }
                                    chatMessageCell.links.clear();
                                    chatMessageCell.pressedLink = null;
                                    chatMessageCell.pressedEmoji = null;
                                    chatMessageCell.pressedLinkType = -1;
                                    messageObject17.forceUpdate = r23;
                                    chatMessageCell.drawPhotoImage = r23;
                                    chatMessageCell.drawMediaCheckBox = r23;
                                    chatMessageCell.hasLinkPreview = r23;
                                    chatMessageCell.hasOldCaptionPreview = r23;
                                    chatMessageCell.hasGamePreview = r23;
                                    chatMessageCell.hasInvoicePreview = r23;
                                    chatMessageCell.commentButtonPressed = r23;
                                    chatMessageCell.instantPressed = r23;
                                    chatMessageCell.gradientDrawable = null;
                                    chatMessageCell.setInstantButtonPressed(r23);
                                    if (!z6) {
                                    }
                                    resetContactButtonsPressedState();
                                    buttonBounce = chatMessageCell.titleLabelBounce;
                                    if (buttonBounce != null) {
                                    }
                                    chatMessageCell.drawnContactButtonsFlag = r3;
                                    chatMessageCell.drawContact = r3;
                                    chatMessageCell.drawContactView = r3;
                                    chatMessageCell.drawContactSendMessage = r3;
                                    chatMessageCell.drawContactAdd = r3;
                                    chatMessageCell.spoilerPressed = null;
                                    chatMessageCell.isSpoilerRevealing = r3;
                                    chatMessageCell.linkPreviewPressed = r3;
                                    chatMessageCell.buttonPressed = r3;
                                    chatMessageCell.additionalTimeOffsetY = r3;
                                    chatMessageCell.miniButtonPressed = r3;
                                    chatMessageCell.pressedBotButton = i3;
                                    chatMessageCell.pressedVoteButton = i3;
                                    chatMessageCell.pollHintPressed = r3;
                                    chatMessageCell.psaHintPressed = r3;
                                    chatMessageCell.linkPreviewHeight = r3;
                                    chatMessageCell.mediaOffsetY = r3;
                                    chatMessageCell.documentAttachType = r3;
                                    chatMessageCell.documentAttach = null;
                                    chatMessageCell.descriptionLayout = null;
                                    chatMessageCell.titleLayout = null;
                                    chatMessageCell.videoInfoLayout = null;
                                    chatMessageCell.photosCountLayout = null;
                                    chatMessageCell.siteNameLayout = null;
                                    chatMessageCell.titleLabelLayout = null;
                                    chatMessageCell.authorLayout = null;
                                    chatMessageCell.captionFullWidth = r3;
                                    chatMessageCell.captionLayout = null;
                                    chatMessageCell.captionWidth = r3;
                                    chatMessageCell.captionHeight = r3;
                                    chatMessageCell.captionOffsetX = r3;
                                    chatMessageCell.currentCaption = null;
                                    chatMessageCell.captionLayout = null;
                                    chatMessageCell.docTitleLayout = null;
                                    chatMessageCell.drawImageButton = r3;
                                    chatMessageCell.drawVideoImageButton = r3;
                                    chatMessageCell.currentPhotoLocation = null;
                                    chatMessageCell.currentPhotoThumbLocation = null;
                                    chatMessageCell.currentPhotoObject = null;
                                    chatMessageCell.photoParentObject = null;
                                    chatMessageCell.currentPhotoObjectThumb = null;
                                    chatMessageCell.currentPhotoObjectThumbStripped = null;
                                    if (!z3) {
                                    }
                                    chatMessageCell.currentPhotoFilter = null;
                                    chatMessageCell.buttonState = i3;
                                    chatMessageCell.miniButtonState = i3;
                                    chatMessageCell.hasMiniProgress = 0;
                                    if (chatMessageCell.addedForTest) {
                                    }
                                    chatMessageCell.addedForTest = false;
                                    chatMessageCell.photoNotSet = false;
                                    chatMessageCell.drawBackground = z49;
                                    chatMessageCell.drawName = false;
                                    chatMessageCell.useSeekBarWaveform = false;
                                    chatMessageCell.useTranscribeButton = false;
                                    chatMessageCell.drawInstantView = false;
                                    chatMessageCell.drawInstantViewType = 0;
                                    chatMessageCell.instantViewButtonText = null;
                                    chatMessageCell.drawForwardedName = false;
                                    chatMessageCell.drawCommentButton = false;
                                    chatMessageCell.photoImage.setSideClip(0.0f);
                                    chatMessageCell.photoImage.setAspectFit(false);
                                    chatMessageCell.gradientShader = null;
                                    chatMessageCell.motionBackgroundDrawable = null;
                                    chatMessageCell.imageBackgroundColor = 0;
                                    chatMessageCell.imageBackgroundGradientColor1 = 0;
                                    chatMessageCell.imageBackgroundGradientColor2 = 0;
                                    chatMessageCell.imageBackgroundIntensity = 0.0f;
                                    chatMessageCell.imageBackgroundGradientColor3 = 0;
                                    chatMessageCell.imageBackgroundGradientRotation = 45;
                                    chatMessageCell.imageBackgroundSideColor = 0;
                                    chatMessageCell.mediaBackground = false;
                                    expiredStoryView = chatMessageCell.expiredStoryView;
                                    if (expiredStoryView != null) {
                                    }
                                    chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2222222 = messageObject17.messageOwner.fwd_from;
                                    if (tLRPC$MessageFwdHeader2222222 == null) {
                                    }
                                    chatMessageCell.hasPsaHint = z8;
                                    if (z8) {
                                    }
                                    chatMessageCell.photoImage.setAlpha(f);
                                    if (!z3) {
                                    }
                                    chatMessageCell.pollButtons.clear();
                                    chatMessageCell.availableTimeWidth = 0;
                                    chatMessageCell.photoImage.setForceLoading(false);
                                    chatMessageCell.photoImage.setNeedsQualityThumb(false);
                                    chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                                    chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                                    chatMessageCell.photoImage.setColorFilter(null);
                                    chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                                    if (!z51) {
                                    }
                                    messageObject17.reactionsChanged = false;
                                    TLRPC$Message tLRPC$Message72222222 = messageObject17.messageOwner;
                                    if (tLRPC$Message72222222 == null) {
                                    }
                                    if (messageObject.shouldDrawReactions()) {
                                    }
                                    chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                                    if (z3) {
                                    }
                                    groupedMessages4 = chatMessageCell.currentMessagesGroup;
                                    if (groupedMessages4 != null) {
                                    }
                                    isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                                    if (chatMessageCell.hasDiscussion) {
                                    }
                                    MessageObject.GroupedMessagePosition groupedMessagePosition1822222222222 = chatMessageCell.currentPosition;
                                    if (groupedMessagePosition1822222222222 == null) {
                                    }
                                    repliesCount = getRepliesCount();
                                    if (!messageObject.shouldDrawWithoutBackground()) {
                                    }
                                    if (!chatMessageCell.isRepliesChat) {
                                    }
                                    chatMessageCell.commentLayout = null;
                                    chatMessageCell.drawCommentNumber = false;
                                    chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                    i4 = 2;
                                    if (messageObject17.type != 27) {
                                    }
                                    i7 = 0;
                                    z9 = true;
                                    if (chatMessageCell.currentPosition == null) {
                                    }
                                    i8 = 5;
                                    i11 = -1;
                                    i12 = 8;
                                    groupedMessagePosition = chatMessageCell.currentPosition;
                                    if (groupedMessagePosition != null) {
                                    }
                                    int i164222222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                    messageObject3 = chatMessageCell.currentMessageObject;
                                    if (messageObject3.eventId == 0) {
                                    }
                                    f3 = 0.0f;
                                    chatMessageCell.botButtons.clear();
                                    if (z51) {
                                    }
                                    if (!messageObject2.isRestrictedMessage) {
                                    }
                                    chatMessageCell.substractBackgroundHeight = 0;
                                    chatMessageCell.keyboardHeight = 0;
                                    if (chatMessageCell.drawCommentButton) {
                                    }
                                    z12 = chatMessageCell.drawPinnedBottom;
                                    if (z12) {
                                    }
                                    if (z12) {
                                    }
                                    if (!chatMessageCell.mediaBackground) {
                                    }
                                    if (messageObject2.type != 19) {
                                    }
                                    if (chatMessageCell.drawPhotoImage) {
                                    }
                                    if (chatMessageCell.documentAttachType != i8) {
                                    }
                                    calculateUnlockXY();
                                    if (z9) {
                                    }
                                    updateAnimatedEmojis();
                                    stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                    if (stickerSetLinkIcon2 != null) {
                                    }
                                    r25 = 0;
                                    if (z51) {
                                    }
                                    transcribeButton = chatMessageCell.transcribeButton;
                                    if (transcribeButton != null) {
                                    }
                                    updateWaveform();
                                    if (z51) {
                                    }
                                    z44 = true;
                                    z45 = false;
                                    z46 = false;
                                    chatMessageCell.updateButtonState(z45, z46, z44);
                                    if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                    }
                                    chatMessageCellDelegate2 = chatMessageCell.delegate;
                                    if (chatMessageCellDelegate2 != null) {
                                    }
                                    chatMessageCell.accessibilityVirtualViewBounds.clear();
                                    chatMessageCell.transitionParams.updatePhotoImageX = true;
                                    chatMessageCell.highlightCaptionToSetEnd = i11;
                                    chatMessageCell.highlightCaptionToSetStart = i11;
                                    updateFlagSecure();
                                }
                                chatMessageCell.drawPinnedTop = chatMessageCell.pinnedTop && ((groupedMessagePosition16 = chatMessageCell.currentPosition) == null || (groupedMessagePosition16.flags & 4) != 0);
                                chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom && ((groupedMessagePosition15 = chatMessageCell.currentPosition) == null || (groupedMessagePosition15.flags & 8) != 0);
                                boolean z53222 = chatMessageCell.isPlayingRound;
                                chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
                                chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
                                chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                                chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
                                chatMessageCell.photoImage.setGradientBitmap(null);
                                chatMessageCell.photoImage.clearDecorators();
                                chatMessageCell.photoImage.setInvalidateAll(false);
                                chatMessageCell.linkPreviewY = 0;
                                chatMessageCell.lastTranslated = messageObject17.translated;
                                TLRPC$Message tLRPC$Message62222 = messageObject17.messageOwner;
                                chatMessageCell.lastSendState = tLRPC$Message62222.send_state;
                                chatMessageCell.lastDeleteDate = tLRPC$Message62222.destroyTime;
                                chatMessageCell.lastViewsCount = tLRPC$Message62222.views;
                                chatMessageCell.lastRepliesCount = getRepliesCount();
                                if (z51) {
                                }
                                chatMessageCell.gamePreviewPressed = r2;
                                chatMessageCell.sideButtonPressed = r2;
                                chatMessageCell.pressedSideButton = r2;
                                chatMessageCell.hasNewLineForTime = r2;
                                chatMessageCell.flipImage = r2;
                                chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
                                chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                                needDrawAvatar = needDrawAvatar();
                                if (messageObject17.customAvatarDrawable == null) {
                                }
                                chatMessageCell.isAvatarVisible = true;
                                r22 = 0;
                                z7 = true;
                                chatMessageCell.wasLayout = r22;
                                chatMessageCell.groupPhotoInvisible = r22;
                                chatMessageCell.animatingDrawVideoImageButton = r22;
                                chatMessageCell.drawVideoSize = r22;
                                chatMessageCell.canStreamVideo = r22;
                                chatMessageCell.animatingNoSound = r22;
                                if (!messageObject.isSponsored()) {
                                }
                                chatMessageCell.hasReplyQuote = r23;
                                chatMessageCell.isReplyQuote = r23;
                                chatMessageCell.replyNameLayout = null;
                                chatMessageCell.adminLayout = null;
                                chatMessageCell.boostCounterBounds = null;
                                chatMessageCell.boostCounterSpan = null;
                                chatMessageCell.checkOnlyButtonPressed = r23;
                                chatMessageCell.replyTextLayout = null;
                                AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                                chatMessageCell.lastReplyMessage = null;
                                chatMessageCell.hasEmbed = r23;
                                chatMessageCell.autoPlayingMedia = r23;
                                chatMessageCell.replyNameWidth = r23;
                                chatMessageCell.replyTextWidth = r23;
                                chatMessageCell.replyTextHeight = r23;
                                chatMessageCell.viaWidth = r23;
                                chatMessageCell.viaNameWidth = r23;
                                chatMessageCell.viaOnly = r23;
                                chatMessageCell.addedCaptionHeight = r23;
                                chatMessageCell.currentReplyPhoto = null;
                                chatMessageCell.currentUser = null;
                                chatMessageCell.currentChat = null;
                                chatMessageCell.currentViaBotUser = null;
                                chatMessageCell.instantViewLayout = null;
                                chatMessageCell.drawNameLayout = r23;
                                chatMessageCell.linkPreviewAbove = r23;
                                chatMessageCell.isSmallImage = r23;
                                chatMessageCell.lastLoadingSizeTotal = 0L;
                                if (chatMessageCell.scheduledInvalidate) {
                                }
                                chatMessageCell.links.clear();
                                chatMessageCell.pressedLink = null;
                                chatMessageCell.pressedEmoji = null;
                                chatMessageCell.pressedLinkType = -1;
                                messageObject17.forceUpdate = r23;
                                chatMessageCell.drawPhotoImage = r23;
                                chatMessageCell.drawMediaCheckBox = r23;
                                chatMessageCell.hasLinkPreview = r23;
                                chatMessageCell.hasOldCaptionPreview = r23;
                                chatMessageCell.hasGamePreview = r23;
                                chatMessageCell.hasInvoicePreview = r23;
                                chatMessageCell.commentButtonPressed = r23;
                                chatMessageCell.instantPressed = r23;
                                chatMessageCell.gradientDrawable = null;
                                chatMessageCell.setInstantButtonPressed(r23);
                                if (!z6) {
                                }
                                resetContactButtonsPressedState();
                                buttonBounce = chatMessageCell.titleLabelBounce;
                                if (buttonBounce != null) {
                                }
                                chatMessageCell.drawnContactButtonsFlag = r3;
                                chatMessageCell.drawContact = r3;
                                chatMessageCell.drawContactView = r3;
                                chatMessageCell.drawContactSendMessage = r3;
                                chatMessageCell.drawContactAdd = r3;
                                chatMessageCell.spoilerPressed = null;
                                chatMessageCell.isSpoilerRevealing = r3;
                                chatMessageCell.linkPreviewPressed = r3;
                                chatMessageCell.buttonPressed = r3;
                                chatMessageCell.additionalTimeOffsetY = r3;
                                chatMessageCell.miniButtonPressed = r3;
                                chatMessageCell.pressedBotButton = i3;
                                chatMessageCell.pressedVoteButton = i3;
                                chatMessageCell.pollHintPressed = r3;
                                chatMessageCell.psaHintPressed = r3;
                                chatMessageCell.linkPreviewHeight = r3;
                                chatMessageCell.mediaOffsetY = r3;
                                chatMessageCell.documentAttachType = r3;
                                chatMessageCell.documentAttach = null;
                                chatMessageCell.descriptionLayout = null;
                                chatMessageCell.titleLayout = null;
                                chatMessageCell.videoInfoLayout = null;
                                chatMessageCell.photosCountLayout = null;
                                chatMessageCell.siteNameLayout = null;
                                chatMessageCell.titleLabelLayout = null;
                                chatMessageCell.authorLayout = null;
                                chatMessageCell.captionFullWidth = r3;
                                chatMessageCell.captionLayout = null;
                                chatMessageCell.captionWidth = r3;
                                chatMessageCell.captionHeight = r3;
                                chatMessageCell.captionOffsetX = r3;
                                chatMessageCell.currentCaption = null;
                                chatMessageCell.captionLayout = null;
                                chatMessageCell.docTitleLayout = null;
                                chatMessageCell.drawImageButton = r3;
                                chatMessageCell.drawVideoImageButton = r3;
                                chatMessageCell.currentPhotoLocation = null;
                                chatMessageCell.currentPhotoThumbLocation = null;
                                chatMessageCell.currentPhotoObject = null;
                                chatMessageCell.photoParentObject = null;
                                chatMessageCell.currentPhotoObjectThumb = null;
                                chatMessageCell.currentPhotoObjectThumbStripped = null;
                                if (!z3) {
                                }
                                chatMessageCell.currentPhotoFilter = null;
                                chatMessageCell.buttonState = i3;
                                chatMessageCell.miniButtonState = i3;
                                chatMessageCell.hasMiniProgress = 0;
                                if (chatMessageCell.addedForTest) {
                                }
                                chatMessageCell.addedForTest = false;
                                chatMessageCell.photoNotSet = false;
                                chatMessageCell.drawBackground = z49;
                                chatMessageCell.drawName = false;
                                chatMessageCell.useSeekBarWaveform = false;
                                chatMessageCell.useTranscribeButton = false;
                                chatMessageCell.drawInstantView = false;
                                chatMessageCell.drawInstantViewType = 0;
                                chatMessageCell.instantViewButtonText = null;
                                chatMessageCell.drawForwardedName = false;
                                chatMessageCell.drawCommentButton = false;
                                chatMessageCell.photoImage.setSideClip(0.0f);
                                chatMessageCell.photoImage.setAspectFit(false);
                                chatMessageCell.gradientShader = null;
                                chatMessageCell.motionBackgroundDrawable = null;
                                chatMessageCell.imageBackgroundColor = 0;
                                chatMessageCell.imageBackgroundGradientColor1 = 0;
                                chatMessageCell.imageBackgroundGradientColor2 = 0;
                                chatMessageCell.imageBackgroundIntensity = 0.0f;
                                chatMessageCell.imageBackgroundGradientColor3 = 0;
                                chatMessageCell.imageBackgroundGradientRotation = 45;
                                chatMessageCell.imageBackgroundSideColor = 0;
                                chatMessageCell.mediaBackground = false;
                                expiredStoryView = chatMessageCell.expiredStoryView;
                                if (expiredStoryView != null) {
                                }
                                chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader22222222 = messageObject17.messageOwner.fwd_from;
                                if (tLRPC$MessageFwdHeader22222222 == null) {
                                }
                                chatMessageCell.hasPsaHint = z8;
                                if (z8) {
                                }
                                chatMessageCell.photoImage.setAlpha(f);
                                if (!z3) {
                                }
                                chatMessageCell.pollButtons.clear();
                                chatMessageCell.availableTimeWidth = 0;
                                chatMessageCell.photoImage.setForceLoading(false);
                                chatMessageCell.photoImage.setNeedsQualityThumb(false);
                                chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                                chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                                chatMessageCell.photoImage.setColorFilter(null);
                                chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                                if (!z51) {
                                }
                                messageObject17.reactionsChanged = false;
                                TLRPC$Message tLRPC$Message722222222 = messageObject17.messageOwner;
                                if (tLRPC$Message722222222 == null) {
                                }
                                if (messageObject.shouldDrawReactions()) {
                                }
                                chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                                if (z3) {
                                }
                                groupedMessages4 = chatMessageCell.currentMessagesGroup;
                                if (groupedMessages4 != null) {
                                }
                                isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                                if (chatMessageCell.hasDiscussion) {
                                }
                                MessageObject.GroupedMessagePosition groupedMessagePosition18222222222222 = chatMessageCell.currentPosition;
                                if (groupedMessagePosition18222222222222 == null) {
                                }
                                repliesCount = getRepliesCount();
                                if (!messageObject.shouldDrawWithoutBackground()) {
                                }
                                if (!chatMessageCell.isRepliesChat) {
                                }
                                chatMessageCell.commentLayout = null;
                                chatMessageCell.drawCommentNumber = false;
                                chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                                i4 = 2;
                                if (messageObject17.type != 27) {
                                }
                                i7 = 0;
                                z9 = true;
                                if (chatMessageCell.currentPosition == null) {
                                }
                                i8 = 5;
                                i11 = -1;
                                i12 = 8;
                                groupedMessagePosition = chatMessageCell.currentPosition;
                                if (groupedMessagePosition != null) {
                                }
                                int i1642222222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                                messageObject3 = chatMessageCell.currentMessageObject;
                                if (messageObject3.eventId == 0) {
                                }
                                f3 = 0.0f;
                                chatMessageCell.botButtons.clear();
                                if (z51) {
                                }
                                if (!messageObject2.isRestrictedMessage) {
                                }
                                chatMessageCell.substractBackgroundHeight = 0;
                                chatMessageCell.keyboardHeight = 0;
                                if (chatMessageCell.drawCommentButton) {
                                }
                                z12 = chatMessageCell.drawPinnedBottom;
                                if (z12) {
                                }
                                if (z12) {
                                }
                                if (!chatMessageCell.mediaBackground) {
                                }
                                if (messageObject2.type != 19) {
                                }
                                if (chatMessageCell.drawPhotoImage) {
                                }
                                if (chatMessageCell.documentAttachType != i8) {
                                }
                                calculateUnlockXY();
                                if (z9) {
                                }
                                updateAnimatedEmojis();
                                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                                if (stickerSetLinkIcon2 != null) {
                                }
                                r25 = 0;
                                if (z51) {
                                }
                                transcribeButton = chatMessageCell.transcribeButton;
                                if (transcribeButton != null) {
                                }
                                updateWaveform();
                                if (z51) {
                                }
                                z44 = true;
                                z45 = false;
                                z46 = false;
                                chatMessageCell.updateButtonState(z45, z46, z44);
                                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                                }
                                chatMessageCellDelegate2 = chatMessageCell.delegate;
                                if (chatMessageCellDelegate2 != null) {
                                }
                                chatMessageCell.accessibilityVirtualViewBounds.clear();
                                chatMessageCell.transitionParams.updatePhotoImageX = true;
                                chatMessageCell.highlightCaptionToSetEnd = i11;
                                chatMessageCell.highlightCaptionToSetStart = i11;
                                updateFlagSecure();
                            }
                            chatMessageCell.drawPinnedTop = chatMessageCell.pinnedTop;
                            chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom;
                            boolean z532222 = chatMessageCell.isPlayingRound;
                            chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
                            chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
                            chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                            chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
                            chatMessageCell.photoImage.setGradientBitmap(null);
                            chatMessageCell.photoImage.clearDecorators();
                            chatMessageCell.photoImage.setInvalidateAll(false);
                            chatMessageCell.linkPreviewY = 0;
                            chatMessageCell.lastTranslated = messageObject17.translated;
                            TLRPC$Message tLRPC$Message622222 = messageObject17.messageOwner;
                            chatMessageCell.lastSendState = tLRPC$Message622222.send_state;
                            chatMessageCell.lastDeleteDate = tLRPC$Message622222.destroyTime;
                            chatMessageCell.lastViewsCount = tLRPC$Message622222.views;
                            chatMessageCell.lastRepliesCount = getRepliesCount();
                            if (z51) {
                            }
                            chatMessageCell.gamePreviewPressed = r2;
                            chatMessageCell.sideButtonPressed = r2;
                            chatMessageCell.pressedSideButton = r2;
                            chatMessageCell.hasNewLineForTime = r2;
                            chatMessageCell.flipImage = r2;
                            chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
                            chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                            needDrawAvatar = needDrawAvatar();
                            if (messageObject17.customAvatarDrawable == null) {
                            }
                            chatMessageCell.isAvatarVisible = true;
                            r22 = 0;
                            z7 = true;
                            chatMessageCell.wasLayout = r22;
                            chatMessageCell.groupPhotoInvisible = r22;
                            chatMessageCell.animatingDrawVideoImageButton = r22;
                            chatMessageCell.drawVideoSize = r22;
                            chatMessageCell.canStreamVideo = r22;
                            chatMessageCell.animatingNoSound = r22;
                            if (!messageObject.isSponsored()) {
                            }
                            chatMessageCell.hasReplyQuote = r23;
                            chatMessageCell.isReplyQuote = r23;
                            chatMessageCell.replyNameLayout = null;
                            chatMessageCell.adminLayout = null;
                            chatMessageCell.boostCounterBounds = null;
                            chatMessageCell.boostCounterSpan = null;
                            chatMessageCell.checkOnlyButtonPressed = r23;
                            chatMessageCell.replyTextLayout = null;
                            AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                            chatMessageCell.lastReplyMessage = null;
                            chatMessageCell.hasEmbed = r23;
                            chatMessageCell.autoPlayingMedia = r23;
                            chatMessageCell.replyNameWidth = r23;
                            chatMessageCell.replyTextWidth = r23;
                            chatMessageCell.replyTextHeight = r23;
                            chatMessageCell.viaWidth = r23;
                            chatMessageCell.viaNameWidth = r23;
                            chatMessageCell.viaOnly = r23;
                            chatMessageCell.addedCaptionHeight = r23;
                            chatMessageCell.currentReplyPhoto = null;
                            chatMessageCell.currentUser = null;
                            chatMessageCell.currentChat = null;
                            chatMessageCell.currentViaBotUser = null;
                            chatMessageCell.instantViewLayout = null;
                            chatMessageCell.drawNameLayout = r23;
                            chatMessageCell.linkPreviewAbove = r23;
                            chatMessageCell.isSmallImage = r23;
                            chatMessageCell.lastLoadingSizeTotal = 0L;
                            if (chatMessageCell.scheduledInvalidate) {
                            }
                            chatMessageCell.links.clear();
                            chatMessageCell.pressedLink = null;
                            chatMessageCell.pressedEmoji = null;
                            chatMessageCell.pressedLinkType = -1;
                            messageObject17.forceUpdate = r23;
                            chatMessageCell.drawPhotoImage = r23;
                            chatMessageCell.drawMediaCheckBox = r23;
                            chatMessageCell.hasLinkPreview = r23;
                            chatMessageCell.hasOldCaptionPreview = r23;
                            chatMessageCell.hasGamePreview = r23;
                            chatMessageCell.hasInvoicePreview = r23;
                            chatMessageCell.commentButtonPressed = r23;
                            chatMessageCell.instantPressed = r23;
                            chatMessageCell.gradientDrawable = null;
                            chatMessageCell.setInstantButtonPressed(r23);
                            if (!z6) {
                            }
                            resetContactButtonsPressedState();
                            buttonBounce = chatMessageCell.titleLabelBounce;
                            if (buttonBounce != null) {
                            }
                            chatMessageCell.drawnContactButtonsFlag = r3;
                            chatMessageCell.drawContact = r3;
                            chatMessageCell.drawContactView = r3;
                            chatMessageCell.drawContactSendMessage = r3;
                            chatMessageCell.drawContactAdd = r3;
                            chatMessageCell.spoilerPressed = null;
                            chatMessageCell.isSpoilerRevealing = r3;
                            chatMessageCell.linkPreviewPressed = r3;
                            chatMessageCell.buttonPressed = r3;
                            chatMessageCell.additionalTimeOffsetY = r3;
                            chatMessageCell.miniButtonPressed = r3;
                            chatMessageCell.pressedBotButton = i3;
                            chatMessageCell.pressedVoteButton = i3;
                            chatMessageCell.pollHintPressed = r3;
                            chatMessageCell.psaHintPressed = r3;
                            chatMessageCell.linkPreviewHeight = r3;
                            chatMessageCell.mediaOffsetY = r3;
                            chatMessageCell.documentAttachType = r3;
                            chatMessageCell.documentAttach = null;
                            chatMessageCell.descriptionLayout = null;
                            chatMessageCell.titleLayout = null;
                            chatMessageCell.videoInfoLayout = null;
                            chatMessageCell.photosCountLayout = null;
                            chatMessageCell.siteNameLayout = null;
                            chatMessageCell.titleLabelLayout = null;
                            chatMessageCell.authorLayout = null;
                            chatMessageCell.captionFullWidth = r3;
                            chatMessageCell.captionLayout = null;
                            chatMessageCell.captionWidth = r3;
                            chatMessageCell.captionHeight = r3;
                            chatMessageCell.captionOffsetX = r3;
                            chatMessageCell.currentCaption = null;
                            chatMessageCell.captionLayout = null;
                            chatMessageCell.docTitleLayout = null;
                            chatMessageCell.drawImageButton = r3;
                            chatMessageCell.drawVideoImageButton = r3;
                            chatMessageCell.currentPhotoLocation = null;
                            chatMessageCell.currentPhotoThumbLocation = null;
                            chatMessageCell.currentPhotoObject = null;
                            chatMessageCell.photoParentObject = null;
                            chatMessageCell.currentPhotoObjectThumb = null;
                            chatMessageCell.currentPhotoObjectThumbStripped = null;
                            if (!z3) {
                            }
                            chatMessageCell.currentPhotoFilter = null;
                            chatMessageCell.buttonState = i3;
                            chatMessageCell.miniButtonState = i3;
                            chatMessageCell.hasMiniProgress = 0;
                            if (chatMessageCell.addedForTest) {
                            }
                            chatMessageCell.addedForTest = false;
                            chatMessageCell.photoNotSet = false;
                            chatMessageCell.drawBackground = z49;
                            chatMessageCell.drawName = false;
                            chatMessageCell.useSeekBarWaveform = false;
                            chatMessageCell.useTranscribeButton = false;
                            chatMessageCell.drawInstantView = false;
                            chatMessageCell.drawInstantViewType = 0;
                            chatMessageCell.instantViewButtonText = null;
                            chatMessageCell.drawForwardedName = false;
                            chatMessageCell.drawCommentButton = false;
                            chatMessageCell.photoImage.setSideClip(0.0f);
                            chatMessageCell.photoImage.setAspectFit(false);
                            chatMessageCell.gradientShader = null;
                            chatMessageCell.motionBackgroundDrawable = null;
                            chatMessageCell.imageBackgroundColor = 0;
                            chatMessageCell.imageBackgroundGradientColor1 = 0;
                            chatMessageCell.imageBackgroundGradientColor2 = 0;
                            chatMessageCell.imageBackgroundIntensity = 0.0f;
                            chatMessageCell.imageBackgroundGradientColor3 = 0;
                            chatMessageCell.imageBackgroundGradientRotation = 45;
                            chatMessageCell.imageBackgroundSideColor = 0;
                            chatMessageCell.mediaBackground = false;
                            expiredStoryView = chatMessageCell.expiredStoryView;
                            if (expiredStoryView != null) {
                            }
                            chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                            TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader222222222 = messageObject17.messageOwner.fwd_from;
                            if (tLRPC$MessageFwdHeader222222222 == null) {
                            }
                            chatMessageCell.hasPsaHint = z8;
                            if (z8) {
                            }
                            chatMessageCell.photoImage.setAlpha(f);
                            if (!z3) {
                            }
                            chatMessageCell.pollButtons.clear();
                            chatMessageCell.availableTimeWidth = 0;
                            chatMessageCell.photoImage.setForceLoading(false);
                            chatMessageCell.photoImage.setNeedsQualityThumb(false);
                            chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                            chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                            chatMessageCell.photoImage.setColorFilter(null);
                            chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                            if (!z51) {
                            }
                            messageObject17.reactionsChanged = false;
                            TLRPC$Message tLRPC$Message7222222222 = messageObject17.messageOwner;
                            if (tLRPC$Message7222222222 == null) {
                            }
                            if (messageObject.shouldDrawReactions()) {
                            }
                            chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                            if (z3) {
                            }
                            groupedMessages4 = chatMessageCell.currentMessagesGroup;
                            if (groupedMessages4 != null) {
                            }
                            isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                            if (chatMessageCell.hasDiscussion) {
                            }
                            MessageObject.GroupedMessagePosition groupedMessagePosition182222222222222 = chatMessageCell.currentPosition;
                            if (groupedMessagePosition182222222222222 == null) {
                            }
                            repliesCount = getRepliesCount();
                            if (!messageObject.shouldDrawWithoutBackground()) {
                            }
                            if (!chatMessageCell.isRepliesChat) {
                            }
                            chatMessageCell.commentLayout = null;
                            chatMessageCell.drawCommentNumber = false;
                            chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                            i4 = 2;
                            if (messageObject17.type != 27) {
                            }
                            i7 = 0;
                            z9 = true;
                            if (chatMessageCell.currentPosition == null) {
                            }
                            i8 = 5;
                            i11 = -1;
                            i12 = 8;
                            groupedMessagePosition = chatMessageCell.currentPosition;
                            if (groupedMessagePosition != null) {
                            }
                            int i16422222222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                            messageObject3 = chatMessageCell.currentMessageObject;
                            if (messageObject3.eventId == 0) {
                            }
                            f3 = 0.0f;
                            chatMessageCell.botButtons.clear();
                            if (z51) {
                            }
                            if (!messageObject2.isRestrictedMessage) {
                            }
                            chatMessageCell.substractBackgroundHeight = 0;
                            chatMessageCell.keyboardHeight = 0;
                            if (chatMessageCell.drawCommentButton) {
                            }
                            z12 = chatMessageCell.drawPinnedBottom;
                            if (z12) {
                            }
                            if (z12) {
                            }
                            if (!chatMessageCell.mediaBackground) {
                            }
                            if (messageObject2.type != 19) {
                            }
                            if (chatMessageCell.drawPhotoImage) {
                            }
                            if (chatMessageCell.documentAttachType != i8) {
                            }
                            calculateUnlockXY();
                            if (z9) {
                            }
                            updateAnimatedEmojis();
                            stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                            if (stickerSetLinkIcon2 != null) {
                            }
                            r25 = 0;
                            if (z51) {
                            }
                            transcribeButton = chatMessageCell.transcribeButton;
                            if (transcribeButton != null) {
                            }
                            updateWaveform();
                            if (z51) {
                            }
                            z44 = true;
                            z45 = false;
                            z46 = false;
                            chatMessageCell.updateButtonState(z45, z46, z44);
                            if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                            }
                            chatMessageCellDelegate2 = chatMessageCell.delegate;
                            if (chatMessageCellDelegate2 != null) {
                            }
                            chatMessageCell.accessibilityVirtualViewBounds.clear();
                            chatMessageCell.transitionParams.updatePhotoImageX = true;
                            chatMessageCell.highlightCaptionToSetEnd = i11;
                            chatMessageCell.highlightCaptionToSetStart = i11;
                            updateFlagSecure();
                        }
                        chatMessageCell.currentMessagesGroup = null;
                        chatMessageCell.currentPosition = null;
                        groupedMessages3 = chatMessageCell.currentMessagesGroup;
                        if (groupedMessages3 == null) {
                        }
                        chatMessageCell.drawPinnedTop = chatMessageCell.pinnedTop;
                        chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom;
                        boolean z5322222 = chatMessageCell.isPlayingRound;
                        chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
                        chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
                        chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                        chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
                        chatMessageCell.photoImage.setGradientBitmap(null);
                        chatMessageCell.photoImage.clearDecorators();
                        chatMessageCell.photoImage.setInvalidateAll(false);
                        chatMessageCell.linkPreviewY = 0;
                        chatMessageCell.lastTranslated = messageObject17.translated;
                        TLRPC$Message tLRPC$Message6222222 = messageObject17.messageOwner;
                        chatMessageCell.lastSendState = tLRPC$Message6222222.send_state;
                        chatMessageCell.lastDeleteDate = tLRPC$Message6222222.destroyTime;
                        chatMessageCell.lastViewsCount = tLRPC$Message6222222.views;
                        chatMessageCell.lastRepliesCount = getRepliesCount();
                        if (z51) {
                        }
                        chatMessageCell.gamePreviewPressed = r2;
                        chatMessageCell.sideButtonPressed = r2;
                        chatMessageCell.pressedSideButton = r2;
                        chatMessageCell.hasNewLineForTime = r2;
                        chatMessageCell.flipImage = r2;
                        chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
                        chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                        needDrawAvatar = needDrawAvatar();
                        if (messageObject17.customAvatarDrawable == null) {
                        }
                        chatMessageCell.isAvatarVisible = true;
                        r22 = 0;
                        z7 = true;
                        chatMessageCell.wasLayout = r22;
                        chatMessageCell.groupPhotoInvisible = r22;
                        chatMessageCell.animatingDrawVideoImageButton = r22;
                        chatMessageCell.drawVideoSize = r22;
                        chatMessageCell.canStreamVideo = r22;
                        chatMessageCell.animatingNoSound = r22;
                        if (!messageObject.isSponsored()) {
                        }
                        chatMessageCell.hasReplyQuote = r23;
                        chatMessageCell.isReplyQuote = r23;
                        chatMessageCell.replyNameLayout = null;
                        chatMessageCell.adminLayout = null;
                        chatMessageCell.boostCounterBounds = null;
                        chatMessageCell.boostCounterSpan = null;
                        chatMessageCell.checkOnlyButtonPressed = r23;
                        chatMessageCell.replyTextLayout = null;
                        AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                        chatMessageCell.lastReplyMessage = null;
                        chatMessageCell.hasEmbed = r23;
                        chatMessageCell.autoPlayingMedia = r23;
                        chatMessageCell.replyNameWidth = r23;
                        chatMessageCell.replyTextWidth = r23;
                        chatMessageCell.replyTextHeight = r23;
                        chatMessageCell.viaWidth = r23;
                        chatMessageCell.viaNameWidth = r23;
                        chatMessageCell.viaOnly = r23;
                        chatMessageCell.addedCaptionHeight = r23;
                        chatMessageCell.currentReplyPhoto = null;
                        chatMessageCell.currentUser = null;
                        chatMessageCell.currentChat = null;
                        chatMessageCell.currentViaBotUser = null;
                        chatMessageCell.instantViewLayout = null;
                        chatMessageCell.drawNameLayout = r23;
                        chatMessageCell.linkPreviewAbove = r23;
                        chatMessageCell.isSmallImage = r23;
                        chatMessageCell.lastLoadingSizeTotal = 0L;
                        if (chatMessageCell.scheduledInvalidate) {
                        }
                        chatMessageCell.links.clear();
                        chatMessageCell.pressedLink = null;
                        chatMessageCell.pressedEmoji = null;
                        chatMessageCell.pressedLinkType = -1;
                        messageObject17.forceUpdate = r23;
                        chatMessageCell.drawPhotoImage = r23;
                        chatMessageCell.drawMediaCheckBox = r23;
                        chatMessageCell.hasLinkPreview = r23;
                        chatMessageCell.hasOldCaptionPreview = r23;
                        chatMessageCell.hasGamePreview = r23;
                        chatMessageCell.hasInvoicePreview = r23;
                        chatMessageCell.commentButtonPressed = r23;
                        chatMessageCell.instantPressed = r23;
                        chatMessageCell.gradientDrawable = null;
                        chatMessageCell.setInstantButtonPressed(r23);
                        if (!z6) {
                        }
                        resetContactButtonsPressedState();
                        buttonBounce = chatMessageCell.titleLabelBounce;
                        if (buttonBounce != null) {
                        }
                        chatMessageCell.drawnContactButtonsFlag = r3;
                        chatMessageCell.drawContact = r3;
                        chatMessageCell.drawContactView = r3;
                        chatMessageCell.drawContactSendMessage = r3;
                        chatMessageCell.drawContactAdd = r3;
                        chatMessageCell.spoilerPressed = null;
                        chatMessageCell.isSpoilerRevealing = r3;
                        chatMessageCell.linkPreviewPressed = r3;
                        chatMessageCell.buttonPressed = r3;
                        chatMessageCell.additionalTimeOffsetY = r3;
                        chatMessageCell.miniButtonPressed = r3;
                        chatMessageCell.pressedBotButton = i3;
                        chatMessageCell.pressedVoteButton = i3;
                        chatMessageCell.pollHintPressed = r3;
                        chatMessageCell.psaHintPressed = r3;
                        chatMessageCell.linkPreviewHeight = r3;
                        chatMessageCell.mediaOffsetY = r3;
                        chatMessageCell.documentAttachType = r3;
                        chatMessageCell.documentAttach = null;
                        chatMessageCell.descriptionLayout = null;
                        chatMessageCell.titleLayout = null;
                        chatMessageCell.videoInfoLayout = null;
                        chatMessageCell.photosCountLayout = null;
                        chatMessageCell.siteNameLayout = null;
                        chatMessageCell.titleLabelLayout = null;
                        chatMessageCell.authorLayout = null;
                        chatMessageCell.captionFullWidth = r3;
                        chatMessageCell.captionLayout = null;
                        chatMessageCell.captionWidth = r3;
                        chatMessageCell.captionHeight = r3;
                        chatMessageCell.captionOffsetX = r3;
                        chatMessageCell.currentCaption = null;
                        chatMessageCell.captionLayout = null;
                        chatMessageCell.docTitleLayout = null;
                        chatMessageCell.drawImageButton = r3;
                        chatMessageCell.drawVideoImageButton = r3;
                        chatMessageCell.currentPhotoLocation = null;
                        chatMessageCell.currentPhotoThumbLocation = null;
                        chatMessageCell.currentPhotoObject = null;
                        chatMessageCell.photoParentObject = null;
                        chatMessageCell.currentPhotoObjectThumb = null;
                        chatMessageCell.currentPhotoObjectThumbStripped = null;
                        if (!z3) {
                        }
                        chatMessageCell.currentPhotoFilter = null;
                        chatMessageCell.buttonState = i3;
                        chatMessageCell.miniButtonState = i3;
                        chatMessageCell.hasMiniProgress = 0;
                        if (chatMessageCell.addedForTest) {
                        }
                        chatMessageCell.addedForTest = false;
                        chatMessageCell.photoNotSet = false;
                        chatMessageCell.drawBackground = z49;
                        chatMessageCell.drawName = false;
                        chatMessageCell.useSeekBarWaveform = false;
                        chatMessageCell.useTranscribeButton = false;
                        chatMessageCell.drawInstantView = false;
                        chatMessageCell.drawInstantViewType = 0;
                        chatMessageCell.instantViewButtonText = null;
                        chatMessageCell.drawForwardedName = false;
                        chatMessageCell.drawCommentButton = false;
                        chatMessageCell.photoImage.setSideClip(0.0f);
                        chatMessageCell.photoImage.setAspectFit(false);
                        chatMessageCell.gradientShader = null;
                        chatMessageCell.motionBackgroundDrawable = null;
                        chatMessageCell.imageBackgroundColor = 0;
                        chatMessageCell.imageBackgroundGradientColor1 = 0;
                        chatMessageCell.imageBackgroundGradientColor2 = 0;
                        chatMessageCell.imageBackgroundIntensity = 0.0f;
                        chatMessageCell.imageBackgroundGradientColor3 = 0;
                        chatMessageCell.imageBackgroundGradientRotation = 45;
                        chatMessageCell.imageBackgroundSideColor = 0;
                        chatMessageCell.mediaBackground = false;
                        expiredStoryView = chatMessageCell.expiredStoryView;
                        if (expiredStoryView != null) {
                        }
                        chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2222222222 = messageObject17.messageOwner.fwd_from;
                        if (tLRPC$MessageFwdHeader2222222222 == null) {
                        }
                        chatMessageCell.hasPsaHint = z8;
                        if (z8) {
                        }
                        chatMessageCell.photoImage.setAlpha(f);
                        if (!z3) {
                        }
                        chatMessageCell.pollButtons.clear();
                        chatMessageCell.availableTimeWidth = 0;
                        chatMessageCell.photoImage.setForceLoading(false);
                        chatMessageCell.photoImage.setNeedsQualityThumb(false);
                        chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                        chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                        chatMessageCell.photoImage.setColorFilter(null);
                        chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                        if (!z51) {
                        }
                        messageObject17.reactionsChanged = false;
                        TLRPC$Message tLRPC$Message72222222222 = messageObject17.messageOwner;
                        if (tLRPC$Message72222222222 == null) {
                        }
                        if (messageObject.shouldDrawReactions()) {
                        }
                        chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                        if (z3) {
                        }
                        groupedMessages4 = chatMessageCell.currentMessagesGroup;
                        if (groupedMessages4 != null) {
                        }
                        isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                        if (chatMessageCell.hasDiscussion) {
                        }
                        MessageObject.GroupedMessagePosition groupedMessagePosition1822222222222222 = chatMessageCell.currentPosition;
                        if (groupedMessagePosition1822222222222222 == null) {
                        }
                        repliesCount = getRepliesCount();
                        if (!messageObject.shouldDrawWithoutBackground()) {
                        }
                        if (!chatMessageCell.isRepliesChat) {
                        }
                        chatMessageCell.commentLayout = null;
                        chatMessageCell.drawCommentNumber = false;
                        chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                        i4 = 2;
                        if (messageObject17.type != 27) {
                        }
                        i7 = 0;
                        z9 = true;
                        if (chatMessageCell.currentPosition == null) {
                        }
                        i8 = 5;
                        i11 = -1;
                        i12 = 8;
                        groupedMessagePosition = chatMessageCell.currentPosition;
                        if (groupedMessagePosition != null) {
                        }
                        int i164222222222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                        messageObject3 = chatMessageCell.currentMessageObject;
                        if (messageObject3.eventId == 0) {
                        }
                        f3 = 0.0f;
                        chatMessageCell.botButtons.clear();
                        if (z51) {
                        }
                        if (!messageObject2.isRestrictedMessage) {
                        }
                        chatMessageCell.substractBackgroundHeight = 0;
                        chatMessageCell.keyboardHeight = 0;
                        if (chatMessageCell.drawCommentButton) {
                        }
                        z12 = chatMessageCell.drawPinnedBottom;
                        if (z12) {
                        }
                        if (z12) {
                        }
                        if (!chatMessageCell.mediaBackground) {
                        }
                        if (messageObject2.type != 19) {
                        }
                        if (chatMessageCell.drawPhotoImage) {
                        }
                        if (chatMessageCell.documentAttachType != i8) {
                        }
                        calculateUnlockXY();
                        if (z9) {
                        }
                        updateAnimatedEmojis();
                        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                        if (stickerSetLinkIcon2 != null) {
                        }
                        r25 = 0;
                        if (z51) {
                        }
                        transcribeButton = chatMessageCell.transcribeButton;
                        if (transcribeButton != null) {
                        }
                        updateWaveform();
                        if (z51) {
                        }
                        z44 = true;
                        z45 = false;
                        z46 = false;
                        chatMessageCell.updateButtonState(z45, z46, z44);
                        if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                        }
                        chatMessageCellDelegate2 = chatMessageCell.delegate;
                        if (chatMessageCellDelegate2 != null) {
                        }
                        chatMessageCell.accessibilityVirtualViewBounds.clear();
                        chatMessageCell.transitionParams.updatePhotoImageX = true;
                        chatMessageCell.highlightCaptionToSetEnd = i11;
                        chatMessageCell.highlightCaptionToSetStart = i11;
                        updateFlagSecure();
                    }
                    if (!z6) {
                    }
                    tLRPC$Poll2 = chatMessageCell.lastPoll;
                    if (tLRPC$Poll2 != tLRPC$Poll) {
                    }
                    chatMessageCell.animatePollAvatars = false;
                    if (z6) {
                    }
                    if (!z51) {
                    }
                    if (!z4) {
                    }
                    i2 = 5;
                    i3 = -1;
                    f = 1.0f;
                    int i14922 = 2;
                    if (z3) {
                    }
                    chatMessageCell.updatedContent = true;
                    stickerSetLinkIcon = chatMessageCell.stickerSetIcons;
                    if (stickerSetLinkIcon != null) {
                    }
                    chatMessageCell.wasPinned = chatMessageCell.isPinned;
                    chatMessageCell.pinnedBottom = z;
                    chatMessageCell.pinnedTop = z2;
                    chatMessageCell.currentMessageObject = messageObject17;
                    chatMessageCell.currentMessagesGroup = groupedMessages;
                    chatMessageCell.lastTime = -2.0d;
                    chatMessageCell.lastPostAuthor = messageObject17.messageOwner.post_author;
                    if (!z51) {
                    }
                    chatMessageCell.isHighlightedAnimated = false;
                    chatMessageCell.wasTranscriptionOpen = false;
                    if (chatMessageCell.highlightedQuote) {
                    }
                    chatMessageCell.highlightedQuote = false;
                    chatMessageCell.widthBeforeNewTimeLine = -1;
                    groupedMessages2 = chatMessageCell.currentMessagesGroup;
                    if (groupedMessages2 != null) {
                    }
                    chatMessageCell.currentMessagesGroup = null;
                    chatMessageCell.currentPosition = null;
                    groupedMessages3 = chatMessageCell.currentMessagesGroup;
                    if (groupedMessages3 == null) {
                    }
                    chatMessageCell.drawPinnedTop = chatMessageCell.pinnedTop;
                    chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom;
                    boolean z53222222 = chatMessageCell.isPlayingRound;
                    chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
                    chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
                    chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                    chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
                    chatMessageCell.photoImage.setGradientBitmap(null);
                    chatMessageCell.photoImage.clearDecorators();
                    chatMessageCell.photoImage.setInvalidateAll(false);
                    chatMessageCell.linkPreviewY = 0;
                    chatMessageCell.lastTranslated = messageObject17.translated;
                    TLRPC$Message tLRPC$Message62222222 = messageObject17.messageOwner;
                    chatMessageCell.lastSendState = tLRPC$Message62222222.send_state;
                    chatMessageCell.lastDeleteDate = tLRPC$Message62222222.destroyTime;
                    chatMessageCell.lastViewsCount = tLRPC$Message62222222.views;
                    chatMessageCell.lastRepliesCount = getRepliesCount();
                    if (z51) {
                    }
                    chatMessageCell.gamePreviewPressed = r2;
                    chatMessageCell.sideButtonPressed = r2;
                    chatMessageCell.pressedSideButton = r2;
                    chatMessageCell.hasNewLineForTime = r2;
                    chatMessageCell.flipImage = r2;
                    chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
                    chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                    needDrawAvatar = needDrawAvatar();
                    if (messageObject17.customAvatarDrawable == null) {
                    }
                    chatMessageCell.isAvatarVisible = true;
                    r22 = 0;
                    z7 = true;
                    chatMessageCell.wasLayout = r22;
                    chatMessageCell.groupPhotoInvisible = r22;
                    chatMessageCell.animatingDrawVideoImageButton = r22;
                    chatMessageCell.drawVideoSize = r22;
                    chatMessageCell.canStreamVideo = r22;
                    chatMessageCell.animatingNoSound = r22;
                    if (!messageObject.isSponsored()) {
                    }
                    chatMessageCell.hasReplyQuote = r23;
                    chatMessageCell.isReplyQuote = r23;
                    chatMessageCell.replyNameLayout = null;
                    chatMessageCell.adminLayout = null;
                    chatMessageCell.boostCounterBounds = null;
                    chatMessageCell.boostCounterSpan = null;
                    chatMessageCell.checkOnlyButtonPressed = r23;
                    chatMessageCell.replyTextLayout = null;
                    AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                    chatMessageCell.lastReplyMessage = null;
                    chatMessageCell.hasEmbed = r23;
                    chatMessageCell.autoPlayingMedia = r23;
                    chatMessageCell.replyNameWidth = r23;
                    chatMessageCell.replyTextWidth = r23;
                    chatMessageCell.replyTextHeight = r23;
                    chatMessageCell.viaWidth = r23;
                    chatMessageCell.viaNameWidth = r23;
                    chatMessageCell.viaOnly = r23;
                    chatMessageCell.addedCaptionHeight = r23;
                    chatMessageCell.currentReplyPhoto = null;
                    chatMessageCell.currentUser = null;
                    chatMessageCell.currentChat = null;
                    chatMessageCell.currentViaBotUser = null;
                    chatMessageCell.instantViewLayout = null;
                    chatMessageCell.drawNameLayout = r23;
                    chatMessageCell.linkPreviewAbove = r23;
                    chatMessageCell.isSmallImage = r23;
                    chatMessageCell.lastLoadingSizeTotal = 0L;
                    if (chatMessageCell.scheduledInvalidate) {
                    }
                    chatMessageCell.links.clear();
                    chatMessageCell.pressedLink = null;
                    chatMessageCell.pressedEmoji = null;
                    chatMessageCell.pressedLinkType = -1;
                    messageObject17.forceUpdate = r23;
                    chatMessageCell.drawPhotoImage = r23;
                    chatMessageCell.drawMediaCheckBox = r23;
                    chatMessageCell.hasLinkPreview = r23;
                    chatMessageCell.hasOldCaptionPreview = r23;
                    chatMessageCell.hasGamePreview = r23;
                    chatMessageCell.hasInvoicePreview = r23;
                    chatMessageCell.commentButtonPressed = r23;
                    chatMessageCell.instantPressed = r23;
                    chatMessageCell.gradientDrawable = null;
                    chatMessageCell.setInstantButtonPressed(r23);
                    if (!z6) {
                    }
                    resetContactButtonsPressedState();
                    buttonBounce = chatMessageCell.titleLabelBounce;
                    if (buttonBounce != null) {
                    }
                    chatMessageCell.drawnContactButtonsFlag = r3;
                    chatMessageCell.drawContact = r3;
                    chatMessageCell.drawContactView = r3;
                    chatMessageCell.drawContactSendMessage = r3;
                    chatMessageCell.drawContactAdd = r3;
                    chatMessageCell.spoilerPressed = null;
                    chatMessageCell.isSpoilerRevealing = r3;
                    chatMessageCell.linkPreviewPressed = r3;
                    chatMessageCell.buttonPressed = r3;
                    chatMessageCell.additionalTimeOffsetY = r3;
                    chatMessageCell.miniButtonPressed = r3;
                    chatMessageCell.pressedBotButton = i3;
                    chatMessageCell.pressedVoteButton = i3;
                    chatMessageCell.pollHintPressed = r3;
                    chatMessageCell.psaHintPressed = r3;
                    chatMessageCell.linkPreviewHeight = r3;
                    chatMessageCell.mediaOffsetY = r3;
                    chatMessageCell.documentAttachType = r3;
                    chatMessageCell.documentAttach = null;
                    chatMessageCell.descriptionLayout = null;
                    chatMessageCell.titleLayout = null;
                    chatMessageCell.videoInfoLayout = null;
                    chatMessageCell.photosCountLayout = null;
                    chatMessageCell.siteNameLayout = null;
                    chatMessageCell.titleLabelLayout = null;
                    chatMessageCell.authorLayout = null;
                    chatMessageCell.captionFullWidth = r3;
                    chatMessageCell.captionLayout = null;
                    chatMessageCell.captionWidth = r3;
                    chatMessageCell.captionHeight = r3;
                    chatMessageCell.captionOffsetX = r3;
                    chatMessageCell.currentCaption = null;
                    chatMessageCell.captionLayout = null;
                    chatMessageCell.docTitleLayout = null;
                    chatMessageCell.drawImageButton = r3;
                    chatMessageCell.drawVideoImageButton = r3;
                    chatMessageCell.currentPhotoLocation = null;
                    chatMessageCell.currentPhotoThumbLocation = null;
                    chatMessageCell.currentPhotoObject = null;
                    chatMessageCell.photoParentObject = null;
                    chatMessageCell.currentPhotoObjectThumb = null;
                    chatMessageCell.currentPhotoObjectThumbStripped = null;
                    if (!z3) {
                    }
                    chatMessageCell.currentPhotoFilter = null;
                    chatMessageCell.buttonState = i3;
                    chatMessageCell.miniButtonState = i3;
                    chatMessageCell.hasMiniProgress = 0;
                    if (chatMessageCell.addedForTest) {
                    }
                    chatMessageCell.addedForTest = false;
                    chatMessageCell.photoNotSet = false;
                    chatMessageCell.drawBackground = z49;
                    chatMessageCell.drawName = false;
                    chatMessageCell.useSeekBarWaveform = false;
                    chatMessageCell.useTranscribeButton = false;
                    chatMessageCell.drawInstantView = false;
                    chatMessageCell.drawInstantViewType = 0;
                    chatMessageCell.instantViewButtonText = null;
                    chatMessageCell.drawForwardedName = false;
                    chatMessageCell.drawCommentButton = false;
                    chatMessageCell.photoImage.setSideClip(0.0f);
                    chatMessageCell.photoImage.setAspectFit(false);
                    chatMessageCell.gradientShader = null;
                    chatMessageCell.motionBackgroundDrawable = null;
                    chatMessageCell.imageBackgroundColor = 0;
                    chatMessageCell.imageBackgroundGradientColor1 = 0;
                    chatMessageCell.imageBackgroundGradientColor2 = 0;
                    chatMessageCell.imageBackgroundIntensity = 0.0f;
                    chatMessageCell.imageBackgroundGradientColor3 = 0;
                    chatMessageCell.imageBackgroundGradientRotation = 45;
                    chatMessageCell.imageBackgroundSideColor = 0;
                    chatMessageCell.mediaBackground = false;
                    expiredStoryView = chatMessageCell.expiredStoryView;
                    if (expiredStoryView != null) {
                    }
                    chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader22222222222 = messageObject17.messageOwner.fwd_from;
                    if (tLRPC$MessageFwdHeader22222222222 == null) {
                    }
                    chatMessageCell.hasPsaHint = z8;
                    if (z8) {
                    }
                    chatMessageCell.photoImage.setAlpha(f);
                    if (!z3) {
                    }
                    chatMessageCell.pollButtons.clear();
                    chatMessageCell.availableTimeWidth = 0;
                    chatMessageCell.photoImage.setForceLoading(false);
                    chatMessageCell.photoImage.setNeedsQualityThumb(false);
                    chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                    chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                    chatMessageCell.photoImage.setColorFilter(null);
                    chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                    if (!z51) {
                    }
                    messageObject17.reactionsChanged = false;
                    TLRPC$Message tLRPC$Message722222222222 = messageObject17.messageOwner;
                    if (tLRPC$Message722222222222 == null) {
                    }
                    if (messageObject.shouldDrawReactions()) {
                    }
                    chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                    if (z3) {
                    }
                    groupedMessages4 = chatMessageCell.currentMessagesGroup;
                    if (groupedMessages4 != null) {
                    }
                    isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                    if (chatMessageCell.hasDiscussion) {
                    }
                    MessageObject.GroupedMessagePosition groupedMessagePosition18222222222222222 = chatMessageCell.currentPosition;
                    if (groupedMessagePosition18222222222222222 == null) {
                    }
                    repliesCount = getRepliesCount();
                    if (!messageObject.shouldDrawWithoutBackground()) {
                    }
                    if (!chatMessageCell.isRepliesChat) {
                    }
                    chatMessageCell.commentLayout = null;
                    chatMessageCell.drawCommentNumber = false;
                    chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                    i4 = 2;
                    if (messageObject17.type != 27) {
                    }
                    i7 = 0;
                    z9 = true;
                    if (chatMessageCell.currentPosition == null) {
                    }
                    i8 = 5;
                    i11 = -1;
                    i12 = 8;
                    groupedMessagePosition = chatMessageCell.currentPosition;
                    if (groupedMessagePosition != null) {
                    }
                    int i1642222222222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                    messageObject3 = chatMessageCell.currentMessageObject;
                    if (messageObject3.eventId == 0) {
                    }
                    f3 = 0.0f;
                    chatMessageCell.botButtons.clear();
                    if (z51) {
                    }
                    if (!messageObject2.isRestrictedMessage) {
                    }
                    chatMessageCell.substractBackgroundHeight = 0;
                    chatMessageCell.keyboardHeight = 0;
                    if (chatMessageCell.drawCommentButton) {
                    }
                    z12 = chatMessageCell.drawPinnedBottom;
                    if (z12) {
                    }
                    if (z12) {
                    }
                    if (!chatMessageCell.mediaBackground) {
                    }
                    if (messageObject2.type != 19) {
                    }
                    if (chatMessageCell.drawPhotoImage) {
                    }
                    if (chatMessageCell.documentAttachType != i8) {
                    }
                    calculateUnlockXY();
                    if (z9) {
                    }
                    updateAnimatedEmojis();
                    stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                    if (stickerSetLinkIcon2 != null) {
                    }
                    r25 = 0;
                    if (z51) {
                    }
                    transcribeButton = chatMessageCell.transcribeButton;
                    if (transcribeButton != null) {
                    }
                    updateWaveform();
                    if (z51) {
                    }
                    z44 = true;
                    z45 = false;
                    z46 = false;
                    chatMessageCell.updateButtonState(z45, z46, z44);
                    if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                    }
                    chatMessageCellDelegate2 = chatMessageCell.delegate;
                    if (chatMessageCellDelegate2 != null) {
                    }
                    chatMessageCell.accessibilityVirtualViewBounds.clear();
                    chatMessageCell.transitionParams.updatePhotoImageX = true;
                    chatMessageCell.highlightCaptionToSetEnd = i11;
                    chatMessageCell.highlightCaptionToSetStart = i11;
                    updateFlagSecure();
                }
                z6 = false;
                if (!z4) {
                }
                i2 = 5;
                i3 = -1;
                f = 1.0f;
                int i149222 = 2;
                if (z3) {
                }
                chatMessageCell.updatedContent = true;
                stickerSetLinkIcon = chatMessageCell.stickerSetIcons;
                if (stickerSetLinkIcon != null) {
                }
                chatMessageCell.wasPinned = chatMessageCell.isPinned;
                chatMessageCell.pinnedBottom = z;
                chatMessageCell.pinnedTop = z2;
                chatMessageCell.currentMessageObject = messageObject17;
                chatMessageCell.currentMessagesGroup = groupedMessages;
                chatMessageCell.lastTime = -2.0d;
                chatMessageCell.lastPostAuthor = messageObject17.messageOwner.post_author;
                if (!z51) {
                }
                chatMessageCell.isHighlightedAnimated = false;
                chatMessageCell.wasTranscriptionOpen = false;
                if (chatMessageCell.highlightedQuote) {
                }
                chatMessageCell.highlightedQuote = false;
                chatMessageCell.widthBeforeNewTimeLine = -1;
                groupedMessages2 = chatMessageCell.currentMessagesGroup;
                if (groupedMessages2 != null) {
                }
                chatMessageCell.currentMessagesGroup = null;
                chatMessageCell.currentPosition = null;
                groupedMessages3 = chatMessageCell.currentMessagesGroup;
                if (groupedMessages3 == null) {
                }
                chatMessageCell.drawPinnedTop = chatMessageCell.pinnedTop;
                chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom;
                boolean z532222222 = chatMessageCell.isPlayingRound;
                chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
                chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
                chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
                chatMessageCell.photoImage.setGradientBitmap(null);
                chatMessageCell.photoImage.clearDecorators();
                chatMessageCell.photoImage.setInvalidateAll(false);
                chatMessageCell.linkPreviewY = 0;
                chatMessageCell.lastTranslated = messageObject17.translated;
                TLRPC$Message tLRPC$Message622222222 = messageObject17.messageOwner;
                chatMessageCell.lastSendState = tLRPC$Message622222222.send_state;
                chatMessageCell.lastDeleteDate = tLRPC$Message622222222.destroyTime;
                chatMessageCell.lastViewsCount = tLRPC$Message622222222.views;
                chatMessageCell.lastRepliesCount = getRepliesCount();
                if (z51) {
                }
                chatMessageCell.gamePreviewPressed = r2;
                chatMessageCell.sideButtonPressed = r2;
                chatMessageCell.pressedSideButton = r2;
                chatMessageCell.hasNewLineForTime = r2;
                chatMessageCell.flipImage = r2;
                chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
                chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
                needDrawAvatar = needDrawAvatar();
                if (messageObject17.customAvatarDrawable == null) {
                }
                chatMessageCell.isAvatarVisible = true;
                r22 = 0;
                z7 = true;
                chatMessageCell.wasLayout = r22;
                chatMessageCell.groupPhotoInvisible = r22;
                chatMessageCell.animatingDrawVideoImageButton = r22;
                chatMessageCell.drawVideoSize = r22;
                chatMessageCell.canStreamVideo = r22;
                chatMessageCell.animatingNoSound = r22;
                if (!messageObject.isSponsored()) {
                }
                chatMessageCell.hasReplyQuote = r23;
                chatMessageCell.isReplyQuote = r23;
                chatMessageCell.replyNameLayout = null;
                chatMessageCell.adminLayout = null;
                chatMessageCell.boostCounterBounds = null;
                chatMessageCell.boostCounterSpan = null;
                chatMessageCell.checkOnlyButtonPressed = r23;
                chatMessageCell.replyTextLayout = null;
                AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
                chatMessageCell.lastReplyMessage = null;
                chatMessageCell.hasEmbed = r23;
                chatMessageCell.autoPlayingMedia = r23;
                chatMessageCell.replyNameWidth = r23;
                chatMessageCell.replyTextWidth = r23;
                chatMessageCell.replyTextHeight = r23;
                chatMessageCell.viaWidth = r23;
                chatMessageCell.viaNameWidth = r23;
                chatMessageCell.viaOnly = r23;
                chatMessageCell.addedCaptionHeight = r23;
                chatMessageCell.currentReplyPhoto = null;
                chatMessageCell.currentUser = null;
                chatMessageCell.currentChat = null;
                chatMessageCell.currentViaBotUser = null;
                chatMessageCell.instantViewLayout = null;
                chatMessageCell.drawNameLayout = r23;
                chatMessageCell.linkPreviewAbove = r23;
                chatMessageCell.isSmallImage = r23;
                chatMessageCell.lastLoadingSizeTotal = 0L;
                if (chatMessageCell.scheduledInvalidate) {
                }
                chatMessageCell.links.clear();
                chatMessageCell.pressedLink = null;
                chatMessageCell.pressedEmoji = null;
                chatMessageCell.pressedLinkType = -1;
                messageObject17.forceUpdate = r23;
                chatMessageCell.drawPhotoImage = r23;
                chatMessageCell.drawMediaCheckBox = r23;
                chatMessageCell.hasLinkPreview = r23;
                chatMessageCell.hasOldCaptionPreview = r23;
                chatMessageCell.hasGamePreview = r23;
                chatMessageCell.hasInvoicePreview = r23;
                chatMessageCell.commentButtonPressed = r23;
                chatMessageCell.instantPressed = r23;
                chatMessageCell.gradientDrawable = null;
                chatMessageCell.setInstantButtonPressed(r23);
                if (!z6) {
                }
                resetContactButtonsPressedState();
                buttonBounce = chatMessageCell.titleLabelBounce;
                if (buttonBounce != null) {
                }
                chatMessageCell.drawnContactButtonsFlag = r3;
                chatMessageCell.drawContact = r3;
                chatMessageCell.drawContactView = r3;
                chatMessageCell.drawContactSendMessage = r3;
                chatMessageCell.drawContactAdd = r3;
                chatMessageCell.spoilerPressed = null;
                chatMessageCell.isSpoilerRevealing = r3;
                chatMessageCell.linkPreviewPressed = r3;
                chatMessageCell.buttonPressed = r3;
                chatMessageCell.additionalTimeOffsetY = r3;
                chatMessageCell.miniButtonPressed = r3;
                chatMessageCell.pressedBotButton = i3;
                chatMessageCell.pressedVoteButton = i3;
                chatMessageCell.pollHintPressed = r3;
                chatMessageCell.psaHintPressed = r3;
                chatMessageCell.linkPreviewHeight = r3;
                chatMessageCell.mediaOffsetY = r3;
                chatMessageCell.documentAttachType = r3;
                chatMessageCell.documentAttach = null;
                chatMessageCell.descriptionLayout = null;
                chatMessageCell.titleLayout = null;
                chatMessageCell.videoInfoLayout = null;
                chatMessageCell.photosCountLayout = null;
                chatMessageCell.siteNameLayout = null;
                chatMessageCell.titleLabelLayout = null;
                chatMessageCell.authorLayout = null;
                chatMessageCell.captionFullWidth = r3;
                chatMessageCell.captionLayout = null;
                chatMessageCell.captionWidth = r3;
                chatMessageCell.captionHeight = r3;
                chatMessageCell.captionOffsetX = r3;
                chatMessageCell.currentCaption = null;
                chatMessageCell.captionLayout = null;
                chatMessageCell.docTitleLayout = null;
                chatMessageCell.drawImageButton = r3;
                chatMessageCell.drawVideoImageButton = r3;
                chatMessageCell.currentPhotoLocation = null;
                chatMessageCell.currentPhotoThumbLocation = null;
                chatMessageCell.currentPhotoObject = null;
                chatMessageCell.photoParentObject = null;
                chatMessageCell.currentPhotoObjectThumb = null;
                chatMessageCell.currentPhotoObjectThumbStripped = null;
                if (!z3) {
                }
                chatMessageCell.currentPhotoFilter = null;
                chatMessageCell.buttonState = i3;
                chatMessageCell.miniButtonState = i3;
                chatMessageCell.hasMiniProgress = 0;
                if (chatMessageCell.addedForTest) {
                }
                chatMessageCell.addedForTest = false;
                chatMessageCell.photoNotSet = false;
                chatMessageCell.drawBackground = z49;
                chatMessageCell.drawName = false;
                chatMessageCell.useSeekBarWaveform = false;
                chatMessageCell.useTranscribeButton = false;
                chatMessageCell.drawInstantView = false;
                chatMessageCell.drawInstantViewType = 0;
                chatMessageCell.instantViewButtonText = null;
                chatMessageCell.drawForwardedName = false;
                chatMessageCell.drawCommentButton = false;
                chatMessageCell.photoImage.setSideClip(0.0f);
                chatMessageCell.photoImage.setAspectFit(false);
                chatMessageCell.gradientShader = null;
                chatMessageCell.motionBackgroundDrawable = null;
                chatMessageCell.imageBackgroundColor = 0;
                chatMessageCell.imageBackgroundGradientColor1 = 0;
                chatMessageCell.imageBackgroundGradientColor2 = 0;
                chatMessageCell.imageBackgroundIntensity = 0.0f;
                chatMessageCell.imageBackgroundGradientColor3 = 0;
                chatMessageCell.imageBackgroundGradientRotation = 45;
                chatMessageCell.imageBackgroundSideColor = 0;
                chatMessageCell.mediaBackground = false;
                expiredStoryView = chatMessageCell.expiredStoryView;
                if (expiredStoryView != null) {
                }
                chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader222222222222 = messageObject17.messageOwner.fwd_from;
                if (tLRPC$MessageFwdHeader222222222222 == null) {
                }
                chatMessageCell.hasPsaHint = z8;
                if (z8) {
                }
                chatMessageCell.photoImage.setAlpha(f);
                if (!z3) {
                }
                chatMessageCell.pollButtons.clear();
                chatMessageCell.availableTimeWidth = 0;
                chatMessageCell.photoImage.setForceLoading(false);
                chatMessageCell.photoImage.setNeedsQualityThumb(false);
                chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
                chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
                chatMessageCell.photoImage.setColorFilter(null);
                chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
                if (!z51) {
                }
                messageObject17.reactionsChanged = false;
                TLRPC$Message tLRPC$Message7222222222222 = messageObject17.messageOwner;
                if (tLRPC$Message7222222222222 == null) {
                }
                if (messageObject.shouldDrawReactions()) {
                }
                chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
                if (z3) {
                }
                groupedMessages4 = chatMessageCell.currentMessagesGroup;
                if (groupedMessages4 != null) {
                }
                isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
                if (chatMessageCell.hasDiscussion) {
                }
                MessageObject.GroupedMessagePosition groupedMessagePosition182222222222222222 = chatMessageCell.currentPosition;
                if (groupedMessagePosition182222222222222222 == null) {
                }
                repliesCount = getRepliesCount();
                if (!messageObject.shouldDrawWithoutBackground()) {
                }
                if (!chatMessageCell.isRepliesChat) {
                }
                chatMessageCell.commentLayout = null;
                chatMessageCell.drawCommentNumber = false;
                chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
                i4 = 2;
                if (messageObject17.type != 27) {
                }
                i7 = 0;
                z9 = true;
                if (chatMessageCell.currentPosition == null) {
                }
                i8 = 5;
                i11 = -1;
                i12 = 8;
                groupedMessagePosition = chatMessageCell.currentPosition;
                if (groupedMessagePosition != null) {
                }
                int i16422222222222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
                messageObject3 = chatMessageCell.currentMessageObject;
                if (messageObject3.eventId == 0) {
                }
                f3 = 0.0f;
                chatMessageCell.botButtons.clear();
                if (z51) {
                }
                if (!messageObject2.isRestrictedMessage) {
                }
                chatMessageCell.substractBackgroundHeight = 0;
                chatMessageCell.keyboardHeight = 0;
                if (chatMessageCell.drawCommentButton) {
                }
                z12 = chatMessageCell.drawPinnedBottom;
                if (z12) {
                }
                if (z12) {
                }
                if (!chatMessageCell.mediaBackground) {
                }
                if (messageObject2.type != 19) {
                }
                if (chatMessageCell.drawPhotoImage) {
                }
                if (chatMessageCell.documentAttachType != i8) {
                }
                calculateUnlockXY();
                if (z9) {
                }
                updateAnimatedEmojis();
                stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
                if (stickerSetLinkIcon2 != null) {
                }
                r25 = 0;
                if (z51) {
                }
                transcribeButton = chatMessageCell.transcribeButton;
                if (transcribeButton != null) {
                }
                updateWaveform();
                if (z51) {
                }
                z44 = true;
                z45 = false;
                z46 = false;
                chatMessageCell.updateButtonState(z45, z46, z44);
                if (!chatMessageCell.currentMessageObject.loadingCancelled) {
                }
                chatMessageCellDelegate2 = chatMessageCell.delegate;
                if (chatMessageCellDelegate2 != null) {
                }
                chatMessageCell.accessibilityVirtualViewBounds.clear();
                chatMessageCell.transitionParams.updatePhotoImageX = true;
                chatMessageCell.highlightCaptionToSetEnd = i11;
                chatMessageCell.highlightCaptionToSetStart = i11;
                updateFlagSecure();
            }
            if (!z3) {
            }
            if (z3) {
            }
            z6 = false;
            if (!z4) {
            }
            i2 = 5;
            i3 = -1;
            f = 1.0f;
            int i1492222 = 2;
            if (z3) {
            }
            chatMessageCell.updatedContent = true;
            stickerSetLinkIcon = chatMessageCell.stickerSetIcons;
            if (stickerSetLinkIcon != null) {
            }
            chatMessageCell.wasPinned = chatMessageCell.isPinned;
            chatMessageCell.pinnedBottom = z;
            chatMessageCell.pinnedTop = z2;
            chatMessageCell.currentMessageObject = messageObject17;
            chatMessageCell.currentMessagesGroup = groupedMessages;
            chatMessageCell.lastTime = -2.0d;
            chatMessageCell.lastPostAuthor = messageObject17.messageOwner.post_author;
            if (!z51) {
            }
            chatMessageCell.isHighlightedAnimated = false;
            chatMessageCell.wasTranscriptionOpen = false;
            if (chatMessageCell.highlightedQuote) {
            }
            chatMessageCell.highlightedQuote = false;
            chatMessageCell.widthBeforeNewTimeLine = -1;
            groupedMessages2 = chatMessageCell.currentMessagesGroup;
            if (groupedMessages2 != null) {
            }
            chatMessageCell.currentMessagesGroup = null;
            chatMessageCell.currentPosition = null;
            groupedMessages3 = chatMessageCell.currentMessagesGroup;
            if (groupedMessages3 == null) {
            }
            chatMessageCell.drawPinnedTop = chatMessageCell.pinnedTop;
            chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom;
            boolean z5322222222 = chatMessageCell.isPlayingRound;
            chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
            chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
            chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
            chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
            chatMessageCell.photoImage.setGradientBitmap(null);
            chatMessageCell.photoImage.clearDecorators();
            chatMessageCell.photoImage.setInvalidateAll(false);
            chatMessageCell.linkPreviewY = 0;
            chatMessageCell.lastTranslated = messageObject17.translated;
            TLRPC$Message tLRPC$Message6222222222 = messageObject17.messageOwner;
            chatMessageCell.lastSendState = tLRPC$Message6222222222.send_state;
            chatMessageCell.lastDeleteDate = tLRPC$Message6222222222.destroyTime;
            chatMessageCell.lastViewsCount = tLRPC$Message6222222222.views;
            chatMessageCell.lastRepliesCount = getRepliesCount();
            if (z51) {
            }
            chatMessageCell.gamePreviewPressed = r2;
            chatMessageCell.sideButtonPressed = r2;
            chatMessageCell.pressedSideButton = r2;
            chatMessageCell.hasNewLineForTime = r2;
            chatMessageCell.flipImage = r2;
            chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
            chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
            needDrawAvatar = needDrawAvatar();
            if (messageObject17.customAvatarDrawable == null) {
            }
            chatMessageCell.isAvatarVisible = true;
            r22 = 0;
            z7 = true;
            chatMessageCell.wasLayout = r22;
            chatMessageCell.groupPhotoInvisible = r22;
            chatMessageCell.animatingDrawVideoImageButton = r22;
            chatMessageCell.drawVideoSize = r22;
            chatMessageCell.canStreamVideo = r22;
            chatMessageCell.animatingNoSound = r22;
            if (!messageObject.isSponsored()) {
            }
            chatMessageCell.hasReplyQuote = r23;
            chatMessageCell.isReplyQuote = r23;
            chatMessageCell.replyNameLayout = null;
            chatMessageCell.adminLayout = null;
            chatMessageCell.boostCounterBounds = null;
            chatMessageCell.boostCounterSpan = null;
            chatMessageCell.checkOnlyButtonPressed = r23;
            chatMessageCell.replyTextLayout = null;
            AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
            chatMessageCell.lastReplyMessage = null;
            chatMessageCell.hasEmbed = r23;
            chatMessageCell.autoPlayingMedia = r23;
            chatMessageCell.replyNameWidth = r23;
            chatMessageCell.replyTextWidth = r23;
            chatMessageCell.replyTextHeight = r23;
            chatMessageCell.viaWidth = r23;
            chatMessageCell.viaNameWidth = r23;
            chatMessageCell.viaOnly = r23;
            chatMessageCell.addedCaptionHeight = r23;
            chatMessageCell.currentReplyPhoto = null;
            chatMessageCell.currentUser = null;
            chatMessageCell.currentChat = null;
            chatMessageCell.currentViaBotUser = null;
            chatMessageCell.instantViewLayout = null;
            chatMessageCell.drawNameLayout = r23;
            chatMessageCell.linkPreviewAbove = r23;
            chatMessageCell.isSmallImage = r23;
            chatMessageCell.lastLoadingSizeTotal = 0L;
            if (chatMessageCell.scheduledInvalidate) {
            }
            chatMessageCell.links.clear();
            chatMessageCell.pressedLink = null;
            chatMessageCell.pressedEmoji = null;
            chatMessageCell.pressedLinkType = -1;
            messageObject17.forceUpdate = r23;
            chatMessageCell.drawPhotoImage = r23;
            chatMessageCell.drawMediaCheckBox = r23;
            chatMessageCell.hasLinkPreview = r23;
            chatMessageCell.hasOldCaptionPreview = r23;
            chatMessageCell.hasGamePreview = r23;
            chatMessageCell.hasInvoicePreview = r23;
            chatMessageCell.commentButtonPressed = r23;
            chatMessageCell.instantPressed = r23;
            chatMessageCell.gradientDrawable = null;
            chatMessageCell.setInstantButtonPressed(r23);
            if (!z6) {
            }
            resetContactButtonsPressedState();
            buttonBounce = chatMessageCell.titleLabelBounce;
            if (buttonBounce != null) {
            }
            chatMessageCell.drawnContactButtonsFlag = r3;
            chatMessageCell.drawContact = r3;
            chatMessageCell.drawContactView = r3;
            chatMessageCell.drawContactSendMessage = r3;
            chatMessageCell.drawContactAdd = r3;
            chatMessageCell.spoilerPressed = null;
            chatMessageCell.isSpoilerRevealing = r3;
            chatMessageCell.linkPreviewPressed = r3;
            chatMessageCell.buttonPressed = r3;
            chatMessageCell.additionalTimeOffsetY = r3;
            chatMessageCell.miniButtonPressed = r3;
            chatMessageCell.pressedBotButton = i3;
            chatMessageCell.pressedVoteButton = i3;
            chatMessageCell.pollHintPressed = r3;
            chatMessageCell.psaHintPressed = r3;
            chatMessageCell.linkPreviewHeight = r3;
            chatMessageCell.mediaOffsetY = r3;
            chatMessageCell.documentAttachType = r3;
            chatMessageCell.documentAttach = null;
            chatMessageCell.descriptionLayout = null;
            chatMessageCell.titleLayout = null;
            chatMessageCell.videoInfoLayout = null;
            chatMessageCell.photosCountLayout = null;
            chatMessageCell.siteNameLayout = null;
            chatMessageCell.titleLabelLayout = null;
            chatMessageCell.authorLayout = null;
            chatMessageCell.captionFullWidth = r3;
            chatMessageCell.captionLayout = null;
            chatMessageCell.captionWidth = r3;
            chatMessageCell.captionHeight = r3;
            chatMessageCell.captionOffsetX = r3;
            chatMessageCell.currentCaption = null;
            chatMessageCell.captionLayout = null;
            chatMessageCell.docTitleLayout = null;
            chatMessageCell.drawImageButton = r3;
            chatMessageCell.drawVideoImageButton = r3;
            chatMessageCell.currentPhotoLocation = null;
            chatMessageCell.currentPhotoThumbLocation = null;
            chatMessageCell.currentPhotoObject = null;
            chatMessageCell.photoParentObject = null;
            chatMessageCell.currentPhotoObjectThumb = null;
            chatMessageCell.currentPhotoObjectThumbStripped = null;
            if (!z3) {
            }
            chatMessageCell.currentPhotoFilter = null;
            chatMessageCell.buttonState = i3;
            chatMessageCell.miniButtonState = i3;
            chatMessageCell.hasMiniProgress = 0;
            if (chatMessageCell.addedForTest) {
            }
            chatMessageCell.addedForTest = false;
            chatMessageCell.photoNotSet = false;
            chatMessageCell.drawBackground = z49;
            chatMessageCell.drawName = false;
            chatMessageCell.useSeekBarWaveform = false;
            chatMessageCell.useTranscribeButton = false;
            chatMessageCell.drawInstantView = false;
            chatMessageCell.drawInstantViewType = 0;
            chatMessageCell.instantViewButtonText = null;
            chatMessageCell.drawForwardedName = false;
            chatMessageCell.drawCommentButton = false;
            chatMessageCell.photoImage.setSideClip(0.0f);
            chatMessageCell.photoImage.setAspectFit(false);
            chatMessageCell.gradientShader = null;
            chatMessageCell.motionBackgroundDrawable = null;
            chatMessageCell.imageBackgroundColor = 0;
            chatMessageCell.imageBackgroundGradientColor1 = 0;
            chatMessageCell.imageBackgroundGradientColor2 = 0;
            chatMessageCell.imageBackgroundIntensity = 0.0f;
            chatMessageCell.imageBackgroundGradientColor3 = 0;
            chatMessageCell.imageBackgroundGradientRotation = 45;
            chatMessageCell.imageBackgroundSideColor = 0;
            chatMessageCell.mediaBackground = false;
            expiredStoryView = chatMessageCell.expiredStoryView;
            if (expiredStoryView != null) {
            }
            chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
            TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2222222222222 = messageObject17.messageOwner.fwd_from;
            if (tLRPC$MessageFwdHeader2222222222222 == null) {
            }
            chatMessageCell.hasPsaHint = z8;
            if (z8) {
            }
            chatMessageCell.photoImage.setAlpha(f);
            if (!z3) {
            }
            chatMessageCell.pollButtons.clear();
            chatMessageCell.availableTimeWidth = 0;
            chatMessageCell.photoImage.setForceLoading(false);
            chatMessageCell.photoImage.setNeedsQualityThumb(false);
            chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
            chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
            chatMessageCell.photoImage.setColorFilter(null);
            chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
            if (!z51) {
            }
            messageObject17.reactionsChanged = false;
            TLRPC$Message tLRPC$Message72222222222222 = messageObject17.messageOwner;
            if (tLRPC$Message72222222222222 == null) {
            }
            if (messageObject.shouldDrawReactions()) {
            }
            chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
            if (z3) {
            }
            groupedMessages4 = chatMessageCell.currentMessagesGroup;
            if (groupedMessages4 != null) {
            }
            isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
            if (chatMessageCell.hasDiscussion) {
            }
            MessageObject.GroupedMessagePosition groupedMessagePosition1822222222222222222 = chatMessageCell.currentPosition;
            if (groupedMessagePosition1822222222222222222 == null) {
            }
            repliesCount = getRepliesCount();
            if (!messageObject.shouldDrawWithoutBackground()) {
            }
            if (!chatMessageCell.isRepliesChat) {
            }
            chatMessageCell.commentLayout = null;
            chatMessageCell.drawCommentNumber = false;
            chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
            i4 = 2;
            if (messageObject17.type != 27) {
            }
            i7 = 0;
            z9 = true;
            if (chatMessageCell.currentPosition == null) {
            }
            i8 = 5;
            i11 = -1;
            i12 = 8;
            groupedMessagePosition = chatMessageCell.currentPosition;
            if (groupedMessagePosition != null) {
            }
            int i164222222222222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
            messageObject3 = chatMessageCell.currentMessageObject;
            if (messageObject3.eventId == 0) {
            }
            f3 = 0.0f;
            chatMessageCell.botButtons.clear();
            if (z51) {
            }
            if (!messageObject2.isRestrictedMessage) {
            }
            chatMessageCell.substractBackgroundHeight = 0;
            chatMessageCell.keyboardHeight = 0;
            if (chatMessageCell.drawCommentButton) {
            }
            z12 = chatMessageCell.drawPinnedBottom;
            if (z12) {
            }
            if (z12) {
            }
            if (!chatMessageCell.mediaBackground) {
            }
            if (messageObject2.type != 19) {
            }
            if (chatMessageCell.drawPhotoImage) {
            }
            if (chatMessageCell.documentAttachType != i8) {
            }
            calculateUnlockXY();
            if (z9) {
            }
            updateAnimatedEmojis();
            stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
            if (stickerSetLinkIcon2 != null) {
            }
            r25 = 0;
            if (z51) {
            }
            transcribeButton = chatMessageCell.transcribeButton;
            if (transcribeButton != null) {
            }
            updateWaveform();
            if (z51) {
            }
            z44 = true;
            z45 = false;
            z46 = false;
            chatMessageCell.updateButtonState(z45, z46, z44);
            if (!chatMessageCell.currentMessageObject.loadingCancelled) {
            }
            chatMessageCellDelegate2 = chatMessageCell.delegate;
            if (chatMessageCellDelegate2 != null) {
            }
            chatMessageCell.accessibilityVirtualViewBounds.clear();
            chatMessageCell.transitionParams.updatePhotoImageX = true;
            chatMessageCell.highlightCaptionToSetEnd = i11;
            chatMessageCell.highlightCaptionToSetStart = i11;
            updateFlagSecure();
        }
        if (groupedMessages != chatMessageCell.currentMessagesGroup) {
        }
        if (!z51) {
        }
        chatMessageCell.accessibilityText = null;
        i = 4;
        if (chatMessageCell.drawCommentButton) {
        }
        if (!z3) {
        }
        if (z3) {
        }
        z6 = false;
        if (!z4) {
        }
        i2 = 5;
        i3 = -1;
        f = 1.0f;
        int i14922222 = 2;
        if (z3) {
        }
        chatMessageCell.updatedContent = true;
        stickerSetLinkIcon = chatMessageCell.stickerSetIcons;
        if (stickerSetLinkIcon != null) {
        }
        chatMessageCell.wasPinned = chatMessageCell.isPinned;
        chatMessageCell.pinnedBottom = z;
        chatMessageCell.pinnedTop = z2;
        chatMessageCell.currentMessageObject = messageObject17;
        chatMessageCell.currentMessagesGroup = groupedMessages;
        chatMessageCell.lastTime = -2.0d;
        chatMessageCell.lastPostAuthor = messageObject17.messageOwner.post_author;
        if (!z51) {
        }
        chatMessageCell.isHighlightedAnimated = false;
        chatMessageCell.wasTranscriptionOpen = false;
        if (chatMessageCell.highlightedQuote) {
        }
        chatMessageCell.highlightedQuote = false;
        chatMessageCell.widthBeforeNewTimeLine = -1;
        groupedMessages2 = chatMessageCell.currentMessagesGroup;
        if (groupedMessages2 != null) {
        }
        chatMessageCell.currentMessagesGroup = null;
        chatMessageCell.currentPosition = null;
        groupedMessages3 = chatMessageCell.currentMessagesGroup;
        if (groupedMessages3 == null) {
        }
        chatMessageCell.drawPinnedTop = chatMessageCell.pinnedTop;
        chatMessageCell.drawPinnedBottom = chatMessageCell.pinnedBottom;
        boolean z53222222222 = chatMessageCell.isPlayingRound;
        chatMessageCell.isPlayingRound = (!chatMessageCell.isRoundVideo || !MediaController.getInstance().isPlayingMessage(chatMessageCell.currentMessageObject) || (chatMessageCellDelegate = chatMessageCell.delegate) == null || chatMessageCellDelegate.keyboardIsOpened() || chatMessageCell.delegate.isLandscape()) ? false : true;
        chatMessageCell.photoImage.setCrossfadeWithOldImage(false);
        chatMessageCell.photoImage.setCrossfadeDuration(ImageReceiver.DEFAULT_CROSSFADE_DURATION);
        chatMessageCell.photoImage.setCrossfadeByScale(0.0f);
        chatMessageCell.photoImage.setGradientBitmap(null);
        chatMessageCell.photoImage.clearDecorators();
        chatMessageCell.photoImage.setInvalidateAll(false);
        chatMessageCell.linkPreviewY = 0;
        chatMessageCell.lastTranslated = messageObject17.translated;
        TLRPC$Message tLRPC$Message62222222222 = messageObject17.messageOwner;
        chatMessageCell.lastSendState = tLRPC$Message62222222222.send_state;
        chatMessageCell.lastDeleteDate = tLRPC$Message62222222222.destroyTime;
        chatMessageCell.lastViewsCount = tLRPC$Message62222222222.views;
        chatMessageCell.lastRepliesCount = getRepliesCount();
        if (z51) {
        }
        chatMessageCell.gamePreviewPressed = r2;
        chatMessageCell.sideButtonPressed = r2;
        chatMessageCell.pressedSideButton = r2;
        chatMessageCell.hasNewLineForTime = r2;
        chatMessageCell.flipImage = r2;
        chatMessageCell.isThreadPost = chatMessageCell.isThreadChat && (tLRPC$MessageFwdHeader = (tLRPC$Message3 = messageObject17.messageOwner).fwd_from) != null && tLRPC$MessageFwdHeader.channel_post != 0 && tLRPC$Message3.reply_to == null;
        chatMessageCell.isAvatarVisible = needDrawAvatar() && ((groupedMessagePosition14 = chatMessageCell.currentPosition) == null || groupedMessagePosition14.edge);
        needDrawAvatar = needDrawAvatar();
        if (messageObject17.customAvatarDrawable == null) {
        }
        chatMessageCell.isAvatarVisible = true;
        r22 = 0;
        z7 = true;
        chatMessageCell.wasLayout = r22;
        chatMessageCell.groupPhotoInvisible = r22;
        chatMessageCell.animatingDrawVideoImageButton = r22;
        chatMessageCell.drawVideoSize = r22;
        chatMessageCell.canStreamVideo = r22;
        chatMessageCell.animatingNoSound = r22;
        if (!messageObject.isSponsored()) {
        }
        chatMessageCell.hasReplyQuote = r23;
        chatMessageCell.isReplyQuote = r23;
        chatMessageCell.replyNameLayout = null;
        chatMessageCell.adminLayout = null;
        chatMessageCell.boostCounterBounds = null;
        chatMessageCell.boostCounterSpan = null;
        chatMessageCell.checkOnlyButtonPressed = r23;
        chatMessageCell.replyTextLayout = null;
        AnimatedEmojiSpan.release(chatMessageCell, chatMessageCell.animatedEmojiReplyStack);
        chatMessageCell.lastReplyMessage = null;
        chatMessageCell.hasEmbed = r23;
        chatMessageCell.autoPlayingMedia = r23;
        chatMessageCell.replyNameWidth = r23;
        chatMessageCell.replyTextWidth = r23;
        chatMessageCell.replyTextHeight = r23;
        chatMessageCell.viaWidth = r23;
        chatMessageCell.viaNameWidth = r23;
        chatMessageCell.viaOnly = r23;
        chatMessageCell.addedCaptionHeight = r23;
        chatMessageCell.currentReplyPhoto = null;
        chatMessageCell.currentUser = null;
        chatMessageCell.currentChat = null;
        chatMessageCell.currentViaBotUser = null;
        chatMessageCell.instantViewLayout = null;
        chatMessageCell.drawNameLayout = r23;
        chatMessageCell.linkPreviewAbove = r23;
        chatMessageCell.isSmallImage = r23;
        chatMessageCell.lastLoadingSizeTotal = 0L;
        if (chatMessageCell.scheduledInvalidate) {
        }
        chatMessageCell.links.clear();
        chatMessageCell.pressedLink = null;
        chatMessageCell.pressedEmoji = null;
        chatMessageCell.pressedLinkType = -1;
        messageObject17.forceUpdate = r23;
        chatMessageCell.drawPhotoImage = r23;
        chatMessageCell.drawMediaCheckBox = r23;
        chatMessageCell.hasLinkPreview = r23;
        chatMessageCell.hasOldCaptionPreview = r23;
        chatMessageCell.hasGamePreview = r23;
        chatMessageCell.hasInvoicePreview = r23;
        chatMessageCell.commentButtonPressed = r23;
        chatMessageCell.instantPressed = r23;
        chatMessageCell.gradientDrawable = null;
        chatMessageCell.setInstantButtonPressed(r23);
        if (!z6) {
        }
        resetContactButtonsPressedState();
        buttonBounce = chatMessageCell.titleLabelBounce;
        if (buttonBounce != null) {
        }
        chatMessageCell.drawnContactButtonsFlag = r3;
        chatMessageCell.drawContact = r3;
        chatMessageCell.drawContactView = r3;
        chatMessageCell.drawContactSendMessage = r3;
        chatMessageCell.drawContactAdd = r3;
        chatMessageCell.spoilerPressed = null;
        chatMessageCell.isSpoilerRevealing = r3;
        chatMessageCell.linkPreviewPressed = r3;
        chatMessageCell.buttonPressed = r3;
        chatMessageCell.additionalTimeOffsetY = r3;
        chatMessageCell.miniButtonPressed = r3;
        chatMessageCell.pressedBotButton = i3;
        chatMessageCell.pressedVoteButton = i3;
        chatMessageCell.pollHintPressed = r3;
        chatMessageCell.psaHintPressed = r3;
        chatMessageCell.linkPreviewHeight = r3;
        chatMessageCell.mediaOffsetY = r3;
        chatMessageCell.documentAttachType = r3;
        chatMessageCell.documentAttach = null;
        chatMessageCell.descriptionLayout = null;
        chatMessageCell.titleLayout = null;
        chatMessageCell.videoInfoLayout = null;
        chatMessageCell.photosCountLayout = null;
        chatMessageCell.siteNameLayout = null;
        chatMessageCell.titleLabelLayout = null;
        chatMessageCell.authorLayout = null;
        chatMessageCell.captionFullWidth = r3;
        chatMessageCell.captionLayout = null;
        chatMessageCell.captionWidth = r3;
        chatMessageCell.captionHeight = r3;
        chatMessageCell.captionOffsetX = r3;
        chatMessageCell.currentCaption = null;
        chatMessageCell.captionLayout = null;
        chatMessageCell.docTitleLayout = null;
        chatMessageCell.drawImageButton = r3;
        chatMessageCell.drawVideoImageButton = r3;
        chatMessageCell.currentPhotoLocation = null;
        chatMessageCell.currentPhotoThumbLocation = null;
        chatMessageCell.currentPhotoObject = null;
        chatMessageCell.photoParentObject = null;
        chatMessageCell.currentPhotoObjectThumb = null;
        chatMessageCell.currentPhotoObjectThumbStripped = null;
        if (!z3) {
        }
        chatMessageCell.currentPhotoFilter = null;
        chatMessageCell.buttonState = i3;
        chatMessageCell.miniButtonState = i3;
        chatMessageCell.hasMiniProgress = 0;
        if (chatMessageCell.addedForTest) {
        }
        chatMessageCell.addedForTest = false;
        chatMessageCell.photoNotSet = false;
        chatMessageCell.drawBackground = z49;
        chatMessageCell.drawName = false;
        chatMessageCell.useSeekBarWaveform = false;
        chatMessageCell.useTranscribeButton = false;
        chatMessageCell.drawInstantView = false;
        chatMessageCell.drawInstantViewType = 0;
        chatMessageCell.instantViewButtonText = null;
        chatMessageCell.drawForwardedName = false;
        chatMessageCell.drawCommentButton = false;
        chatMessageCell.photoImage.setSideClip(0.0f);
        chatMessageCell.photoImage.setAspectFit(false);
        chatMessageCell.gradientShader = null;
        chatMessageCell.motionBackgroundDrawable = null;
        chatMessageCell.imageBackgroundColor = 0;
        chatMessageCell.imageBackgroundGradientColor1 = 0;
        chatMessageCell.imageBackgroundGradientColor2 = 0;
        chatMessageCell.imageBackgroundIntensity = 0.0f;
        chatMessageCell.imageBackgroundGradientColor3 = 0;
        chatMessageCell.imageBackgroundGradientRotation = 45;
        chatMessageCell.imageBackgroundSideColor = 0;
        chatMessageCell.mediaBackground = false;
        expiredStoryView = chatMessageCell.expiredStoryView;
        if (expiredStoryView != null) {
        }
        chatMessageCell.photoImage.animatedFileDrawableRepeatMaxCount = 0;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader22222222222222 = messageObject17.messageOwner.fwd_from;
        if (tLRPC$MessageFwdHeader22222222222222 == null) {
        }
        chatMessageCell.hasPsaHint = z8;
        if (z8) {
        }
        chatMessageCell.photoImage.setAlpha(f);
        if (!z3) {
        }
        chatMessageCell.pollButtons.clear();
        chatMessageCell.availableTimeWidth = 0;
        chatMessageCell.photoImage.setForceLoading(false);
        chatMessageCell.photoImage.setNeedsQualityThumb(false);
        chatMessageCell.photoImage.setShouldGenerateQualityThumb(false);
        chatMessageCell.photoImage.setAllowDecodeSingleFrame(false);
        chatMessageCell.photoImage.setColorFilter(null);
        chatMessageCell.photoImage.setMediaStartEndTime(-1L, -1L);
        if (!z51) {
        }
        messageObject17.reactionsChanged = false;
        TLRPC$Message tLRPC$Message722222222222222 = messageObject17.messageOwner;
        if (tLRPC$Message722222222222222 == null) {
        }
        if (messageObject.shouldDrawReactions()) {
        }
        chatMessageCell.reactionsLayoutInBubble.setMessage(null, false, false, chatMessageCell.resourcesProvider);
        if (z3) {
        }
        groupedMessages4 = chatMessageCell.currentMessagesGroup;
        if (groupedMessages4 != null) {
        }
        isLinkedToChat = messageObject17.isLinkedToChat(chatMessageCell.linkedChatId);
        if (chatMessageCell.hasDiscussion) {
        }
        MessageObject.GroupedMessagePosition groupedMessagePosition18222222222222222222 = chatMessageCell.currentPosition;
        if (groupedMessagePosition18222222222222222222 == null) {
        }
        repliesCount = getRepliesCount();
        if (!messageObject.shouldDrawWithoutBackground()) {
        }
        if (!chatMessageCell.isRepliesChat) {
        }
        chatMessageCell.commentLayout = null;
        chatMessageCell.drawCommentNumber = false;
        chatMessageCell.drawSideButton = chatMessageCell.isRepliesChat ? 3 : 2;
        i4 = 2;
        if (messageObject17.type != 27) {
        }
        i7 = 0;
        z9 = true;
        if (chatMessageCell.currentPosition == null) {
        }
        i8 = 5;
        i11 = -1;
        i12 = 8;
        groupedMessagePosition = chatMessageCell.currentPosition;
        if (groupedMessagePosition != null) {
        }
        int i1642222222222222222222222222222222222222 = chatMessageCell.widthBeforeNewTimeLine;
        messageObject3 = chatMessageCell.currentMessageObject;
        if (messageObject3.eventId == 0) {
        }
        f3 = 0.0f;
        chatMessageCell.botButtons.clear();
        if (z51) {
        }
        if (!messageObject2.isRestrictedMessage) {
        }
        chatMessageCell.substractBackgroundHeight = 0;
        chatMessageCell.keyboardHeight = 0;
        if (chatMessageCell.drawCommentButton) {
        }
        z12 = chatMessageCell.drawPinnedBottom;
        if (z12) {
        }
        if (z12) {
        }
        if (!chatMessageCell.mediaBackground) {
        }
        if (messageObject2.type != 19) {
        }
        if (chatMessageCell.drawPhotoImage) {
        }
        if (chatMessageCell.documentAttachType != i8) {
        }
        calculateUnlockXY();
        if (z9) {
        }
        updateAnimatedEmojis();
        stickerSetLinkIcon2 = chatMessageCell.stickerSetIcons;
        if (stickerSetLinkIcon2 != null) {
        }
        r25 = 0;
        if (z51) {
        }
        transcribeButton = chatMessageCell.transcribeButton;
        if (transcribeButton != null) {
        }
        updateWaveform();
        if (z51) {
        }
        z44 = true;
        z45 = false;
        z46 = false;
        chatMessageCell.updateButtonState(z45, z46, z44);
        if (!chatMessageCell.currentMessageObject.loadingCancelled) {
        }
        chatMessageCellDelegate2 = chatMessageCell.delegate;
        if (chatMessageCellDelegate2 != null) {
        }
        chatMessageCell.accessibilityVirtualViewBounds.clear();
        chatMessageCell.transitionParams.updatePhotoImageX = true;
        chatMessageCell.highlightCaptionToSetEnd = i11;
        chatMessageCell.highlightCaptionToSetStart = i11;
        updateFlagSecure();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$setMessageContent$7(TLRPC$User tLRPC$User, int i, TLRPC$Chat tLRPC$Chat, long j) {
        if (tLRPC$User != null) {
            this.commentAvatarDrawables[i].setInfo(this.currentAccount, tLRPC$User);
            this.commentAvatarImages[i].setForUserOrChat(tLRPC$User, this.commentAvatarDrawables[i]);
        } else if (tLRPC$Chat != null) {
            this.commentAvatarDrawables[i].setInfo(this.currentAccount, tLRPC$Chat);
            this.commentAvatarImages[i].setForUserOrChat(tLRPC$Chat, this.commentAvatarDrawables[i]);
        } else {
            this.commentAvatarDrawables[i].setInfo(j, "", "");
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ int lambda$setMessageContent$8(PollButton pollButton, PollButton pollButton2) {
        if (pollButton.decimal > pollButton2.decimal) {
            return -1;
        }
        if (pollButton.decimal < pollButton2.decimal) {
            return 1;
        }
        if (pollButton.decimal == pollButton2.decimal) {
            if (pollButton.percent > pollButton2.percent) {
                return 1;
            }
            return pollButton.percent < pollButton2.percent ? -1 : 0;
        }
        return 0;
    }

    private boolean loopStickers() {
        return LiteMode.isEnabled(2);
    }

    private void calculateUnlockXY() {
        if (this.currentMessageObject.type != 20 || this.unlockLayout == null) {
            return;
        }
        this.unlockX = this.backgroundDrawableLeft + ((this.photoImage.getImageWidth() - this.unlockLayout.getWidth()) / 2.0f);
        this.unlockY = this.backgroundDrawableTop + this.photoImage.getImageY() + ((this.photoImage.getImageHeight() - this.unlockLayout.getHeight()) / 2.0f);
    }

    private void updateFlagSecure() {
        if (this.flagSecure == null) {
            Activity findActivity = AndroidUtilities.findActivity(getContext());
            Window window = findActivity == null ? null : findActivity.getWindow();
            if (window != null) {
                FlagSecureReason flagSecureReason = new FlagSecureReason(window, new FlagSecureReason.FlagSecureCondition() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda12
                    @Override // org.telegram.messenger.FlagSecureReason.FlagSecureCondition
                    public final boolean run() {
                        boolean lambda$updateFlagSecure$9;
                        lambda$updateFlagSecure$9 = ChatMessageCell.this.lambda$updateFlagSecure$9();
                        return lambda$updateFlagSecure$9;
                    }
                });
                this.flagSecure = flagSecureReason;
                if (this.attachedToWindow) {
                    flagSecureReason.attach();
                }
            }
        }
        FlagSecureReason flagSecureReason2 = this.flagSecure;
        if (flagSecureReason2 != null) {
            flagSecureReason2.invalidate();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ boolean lambda$updateFlagSecure$9() {
        TLRPC$Message tLRPC$Message;
        MessageObject messageObject = this.currentMessageObject;
        return (messageObject == null || (tLRPC$Message = messageObject.messageOwner) == null || (!tLRPC$Message.noforwards && !messageObject.isVoiceOnce() && !this.currentMessageObject.hasRevealedExtendedMedia())) ? false : true;
    }

    public void checkVideoPlayback(boolean z, Bitmap bitmap) {
        if (this.currentMessageObject.isVideo()) {
            if (MediaController.getInstance().isPlayingMessage(this.currentMessageObject)) {
                this.photoImage.setAllowStartAnimation(false);
                this.photoImage.stopAnimation();
                return;
            }
            this.photoImage.setAllowStartAnimation(true);
            this.photoImage.startAnimation();
            return;
        }
        if (z) {
            MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
            z = playingMessageObject == null || !playingMessageObject.isRoundVideo();
        }
        this.photoImage.setAllowStartAnimation(z);
        if (bitmap != null) {
            this.photoImage.startCrossfadeFromStaticThumb(bitmap);
        }
        if (z) {
            this.photoImage.startAnimation();
        } else {
            this.photoImage.stopAnimation();
        }
    }

    private static boolean spanSupportsLongPress(CharacterStyle characterStyle) {
        return (characterStyle instanceof URLSpanMono) || (characterStyle instanceof URLSpan);
    }

    @Override // org.telegram.ui.Cells.BaseCell
    protected boolean onLongPress() {
        int i;
        int i2;
        boolean z = false;
        if (this.isRoundVideo && this.isPlayingRound && MediaController.getInstance().isPlayingMessage(this.currentMessageObject) && ((this.lastTouchX - this.photoImage.getCenterX()) * (this.lastTouchX - this.photoImage.getCenterX())) + ((this.lastTouchY - this.photoImage.getCenterY()) * (this.lastTouchY - this.photoImage.getCenterY())) < (this.photoImage.getImageWidth() / 2.0f) * (this.photoImage.getImageWidth() / 2.0f) && (this.lastTouchX > this.photoImage.getCenterX() + (this.photoImage.getImageWidth() / 4.0f) || this.lastTouchX < this.photoImage.getCenterX() - (this.photoImage.getImageWidth() / 4.0f))) {
            boolean z2 = this.lastTouchX > this.photoImage.getCenterX();
            if (this.videoPlayerRewinder == null) {
                this.videoForwardDrawable = new VideoForwardDrawable(true);
                this.videoPlayerRewinder = new VideoPlayerRewinder() { // from class: org.telegram.ui.Cells.ChatMessageCell.5
                    @Override // org.telegram.messenger.video.VideoPlayerRewinder
                    protected void onRewindCanceled() {
                        ChatMessageCell.this.onTouchEvent(MotionEvent.obtain(0L, 0L, 3, 0.0f, 0.0f, 0));
                        ChatMessageCell.this.videoForwardDrawable.setShowing(false);
                    }

                    @Override // org.telegram.messenger.video.VideoPlayerRewinder
                    protected void updateRewindProgressUi(long j, float f, boolean z3) {
                        ChatMessageCell.this.videoForwardDrawable.setTime(Math.abs(j));
                        if (z3) {
                            ChatMessageCell.this.currentMessageObject.audioProgress = f;
                            ChatMessageCell.this.updatePlayingMessageProgress();
                        }
                    }

                    @Override // org.telegram.messenger.video.VideoPlayerRewinder
                    protected void onRewindStart(boolean z3) {
                        ChatMessageCell.this.videoForwardDrawable.setDelegate(new VideoForwardDrawable.VideoForwardDrawableDelegate() { // from class: org.telegram.ui.Cells.ChatMessageCell.5.1
                            @Override // org.telegram.ui.Components.VideoForwardDrawable.VideoForwardDrawableDelegate
                            public void onAnimationEnd() {
                            }

                            @Override // org.telegram.ui.Components.VideoForwardDrawable.VideoForwardDrawableDelegate
                            public void invalidate() {
                                ChatMessageCell.this.invalidate();
                            }
                        });
                        ChatMessageCell.this.videoForwardDrawable.setOneShootAnimation(false);
                        ChatMessageCell.this.videoForwardDrawable.setLeftSide(!z3);
                        ChatMessageCell.this.videoForwardDrawable.setShowing(true);
                        ChatMessageCell.this.invalidate();
                    }
                };
                getParent().requestDisallowInterceptTouchEvent(true);
            }
            this.videoPlayerRewinder.startRewind(MediaController.getInstance().getVideoPlayer(), z2, MediaController.getInstance().getPlaybackSpeed(false));
            return false;
        }
        Drawable drawable = this.replySelector;
        if (drawable != null) {
            this.replySelectorPressed = false;
            drawable.setState(StateSet.NOTHING);
            invalidate();
        }
        Drawable drawable2 = this.nameStatusSelector;
        if (drawable2 != null) {
            drawable2.setState(StateSet.NOTHING);
        }
        Drawable drawable3 = this.nameLayoutSelector;
        if (drawable3 != null) {
            drawable3.setState(StateSet.NOTHING);
        }
        Drawable drawable4 = this.boostCounterLayoutSelector;
        if (drawable4 != null) {
            drawable4.setState(StateSet.NOTHING);
        }
        resetCodeSelectors();
        ButtonBounce buttonBounce = this.replyBounce;
        if (buttonBounce != null) {
            buttonBounce.setPressed(false);
        }
        ButtonBounce buttonBounce2 = this.titleLabelBounce;
        if (buttonBounce2 != null) {
            buttonBounce2.setPressed(false);
        }
        MessageTopicButton messageTopicButton = this.topicButton;
        if (messageTopicButton != null) {
            messageTopicButton.resetClick();
        }
        this.forwardNamePressed = false;
        ForwardBackground forwardBackground = this.forwardBg;
        if (forwardBackground != null) {
            forwardBackground.setPressed(false);
        }
        if (this.pressedEmoji != null) {
            this.pressedEmoji = null;
        }
        LinkSpanDrawable linkSpanDrawable = this.pressedLink;
        if (linkSpanDrawable != null) {
            if (linkSpanDrawable.getSpan() instanceof URLSpanMono) {
                this.hadLongPress = true;
                this.delegate.didPressUrl(this, this.pressedLink.getSpan(), true);
                return true;
            } else if (this.pressedLink.getSpan() instanceof URLSpanNoUnderline) {
                URLSpanNoUnderline uRLSpanNoUnderline = (URLSpanNoUnderline) this.pressedLink.getSpan();
                if (ChatActivity.isClickableLink(uRLSpanNoUnderline.getURL()) || uRLSpanNoUnderline.getURL().startsWith("/")) {
                    this.hadLongPress = true;
                    this.delegate.didPressUrl(this, this.pressedLink.getSpan(), true);
                    return true;
                }
            } else if (this.pressedLink.getSpan() instanceof URLSpan) {
                this.hadLongPress = true;
                this.delegate.didPressUrl(this, this.pressedLink.getSpan(), true);
                return true;
            }
        }
        resetPressedLink(-1);
        if (this.buttonPressed != 0 || this.miniButtonPressed != 0 || this.videoButtonPressed != 0 || this.pressedBotButton != -1) {
            this.buttonPressed = 0;
            this.miniButtonPressed = 0;
            this.videoButtonPressed = 0;
            this.pressedBotButton = -1;
            invalidate();
        }
        this.linkPreviewPressed = false;
        this.sideButtonPressed = false;
        this.pressedSideButton = 0;
        this.imagePressed = false;
        this.timePressed = false;
        this.gamePreviewPressed = false;
        this.giveawayMessageCell.setButtonPressed(false);
        this.giveawayResultsMessageCell.setButtonPressed(false);
        resetContactButtonsPressedState();
        if (this.pressedVoteButton != -1 || this.pollHintPressed || this.psaHintPressed || this.instantPressed || this.otherPressed || this.commentButtonPressed) {
            this.commentButtonPressed = false;
            this.instantPressed = false;
            setInstantButtonPressed(false);
            this.pressedVoteButton = -1;
            this.pollHintPressed = false;
            this.psaHintPressed = false;
            this.otherPressed = false;
            if (Build.VERSION.SDK_INT >= 21) {
                int i3 = 0;
                while (true) {
                    Drawable[] drawableArr = this.selectorDrawable;
                    if (i3 >= drawableArr.length) {
                        break;
                    }
                    if (drawableArr[i3] != null) {
                        drawableArr[i3].setState(StateSet.NOTHING);
                    }
                    i3++;
                }
                Drawable drawable5 = this.linkPreviewSelector;
                if (drawable5 != null) {
                    drawable5.setState(StateSet.NOTHING);
                }
            }
            ButtonBounce buttonBounce3 = this.linkPreviewBounce;
            if (buttonBounce3 != null) {
                buttonBounce3.setPressed(false);
            }
            invalidate();
        }
        ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
        if (chatMessageCellDelegate != null) {
            if (this.avatarPressed) {
                TLRPC$User tLRPC$User = this.currentUser;
                if (tLRPC$User != null) {
                    if (tLRPC$User.id != 0) {
                        z = chatMessageCellDelegate.didLongPressUserAvatar(this, tLRPC$User, this.lastTouchX, this.lastTouchY);
                    }
                } else {
                    TLRPC$Chat tLRPC$Chat = this.currentChat;
                    if (tLRPC$Chat != null) {
                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = this.currentMessageObject.messageOwner.fwd_from;
                        if (tLRPC$MessageFwdHeader != null) {
                            if ((tLRPC$MessageFwdHeader.flags & 16) != 0) {
                                i2 = tLRPC$MessageFwdHeader.saved_from_msg_id;
                            } else {
                                i2 = tLRPC$MessageFwdHeader.channel_post;
                            }
                            i = i2;
                        } else {
                            i = 0;
                        }
                        z = chatMessageCellDelegate.didLongPressChannelAvatar(this, tLRPC$Chat, i, this.lastTouchX, this.lastTouchY);
                    }
                }
            }
            if (!z) {
                this.delegate.didLongPress(this, this.lastTouchX, this.lastTouchY);
            }
        }
        return true;
    }

    public void showHintButton(boolean z, boolean z2, int i) {
        if (i == -1 || i == 0) {
            if (this.hintButtonVisible == z) {
                return;
            }
            this.hintButtonVisible = z;
            if (!z2) {
                this.hintButtonProgress = z ? 1.0f : 0.0f;
            } else {
                invalidate();
            }
        }
        if ((i == -1 || i == 1) && this.psaButtonVisible != z) {
            this.psaButtonVisible = z;
            if (!z2) {
                this.psaButtonProgress = z ? 1.0f : 0.0f;
                return;
            }
            setInvalidatesParent(true);
            invalidate();
        }
    }

    public void setCheckPressed(boolean z, boolean z2) {
        this.isCheckPressed = z;
        this.isPressed = z2;
        updateRadialProgressBackground();
        if (this.useSeekBarWaveform) {
            this.seekBarWaveform.setSelected(isDrawSelectionBackground());
        } else {
            this.seekBar.setSelected(isDrawSelectionBackground());
        }
        invalidate();
    }

    public void setInvalidateSpoilersParent(boolean z) {
        this.invalidateSpoilersParent = z;
    }

    public void setInvalidatesParent(boolean z) {
        this.invalidatesParent = z;
    }

    private boolean invalidateParentForce() {
        MessageObject messageObject;
        return (this.links.isEmpty() && this.reactionsLayoutInBubble.isEmpty && ((messageObject = this.currentMessageObject) == null || !messageObject.preview)) ? false : true;
    }

    public void invalidateOutbounds() {
        ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
        if (chatMessageCellDelegate == null || !chatMessageCellDelegate.canDrawOutboundsContent()) {
            if (getParent() instanceof View) {
                ((View) getParent()).invalidate();
                return;
            }
            return;
        }
        super.invalidate();
    }

    @Override // org.telegram.ui.Cells.BaseCell, android.view.View
    public void invalidate() {
        ChatMessageCellDelegate chatMessageCellDelegate;
        if (this.currentMessageObject == null) {
            return;
        }
        Runnable runnable = super.invalidateCallback;
        if (runnable != null) {
            runnable.run();
        }
        Runnable runnable2 = this.invalidateCallback;
        if (runnable2 != null) {
            runnable2.run();
            return;
        }
        super.invalidate();
        if ((this.invalidatesParent || (this.currentMessagesGroup != null && invalidateParentForce())) && getParent() != null) {
            View view = (View) getParent();
            if (view.getParent() != null) {
                view.invalidate();
                ((View) view.getParent()).invalidate();
            }
        }
        if (!this.isBlurred || (chatMessageCellDelegate = this.delegate) == null) {
            return;
        }
        chatMessageCellDelegate.invalidateBlur();
    }

    @Override // org.telegram.ui.Cells.BaseCell
    public void invalidateLite() {
        ChatMessageCellDelegate chatMessageCellDelegate;
        if (this.currentMessageObject == null) {
            return;
        }
        Runnable runnable = this.invalidateCallback;
        if (runnable != null) {
            runnable.run();
            return;
        }
        super.invalidate();
        if ((this.invalidatesParent || (this.currentMessagesGroup != null && invalidateParentForce())) && getParent() != null) {
            View view = (View) getParent();
            if (view.getParent() != null) {
                view.invalidate();
                ((View) view.getParent()).invalidate();
            }
        }
        if (!this.isBlurred || (chatMessageCellDelegate = this.delegate) == null) {
            return;
        }
        chatMessageCellDelegate.invalidateBlur();
    }

    public void setInvalidateCallback(Runnable runnable) {
        this.invalidateCallback = runnable;
    }

    @Override // android.view.View
    public void invalidate(int i, int i2, int i3, int i4) {
        ChatMessageCellDelegate chatMessageCellDelegate;
        if (this.currentMessageObject == null) {
            return;
        }
        Runnable runnable = this.invalidateCallback;
        if (runnable != null) {
            runnable.run();
            return;
        }
        super.invalidate(i, i2, i3, i4);
        if (this.invalidatesParent && getParent() != null) {
            ((View) getParent()).invalidate(((int) getX()) + i, ((int) getY()) + i2, ((int) getX()) + i3, ((int) getY()) + i4);
        }
        if (!this.isBlurred || (chatMessageCellDelegate = this.delegate) == null) {
            return;
        }
        chatMessageCellDelegate.invalidateBlur();
    }

    public boolean isHighlightedAnimated() {
        return this.isHighlightedAnimated;
    }

    public void setHighlightedAnimated() {
        this.isHighlightedAnimated = true;
        this.highlightProgress = 1000;
        this.lastHighlightProgressTime = System.currentTimeMillis();
        invalidate();
        if (getParent() != null) {
            ((View) getParent()).invalidate();
        }
    }

    public boolean isHighlighted() {
        return this.isHighlighted;
    }

    public void setHighlighted(boolean z) {
        if (this.isHighlighted == z) {
            return;
        }
        this.isHighlighted = z;
        if (z) {
            this.quoteHighlight = null;
        }
        if (!z) {
            this.lastHighlightProgressTime = System.currentTimeMillis();
            this.isHighlightedAnimated = true;
            this.highlightProgress = 300;
        } else {
            this.isHighlightedAnimated = false;
            this.highlightProgress = 0;
        }
        updateRadialProgressBackground();
        if (this.useSeekBarWaveform) {
            this.seekBarWaveform.setSelected(isDrawSelectionBackground());
        } else {
            this.seekBar.setSelected(isDrawSelectionBackground());
        }
        invalidate();
        if (getParent() != null) {
            ((View) getParent()).invalidate();
        }
    }

    @Override // android.view.View
    public void setPressed(boolean z) {
        super.setPressed(z);
        updateRadialProgressBackground();
        if (this.useSeekBarWaveform) {
            this.seekBarWaveform.setSelected(isDrawSelectionBackground());
        } else {
            this.seekBar.setSelected(isDrawSelectionBackground());
        }
        invalidate();
    }

    private void updateRadialProgressBackground() {
        if (this.drawRadialCheckBackground) {
            return;
        }
        boolean z = true;
        boolean z2 = (this.isHighlighted || this.isPressed || isPressed()) && !(this.drawPhotoImage && this.photoImage.hasBitmapImage());
        this.radialProgress.setPressed(z2 || this.buttonPressed != 0, false);
        if (this.hasMiniProgress != 0) {
            this.radialProgress.setPressed(z2 || this.miniButtonPressed != 0, true);
        }
        RadialProgress2 radialProgress2 = this.videoRadialProgress;
        if (!z2 && this.videoButtonPressed == 0) {
            z = false;
        }
        radialProgress2.setPressed(z, false);
    }

    @Override // org.telegram.ui.Components.SeekBar.SeekBarDelegate
    public void onSeekBarPressed() {
        requestDisallowInterceptTouchEvent(true);
    }

    @Override // org.telegram.ui.Components.SeekBar.SeekBarDelegate
    public void onSeekBarReleased() {
        requestDisallowInterceptTouchEvent(false);
    }

    @Override // org.telegram.ui.Components.SeekBar.SeekBarDelegate
    public boolean isSeekBarDragAllowed() {
        MessageObject messageObject = this.currentMessageObject;
        return messageObject == null || !messageObject.isVoiceOnce();
    }

    @Override // org.telegram.ui.Components.SeekBar.SeekBarDelegate
    public boolean reverseWaveform() {
        MessageObject messageObject = this.currentMessageObject;
        return messageObject != null && messageObject.isVoiceOnce();
    }

    @Override // org.telegram.ui.Components.SeekBar.SeekBarDelegate
    public void onSeekBarDrag(float f) {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null) {
            return;
        }
        messageObject.audioProgress = f;
        MediaController.getInstance().seekToProgress(this.currentMessageObject, f);
        updatePlayingMessageProgress();
    }

    @Override // org.telegram.ui.Components.SeekBar.SeekBarDelegate
    public void onSeekBarContinuousDrag(float f) {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null) {
            return;
        }
        messageObject.audioProgress = f;
        double duration = messageObject.getDuration();
        double d = f;
        Double.isNaN(d);
        messageObject.audioProgressSec = (int) (duration * d);
        updatePlayingMessageProgress();
    }

    public boolean isAnimatingPollAnswer() {
        return this.animatePollAnswerAlpha;
    }

    /* JADX WARN: Code restructure failed: missing block: B:50:0x00b7, code lost:
        if (r3.voiceTranscriptionForce != false) goto L52;
     */
    /* JADX WARN: Code restructure failed: missing block: B:52:0x00c1, code lost:
        if (r0.getDuration() >= 60.0d) goto L52;
     */
    /* JADX WARN: Code restructure failed: missing block: B:56:0x00cd, code lost:
        if (r7.useSeekBarWaveform != false) goto L56;
     */
    /* JADX WARN: Code restructure failed: missing block: B:58:0x00d5, code lost:
        if (r7.currentMessageObject.isRoundVideo() != false) goto L56;
     */
    /* JADX WARN: Code restructure failed: missing block: B:59:0x00d7, code lost:
        r0 = r7.currentMessageObject.messageOwner;
     */
    /* JADX WARN: Code restructure failed: missing block: B:60:0x00db, code lost:
        if (r0 == null) goto L68;
     */
    /* JADX WARN: Code restructure failed: missing block: B:62:0x00e3, code lost:
        if ((org.telegram.messenger.MessageObject.getMedia(r0) instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage) != false) goto L68;
     */
    /* JADX WARN: Code restructure failed: missing block: B:63:0x00e5, code lost:
        r0 = r7.currentMessageObject.messageOwner.media;
     */
    /* JADX WARN: Code restructure failed: missing block: B:64:0x00eb, code lost:
        if (r0 != null) goto L62;
     */
    /* JADX WARN: Code restructure failed: missing block: B:66:0x00ef, code lost:
        if (r0.ttl_seconds != 0) goto L68;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void updateWaveform() {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null) {
            int i = this.documentAttachType;
            if (i == 3 || i == 7) {
                byte[] waveform = messageObject.getWaveform();
                boolean z = true;
                this.useSeekBarWaveform = waveform != null;
                SeekBarWaveform seekBarWaveform = this.seekBarWaveform;
                if (seekBarWaveform != null) {
                    seekBarWaveform.setWaveform(waveform);
                }
                MessageObject messageObject2 = this.currentMessageObject;
                if (messageObject2 != null && !messageObject2.isQuickReply()) {
                    MessageObject messageObject3 = this.currentMessageObject;
                    if (!messageObject3.isRepostPreview && (!messageObject3.isOutOwner() || this.currentMessageObject.isSent())) {
                        if (!UserConfig.getInstance(this.currentAccount).isPremium()) {
                            if (MessagesController.getInstance(this.currentAccount).transcribeAudioTrialWeeklyNumber > 0 && this.currentMessageObject.getDuration() <= MessagesController.getInstance(this.currentAccount).transcribeAudioTrialDurationMax) {
                                TLRPC$Message tLRPC$Message = this.currentMessageObject.messageOwner;
                                if (tLRPC$Message == null || (TextUtils.isEmpty(tLRPC$Message.voiceTranscription) && !this.currentMessageObject.messageOwner.voiceTranscriptionFinal)) {
                                    TranscribeButton.canTranscribeTrial(this.currentMessageObject);
                                }
                            } else if (MessagesController.getInstance(this.currentAccount).transcribeAudioTrialWeeklyNumber <= 0) {
                                if (!MessagesController.getInstance(this.currentAccount).premiumFeaturesBlocked()) {
                                    if (!MessagesController.getInstance(this.currentAccount).didPressTranscribeButtonEnough()) {
                                        if (!this.currentMessageObject.isOutOwner()) {
                                            MessageObject messageObject4 = this.currentMessageObject;
                                            TLRPC$Message tLRPC$Message2 = messageObject4.messageOwner;
                                            if (tLRPC$Message2 != null) {
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if (this.currentMessageObject.isVoice()) {
                        }
                    }
                }
                z = false;
                this.useTranscribeButton = z;
                updateSeekBarWaveformWidth(null);
            }
        }
    }

    private void updateSeekBarWaveformWidth(Canvas canvas) {
        int i;
        this.seekBarWaveformTranslateX = 0;
        int i2 = -AndroidUtilities.dp((this.hasLinkPreview ? 10 : 0) + 92);
        TransitionParams transitionParams = this.transitionParams;
        if (transitionParams.animateBackgroundBoundsInner && ((i = this.documentAttachType) == 3 || i == 7)) {
            int i3 = this.backgroundWidth;
            int i4 = (int) ((i3 - transitionParams.toDeltaLeft) + transitionParams.toDeltaRight);
            int i5 = (int) ((i3 - transitionParams.deltaLeft) + transitionParams.deltaRight);
            if (this.isRoundVideo && !this.drawBackground) {
                i5 = (int) (i5 + (getVideoTranscriptionProgress() * AndroidUtilities.dp(8.0f)));
                i4 += AndroidUtilities.dp(8.0f);
            }
            TransitionParams transitionParams2 = this.transitionParams;
            if (transitionParams2.toDeltaLeft == 0.0f && transitionParams2.toDeltaRight == 0.0f) {
                i4 = i5;
            }
            SeekBarWaveform seekBarWaveform = this.seekBarWaveform;
            if (seekBarWaveform != null) {
                if (transitionParams2.animateUseTranscribeButton) {
                    seekBarWaveform.setSize(((i5 + i2) - ((int) (AndroidUtilities.dp(34.0f) * getUseTranscribeButtonProgress()))) - AndroidUtilities.dp(this.hasLinkPreview ? 10.0f : 0.0f), AndroidUtilities.dp(30.0f), i3 + i2 + (!this.useTranscribeButton ? -AndroidUtilities.dp(34.0f) : 0), i4 + i2 + (this.useTranscribeButton ? -AndroidUtilities.dp(34.0f) : 0));
                } else {
                    seekBarWaveform.setSize(((i5 + i2) - ((int) (AndroidUtilities.dp(34.0f) * getUseTranscribeButtonProgress()))) - AndroidUtilities.dp(this.hasLinkPreview ? 10.0f : 0.0f), AndroidUtilities.dp(30.0f), (i3 + i2) - ((int) (AndroidUtilities.dp(34.0f) * getUseTranscribeButtonProgress())), (i4 + i2) - ((int) (AndroidUtilities.dp(34.0f) * getUseTranscribeButtonProgress())));
                }
            }
            SeekBar seekBar = this.seekBar;
            if (seekBar != null) {
                seekBar.setSize((i5 - ((int) (getUseTranscribeButtonProgress() * AndroidUtilities.dp(34.0f)))) - AndroidUtilities.dp((this.documentAttachType != 5 ? 72 : 65) + (this.hasLinkPreview ? 20 : 0)), AndroidUtilities.dp(30.0f));
                return;
            }
            return;
        }
        SeekBarWaveform seekBarWaveform2 = this.seekBarWaveform;
        if (seekBarWaveform2 != null) {
            if (transitionParams.animateUseTranscribeButton) {
                seekBarWaveform2.setSize(((this.backgroundWidth + i2) - ((int) (AndroidUtilities.dp(34.0f) * getUseTranscribeButtonProgress()))) - AndroidUtilities.dp(this.hasLinkPreview ? 10.0f : 0.0f), AndroidUtilities.dp(30.0f), ((this.backgroundWidth + i2) + (!this.useTranscribeButton ? -AndroidUtilities.dp(34.0f) : 0)) - AndroidUtilities.dp(this.hasLinkPreview ? 10.0f : 0.0f), this.backgroundWidth + i2 + (this.useTranscribeButton ? -AndroidUtilities.dp(34.0f) : 0));
            } else {
                seekBarWaveform2.setSize(((this.backgroundWidth + i2) - ((int) (AndroidUtilities.dp(34.0f) * getUseTranscribeButtonProgress()))) - AndroidUtilities.dp(this.hasLinkPreview ? 10.0f : 0.0f), AndroidUtilities.dp(30.0f));
            }
        }
        SeekBar seekBar2 = this.seekBar;
        if (seekBar2 != null) {
            seekBar2.setSize((this.backgroundWidth - ((int) (getUseTranscribeButtonProgress() * AndroidUtilities.dp(34.0f)))) - AndroidUtilities.dp((this.documentAttachType != 5 ? 72 : 65) + (this.hasLinkPreview ? 20 : 0)), AndroidUtilities.dp(30.0f));
        }
    }

    private int createDocumentLayout(int i, MessageObject messageObject) {
        int i2;
        int i3 = i;
        if (messageObject.type == 0) {
            this.documentAttach = MessageObject.getMedia(messageObject.messageOwner).webpage.document;
        } else {
            this.documentAttach = messageObject.getDocument();
        }
        TLRPC$Document tLRPC$Document = this.documentAttach;
        int i4 = 0;
        if (tLRPC$Document == null) {
            return 0;
        }
        double d = 0.0d;
        if (MessageObject.isVoiceDocument(tLRPC$Document)) {
            this.documentAttachType = 3;
            int i5 = 0;
            while (true) {
                if (i5 >= this.documentAttach.attributes.size()) {
                    break;
                }
                TLRPC$DocumentAttribute tLRPC$DocumentAttribute = this.documentAttach.attributes.get(i5);
                if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeAudio) {
                    d = tLRPC$DocumentAttribute.duration;
                    break;
                }
                i5++;
            }
            this.widthBeforeNewTimeLine = (i3 - AndroidUtilities.dp(94.0f)) - ((int) Math.ceil(Theme.chat_audioTimePaint.measureText("00:00")));
            this.availableTimeWidth = i3 - AndroidUtilities.dp(18.0f);
            measureTime(messageObject);
            int dp = AndroidUtilities.dp(174.0f) + this.timeWidth;
            if (!this.hasLinkPreview) {
                this.backgroundWidth = Math.min(i3, dp + ((int) Math.ceil(Theme.chat_audioTimePaint.measureText(AndroidUtilities.formatLongDuration((int) d)))));
            }
            this.seekBarWaveform.setMessageObject(messageObject);
            return 0;
        } else if (MessageObject.isVideoDocument(this.documentAttach)) {
            this.documentAttachType = 4;
            if (!messageObject.needDrawBluredPreview()) {
                updatePlayingMessageProgress();
                String format = String.format("%s", AndroidUtilities.formatFileSize(this.documentAttach.size));
                this.docTitleWidth = (int) Math.ceil(Theme.chat_infoPaint.measureText(format));
                this.docTitleLayout = new CachedStaticLayout(new StaticLayout(format, Theme.chat_infoPaint, this.docTitleWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            }
            return 0;
        } else if (MessageObject.isMusicDocument(this.documentAttach)) {
            this.documentAttachType = 5;
            int dp2 = i3 - AndroidUtilities.dp(92.0f);
            if (dp2 < 0) {
                dp2 = AndroidUtilities.dp(100.0f);
            }
            int i6 = dp2;
            CachedStaticLayout cachedStaticLayout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(messageObject.getMusicTitle().replace('\n', ' '), Theme.chat_audioTitlePaint, i6 - AndroidUtilities.dp(12.0f), TextUtils.TruncateAt.END), Theme.chat_audioTitlePaint, i6, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            this.songLayout = cachedStaticLayout;
            if (cachedStaticLayout.getLineCount() > 0) {
                this.songX = -((int) Math.ceil(this.songLayout.getLineLeft(0)));
            }
            CachedStaticLayout cachedStaticLayout2 = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(messageObject.getMusicAuthor().replace('\n', ' '), Theme.chat_audioPerformerPaint, i6, TextUtils.TruncateAt.END), Theme.chat_audioPerformerPaint, i6, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            this.performerLayout = cachedStaticLayout2;
            if (cachedStaticLayout2.getLineCount() > 0) {
                this.performerX = -((int) Math.ceil(this.performerLayout.getLineLeft(0)));
            }
            while (true) {
                if (i4 >= this.documentAttach.attributes.size()) {
                    break;
                }
                TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = this.documentAttach.attributes.get(i4);
                if (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeAudio) {
                    d = tLRPC$DocumentAttribute2.duration;
                    break;
                }
                i4++;
            }
            int i7 = (int) d;
            int ceil = (int) Math.ceil(Theme.chat_audioTimePaint.measureText(AndroidUtilities.formatShortDuration(i7, i7)));
            this.widthBeforeNewTimeLine = (this.backgroundWidth - AndroidUtilities.dp(86.0f)) - ceil;
            this.availableTimeWidth = this.backgroundWidth - AndroidUtilities.dp(28.0f);
            return ceil;
        } else if (MessageObject.isGifDocument(this.documentAttach, messageObject.hasValidGroupId())) {
            this.documentAttachType = 2;
            if (!messageObject.needDrawBluredPreview()) {
                String string = LocaleController.getString("AttachGif", R.string.AttachGif);
                this.infoWidth = (int) Math.ceil(Theme.chat_infoPaint.measureText(string));
                this.infoLayout = new CachedStaticLayout(new StaticLayout(string, Theme.chat_infoPaint, this.infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                String format2 = String.format("%s", AndroidUtilities.formatFileSize(this.documentAttach.size));
                this.docTitleWidth = (int) Math.ceil(Theme.chat_infoPaint.measureText(format2));
                this.docTitleLayout = new CachedStaticLayout(new StaticLayout(format2, Theme.chat_infoPaint, this.docTitleWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            }
            return 0;
        } else {
            String str = this.documentAttach.mime_type;
            boolean z = (str != null && (str.toLowerCase().startsWith("image/") || this.documentAttach.mime_type.toLowerCase().startsWith("video/mp4"))) || MessageObject.isDocumentHasThumb(this.documentAttach);
            this.drawPhotoImage = z;
            if (!z) {
                i3 += AndroidUtilities.dp(30.0f);
            }
            this.documentAttachType = 1;
            String documentFileName = FileLoader.getDocumentFileName(this.documentAttach);
            if (documentFileName.length() == 0) {
                documentFileName = LocaleController.getString("AttachDocument", R.string.AttachDocument);
            }
            CachedStaticLayout cachedStaticLayout3 = new CachedStaticLayout(StaticLayoutEx.createStaticLayout(documentFileName, Theme.chat_docNamePaint, i3, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.MIDDLE, i3, 2, false));
            this.docTitleLayout = cachedStaticLayout3;
            this.docTitleOffsetX = Integer.MIN_VALUE;
            if (cachedStaticLayout3.getLineCount() > 0) {
                int i8 = 0;
                while (i4 < this.docTitleLayout.getLineCount()) {
                    i8 = Math.max(i8, (int) Math.ceil(this.docTitleLayout.getLineWidth(i4)));
                    this.docTitleOffsetX = Math.max(this.docTitleOffsetX, (int) Math.ceil(-this.docTitleLayout.getLineLeft(i4)));
                    i4++;
                }
                i2 = Math.min(i3, i8);
            } else {
                this.docTitleOffsetX = 0;
                i2 = i3;
            }
            int dp3 = i3 - AndroidUtilities.dp(30.0f);
            TextPaint textPaint = Theme.chat_infoPaint;
            int min = Math.min(dp3, (int) Math.ceil(textPaint.measureText("000.0 mm / " + AndroidUtilities.formatFileSize(this.documentAttach.size))));
            this.infoWidth = min;
            CharSequence ellipsize = TextUtils.ellipsize(AndroidUtilities.formatFileSize(this.documentAttach.size) + " " + FileLoader.getDocumentExtension(this.documentAttach), Theme.chat_infoPaint, (float) min, TextUtils.TruncateAt.END);
            try {
                if (this.infoWidth < 0) {
                    this.infoWidth = AndroidUtilities.dp(10.0f);
                }
                this.infoLayout = new CachedStaticLayout(new StaticLayout(ellipsize, Theme.chat_infoPaint, this.infoWidth + AndroidUtilities.dp(6.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            } catch (Exception e) {
                FileLog.e(e);
            }
            if (this.drawPhotoImage) {
                this.currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, 320);
                this.currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, 40);
                if ((DownloadController.getInstance(this.currentAccount).getAutodownloadMask() & 1) == 0) {
                    this.currentPhotoObject = null;
                }
                TLRPC$PhotoSize tLRPC$PhotoSize = this.currentPhotoObject;
                if (tLRPC$PhotoSize == null || tLRPC$PhotoSize == this.currentPhotoObjectThumb) {
                    this.currentPhotoObject = null;
                    this.photoImage.setNeedsQualityThumb(true);
                    this.photoImage.setShouldGenerateQualityThumb(true);
                } else {
                    BitmapDrawable bitmapDrawable = this.currentMessageObject.strippedThumb;
                    if (bitmapDrawable != null) {
                        this.currentPhotoObjectThumb = null;
                        this.currentPhotoObjectThumbStripped = bitmapDrawable;
                    }
                }
                this.currentPhotoFilter = "86_86_b";
                this.photoImage.setImage(ImageLocation.getForObject(this.currentPhotoObject, messageObject.photoThumbsObject), "86_86", ImageLocation.getForObject(this.currentPhotoObjectThumb, messageObject.photoThumbsObject), this.currentPhotoFilter, this.currentPhotoObjectThumbStripped, 0L, null, messageObject, 1);
            }
            return i2;
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:50:0x0085, code lost:
        if (r2.isSmall == false) goto L46;
     */
    /* JADX WARN: Code restructure failed: missing block: B:56:0x0093, code lost:
        if (r2.isSmall == false) goto L52;
     */
    /* JADX WARN: Code restructure failed: missing block: B:58:0x0099, code lost:
        if (r0.isGiveawayOrGiveawayResults() != false) goto L31;
     */
    /* JADX WARN: Removed duplicated region for block: B:61:0x00a0  */
    /* JADX WARN: Removed duplicated region for block: B:66:0x00d7  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void calcBackgroundWidth(int i, int i2, int i3) {
        if (this.currentMessageObject.isSponsored()) {
            this.backgroundWidth = i3 + AndroidUtilities.dp(31.0f);
            return;
        }
        ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
        boolean z = reactionsLayoutInBubble.isEmpty;
        int i4 = (z || reactionsLayoutInBubble.isSmall) ? this.currentMessageObject.lastLineWidth : reactionsLayoutInBubble.lastLineX;
        boolean z2 = false;
        if (!z && !reactionsLayoutInBubble.isSmall) {
            z2 = (i - i4 < i2 || this.currentMessageObject.hasRtl) ? true : true;
            if (this.hasInvoicePreview) {
                this.totalHeight += AndroidUtilities.dp(14.0f);
            }
        } else if ((!this.linkPreviewAbove && ((this.hasLinkPreview && !this.currentMessageObject.isSponsored()) || this.hasOldCaptionPreview || this.hasGamePreview || this.hasInvoicePreview)) || i - i4 < i2 || this.currentMessageObject.hasRtl) {
            z2 = true;
        }
        int i5 = 14;
        if (this.currentMessageObject.isUnsupported()) {
            z2 = true;
        }
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject.hasCodeAtBottom) {
            ReactionsLayoutInBubble reactionsLayoutInBubble2 = this.reactionsLayoutInBubble;
            if (!reactionsLayoutInBubble2.isEmpty) {
            }
            i5 = 18;
            z2 = true;
            if (!z2) {
                this.totalHeight += AndroidUtilities.dp(i5);
                this.hasNewLineForTime = true;
                int max = Math.max(i3, i4) + AndroidUtilities.dp(31.0f);
                this.backgroundWidth = max;
                this.backgroundWidth = Math.max(max, (this.currentMessageObject.isOutOwner() ? this.timeWidth + AndroidUtilities.dp(17.0f) : this.timeWidth) + AndroidUtilities.dp(31.0f));
                return;
            }
            int extraTextX = (i3 - getExtraTextX()) - i4;
            if (extraTextX >= 0 && extraTextX <= i2) {
                this.backgroundWidth = ((i3 + i2) - extraTextX) + AndroidUtilities.dp(31.0f);
                return;
            } else {
                this.backgroundWidth = Math.max(i3, i4 + i2) + AndroidUtilities.dp(31.0f);
                return;
            }
        }
        if (messageObject.hasQuoteAtBottom) {
            ReactionsLayoutInBubble reactionsLayoutInBubble3 = this.reactionsLayoutInBubble;
            if (!reactionsLayoutInBubble3.isEmpty) {
            }
            i5 = 18;
            z2 = true;
            if (!z2) {
            }
        }
    }

    public boolean setHighlightedText(String str) {
        return setHighlightedText(str, false, -1);
    }

    public boolean setHighlightedText(String str, boolean z, int i) {
        String str2;
        String str3;
        int i2;
        int i3;
        if (this.highlightedQuote && !z && TextUtils.isEmpty(str)) {
            return false;
        }
        MessageObject messageObject = this.messageObjectToSet;
        if (messageObject == null) {
            messageObject = this.currentMessageObject;
        }
        this.highlightedQuote = z;
        if (messageObject == null || TextUtils.isEmpty(str)) {
            if (!this.urlPathSelection.isEmpty()) {
                this.linkSelectionBlockNum = -1;
                this.highlightedQuote = false;
                resetUrlPaths();
                invalidate();
            }
            return false;
        }
        if (!z) {
            this.quoteHighlight = null;
        }
        CharSequence charSequence = this.currentCaption;
        if (charSequence != null) {
            str2 = charSequence.toString();
        } else {
            str2 = messageObject.messageOwner.message;
        }
        if (str2 == null || TextUtils.isEmpty(str2)) {
            if (this.urlPathSelection.isEmpty()) {
                return false;
            }
            this.linkSelectionBlockNum = -1;
            this.highlightedQuote = false;
            resetUrlPaths();
            invalidate();
            return false;
        }
        if (z) {
            str3 = str;
        } else {
            str3 = str.toLowerCase();
            str2 = str2.toLowerCase();
        }
        if (z) {
            int findQuoteStart = MessageObject.findQuoteStart(str2, str3, i);
            i2 = str3.length();
            i3 = findQuoteStart;
        } else {
            int length = str2.length();
            i2 = -1;
            int i4 = -1;
            for (int i5 = 0; i5 < length; i5++) {
                int min = Math.min(str3.length(), length - i5);
                int i6 = 0;
                for (int i7 = 0; i7 < min; i7++) {
                    boolean z2 = str2.charAt(i5 + i7) == str3.charAt(i7);
                    if (z2) {
                        if (i6 != 0 || i5 == 0 || " !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n".indexOf(str2.charAt(i5 - 1)) >= 0) {
                            i6++;
                        } else {
                            z2 = false;
                        }
                    }
                    if (!z2 || i7 == min - 1) {
                        if (i6 > 0 && i6 > i2) {
                            i4 = i5;
                            i2 = i6;
                        }
                    }
                }
            }
            i3 = i4;
        }
        if (i3 == -1) {
            if (this.urlPathSelection.isEmpty()) {
                return false;
            }
            this.linkSelectionBlockNum = -1;
            this.highlightedQuote = false;
            resetUrlPaths();
            invalidate();
            return false;
        }
        if (!z) {
            int length2 = str2.length();
            for (int i8 = i3 + i2; i8 < length2 && " !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n".indexOf(str2.charAt(i8)) < 0; i8++) {
                i2++;
            }
        }
        this.highlightedQuote = z;
        int i9 = i3 + i2;
        if (z && this.currentMessagesGroup == null && this.groupedMessagesToSet == null) {
            QuoteHighlight quoteHighlight = this.quoteHighlight;
            if (quoteHighlight != null && quoteHighlight.id == messageObject.getId()) {
                QuoteHighlight quoteHighlight2 = this.quoteHighlight;
                if (quoteHighlight2.start == i3 && quoteHighlight2.end == i9) {
                    return true;
                }
            }
            if (this.captionLayout != null) {
                ViewParent parent = getParent();
                int id = messageObject.getId();
                MessageObject.TextLayoutBlocks textLayoutBlocks = this.captionLayout;
                this.quoteHighlight = new QuoteHighlight(this, parent, id, textLayoutBlocks.textLayoutBlocks, i3, i9, textLayoutBlocks.textXOffset);
                return true;
            }
            this.quoteHighlight = new QuoteHighlight(this, getParent(), messageObject.getId(), messageObject.textLayoutBlocks, i3, i9, messageObject.textXOffset);
            return true;
        } else if (!TextUtils.isEmpty(this.currentCaption)) {
            MessageObject.TextLayoutBlocks textLayoutBlocks2 = this.captionLayout;
            if (textLayoutBlocks2 == null) {
                this.highlightCaptionToSetStart = i3;
                this.highlightCaptionToSetEnd = i9;
                return true;
            }
            highlight(i3, i9, textLayoutBlocks2.textLayoutBlocks);
            return true;
        } else {
            ArrayList<MessageObject.TextLayoutBlock> arrayList = messageObject.textLayoutBlocks;
            if (arrayList != null) {
                highlight(i3, i9, arrayList);
                return true;
            }
            return true;
        }
    }

    private void highlight(int i, int i2, ArrayList<MessageObject.TextLayoutBlock> arrayList) {
        if (arrayList == null) {
            return;
        }
        int i3 = i2 - i;
        int i4 = 0;
        while (true) {
            if (i4 >= arrayList.size()) {
                break;
            }
            MessageObject.TextLayoutBlock textLayoutBlock = arrayList.get(i4);
            if (i < textLayoutBlock.charactersOffset || i >= textLayoutBlock.charactersEnd) {
                i4++;
            } else {
                this.linkSelectionBlockNum = i4;
                resetUrlPaths();
                try {
                    LinkPath obtainNewUrlPath = obtainNewUrlPath();
                    obtainNewUrlPath.setUseCornerPathImplementation(true);
                    obtainNewUrlPath.setCurrentLayout(textLayoutBlock.textLayout.layout, i, 0.0f);
                    textLayoutBlock.textLayout.layout.getSelectionPath(i, i2, obtainNewUrlPath);
                    obtainNewUrlPath.closeRects();
                    float f = textLayoutBlock.height + textLayoutBlock.padBottom;
                    if (i2 >= textLayoutBlock.charactersOffset + i3) {
                        for (int i5 = i4 + 1; i5 < arrayList.size(); i5++) {
                            MessageObject.TextLayoutBlock textLayoutBlock2 = arrayList.get(i5);
                            int i6 = textLayoutBlock2.charactersEnd - textLayoutBlock2.charactersOffset;
                            LinkPath obtainNewUrlPath2 = obtainNewUrlPath();
                            obtainNewUrlPath2.setUseCornerPathImplementation(true);
                            float f2 = f + textLayoutBlock2.padTop;
                            obtainNewUrlPath2.setCurrentLayout(textLayoutBlock2.textLayout.layout, 0, f2);
                            f = f2 + textLayoutBlock2.height + textLayoutBlock2.padBottom;
                            textLayoutBlock2.textLayout.layout.getSelectionPath(0, i2 - textLayoutBlock2.charactersOffset, obtainNewUrlPath2);
                            obtainNewUrlPath2.closeRects();
                            if (i2 < (textLayoutBlock.charactersOffset + i6) - 1) {
                                break;
                            }
                        }
                    }
                    if (this.highlightedQuote) {
                        this.isHighlightedAnimated = true;
                        this.highlightProgress = 2500;
                    }
                } catch (Exception e) {
                    FileLog.e(e);
                }
                invalidate();
            }
        }
        this.highlightCaptionToSetStart = -1;
        this.highlightCaptionToSetEnd = -1;
    }

    public boolean setHighlightedSpan(CharacterStyle characterStyle) {
        int i;
        int i2;
        int i3;
        int i4;
        MessageObject messageObject = this.messageObjectToSet;
        if (messageObject == null) {
            messageObject = this.currentMessageObject;
        }
        this.highlightedQuote = false;
        if (messageObject == null || messageObject.messageOwner.message == null || characterStyle == null) {
            if (!this.urlPathSelection.isEmpty()) {
                this.linkSelectionBlockNum = -1;
                this.highlightedQuote = false;
                resetUrlPaths();
                invalidate();
            }
            return false;
        }
        if (this.captionLayout != null && !TextUtils.isEmpty(messageObject.caption)) {
            CharSequence charSequence = messageObject.caption;
            if (charSequence instanceof Spannable) {
                Spanned spanned = (Spanned) charSequence;
                CharacterStyle[] characterStyleArr = (CharacterStyle[]) spanned.getSpans(0, spanned.length(), CharacterStyle.class);
                if (characterStyleArr != null && characterStyleArr.length > 0) {
                    for (CharacterStyle characterStyle2 : characterStyleArr) {
                        if (characterStyle2 == characterStyle) {
                            i4 = spanned.getSpanStart(characterStyle);
                            i3 = spanned.getSpanEnd(characterStyle);
                            break;
                        }
                    }
                }
                i3 = -1;
                i4 = -1;
                if (i4 >= 0 && i3 >= 0) {
                    int i5 = i3 - i4;
                    for (int i6 = 0; i6 < this.captionLayout.textLayoutBlocks.size(); i6++) {
                        MessageObject.TextLayoutBlock textLayoutBlock = this.captionLayout.textLayoutBlocks.get(i6);
                        if (i4 >= textLayoutBlock.charactersOffset && i4 < textLayoutBlock.charactersEnd) {
                            this.linkSelectionBlockNum = i6;
                            this.highlightedQuote = false;
                            resetUrlPaths();
                            try {
                                LinkPath obtainNewUrlPath = obtainNewUrlPath();
                                obtainNewUrlPath.setCurrentLayout(textLayoutBlock.textLayout.layout, i4, 0.0f);
                                textLayoutBlock.textLayout.layout.getSelectionPath(i4, i3, obtainNewUrlPath);
                                if (i3 >= textLayoutBlock.charactersOffset + i5) {
                                    for (int i7 = i6 + 1; i7 < this.captionLayout.textLayoutBlocks.size(); i7++) {
                                        MessageObject.TextLayoutBlock textLayoutBlock2 = this.captionLayout.textLayoutBlocks.get(i7);
                                        int i8 = textLayoutBlock2.charactersEnd - textLayoutBlock2.charactersOffset;
                                        LinkPath obtainNewUrlPath2 = obtainNewUrlPath();
                                        obtainNewUrlPath2.setCurrentLayout(textLayoutBlock2.textLayout.layout, 0, textLayoutBlock2.height);
                                        textLayoutBlock2.textLayout.layout.getSelectionPath(0, i3 - textLayoutBlock2.charactersOffset, obtainNewUrlPath2);
                                        if (i3 < (textLayoutBlock.charactersOffset + i8) - 1) {
                                            break;
                                        }
                                    }
                                }
                            } catch (Exception e) {
                                FileLog.e(e);
                            }
                            invalidate();
                            return true;
                        }
                    }
                }
            }
        }
        CharSequence charSequence2 = messageObject.messageText;
        if ((charSequence2 instanceof Spanned) && messageObject.textLayoutBlocks != null) {
            Spanned spanned2 = (Spanned) charSequence2;
            CharacterStyle[] characterStyleArr2 = (CharacterStyle[]) spanned2.getSpans(0, spanned2.length(), CharacterStyle.class);
            if (characterStyleArr2 != null && characterStyleArr2.length > 0) {
                for (CharacterStyle characterStyle3 : characterStyleArr2) {
                    if (characterStyle3 == characterStyle) {
                        i2 = spanned2.getSpanStart(characterStyle);
                        i = spanned2.getSpanEnd(characterStyle);
                        break;
                    }
                }
            }
            i = -1;
            i2 = -1;
            if (i2 >= 0 && i >= 0) {
                int i9 = i - i2;
                for (int i10 = 0; i10 < messageObject.textLayoutBlocks.size(); i10++) {
                    MessageObject.TextLayoutBlock textLayoutBlock3 = messageObject.textLayoutBlocks.get(i10);
                    if (i2 >= textLayoutBlock3.charactersOffset && i2 < textLayoutBlock3.charactersEnd) {
                        this.linkSelectionBlockNum = i10;
                        this.highlightedQuote = false;
                        resetUrlPaths();
                        try {
                            LinkPath obtainNewUrlPath3 = obtainNewUrlPath();
                            obtainNewUrlPath3.setCurrentLayout(textLayoutBlock3.textLayout.layout, i2, 0.0f);
                            textLayoutBlock3.textLayout.layout.getSelectionPath(i2, i, obtainNewUrlPath3);
                            if (i >= textLayoutBlock3.charactersOffset + i9) {
                                for (int i11 = i10 + 1; i11 < messageObject.textLayoutBlocks.size(); i11++) {
                                    MessageObject.TextLayoutBlock textLayoutBlock4 = messageObject.textLayoutBlocks.get(i11);
                                    int i12 = textLayoutBlock4.charactersEnd - textLayoutBlock4.charactersOffset;
                                    LinkPath obtainNewUrlPath4 = obtainNewUrlPath();
                                    obtainNewUrlPath4.setCurrentLayout(textLayoutBlock4.textLayout.layout, 0, textLayoutBlock4.height);
                                    textLayoutBlock4.textLayout.layout.getSelectionPath(0, i - textLayoutBlock4.charactersOffset, obtainNewUrlPath4);
                                    if (i < (textLayoutBlock3.charactersOffset + i12) - 1) {
                                        break;
                                    }
                                }
                            }
                        } catch (Exception e2) {
                            FileLog.e(e2);
                        }
                        invalidate();
                        return true;
                    }
                }
            }
        }
        if (!this.urlPathSelection.isEmpty()) {
            this.linkSelectionBlockNum = -1;
            this.highlightedQuote = false;
            resetUrlPaths();
            invalidate();
        }
        return false;
    }

    @Override // android.view.View
    protected boolean verifyDrawable(Drawable drawable) {
        ReactionsLayoutInBubble reactionsLayoutInBubble;
        if (!super.verifyDrawable(drawable)) {
            Drawable[] drawableArr = this.selectorDrawable;
            if (drawable != drawableArr[0] && drawable != drawableArr[1] && drawable != this.linkPreviewSelector && drawable != this.nameLayoutSelector && drawable != this.replySelector && ((reactionsLayoutInBubble = this.reactionsLayoutInBubble) == null || !reactionsLayoutInBubble.verifyDrawable(drawable))) {
                return false;
            }
        }
        return true;
    }

    @Override // android.view.View, android.graphics.drawable.Drawable.Callback
    public void invalidateDrawable(Drawable drawable) {
        super.invalidateDrawable(drawable);
        if (this.currentMessagesGroup != null) {
            invalidateWithParent();
        }
    }

    private boolean isCurrentLocationTimeExpired(MessageObject messageObject) {
        int i = MessageObject.getMedia(this.currentMessageObject.messageOwner).period;
        int currentTime = ConnectionsManager.getInstance(this.currentAccount).getCurrentTime();
        if (i == Integer.MAX_VALUE) {
            return false;
        }
        return i % 60 == 0 ? Math.abs(currentTime - messageObject.messageOwner.date) > i : Math.abs(currentTime - messageObject.messageOwner.date) > i + (-5);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void checkLocationExpired() {
        boolean isCurrentLocationTimeExpired;
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null || (isCurrentLocationTimeExpired = isCurrentLocationTimeExpired(messageObject)) == this.locationExpired) {
            return;
        }
        this.locationExpired = isCurrentLocationTimeExpired;
        if (!isCurrentLocationTimeExpired) {
            AndroidUtilities.runOnUIThread(this.invalidateRunnable, 1000L);
            this.scheduledInvalidate = true;
            int dp = this.backgroundWidth - AndroidUtilities.dp(91.0f);
            this.docTitleLayout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(LocaleController.getString("AttachLiveLocation", R.string.AttachLiveLocation), Theme.chat_locationTitlePaint, dp, TextUtils.TruncateAt.END), Theme.chat_locationTitlePaint, dp, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            return;
        }
        MessageObject messageObject2 = this.currentMessageObject;
        this.currentMessageObject = null;
        setMessageObject(messageObject2, this.currentMessagesGroup, this.pinnedBottom, this.pinnedTop);
    }

    public void setIsUpdating(boolean z) {
        this.isUpdating = true;
    }

    public void setMessageObject(MessageObject messageObject, MessageObject.GroupedMessages groupedMessages, boolean z, boolean z2) {
        if (this.attachedToWindow && !this.frozen) {
            setMessageContent(messageObject, groupedMessages, z, z2);
            return;
        }
        this.messageObjectToSet = messageObject;
        this.groupedMessagesToSet = groupedMessages;
        this.bottomNearToSet = z;
        this.topNearToSet = z2;
    }

    private int getAdditionalWidthForPosition(MessageObject.GroupedMessagePosition groupedMessagePosition) {
        if (groupedMessagePosition != null) {
            int dp = (groupedMessagePosition.flags & 2) == 0 ? 0 + AndroidUtilities.dp(4.0f) : 0;
            return (groupedMessagePosition.flags & 1) == 0 ? dp + AndroidUtilities.dp(4.0f) : dp;
        }
        return 0;
    }

    public void createSelectorDrawable(final int i) {
        int themedColor;
        ReplyMessageLine replyMessageLine;
        ReplyMessageLine replyMessageLine2;
        if (Build.VERSION.SDK_INT < 21) {
            return;
        }
        if (this.currentMessageObject.isUnsupported()) {
            themedColor = getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outPreviewInstantText : Theme.key_chat_inPreviewInstantText);
        } else if (i == 0 && this.psaHintPressed) {
            themedColor = getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outViews : Theme.key_chat_inViews);
        } else if (i == 0 && (replyMessageLine2 = this.linkLine) != null) {
            themedColor = replyMessageLine2.getColor();
        } else if (i == 0 && (replyMessageLine = this.contactLine) != null) {
            themedColor = replyMessageLine.getColor();
        } else {
            themedColor = getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outPreviewInstantText : Theme.key_chat_inPreviewInstantText);
        }
        Drawable[] drawableArr = this.selectorDrawable;
        if (drawableArr[i] == null) {
            final Paint paint = new Paint(1);
            paint.setColor(-1);
            this.selectorMaskDrawable[i] = new MaskDrawable() { // from class: org.telegram.ui.Cells.ChatMessageCell.6
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super();
                }

                @Override // android.graphics.drawable.Drawable
                public void draw(Canvas canvas) {
                    Rect bounds = getBounds();
                    this.rect.set(bounds.left, bounds.top, bounds.right, bounds.bottom);
                    if (ChatMessageCell.this.selectorDrawableMaskType[i] != 3 && ChatMessageCell.this.selectorDrawableMaskType[i] != 4) {
                        if (ChatMessageCell.this.selectorDrawableMaskType[i] != 2) {
                            canvas.drawRoundRect(this.rect, ChatMessageCell.this.selectorDrawableMaskType[i] == 0 ? AndroidUtilities.dp(6.0f) : 0.0f, ChatMessageCell.this.selectorDrawableMaskType[i] == 0 ? AndroidUtilities.dp(6.0f) : 0.0f, paint);
                            return;
                        }
                        this.path.reset();
                        boolean z = ChatMessageCell.this.currentMessageObject != null && ChatMessageCell.this.currentMessageObject.isOutOwner();
                        for (int i2 = 0; i2 < 4; i2++) {
                            if (!ChatMessageCell.this.instantTextNewLine) {
                                if (i2 == 2 && !z) {
                                    float[] fArr = ChatMessageCell.radii;
                                    int i3 = i2 * 2;
                                    float dp = AndroidUtilities.dp(SharedConfig.bubbleRadius);
                                    ChatMessageCell.radii[i3 + 1] = dp;
                                    fArr[i3] = dp;
                                } else if (i2 != 3 || !z) {
                                    if ((ChatMessageCell.this.mediaBackground || ChatMessageCell.this.pinnedBottom) && (i2 == 2 || i2 == 3)) {
                                        float[] fArr2 = ChatMessageCell.radii;
                                        int i4 = i2 * 2;
                                        float[] fArr3 = ChatMessageCell.radii;
                                        int i5 = i4 + 1;
                                        float dp2 = AndroidUtilities.dp(ChatMessageCell.this.pinnedBottom ? Math.min(5, SharedConfig.bubbleRadius) : SharedConfig.bubbleRadius);
                                        fArr3[i5] = dp2;
                                        fArr2[i4] = dp2;
                                    }
                                } else {
                                    float[] fArr4 = ChatMessageCell.radii;
                                    int i6 = i2 * 2;
                                    float dp3 = AndroidUtilities.dp(SharedConfig.bubbleRadius);
                                    ChatMessageCell.radii[i6 + 1] = dp3;
                                    fArr4[i6] = dp3;
                                }
                            }
                            float[] fArr5 = ChatMessageCell.radii;
                            int i7 = i2 * 2;
                            ChatMessageCell.radii[i7 + 1] = 0.0f;
                            fArr5[i7] = 0.0f;
                        }
                        if (!z) {
                            ChatMessageCell chatMessageCell = ChatMessageCell.this;
                            if (!chatMessageCell.drawPinnedBottom && chatMessageCell.currentPosition == null && (ChatMessageCell.this.currentMessageObject == null || ChatMessageCell.this.currentMessageObject.type == 0 || !TextUtils.isEmpty(ChatMessageCell.this.currentMessageObject.caption) || ChatMessageCell.this.pollInstantViewTouchesBottom)) {
                                this.path.moveTo(this.rect.left + AndroidUtilities.dp(6.0f), this.rect.top);
                                this.path.lineTo(this.rect.left + AndroidUtilities.dp(6.0f), (this.rect.bottom - AndroidUtilities.dp(6.0f)) - AndroidUtilities.dp(5.0f));
                                RectF rectF = AndroidUtilities.rectTmp;
                                rectF.set(this.rect.left + AndroidUtilities.dp(-7.0f), this.rect.bottom - AndroidUtilities.dp(23.0f), this.rect.left + AndroidUtilities.dp(6.0f), this.rect.bottom);
                                this.path.arcTo(rectF, 0.0f, 83.0f, false);
                                RectF rectF2 = this.rect;
                                rectF.set(this.rect.right - (ChatMessageCell.radii[4] * 2.0f), this.rect.bottom - (ChatMessageCell.radii[5] * 2.0f), rectF2.right, rectF2.bottom);
                                this.path.arcTo(rectF, 90.0f, -90.0f, false);
                                Path path = this.path;
                                RectF rectF3 = this.rect;
                                path.lineTo(rectF3.right, rectF3.top);
                                this.path.close();
                                this.path.close();
                                canvas.drawPath(this.path, paint);
                                return;
                            }
                        }
                        this.path.addRoundRect(this.rect, ChatMessageCell.radii, Path.Direction.CW);
                        this.path.close();
                        canvas.drawPath(this.path, paint);
                        return;
                    }
                    canvas.drawCircle(this.rect.centerX(), this.rect.centerY(), AndroidUtilities.dp(ChatMessageCell.this.selectorDrawableMaskType[i] == 3 ? 16.0f : 20.0f), paint);
                }
            };
            int[][] iArr = {StateSet.WILD_CARD};
            int[] iArr2 = new int[1];
            iArr2[0] = 436207615 & getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outPreviewInstantText : Theme.key_chat_inPreviewInstantText);
            this.selectorDrawable[i] = new BaseCell.RippleDrawableSafe(new ColorStateList(iArr, iArr2), null, this.selectorMaskDrawable[i]);
            this.selectorDrawable[i].setCallback(this);
        } else {
            Theme.setSelectorDrawableColor(drawableArr[i], themedColor & 436207615, true);
        }
        this.selectorDrawable[i].setVisible(true, false);
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* loaded from: classes4.dex */
    public static class MaskDrawable extends Drawable {
        public final Path path;
        public final RectF rect;

        @Override // android.graphics.drawable.Drawable
        public int getOpacity() {
            return -2;
        }

        @Override // android.graphics.drawable.Drawable
        public void setAlpha(int i) {
        }

        @Override // android.graphics.drawable.Drawable
        public void setColorFilter(ColorFilter colorFilter) {
        }

        private MaskDrawable() {
            this.rect = new RectF();
            this.path = new Path();
        }
    }

    private void createInstantViewButton() {
        int measureText;
        if (Build.VERSION.SDK_INT >= 21 && this.drawInstantView) {
            createSelectorDrawable(0);
        }
        if (this.drawInstantView && this.instantViewLayout == null) {
            this.instantWidth = AndroidUtilities.dp(33.0f);
            String str = this.instantViewButtonText;
            if (str == null) {
                int i = this.drawInstantViewType;
                if (i == 12) {
                    str = LocaleController.getString(R.string.OpenChannelPost);
                } else if (i == 1) {
                    str = LocaleController.getString(R.string.OpenChannel);
                } else if (i == 13) {
                    str = LocaleController.getString(R.string.SendMessage).toUpperCase();
                } else if (i == 10) {
                    str = LocaleController.getString(R.string.OpenBot);
                } else if (i == 2) {
                    str = LocaleController.getString(R.string.OpenGroup);
                } else if (i == 3) {
                    str = LocaleController.getString(R.string.OpenMessage);
                } else if (i == 5) {
                    str = LocaleController.getString(R.string.ViewContact);
                } else if (i == 6) {
                    str = LocaleController.getString(R.string.OpenBackground);
                } else if (i == 7) {
                    str = LocaleController.getString(R.string.OpenTheme);
                } else if (i == 8) {
                    if (this.pollVoted || this.pollClosed) {
                        str = LocaleController.getString(R.string.PollViewResults);
                    } else {
                        str = LocaleController.getString(R.string.PollSubmitVotes);
                    }
                } else if (i == 9 || i == 11) {
                    TLRPC$TL_webPage tLRPC$TL_webPage = (TLRPC$TL_webPage) MessageObject.getMedia(this.currentMessageObject.messageOwner).webpage;
                    if (tLRPC$TL_webPage != null && tLRPC$TL_webPage.url.contains("voicechat=")) {
                        str = LocaleController.getString(R.string.VoipGroupJoinAsSpeaker);
                    } else {
                        str = LocaleController.getString(R.string.VoipGroupJoinAsLinstener);
                    }
                } else if (i == 14) {
                    str = LocaleController.getString(R.string.ViewChatList).toUpperCase();
                } else if (i == 15) {
                    str = LocaleController.getString(R.string.BotWebAppInstantViewOpen).toUpperCase();
                } else if (i == 16) {
                    str = LocaleController.getString(R.string.OpenLink).toUpperCase();
                } else if (i == 17) {
                    str = LocaleController.getString(R.string.ViewStory).toUpperCase();
                } else if (i == 18 || i == 22) {
                    str = LocaleController.getString(R.string.BoostLinkButton);
                } else if (i == 19) {
                    str = LocaleController.getString(R.string.BoostingHowItWork);
                } else if (i == 20) {
                    str = LocaleController.getString(R.string.OpenGift);
                } else if (i == 21) {
                    str = LocaleController.getString(R.string.AppUpdate);
                } else if (i == 23) {
                    str = LocaleController.getString(R.string.OpenStickerSet);
                } else if (i == 24) {
                    str = LocaleController.getString(R.string.OpenEmojiSet);
                } else {
                    str = LocaleController.getString(R.string.InstantView);
                }
            }
            if (this.currentMessageObject.isSponsored() && this.backgroundWidth < (measureText = (int) (Theme.chat_instantViewPaint.measureText(str) + AndroidUtilities.dp(75.0f)))) {
                this.backgroundWidth = measureText;
            }
            int dp = this.backgroundWidth - AndroidUtilities.dp(75.0f);
            CachedStaticLayout cachedStaticLayout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(str, Theme.chat_instantViewPaint, dp, TextUtils.TruncateAt.END), Theme.chat_instantViewPaint, dp + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            this.instantViewLayout = cachedStaticLayout;
            this.instantViewLayoutWidth = cachedStaticLayout.getLineCount() > 0 ? this.instantViewLayout.getLineWidth(0) : 0.0f;
            this.instantViewLayoutLeft = this.instantViewLayout.getLineCount() > 0 ? this.instantViewLayout.getLineLeft(0) : 0.0f;
            this.instantWidth = this.backgroundWidth - AndroidUtilities.dp(this.drawInstantViewType == 8 ? 13.0f : 34.0f);
            int dp2 = this.totalHeight + AndroidUtilities.dp(46.0f);
            this.totalHeight = dp2;
            if (this.currentMessageObject.type == 12) {
                this.totalHeight = dp2 + AndroidUtilities.dp(14.0f);
            }
            if (this.currentMessageObject.isSponsored()) {
                this.totalHeight += AndroidUtilities.dp(2.0f);
            }
            CachedStaticLayout cachedStaticLayout2 = this.instantViewLayout;
            if (cachedStaticLayout2 == null || cachedStaticLayout2.getLineCount() <= 0) {
                return;
            }
            double d = this.instantWidth;
            double ceil = Math.ceil(this.instantViewLayout.getLineWidth(0));
            Double.isNaN(d);
            this.instantTextX = (((int) (d - ceil)) / 2) + (this.drawInstantViewType == 0 ? AndroidUtilities.dp(8.0f) : 0);
            int lineLeft = (int) this.instantViewLayout.getLineLeft(0);
            this.instantTextLeftX = lineLeft;
            this.instantTextX += -lineLeft;
        }
    }

    private void createContactButtons() {
        int i;
        if (Build.VERSION.SDK_INT >= 21) {
            createSelectorDrawable(0);
        }
        if (this.drawContact) {
            boolean z = this.drawContactView;
            if (this.drawContactSendMessage) {
                boolean z2 = (z ? 1 : 0) | true;
                i = (z ? 1 : 0) + 1;
                z = z2;
            } else {
                i = z ? 1 : 0;
            }
            if (this.drawContactAdd) {
                z = (z ? 1 : 0) | true;
                i++;
            }
            if (i == 0) {
                this.contactButtons = null;
                this.drawnContactButtonsFlag = 0;
                return;
            }
            this.totalHeight += AndroidUtilities.dp(60.0f);
            if (z != this.drawnContactButtonsFlag) {
                this.drawnContactButtonsFlag = 0;
                int dp = (this.backgroundWidth - AndroidUtilities.dp(75.0f)) / i;
                float dpf2 = (this.backgroundWidth - AndroidUtilities.dpf2(37.0f)) / i;
                ArrayList<InstantViewButton> arrayList = this.contactButtons;
                if (arrayList == null) {
                    this.contactButtons = new ArrayList<>(i);
                } else {
                    arrayList.clear();
                }
                if (this.drawContactView) {
                    this.drawnContactButtonsFlag = 1 | this.drawnContactButtonsFlag;
                    this.contactButtons.add(createInstantViewButton(5, LocaleController.getString("ViewContact", R.string.ViewContact), dp, dpf2));
                }
                if (this.drawContactSendMessage) {
                    this.drawnContactButtonsFlag |= 2;
                    this.contactButtons.add(createInstantViewButton(30, LocaleController.getString("SharedContactMessage", R.string.SharedContactMessage), dp, dpf2));
                }
                if (this.drawContactAdd) {
                    this.drawnContactButtonsFlag |= 4;
                    this.contactButtons.add(createInstantViewButton(31, LocaleController.getString("SharedContactAdd", R.string.SharedContactAdd), dp, dpf2));
                }
            }
        }
    }

    private InstantViewButton createInstantViewButton(int i, String str, int i2, float f) {
        InstantViewButton instantViewButton = new InstantViewButton();
        instantViewButton.type = i;
        instantViewButton.layout = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(str, Theme.chat_instantViewPaint, i2, TextUtils.TruncateAt.END), Theme.chat_instantViewPaint, i2 + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
        instantViewButton.buttonWidth = f;
        if (instantViewButton.layout.getLineCount() > 0) {
            double d = instantViewButton.buttonWidth;
            double ceil = Math.ceil(instantViewButton.layout.getLineWidth(0));
            Double.isNaN(d);
            instantViewButton.textX = ((float) (d - ceil)) / 2.0f;
            InstantViewButton.access$5024(instantViewButton, (int) instantViewButton.layout.getLineLeft(0));
        }
        return instantViewButton;
    }

    @Override // android.view.View, android.view.ViewParent
    public void requestLayout() {
        if (this.inLayout) {
            return;
        }
        super.requestLayout();
    }

    @Override // android.view.View
    protected void onMeasure(int i, int i2) {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && (messageObject.checkLayout() || this.lastHeight != AndroidUtilities.displaySize.y)) {
            this.inLayout = true;
            MessageObject messageObject2 = this.currentMessageObject;
            this.currentMessageObject = null;
            setMessageObject(messageObject2, this.currentMessagesGroup, this.pinnedBottom, this.pinnedTop);
            this.inLayout = false;
        }
        updateSelectionTextPosition();
        setMeasuredDimension(isWidthAdaptive() ? getBoundsRight() - getBoundsLeft() : View.MeasureSpec.getSize(i), this.totalHeight + this.keyboardHeight);
    }

    public void forceResetMessageObject() {
        MessageObject messageObject = this.messageObjectToSet;
        if (messageObject == null) {
            messageObject = this.currentMessageObject;
        }
        this.currentMessageObject = null;
        setMessageObject(messageObject, this.currentMessagesGroup, this.pinnedBottom, this.pinnedTop);
    }

    private int getGroupPhotosWidth() {
        int parentWidth = getParentWidth();
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && messageObject.preview) {
            parentWidth = this.parentWidth;
        }
        if (AndroidUtilities.isInMultiwindow || !AndroidUtilities.isTablet()) {
            return parentWidth;
        }
        if (!AndroidUtilities.isSmallTablet() || getResources().getConfiguration().orientation == 2) {
            int i = (parentWidth / 100) * 35;
            if (i < AndroidUtilities.dp(320.0f)) {
                i = AndroidUtilities.dp(320.0f);
            }
            return parentWidth - i;
        }
        return parentWidth;
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public int getExtraTextX() {
        int i = SharedConfig.bubbleRadius;
        if (i >= 15) {
            return AndroidUtilities.dp(2.0f);
        }
        if (i >= 11) {
            return AndroidUtilities.dp(1.0f);
        }
        return 0;
    }

    private int getExtraTimeX() {
        int i;
        if (!this.currentMessageObject.isOutOwner() && ((!this.mediaBackground || this.captionLayout != null) && (i = SharedConfig.bubbleRadius) > 11)) {
            return AndroidUtilities.dp((i - 11) / 1.5f);
        }
        if (!this.currentMessageObject.isOutOwner() && this.isPlayingRound && this.isAvatarVisible && this.currentMessageObject.type == 5) {
            return (int) ((AndroidUtilities.roundPlayingMessageSize - AndroidUtilities.roundMessageSize) * 0.7f);
        }
        return 0;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    @Override // android.view.ViewGroup, android.view.View
    @SuppressLint({"DrawAllocation"})
    public void onLayout(boolean z, int i, int i2, int i3, int i4) {
        int i5;
        int i6;
        int dp;
        int dp2;
        MessageObject messageObject;
        int i7;
        int dp3;
        int i8;
        int i9;
        int dp4;
        int dp5;
        int dp6;
        int i10;
        int dp7;
        int i11;
        int i12;
        int dp8;
        int dp9;
        if (this.currentMessageObject == null) {
            return;
        }
        int measuredHeight = getMeasuredHeight() + (getMeasuredWidth() << 16);
        if (this.lastSize != measuredHeight || !this.wasLayout) {
            this.layoutWidth = getMeasuredWidth();
            this.layoutHeight = getMeasuredHeight() - this.substractBackgroundHeight;
            if (this.timeTextWidth < 0) {
                this.timeTextWidth = AndroidUtilities.dp(10.0f);
            }
            if (this.currentTimeString != null) {
                this.timeLayout = new CachedStaticLayout(new StaticLayout(this.currentTimeString, Theme.chat_timePaint, this.timeTextWidth + AndroidUtilities.dp(100.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            } else {
                this.timeLayout = null;
            }
            if (this.mediaBackground) {
                if (this.currentMessageObject.isOutOwner()) {
                    this.timeX = (this.layoutWidth - this.timeWidth) - AndroidUtilities.dp(42.0f);
                } else {
                    this.timeX = (this.backgroundWidth - AndroidUtilities.dp(4.0f)) - this.timeWidth;
                    if (this.currentMessageObject.isAnyKindOfSticker()) {
                        this.timeX = Math.max(AndroidUtilities.dp(26.0f), this.timeX);
                    }
                    if (this.isAvatarVisible && !isWidthAdaptive()) {
                        this.timeX += AndroidUtilities.dp(48.0f);
                    }
                    MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
                    if (groupedMessagePosition != null && (i5 = groupedMessagePosition.leftSpanOffset) != 0) {
                        this.timeX += (int) Math.ceil((i5 / 1000.0f) * getGroupPhotosWidth());
                    }
                    if (this.captionLayout != null && this.currentPosition != null) {
                        this.timeX += AndroidUtilities.dp(4.0f);
                    }
                }
                if (SharedConfig.bubbleRadius >= 10 && this.captionLayout == null && (i6 = this.documentAttachType) != 7 && i6 != 6) {
                    this.timeX -= AndroidUtilities.dp(2.0f);
                }
            } else if (this.currentMessageObject.isOutOwner()) {
                this.timeX = (this.layoutWidth - this.timeWidth) - AndroidUtilities.dp(38.5f);
            } else {
                this.timeX = (this.backgroundWidth - AndroidUtilities.dp(9.0f)) - this.timeWidth;
                if (this.currentMessageObject.isAnyKindOfSticker()) {
                    this.timeX = Math.max(0, this.timeX);
                }
                if (this.isAvatarVisible && !isWidthAdaptive()) {
                    this.timeX += AndroidUtilities.dp(48.0f);
                }
                if (shouldDrawTimeOnMedia()) {
                    this.timeX -= AndroidUtilities.dp(7.0f);
                }
            }
            this.timeX -= getExtraTimeX();
            if ((this.currentMessageObject.messageOwner.flags & 1024) != 0) {
                this.viewsLayout = new CachedStaticLayout(new StaticLayout(this.currentViewsString, Theme.chat_timePaint, this.viewsTextWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            } else {
                this.viewsLayout = null;
            }
            if (this.currentRepliesString != null && !this.currentMessageObject.scheduled) {
                this.repliesLayout = new CachedStaticLayout(new StaticLayout(this.currentRepliesString, Theme.chat_timePaint, this.repliesTextWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            } else {
                this.repliesLayout = null;
            }
            if (this.isAvatarVisible) {
                this.avatarImage.setImageCoords(AndroidUtilities.dp(this.currentMessageObject.isRepostPreview ? 15.0f : 6.0f), this.avatarImage.getImageY(), AndroidUtilities.dp(this.currentMessageObject.isRepostPreview ? 36.0f : 42.0f), AndroidUtilities.dp(this.currentMessageObject.isRepostPreview ? 36.0f : 42.0f));
            }
            if (this.currentMessageObject.type == 20 && this.currentUnlockString != null) {
                this.unlockLayout = new CachedStaticLayout(new StaticLayout(this.currentUnlockString, Theme.chat_unlockExtendedMediaTextPaint, this.unlockTextWidth, Layout.Alignment.ALIGN_CENTER, 1.0f, 0.0f, false));
                int i13 = ((TLRPC$TL_messageExtendedMediaPreview) this.currentMessageObject.messageOwner.media.extended_media).video_duration;
                if (i13 != 0) {
                    String formatDuration = AndroidUtilities.formatDuration(i13, false);
                    this.durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(formatDuration));
                    this.videoInfoLayout = new CachedStaticLayout(new StaticLayout(formatDuration, Theme.chat_durationPaint, this.durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                } else {
                    this.videoInfoLayout = null;
                }
            } else {
                this.unlockLayout = null;
            }
            this.wasLayout = true;
        }
        this.lastSize = measuredHeight;
        if (this.currentMessageObject.type == 0) {
            this.textY = AndroidUtilities.dp(10.0f) + this.namesOffset;
            if (this.currentMessageObject.isSponsored()) {
                this.linkPreviewY = this.textY + AndroidUtilities.dp(14.0f);
            } else if (this.linkPreviewAbove) {
                this.linkPreviewY = this.textY + AndroidUtilities.dp(10.0f);
                this.textY += this.linkPreviewHeight + AndroidUtilities.dp(13.0f);
                if (this.drawInstantView && !this.hasInvoicePreview && !this.currentMessageObject.isGiveawayOrGiveawayResults()) {
                    this.textY += AndroidUtilities.dp(44.0f);
                }
            } else {
                this.linkPreviewY = this.textY + this.currentMessageObject.textHeight + AndroidUtilities.dp(10.0f);
            }
        }
        if (this.isRoundVideo) {
            updatePlayingMessageProgress();
        }
        int i14 = this.documentAttachType;
        if (i14 == 3 || i14 == 7) {
            if (this.currentMessageObject.isOutOwner()) {
                this.seekBarX = (this.layoutWidth - this.backgroundWidth) + AndroidUtilities.dp(57.0f);
                this.buttonX = (this.layoutWidth - this.backgroundWidth) + AndroidUtilities.dp(14.0f);
                this.timeAudioX = (this.layoutWidth - this.backgroundWidth) + AndroidUtilities.dp(67.0f);
            } else if (needDrawAvatar()) {
                this.seekBarX = AndroidUtilities.dp(114.0f);
                this.buttonX = AndroidUtilities.dp(71.0f);
                this.timeAudioX = AndroidUtilities.dp(124.0f);
            } else {
                this.seekBarX = AndroidUtilities.dp(66.0f);
                this.buttonX = AndroidUtilities.dp(23.0f);
                this.timeAudioX = AndroidUtilities.dp(76.0f);
            }
            if (this.hasLinkPreview) {
                this.seekBarX += AndroidUtilities.dp(10.0f);
                this.buttonX += AndroidUtilities.dp(10.0f);
                this.timeAudioX += AndroidUtilities.dp(10.0f);
            }
            updateSeekBarWaveformWidth(null);
            this.seekBarY = AndroidUtilities.dp(13.0f) + this.namesOffset + this.mediaOffsetY;
            int dp10 = AndroidUtilities.dp(13.0f) + this.namesOffset + this.mediaOffsetY;
            this.buttonY = dp10;
            RadialProgress2 radialProgress2 = this.radialProgress;
            int i15 = this.buttonX;
            radialProgress2.setProgressRect(i15, dp10, AndroidUtilities.dp(44.0f) + i15, this.buttonY + AndroidUtilities.dp(44.0f));
            updatePlayingMessageProgress();
            if (this.documentAttachType == 7) {
                MessageObject messageObject2 = this.currentMessageObject;
                if (messageObject2.type == 0 && (this.hasLinkPreview || this.hasGamePreview || this.hasInvoicePreview)) {
                    if (this.hasGamePreview) {
                        i7 = this.unmovedTextX - AndroidUtilities.dp(10.0f);
                    } else {
                        if (this.hasInvoicePreview) {
                            i9 = this.unmovedTextX;
                            dp4 = AndroidUtilities.dp(1.0f);
                        } else {
                            i9 = this.unmovedTextX;
                            dp4 = AndroidUtilities.dp(1.0f);
                        }
                        i7 = i9 + dp4;
                    }
                    if (this.isSmallImage) {
                        dp = i7 + this.backgroundWidth;
                        dp2 = AndroidUtilities.dp(81.0f);
                        dp -= dp2;
                    } else {
                        dp3 = this.hasInvoicePreview ? -AndroidUtilities.dp(6.3f) : AndroidUtilities.dp(10.0f);
                        dp = i7 + dp3;
                    }
                } else {
                    if (messageObject2.isOutOwner()) {
                        if (this.mediaBackground) {
                            dp = this.layoutWidth - this.backgroundWidth;
                            dp2 = AndroidUtilities.dp(3.0f);
                        } else {
                            i7 = this.layoutWidth - this.backgroundWidth;
                            dp3 = AndroidUtilities.dp(6.0f);
                            dp = i7 + dp3;
                        }
                    } else {
                        if ((this.isChat || ((messageObject = this.currentMessageObject) != null && messageObject.forceAvatar)) && this.isAvatarVisible && (!this.isPlayingRound || this.currentMessageObject.isVoiceTranscriptionOpen())) {
                            dp = AndroidUtilities.dp(63.0f);
                        } else {
                            dp = AndroidUtilities.dp(15.0f);
                        }
                        MessageObject.GroupedMessagePosition groupedMessagePosition2 = this.currentPosition;
                        if (groupedMessagePosition2 != null && !groupedMessagePosition2.edge) {
                            dp2 = AndroidUtilities.dp(10.0f);
                        }
                    }
                    dp -= dp2;
                }
                MessageObject.GroupedMessagePosition groupedMessagePosition3 = this.currentPosition;
                if (groupedMessagePosition3 != null) {
                    if ((groupedMessagePosition3.flags & 1) == 0) {
                        dp -= AndroidUtilities.dp(2.0f);
                    }
                    if (this.currentPosition.leftSpanOffset != 0) {
                        dp += (int) Math.ceil((i8 / 1000.0f) * getGroupPhotosWidth());
                    }
                }
                if (this.currentMessageObject.type != 0) {
                    dp -= AndroidUtilities.dp(2.0f);
                }
                if (this.currentMessageObject.isVoiceTranscriptionOpen()) {
                    dp += AndroidUtilities.dp(10.0f);
                }
                TransitionParams transitionParams = this.transitionParams;
                if (!transitionParams.imageChangeBoundsTransition || transitionParams.updatePhotoImageX) {
                    transitionParams.updatePhotoImageX = false;
                    ImageReceiver imageReceiver = this.photoImage;
                    imageReceiver.setImageCoords(dp, this.currentMessageObject.type != 5 ? this.linkPreviewY : imageReceiver.getImageY(), this.photoImage.getImageWidth(), this.photoImage.getImageHeight());
                }
            }
        } else if (i14 == 5) {
            if (this.currentMessageObject.isOutOwner()) {
                this.seekBarX = (this.layoutWidth - this.backgroundWidth) + AndroidUtilities.dp(56.0f);
                this.buttonX = (this.layoutWidth - this.backgroundWidth) + AndroidUtilities.dp(14.0f);
                this.timeAudioX = (this.layoutWidth - this.backgroundWidth) + AndroidUtilities.dp(67.0f);
            } else if (needDrawAvatar()) {
                this.seekBarX = AndroidUtilities.dp(113.0f);
                this.buttonX = AndroidUtilities.dp(71.0f);
                this.timeAudioX = AndroidUtilities.dp(124.0f);
            } else {
                this.seekBarX = AndroidUtilities.dp(65.0f);
                this.buttonX = AndroidUtilities.dp(23.0f);
                this.timeAudioX = AndroidUtilities.dp(76.0f);
            }
            if (this.hasLinkPreview) {
                this.seekBarX += AndroidUtilities.dp(10.0f);
                this.buttonX += AndroidUtilities.dp(10.0f);
                this.timeAudioX += AndroidUtilities.dp(10.0f);
            }
            updateSeekBarWaveformWidth(null);
            this.seekBarY = AndroidUtilities.dp(29.0f) + this.namesOffset + this.mediaOffsetY;
            int dp11 = AndroidUtilities.dp(13.0f) + this.namesOffset + this.mediaOffsetY;
            this.buttonY = dp11;
            RadialProgress2 radialProgress22 = this.radialProgress;
            int i16 = this.buttonX;
            radialProgress22.setProgressRect(i16, dp11, AndroidUtilities.dp(44.0f) + i16, this.buttonY + AndroidUtilities.dp(44.0f));
            updatePlayingMessageProgress();
        } else if (i14 == 1 && !this.drawPhotoImage) {
            if (this.currentMessageObject.isOutOwner()) {
                this.buttonX = (this.layoutWidth - this.backgroundWidth) + AndroidUtilities.dp(14.0f);
            } else if (needDrawAvatar()) {
                this.buttonX = AndroidUtilities.dp(71.0f);
            } else {
                this.buttonX = AndroidUtilities.dp(23.0f);
            }
            if (this.hasLinkPreview) {
                this.buttonX += AndroidUtilities.dp(10.0f);
            }
            int dp12 = AndroidUtilities.dp(13.0f) + this.namesOffset + this.mediaOffsetY;
            this.buttonY = dp12;
            RadialProgress2 radialProgress23 = this.radialProgress;
            int i17 = this.buttonX;
            radialProgress23.setProgressRect(i17, dp12, AndroidUtilities.dp(44.0f) + i17, this.buttonY + AndroidUtilities.dp(44.0f));
            this.photoImage.setImageCoords(this.buttonX - AndroidUtilities.dp(10.0f), this.buttonY - AndroidUtilities.dp(10.0f), this.photoImage.getImageWidth(), this.photoImage.getImageHeight());
        } else {
            MessageObject messageObject3 = this.currentMessageObject;
            int i18 = messageObject3.type;
            if (i18 == 12) {
                if (messageObject3.isOutOwner()) {
                    dp9 = (this.layoutWidth - this.backgroundWidth) + AndroidUtilities.dp(26.0f);
                } else if (needDrawAvatar()) {
                    dp9 = AndroidUtilities.dp(84.0f);
                } else {
                    dp9 = AndroidUtilities.dp(35.0f);
                }
                this.photoImage.setImageCoords(dp9, AndroidUtilities.dp(24.0f) + this.namesOffset, AndroidUtilities.dp(46.0f), AndroidUtilities.dp(46.0f));
                return;
            }
            if (i18 == 0 && (this.hasLinkPreview || this.hasGamePreview || this.hasInvoicePreview)) {
                if (this.hasGamePreview) {
                    i10 = this.unmovedTextX - AndroidUtilities.dp(10.0f);
                } else {
                    if (this.hasInvoicePreview) {
                        i12 = this.unmovedTextX;
                        dp8 = AndroidUtilities.dp(1.0f);
                    } else {
                        i12 = this.unmovedTextX;
                        dp8 = AndroidUtilities.dp(1.0f);
                    }
                    i10 = i12 + dp8;
                }
                if (this.isSmallImage) {
                    dp5 = i10 + this.backgroundWidth;
                    dp6 = AndroidUtilities.dp(81.0f);
                    dp5 -= dp6;
                } else {
                    dp7 = this.hasInvoicePreview ? -AndroidUtilities.dp(6.3f) : AndroidUtilities.dp(10.0f);
                    dp5 = i10 + dp7;
                }
            } else {
                if (messageObject3.isOutOwner()) {
                    if (this.mediaBackground) {
                        dp5 = this.layoutWidth - this.backgroundWidth;
                        dp6 = AndroidUtilities.dp(3.0f);
                    } else {
                        i10 = this.layoutWidth - this.backgroundWidth;
                        dp7 = AndroidUtilities.dp(6.0f);
                        dp5 = i10 + dp7;
                    }
                } else {
                    if ((this.isChat || this.currentMessageObject.isRepostPreview) && this.isAvatarVisible && !this.isPlayingRound) {
                        dp5 = AndroidUtilities.dp(63.0f);
                    } else {
                        dp5 = AndroidUtilities.dp(15.0f);
                    }
                    MessageObject.GroupedMessagePosition groupedMessagePosition4 = this.currentPosition;
                    if (groupedMessagePosition4 != null && !groupedMessagePosition4.edge) {
                        dp6 = AndroidUtilities.dp(10.0f);
                    }
                }
                dp5 -= dp6;
            }
            MessageObject.GroupedMessagePosition groupedMessagePosition5 = this.currentPosition;
            if (groupedMessagePosition5 != null) {
                if ((groupedMessagePosition5.flags & 1) == 0) {
                    dp5 -= AndroidUtilities.dp(2.0f);
                }
                if (this.currentPosition.leftSpanOffset != 0) {
                    dp5 += (int) Math.ceil((i11 / 1000.0f) * getGroupPhotosWidth());
                }
            }
            if (this.currentMessageObject.type != 0) {
                dp5 -= AndroidUtilities.dp(2.0f);
            }
            if (this.drawInstantViewType == 17) {
                dp5 = (int) (dp5 + AndroidUtilities.dp(10.0f) + ((this.instantWidth - this.photoImage.getImageWidth()) / 2.0f));
            }
            TransitionParams transitionParams2 = this.transitionParams;
            if (!transitionParams2.imageChangeBoundsTransition || transitionParams2.updatePhotoImageX) {
                transitionParams2.updatePhotoImageX = false;
                ImageReceiver imageReceiver2 = this.photoImage;
                imageReceiver2.setImageCoords(dp5, imageReceiver2.getImageY(), this.photoImage.getImageWidth(), this.photoImage.getImageHeight());
            }
            this.buttonX = (int) (dp5 + ((this.photoImage.getImageWidth() - AndroidUtilities.dp(48.0f)) / 2.0f));
            int imageY = (int) (this.photoImage.getImageY() + ((this.photoImage.getImageHeight() - AndroidUtilities.dp(48.0f)) / 2.0f));
            this.buttonY = imageY;
            RadialProgress2 radialProgress24 = this.radialProgress;
            int i19 = this.buttonX;
            radialProgress24.setProgressRect(i19, imageY, AndroidUtilities.dp(48.0f) + i19, this.buttonY + AndroidUtilities.dp(48.0f));
            this.deleteProgressRect.set(this.buttonX + AndroidUtilities.dp(5.0f), this.buttonY + AndroidUtilities.dp(5.0f), this.buttonX + AndroidUtilities.dp(43.0f), this.buttonY + AndroidUtilities.dp(43.0f));
            int i20 = this.documentAttachType;
            if (i20 == 4 || i20 == 2) {
                this.videoButtonX = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(8.0f));
                int imageY2 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(8.0f));
                this.videoButtonY = imageY2;
                RadialProgress2 radialProgress25 = this.videoRadialProgress;
                int i21 = this.videoButtonX;
                radialProgress25.setProgressRect(i21, imageY2, AndroidUtilities.dp(24.0f) + i21, this.videoButtonY + AndroidUtilities.dp(24.0f));
            }
        }
    }

    public boolean needDelayRoundProgressDraw() {
        MessageObject messageObject;
        int i = this.documentAttachType;
        return (i == 7 || i == 4) && (messageObject = this.currentMessageObject) != null && messageObject.type != 5 && MediaController.getInstance().isPlayingMessage(this.currentMessageObject);
    }

    /* JADX WARN: Removed duplicated region for block: B:101:0x02df  */
    /* JADX WARN: Removed duplicated region for block: B:103:0x02f7  */
    /* JADX WARN: Removed duplicated region for block: B:32:0x0069  */
    /* JADX WARN: Removed duplicated region for block: B:39:0x007f  */
    /* JADX WARN: Removed duplicated region for block: B:46:0x0094  */
    /* JADX WARN: Removed duplicated region for block: B:47:0x009d  */
    /* JADX WARN: Removed duplicated region for block: B:50:0x00a6  */
    /* JADX WARN: Removed duplicated region for block: B:57:0x00cb  */
    /* JADX WARN: Removed duplicated region for block: B:60:0x0128  */
    /* JADX WARN: Removed duplicated region for block: B:68:0x0145  */
    /* JADX WARN: Removed duplicated region for block: B:69:0x014c  */
    /* JADX WARN: Removed duplicated region for block: B:73:0x015c  */
    /* JADX WARN: Removed duplicated region for block: B:78:0x01a8  */
    /* JADX WARN: Removed duplicated region for block: B:79:0x01ad  */
    /* JADX WARN: Removed duplicated region for block: B:82:0x01b3  */
    /* JADX WARN: Removed duplicated region for block: B:87:0x0277  */
    /* JADX WARN: Removed duplicated region for block: B:90:0x0280  */
    /* JADX WARN: Removed duplicated region for block: B:96:0x0298  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void drawRoundProgress(Canvas canvas) {
        float interpolation;
        TransitionParams transitionParams;
        int i;
        VideoForwardDrawable videoForwardDrawable;
        int i2;
        float f;
        int i3;
        float dp = this.isPlayingRound ? AndroidUtilities.dp(4.0f) : 0.0f;
        boolean z = false;
        boolean z2 = MediaController.getInstance().isPlayingMessage(this.currentMessageObject) && MediaController.getInstance().isMessagePaused();
        if (z2 && this.roundSeekbarTouched == 1) {
            z = true;
        }
        if (z2) {
            float f2 = this.roundToPauseProgress;
            if (f2 != 1.0f) {
                float f3 = f2 + 0.07272727f;
                this.roundToPauseProgress = f3;
                if (f3 > 1.0f) {
                    this.roundToPauseProgress = 1.0f;
                } else {
                    invalidate();
                }
                if (z) {
                    float f4 = this.roundToPauseProgress2;
                    if (f4 != 1.0f) {
                        float f5 = f4 + 0.10666667f;
                        this.roundToPauseProgress2 = f5;
                        if (f5 > 1.0f) {
                            this.roundToPauseProgress2 = 1.0f;
                        } else {
                            invalidate();
                        }
                        interpolation = z2 ? AndroidUtilities.overshootInterpolator.getInterpolation(this.roundToPauseProgress) : this.roundToPauseProgress;
                        transitionParams = this.transitionParams;
                        if (transitionParams.animatePlayingRound) {
                            dp = (this.isPlayingRound ? transitionParams.animateChangeProgress : 1.0f - transitionParams.animateChangeProgress) * AndroidUtilities.dp(4.0f);
                        }
                        float dp2 = dp + (AndroidUtilities.dp(16.0f) * interpolation);
                        if (this.roundToPauseProgress > 0.0f) {
                            Theme.getRadialSeekbarShadowDrawable().draw(canvas, this.photoImage.getCenterX(), this.photoImage.getCenterY(), this.photoImage.getImageWidth() / 2.0f, this.roundToPauseProgress);
                        }
                        this.rect.set(this.photoImage.getImageX() + AndroidUtilities.dpf2(1.5f) + dp2, this.photoImage.getImageY() + AndroidUtilities.dpf2(1.5f) + dp2, (this.photoImage.getImageX2() - AndroidUtilities.dpf2(1.5f)) - dp2, (this.photoImage.getImageY2() - AndroidUtilities.dpf2(1.5f)) - dp2);
                        if (this.roundProgressAlpha == 1.0f || (!this.hasLinkPreview && getVideoTranscriptionProgress() > 0.0f)) {
                            int alpha = Theme.chat_radialProgressPaint.getAlpha();
                            Theme.chat_radialProgressPaint.setAlpha((int) (this.roundProgressAlpha * (!this.hasLinkPreview ? 1.0f - getVideoTranscriptionProgress() : 1.0f) * alpha));
                            i = alpha;
                        } else {
                            i = -1;
                        }
                        videoForwardDrawable = this.videoForwardDrawable;
                        if (videoForwardDrawable != null && videoForwardDrawable.isAnimating()) {
                            this.videoForwardDrawable.setBounds((int) this.photoImage.getImageX(), (int) this.photoImage.getImageY(), (int) (this.photoImage.getImageX() + this.photoImage.getImageWidth()), (int) (this.photoImage.getImageY() + this.photoImage.getImageHeight()));
                            this.videoForwardDrawable.draw(canvas);
                        }
                        int alpha2 = Theme.chat_radialProgressPaint.getAlpha();
                        float strokeWidth = Theme.chat_radialProgressPaint.getStrokeWidth();
                        float f6 = this.roundProgressAlpha == 1.0f ? this.currentMessageObject.audioProgress : this.lastDrawingAudioProgress;
                        if (interpolation > 0.0f) {
                            float width = this.rect.width() / 2.0f;
                            Theme.chat_radialProgressPaint.setStrokeWidth((0.5f * strokeWidth * this.roundToPauseProgress) + strokeWidth);
                            Theme.chat_radialProgressPaint.setAlpha((int) (alpha2 * this.roundToPauseProgress * 0.3f));
                            canvas.drawCircle(this.rect.centerX(), this.rect.centerY(), width, Theme.chat_radialProgressPaint);
                            Theme.chat_radialProgressPaint.setAlpha(alpha2);
                            double centerX = this.rect.centerX();
                            double d = ((-360.0f) * f6) + 180.0f;
                            double sin = Math.sin(Math.toRadians(d));
                            i2 = i;
                            double d2 = width;
                            Double.isNaN(d2);
                            Double.isNaN(centerX);
                            this.seekbarRoundX = (float) (centerX + (sin * d2));
                            double centerY = this.rect.centerY();
                            double cos = Math.cos(Math.toRadians(d));
                            Double.isNaN(d2);
                            Double.isNaN(centerY);
                            this.seekbarRoundY = (float) (centerY + (cos * d2));
                            Theme.chat_radialProgressPausedSeekbarPaint.setColor(-1);
                            Theme.chat_radialProgressPausedSeekbarPaint.setAlpha((int) (Math.min(1.0f, interpolation) * 255.0f * (!this.hasLinkPreview ? 1.0f - getVideoTranscriptionProgress() : 1.0f)));
                            canvas.drawCircle(this.seekbarRoundX, this.seekbarRoundY, AndroidUtilities.dp(3.0f) + (AndroidUtilities.dp(5.0f) * interpolation) + (AndroidUtilities.dp(3.0f) * this.roundToPauseProgress2), Theme.chat_radialProgressPausedSeekbarPaint);
                        } else {
                            i2 = i;
                        }
                        f = this.roundSeekbarOutAlpha;
                        if (f != 0.0f) {
                            float f7 = f - 0.10666667f;
                            this.roundSeekbarOutAlpha = f7;
                            if (f7 < 0.0f) {
                                this.roundSeekbarOutAlpha = 0.0f;
                            } else {
                                invalidate();
                            }
                        }
                        if (this.roundSeekbarOutAlpha != 0.0f) {
                            int i4 = i2;
                            i3 = i4 == -1 ? Theme.chat_radialProgressPaint.getAlpha() : i4;
                            float f8 = alpha2;
                            Theme.chat_radialProgressPaint.setAlpha((int) ((1.0f - this.roundSeekbarOutAlpha) * f8));
                            canvas.drawArc(this.rect, -90.0f, f6 * 360.0f, false, Theme.chat_radialProgressPaint);
                            Theme.chat_radialProgressPaint.setAlpha((int) (f8 * this.roundSeekbarOutAlpha));
                            canvas.drawArc(this.rect, -90.0f, this.roundSeekbarOutProgress * 360.0f, false, Theme.chat_radialProgressPaint);
                        } else {
                            canvas.drawArc(this.rect, -90.0f, f6 * 360.0f, false, Theme.chat_radialProgressPaint);
                            i3 = i2;
                        }
                        if (i3 != -1) {
                            Theme.chat_radialProgressPaint.setAlpha(i3);
                        }
                        Theme.chat_radialProgressPaint.setStrokeWidth(strokeWidth);
                    }
                }
                if (!z) {
                    float f9 = this.roundToPauseProgress2;
                    if (f9 != 0.0f) {
                        float f10 = f9 - 0.10666667f;
                        this.roundToPauseProgress2 = f10;
                        if (f10 < 0.0f) {
                            this.roundToPauseProgress2 = 0.0f;
                        } else {
                            invalidate();
                        }
                    }
                }
                interpolation = z2 ? AndroidUtilities.overshootInterpolator.getInterpolation(this.roundToPauseProgress) : this.roundToPauseProgress;
                transitionParams = this.transitionParams;
                if (transitionParams.animatePlayingRound) {
                }
                float dp22 = dp + (AndroidUtilities.dp(16.0f) * interpolation);
                if (this.roundToPauseProgress > 0.0f) {
                }
                this.rect.set(this.photoImage.getImageX() + AndroidUtilities.dpf2(1.5f) + dp22, this.photoImage.getImageY() + AndroidUtilities.dpf2(1.5f) + dp22, (this.photoImage.getImageX2() - AndroidUtilities.dpf2(1.5f)) - dp22, (this.photoImage.getImageY2() - AndroidUtilities.dpf2(1.5f)) - dp22);
                if (this.roundProgressAlpha == 1.0f) {
                }
                int alpha3 = Theme.chat_radialProgressPaint.getAlpha();
                Theme.chat_radialProgressPaint.setAlpha((int) (this.roundProgressAlpha * (!this.hasLinkPreview ? 1.0f - getVideoTranscriptionProgress() : 1.0f) * alpha3));
                i = alpha3;
                videoForwardDrawable = this.videoForwardDrawable;
                if (videoForwardDrawable != null) {
                    this.videoForwardDrawable.setBounds((int) this.photoImage.getImageX(), (int) this.photoImage.getImageY(), (int) (this.photoImage.getImageX() + this.photoImage.getImageWidth()), (int) (this.photoImage.getImageY() + this.photoImage.getImageHeight()));
                    this.videoForwardDrawable.draw(canvas);
                }
                int alpha22 = Theme.chat_radialProgressPaint.getAlpha();
                float strokeWidth2 = Theme.chat_radialProgressPaint.getStrokeWidth();
                if (this.roundProgressAlpha == 1.0f) {
                }
                if (interpolation > 0.0f) {
                }
                f = this.roundSeekbarOutAlpha;
                if (f != 0.0f) {
                }
                if (this.roundSeekbarOutAlpha != 0.0f) {
                }
                if (i3 != -1) {
                }
                Theme.chat_radialProgressPaint.setStrokeWidth(strokeWidth2);
            }
        }
        if (!z2) {
            float f11 = this.roundToPauseProgress;
            if (f11 != 0.0f) {
                float f12 = f11 - 0.10666667f;
                this.roundToPauseProgress = f12;
                if (f12 < 0.0f) {
                    this.roundToPauseProgress = 0.0f;
                } else {
                    invalidate();
                }
            }
        }
        if (z) {
        }
        if (!z) {
        }
        interpolation = z2 ? AndroidUtilities.overshootInterpolator.getInterpolation(this.roundToPauseProgress) : this.roundToPauseProgress;
        transitionParams = this.transitionParams;
        if (transitionParams.animatePlayingRound) {
        }
        float dp222 = dp + (AndroidUtilities.dp(16.0f) * interpolation);
        if (this.roundToPauseProgress > 0.0f) {
        }
        this.rect.set(this.photoImage.getImageX() + AndroidUtilities.dpf2(1.5f) + dp222, this.photoImage.getImageY() + AndroidUtilities.dpf2(1.5f) + dp222, (this.photoImage.getImageX2() - AndroidUtilities.dpf2(1.5f)) - dp222, (this.photoImage.getImageY2() - AndroidUtilities.dpf2(1.5f)) - dp222);
        if (this.roundProgressAlpha == 1.0f) {
        }
        int alpha32 = Theme.chat_radialProgressPaint.getAlpha();
        Theme.chat_radialProgressPaint.setAlpha((int) (this.roundProgressAlpha * (!this.hasLinkPreview ? 1.0f - getVideoTranscriptionProgress() : 1.0f) * alpha32));
        i = alpha32;
        videoForwardDrawable = this.videoForwardDrawable;
        if (videoForwardDrawable != null) {
        }
        int alpha222 = Theme.chat_radialProgressPaint.getAlpha();
        float strokeWidth22 = Theme.chat_radialProgressPaint.getStrokeWidth();
        if (this.roundProgressAlpha == 1.0f) {
        }
        if (interpolation > 0.0f) {
        }
        f = this.roundSeekbarOutAlpha;
        if (f != 0.0f) {
        }
        if (this.roundSeekbarOutAlpha != 0.0f) {
        }
        if (i3 != -1) {
        }
        Theme.chat_radialProgressPaint.setStrokeWidth(strokeWidth22);
    }

    /* JADX WARN: Removed duplicated region for block: B:42:0x00b8  */
    /* JADX WARN: Removed duplicated region for block: B:62:? A[RETURN, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void updatePollAnimations(long j) {
        if (this.pollVoteInProgress) {
            float f = this.voteRadOffset + (((float) (360 * j)) / 2000.0f);
            this.voteRadOffset = f;
            this.voteRadOffset = f - (((int) (f / 360.0f)) * 360);
            float f2 = this.voteCurrentProgressTime + ((float) j);
            this.voteCurrentProgressTime = f2;
            if (f2 >= 500.0f) {
                this.voteCurrentProgressTime = 500.0f;
            }
            if (this.voteRisingCircleLength) {
                this.voteCurrentCircleLength = (AndroidUtilities.accelerateInterpolator.getInterpolation(this.voteCurrentProgressTime / 500.0f) * 266.0f) + 4.0f;
            } else {
                this.voteCurrentCircleLength = 4.0f - ((this.firstCircleLength ? 360 : 270) * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(this.voteCurrentProgressTime / 500.0f)));
            }
            if (this.voteCurrentProgressTime == 500.0f) {
                boolean z = this.voteRisingCircleLength;
                if (z) {
                    this.voteRadOffset += 270.0f;
                    this.voteCurrentCircleLength = -266.0f;
                }
                this.voteRisingCircleLength = !z;
                if (this.firstCircleLength) {
                    this.firstCircleLength = false;
                }
                this.voteCurrentProgressTime = 0.0f;
            }
            invalidate();
        }
        boolean z2 = this.hintButtonVisible;
        if (z2) {
            float f3 = this.hintButtonProgress;
            if (f3 < 1.0f) {
                float f4 = f3 + (((float) j) / 180.0f);
                this.hintButtonProgress = f4;
                if (f4 > 1.0f) {
                    this.hintButtonProgress = 1.0f;
                }
                invalidate();
                if (this.animatePollAnswer) {
                    return;
                }
                float f5 = this.pollAnimationProgressTime + ((float) j);
                this.pollAnimationProgressTime = f5;
                if (f5 >= 300.0f) {
                    this.pollAnimationProgressTime = 300.0f;
                }
                float interpolation = AndroidUtilities.decelerateInterpolator.getInterpolation(this.pollAnimationProgressTime / 300.0f);
                this.pollAnimationProgress = interpolation;
                if (interpolation >= 1.0f) {
                    this.pollAnimationProgress = 1.0f;
                    this.animatePollAnswer = false;
                    this.animatePollAnswerAlpha = false;
                    this.pollVoteInProgress = false;
                    if (this.pollUnvoteInProgress && this.animatePollAvatars) {
                        int i = 0;
                        while (true) {
                            ImageReceiver[] imageReceiverArr = this.pollAvatarImages;
                            if (i >= imageReceiverArr.length) {
                                break;
                            }
                            imageReceiverArr[i].setImageBitmap((Drawable) null);
                            this.pollAvatarImagesVisible[i] = false;
                            i++;
                        }
                    }
                    this.pollUnvoteInProgress = false;
                    int size = this.pollButtons.size();
                    for (int i2 = 0; i2 < size; i2++) {
                        this.pollButtons.get(i2).prevChosen = false;
                    }
                }
                invalidate();
                return;
            }
        }
        if (!z2) {
            float f6 = this.hintButtonProgress;
            if (f6 > 0.0f) {
                float f7 = f6 - (((float) j) / 180.0f);
                this.hintButtonProgress = f7;
                if (f7 < 0.0f) {
                    this.hintButtonProgress = 0.0f;
                }
                invalidate();
            }
        }
        if (this.animatePollAnswer) {
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:225:0x04a3  */
    /* JADX WARN: Removed duplicated region for block: B:438:0x08a1  */
    /* JADX WARN: Removed duplicated region for block: B:443:0x08f4  */
    /* JADX WARN: Removed duplicated region for block: B:446:0x08fe  */
    /* JADX WARN: Removed duplicated region for block: B:456:0x0999  */
    /* JADX WARN: Removed duplicated region for block: B:725:0x0fe4  */
    /* JADX WARN: Removed duplicated region for block: B:726:0x0fe7  */
    /* JADX WARN: Removed duplicated region for block: B:729:0x1003  */
    /* JADX WARN: Removed duplicated region for block: B:730:0x1006  */
    /* JADX WARN: Removed duplicated region for block: B:733:0x102a  */
    /* JADX WARN: Removed duplicated region for block: B:734:0x1032  */
    /* JADX WARN: Removed duplicated region for block: B:737:0x1066  */
    /* JADX WARN: Removed duplicated region for block: B:746:0x10b0  */
    /* JADX WARN: Removed duplicated region for block: B:749:0x10b9  */
    /* JADX WARN: Removed duplicated region for block: B:750:0x10c5  */
    /* JADX WARN: Removed duplicated region for block: B:753:0x10d4  */
    /* JADX WARN: Removed duplicated region for block: B:757:0x112b  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void drawContent(final Canvas canvas, boolean z) {
        boolean z2;
        boolean z3;
        MessageObject messageObject;
        ArrayList<MessageObject.TextLayoutBlock> arrayList;
        float f;
        float f2;
        boolean isPlayingMessage;
        float currentBackgroundRight;
        float f3;
        int i;
        Drawable drawable;
        float f4;
        float f5;
        int i2;
        int i3;
        int i4;
        Drawable drawable2;
        float dp;
        int dp2;
        int dp3;
        CachedStaticLayout cachedStaticLayout;
        CachedStaticLayout cachedStaticLayout2;
        int imageX;
        Path path;
        float f6;
        boolean z4;
        ViewGroup viewGroup;
        MessageObject messageObject2;
        Paint paint;
        MessageObject messageObject3 = this.currentMessageObject;
        if (messageObject3 == null || !messageObject3.preview) {
            z2 = z;
            z3 = false;
        } else {
            z2 = z;
            z3 = true;
        }
        if (z2 != z3) {
            return;
        }
        boolean z5 = this.needNewVisiblePart && messageObject3.type == 0;
        boolean hasSpoilers = hasSpoilers();
        if (z5 || hasSpoilers) {
            getLocalVisibleRect(this.scrollRect);
            if (hasSpoilers) {
                Rect rect = this.scrollRect;
                updateSpoilersVisiblePart(rect.top, rect.bottom);
            }
            if (z5) {
                Rect rect2 = this.scrollRect;
                int i5 = rect2.top;
                setVisiblePart(i5, rect2.bottom - i5, this.parentHeight, this.parentViewTopOffset, this.viewTop, this.parentWidth, this.backgroundHeight, this.blurredViewTopOffset, this.blurredViewBottomOffset);
                this.needNewVisiblePart = false;
            }
        }
        float f7 = this.buttonX;
        float f8 = this.buttonY;
        if (this.transitionParams.animateButton) {
            f7 = AndroidUtilities.lerp(this.transitionParams.animateFromButtonX, this.buttonX, this.transitionParams.animateChangeProgress);
            f8 = AndroidUtilities.lerp(this.transitionParams.animateFromButtonY, this.buttonY, this.transitionParams.animateChangeProgress);
            int i6 = (int) f7;
            int i7 = (int) f8;
            this.radialProgress.setProgressRect(i6, i7, AndroidUtilities.dp(44.0f) + i6, AndroidUtilities.dp(44.0f) + i7);
        }
        float f9 = f8;
        updateSeekBarWaveformWidth(canvas);
        this.forceNotDrawTime = this.currentMessagesGroup != null;
        this.photoImage.setPressed(((this.isHighlightedAnimated || this.isHighlighted) && this.currentPosition != null) ? 2 : 0);
        this.photoImage.setVisible((PhotoViewer.isShowingImage(this.currentMessageObject) || SecretMediaViewer.getInstance().isShowingImage(this.currentMessageObject) || StoryViewer.isShowingImage(this.currentMessageObject)) ? false : true, false);
        this.blurredPhotoImage.setVisible((PhotoViewer.isShowingImage(this.currentMessageObject) || SecretMediaViewer.getInstance().isShowingImage(this.currentMessageObject) || StoryViewer.isShowingImage(this.currentMessageObject)) ? false : true, false);
        if (!this.photoImage.getVisible()) {
            this.mediaWasInvisible = true;
            this.timeWasInvisible = true;
            int i8 = this.animatingNoSound;
            if (i8 == 1) {
                this.animatingNoSoundProgress = 0.0f;
                this.animatingNoSound = 0;
            } else if (i8 == 2) {
                this.animatingNoSoundProgress = 1.0f;
                this.animatingNoSound = 0;
            }
        } else if (this.groupPhotoInvisible) {
            this.timeWasInvisible = true;
        } else {
            boolean z6 = this.mediaWasInvisible;
            if (z6 || this.timeWasInvisible) {
                if (z6) {
                    this.controlsAlpha = 0.0f;
                    this.mediaWasInvisible = false;
                }
                if (this.timeWasInvisible) {
                    this.timeAlpha = 0.0f;
                    this.timeWasInvisible = false;
                }
                this.lastControlsAlphaChangeTime = System.currentTimeMillis();
                this.totalChangeTime = 0L;
            }
        }
        RadialProgress2 radialProgress2 = this.radialProgress;
        int i9 = Theme.key_chat_mediaProgress;
        radialProgress2.setProgressColor(getThemedColor(i9));
        this.videoRadialProgress.setProgressColor(getThemedColor(i9));
        this.imageDrawn = false;
        this.radialProgress.setCircleCrossfadeColor(-1, 0.0f, 1.0f);
        MessageObject messageObject4 = this.currentMessageObject;
        int i10 = messageObject4.type;
        if (i10 == 0 || i10 == 24 || i10 == 19 || messageObject4.isGiveawayOrGiveawayResults()) {
            layoutTextXY(false);
            if (!this.enterTransitionInProgress && (messageObject = this.currentMessageObject) != null && !messageObject.preview) {
                if (!this.drawForBlur && this.animatedEmojiStack != null && (((arrayList = messageObject.textLayoutBlocks) == null || arrayList.isEmpty()) && this.transitionParams.animateOutTextBlocks != null)) {
                    this.transitionParams.animateOutTextBlocks.isEmpty();
                }
                drawMessageText(canvas);
            }
            if (!this.enterTransitionInProgress || this.currentMessageObject.isVoice()) {
                drawLinkPreview(canvas, 1.0f);
                getIconForCurrentState();
            }
            this.drawTime = true;
        } else if (this.drawPhotoImage) {
            float f10 = this.roundVideoPlayPipFloat.get();
            if (f10 > 0.0f) {
                if (this.drillHolePaint == null) {
                    this.drillHolePaint = new Paint(1);
                }
                this.drillHolePaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outLoader : Theme.key_chat_inLoader));
                this.drillHolePaint.setAlpha((int) (paint.getAlpha() * getVideoTranscriptionProgress()));
                canvas.drawCircle(this.photoImage.getCenterX(), this.photoImage.getCenterY(), this.photoImage.getImageWidth() / 2.0f, this.drillHolePaint);
            }
            if (this.isRoundVideo && MediaController.getInstance().isPlayingMessage(this.currentMessageObject) && MediaController.getInstance().isVideoDrawingReady() && canvas.isHardwareAccelerated() && ((messageObject2 = this.currentMessageObject) == null || !messageObject2.isVoiceTranscriptionOpen() || f10 >= 1.0f)) {
                this.imageDrawn = true;
                this.drawTime = true;
            } else {
                if (this.currentMessageObject.type == 5 && Theme.chat_roundVideoShadow != null) {
                    float imageX2 = this.photoImage.getImageX() - AndroidUtilities.dp(3.0f);
                    float imageY = this.photoImage.getImageY() - AndroidUtilities.dp(2.0f);
                    Theme.chat_roundVideoShadow.setAlpha((int) ((1.0f - getVideoTranscriptionProgress()) * 255.0f));
                    Theme.chat_roundVideoShadow.setBounds((int) imageX2, (int) imageY, (int) (imageX2 + this.photoImage.getImageWidth() + AndroidUtilities.dp(6.0f)), (int) (imageY + this.photoImage.getImageHeight() + AndroidUtilities.dp(6.0f)));
                    Theme.chat_roundVideoShadow.draw(canvas);
                    Theme.chat_roundVideoShadow.setAlpha(255);
                    if (!this.photoImage.hasBitmapImage() || this.photoImage.getCurrentAlpha() != 1.0f) {
                        Theme.chat_docBackPaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outBubble : Theme.key_chat_inBubble));
                        canvas.drawCircle(this.photoImage.getCenterX(), this.photoImage.getCenterY(), this.photoImage.getImageWidth() / 2.0f, Theme.chat_docBackPaint);
                    }
                }
                CheckBoxBase checkBoxBase = this.mediaCheckBox;
                boolean z7 = checkBoxBase != null && (this.checkBoxVisible || checkBoxBase.getProgress() != 0.0f || this.checkBoxAnimationInProgress) && this.currentMessagesGroup != null;
                this.drawMediaCheckBox = z7;
                if (z7 && ((this.mediaCheckBox.isChecked() || this.mediaCheckBox.getProgress() != 0.0f || this.checkBoxAnimationInProgress) && !textIsSelectionMode())) {
                    if (!this.currentMessagesGroup.isDocuments) {
                        Theme.chat_replyLinePaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outBubbleSelected : Theme.key_chat_inBubbleSelected));
                        this.rect.set(this.photoImage.getImageX(), this.photoImage.getImageY(), this.photoImage.getImageX2(), this.photoImage.getImageY2());
                        int[] roundRadius = this.photoImage.getRoundRadius();
                        this.rectPath.reset();
                        for (int i11 = 0; i11 < roundRadius.length; i11++) {
                            float[] fArr = radii;
                            int i12 = i11 * 2;
                            float f11 = roundRadius[i11];
                            fArr[i12 + 1] = f11;
                            fArr[i12] = f11;
                        }
                        this.rectPath.addRoundRect(this.rect, radii, Path.Direction.CW);
                        this.rectPath.close();
                        canvas.drawPath(this.rectPath, Theme.chat_replyLinePaint);
                    }
                    this.photoImage.setSideClip(AndroidUtilities.dp(14.0f) * this.mediaCheckBox.getProgress());
                    if (this.checkBoxAnimationInProgress) {
                        this.mediaCheckBox.setBackgroundAlpha(this.checkBoxAnimationProgress);
                    } else {
                        CheckBoxBase checkBoxBase2 = this.mediaCheckBox;
                        checkBoxBase2.setBackgroundAlpha(this.checkBoxVisible ? 1.0f : checkBoxBase2.getProgress());
                    }
                } else {
                    this.photoImage.setSideClip(0.0f);
                }
                if (this.isRoundVideo && this.currentMessageObject.isVoiceTranscriptionOpen() && f10 > 0.0f) {
                    canvas.save();
                    Path path2 = this.drillHolePath;
                    if (path2 == null) {
                        this.drillHolePath = new Path();
                    } else {
                        path2.rewind();
                    }
                    this.drillHolePath.addCircle(this.photoImage.getCenterX(), this.photoImage.getCenterY(), (this.photoImage.getImageWidth() / 2.0f) * (1.0f - f10), Path.Direction.CW);
                    canvas.clipPath(this.drillHolePath);
                }
                ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
                if (chatMessageCellDelegate == null || chatMessageCellDelegate.getPinchToZoomHelper() == null || !this.delegate.getPinchToZoomHelper().isInOverlayModeFor(this)) {
                    float y = getY() + this.photoImage.getImageY();
                    float imageHeight = this.photoImage.getImageHeight() + y;
                    this.photoImageOutOfBounds = false;
                    if (!SizeNotifierFrameLayout.drawingBlur) {
                        float f12 = this.parentBoundsTop;
                        if ((f12 != 0.0f || this.parentBoundsBottom != 0) && (imageHeight < f12 || y > this.parentBoundsBottom)) {
                            this.photoImageOutOfBounds = true;
                        }
                    }
                    if (!this.photoImageOutOfBounds || this.drawForBlur) {
                        this.photoImage.setSkipUpdateFrame(this.drawForBlur || this.skipFrameUpdate);
                        if (this.flipImage) {
                            canvas.save();
                            canvas.scale(-1.0f, 1.0f, this.photoImage.getCenterX(), this.photoImage.getCenterY());
                            if (allowDrawPhotoImage()) {
                                this.imageDrawn = drawPhotoImage(canvas);
                            } else {
                                this.imageDrawn = true;
                            }
                            if (this.currentMessageObject.hasMediaSpoilers()) {
                                drawBlurredPhoto(canvas);
                            }
                            canvas.restore();
                        } else {
                            if (allowDrawPhotoImage()) {
                                ButtonBounce buttonBounce = this.contactBounce;
                                if (buttonBounce != null) {
                                    float scale = buttonBounce.getScale(0.0125f);
                                    if (scale != 1.0f) {
                                        canvas.save();
                                        canvas.scale(scale, scale, this.contactRect.centerX(), this.contactRect.centerY());
                                        z4 = true;
                                        this.imageDrawn = drawPhotoImage(canvas);
                                        if (z4) {
                                            canvas.restore();
                                        }
                                    }
                                }
                                z4 = false;
                                this.imageDrawn = drawPhotoImage(canvas);
                                if (z4) {
                                }
                            } else {
                                this.imageDrawn = true;
                            }
                            if (this.currentMessageObject.hasMediaSpoilers()) {
                                drawBlurredPhoto(canvas);
                            }
                        }
                        this.photoImage.setSkipUpdateFrame(this.skipFrameUpdate);
                    }
                }
                if (this.isRoundVideo && this.currentMessageObject.isVoiceTranscriptionOpen() && f10 > 0.0f) {
                    canvas.restore();
                }
                boolean z8 = this.drawTime;
                boolean visible = this.photoImage.getVisible();
                boolean z9 = visible || (this.currentMessageObject.shouldDrawReactionsInLayout() && this.currentMessageObject.hasReactions());
                this.drawTime = z9;
                if (this.currentPosition != null && z8 != z9 && (viewGroup = (ViewGroup) getParent()) != null) {
                    if (!this.currentPosition.last) {
                        int childCount = viewGroup.getChildCount();
                        for (int i13 = 0; i13 < childCount; i13++) {
                            View childAt = viewGroup.getChildAt(i13);
                            if (childAt != this && (childAt instanceof ChatMessageCell)) {
                                ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                                if (chatMessageCell.getCurrentMessagesGroup() == this.currentMessagesGroup) {
                                    MessageObject.GroupedMessagePosition currentPosition = chatMessageCell.getCurrentPosition();
                                    if (currentPosition.last && currentPosition.maxY == this.currentPosition.maxY && (chatMessageCell.timeX - AndroidUtilities.dp(4.0f)) + chatMessageCell.getLeft() < getRight()) {
                                        chatMessageCell.groupPhotoInvisible = !visible;
                                        chatMessageCell.invalidate();
                                        viewGroup.invalidate();
                                    }
                                }
                            }
                        }
                    } else {
                        viewGroup.invalidate();
                    }
                }
            }
        } else {
            int i14 = this.documentAttachType;
            if (i14 == 5 || i14 == 1) {
                CheckBoxBase checkBoxBase3 = this.mediaCheckBox;
                boolean z10 = checkBoxBase3 != null && (this.checkBoxVisible || checkBoxBase3.getProgress() != 0.0f || this.checkBoxAnimationInProgress) && this.currentMessagesGroup != null;
                this.drawMediaCheckBox = z10;
                if (z10) {
                    this.radialProgress.setCircleCrossfadeColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outTimeText : Theme.key_chat_inTimeText, this.checkBoxAnimationProgress, 1.0f - this.mediaCheckBox.getProgress());
                }
                if (this.drawMediaCheckBox && !textIsSelectionMode() && (this.mediaCheckBox.isChecked() || this.mediaCheckBox.getProgress() != 0.0f || this.checkBoxAnimationInProgress)) {
                    if (this.checkBoxAnimationInProgress) {
                        this.mediaCheckBox.setBackgroundAlpha(this.checkBoxAnimationProgress);
                        if (this.radialProgress.getMiniIcon() == 4) {
                            this.radialProgress.setMiniIconScale(this.checkBoxAnimationProgress);
                        }
                    } else {
                        CheckBoxBase checkBoxBase4 = this.mediaCheckBox;
                        checkBoxBase4.setBackgroundAlpha(this.checkBoxVisible ? 1.0f : checkBoxBase4.getProgress());
                    }
                } else {
                    CheckBoxBase checkBoxBase5 = this.mediaCheckBox;
                    if (checkBoxBase5 != null) {
                        checkBoxBase5.setBackgroundAlpha(1.0f);
                    }
                }
            }
        }
        int i15 = this.documentAttachType;
        if (i15 == 2) {
            if (this.drawPhotoImage && !this.currentMessageObject.isRepostPreview && this.photoImage.getVisible() && !this.hasGamePreview && !this.currentMessageObject.needDrawBluredPreview() && !this.currentMessageObject.preview && !this.isSmallImage) {
                int alpha = ((BitmapDrawable) Theme.chat_msgMediaMenuDrawable).getPaint().getAlpha();
                Theme.chat_msgMediaMenuDrawable.setAlpha((int) (alpha * this.controlsAlpha));
                Drawable drawable3 = Theme.chat_msgMediaMenuDrawable;
                int imageX3 = (int) ((this.photoImage.getImageX() + this.photoImage.getImageWidth()) - AndroidUtilities.dp(14.0f));
                this.otherX = imageX3;
                int imageY2 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(8.1f));
                this.otherY = imageY2;
                BaseCell.setDrawableBounds(drawable3, imageX3, imageY2);
                Theme.chat_msgMediaMenuDrawable.draw(canvas);
                Theme.chat_msgMediaMenuDrawable.setAlpha(alpha);
            }
            f = 1.0f;
        } else if (i15 == 5) {
            if (this.currentMessageObject.isOutOwner()) {
                Theme.chat_audioTitlePaint.setColor(getThemedColor(Theme.key_chat_outAudioTitleText));
                Theme.chat_audioPerformerPaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outAudioPerformerSelectedText : Theme.key_chat_outAudioPerformerText));
                Theme.chat_audioTimePaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outAudioDurationSelectedText : Theme.key_chat_outAudioDurationText));
                this.radialProgress.setProgressColor(getThemedColor((isDrawSelectionBackground() || this.buttonPressed != 0) ? Theme.key_chat_outAudioSelectedProgress : Theme.key_chat_outAudioProgress));
            } else {
                ReplyMessageLine replyMessageLine = this.linkLine;
                if (replyMessageLine != null && this.hasLinkPreview) {
                    Theme.chat_audioTitlePaint.setColor(replyMessageLine.getColor());
                    Theme.chat_audioPerformerPaint.setColor(Theme.adaptHue(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inAudioPerformerSelectedText : Theme.key_chat_inAudioPerformerText), this.linkLine.getColor()));
                    Theme.chat_audioTimePaint.setColor(Theme.adaptHue(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inAudioDurationSelectedText : Theme.key_chat_inAudioDurationText), this.linkLine.getColor()));
                    this.radialProgress.setProgressColor(Theme.adaptHue(getThemedColor((isDrawSelectionBackground() || this.buttonPressed != 0) ? Theme.key_chat_inAudioSelectedProgress : Theme.key_chat_inAudioProgress), this.linkLine.getColor()));
                    SeekBar seekBar = this.seekBar;
                    int adaptHue = Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioSeekbar), this.linkLine.getColor());
                    int adaptHue2 = Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioCacheSeekbar), this.linkLine.getColor());
                    int i16 = Theme.key_chat_inAudioSeekbarFill;
                    seekBar.setColors(adaptHue, adaptHue2, Theme.adaptHue(getThemedColor(i16), this.linkLine.getColor()), Theme.adaptHue(getThemedColor(i16), this.linkLine.getColor()), Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioSeekbarSelected), this.linkLine.getColor()));
                } else {
                    Theme.chat_audioTitlePaint.setColor(getThemedColor(Theme.key_chat_inAudioTitleText));
                    Theme.chat_audioPerformerPaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inAudioPerformerSelectedText : Theme.key_chat_inAudioPerformerText));
                    Theme.chat_audioTimePaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inAudioDurationSelectedText : Theme.key_chat_inAudioDurationText));
                    this.radialProgress.setProgressColor(getThemedColor((isDrawSelectionBackground() || this.buttonPressed != 0) ? Theme.key_chat_inAudioSelectedProgress : Theme.key_chat_inAudioProgress));
                }
            }
            this.radialProgress.setBackgroundDrawable(isDrawSelectionBackground() ? this.currentBackgroundSelectedDrawable : this.currentBackgroundDrawable);
            RadialProgress2 radialProgress22 = this.radialProgress;
            radialProgress22.iconScale = 1.0f;
            radialProgress22.draw(canvas);
            canvas.save();
            canvas.translate(this.timeAudioX + this.songX, AndroidUtilities.dp(13.0f) + this.namesOffset + getMediaOffsetY());
            this.songLayout.draw(canvas);
            canvas.restore();
            boolean isPlayingMessage2 = MediaController.getInstance().isPlayingMessage(this.currentMessageObject);
            if (isPlayingMessage2) {
                float f13 = this.toSeekBarProgress;
                if (f13 != 1.0f) {
                    float f14 = f13 + 0.16f;
                    this.toSeekBarProgress = f14;
                    if (f14 > 1.0f) {
                        this.toSeekBarProgress = 1.0f;
                    }
                    invalidate();
                    f3 = this.toSeekBarProgress;
                    if (f3 <= 0.0f) {
                        if (f3 != 1.0f) {
                            i = 255;
                            f = 1.0f;
                            canvas.saveLayerAlpha(this.seekBarX, this.seekBarY, i2 + this.seekBar.getWidth() + AndroidUtilities.dp(24.0f), this.seekBarY + AndroidUtilities.dp(24.0f), (int) (this.toSeekBarProgress * 255.0f), 31);
                        } else {
                            i = 255;
                            f = 1.0f;
                            canvas.save();
                        }
                        canvas.translate(this.seekBarX, this.seekBarY);
                        this.seekBar.draw(canvas);
                        canvas.restore();
                    } else {
                        i = 255;
                        f = 1.0f;
                    }
                    if (this.toSeekBarProgress < f) {
                        float f15 = this.timeAudioX + this.performerX;
                        float dp4 = AndroidUtilities.dp(35.0f) + this.namesOffset + getMediaOffsetY();
                        if (this.toSeekBarProgress != 0.0f) {
                            f4 = dp4;
                            f5 = f15;
                            canvas.saveLayerAlpha(f15, dp4, f15 + this.performerLayout.getWidth(), dp4 + this.performerLayout.getHeight(), (int) ((f - this.toSeekBarProgress) * 255.0f), 31);
                        } else {
                            f4 = dp4;
                            f5 = f15;
                            canvas.save();
                        }
                        float f16 = this.toSeekBarProgress;
                        if (f16 != 0.0f) {
                            float f17 = ((f - f16) * 0.3f) + 0.7f;
                            canvas.scale(f17, f17, f5, f4 + (this.performerLayout.getHeight() / 2.0f));
                        }
                        canvas.translate(f5, f4);
                        this.performerLayout.draw(canvas);
                        canvas.restore();
                    }
                    canvas.save();
                    canvas.translate(this.timeAudioX, AndroidUtilities.dp(57.0f) + this.namesOffset + getMediaOffsetY());
                    this.durationLayout.draw(canvas);
                    canvas.restore();
                    if (shouldDrawMenuDrawable()) {
                        if (this.currentMessageObject.isOutOwner()) {
                            drawable = getThemedDrawable(isDrawSelectionBackground() ? "drawableMsgOutMenuSelected" : "drawableMsgOutMenu");
                        } else {
                            drawable = isDrawSelectionBackground() ? Theme.chat_msgInMenuSelectedDrawable : Theme.chat_msgInMenuDrawable;
                        }
                        int dp5 = ((((int) f7) + this.backgroundWidth) - AndroidUtilities.dp(this.currentMessageObject.type == 0 ? 58.0f : 48.0f)) - AndroidUtilities.dp(this.hasLinkPreview ? 18.0f : 0.0f);
                        this.otherX = dp5;
                        int dp6 = ((int) f9) - AndroidUtilities.dp(2.0f);
                        this.otherY = dp6;
                        BaseCell.setDrawableBounds(drawable, dp5, dp6);
                        TransitionParams transitionParams = this.transitionParams;
                        if (transitionParams.animateChangeProgress != f && transitionParams.animateShouldDrawMenuDrawable) {
                            drawable.setAlpha((int) (this.transitionParams.animateChangeProgress * 255.0f));
                        }
                        drawable.draw(canvas);
                        TransitionParams transitionParams2 = this.transitionParams;
                        if (transitionParams2.animateChangeProgress != f && transitionParams2.animateShouldDrawMenuDrawable) {
                            drawable.setAlpha(i);
                        }
                    }
                }
            }
            if (!isPlayingMessage2) {
                float f18 = this.toSeekBarProgress;
                if (f18 != 0.0f) {
                    float f19 = f18 - 0.16f;
                    this.toSeekBarProgress = f19;
                    if (f19 < 0.0f) {
                        this.toSeekBarProgress = 0.0f;
                    }
                    invalidate();
                }
            }
            f3 = this.toSeekBarProgress;
            if (f3 <= 0.0f) {
            }
            if (this.toSeekBarProgress < f) {
            }
            canvas.save();
            canvas.translate(this.timeAudioX, AndroidUtilities.dp(57.0f) + this.namesOffset + getMediaOffsetY());
            this.durationLayout.draw(canvas);
            canvas.restore();
            if (shouldDrawMenuDrawable()) {
            }
        } else {
            f = 1.0f;
            if (i15 == 3 || i15 == 7) {
                if (this.currentMessageObject.isOutOwner()) {
                    Theme.chat_audioTimePaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outAudioDurationSelectedText : Theme.key_chat_outAudioDurationText));
                    this.radialProgress.setProgressColor(getThemedColor((isDrawSelectionBackground() || this.buttonPressed != 0) ? Theme.key_chat_outAudioSelectedProgress : Theme.key_chat_outAudioProgress));
                } else if (this.hasLinkPreview && this.linkLine != null) {
                    Theme.chat_audioTimePaint.setColor(Theme.adaptHue(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inAudioDurationSelectedText : Theme.key_chat_inAudioDurationText), this.linkLine.getColor()));
                    this.radialProgress.setProgressColor(Theme.adaptHue(getThemedColor((isDrawSelectionBackground() || this.buttonPressed != 0) ? Theme.key_chat_inAudioSelectedProgress : Theme.key_chat_inAudioProgress), this.linkLine.getColor()));
                    SeekBar seekBar2 = this.seekBar;
                    int adaptHue3 = Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioSeekbar), this.linkLine.getColor());
                    int adaptHue4 = Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioCacheSeekbar), this.linkLine.getColor());
                    int i17 = Theme.key_chat_inAudioSeekbarFill;
                    seekBar2.setColors(adaptHue3, adaptHue4, Theme.adaptHue(getThemedColor(i17), this.linkLine.getColor()), Theme.adaptHue(getThemedColor(i17), this.linkLine.getColor()), Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioSeekbarSelected), this.linkLine.getColor()));
                } else {
                    Theme.chat_audioTimePaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inAudioDurationSelectedText : Theme.key_chat_inAudioDurationText));
                    this.radialProgress.setProgressColor(getThemedColor((isDrawSelectionBackground() || this.buttonPressed != 0) ? Theme.key_chat_inAudioSelectedProgress : Theme.key_chat_inAudioProgress));
                }
                AudioVisualizerDrawable audioVisualizerDrawable = this.overridenAudioVisualizer;
                if (audioVisualizerDrawable == null) {
                    if (MediaController.getInstance().isPlayingMessage(this.currentMessageObject)) {
                        audioVisualizerDrawable = Theme.getCurrentAudiVisualizerDrawable();
                    } else {
                        audioVisualizerDrawable = Theme.getAnimatedOutAudioVisualizerDrawable(this.currentMessageObject);
                    }
                }
                if (audioVisualizerDrawable != null && (this.documentAttachType != 7 || !this.hasLinkPreview)) {
                    audioVisualizerDrawable.setParentView(this);
                    if (this.linkLine != null) {
                        audioVisualizerDrawable.draw(canvas, f7 + AndroidUtilities.dp(22.0f), f9 + AndroidUtilities.dp(22.0f), this.linkLine.getColor(), this.documentAttachType == 7 ? getVideoTranscriptionProgress() : 1.0f, this.resourcesProvider);
                    } else {
                        audioVisualizerDrawable.draw(canvas, f7 + AndroidUtilities.dp(22.0f), f9 + AndroidUtilities.dp(22.0f), this.currentMessageObject.isOutOwner(), this.documentAttachType == 7 ? getVideoTranscriptionProgress() : 1.0f, this.resourcesProvider);
                    }
                }
                if (!this.enterTransitionInProgress && this.documentAttachType == 3) {
                    this.radialProgress.setBackgroundDrawable(isDrawSelectionBackground() ? this.currentBackgroundSelectedDrawable : this.currentBackgroundDrawable);
                    this.radialProgress.iconScale = 1.0f;
                    SeekBarWaveform seekBarWaveform = this.seekBarWaveform;
                    drawVoiceOnce(canvas, seekBarWaveform == null ? 1.0f : 1.0f - seekBarWaveform.explosionRate, new Runnable() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda8
                        @Override // java.lang.Runnable
                        public final void run() {
                            ChatMessageCell.this.lambda$drawContent$10(canvas);
                        }
                    });
                }
                int i18 = this.seekBarX;
                int i19 = this.timeAudioX;
                if (this.transitionParams.animateButton) {
                    int i20 = this.buttonX;
                    float f20 = this.transitionParams.animateFromButtonX;
                    float f21 = this.transitionParams.animateChangeProgress;
                    int i21 = i20 - ((int) ((f20 * (1.0f - f21)) + (this.buttonX * f21)));
                    i18 -= i21;
                    i19 -= i21;
                }
                if (this.isRoundVideo && this.currentMessageObject.isOutOwner()) {
                    i18 = getCurrentBackgroundLeft() + AndroidUtilities.dp(57.0f);
                    i19 = getCurrentBackgroundLeft() + AndroidUtilities.dp(67.0f);
                }
                int videoTranscriptionProgress = this.isRoundVideo ? (int) (0 + ((1.0f - getVideoTranscriptionProgress()) * AndroidUtilities.roundMessageSize)) : 0;
                canvas.save();
                if (this.documentAttachType != 7 || !this.hasLinkPreview) {
                    if (this.useSeekBarWaveform) {
                        canvas.translate((AndroidUtilities.dp(13.0f) + i18) - this.seekBarWaveformTranslateX, this.seekBarY + videoTranscriptionProgress);
                        this.seekBarWaveform.setAlpha(this.isRoundVideo ? CubicBezierInterpolator.EASE_IN.getInterpolation(getVideoTranscriptionProgress()) : 1.0f);
                        this.seekBarWaveform.draw(canvas, this);
                    } else {
                        canvas.translate(i18, this.seekBarY + videoTranscriptionProgress);
                        this.seekBar.setAlpha(this.isRoundVideo ? CubicBezierInterpolator.EASE_IN.getInterpolation(getVideoTranscriptionProgress()) : 1.0f);
                        this.seekBar.draw(canvas);
                    }
                }
                canvas.restore();
                float useTranscribeButtonProgress = getUseTranscribeButtonProgress();
                TransitionParams transitionParams3 = this.transitionParams;
                if (transitionParams3.animatePlayingRound) {
                    if (this.isPlayingRound) {
                        f2 = transitionParams3.animateChangeProgress;
                    } else {
                        f2 = 1.0f - transitionParams3.animateChangeProgress;
                    }
                } else {
                    f2 = this.isPlayingRound ? 1.0f : 0.0f;
                }
                if (!this.wasTranscriptionOpen) {
                    useTranscribeButtonProgress = AndroidUtilities.lerp((1.0f - f2) * useTranscribeButtonProgress, useTranscribeButtonProgress, getVideoTranscriptionProgress());
                }
                if (useTranscribeButtonProgress > 0.0f && (this.documentAttachType != 7 || !this.hasLinkPreview)) {
                    canvas.save();
                    int currentBackgroundRight2 = ((getCurrentBackgroundRight() - getCurrentBackgroundLeft()) + AndroidUtilities.dp(this.pinnedBottom ? 6.0f : 0.0f)) - AndroidUtilities.dp(((this.hasLinkPreview ? 10 : 0) + 92) + 36);
                    if (this.transcribeButton == null) {
                        TranscribeButton transcribeButton = new TranscribeButton(this, this.seekBarWaveform) { // from class: org.telegram.ui.Cells.ChatMessageCell.7
                            @Override // org.telegram.ui.Components.TranscribeButton
                            public void drawGradientBackground(Canvas canvas2, Rect rect3, float f22) {
                                Paint themedPaint;
                                if (ChatMessageCell.this.currentMessageObject.shouldDrawWithoutBackground()) {
                                    themedPaint = ChatMessageCell.this.getThemedPaint("paintChatActionBackground");
                                } else {
                                    themedPaint = ChatMessageCell.this.getThemedPaint("paintChatTimeBackground");
                                }
                                int alpha2 = themedPaint.getAlpha();
                                themedPaint.setAlpha((int) (alpha2 * f22));
                                ChatMessageCell.this.applyServiceShaderMatrix();
                                canvas2.drawRect(rect3, themedPaint);
                                if (themedPaint == ChatMessageCell.this.getThemedPaint("paintChatActionBackground") && ChatMessageCell.this.hasGradientService()) {
                                    int alpha3 = Theme.chat_actionBackgroundGradientDarkenPaint.getAlpha();
                                    Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha((int) (alpha3 * f22));
                                    canvas2.drawRect(rect3, Theme.chat_actionBackgroundGradientDarkenPaint);
                                    Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha(alpha3);
                                }
                                themedPaint.setAlpha(alpha2);
                            }

                            @Override // org.telegram.ui.Components.TranscribeButton
                            protected void onOpen() {
                                ChatMessageCell.this.wasTranscriptionOpen = true;
                            }
                        };
                        this.transcribeButton = transcribeButton;
                        MessageObject messageObject5 = this.currentMessageObject;
                        TLRPC$Message tLRPC$Message = messageObject5.messageOwner;
                        transcribeButton.setOpen(tLRPC$Message != null && tLRPC$Message.voiceTranscriptionOpen && tLRPC$Message.voiceTranscriptionFinal && TranscribeButton.isVideoTranscriptionOpen(messageObject5), false);
                        this.transcribeButton.setLoading(TranscribeButton.isTranscribing(this.currentMessageObject), false);
                        this.transcribeButton.setLock(TranscribeButton.showTranscribeLock(this.currentMessageObject), false);
                    }
                    if (this.drawSideButton != 0) {
                        this.transcribeX = AndroidUtilities.lerp(i18 + AndroidUtilities.dp(21.0f) + currentBackgroundRight2, this.sideStartX, 1.0f - getVideoTranscriptionProgress());
                        this.transcribeY = AndroidUtilities.lerp(this.seekBarY + AndroidUtilities.dp(3.0f), this.sideStartY - AndroidUtilities.dp(40.0f), 1.0f - getVideoTranscriptionProgress());
                    } else {
                        float dp7 = i18 + AndroidUtilities.dp(21.0f) + currentBackgroundRight2;
                        MessageObject messageObject6 = this.currentMessageObject;
                        if (messageObject6 != null && messageObject6.isOutOwner()) {
                            currentBackgroundRight = (getCurrentBackgroundLeft() - AndroidUtilities.dp(40.0f)) + (AndroidUtilities.dp(28.0f) * f2);
                        } else {
                            currentBackgroundRight = (getCurrentBackgroundRight() + AndroidUtilities.dp(8.0f)) - (AndroidUtilities.dp(40.0f) * f2);
                        }
                        this.transcribeX = AndroidUtilities.lerp(dp7, currentBackgroundRight, 1.0f - getVideoTranscriptionProgress());
                        float dp8 = (this.layoutHeight + this.transitionParams.deltaBottom) - AndroidUtilities.dp(28 - (this.drawPinnedBottom ? 2 : 0));
                        ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
                        if (!reactionsLayoutInBubble.isEmpty) {
                            dp8 -= reactionsLayoutInBubble.getCurrentTotalHeight(this.transitionParams.animateChangeProgress);
                        }
                        this.transcribeY = AndroidUtilities.lerp(this.seekBarY + AndroidUtilities.dp(3.0f), ((AndroidUtilities.lerp(dp8, ((AndroidUtilities.dp(44.0f) + this.namesOffset) + getMediaOffsetY()) - AndroidUtilities.dp(1.7f), getVideoTranscriptionProgress()) + AndroidUtilities.dp(1.7f)) - AndroidUtilities.dp(12.0f)) - (this.currentMessageObject.isOutOwner() ? 0.0f : AndroidUtilities.dp(28.0f) * f2), 1.0f - getVideoTranscriptionProgress());
                    }
                    this.transcribeButton.setBounds((int) this.transcribeX, (int) this.transcribeY, AndroidUtilities.lerp(AndroidUtilities.dp(30.0f), AndroidUtilities.dp(32.0f), 1.0f - getVideoTranscriptionProgress()), AndroidUtilities.lerp(AndroidUtilities.dp(24.0f), AndroidUtilities.dp(32.0f), 1.0f - getVideoTranscriptionProgress()), AndroidUtilities.lerp(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(16.0f), 1.0f - getVideoTranscriptionProgress()));
                    this.transcribeButton.setColor(ColorUtils.blendARGB(getThemedColor(Theme.key_chat_serviceText), getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outReactionButtonBackground : Theme.key_chat_inReactionButtonBackground), this.documentAttachType == 3 ? 1.0f : getVideoTranscriptionProgress()), getThemedColor(Theme.key_windowBackgroundWhiteGrayText), this.currentMessageObject.isOut(), this.documentAttachType == 3 ? 0.0f : 1.0f - getVideoTranscriptionProgress());
                    this.transcribeButton.draw(canvas, useTranscribeButtonProgress);
                    canvas.restore();
                }
                if (this.documentAttachType == 3) {
                    canvas.save();
                    canvas.translate(i19, AndroidUtilities.dp(44.0f) + this.namesOffset + getMediaOffsetY() + videoTranscriptionProgress);
                    this.durationLayout.draw(canvas);
                    canvas.restore();
                    MessageObject messageObject7 = this.currentMessageObject;
                    if (messageObject7.type != 0 && messageObject7.isContentUnread()) {
                        Theme.chat_docBackPaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outVoiceSeekbarFill : Theme.key_chat_inVoiceSeekbarFill));
                        canvas.drawCircle(i19 + this.timeWidthAudio + AndroidUtilities.dp(6.0f), AndroidUtilities.dp(51.0f) + this.namesOffset + getMediaOffsetY(), AndroidUtilities.dp(3.0f), Theme.chat_docBackPaint);
                    }
                }
                if (this.documentAttachType == 7 && this.durationLayout != null && ((isPlayingMessage = MediaController.getInstance().isPlayingMessage(this.currentMessageObject)) || this.roundProgressAlpha != 0.0f)) {
                    if (isPlayingMessage) {
                        this.roundProgressAlpha = 1.0f;
                    } else {
                        float f22 = this.roundProgressAlpha - 0.10666667f;
                        this.roundProgressAlpha = f22;
                        if (f22 < 0.0f) {
                            this.roundProgressAlpha = 0.0f;
                        } else {
                            invalidate();
                        }
                    }
                    drawRoundProgress(canvas);
                }
            }
        }
        if (this.captionLayout != null) {
            updateCaptionLayout();
        }
        updateReactionLayoutPosition();
        if (shouldDrawCaptionLayout() && !this.currentMessageObject.preview) {
            drawCaptionLayout(canvas, false, f);
        }
        if (this.hasOldCaptionPreview) {
            MessageObject messageObject8 = this.currentMessageObject;
            int i22 = messageObject8.type;
            if (i22 != 1 && i22 != 20) {
                if (this.documentAttachType != 4 && i22 != 8) {
                    imageX = this.backgroundDrawableLeft + AndroidUtilities.dp(messageObject8.isOutOwner() ? 11.0f : 17.0f);
                    float dp9 = ((this.totalHeight - AndroidUtilities.dp(!this.drawPinnedTop ? 9.0f : 10.0f)) - this.linkPreviewHeight) - AndroidUtilities.dp(11.0f);
                    Theme.chat_replyLinePaint.setColor(getThemedColor(!this.currentMessageObject.isOutOwner() ? Theme.key_chat_outPreviewLine : Theme.key_chat_inPreviewLine));
                    RectF rectF = AndroidUtilities.rectTmp;
                    float f23 = imageX;
                    rectF.set(f23, dp9 - AndroidUtilities.dp(3.0f), AndroidUtilities.dp(6.0f) + imageX, this.linkPreviewHeight + dp9);
                    path = this.replyRoundRectPath;
                    if (path != null) {
                        this.replyRoundRectPath = new Path();
                    } else {
                        path.rewind();
                    }
                    canvas.save();
                    float f24 = rectF.left;
                    canvas.clipRect(f24, rectF.top, AndroidUtilities.dp(3.0f) + f24, rectF.bottom);
                    this.replyRoundRectPath.addRoundRect(rectF, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), Path.Direction.CW);
                    canvas.drawPath(this.replyRoundRectPath, Theme.chat_replyLinePaint);
                    canvas.restore();
                    if (this.siteNameLayout == null) {
                        Theme.chat_replyNamePaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outSiteNameText : Theme.key_chat_inSiteNameText));
                        canvas.save();
                        canvas.translate(f23 + (-this.siteNameLeft) + (this.hasInvoicePreview ? 0 : AndroidUtilities.dp(10.0f)), dp9 - AndroidUtilities.dp(3.0f));
                        this.siteNameLayout.draw(canvas);
                        canvas.restore();
                        CachedStaticLayout cachedStaticLayout3 = this.siteNameLayout;
                        f6 = cachedStaticLayout3.getLineBottom(cachedStaticLayout3.getLineCount() - 1) + dp9;
                    } else {
                        f6 = dp9;
                    }
                    if (!this.currentMessageObject.isOutOwner()) {
                        Theme.chat_replyTextPaint.setColor(getThemedColor(Theme.key_chat_messageTextOut));
                    } else {
                        Theme.chat_replyTextPaint.setColor(getThemedColor(Theme.key_chat_messageTextIn));
                    }
                    if (this.descriptionLayout == null) {
                        if (f6 != dp9) {
                            f6 += AndroidUtilities.dp(2.0f);
                        }
                        this.descriptionY = ((int) f6) - AndroidUtilities.dp(3.0f);
                        canvas.save();
                        canvas.translate(imageX + AndroidUtilities.dp(10.0f) + this.descriptionX, this.descriptionY);
                        this.descriptionLayout.draw(canvas);
                        StaticLayout staticLayout = this.descriptionLayout.layout;
                        i4 = 4;
                        AnimatedEmojiSpan.drawAnimatedEmojis(canvas, staticLayout, this.animatedEmojiDescriptionStack, 0.0f, null, 0.0f, 0.0f, 0.0f, 1.0f, getAdaptiveEmojiColorFilter(1, staticLayout.getPaint().getColor()));
                        canvas.restore();
                    } else {
                        i4 = 4;
                    }
                    i3 = 1;
                    this.drawTime = true;
                }
            }
            imageX = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(5.0f));
            float dp92 = ((this.totalHeight - AndroidUtilities.dp(!this.drawPinnedTop ? 9.0f : 10.0f)) - this.linkPreviewHeight) - AndroidUtilities.dp(11.0f);
            Theme.chat_replyLinePaint.setColor(getThemedColor(!this.currentMessageObject.isOutOwner() ? Theme.key_chat_outPreviewLine : Theme.key_chat_inPreviewLine));
            RectF rectF2 = AndroidUtilities.rectTmp;
            float f232 = imageX;
            rectF2.set(f232, dp92 - AndroidUtilities.dp(3.0f), AndroidUtilities.dp(6.0f) + imageX, this.linkPreviewHeight + dp92);
            path = this.replyRoundRectPath;
            if (path != null) {
            }
            canvas.save();
            float f242 = rectF2.left;
            canvas.clipRect(f242, rectF2.top, AndroidUtilities.dp(3.0f) + f242, rectF2.bottom);
            this.replyRoundRectPath.addRoundRect(rectF2, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), Path.Direction.CW);
            canvas.drawPath(this.replyRoundRectPath, Theme.chat_replyLinePaint);
            canvas.restore();
            if (this.siteNameLayout == null) {
            }
            if (!this.currentMessageObject.isOutOwner()) {
            }
            if (this.descriptionLayout == null) {
            }
            i3 = 1;
            this.drawTime = true;
        } else {
            i3 = 1;
            i4 = 4;
        }
        if (this.documentAttachType == i3) {
            if (this.currentMessageObject.isOutOwner()) {
                Theme.chat_docNamePaint.setColor(getThemedColor(Theme.key_chat_outFileNameText));
                Theme.chat_infoPaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outFileInfoSelectedText : Theme.key_chat_outFileInfoText));
                Theme.chat_docBackPaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outFileBackgroundSelected : Theme.key_chat_outFileBackground));
                drawable2 = getThemedDrawable(isDrawSelectionBackground() ? "drawableMsgOutMenuSelected" : "drawableMsgOutMenu");
            } else if (this.linkLine != null && this.hasLinkPreview) {
                Theme.chat_docNamePaint.setColor(Theme.adaptHue(getThemedColor(Theme.key_chat_inFileNameText), this.linkLine.getColor()));
                Theme.chat_infoPaint.setColor(Theme.adaptHue(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inFileInfoSelectedText : Theme.key_chat_inFileInfoText), this.linkLine.getColor()));
                Theme.chat_docBackPaint.setColor(Theme.adaptHue(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inFileBackgroundSelected : Theme.key_chat_inFileBackground), this.linkLine.getColor()));
                drawable2 = isDrawSelectionBackground() ? Theme.chat_msgInMenuSelectedDrawable : Theme.chat_msgInMenuDrawable;
            } else {
                Theme.chat_docNamePaint.setColor(getThemedColor(Theme.key_chat_inFileNameText));
                Theme.chat_infoPaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inFileInfoSelectedText : Theme.key_chat_inFileInfoText));
                Theme.chat_docBackPaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inFileBackgroundSelected : Theme.key_chat_inFileBackground));
                drawable2 = isDrawSelectionBackground() ? Theme.chat_msgInMenuSelectedDrawable : Theme.chat_msgInMenuDrawable;
            }
            if (this.drawPhotoImage) {
                if (this.currentMessageObject.type == 0) {
                    int imageX4 = (int) ((this.photoImage.getImageX() + this.backgroundWidth) - AndroidUtilities.dp((this.hasLinkPreview ? 12 : 0) + 56));
                    this.otherX = imageX4;
                    int imageY3 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(4.0f));
                    this.otherY = imageY3;
                    BaseCell.setDrawableBounds(drawable2, imageX4, imageY3);
                } else {
                    int imageX5 = (int) ((this.photoImage.getImageX() + this.backgroundWidth) - AndroidUtilities.dp((this.hasLinkPreview ? 12 : 0) + 40));
                    this.otherX = imageX5;
                    int imageY4 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(4.0f));
                    this.otherY = imageY4;
                    BaseCell.setDrawableBounds(drawable2, imageX5, imageY4);
                }
                dp = (int) (this.photoImage.getImageX() + this.photoImage.getImageWidth() + AndroidUtilities.dp(10.0f));
                dp2 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(8.0f));
                dp3 = (int) (this.photoImage.getImageY() + (this.docTitleLayout != null ? cachedStaticLayout2.getLineBottom(cachedStaticLayout2.getLineCount() - 1) + AndroidUtilities.dp(13.0f) : AndroidUtilities.dp(8.0f)));
                if (!this.imageDrawn) {
                    if (this.currentMessageObject.isOutOwner()) {
                        RadialProgress2 radialProgress23 = this.radialProgress;
                        int i23 = Theme.key_chat_outLoader;
                        int i24 = Theme.key_chat_outLoaderSelected;
                        int i25 = Theme.key_chat_outMediaIcon;
                        int i26 = Theme.key_chat_outMediaIconSelected;
                        radialProgress23.setColorKeys(i23, i24, i25, i26);
                        this.radialProgress.setProgressColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outFileProgressSelected : Theme.key_chat_outFileProgress));
                        this.videoRadialProgress.setColorKeys(i23, i24, i25, i26);
                        this.videoRadialProgress.setProgressColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outFileProgressSelected : Theme.key_chat_outFileProgress));
                    } else {
                        ReplyMessageLine replyMessageLine2 = this.linkLine;
                        if (replyMessageLine2 != null && this.hasLinkPreview) {
                            this.radialProgress.setColors(replyMessageLine2.getColor(), this.linkLine.getColor(), Theme.blendOver(-1, Theme.multAlpha(this.linkLine.getColor(), 0.01f)), Theme.blendOver(-1, Theme.multAlpha(this.linkLine.getColor(), 0.05f)));
                            this.radialProgress.setProgressColor(Theme.blendOver(-1, Theme.multAlpha(this.linkLine.getColor(), 0.01f)));
                            this.videoRadialProgress.setColors(this.linkLine.getColor(), this.linkLine.getColor(), Theme.blendOver(-1, Theme.multAlpha(this.linkLine.getColor(), 0.01f)), Theme.blendOver(-1, Theme.multAlpha(this.linkLine.getColor(), 0.05f)));
                            this.videoRadialProgress.setProgressColor(Theme.blendOver(-1, Theme.multAlpha(this.linkLine.getColor(), 0.01f)));
                        } else {
                            RadialProgress2 radialProgress24 = this.radialProgress;
                            int i27 = Theme.key_chat_inLoader;
                            int i28 = Theme.key_chat_inLoaderSelected;
                            int i29 = Theme.key_chat_inMediaIcon;
                            int i30 = Theme.key_chat_inMediaIconSelected;
                            radialProgress24.setColorKeys(i27, i28, i29, i30);
                            this.radialProgress.setProgressColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inFileProgressSelected : Theme.key_chat_inFileProgress));
                            this.videoRadialProgress.setColorKeys(i27, i28, i29, i30);
                            this.videoRadialProgress.setProgressColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inFileProgressSelected : Theme.key_chat_inFileProgress));
                        }
                    }
                    this.rect.set(this.photoImage.getImageX(), this.photoImage.getImageY(), this.photoImage.getImageX() + this.photoImage.getImageWidth(), this.photoImage.getImageY() + this.photoImage.getImageHeight());
                    int[] roundRadius2 = this.photoImage.getRoundRadius();
                    this.rectPath.reset();
                    for (int i31 = 0; i31 < roundRadius2.length; i31++) {
                        float[] fArr2 = radii;
                        int i32 = i31 * 2;
                        fArr2[i32] = roundRadius2[i31];
                        fArr2[i32 + 1] = roundRadius2[i31];
                    }
                    this.rectPath.addRoundRect(this.rect, radii, Path.Direction.CW);
                    this.rectPath.close();
                    canvas.drawPath(this.rectPath, Theme.chat_docBackPaint);
                } else {
                    RadialProgress2 radialProgress25 = this.radialProgress;
                    int i33 = Theme.key_chat_mediaLoaderPhoto;
                    int i34 = Theme.key_chat_mediaLoaderPhotoSelected;
                    int i35 = Theme.key_chat_mediaLoaderPhotoIcon;
                    int i36 = Theme.key_chat_mediaLoaderPhotoIconSelected;
                    radialProgress25.setColorKeys(i33, i34, i35, i36);
                    RadialProgress2 radialProgress26 = this.radialProgress;
                    int i37 = Theme.key_chat_mediaProgress;
                    radialProgress26.setProgressColor(getThemedColor(i37));
                    this.videoRadialProgress.setColorKeys(i33, i34, i35, i36);
                    this.videoRadialProgress.setProgressColor(getThemedColor(i37));
                    if (this.buttonState == -1 && this.radialProgress.getIcon() != i4) {
                        this.radialProgress.setIcon(i4, true, true);
                    }
                }
            } else {
                int dp10 = ((((int) f7) + this.backgroundWidth) - AndroidUtilities.dp(this.currentMessageObject.type == 0 ? 58.0f : 48.0f)) - AndroidUtilities.dp(this.hasLinkPreview ? 24.0f : 0.0f);
                this.otherX = dp10;
                int i38 = (int) f9;
                int dp11 = i38 - AndroidUtilities.dp(2.0f);
                this.otherY = dp11;
                BaseCell.setDrawableBounds(drawable2, dp10, dp11);
                dp = f7 + AndroidUtilities.dp(53.0f);
                dp2 = AndroidUtilities.dp(4.0f) + i38;
                dp3 = i38 + AndroidUtilities.dp(27.0f);
                CachedStaticLayout cachedStaticLayout4 = this.docTitleLayout;
                if (cachedStaticLayout4 != null && cachedStaticLayout4.getLineCount() > 1) {
                    dp3 += ((this.docTitleLayout.getLineCount() - 1) * AndroidUtilities.dp(16.0f)) + AndroidUtilities.dp(2.0f);
                }
                if (this.currentMessageObject.isOutOwner()) {
                    this.radialProgress.setProgressColor(getThemedColor((isDrawSelectionBackground() || this.buttonPressed != 0) ? Theme.key_chat_outAudioSelectedProgress : Theme.key_chat_outAudioProgress));
                    this.videoRadialProgress.setProgressColor(getThemedColor((isDrawSelectionBackground() || this.videoButtonPressed != 0) ? Theme.key_chat_outAudioSelectedProgress : Theme.key_chat_outAudioProgress));
                } else {
                    this.radialProgress.setProgressColor(getThemedColor((isDrawSelectionBackground() || this.buttonPressed != 0) ? Theme.key_chat_inAudioSelectedProgress : Theme.key_chat_inAudioProgress));
                    this.videoRadialProgress.setProgressColor(getThemedColor((isDrawSelectionBackground() || this.videoButtonPressed != 0) ? Theme.key_chat_inAudioSelectedProgress : Theme.key_chat_inAudioProgress));
                }
            }
            int i39 = dp2;
            float f25 = dp;
            if (shouldDrawMenuDrawable()) {
                TransitionParams transitionParams4 = this.transitionParams;
                if (transitionParams4.animateChangeProgress != f && transitionParams4.animateShouldDrawMenuDrawable) {
                    drawable2.setAlpha((int) (this.transitionParams.animateChangeProgress * 255.0f));
                }
                drawable2.draw(canvas);
                TransitionParams transitionParams5 = this.transitionParams;
                if (transitionParams5.animateChangeProgress != f && transitionParams5.animateShouldDrawMenuDrawable) {
                    drawable2.setAlpha(255);
                }
            }
            try {
                if (this.docTitleLayout != null) {
                    canvas.save();
                    canvas.translate(this.docTitleOffsetX + f25, i39);
                    this.docTitleLayout.draw(canvas);
                    canvas.restore();
                }
            } catch (Exception e) {
                FileLog.e(e);
            }
            try {
                if (this.infoLayout != null) {
                    canvas.save();
                    canvas.translate(f25, dp3);
                    if (this.buttonState == 1 && (cachedStaticLayout = this.loadingProgressLayout) != null) {
                        cachedStaticLayout.draw(canvas);
                    } else {
                        this.infoLayout.draw(canvas);
                    }
                    canvas.restore();
                }
            } catch (Exception e2) {
                FileLog.e(e2);
            }
        }
        MessageObject messageObject9 = this.currentMessageObject;
        if (messageObject9.type == i4 && !(MessageObject.getMedia(messageObject9.messageOwner) instanceof TLRPC$TL_messageMediaGeoLive) && this.currentMapProvider == 2 && this.photoImage.hasNotThumb()) {
            Drawable redLocationIcon = this.sharedResources.getRedLocationIcon();
            int intrinsicWidth = (int) (redLocationIcon.getIntrinsicWidth() * 0.8f);
            int intrinsicHeight = (int) (redLocationIcon.getIntrinsicHeight() * 0.8f);
            int imageX6 = (int) (this.photoImage.getImageX() + ((this.photoImage.getImageWidth() - intrinsicWidth) / 2.0f));
            int imageY5 = (int) ((this.photoImage.getImageY() + ((this.photoImage.getImageHeight() / 2.0f) - intrinsicHeight)) - (AndroidUtilities.dp(16.0f) * (f - CubicBezierInterpolator.EASE_OUT_BACK.getInterpolation(this.photoImage.getCurrentAlpha()))));
            redLocationIcon.setAlpha((int) (Math.min(f, this.photoImage.getCurrentAlpha() * 5.0f) * 255.0f));
            redLocationIcon.setBounds(imageX6, imageY5, intrinsicWidth + imageX6, intrinsicHeight + imageY5);
            redLocationIcon.draw(canvas);
            if (this.photoImage.getCurrentAlpha() < f) {
                invalidate();
            }
        }
        this.transitionParams.recordDrawingState();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$drawContent$10(Canvas canvas) {
        this.radialProgress.draw(canvas);
    }

    private void startRevealMedia(float f, float f2) {
        float sqrt = (float) Math.sqrt(Math.pow(this.photoImage.getImageWidth(), 2.0d) + Math.pow(this.photoImage.getImageHeight(), 2.0d));
        this.mediaSpoilerRevealMaxRadius = sqrt;
        startRevealMedia(f, f2, sqrt);
    }

    private void startRevealMedia(float f, float f2, float f3) {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject.isMediaSpoilersRevealed || this.mediaSpoilerRevealProgress != 0.0f) {
            return;
        }
        if (messageObject.type == 3) {
            messageObject.forceUpdate = true;
            messageObject.revealingMediaSpoilers = true;
            setMessageContent(messageObject, this.currentMessagesGroup, this.pinnedBottom, this.pinnedTop);
            MessageObject messageObject2 = this.currentMessageObject;
            messageObject2.revealingMediaSpoilers = false;
            messageObject2.forceUpdate = false;
            if (this.currentMessagesGroup != null) {
                this.radialProgress.setProgress(0.0f, false);
            }
        }
        this.mediaSpoilerRevealX = f;
        this.mediaSpoilerRevealY = f2;
        ValueAnimator duration = ValueAnimator.ofFloat(0.0f, 1.0f).setDuration(MathUtils.clamp(this.mediaSpoilerRevealMaxRadius * 0.3f, 250.0f, 550.0f));
        duration.setInterpolator(CubicBezierInterpolator.EASE_BOTH);
        duration.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda0
            @Override // android.animation.ValueAnimator.AnimatorUpdateListener
            public final void onAnimationUpdate(ValueAnimator valueAnimator) {
                ChatMessageCell.this.lambda$startRevealMedia$11(valueAnimator);
            }
        });
        duration.addListener(new AnimatorListenerAdapter() { // from class: org.telegram.ui.Cells.ChatMessageCell.8
            @Override // android.animation.AnimatorListenerAdapter, android.animation.Animator.AnimatorListener
            public void onAnimationEnd(Animator animator) {
                ChatMessageCell.this.currentMessageObject.isMediaSpoilersRevealed = true;
                ChatMessageCell.this.invalidate();
            }
        });
        duration.start();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$startRevealMedia$11(ValueAnimator valueAnimator) {
        this.mediaSpoilerRevealProgress = ((Float) valueAnimator.getAnimatedValue()).floatValue();
        invalidate();
    }

    public void drawBlurredPhoto(Canvas canvas) {
        if (this.currentMessageObject.isMediaSpoilersRevealed || this.mediaSpoilerRevealProgress == 1.0f) {
            return;
        }
        int[] roundRadius = this.photoImage.getRoundRadius();
        float[] fArr = this.mediaSpoilerRadii;
        float f = roundRadius[0];
        fArr[1] = f;
        fArr[0] = f;
        float f2 = roundRadius[1];
        fArr[3] = f2;
        fArr[2] = f2;
        float f3 = roundRadius[2];
        fArr[5] = f3;
        fArr[4] = f3;
        float f4 = roundRadius[3];
        fArr[7] = f4;
        fArr[6] = f4;
        this.mediaSpoilerPath.rewind();
        RectF rectF = AndroidUtilities.rectTmp;
        rectF.set(this.photoImage.getImageX(), this.photoImage.getImageY(), this.photoImage.getImageX2(), this.photoImage.getImageY2());
        this.mediaSpoilerPath.addRoundRect(rectF, this.mediaSpoilerRadii, Path.Direction.CW);
        canvas.save();
        canvas.clipPath(this.mediaSpoilerPath);
        if (this.mediaSpoilerRevealProgress != 0.0f) {
            this.mediaSpoilerPath.rewind();
            this.mediaSpoilerPath.addCircle(this.mediaSpoilerRevealX, this.mediaSpoilerRevealY, this.mediaSpoilerRevealMaxRadius * this.mediaSpoilerRevealProgress, Path.Direction.CW);
            canvas.clipPath(this.mediaSpoilerPath, Region.Op.DIFFERENCE);
        }
        if (this.currentMessageObject.needDrawBluredPreview()) {
            this.photoImage.draw(canvas);
        } else {
            this.blurredPhotoImage.setImageCoords(this.photoImage.getImageX(), this.photoImage.getImageY(), this.photoImage.getImageWidth(), this.photoImage.getImageHeight());
            this.blurredPhotoImage.setRoundRadius(this.photoImage.getRoundRadius());
            this.blurredPhotoImage.draw(canvas);
        }
        drawBlurredPhotoParticles(canvas);
        canvas.restore();
    }

    public void drawBlurredPhotoParticles(Canvas canvas) {
        if (this.mediaSpoilerEffect2 != null) {
            canvas.translate(this.photoImage.getImageX(), this.photoImage.getImageY());
            this.mediaSpoilerEffect2.draw(canvas, this, (int) this.photoImage.getImageWidth(), (int) this.photoImage.getImageHeight(), this.photoImage.getAlpha(), this.drawingToBitmap);
            return;
        }
        this.mediaSpoilerEffect.setColor(ColorUtils.setAlphaComponent(-1, (int) (Color.alpha(-1) * 0.325f * this.photoImage.getAlpha())));
        this.mediaSpoilerEffect.setBounds((int) this.photoImage.getImageX(), (int) this.photoImage.getImageY(), (int) this.photoImage.getImageX2(), (int) this.photoImage.getImageY2());
        this.mediaSpoilerEffect.draw(canvas);
        invalidate();
    }

    private float getUseTranscribeButtonProgress() {
        TransitionParams transitionParams = this.transitionParams;
        if (!transitionParams.animateUseTranscribeButton) {
            return this.useTranscribeButton ? 1.0f : 0.0f;
        } else if (this.useTranscribeButton) {
            return transitionParams.animateChangeProgress;
        } else {
            return 1.0f - transitionParams.animateChangeProgress;
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Code restructure failed: missing block: B:12:0x0020, code lost:
        if ((r1 & 1) != 0) goto L13;
     */
    /* JADX WARN: Removed duplicated region for block: B:96:0x01a2  */
    /* JADX WARN: Removed duplicated region for block: B:97:0x01c0  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void updateReactionLayoutPosition() {
        int i;
        float dp;
        ReactionsLayoutInBubble reactionsLayoutInBubble;
        if (this.currentMessageObject.shouldDrawReactions()) {
            ReactionsLayoutInBubble reactionsLayoutInBubble2 = this.reactionsLayoutInBubble;
            int i2 = 0;
            if (!reactionsLayoutInBubble2.isEmpty) {
                MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
                if (groupedMessagePosition != null) {
                    int i3 = groupedMessagePosition.flags;
                    if ((i3 & 8) != 0) {
                    }
                }
                if (!reactionsLayoutInBubble2.isSmall) {
                    MessageObject messageObject = this.currentMessageObject;
                    if (messageObject.type == 19 || messageObject.isAnimatedEmoji() || this.currentMessageObject.isAnyKindOfSticker()) {
                        if (this.currentMessageObject.isOutOwner()) {
                            this.reactionsLayoutInBubble.x = (getMeasuredWidth() - this.reactionsLayoutInBubble.width) - AndroidUtilities.dp(16.0f);
                        } else {
                            this.reactionsLayoutInBubble.x = getCurrentBackgroundLeft();
                        }
                    } else {
                        float f = 11.0f;
                        if (this.currentMessageObject.isOutOwner()) {
                            this.reactionsLayoutInBubble.x = getCurrentBackgroundLeft() + AndroidUtilities.dp(11.0f);
                        } else if (this.isRoundVideo) {
                            this.reactionsLayoutInBubble.x = getCurrentBackgroundLeft() + AndroidUtilities.dp(11.0f) + AndroidUtilities.dp(AndroidUtilities.lerp(0, !this.drawPinnedBottom ? 6 : 0, getVideoTranscriptionProgress()));
                            this.reactionsLayoutInBubble.x -= (int) ((1.0f - getVideoTranscriptionProgress()) * AndroidUtilities.dp(9.0f));
                        } else {
                            this.reactionsLayoutInBubble.x = getCurrentBackgroundLeft() + AndroidUtilities.dp((this.mediaBackground || !this.drawPinnedBottom) ? 17.0f : 17.0f);
                            if (this.mediaBackground) {
                                this.reactionsLayoutInBubble.x -= AndroidUtilities.dp(9.0f);
                            }
                        }
                    }
                    ReactionsLayoutInBubble reactionsLayoutInBubble3 = this.reactionsLayoutInBubble;
                    int backgroundDrawableBottom = getBackgroundDrawableBottom() - AndroidUtilities.dp(10.0f);
                    ReactionsLayoutInBubble reactionsLayoutInBubble4 = this.reactionsLayoutInBubble;
                    reactionsLayoutInBubble3.y = backgroundDrawableBottom - reactionsLayoutInBubble4.height;
                    reactionsLayoutInBubble4.y -= this.drawCommentButton ? AndroidUtilities.dp(43.0f) : 0;
                    if (this.hasNewLineForTime && (!this.drawForwardedName || !this.hasLinkPreview || this.documentAttachType != 3)) {
                        this.reactionsLayoutInBubble.y -= AndroidUtilities.dp(16.0f);
                    }
                    MessageObject messageObject2 = this.currentMessageObject;
                    int i4 = messageObject2.type;
                    if (i4 != 9 && this.captionLayout != null && ((i4 != 2 && (!messageObject2.isOut() || !this.drawForwardedName || this.drawPhotoImage)) || (this.currentPosition != null && this.currentMessagesGroup != null))) {
                        this.reactionsLayoutInBubble.y -= AndroidUtilities.dp(14.0f);
                    }
                    ReactionsLayoutInBubble reactionsLayoutInBubble5 = this.reactionsLayoutInBubble;
                    reactionsLayoutInBubble5.y += reactionsLayoutInBubble5.positionOffsetY;
                }
            }
            ReactionsLayoutInBubble reactionsLayoutInBubble6 = this.reactionsLayoutInBubble;
            if (!reactionsLayoutInBubble6.isSmall || reactionsLayoutInBubble6.isEmpty) {
                return;
            }
            if (shouldDrawTimeOnMedia()) {
                if (this.drawCommentButton) {
                    i2 = AndroidUtilities.dp(41.3f);
                }
            } else if (this.currentMessageObject.isSponsored()) {
                i = -AndroidUtilities.dp(48.0f);
                if (this.hasNewLineForTime) {
                    i -= AndroidUtilities.dp(16.0f);
                }
                ReactionsLayoutInBubble reactionsLayoutInBubble7 = this.reactionsLayoutInBubble;
                if (shouldDrawTimeOnMedia()) {
                    dp = ((this.layoutHeight - AndroidUtilities.dp((this.pinnedBottom || this.pinnedTop) ? 7.5f : 6.5f)) - this.timeLayout.layout.getHeight()) + i;
                } else {
                    dp = ((this.photoImage.getImageY2() + this.additionalTimeOffsetY) - AndroidUtilities.dp(7.3f)) - this.timeLayout.layout.getHeight();
                }
                reactionsLayoutInBubble7.y = (int) dp;
                this.reactionsLayoutInBubble.y = (int) (reactionsLayoutInBubble.y + ((this.timeLayout.layout.getHeight() / 2.0f) - AndroidUtilities.dp(7.0f)));
                this.reactionsLayoutInBubble.x = this.timeX;
            } else if (this.drawCommentButton) {
                i2 = AndroidUtilities.dp(43.0f);
            }
            i = -i2;
            ReactionsLayoutInBubble reactionsLayoutInBubble72 = this.reactionsLayoutInBubble;
            if (shouldDrawTimeOnMedia()) {
            }
            reactionsLayoutInBubble72.y = (int) dp;
            this.reactionsLayoutInBubble.y = (int) (reactionsLayoutInBubble.y + ((this.timeLayout.layout.getHeight() / 2.0f) - AndroidUtilities.dp(7.0f)));
            this.reactionsLayoutInBubble.x = this.timeX;
        }
    }

    public void drawVoiceOnce(Canvas canvas, float f, Runnable runnable) {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && messageObject.isVoiceOnce()) {
            float centerX = this.radialProgress.progressRect.centerX();
            double lerp = AndroidUtilities.lerp(190, 45, f) / 180.0f;
            Double.isNaN(lerp);
            float cos = centerX + (((float) Math.cos(lerp * 3.141592653589793d)) * AndroidUtilities.dp(22.6274f));
            float centerY = this.radialProgress.progressRect.centerY();
            double lerp2 = AndroidUtilities.lerp(190, 45, f) / 180.0f;
            Double.isNaN(lerp2);
            float sin = centerY + (((float) Math.sin(lerp2 * 3.141592653589793d)) * AndroidUtilities.dp(22.6274f));
            RectF rectF = AndroidUtilities.rectTmp;
            rectF.set(this.radialProgress.progressRect);
            rectF.inset(-AndroidUtilities.dp(1.0f), -AndroidUtilities.dp(1.0f));
            canvas.saveLayerAlpha(rectF, 255, 31);
            this.radialProgress.setBackgroundDrawable(isDrawSelectionBackground() ? this.currentBackgroundSelectedDrawable : this.currentBackgroundDrawable);
            this.radialProgress.iconScale = f;
            runnable.run();
            if (this.onceClearPaint == null) {
                Paint paint = new Paint(1);
                this.onceClearPaint = paint;
                paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));
            }
            if (f < 1.0f) {
                canvas.save();
                float f2 = 1.0f - f;
                float f3 = 0.7f * f2;
                float centerX2 = this.radialProgress.progressRect.centerX();
                RectF rectF2 = this.radialProgress.progressRect;
                canvas.scale(f3, f3, centerX2, AndroidUtilities.lerp(rectF2.top, rectF2.bottom, 0.5f));
                if (this.onceFire == null) {
                    RLottieDrawable rLottieDrawable = new RLottieDrawable(R.raw.fire_once, "fire_once", AndroidUtilities.dp(32.0f), AndroidUtilities.dp(32.0f), true, null);
                    this.onceFire = rLottieDrawable;
                    rLottieDrawable.setMasterParent(this);
                    this.onceFire.setAllowDecodeSingleFrame(true);
                    this.onceFire.setAutoRepeat(1);
                    this.onceFire.start();
                    this.onceFire.scaleByCanvas = true;
                }
                RLottieDrawable rLottieDrawable2 = this.onceFire;
                RectF rectF3 = this.radialProgress.progressRect;
                rLottieDrawable2.setBounds((int) rectF3.left, (int) rectF3.top, (int) rectF3.right, (int) rectF3.bottom);
                if (this.onceRadialPaint == null) {
                    this.onceRadialPaint = new Paint(1);
                }
                if (this.onceRadialCutPaint == null) {
                    Paint paint2 = new Paint(1);
                    this.onceRadialCutPaint = paint2;
                    paint2.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_IN));
                }
                if (this.onceRadialStrokePaint == null) {
                    Paint paint3 = new Paint(1);
                    this.onceRadialStrokePaint = paint3;
                    paint3.setStyle(Paint.Style.STROKE);
                }
                RadialProgress2 radialProgress2 = this.radialProgress;
                int i = radialProgress2.iconColorKey;
                int themedColor = i >= 0 ? getThemedColor(i) : radialProgress2.iconColor;
                this.onceRadialPaint.setColor(themedColor);
                this.onceRadialStrokePaint.setColor(themedColor);
                this.radialProgress.mediaActionDrawable.applyShaderMatrix(false);
                this.onceRadialPaint.setShader(this.radialProgress.mediaActionDrawable.paint2.getShader());
                this.onceRadialStrokePaint.setShader(this.radialProgress.mediaActionDrawable.paint2.getShader());
                rectF.set(this.onceFire.getBounds());
                canvas.saveLayerAlpha(rectF, 255, 31);
                rectF.inset(1.0f, 1.0f);
                canvas.drawRect(rectF, this.onceRadialPaint);
                this.onceFire.draw(canvas, this.onceRadialCutPaint);
                canvas.restore();
                canvas.restore();
                this.onceRadialStrokePaint.setAlpha((int) (255.0f * f2));
                this.onceRadialStrokePaint.setStrokeWidth(AndroidUtilities.dp(1.66f));
                this.rect.set(this.radialProgress.progressRect);
                this.rect.inset(AndroidUtilities.dp(3.0f), AndroidUtilities.dp(3.0f));
                canvas.drawArc(this.rect, -90.0f, (1.0f - this.seekBarWaveform.explodeProgress) * (-360.0f), false, this.onceRadialStrokePaint);
                if (this.timerParticles == null) {
                    this.timerParticles = new TimerParticles();
                }
                this.timerParticles.draw(canvas, this.onceRadialStrokePaint, this.rect, (1.0f - this.seekBarWaveform.explodeProgress) * (-360.0f), f2);
            } else {
                RLottieDrawable rLottieDrawable3 = this.onceFire;
                if (rLottieDrawable3 != null) {
                    rLottieDrawable3.recycle(true);
                    this.onceFire = null;
                    if (this.timerParticles != null) {
                        this.timerParticles = null;
                    }
                }
            }
            canvas.drawCircle(cos, sin, AndroidUtilities.dp((f * 1.5f) + 10.0f) * f, this.onceClearPaint);
            canvas.restore();
            if (this.oncePeriod == null) {
                CaptionContainerView.PeriodDrawable periodDrawable = new CaptionContainerView.PeriodDrawable(3);
                this.oncePeriod = periodDrawable;
                periodDrawable.updateColors(-1, 0, 0);
                CaptionContainerView.PeriodDrawable periodDrawable2 = this.oncePeriod;
                periodDrawable2.diameterDp = 14.0f;
                periodDrawable2.setTextSize(10.0f);
                this.oncePeriod.strokePaint.setStrokeWidth(AndroidUtilities.dpf2(1.5f));
                this.oncePeriod.setValue(1, false, false);
                this.oncePeriod.textOffsetX = -AndroidUtilities.dpf2(0.33f);
                this.oncePeriod.textOffsetY = AndroidUtilities.dpf2(0.33f);
            }
            CaptionContainerView.PeriodDrawable periodDrawable3 = this.oncePeriod;
            periodDrawable3.diameterDp = f * 14.0f;
            periodDrawable3.setTextSize(f * 10.0f);
            canvas.saveLayerAlpha(cos - AndroidUtilities.dp(10.0f), sin - AndroidUtilities.dp(10.0f), cos + AndroidUtilities.dp(10.0f), sin + AndroidUtilities.dp(10.0f), 255, 31);
            canvas.drawCircle(cos, sin, AndroidUtilities.dp(10.0f) * f, this.radialProgress.circlePaint);
            this.oncePeriod.setClear(AndroidUtilities.computePerceivedBrightness(this.radialProgress.circlePaint.getColor()) > 0.8f);
            this.oncePeriod.setCenterXY(cos, sin);
            this.oncePeriod.draw(canvas, f);
            canvas.restore();
            return;
        }
        runnable.run();
    }

    /* JADX WARN: Removed duplicated region for block: B:351:0x0938  */
    /* JADX WARN: Removed duplicated region for block: B:352:0x0958  */
    /* JADX WARN: Removed duplicated region for block: B:355:0x097b  */
    /* JADX WARN: Removed duplicated region for block: B:371:0x0a01  */
    /* JADX WARN: Removed duplicated region for block: B:386:0x0a81  */
    /* JADX WARN: Removed duplicated region for block: B:426:0x0ba8  */
    /* JADX WARN: Removed duplicated region for block: B:429:0x0bb8 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:431:0x0bbc  */
    /* JADX WARN: Removed duplicated region for block: B:434:0x0bcd  */
    /* JADX WARN: Removed duplicated region for block: B:435:0x0be7  */
    /* JADX WARN: Removed duplicated region for block: B:481:0x0d03  */
    /* JADX WARN: Removed duplicated region for block: B:489:0x0d39  */
    /* JADX WARN: Removed duplicated region for block: B:498:0x0d5f  */
    /* JADX WARN: Removed duplicated region for block: B:503:0x0da5  */
    /* JADX WARN: Removed duplicated region for block: B:508:0x0e46  */
    /* JADX WARN: Removed duplicated region for block: B:524:0x0ed5  */
    /* JADX WARN: Removed duplicated region for block: B:529:0x0f30  */
    /* JADX WARN: Removed duplicated region for block: B:532:0x0f3d  */
    /* JADX WARN: Removed duplicated region for block: B:542:0x0f8a  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void drawLinkPreview(Canvas canvas, float f) {
        int dp;
        int extraTextX;
        int i;
        int dp2;
        int i2;
        int i3;
        int dp3;
        boolean z;
        int i4;
        float f2;
        int i5;
        int i6;
        boolean z2;
        int i7;
        float f3;
        int i8;
        int i9;
        int i10;
        int dp4;
        float f4;
        boolean z3;
        boolean z4;
        int i11;
        int i12;
        float f5;
        int i13;
        float f6;
        float f7;
        Canvas canvas2;
        float f8;
        int i14;
        Paint themedPaint;
        Drawable drawable;
        float f9;
        int i15;
        int i16;
        int dp5;
        TransitionParams transitionParams;
        int i17;
        ChatMessageCellDelegate chatMessageCellDelegate;
        MessageObject messageObject;
        ReplyMessageLine replyMessageLine;
        float f10;
        int i18;
        float f11;
        float f12;
        float f13;
        int i19;
        float f14;
        float f15;
        CachedStaticLayout cachedStaticLayout;
        int i20;
        int i21;
        if (this.currentMessageObject.isSponsored() || this.currentMessageObject.isUnsupported() || this.hasLinkPreview || this.hasGamePreview || this.hasInvoicePreview) {
            int saveCount = canvas.getSaveCount();
            TransitionParams transitionParams2 = this.transitionParams;
            if (transitionParams2 != null) {
                float f16 = transitionParams2.deltaLeft;
                float f17 = transitionParams2.deltaRight;
            }
            float backgroundDrawableRight = getBackgroundDrawableRight();
            TransitionParams transitionParams3 = this.transitionParams;
            float dp6 = ((backgroundDrawableRight + (transitionParams3 != null ? transitionParams3.deltaRight : 0.0f)) - AndroidUtilities.dp(10 + ((!this.currentMessageObject.isOutOwner() || this.mediaBackground || this.drawPinnedBottom) ? 0 : 6))) - getExtraTextX();
            if (this.hasGamePreview) {
                i2 = AndroidUtilities.dp(14.0f) + this.namesOffset;
                dp2 = this.unmovedTextX - AndroidUtilities.dp(10.0f);
            } else {
                if (this.hasInvoicePreview) {
                    i2 = AndroidUtilities.dp(14.0f) + this.namesOffset;
                    i3 = this.unmovedTextX;
                    dp3 = AndroidUtilities.dp(1.0f);
                } else if (this.currentMessageObject.isSponsored()) {
                    i2 = this.linkPreviewY - AndroidUtilities.dp(2.0f);
                    i3 = this.unmovedTextX;
                    dp3 = AndroidUtilities.dp(1.0f);
                } else {
                    if (this.currentMessageObject.isOutOwner()) {
                        i = this.backgroundDrawableLeft + AndroidUtilities.dp(12.0f) + getExtraTextX();
                        if (this.currentMessageObject.type == 19) {
                            i -= Math.max(0, ((Math.max(this.replyNameWidth, this.replyTextWidth) + i) + AndroidUtilities.dp(14.0f)) - AndroidUtilities.displaySize.x);
                        }
                    } else {
                        if (this.mediaBackground) {
                            dp = this.backgroundDrawableLeft + AndroidUtilities.dp(12.0f);
                            extraTextX = getExtraTextX();
                        } else {
                            dp = this.backgroundDrawableLeft + AndroidUtilities.dp(this.drawPinnedBottom ? 12.0f : 18.0f);
                            extraTextX = getExtraTextX();
                        }
                        i = dp + extraTextX;
                    }
                    dp2 = ((int) (i + this.transitionParams.deltaLeft)) - AndroidUtilities.dp(1.33f);
                    i2 = this.linkPreviewY;
                    TransitionParams transitionParams4 = this.transitionParams;
                    if (transitionParams4.animateLinkPreviewY) {
                        i2 = AndroidUtilities.lerp(transitionParams4.animateFromLinkPreviewY, i2, transitionParams4.animateChangeProgress);
                    }
                }
                dp2 = i3 + dp3;
            }
            int i22 = i2;
            int i23 = dp2;
            float f18 = i23;
            int i24 = (int) (dp6 - f18);
            int i25 = this.linkPreviewHeight;
            TransitionParams transitionParams5 = this.transitionParams;
            if (transitionParams5 != null && transitionParams5.animateLinkPreviewHeight) {
                i25 = AndroidUtilities.lerp(transitionParams5.animateFromLinkPreviewHeight, i25, transitionParams5.animateChangeProgress);
            }
            int i26 = i25;
            if (this.linkLine == null) {
                this.linkLine = new ReplyMessageLine(this);
            }
            Theme.chat_replyNamePaint.setColor(this.linkLine.check(this.currentMessageObject, this.currentUser, this.currentChat, this.resourcesProvider, 3));
            ReplyMessageLine replyMessageLine2 = this.linkLine;
            int i27 = this.drawInstantViewType;
            replyMessageLine2.setEmojiAlpha((i27 == 23 || i27 == 24) ? 0.5f : 1.0f);
            boolean z5 = this.drawInstantView;
            boolean z6 = !(!z5 || (i21 = this.drawInstantViewType) == 9 || i21 == 2 || i21 == 13 || i21 == 11 || i21 == 1 || i21 == 18 || i21 == 22) || (this.drawInstantViewType == 6 && this.imageBackgroundColor != 0);
            boolean z7 = !z5 || (i20 = this.drawInstantViewType) == 9 || i20 == 2 || i20 == 11 || i20 == 13 || i20 == 1 || i20 == 18 || i20 == 22 || this.isSmallImage;
            ChatMessageCellDelegate chatMessageCellDelegate2 = this.delegate;
            boolean z8 = chatMessageCellDelegate2 != null && chatMessageCellDelegate2.isProgressLoading(this, 2);
            if (this.hasInvoicePreview || this.currentMessageObject.isGiveawayOrGiveawayResults() || this.currentMessageObject.isUnsupported()) {
                z = z8;
                i4 = i24;
                f2 = f18;
                i5 = i23;
                i6 = i22;
                z2 = false;
            } else {
                if (this.linkPreviewBounce == null) {
                    this.linkPreviewBounce = new ButtonBounce(this, 2.0f, 2.0f);
                }
                canvas.save();
                float scale = this.linkPreviewBounce.getScale(0.01f);
                canvas.scale(scale, scale, (i24 / 2.0f) + f18, i22 + ((i26 + (this.drawInstantView ? AndroidUtilities.dp(42.0f) : 0)) / 2.0f));
                RectF rectF = AndroidUtilities.rectTmp;
                rectF.set(f18, i22 - AndroidUtilities.dp(6.0f), i23 + i24, i22 + i26 + (this.drawInstantView ? AndroidUtilities.dp(42.0f) : 0));
                this.linkLine.setLoading(z8);
                float floor = (float) Math.floor(SharedConfig.bubbleRadius / (this.currentMessageObject.isSponsored() ? 2.0f : 3.0f));
                ReplyMessageLine replyMessageLine3 = this.linkLine;
                if (z6) {
                    f15 = (1.0f - isSmallImage()) * (AndroidUtilities.dp(18.0f) + this.photoImage.getImageHeight() + (this.siteNameLayout != null ? cachedStaticLayout.getLineBottom(cachedStaticLayout.getLineCount() - 1) : 0));
                } else {
                    f15 = 0.0f;
                }
                z = z8;
                i4 = i24;
                f2 = f18;
                i5 = i23;
                i6 = i22;
                replyMessageLine3.offsetEmoji(0.0f, f15).drawBackground(canvas, rectF, floor, floor, floor, f);
                int backgroundColor = this.linkLine.getBackgroundColor();
                Drawable drawable2 = this.linkPreviewSelector;
                if (drawable2 == null) {
                    this.linkPreviewSelectorColor = backgroundColor;
                    Drawable createRadSelectorDrawable = Theme.createRadSelectorDrawable(backgroundColor, 0, 0);
                    this.linkPreviewSelector = createRadSelectorDrawable;
                    createRadSelectorDrawable.setCallback(this);
                    Theme.setMaskDrawableRad(this.linkPreviewSelector, 3.0f, 6.0f, 6.0f, 3.0f);
                    this.linkPreviewSelector.setCallback(this);
                } else if (this.linkPreviewSelectorColor != backgroundColor) {
                    this.linkPreviewSelectorColor = backgroundColor;
                    Theme.setSelectorDrawableColor(drawable2, backgroundColor, true);
                }
                this.linkPreviewSelector.setBounds((int) rectF.left, (int) rectF.top, (int) rectF.right, (int) rectF.bottom);
                this.linkPreviewSelector.draw(canvas);
                this.linkLine.drawLine(canvas, rectF, f);
                this.linkLine.drawLoadingBackground(canvas, rectF, floor, floor, floor, f);
                z2 = true;
            }
            if (this.siteNameLayout != null) {
                if (this.titleLabelLayout != null) {
                    f13 = 1.0f;
                    i19 = i6 + AndroidUtilities.dp(1.0f);
                } else {
                    f13 = 1.0f;
                    i19 = i6;
                }
                int dp7 = i19 - AndroidUtilities.dp(f13);
                int alpha = Theme.chat_replyNamePaint.getAlpha();
                if (f != f13) {
                    Theme.chat_replyNamePaint.setAlpha((int) (alpha * f));
                }
                canvas.save();
                if (Math.abs(this.siteNameLeft) > 1.0f) {
                    f14 = ((i4 - AndroidUtilities.dp(this.hasInvoicePreview ? 0.0f : 20.0f)) - this.siteNameWidth) - this.siteNameLeft;
                } else {
                    f14 = 0.0f;
                }
                f3 = f2;
                float dp8 = f3 + f14 + (this.hasInvoicePreview ? 0 : AndroidUtilities.dp(10.0f));
                canvas.translate(dp8, i19 - AndroidUtilities.dp(1.0f));
                this.siteNameLayout.draw(canvas);
                canvas.restore();
                if (this.titleLabelLayout != null) {
                    float dp9 = dp8 + this.siteNameLayoutWidth + AndroidUtilities.dp(12.0f);
                    this.titleLabelX = dp9;
                    this.titleLabelY = i19;
                    i9 = dp7;
                    i7 = saveCount;
                    this.rect.set(dp9 - AndroidUtilities.dp(6.0f), this.titleLabelY - AndroidUtilities.dp(2.0f), this.titleLabelX + this.titleLabelLayoutWidth + AndroidUtilities.dp(6.0f), this.titleLabelY + this.titleLabelLayoutHeight + AndroidUtilities.dp(2.0f));
                    if (this.titleLabelBounce == null) {
                        this.titleLabelBounce = new ButtonBounce(this);
                    }
                    float scale2 = this.titleLabelBounce.getScale(0.1f);
                    boolean z9 = scale2 != 1.0f;
                    if (z9) {
                        canvas.save();
                        canvas.scale(scale2, scale2, this.rect.centerX(), this.rect.centerY());
                    }
                    Theme.chat_instantViewPaint.setColor(Theme.chat_replyNamePaint.getColor());
                    int alpha2 = Theme.chat_instantViewPaint.getAlpha();
                    Theme.chat_instantViewPaint.setAlpha((int) (alpha * 0.11f));
                    RectF rectF2 = this.rect;
                    canvas.drawRoundRect(rectF2, rectF2.height(), this.rect.height(), Theme.chat_instantViewPaint);
                    Theme.chat_instantViewPaint.setAlpha(alpha2);
                    Theme.chat_titleLabelTextPaint.setColor(Theme.chat_replyNamePaint.getColor());
                    Theme.chat_titleLabelTextPaint.setAlpha(Theme.chat_replyNamePaint.getAlpha());
                    canvas.save();
                    canvas.translate(this.titleLabelX, this.titleLabelY);
                    this.titleLabelLayout.draw(canvas);
                    canvas.restore();
                    if (z9) {
                        canvas.restore();
                    }
                } else {
                    i9 = dp7;
                    i7 = saveCount;
                }
                CachedStaticLayout cachedStaticLayout2 = this.siteNameLayout;
                i8 = i19 + cachedStaticLayout2.getLineBottom(cachedStaticLayout2.getLineCount() - 1);
                Theme.chat_replyNamePaint.setAlpha(alpha);
            } else {
                i7 = saveCount;
                f3 = f2;
                i8 = i6;
                i9 = 0;
            }
            if ((this.hasGamePreview || this.hasInvoicePreview) && (i10 = this.currentMessageObject.textHeight) != 0) {
                i8 += this.currentMessageObject.textHeight + AndroidUtilities.dp(4.0f);
                dp4 = i6 + i10 + AndroidUtilities.dp(4.0f);
            } else {
                dp4 = i6;
            }
            if (this.drawPhotoImage && z6) {
                if (this.isSmallImage) {
                    TransitionParams transitionParams6 = this.transitionParams;
                    if (transitionParams6 != null && transitionParams6.animateSmallImage) {
                        i8 = (int) (i8 + (((i8 != dp4 ? AndroidUtilities.dp(2.0f) : 0) + this.transitionParams.photoImageFromHeight + AndroidUtilities.dp(6.0f)) * (1.0f - this.transitionParams.animateChangeProgress)));
                    }
                } else {
                    TransitionParams transitionParams7 = this.transitionParams;
                    float f19 = (transitionParams7 == null || !transitionParams7.animateSmallImage) ? 1.0f : transitionParams7.animateChangeProgress;
                    if (i8 != dp4) {
                        i8 = (int) (i8 + (AndroidUtilities.dp(2.0f) * f19));
                    }
                    int dp10 = i4 - AndroidUtilities.dp(17.0f);
                    if (this.isSmallImage || this.drawInstantViewType != 17) {
                        z3 = z2;
                        z4 = z;
                        i18 = i5;
                        f11 = 0.0f;
                    } else {
                        Rect rect = AndroidUtilities.rectTmp2;
                        i18 = i5;
                        rect.set(AndroidUtilities.dp(10.0f) + i18, i8, AndroidUtilities.dp(10.0f) + i18 + dp10, ((int) this.photoImage.getImageHeight()) + i8);
                        RectF rectF3 = AndroidUtilities.rectTmp;
                        rectF3.set(rect);
                        if (this.gradientDrawable == null) {
                            TLRPC$PhotoSize tLRPC$PhotoSize = this.currentPhotoObject;
                            if (tLRPC$PhotoSize != null && tLRPC$PhotoSize.gradientTopColor != 0 && tLRPC$PhotoSize.gradientBottomColor != 0) {
                                GradientDrawable.Orientation orientation = GradientDrawable.Orientation.TOP_BOTTOM;
                                z4 = z;
                                TLRPC$PhotoSize tLRPC$PhotoSize2 = this.currentPhotoObject;
                                z3 = z2;
                                this.gradientDrawable = new GradientDrawable(orientation, new int[]{tLRPC$PhotoSize2.gradientTopColor, tLRPC$PhotoSize2.gradientBottomColor});
                            } else {
                                z3 = z2;
                                z4 = z;
                                if (this.photoImage.getBitmap() != null) {
                                    int[] colorsSync = DominantColors.getColorsSync(false, this.photoImage.getBitmap(), Theme.isCurrentThemeDark());
                                    this.gradientDrawable = new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM, colorsSync);
                                    TLRPC$PhotoSize tLRPC$PhotoSize3 = this.currentPhotoObject;
                                    if (tLRPC$PhotoSize3 != null) {
                                        tLRPC$PhotoSize3.gradientTopColor = colorsSync[0];
                                        tLRPC$PhotoSize3.gradientBottomColor = colorsSync[1];
                                    }
                                }
                            }
                        } else {
                            z3 = z2;
                            z4 = z;
                        }
                        if (this.gradientDrawable != null) {
                            canvas.save();
                            Path path = this.drillHolePath;
                            if (path != null) {
                                path.rewind();
                            } else {
                                this.drillHolePath = new Path();
                            }
                            this.drillHolePath.addRoundRect(rectF3, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), Path.Direction.CW);
                            canvas.clipPath(this.drillHolePath);
                            this.gradientDrawable.setBounds(rect);
                            this.gradientDrawable.draw(canvas);
                            canvas.restore();
                        }
                        f11 = (((this.instantWidth - this.photoImage.getImageWidth()) - AndroidUtilities.dp(10.0f)) - (this.transitionParams == null ? 0.0f : this.currentMessageObject.isOutOwner() ? this.transitionParams.deltaLeft : -this.transitionParams.deltaRight)) / 2.0f;
                    }
                    if (this.imageBackgroundSideColor != 0) {
                        int dp11 = AndroidUtilities.dp(10.0f) + i18;
                        ImageReceiver imageReceiver = this.photoImage;
                        float f20 = dp11;
                        imageReceiver.setImageX(f11 + f20 + ((this.imageBackgroundSideWidth - imageReceiver.getImageWidth()) / 2.0f));
                        this.photoImage.setImageY(i8);
                        this.rect.set(f20, this.photoImage.getImageY(), dp11 + this.imageBackgroundSideWidth, this.photoImage.getImageY2());
                        Theme.chat_instantViewPaint.setColor(ColorUtils.setAlphaComponent(this.imageBackgroundSideColor, (int) (f * 255.0f)));
                        canvas.drawRoundRect(this.rect, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), Theme.chat_instantViewPaint);
                    } else {
                        this.photoImage.setImageX(f11 + f3 + AndroidUtilities.dp(10.0f));
                        this.photoImage.setImageY(i8);
                    }
                    if (this.drawInstantViewType != 17) {
                        TransitionParams transitionParams8 = this.transitionParams;
                        if (transitionParams8 != null && transitionParams8.animateSmallImage) {
                            if (!this.isSmallImage && this.documentAttachType != 1) {
                                this.photoImage.setImageWidth((int) AndroidUtilities.lerp(transitionParams8.photoImageFromWidth, dp10, transitionParams8.animateChangeProgress));
                            }
                            ImageReceiver imageReceiver2 = this.photoImage;
                            imageReceiver2.setImageX(AndroidUtilities.lerp(this.transitionParams.photoImageFromCenterX, imageReceiver2.getCenterX(), this.transitionParams.animateChangeProgress) - (this.photoImage.getImageWidth() / 2.0f));
                            ImageReceiver imageReceiver3 = this.photoImage;
                            imageReceiver3.setImageY(AndroidUtilities.lerp(this.transitionParams.photoImageFromCenterY, imageReceiver3.getCenterY(), this.transitionParams.animateChangeProgress) - (this.photoImage.getImageHeight() / 2.0f));
                        } else if (!this.isSmallImage && this.documentAttachType != 1) {
                            this.photoImage.setImageWidth(dp10);
                        }
                    }
                    if (this.imageBackgroundColor != 0) {
                        this.rect.set(this.photoImage.getImageX(), this.photoImage.getImageY(), this.photoImage.getImageX2(), this.photoImage.getImageY2());
                        if (this.imageBackgroundGradientColor1 != 0) {
                            if (this.imageBackgroundGradientColor2 != 0) {
                                if (this.motionBackgroundDrawable == null) {
                                    MotionBackgroundDrawable motionBackgroundDrawable = new MotionBackgroundDrawable(this.imageBackgroundColor, this.imageBackgroundGradientColor1, this.imageBackgroundGradientColor2, this.imageBackgroundGradientColor3, true);
                                    this.motionBackgroundDrawable = motionBackgroundDrawable;
                                    if (this.imageBackgroundIntensity < 0.0f) {
                                        this.photoImage.setGradientBitmap(motionBackgroundDrawable.getBitmap());
                                    }
                                    if (!this.photoImage.hasImageSet()) {
                                        this.motionBackgroundDrawable.setRoundRadius(AndroidUtilities.dp(4.0f));
                                    }
                                }
                            } else {
                                if (this.gradientShader == null) {
                                    Rect gradientPoints = BackgroundGradientDrawable.getGradientPoints(AndroidUtilities.getWallpaperRotation(this.imageBackgroundGradientRotation, false), (int) this.rect.width(), (int) this.rect.height());
                                    this.gradientShader = new LinearGradient(gradientPoints.left, gradientPoints.top, gradientPoints.right, gradientPoints.bottom, new int[]{this.imageBackgroundColor, this.imageBackgroundGradientColor1}, (float[]) null, Shader.TileMode.CLAMP);
                                }
                                Theme.chat_instantViewPaint.setShader(this.gradientShader);
                                if (f != 1.0f) {
                                    Theme.chat_instantViewPaint.setAlpha((int) (f * 255.0f));
                                }
                            }
                        } else {
                            Theme.chat_instantViewPaint.setShader(null);
                            Theme.chat_instantViewPaint.setColor(this.imageBackgroundColor);
                            if (f != 1.0f) {
                                Theme.chat_instantViewPaint.setAlpha((int) (f * 255.0f));
                            }
                        }
                        MotionBackgroundDrawable motionBackgroundDrawable2 = this.motionBackgroundDrawable;
                        if (motionBackgroundDrawable2 != null) {
                            RectF rectF4 = this.rect;
                            motionBackgroundDrawable2.setBounds((int) rectF4.left, (int) rectF4.top, (int) rectF4.right, (int) rectF4.bottom);
                            this.motionBackgroundDrawable.draw(canvas);
                            i11 = i18;
                            f4 = f3;
                        } else if (this.imageBackgroundSideColor != 0) {
                            i11 = i18;
                            f4 = f3;
                            canvas.drawRect(this.photoImage.getImageX(), this.photoImage.getImageY(), this.photoImage.getImageX2(), this.photoImage.getImageY2(), Theme.chat_instantViewPaint);
                        } else {
                            i11 = i18;
                            f4 = f3;
                            canvas.drawRoundRect(this.rect, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), Theme.chat_instantViewPaint);
                        }
                        Theme.chat_instantViewPaint.setShader(null);
                        Theme.chat_instantViewPaint.setAlpha(255);
                    } else {
                        i11 = i18;
                        f4 = f3;
                    }
                    if (this.drawPhotoImage && this.drawInstantView && this.drawInstantViewType != 9) {
                        if (this.drawImageButton) {
                            int dp12 = AndroidUtilities.dp(48.0f);
                            float f21 = dp12;
                            int imageX = (int) (this.photoImage.getImageX() + ((this.photoImage.getImageWidth() - f21) / 2.0f));
                            this.buttonX = imageX;
                            this.buttonX = imageX;
                            int imageY = (int) (this.photoImage.getImageY() + ((this.photoImage.getImageHeight() - f21) / 2.0f));
                            this.buttonY = imageY;
                            this.buttonY = imageY;
                            RadialProgress2 radialProgress2 = this.radialProgress;
                            int i28 = this.buttonX;
                            radialProgress2.setProgressRect(i28, imageY, i28 + dp12, dp12 + imageY);
                        }
                        ChatMessageCellDelegate chatMessageCellDelegate3 = this.delegate;
                        if (chatMessageCellDelegate3 == null || chatMessageCellDelegate3.getPinchToZoomHelper() == null || !this.delegate.getPinchToZoomHelper().isInOverlayModeFor(this)) {
                            if (f != 1.0f) {
                                this.photoImage.setAlpha(f);
                                if (allowDrawPhotoImage()) {
                                    this.imageDrawn = this.photoImage.draw(canvas);
                                } else {
                                    this.imageDrawn = true;
                                }
                                if (this.currentMessageObject.hasMediaSpoilers()) {
                                    this.blurredPhotoImage.setAlpha(f);
                                    drawBlurredPhoto(canvas);
                                    f12 = 1.0f;
                                    this.blurredPhotoImage.setAlpha(1.0f);
                                } else {
                                    f12 = 1.0f;
                                }
                                this.photoImage.setAlpha(f12);
                            } else {
                                if (allowDrawPhotoImage()) {
                                    this.imageDrawn = this.photoImage.draw(canvas);
                                } else {
                                    this.imageDrawn = true;
                                }
                                if (this.currentMessageObject.hasMediaSpoilers()) {
                                    drawBlurredPhoto(canvas);
                                }
                            }
                        }
                    }
                    TransitionParams transitionParams9 = this.transitionParams;
                    if (transitionParams9 != null && transitionParams9.animateChange) {
                        i8 = (int) (i8 + (f19 * (transitionParams9.animateToImageH + AndroidUtilities.dp(6.0f))));
                        if (this.currentMessageObject.isOutOwner()) {
                        }
                        if (this.titleLayout != null) {
                        }
                        if (this.authorLayout != null) {
                        }
                        if (this.descriptionLayout != null) {
                        }
                        int i29 = i9;
                        if (this.drawPhotoImage) {
                            if (i8 != i12) {
                            }
                            dp5 = i13 - AndroidUtilities.dp(17.0f);
                            if (!this.isSmallImage) {
                            }
                            transitionParams = this.transitionParams;
                            if (transitionParams == null) {
                            }
                            if (!this.isSmallImage) {
                                this.photoImage.setImageWidth(dp5);
                            }
                            if (!this.isSmallImage) {
                                int dp13 = AndroidUtilities.dp(48.0f);
                                float f22 = dp13;
                                int imageX2 = (int) (this.photoImage.getImageX() + ((this.photoImage.getImageWidth() - f22) / f6));
                                this.buttonX = imageX2;
                                this.buttonX = imageX2;
                                int imageY2 = (int) (this.photoImage.getImageY() + ((this.photoImage.getImageHeight() - f22) / f6));
                                this.buttonY = imageY2;
                                this.buttonY = imageY2;
                                RadialProgress2 radialProgress22 = this.radialProgress;
                                int i30 = this.buttonX;
                                radialProgress22.setProgressRect(i30, imageY2, i30 + dp13, dp13 + imageY2);
                            }
                            if (!this.isRoundVideo) {
                            }
                            chatMessageCellDelegate = this.delegate;
                            if (chatMessageCellDelegate != null) {
                            }
                            f8 = f;
                            if (f8 == 1.0f) {
                            }
                            i14 = this.documentAttachType;
                            if (i14 != 4) {
                            }
                            this.videoButtonX = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(8.0f));
                            int imageY3 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(8.0f));
                            this.videoButtonY = imageY3;
                            RadialProgress2 radialProgress23 = this.videoRadialProgress;
                            int i31 = this.videoButtonX;
                            radialProgress23.setProgressRect(i31, imageY3, AndroidUtilities.dp(24.0f) + i31, this.videoButtonY + AndroidUtilities.dp(24.0f));
                            themedPaint = getThemedPaint("paintChatTimeBackground");
                            if (this.photosCountLayout != null) {
                            }
                            if (this.videoInfoLayout != null) {
                            }
                            this.giveawayMessageCell.draw(canvas2, this.namesOffset, i11, this.resourcesProvider);
                            this.giveawayResultsMessageCell.draw(canvas2, this.namesOffset, i11, this.resourcesProvider);
                            if (this.drawInstantView) {
                            }
                            canvas2.restoreToCount(i7);
                        }
                        canvas2 = canvas;
                        f8 = f;
                        i14 = this.documentAttachType;
                        if (i14 != 4) {
                        }
                        this.videoButtonX = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(8.0f));
                        int imageY32 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(8.0f));
                        this.videoButtonY = imageY32;
                        RadialProgress2 radialProgress232 = this.videoRadialProgress;
                        int i312 = this.videoButtonX;
                        radialProgress232.setProgressRect(i312, imageY32, AndroidUtilities.dp(24.0f) + i312, this.videoButtonY + AndroidUtilities.dp(24.0f));
                        themedPaint = getThemedPaint("paintChatTimeBackground");
                        if (this.photosCountLayout != null) {
                        }
                        if (this.videoInfoLayout != null) {
                        }
                        this.giveawayMessageCell.draw(canvas2, this.namesOffset, i11, this.resourcesProvider);
                        this.giveawayResultsMessageCell.draw(canvas2, this.namesOffset, i11, this.resourcesProvider);
                        if (this.drawInstantView) {
                        }
                        canvas2.restoreToCount(i7);
                    }
                    i8 = (int) (i8 + (f19 * (this.photoImage.getImageHeight() + AndroidUtilities.dp(6.0f))));
                    if (this.currentMessageObject.isOutOwner()) {
                        TextPaint textPaint = Theme.chat_replyNamePaint;
                        int i32 = Theme.key_chat_messageTextOut;
                        int i33 = (int) (f * 255.0f);
                        textPaint.setColor(ColorUtils.setAlphaComponent(getThemedColor(i32), i33));
                        Theme.chat_replyTextPaint.setColor(ColorUtils.setAlphaComponent(getThemedColor(i32), i33));
                    } else {
                        TextPaint textPaint2 = Theme.chat_replyNamePaint;
                        int i34 = Theme.key_chat_messageTextIn;
                        int i35 = (int) (f * 255.0f);
                        textPaint2.setColor(ColorUtils.setAlphaComponent(getThemedColor(i34), i35));
                        Theme.chat_replyTextPaint.setColor(ColorUtils.setAlphaComponent(getThemedColor(i34), i35));
                    }
                    if (this.titleLayout != null) {
                        if (i8 != dp4) {
                            i8 += AndroidUtilities.dp(4.0f);
                            f10 = 1.0f;
                            AndroidUtilities.dp(1.0f);
                        } else {
                            f10 = 1.0f;
                        }
                        if (i9 == 0) {
                            i9 = i8 - AndroidUtilities.dp(f10);
                        }
                        canvas.save();
                        float dp14 = i11 + AndroidUtilities.dp(10.0f) + (Math.abs(this.titleLayoutLeft) > 1 ? ((i4 - AndroidUtilities.dp(20.0f)) - this.titleLayoutWidth) - this.titleLayoutLeft : 0);
                        float dp15 = i8 - AndroidUtilities.dp(3.0f);
                        TransitionParams transitionParams10 = this.transitionParams;
                        canvas.translate(dp14, dp15 + (!transitionParams10.animateLinkPreviewY ? transitionParams10.deltaBottom + (-transitionParams10.deltaTop) : 0.0f));
                        TextPaint paint = this.titleLayout.getPaint();
                        int alpha3 = paint.getAlpha();
                        paint.setAlpha((int) (alpha3 * f));
                        this.titleLayout.draw(canvas);
                        paint.setAlpha(alpha3);
                        canvas.restore();
                        CachedStaticLayout cachedStaticLayout3 = this.titleLayout;
                        i8 += cachedStaticLayout3.getLineBottom(cachedStaticLayout3.getLineCount() - 1);
                    }
                    if (this.authorLayout != null) {
                        if (i8 != dp4) {
                            i8 += AndroidUtilities.dp(2.0f);
                        }
                        if (i9 == 0) {
                            i9 = i8 - AndroidUtilities.dp(1.0f);
                        }
                        canvas.save();
                        float dp16 = i11 + AndroidUtilities.dp(10.0f) + (Math.abs(this.authorLayoutLeft) > 1 ? ((i4 - AndroidUtilities.dp(20.0f)) - this.authorLayoutWidth) - this.authorLayoutLeft : 0);
                        float dp17 = i8 - AndroidUtilities.dp(3.0f);
                        TransitionParams transitionParams11 = this.transitionParams;
                        canvas.translate(dp16, dp17 + (!transitionParams11.animateLinkPreviewY ? transitionParams11.deltaBottom + (-transitionParams11.deltaTop) : 0.0f));
                        TextPaint paint2 = this.authorLayout.getPaint();
                        int alpha4 = paint2.getAlpha();
                        paint2.setAlpha((int) (alpha4 * f));
                        this.authorLayout.draw(canvas);
                        paint2.setAlpha(alpha4);
                        canvas.restore();
                        CachedStaticLayout cachedStaticLayout4 = this.authorLayout;
                        i8 += cachedStaticLayout4.getLineBottom(cachedStaticLayout4.getLineCount() - 1);
                    }
                    if (this.descriptionLayout != null) {
                        f6 = 2.0f;
                        if (i8 != dp4) {
                            i8 += AndroidUtilities.dp(2.0f);
                        }
                        int i36 = i8;
                        if (i9 == 0) {
                            i9 = i36 - AndroidUtilities.dp(1.0f);
                        }
                        this.descriptionY = i36 - AndroidUtilities.dp(3.0f);
                        canvas.save();
                        float dp18 = i11 + AndroidUtilities.dp(10.0f) + (Math.abs(this.descriptionLayoutLeft) > 1 ? ((i4 - AndroidUtilities.dp(20.0f)) - this.descriptionLayoutWidth) - this.descriptionLayoutLeft : 0);
                        float f23 = this.descriptionY;
                        TransitionParams transitionParams12 = this.transitionParams;
                        canvas.translate(dp18, f23 + (!transitionParams12.animateLinkPreviewY ? transitionParams12.deltaBottom + (-transitionParams12.deltaTop) : 0.0f));
                        if (this.linkBlockNum == -10 && this.links.draw(canvas)) {
                            invalidate();
                        }
                        drawProgressLoadingLink(canvas, -2);
                        ChatMessageCellDelegate chatMessageCellDelegate4 = this.delegate;
                        if (chatMessageCellDelegate4 != null && chatMessageCellDelegate4.getTextSelectionHelper() != null && getDelegate().getTextSelectionHelper().isSelected(this.currentMessageObject)) {
                            this.delegate.getTextSelectionHelper().drawDescription(this.currentMessageObject.isOutOwner(), this.descriptionLayout.layout, canvas);
                        }
                        TextPaint paint3 = this.descriptionLayout.layout.getPaint();
                        if (z3 && (messageObject = this.currentMessageObject) != null && !messageObject.isOutOwner() && (replyMessageLine = this.linkLine) != null) {
                            paint3.linkColor = replyMessageLine.getColor();
                        }
                        int alpha5 = paint3.getAlpha();
                        paint3.setAlpha((int) (alpha5 * f));
                        this.descriptionLayout.draw(canvas);
                        paint3.setAlpha(alpha5);
                        StaticLayout staticLayout = this.descriptionLayout.layout;
                        i12 = dp4;
                        f7 = 6.0f;
                        f5 = f4;
                        i13 = i4;
                        AnimatedEmojiSpan.drawAnimatedEmojis(canvas, staticLayout, this.animatedEmojiDescriptionStack, 0.0f, null, 0.0f, 0.0f, 0.0f, 1.0f, getAdaptiveEmojiColorFilter(1, staticLayout.getPaint().getColor()));
                        canvas.restore();
                        paint3.linkColor = getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_messageLinkOut : Theme.key_chat_messageLinkIn);
                        StaticLayout staticLayout2 = this.descriptionLayout.layout;
                        i8 = i36 + staticLayout2.getLineBottom(staticLayout2.getLineCount() - 1);
                    } else {
                        i12 = dp4;
                        f5 = f4;
                        i13 = i4;
                        f6 = 2.0f;
                        f7 = 6.0f;
                    }
                    int i292 = i9;
                    if (this.drawPhotoImage && z7) {
                        if (i8 != i12) {
                            i8 += AndroidUtilities.dp(f6);
                        }
                        dp5 = i13 - AndroidUtilities.dp(17.0f);
                        if (!this.isSmallImage) {
                            ImageReceiver imageReceiver4 = this.photoImage;
                            imageReceiver4.setImageX(((i11 + i13) - imageReceiver4.getImageWidth()) - AndroidUtilities.dp(f7));
                            this.photoImage.setImageY(i292);
                        } else {
                            this.photoImage.setImageX(i11 + (this.hasInvoicePreview ? -AndroidUtilities.dp(6.3f) : AndroidUtilities.dp(10.0f)));
                            this.photoImage.setImageY(i8);
                        }
                        transitionParams = this.transitionParams;
                        if (transitionParams == null && transitionParams.animateSmallImage) {
                            if (!this.isSmallImage && this.documentAttachType != 1) {
                                this.photoImage.setImageWidth((int) AndroidUtilities.lerp(transitionParams.photoImageFromWidth, dp5, transitionParams.animateChangeProgress));
                            }
                            ImageReceiver imageReceiver5 = this.photoImage;
                            imageReceiver5.setImageX(AndroidUtilities.lerp(this.transitionParams.photoImageFromCenterX, imageReceiver5.getCenterX(), this.transitionParams.animateChangeProgress) - (this.photoImage.getImageWidth() / f6));
                            ImageReceiver imageReceiver6 = this.photoImage;
                            imageReceiver6.setImageY(AndroidUtilities.lerp(this.transitionParams.photoImageFromCenterY, imageReceiver6.getCenterY(), this.transitionParams.animateChangeProgress) - (this.photoImage.getImageHeight() / f6));
                        } else if (!this.isSmallImage && (i17 = this.documentAttachType) != 7 && i17 != 1) {
                            this.photoImage.setImageWidth(dp5);
                        }
                        if (!this.isSmallImage && this.drawImageButton) {
                            int dp132 = AndroidUtilities.dp(48.0f);
                            float f222 = dp132;
                            int imageX22 = (int) (this.photoImage.getImageX() + ((this.photoImage.getImageWidth() - f222) / f6));
                            this.buttonX = imageX22;
                            this.buttonX = imageX22;
                            int imageY22 = (int) (this.photoImage.getImageY() + ((this.photoImage.getImageHeight() - f222) / f6));
                            this.buttonY = imageY22;
                            this.buttonY = imageY22;
                            RadialProgress2 radialProgress222 = this.radialProgress;
                            int i302 = this.buttonX;
                            radialProgress222.setProgressRect(i302, imageY22, i302 + dp132, dp132 + imageY22);
                        }
                        if (!this.isRoundVideo && MediaController.getInstance().isPlayingMessage(this.currentMessageObject) && MediaController.getInstance().isVideoDrawingReady() && canvas.isHardwareAccelerated()) {
                            this.imageDrawn = true;
                            this.drawTime = true;
                        } else {
                            chatMessageCellDelegate = this.delegate;
                            if (chatMessageCellDelegate != null || chatMessageCellDelegate.getPinchToZoomHelper() == null || !this.delegate.getPinchToZoomHelper().isInOverlayModeFor(this)) {
                                f8 = f;
                                if (f8 == 1.0f) {
                                    this.photoImage.setAlpha(f8);
                                    if (allowDrawPhotoImage()) {
                                        canvas2 = canvas;
                                        this.imageDrawn = this.photoImage.draw(canvas2);
                                    } else {
                                        canvas2 = canvas;
                                        this.imageDrawn = true;
                                    }
                                    if (this.currentMessageObject.hasMediaSpoilers()) {
                                        this.blurredPhotoImage.setAlpha(f8);
                                        drawBlurredPhoto(canvas);
                                        this.blurredPhotoImage.setAlpha(1.0f);
                                    }
                                    this.photoImage.setAlpha(1.0f);
                                } else {
                                    canvas2 = canvas;
                                    if (allowDrawPhotoImage()) {
                                        this.imageDrawn = this.photoImage.draw(canvas2);
                                    } else {
                                        this.imageDrawn = true;
                                    }
                                    if (this.currentMessageObject.hasMediaSpoilers()) {
                                        drawBlurredPhoto(canvas);
                                    }
                                }
                                i14 = this.documentAttachType;
                                if (i14 != 4 || i14 == 2) {
                                    this.videoButtonX = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(8.0f));
                                    int imageY322 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(8.0f));
                                    this.videoButtonY = imageY322;
                                    RadialProgress2 radialProgress2322 = this.videoRadialProgress;
                                    int i3122 = this.videoButtonX;
                                    radialProgress2322.setProgressRect(i3122, imageY322, AndroidUtilities.dp(24.0f) + i3122, this.videoButtonY + AndroidUtilities.dp(24.0f));
                                }
                                themedPaint = getThemedPaint("paintChatTimeBackground");
                                if (this.photosCountLayout != null && this.photoImage.getVisible()) {
                                    int imageX3 = (int) (((this.photoImage.getImageX() + this.photoImage.getImageWidth()) - AndroidUtilities.dp(8.0f)) - this.photosCountWidth);
                                    int imageY4 = (int) ((this.photoImage.getImageY() + this.photoImage.getImageHeight()) - AndroidUtilities.dp(19.0f));
                                    this.rect.set(imageX3 - AndroidUtilities.dp(4.0f), imageY4 - AndroidUtilities.dp(1.5f), this.photosCountWidth + imageX3 + AndroidUtilities.dp(4.0f), AndroidUtilities.dp(14.5f) + imageY4);
                                    int alpha6 = themedPaint.getAlpha();
                                    themedPaint.setAlpha((int) (alpha6 * this.controlsAlpha));
                                    Theme.chat_durationPaint.setAlpha((int) (this.controlsAlpha * 255.0f));
                                    canvas2.drawRoundRect(this.rect, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), themedPaint);
                                    themedPaint.setAlpha(alpha6);
                                    canvas.save();
                                    canvas2.translate(imageX3, imageY4);
                                    this.photosCountLayout.draw(canvas2);
                                    canvas.restore();
                                    Theme.chat_durationPaint.setAlpha(255);
                                }
                                if (this.videoInfoLayout != null && ((!this.drawPhotoImage || this.photoImage.getVisible()) && this.imageBackgroundSideColor == 0)) {
                                    if (!this.hasGamePreview || this.hasInvoicePreview || this.documentAttachType == 8) {
                                        if (this.drawPhotoImage) {
                                            i16 = i11;
                                        } else {
                                            i16 = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(8.5f));
                                            i8 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(f7));
                                            this.rect.set(i16 - AndroidUtilities.dp(4.0f), i8 - AndroidUtilities.dp(1.5f), this.durationWidth + i16 + AndroidUtilities.dp(4.0f), AndroidUtilities.dp(this.documentAttachType != 8 ? 16.5f : 14.5f) + i8);
                                            canvas2.drawRoundRect(this.rect, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), themedPaint);
                                        }
                                    } else {
                                        i16 = (int) (((this.photoImage.getImageX() + this.photoImage.getImageWidth()) - AndroidUtilities.dp(8.0f)) - this.durationWidth);
                                        i8 = (int) ((this.photoImage.getImageY() + this.photoImage.getImageHeight()) - AndroidUtilities.dp(19.0f));
                                        this.rect.set(i16 - AndroidUtilities.dp(4.0f), i8 - AndroidUtilities.dp(1.5f), this.durationWidth + i16 + AndroidUtilities.dp(4.0f), AndroidUtilities.dp(14.5f) + i8);
                                        canvas2.drawRoundRect(this.rect, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), getThemedPaint("paintChatTimeBackground"));
                                    }
                                    canvas.save();
                                    canvas2.translate(i16, i8);
                                    if (this.hasInvoicePreview) {
                                        if (this.drawPhotoImage) {
                                            Theme.chat_shipmentPaint.setColor(getThemedColor(Theme.key_chat_previewGameText));
                                        } else if (this.currentMessageObject.isOutOwner()) {
                                            Theme.chat_shipmentPaint.setColor(getThemedColor(Theme.key_chat_messageTextOut));
                                        } else {
                                            Theme.chat_shipmentPaint.setColor(getThemedColor(Theme.key_chat_messageTextIn));
                                        }
                                    }
                                    this.videoInfoLayout.draw(canvas2);
                                    canvas.restore();
                                }
                                this.giveawayMessageCell.draw(canvas2, this.namesOffset, i11, this.resourcesProvider);
                                this.giveawayResultsMessageCell.draw(canvas2, this.namesOffset, i11, this.resourcesProvider);
                                if (this.drawInstantView) {
                                    if (this.currentMessageObject.isOutOwner()) {
                                        Drawable themedDrawable = getThemedDrawable("drawableMsgOutInstant");
                                        TextPaint textPaint3 = Theme.chat_instantViewPaint;
                                        int i37 = Theme.key_chat_outPreviewInstantText;
                                        textPaint3.setColor(getThemedColor(i37));
                                        Theme.chat_instantViewButtonPaint.setColor(Theme.multAlpha(getThemedColor(i37), 0.1f));
                                        LoadingDrawable loadingDrawable = this.instantButtonLoading;
                                        if (loadingDrawable != null) {
                                            loadingDrawable.setColors(Theme.multAlpha(getThemedColor(i37), 0.1f), Theme.multAlpha(getThemedColor(i37), 0.3f), Theme.multAlpha(getThemedColor(i37), 0.3f), Theme.multAlpha(getThemedColor(i37), 1.2f));
                                        }
                                        drawable = themedDrawable;
                                    } else {
                                        int themedColor = getThemedColor(Theme.key_chat_inPreviewInstantText);
                                        if (this.linkLine != null && !this.currentMessageObject.isUnsupported()) {
                                            themedColor = this.linkLine.getColor();
                                        }
                                        if (this.instantDrawable == null) {
                                            if (this.drawInstantViewType == 16) {
                                                this.instantDrawable = getContext().getResources().getDrawable(R.drawable.mini_external_link).mutate();
                                            } else {
                                                this.instantDrawable = getContext().getResources().getDrawable(R.drawable.msg_instant).mutate();
                                            }
                                        }
                                        if (this.instantDrawableColor != themedColor) {
                                            Drawable drawable3 = this.instantDrawable;
                                            this.instantDrawableColor = themedColor;
                                            drawable3.setColorFilter(new PorterDuffColorFilter(themedColor, PorterDuff.Mode.SRC_IN));
                                        }
                                        Drawable drawable4 = this.instantDrawable;
                                        Theme.chat_instantViewPaint.setColor(themedColor);
                                        Theme.chat_instantViewButtonPaint.setColor(Theme.multAlpha(themedColor, 0.1f));
                                        LoadingDrawable loadingDrawable2 = this.instantButtonLoading;
                                        if (loadingDrawable2 != null) {
                                            loadingDrawable2.setColors(Theme.multAlpha(themedColor, 0.1f), Theme.multAlpha(themedColor, 0.3f), Theme.multAlpha(themedColor, 0.3f), Theme.multAlpha(themedColor, 1.2f));
                                        }
                                        drawable = drawable4;
                                    }
                                    if (z3) {
                                        int dp19 = i12 + i26 + AndroidUtilities.dp(14.0f);
                                        int alpha7 = Theme.chat_instantViewPaint.getAlpha();
                                        Theme.chat_instantViewPaint.setAlpha((int) (alpha7 * 0.18f));
                                        canvas.drawRect(i11 + AndroidUtilities.dp(10.0f), AndroidUtilities.dp(f6) + i15, (i11 + i13) - AndroidUtilities.dp(7.0f), i15 + AndroidUtilities.dp(f6) + Math.max(1, AndroidUtilities.dp(0.66f)), Theme.chat_instantViewPaint);
                                        Theme.chat_instantViewPaint.setAlpha(alpha7);
                                        float dp20 = AndroidUtilities.dp(this.drawInstantViewType == 0 ? 15.0f : 0.0f) + this.instantViewLayoutWidth;
                                        float f24 = f5 + ((i13 - dp20) / f6);
                                        int i38 = this.drawInstantViewType;
                                        if (i38 == 0) {
                                            BaseCell.setDrawableBounds(drawable, f24, AndroidUtilities.dp(1.0f) + dp19, AndroidUtilities.dp(9.0f), AndroidUtilities.dp(13.0f));
                                            drawable.setAlpha((int) (f8 * 255.0f));
                                            drawable.draw(canvas2);
                                            f24 += AndroidUtilities.dp(15.0f);
                                        } else if (i38 == 16) {
                                            f24 -= AndroidUtilities.dp(11.0f);
                                            BaseCell.setDrawableBounds(drawable, dp20 + f24 + AndroidUtilities.dp(4.0f), dp19 - AndroidUtilities.dp(f6), AndroidUtilities.dp(18.0f), AndroidUtilities.dp(18.0f));
                                            drawable.setAlpha((int) (f8 * 255.0f));
                                            drawable.draw(canvas2);
                                        }
                                        if (this.instantViewLayout != null) {
                                            canvas.save();
                                            canvas2.translate(f24 - this.instantViewLayoutLeft, dp19);
                                            this.instantViewLayout.draw(canvas2);
                                            canvas.restore();
                                        }
                                    } else {
                                        float f25 = f5;
                                        int dp21 = i12 + i26 + AndroidUtilities.dp(this.currentMessageObject.isUnsupported() ? -5.0f : 10.0f);
                                        LoadingDrawable loadingDrawable3 = this.instantButtonLoading;
                                        if (loadingDrawable3 != null && !z4 && !loadingDrawable3.isDisappeared() && !this.instantButtonLoading.isDisappearing()) {
                                            this.instantButtonLoading.disappear();
                                        }
                                        LoadingDrawable loadingDrawable4 = this.instantButtonLoading;
                                        if (loadingDrawable4 == null && z4) {
                                            LoadingDrawable loadingDrawable5 = new LoadingDrawable();
                                            this.instantButtonLoading = loadingDrawable5;
                                            loadingDrawable5.strokePaint.setStrokeWidth(AndroidUtilities.dp(1.25f));
                                            this.instantButtonLoading.setAppearByGradient(true);
                                        } else if (loadingDrawable4 != null && z4 && (loadingDrawable4.isDisappeared() || this.instantButtonLoading.isDisappearing())) {
                                            this.instantButtonLoading.reset();
                                            this.instantButtonLoading.resetDisappear();
                                        }
                                        this.instantButtonRect.set(f25, dp21, i11 + this.instantWidth, AndroidUtilities.dp(36.0f) + dp21);
                                        float scale3 = this.instantButtonBounce.getScale(0.02f);
                                        boolean z10 = scale3 != 1.0f;
                                        if (z10) {
                                            canvas.save();
                                            canvas2.scale(scale3, scale3, this.instantButtonRect.centerX(), this.instantButtonRect.centerY());
                                        }
                                        if (Build.VERSION.SDK_INT >= 21) {
                                            this.selectorDrawableMaskType[0] = 0;
                                            createSelectorDrawable(0);
                                            this.selectorDrawable[0].setBounds(i11, dp21, i11 + this.instantWidth, AndroidUtilities.dp(36.0f) + dp21);
                                            this.selectorDrawable[0].draw(canvas2);
                                        }
                                        LoadingDrawable loadingDrawable6 = this.instantButtonLoading;
                                        if (loadingDrawable6 == null || loadingDrawable6.isDisappeared()) {
                                            f9 = 6.0f;
                                        } else {
                                            this.instantButtonLoading.setBounds(this.instantButtonRect);
                                            f9 = 6.0f;
                                            this.instantButtonLoading.setRadiiDp(6.0f);
                                            this.instantButtonLoading.draw(canvas2);
                                            invalidate();
                                        }
                                        canvas2.drawRoundRect(this.instantButtonRect, AndroidUtilities.dp(f9), AndroidUtilities.dp(f9), Theme.chat_instantViewButtonPaint);
                                        int i39 = this.drawInstantViewType;
                                        if (i39 == 0) {
                                            BaseCell.setDrawableBounds(drawable, ((this.instantTextLeftX + this.instantTextX) + i11) - AndroidUtilities.dp(15.0f), AndroidUtilities.dp(11.5f) + dp21, AndroidUtilities.dp(9.0f), AndroidUtilities.dp(13.0f));
                                            drawable.setAlpha((int) (f8 * 255.0f));
                                            drawable.draw(canvas2);
                                        } else if (i39 == 16) {
                                            if (this.instantLinkArrowPaint == null) {
                                                Paint paint4 = new Paint(1);
                                                this.instantLinkArrowPaint = paint4;
                                                paint4.setStyle(Paint.Style.STROKE);
                                                this.instantLinkArrowPaint.setStrokeCap(Paint.Cap.ROUND);
                                                this.instantLinkArrowPaint.setStrokeJoin(Paint.Join.ROUND);
                                            }
                                            this.instantLinkArrowPaint.setColor(Theme.chat_instantViewPaint.getColor());
                                            this.instantLinkArrowPaint.setStrokeWidth(AndroidUtilities.dpf2(1.333f));
                                            Path path2 = this.instantLinkArrowPath;
                                            if (path2 == null) {
                                                this.instantLinkArrowPath = new Path();
                                            } else {
                                                path2.rewind();
                                            }
                                            this.instantLinkArrowPath.moveTo(this.instantButtonRect.right - AndroidUtilities.dp(11.0f), this.instantButtonRect.top + AndroidUtilities.dp(f9));
                                            this.instantLinkArrowPath.lineTo(this.instantButtonRect.right - AndroidUtilities.dp(f9), this.instantButtonRect.top + AndroidUtilities.dp(f9));
                                            this.instantLinkArrowPath.lineTo(this.instantButtonRect.right - AndroidUtilities.dp(f9), this.instantButtonRect.top + AndroidUtilities.dp(11.0f));
                                            this.instantLinkArrowPath.moveTo(this.instantButtonRect.right - AndroidUtilities.dpf2(11.66f), this.instantButtonRect.top + AndroidUtilities.dp(11.66f));
                                            this.instantLinkArrowPath.lineTo(this.instantButtonRect.right - AndroidUtilities.dp(f9), this.instantButtonRect.top + AndroidUtilities.dp(f9));
                                            canvas2.drawPath(this.instantLinkArrowPath, this.instantLinkArrowPaint);
                                        }
                                        if (this.instantViewLayout != null) {
                                            canvas.save();
                                            canvas2.translate(i11 + this.instantTextX, dp21 + AndroidUtilities.dp(10.5f));
                                            this.instantViewLayout.draw(canvas2);
                                            canvas.restore();
                                        }
                                        if (z10) {
                                            canvas.restore();
                                        }
                                    }
                                }
                                canvas2.restoreToCount(i7);
                            }
                        }
                    }
                    canvas2 = canvas;
                    f8 = f;
                    i14 = this.documentAttachType;
                    if (i14 != 4) {
                    }
                    this.videoButtonX = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(8.0f));
                    int imageY3222 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(8.0f));
                    this.videoButtonY = imageY3222;
                    RadialProgress2 radialProgress23222 = this.videoRadialProgress;
                    int i31222 = this.videoButtonX;
                    radialProgress23222.setProgressRect(i31222, imageY3222, AndroidUtilities.dp(24.0f) + i31222, this.videoButtonY + AndroidUtilities.dp(24.0f));
                    themedPaint = getThemedPaint("paintChatTimeBackground");
                    if (this.photosCountLayout != null) {
                        int imageX32 = (int) (((this.photoImage.getImageX() + this.photoImage.getImageWidth()) - AndroidUtilities.dp(8.0f)) - this.photosCountWidth);
                        int imageY42 = (int) ((this.photoImage.getImageY() + this.photoImage.getImageHeight()) - AndroidUtilities.dp(19.0f));
                        this.rect.set(imageX32 - AndroidUtilities.dp(4.0f), imageY42 - AndroidUtilities.dp(1.5f), this.photosCountWidth + imageX32 + AndroidUtilities.dp(4.0f), AndroidUtilities.dp(14.5f) + imageY42);
                        int alpha62 = themedPaint.getAlpha();
                        themedPaint.setAlpha((int) (alpha62 * this.controlsAlpha));
                        Theme.chat_durationPaint.setAlpha((int) (this.controlsAlpha * 255.0f));
                        canvas2.drawRoundRect(this.rect, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), themedPaint);
                        themedPaint.setAlpha(alpha62);
                        canvas.save();
                        canvas2.translate(imageX32, imageY42);
                        this.photosCountLayout.draw(canvas2);
                        canvas.restore();
                        Theme.chat_durationPaint.setAlpha(255);
                    }
                    if (this.videoInfoLayout != null) {
                        if (!this.hasGamePreview) {
                        }
                        if (this.drawPhotoImage) {
                        }
                        canvas.save();
                        canvas2.translate(i16, i8);
                        if (this.hasInvoicePreview) {
                        }
                        this.videoInfoLayout.draw(canvas2);
                        canvas.restore();
                    }
                    this.giveawayMessageCell.draw(canvas2, this.namesOffset, i11, this.resourcesProvider);
                    this.giveawayResultsMessageCell.draw(canvas2, this.namesOffset, i11, this.resourcesProvider);
                    if (this.drawInstantView) {
                    }
                    canvas2.restoreToCount(i7);
                }
            }
            f4 = f3;
            z3 = z2;
            z4 = z;
            i11 = i5;
            if (this.currentMessageObject.isOutOwner()) {
            }
            if (this.titleLayout != null) {
            }
            if (this.authorLayout != null) {
            }
            if (this.descriptionLayout != null) {
            }
            int i2922 = i9;
            if (this.drawPhotoImage) {
            }
            canvas2 = canvas;
            f8 = f;
            i14 = this.documentAttachType;
            if (i14 != 4) {
            }
            this.videoButtonX = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(8.0f));
            int imageY32222 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(8.0f));
            this.videoButtonY = imageY32222;
            RadialProgress2 radialProgress232222 = this.videoRadialProgress;
            int i312222 = this.videoButtonX;
            radialProgress232222.setProgressRect(i312222, imageY32222, AndroidUtilities.dp(24.0f) + i312222, this.videoButtonY + AndroidUtilities.dp(24.0f));
            themedPaint = getThemedPaint("paintChatTimeBackground");
            if (this.photosCountLayout != null) {
            }
            if (this.videoInfoLayout != null) {
            }
            this.giveawayMessageCell.draw(canvas2, this.namesOffset, i11, this.resourcesProvider);
            this.giveawayResultsMessageCell.draw(canvas2, this.namesOffset, i11, this.resourcesProvider);
            if (this.drawInstantView) {
            }
            canvas2.restoreToCount(i7);
        }
    }

    private float isSmallImage() {
        TransitionParams transitionParams = this.transitionParams;
        if (!transitionParams.animateSmallImage) {
            return this.isSmallImage ? 1.0f : 0.0f;
        }
        boolean z = this.isSmallImage;
        float f = transitionParams.animateChangeProgress;
        return z ? f : 1.0f - f;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public boolean shouldDrawMenuDrawable() {
        MessageObject messageObject;
        return (this.currentMessagesGroup == null || (this.currentPosition.flags & 4) != 0) && !this.hasLinkPreview && ((messageObject = this.currentMessageObject) == null || !messageObject.isRepostPreview);
    }

    private void drawContact(Canvas canvas) {
        boolean z;
        float f;
        if (this.contactLine == null) {
            this.contactLine = new ReplyMessageLine(this);
        }
        int check = this.contactLine.check(this.currentMessageObject, this.currentUser, this.currentChat, this.resourcesProvider, 4);
        if (this.contactBounce == null) {
            this.contactBounce = new ButtonBounce(this, 2.0f, 2.0f);
        }
        int imageX = (int) (this.photoImage.getImageX() - AndroidUtilities.dp(13.0f));
        int dp = this.layoutHeight - AndroidUtilities.dp(62.0f);
        ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
        if (!reactionsLayoutInBubble.isEmpty && !reactionsLayoutInBubble.isSmall) {
            dp -= reactionsLayoutInBubble.totalHeight;
        }
        if (this.drawCommentButton) {
            dp -= AndroidUtilities.dp(shouldDrawTimeOnMedia() ? 39.3f : 41.0f);
        }
        int i = dp;
        if (this.contactRect == null) {
            this.contactRect = new RectF();
        }
        int backgroundDrawableRight = (getBackgroundDrawableRight() - (AndroidUtilities.dp(10.0f) + ((!this.currentMessageObject.isOutOwner() || this.mediaBackground || this.drawPinnedBottom) ? 0 : AndroidUtilities.dp(6.0f)))) - getExtraTextX();
        this.contactRect.set(imageX, this.photoImage.getImageY() - AndroidUtilities.dp(9.0f), backgroundDrawableRight, AndroidUtilities.dp(38.0f) + i);
        float scale = this.contactBounce.getScale(0.0125f);
        boolean z2 = scale != 1.0f;
        if (z2) {
            canvas.save();
            canvas.scale(scale, scale, this.contactRect.centerX(), this.contactRect.centerY());
        }
        if (Build.VERSION.SDK_INT >= 21) {
            Drawable[] drawableArr = this.selectorDrawable;
            if (drawableArr[0] != null) {
                this.selectorDrawableMaskType[0] = 0;
                drawableArr[0].setBounds(imageX, (int) (this.photoImage.getImageY() - AndroidUtilities.dp(9.0f)), backgroundDrawableRight, AndroidUtilities.dp(38.0f) + i);
                if (this.selectorDrawableColor != Theme.multAlpha(this.contactLine.getColor(), 0.1f)) {
                    Drawable drawable = this.selectorDrawable[0];
                    int multAlpha = Theme.multAlpha(this.contactLine.getColor(), 0.1f);
                    this.selectorDrawableColor = multAlpha;
                    Theme.setSelectorDrawableColor(drawable, multAlpha, true);
                }
                this.selectorDrawable[0].draw(canvas);
            }
        }
        float floor = (float) Math.floor(SharedConfig.bubbleRadius / 3.0f);
        int i2 = (int) floor;
        this.contactLine.drawBackground(canvas, this.contactRect, floor, floor, floor, 1.0f);
        this.contactLine.drawLine(canvas, this.contactRect, 1.0f);
        Theme.chat_contactNamePaint.setColor(check);
        Theme.chat_contactPhonePaint.setColor(getThemedColor(Theme.key_chat_inContactPhoneSelectedText));
        if (this.currentMessageObject.isOutOwner()) {
            Theme.chat_contactPhonePaint.setColor(getThemedColor(Theme.key_chat_messageTextOut));
        } else {
            Theme.chat_contactPhonePaint.setColor(getThemedColor(Theme.key_chat_messageTextIn));
        }
        if (this.titleLayout != null) {
            canvas.save();
            canvas.translate(this.photoImage.getImageX() + this.photoImage.getImageWidth() + AndroidUtilities.dp(9.0f), AndroidUtilities.dp(27.0f) + this.namesOffset);
            this.titleLayout.draw(canvas);
            canvas.restore();
        }
        if (this.docTitleLayout != null) {
            canvas.save();
            canvas.translate(this.photoImage.getImageX() + this.photoImage.getImageWidth() + AndroidUtilities.dp(9.0f), AndroidUtilities.dp(50.0f) + this.namesOffset);
            this.docTitleLayout.draw(canvas);
            canvas.restore();
        }
        ArrayList<InstantViewButton> arrayList = this.contactButtons;
        if (arrayList != null && arrayList.size() > 0) {
            Theme.chat_instantViewPaint.setColor(check);
            Theme.chat_instantViewButtonPaint.setColor(Theme.multAlpha(check, 0.1f));
            int alpha = Theme.chat_instantViewPaint.getAlpha();
            Theme.chat_instantViewPaint.setAlpha((int) (alpha * 0.18f));
            canvas.drawRect(AndroidUtilities.dp(10.0f) + this.contactRect.left, AndroidUtilities.dp(2.0f) + i, this.contactRect.right - AndroidUtilities.dp(7.0f), AndroidUtilities.dp(2.0f) + i + Math.max(1, AndroidUtilities.dp(0.66f)), Theme.chat_instantViewPaint);
            Theme.chat_instantViewPaint.setAlpha(alpha);
            int dp2 = i + AndroidUtilities.dp(2.0f);
            float dp3 = imageX + AndroidUtilities.dp(3.0f);
            ArrayList<InstantViewButton> arrayList2 = this.contactButtons;
            boolean z3 = arrayList2 != null && arrayList2.size() > 1;
            int backgroundColor = this.contactLine.getBackgroundColor();
            int i3 = 0;
            while (i3 < this.contactButtons.size()) {
                InstantViewButton instantViewButton = this.contactButtons.get(i3);
                float min = Math.min(instantViewButton.buttonWidth + dp3, this.contactRect.right);
                instantViewButton.rect.set(dp3, dp2, min, AndroidUtilities.dp(36.0f) + dp2);
                if (z3 && instantViewButton.selectorDrawable == null) {
                    this.linkPreviewSelectorColor = backgroundColor;
                    instantViewButton.selectorDrawable = Theme.createRadSelectorDrawable(backgroundColor, 0, 0, i3 == this.contactButtons.size() - 1 ? i2 : 0, 0);
                    instantViewButton.selectorDrawable.setCallback(this);
                }
                if (instantViewButton.selectorDrawable != null) {
                    instantViewButton.selectorDrawable.setBounds((int) dp3, dp2, (int) min, AndroidUtilities.dp(36.0f) + dp2);
                    instantViewButton.selectorDrawable.draw(canvas);
                }
                if (z2 || instantViewButton.buttonBounce == null) {
                    z = false;
                    f = 1.0f;
                } else {
                    f = instantViewButton.buttonBounce.getScale(0.02f);
                    z = f != 1.0f;
                }
                if (z) {
                    canvas.save();
                    canvas.scale(f, f, instantViewButton.rect.centerX(), instantViewButton.rect.centerY());
                }
                if (instantViewButton.layout != null) {
                    canvas.save();
                    canvas.translate(instantViewButton.textX + dp3, AndroidUtilities.dp(10.5f) + dp2);
                    instantViewButton.layout.draw(canvas);
                    canvas.restore();
                }
                if (z) {
                    canvas.restore();
                }
                dp3 += instantViewButton.buttonWidth;
                i3++;
            }
        }
        if (z2) {
            canvas.restore();
        }
    }

    private void drawBotButtons(Canvas canvas, ArrayList<BotButton> arrayList, int i) {
        int dp;
        Drawable themedDrawable;
        ChatMessageCellDelegate chatMessageCellDelegate;
        if (SizeNotifierFrameLayout.drawingBlur) {
            return;
        }
        MessageObject messageObject = this.currentMessageObject;
        float f = 1.0f;
        if (messageObject != null && messageObject.isOutOwner()) {
            dp = (getMeasuredWidth() - this.widthForButtons) - AndroidUtilities.dp(10.0f);
        } else {
            dp = this.backgroundDrawableLeft + AndroidUtilities.dp((this.mediaBackground || this.drawPinnedBottom) ? 1.0f : 7.0f);
        }
        float f2 = 2.0f;
        float dp2 = (this.layoutHeight - AndroidUtilities.dp(2.0f)) + this.transitionParams.deltaBottom;
        float f3 = 0.0f;
        for (int i2 = 0; i2 < arrayList.size(); i2++) {
            BotButton botButton = arrayList.get(i2);
            float f4 = botButton.y + botButton.height;
            if (f4 > f3) {
                f3 = f4;
            }
        }
        this.rect.set(0.0f, dp2, getMeasuredWidth(), f3 + dp2);
        if (i != 255) {
            canvas.saveLayerAlpha(this.rect, i, 31);
        } else {
            canvas.save();
        }
        int i3 = 0;
        while (i3 < arrayList.size()) {
            BotButton botButton2 = arrayList.get(i3);
            float dp3 = ((botButton2.y + this.layoutHeight) - AndroidUtilities.dp(f2)) + this.transitionParams.deltaBottom;
            float pressScale = botButton2.getPressScale();
            this.rect.set(botButton2.x + dp, dp3, botButton2.x + dp + botButton2.width, botButton2.height + dp3);
            canvas.save();
            if (pressScale != f) {
                canvas.scale(pressScale, pressScale, this.rect.centerX(), this.rect.centerY());
            }
            applyServiceShaderMatrix();
            Arrays.fill(this.botButtonRadii, AndroidUtilities.dp(Math.min(6.75f, SharedConfig.bubbleRadius)));
            if (botButton2.hasPositionFlag(9)) {
                float[] fArr = this.botButtonRadii;
                float dp4 = AndroidUtilities.dp(SharedConfig.bubbleRadius);
                fArr[7] = dp4;
                fArr[6] = dp4;
            }
            if (botButton2.hasPositionFlag(10)) {
                float[] fArr2 = this.botButtonRadii;
                float dp5 = AndroidUtilities.dp(SharedConfig.bubbleRadius);
                fArr2[5] = dp5;
                fArr2[4] = dp5;
            }
            this.botButtonPath.rewind();
            this.botButtonPath.addRoundRect(this.rect, this.botButtonRadii, Path.Direction.CW);
            canvas.drawPath(this.botButtonPath, getThemedPaint("paintChatActionBackground"));
            if (hasGradientService()) {
                canvas.drawPath(this.botButtonPath, Theme.chat_actionBackgroundGradientDarkenPaint);
            }
            boolean z = (((botButton2.button instanceof TLRPC$TL_keyboardButtonCallback) || (botButton2.button instanceof TLRPC$TL_keyboardButtonGame) || (botButton2.button instanceof TLRPC$TL_keyboardButtonBuy) || (botButton2.button instanceof TLRPC$TL_keyboardButtonUrlAuth)) && SendMessagesHelper.getInstance(this.currentAccount).isSendingCallback(this.currentMessageObject, botButton2.button)) || ((botButton2.button instanceof TLRPC$TL_keyboardButtonRequestGeoLocation) && SendMessagesHelper.getInstance(this.currentAccount).isSendingCurrentLocation(this.currentMessageObject, botButton2.button)) || ((botButton2.button instanceof TLRPC$TL_keyboardButtonUrl) && (chatMessageCellDelegate = this.delegate) != null && chatMessageCellDelegate.isProgressLoading(this, 3) && this.delegate.getProgressLoadingBotButtonUrl(this) == botButton2.button.url);
            canvas.save();
            canvas.clipPath(this.botButtonPath);
            if (z) {
                if (botButton2.loadingDrawable == null) {
                    botButton2.loadingDrawable = new LoadingDrawable();
                    botButton2.loadingDrawable.setRadiiDp(5.5f);
                    botButton2.loadingDrawable.setAppearByGradient(true);
                    botButton2.loadingDrawable.strokePaint.setStrokeWidth(AndroidUtilities.dpf2(1.25f));
                } else if (botButton2.loadingDrawable.isDisappeared() || botButton2.loadingDrawable.isDisappearing()) {
                    botButton2.loadingDrawable.reset();
                    botButton2.loadingDrawable.resetDisappear();
                }
            } else if (botButton2.loadingDrawable != null && !botButton2.loadingDrawable.isDisappearing() && !botButton2.loadingDrawable.isDisappeared()) {
                botButton2.loadingDrawable.disappear();
            }
            if (botButton2.loadingDrawable != null && (z || botButton2.loadingDrawable.isDisappearing())) {
                this.rect.inset(AndroidUtilities.dpf2(0.625f), AndroidUtilities.dpf2(0.625f));
                botButton2.loadingDrawable.setRadii(this.botButtonRadii);
                botButton2.loadingDrawable.setBounds(this.rect);
                LoadingDrawable loadingDrawable = botButton2.loadingDrawable;
                int i4 = Theme.key_chat_serviceBackgroundSelector;
                loadingDrawable.setColors(Theme.multAlpha(Theme.getColor(i4, this.resourcesProvider), f), Theme.multAlpha(Theme.getColor(i4, this.resourcesProvider), 2.5f), Theme.multAlpha(Theme.getColor(i4, this.resourcesProvider), 3.0f), Theme.multAlpha(Theme.getColor(i4, this.resourcesProvider), 10.0f));
                botButton2.loadingDrawable.setAlpha(255);
                botButton2.loadingDrawable.draw(canvas);
                invalidateOutbounds();
            }
            if (botButton2.selectorDrawable != null) {
                int i5 = (int) dp3;
                botButton2.selectorDrawable.setBounds(botButton2.x + dp, i5, botButton2.x + dp + botButton2.width, botButton2.height + i5);
                botButton2.selectorDrawable.setAlpha(255);
                botButton2.selectorDrawable.draw(canvas);
            }
            canvas.restore();
            canvas.save();
            canvas.translate(botButton2.x + dp + AndroidUtilities.dp(5.0f), ((AndroidUtilities.dp(44.0f) - botButton2.title.getLineBottom(botButton2.title.getLineCount() - 1)) / 2) + dp3);
            botButton2.title.draw(canvas);
            canvas.restore();
            if (!(botButton2.button instanceof TLRPC$TL_keyboardButtonWebView)) {
                if (botButton2.button instanceof TLRPC$TL_keyboardButtonUrl) {
                    if (botButton2.isInviteButton) {
                        themedDrawable = getThemedDrawable("drawable_botInvite");
                    } else {
                        themedDrawable = getThemedDrawable("drawableBotLink");
                    }
                    BaseCell.setDrawableBounds(themedDrawable, (((botButton2.x + botButton2.width) - AndroidUtilities.dp(3.0f)) - themedDrawable.getIntrinsicWidth()) + dp, dp3 + AndroidUtilities.dp(3.0f));
                    themedDrawable.draw(canvas);
                } else if (!(botButton2.button instanceof TLRPC$TL_keyboardButtonSwitchInline) && !(botButton2.button instanceof TLRPC$TL_keyboardButtonRequestPeer)) {
                    if (botButton2.button instanceof TLRPC$TL_keyboardButtonBuy) {
                        BaseCell.setDrawableBounds(Theme.chat_botCardDrawable, (((botButton2.x + botButton2.width) - AndroidUtilities.dp(5.0f)) - Theme.chat_botCardDrawable.getIntrinsicWidth()) + dp, dp3 + AndroidUtilities.dp(4.0f));
                        Theme.chat_botCardDrawable.draw(canvas);
                    }
                } else {
                    Drawable themedDrawable2 = getThemedDrawable("drawableBotInline");
                    BaseCell.setDrawableBounds(themedDrawable2, (((botButton2.x + botButton2.width) - AndroidUtilities.dp(3.0f)) - themedDrawable2.getIntrinsicWidth()) + dp, dp3 + AndroidUtilities.dp(3.0f));
                    themedDrawable2.draw(canvas);
                }
            } else {
                Drawable themedDrawable3 = getThemedDrawable("drawableBotWebView");
                BaseCell.setDrawableBounds(themedDrawable3, (((botButton2.x + botButton2.width) - AndroidUtilities.dp(3.0f)) - themedDrawable3.getIntrinsicWidth()) + dp, dp3 + AndroidUtilities.dp(3.0f));
                themedDrawable3.draw(canvas);
            }
            canvas.restore();
            i3++;
            f = 1.0f;
            f2 = 2.0f;
        }
        canvas.restore();
    }

    private boolean allowDrawPhotoImage() {
        return !this.currentMessageObject.hasMediaSpoilers() || this.currentMessageObject.isMediaSpoilersRevealed || this.mediaSpoilerRevealProgress != 0.0f || this.blurredPhotoImage.getBitmap() == null;
    }

    public void layoutTextXY(boolean z) {
        int dp;
        int i;
        if (this.currentMessageObject.isOutOwner()) {
            this.textX = (z ? (int) (this.backgroundDrawableLeft + this.transitionParams.deltaLeft) : getCurrentBackgroundLeft()) + AndroidUtilities.dp(11.0f) + getExtraTextX();
        } else {
            int currentBackgroundLeft = z ? (int) (this.backgroundDrawableLeft + this.transitionParams.deltaLeft) : getCurrentBackgroundLeft();
            if (this.currentMessageObject.type == 19) {
                dp = 0;
            } else {
                dp = AndroidUtilities.dp((this.mediaBackground || !this.drawPinnedBottom) ? 17.0f : 11.0f);
            }
            this.textX = currentBackgroundLeft + dp + getExtraTextX();
        }
        if (this.hasGamePreview) {
            this.textX += AndroidUtilities.dp(11.0f);
            int dp2 = AndroidUtilities.dp(14.0f) + this.namesOffset;
            this.textY = dp2;
            CachedStaticLayout cachedStaticLayout = this.siteNameLayout;
            if (cachedStaticLayout != null) {
                this.textY = dp2 + cachedStaticLayout.getLineBottom(cachedStaticLayout.getLineCount() - 1);
            }
        } else if (this.hasInvoicePreview) {
            int dp3 = AndroidUtilities.dp(14.0f) + this.namesOffset;
            this.textY = dp3;
            CachedStaticLayout cachedStaticLayout2 = this.siteNameLayout;
            if (cachedStaticLayout2 != null) {
                this.textY = dp3 + cachedStaticLayout2.getLineBottom(cachedStaticLayout2.getLineCount() - 1);
            }
        } else if (this.currentMessageObject.type == 19) {
            this.textY = AndroidUtilities.dp(6.0f) + this.namesOffset;
            if (!this.currentMessageObject.isOut()) {
                this.textX = getCurrentBackgroundLeft();
            } else {
                this.textX -= AndroidUtilities.dp(4.0f);
            }
        } else {
            int dp4 = AndroidUtilities.dp(8.0f) + this.namesOffset;
            this.textY = dp4;
            if (this.currentMessageObject.hasCodeAtTop && (i = SharedConfig.bubbleRadius) > 10) {
                this.textY = dp4 + AndroidUtilities.dp(i < 15 ? 1.0f : 2.0f);
            }
            if (this.currentMessageObject.hasCodeAtTop && this.namesOffset > 0) {
                this.textY += AndroidUtilities.dp(5.0f);
            }
        }
        if (this.currentMessageObject.isSponsored()) {
            this.linkPreviewY = this.textY + AndroidUtilities.dp(14.0f);
        } else if (this.linkPreviewAbove) {
            this.linkPreviewY = this.textY + AndroidUtilities.dp(10.0f);
            this.textY += this.linkPreviewHeight + AndroidUtilities.dp(13.0f);
            if (this.drawInstantView && !this.hasInvoicePreview && !this.currentMessageObject.isGiveawayOrGiveawayResults()) {
                this.textY += AndroidUtilities.dp(44.0f);
            }
        } else {
            this.linkPreviewY = this.textY + this.currentMessageObject.textHeight + AndroidUtilities.dp(10.0f);
        }
        this.unmovedTextX = this.textX;
        if (this.currentMessageObject.textXOffset == 0.0f || this.replyNameLayout == null) {
            return;
        }
        int dp5 = this.backgroundWidth - AndroidUtilities.dp(31.0f);
        MessageObject messageObject = this.currentMessageObject;
        int i2 = dp5 - messageObject.textWidth;
        if (!this.hasNewLineForTime) {
            i2 -= this.timeWidth + AndroidUtilities.dp((messageObject.isOutOwner() ? 20 : 0) + 4);
        }
        if (i2 > 0) {
            this.textX += i2 - getExtraTimeX();
        }
    }

    public void drawMessageText(Canvas canvas) {
        float f;
        int i;
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null || messageObject.isSponsored()) {
            return;
        }
        int i2 = this.textY;
        float f2 = i2;
        TransitionParams transitionParams = this.transitionParams;
        if (transitionParams.animateText) {
            float f3 = transitionParams.animateFromTextY;
            float f4 = transitionParams.animateChangeProgress;
            f2 = (f3 * (1.0f - f4)) + (i2 * f4);
        }
        float f5 = f2;
        float f6 = transitionParams.animateChangeProgress;
        if (f6 != 1.0f && transitionParams.animateMessageText) {
            canvas.save();
            Theme.MessageDrawable messageDrawable = this.currentBackgroundDrawable;
            if (messageDrawable != null) {
                Rect bounds = messageDrawable.getBounds();
                if (this.currentMessageObject.isOutOwner() && !this.mediaBackground && !this.pinnedBottom) {
                    canvas.clipRect(bounds.left + AndroidUtilities.dp(4.0f), bounds.top + AndroidUtilities.dp(4.0f), bounds.right - AndroidUtilities.dp(10.0f), bounds.bottom - AndroidUtilities.dp(4.0f));
                } else {
                    canvas.clipRect(bounds.left + AndroidUtilities.dp(4.0f), bounds.top + AndroidUtilities.dp(4.0f), bounds.right - AndroidUtilities.dp(4.0f), bounds.bottom - AndroidUtilities.dp(4.0f));
                }
            }
            drawMessageText(this.textX, f5, canvas, this.transitionParams.animateOutTextBlocks, this.transitionParams.animateOutTextXOffset, false, 1.0f - this.transitionParams.animateChangeProgress, true, false, false);
            float f7 = this.textX;
            MessageObject messageObject2 = this.currentMessageObject;
            drawMessageText(f7, f5, canvas, messageObject2.textLayoutBlocks, messageObject2.textXOffset, true, this.transitionParams.animateChangeProgress, true, false, false);
            canvas.restore();
            return;
        }
        boolean z = transitionParams.animateLinkAbove;
        if (z && this.currentBackgroundDrawable != null) {
            if (z) {
                float f8 = i2;
                boolean z2 = this.linkPreviewAbove;
                int i3 = z2 ? 1 : -1;
                int i4 = this.currentMessageObject.textHeight;
                float f9 = f8 + (i3 * i4 * (1.0f - f6));
                f = transitionParams.animateFromTextY - (((z2 ? 1 : -1) * i4) * f6);
                f5 = f9;
            } else {
                f = f5;
            }
            canvas.save();
            RectF rectF = AndroidUtilities.rectTmp;
            rectF.set(this.currentBackgroundDrawable.getBounds());
            if (this.currentMessageObject.isOutOwner() && !this.mediaBackground && !this.pinnedBottom) {
                rectF.left += AndroidUtilities.dp(4.0f);
                rectF.right -= AndroidUtilities.dp(10.0f);
            } else {
                rectF.left += AndroidUtilities.dp(4.0f);
                rectF.right -= AndroidUtilities.dp(4.0f);
            }
            float f10 = rectF.left;
            float f11 = this.transitionParams.animateFromTextY;
            canvas.clipRect(f10, f11, rectF.right, this.currentMessageObject.textHeight + f11 + AndroidUtilities.dp(4.0f));
            float f12 = this.textX;
            MessageObject messageObject3 = this.currentMessageObject;
            drawMessageText(f12, f, canvas, messageObject3.textLayoutBlocks, messageObject3.textXOffset, false, 1.0f - this.transitionParams.animateChangeProgress, true, false, false);
            canvas.restore();
            canvas.save();
            rectF.set(this.currentBackgroundDrawable.getBounds());
            if (this.currentMessageObject.isOutOwner() && !this.mediaBackground && !this.pinnedBottom) {
                rectF.left += AndroidUtilities.dp(4.0f);
                rectF.right -= AndroidUtilities.dp(10.0f);
            } else {
                rectF.left += AndroidUtilities.dp(4.0f);
                rectF.right -= AndroidUtilities.dp(4.0f);
            }
            canvas.clipRect(rectF.left, this.textY, rectF.right, i + this.currentMessageObject.textHeight + AndroidUtilities.dp(4.0f));
            float f13 = this.textX;
            MessageObject messageObject4 = this.currentMessageObject;
            drawMessageText(f13, f5, canvas, messageObject4.textLayoutBlocks, messageObject4.textXOffset, true, 1.0f, true, false, false);
            canvas.restore();
            return;
        }
        float f14 = this.textX;
        MessageObject messageObject5 = this.currentMessageObject;
        drawMessageText(f14, f5, canvas, messageObject5.textLayoutBlocks, messageObject5.textXOffset, true, 1.0f, true, false, false);
    }

    public void drawMessageText(Canvas canvas, ArrayList<MessageObject.TextLayoutBlock> arrayList, boolean z, float f, boolean z2) {
        int i = this.textY;
        float f2 = i;
        TransitionParams transitionParams = this.transitionParams;
        if (transitionParams.animateText) {
            float f3 = transitionParams.animateFromTextY;
            float f4 = transitionParams.animateChangeProgress;
            f2 = (f3 * (1.0f - f4)) + (i * f4);
        }
        float f5 = f2;
        float f6 = this.textX;
        MessageObject messageObject = this.currentMessageObject;
        drawMessageText(f6, f5, canvas, arrayList, messageObject == null ? 0.0f : messageObject.textXOffset, z, f, false, z2, false);
    }

    /* JADX WARN: Removed duplicated region for block: B:117:0x023a  */
    /* JADX WARN: Removed duplicated region for block: B:135:0x02fe  */
    /* JADX WARN: Removed duplicated region for block: B:139:0x030c  */
    /* JADX WARN: Removed duplicated region for block: B:145:0x0330  */
    /* JADX WARN: Removed duplicated region for block: B:161:0x03a6  */
    /* JADX WARN: Removed duplicated region for block: B:166:0x03bd  */
    /* JADX WARN: Removed duplicated region for block: B:171:0x03cb  */
    /* JADX WARN: Removed duplicated region for block: B:174:0x03e0  */
    /* JADX WARN: Removed duplicated region for block: B:181:0x03f8  */
    /* JADX WARN: Removed duplicated region for block: B:202:0x053f  */
    /* JADX WARN: Removed duplicated region for block: B:245:0x063a  */
    /* JADX WARN: Removed duplicated region for block: B:252:0x066c  */
    /* JADX WARN: Removed duplicated region for block: B:255:0x068e  */
    /* JADX WARN: Removed duplicated region for block: B:256:0x06b8  */
    /* JADX WARN: Removed duplicated region for block: B:282:0x0709  */
    /* JADX WARN: Removed duplicated region for block: B:283:0x070d  */
    /* JADX WARN: Removed duplicated region for block: B:286:0x0718  */
    /* JADX WARN: Removed duplicated region for block: B:287:0x071d  */
    /* JADX WARN: Removed duplicated region for block: B:291:0x072e A[LOOP:3: B:289:0x0726->B:291:0x072e, LOOP_END] */
    /* JADX WARN: Removed duplicated region for block: B:301:0x0755  */
    /* JADX WARN: Removed duplicated region for block: B:302:0x0761  */
    /* JADX WARN: Removed duplicated region for block: B:305:0x077e  */
    /* JADX WARN: Removed duplicated region for block: B:306:0x0780  */
    /* JADX WARN: Removed duplicated region for block: B:321:0x07b0  */
    /* JADX WARN: Removed duplicated region for block: B:324:0x07c9  */
    /* JADX WARN: Removed duplicated region for block: B:345:? A[RETURN, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:346:? A[RETURN, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:76:0x017e  */
    @SuppressLint({"Range"})
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void drawMessageText(float f, float f2, Canvas canvas, ArrayList<MessageObject.TextLayoutBlock> arrayList, float f3, boolean z, float f4, boolean z2, boolean z3, boolean z4) {
        int size;
        int i;
        float backgroundDrawableRight;
        int i2;
        int i3;
        int i4;
        boolean z5;
        int i5;
        int i6;
        int i7;
        int i8;
        int i9;
        MessageObject.TextLayoutBlock textLayoutBlock;
        int i10;
        int i11;
        int min;
        float f5;
        int i12;
        Text text;
        int i13;
        ChatMessageCellDelegate chatMessageCellDelegate;
        int i14;
        int i15;
        int i16;
        Theme.MessageDrawable messageDrawable;
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        int parentWidth;
        int i17;
        MessageObject.GroupedMessagePosition groupedMessagePosition2;
        CachedStaticLayout cachedStaticLayout;
        if (arrayList == null || arrayList.isEmpty()) {
            return;
        }
        float f6 = 0.0f;
        if (f4 == 0.0f) {
            return;
        }
        if (z && !z2) {
            if (this.fullyDraw) {
                this.firstVisibleBlockNum = 0;
                this.lastVisibleBlockNum = arrayList.size();
            }
            i = this.firstVisibleBlockNum;
            size = this.lastVisibleBlockNum;
        } else {
            size = arrayList.size();
            i = 0;
        }
        boolean isTranslating = MessagesController.getInstance(this.currentAccount).getTranslateController().isTranslating(getMessageObject());
        boolean z6 = !z;
        MessageObject messageObject = this.currentMessageObject;
        if (z6 == (messageObject != null && messageObject.translated)) {
            if (this.translationLoadingFloat == null) {
                this.translationLoadingFloat = new AnimatedFloat(this, 350L, CubicBezierInterpolator.EASE_OUT_QUINT);
            }
            float f7 = this.translationLoadingFloat.set(isTranslating ? 1.0f : 0.0f);
            if (f7 > 0.0f) {
                if (this.translationLoadingDrawable == null) {
                    LoadingDrawable loadingDrawable = new LoadingDrawable();
                    this.translationLoadingDrawable = loadingDrawable;
                    loadingDrawable.setAppearByGradient(true);
                    if (this.translationLoadingPath == null) {
                        this.translationLoadingPath = new LinkPath(true);
                    }
                    this.translationLoadingDrawable.usePath(this.translationLoadingPath);
                    this.translationLoadingDrawable.setRadiiDp(5.0f);
                    this.translationLoadingDrawable.reset();
                }
                if (this.translationLoadingDrawableText != arrayList) {
                    this.translationLoadingDrawableText = arrayList;
                    this.translationLoadingPath.reset();
                    int i18 = 0;
                    while (i18 < arrayList.size()) {
                        MessageObject.TextLayoutBlock textLayoutBlock2 = arrayList.get(i18);
                        if (textLayoutBlock2 != null && (cachedStaticLayout = textLayoutBlock2.textLayout) != null) {
                            LinkPath linkPath = this.translationLoadingPath;
                            StaticLayout staticLayout = cachedStaticLayout.layout;
                            if (textLayoutBlock2.isRtl()) {
                                f6 = f3;
                            }
                            linkPath.setCurrentLayout(staticLayout, 0, f6, textLayoutBlock2.textYOffset);
                            StaticLayout staticLayout2 = textLayoutBlock2.textLayout.layout;
                            staticLayout2.getSelectionPath(0, staticLayout2.getText().length(), this.translationLoadingPath);
                        }
                        i18++;
                        f6 = 0.0f;
                    }
                    this.translationLoadingDrawable.updateBounds();
                }
                if (isTranslating && (this.translationLoadingDrawable.isDisappearing() || this.translationLoadingDrawable.isDisappeared())) {
                    this.translationLoadingDrawable.reset();
                    this.translationLoadingDrawable.resetDisappear();
                } else if (!isTranslating && !this.translationLoadingDrawable.isDisappearing() && !this.translationLoadingDrawable.isDisappeared()) {
                    this.translationLoadingDrawable.disappear();
                }
                MessageObject messageObject2 = this.currentMessageObject;
                int themedColor = getThemedColor((messageObject2 == null || !messageObject2.isOutOwner()) ? Theme.key_chat_messageLinkIn : Theme.key_chat_messageLinkOut);
                this.translationLoadingDrawable.setColors(Theme.multAlpha(themedColor, 0.05f), Theme.multAlpha(themedColor, 0.15f), Theme.multAlpha(themedColor, 0.1f), Theme.multAlpha(themedColor, 0.3f));
                canvas.save();
                canvas.translate(f, f2 + this.transitionYOffsetForDrawables);
                this.translationLoadingDrawable.setAlpha((int) (f4 * 255.0f * f7));
                this.translationLoadingDrawable.draw(canvas);
                canvas.restore();
                invalidate();
                if (i >= 0) {
                    return;
                }
                float f8 = 6.0f;
                if (this.currentMessagesGroup != null && (groupedMessagePosition = this.currentPosition) != null) {
                    int i19 = groupedMessagePosition.flags;
                    if ((i19 & 1) == 0 || (i19 & 2) == 0) {
                        if (AndroidUtilities.isTablet()) {
                            parentWidth = AndroidUtilities.getMinTabletSide();
                        } else {
                            parentWidth = getParentWidth();
                        }
                        int i20 = 0;
                        for (int i21 = 0; i21 < this.currentMessagesGroup.posArray.size(); i21++) {
                            if (this.currentMessagesGroup.posArray.get(i21).minY != 0) {
                                break;
                            }
                            double d = i20;
                            double ceil = Math.ceil(((groupedMessagePosition2.pw + groupedMessagePosition2.leftSpanOffset) / 1000.0f) * parentWidth);
                            Double.isNaN(d);
                            i20 = (int) (d + ceil);
                        }
                        if (!this.mediaBackground && this.currentMessageObject.isOutOwner()) {
                            i17 = (this.backgroundDrawableLeft + i20) - AndroidUtilities.dp(6.0f);
                        } else {
                            i17 = this.backgroundDrawableLeft + i20;
                        }
                        backgroundDrawableRight = i17 - (getExtraTextX() + AndroidUtilities.dp((this.isAvatarVisible ? 48 : 0) + 8));
                        float dp = (backgroundDrawableRight - (AndroidUtilities.dp(10 + ((this.currentMessageObject.isOutOwner() || this.mediaBackground || this.drawPinnedBottom) ? 0 : 6)) + getExtraTextX())) - f;
                        if (f4 != 1.0f) {
                            i2 = 0;
                            i3 = 0;
                            i4 = Integer.MIN_VALUE;
                        } else if (z3 || z4) {
                            int alpha = Theme.chat_msgTextPaint.getAlpha();
                            int alpha2 = Color.alpha(Theme.chat_msgTextPaint.linkColor);
                            Theme.chat_msgTextPaint.setAlpha((int) (alpha * f4));
                            TextPaint textPaint = Theme.chat_msgTextPaint;
                            textPaint.linkColor = ColorUtils.setAlphaComponent(textPaint.linkColor, (int) (alpha2 * f4));
                            i3 = alpha;
                            i2 = alpha2;
                            i4 = Integer.MIN_VALUE;
                            z5 = true;
                            int color = (this.currentMessageObject.isOutOwner() || ChatObject.isChannelAndNotMegaGroup(this.currentMessageObject.getChatId(), this.currentAccount)) ? Theme.chat_msgTextPaint.getColor() : getThemedColor(Theme.key_chat_outTimeText);
                            if (this.quoteHighlight == null && this.currentMessagesGroup == null && (messageDrawable = this.currentBackgroundDrawable) != null) {
                                canvas.save();
                                canvas.clipPath(messageDrawable.makePath());
                                Paint paint = this.quoteHighlight.paint;
                                MessageObject messageObject3 = this.currentMessageObject;
                                int themedColor2 = getThemedColor((messageObject3 == null || !messageObject3.isOutOwner() || this.currentMessageObject.preview) ? Theme.key_chat_inReplyLine : Theme.key_chat_outReplyLine);
                                Theme.isCurrentThemeDark();
                                paint.setColor(Theme.multAlpha(themedColor2, 0.2f));
                                i5 = i2;
                                i6 = i3;
                                i7 = i4;
                                this.quoteHighlight.draw(canvas, f, f2, messageDrawable.getBounds(), getHighlightAlpha(true));
                                canvas.restore();
                            } else {
                                i5 = i2;
                                i6 = i3;
                                i7 = i4;
                            }
                            i8 = i;
                            while (i8 <= size && i8 < arrayList.size()) {
                                textLayoutBlock = arrayList.get(i8);
                                canvas.save();
                                canvas.translate(f - (textLayoutBlock.isRtl() ? 0.0f : f3 - (textLayoutBlock.quote ? AndroidUtilities.dp(10.0f) : 0)), f2 + textLayoutBlock.textYOffset + this.transitionYOffsetForDrawables + textLayoutBlock.padTop);
                                if (i8 == this.linkBlockNum) {
                                    if (!z3 && this.links.draw(canvas)) {
                                        invalidate();
                                    }
                                    drawProgressLoadingLink(canvas, i8);
                                }
                                if (!textLayoutBlock.quote) {
                                    if (this.quoteLine == null) {
                                        this.quoteLine = new ReplyMessageLine(this);
                                    }
                                    this.quoteLine.check(this.currentMessageObject, this.currentUser, this.currentChat, this.resourcesProvider, 1);
                                    int dp2 = (int) (textLayoutBlock.maxRight + ((float) AndroidUtilities.dp(24.0f)) > 0.7f * dp ? dp : textLayoutBlock.maxRight + AndroidUtilities.dp(24.0f));
                                    RectF rectF = AndroidUtilities.rectTmp;
                                    rectF.set(0.0f, (-textLayoutBlock.padTop) + AndroidUtilities.dp(textLayoutBlock.first ? 4.66f : 3.0f), dp2, textLayoutBlock.height + AndroidUtilities.dp(4.0f));
                                    rectF.offset(textLayoutBlock.isRtl() ? f3 - AndroidUtilities.dp(10.0f) : 0.0f, 0.0f);
                                    i10 = i8;
                                    this.quoteLine.drawBackground(canvas, rectF, 5.0f, 5.0f, 5.0f, f4);
                                    this.quoteLine.drawLine(canvas, rectF, f4);
                                    if (this.replyQuoteDrawable == null) {
                                        this.replyQuoteDrawable = getContext().getResources().getDrawable(R.drawable.mini_quote).mutate();
                                    }
                                    if (this.quoteLine.getColor() != this.replyQuoteDrawableColor) {
                                        Drawable drawable = this.replyQuoteDrawable;
                                        int color2 = this.quoteLine.getColor();
                                        this.replyQuoteDrawableColor = color2;
                                        drawable.setColorFilter(new PorterDuffColorFilter(color2, PorterDuff.Mode.SRC_IN));
                                    }
                                    this.replyQuoteDrawable.setBounds((int) ((rectF.right - AndroidUtilities.dp((!this.drawPinnedTop ? 1 : 0) + 2)) - this.replyQuoteDrawable.getIntrinsicWidth()), (int) (rectF.top + AndroidUtilities.dp((!this.drawPinnedTop ? 1 : 0) + 2)), (int) (rectF.right - AndroidUtilities.dp((!this.drawPinnedTop ? 1 : 0) + 2)), (int) (rectF.top + AndroidUtilities.dp((!this.drawPinnedTop ? 1 : 0) + 2) + this.replyQuoteDrawable.getIntrinsicHeight()));
                                    this.replyQuoteDrawable.setAlpha((int) (f4 * 255.0f));
                                    this.replyQuoteDrawable.draw(canvas);
                                    int color3 = this.quoteLine.getColor();
                                    TextPaint textPaint2 = Theme.chat_msgGameTextPaint;
                                    TextPaint textPaint3 = Theme.chat_replyTextPaint;
                                    TextPaint textPaint4 = Theme.chat_quoteTextPaint;
                                    TextPaint textPaint5 = Theme.chat_msgTextPaint;
                                    int color4 = this.quoteLine.getColor();
                                    textPaint5.linkColor = color4;
                                    textPaint4.linkColor = color4;
                                    textPaint3.linkColor = color4;
                                    textPaint2.linkColor = color4;
                                    i11 = color3;
                                } else {
                                    i10 = i8;
                                    TextPaint textPaint6 = Theme.chat_msgGameTextPaint;
                                    TextPaint textPaint7 = Theme.chat_replyTextPaint;
                                    TextPaint textPaint8 = Theme.chat_quoteTextPaint;
                                    TextPaint textPaint9 = Theme.chat_msgTextPaint;
                                    int themedColor3 = getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_messageLinkOut : Theme.key_chat_messageLinkIn);
                                    textPaint9.linkColor = themedColor3;
                                    textPaint8.linkColor = themedColor3;
                                    textPaint7.linkColor = themedColor3;
                                    textPaint6.linkColor = themedColor3;
                                    if (textLayoutBlock.code) {
                                        if (this.quoteLine == null) {
                                            this.quoteLine = new ReplyMessageLine(this);
                                        }
                                        this.quoteLine.check(this.currentMessageObject, this.currentUser, this.currentChat, this.resourcesProvider, 2);
                                        if (this.currentMessageObject.isOutOwner() && (Theme.isCurrentThemeDark() || Theme.isCustomTheme())) {
                                            this.quoteLine.setBackgroundColor(getThemedColor(Theme.key_chat_outCodeBackground));
                                        }
                                        RectF rectF2 = AndroidUtilities.rectTmp;
                                        rectF2.set(0.0f, (-AndroidUtilities.dp(f8)) - textLayoutBlock.languageHeight, this.namesOffset <= 0 ? dp + AndroidUtilities.dp(4.0f) : dp, textLayoutBlock.height + AndroidUtilities.dp(f8));
                                        rectF2.offset(textLayoutBlock.isRtl() ? f3 : 0.0f, 0.0f);
                                        if (textLayoutBlock.hasCodeCopyButton) {
                                            rectF2.bottom += AndroidUtilities.dp(38.0f);
                                        }
                                        if (!textLayoutBlock.first || this.namesOffset > 0 || z4) {
                                            min = Math.min(5, SharedConfig.bubbleRadius);
                                        } else if (this.currentMessageObject.isOutOwner() && this.pinnedTop) {
                                            min = Math.min(6, SharedConfig.bubbleRadius);
                                        } else {
                                            f5 = (SharedConfig.bubbleRadius / 3.0f) * 2.0f;
                                            float f9 = f5;
                                            this.quoteLine.drawBackground(canvas, rectF2, 5.0f, f9, Math.min(5, SharedConfig.bubbleRadius), f4);
                                            i12 = textLayoutBlock.languageHeight;
                                            if (i12 > 0) {
                                                float f10 = rectF2.bottom;
                                                rectF2.bottom = rectF2.top + i12;
                                                this.quoteLine.drawBackground(canvas, rectF2, 5.0f, f9, 0.0f, (Theme.isCurrentThemeDark() ? 0.6f : 0.8f) * f4);
                                                rectF2.bottom = f10;
                                            }
                                            this.quoteLine.drawLine(canvas, rectF2, f4);
                                            if (textLayoutBlock.hasCodeCopyButton) {
                                                textLayoutBlock.drawCopyCodeButton(canvas, rectF2, this.quoteLine.getColor(), this.quoteLine.getBackgroundColor(), f4);
                                            }
                                            canvas.translate(AndroidUtilities.dp(10.0f), 0.0f);
                                            text = textLayoutBlock.languageLayout;
                                            if (text == null) {
                                                f8 = 6.0f;
                                                text.ellipsize((int) (dp - AndroidUtilities.dp(12.0f))).draw(canvas, 0.0f, (-AndroidUtilities.dp(6.0f)) - (textLayoutBlock.languageHeight / 2.0f), this.quoteLine.color3, f4);
                                            } else {
                                                f8 = 6.0f;
                                            }
                                        }
                                        f5 = min;
                                        float f92 = f5;
                                        this.quoteLine.drawBackground(canvas, rectF2, 5.0f, f92, Math.min(5, SharedConfig.bubbleRadius), f4);
                                        i12 = textLayoutBlock.languageHeight;
                                        if (i12 > 0) {
                                        }
                                        this.quoteLine.drawLine(canvas, rectF2, f4);
                                        if (textLayoutBlock.hasCodeCopyButton) {
                                        }
                                        canvas.translate(AndroidUtilities.dp(10.0f), 0.0f);
                                        text = textLayoutBlock.languageLayout;
                                        if (text == null) {
                                        }
                                    }
                                    i11 = color;
                                }
                                i13 = i10;
                                if (i13 == this.linkSelectionBlockNum && this.quoteHighlight == null && !this.urlPathSelection.isEmpty() && !z3) {
                                    MessageObject messageObject4 = this.currentMessageObject;
                                    Paint paint2 = (messageObject4 == null && messageObject4.isOutOwner()) ? Theme.chat_outUrlPaint : Theme.chat_urlPaint;
                                    MessageObject messageObject5 = this.currentMessageObject;
                                    paint2.setColor(getThemedColor((messageObject5 == null && messageObject5.isOutOwner() && !this.currentMessageObject.preview) ? Theme.key_chat_outReplyLine : Theme.key_chat_inReplyLine));
                                    int alpha3 = (int) (paint2.getAlpha() * (!Theme.isCurrentThemeDark() ? 0.2f : 0.3f));
                                    paint2.setAlpha((int) (alpha3 * (!this.highlightedQuote ? getHighlightAlpha() : 1.0f)));
                                    for (i16 = 0; i16 < this.urlPathSelection.size(); i16++) {
                                        canvas.drawPath(this.urlPathSelection.get(i16), paint2);
                                    }
                                    paint2.setAlpha(alpha3);
                                }
                                chatMessageCellDelegate = this.delegate;
                                if (chatMessageCellDelegate != null && chatMessageCellDelegate.getTextSelectionHelper() != null && this.transitionParams.animateChangeProgress == 1.0f && !z3) {
                                    if (!z4) {
                                        this.delegate.getTextSelectionHelper().drawCaption(this.currentMessageObject, textLayoutBlock, canvas);
                                    } else {
                                        this.delegate.getTextSelectionHelper().draw(this.currentMessageObject, textLayoutBlock, canvas);
                                    }
                                }
                                try {
                                    Emoji.emojiDrawingYOffset = -this.transitionYOffsetForDrawables;
                                    i14 = size;
                                    i15 = i13;
                                    try {
                                        SpoilerEffect.renderWithRipple(this, this.invalidateSpoilersParent, i11, 0, textLayoutBlock.spoilersPatchedTextLayout, textLayoutBlock.textLayout, textLayoutBlock.spoilers, canvas, this.currentPosition == null);
                                    } catch (Exception e) {
                                        e = e;
                                    }
                                } catch (Exception e2) {
                                    e = e2;
                                    i14 = size;
                                    i15 = i13;
                                }
                                try {
                                    Emoji.emojiDrawingYOffset = 0.0f;
                                } catch (Exception e3) {
                                    e = e3;
                                    FileLog.e(e);
                                    canvas.restore();
                                    i8 = i15 + 1;
                                    size = i14;
                                }
                                canvas.restore();
                                i8 = i15 + 1;
                                size = i14;
                            }
                            if (z5) {
                                Theme.chat_msgTextPaint.setAlpha(i6);
                                TextPaint textPaint10 = Theme.chat_msgTextPaint;
                                textPaint10.linkColor = ColorUtils.setAlphaComponent(textPaint10.linkColor, i5);
                            }
                            i9 = i7;
                            if (i9 != Integer.MIN_VALUE) {
                                canvas.restoreToCount(i9);
                                return;
                            }
                            return;
                        } else {
                            Theme.MessageDrawable messageDrawable2 = this.currentBackgroundDrawable;
                            if (messageDrawable2 != null) {
                                int i22 = messageDrawable2.getBounds().top;
                                int i23 = this.currentBackgroundDrawable.getBounds().bottom;
                                if (z4) {
                                    this.rect.set(getCurrentBackgroundLeft() - AndroidUtilities.dp(10.0f), i22, this.currentBackgroundDrawable.getBounds().right + AndroidUtilities.dp(10.0f), i23);
                                } else {
                                    if (getY() < 0.0f) {
                                        i22 = (int) (-getY());
                                    }
                                    float y = getY() + getMeasuredHeight();
                                    int i24 = this.parentHeight;
                                    if (y > i24) {
                                        i23 = (int) (i24 - getY());
                                    }
                                    this.rect.set(getCurrentBackgroundLeft(), i22, this.currentBackgroundDrawable.getBounds().right, i23);
                                }
                            } else {
                                this.rect.set(0.0f, 0.0f, getMeasuredWidth(), getMeasuredHeight());
                            }
                            i4 = canvas.saveLayerAlpha(this.rect, (int) (f4 * 255.0f), 31);
                            i2 = 0;
                            i3 = 0;
                        }
                        z5 = false;
                        int color5 = (this.currentMessageObject.isOutOwner() || ChatObject.isChannelAndNotMegaGroup(this.currentMessageObject.getChatId(), this.currentAccount)) ? Theme.chat_msgTextPaint.getColor() : getThemedColor(Theme.key_chat_outTimeText);
                        if (this.quoteHighlight == null) {
                        }
                        i5 = i2;
                        i6 = i3;
                        i7 = i4;
                        i8 = i;
                        while (i8 <= size) {
                            textLayoutBlock = arrayList.get(i8);
                            canvas.save();
                            if (textLayoutBlock.isRtl()) {
                            }
                            canvas.translate(f - (textLayoutBlock.isRtl() ? 0.0f : f3 - (textLayoutBlock.quote ? AndroidUtilities.dp(10.0f) : 0)), f2 + textLayoutBlock.textYOffset + this.transitionYOffsetForDrawables + textLayoutBlock.padTop);
                            if (i8 == this.linkBlockNum) {
                            }
                            if (!textLayoutBlock.quote) {
                            }
                            i13 = i10;
                            if (i13 == this.linkSelectionBlockNum) {
                                MessageObject messageObject42 = this.currentMessageObject;
                                if (messageObject42 == null) {
                                }
                                MessageObject messageObject52 = this.currentMessageObject;
                                paint2.setColor(getThemedColor((messageObject52 == null && messageObject52.isOutOwner() && !this.currentMessageObject.preview) ? Theme.key_chat_outReplyLine : Theme.key_chat_inReplyLine));
                                int alpha32 = (int) (paint2.getAlpha() * (!Theme.isCurrentThemeDark() ? 0.2f : 0.3f));
                                paint2.setAlpha((int) (alpha32 * (!this.highlightedQuote ? getHighlightAlpha() : 1.0f)));
                                while (i16 < this.urlPathSelection.size()) {
                                }
                                paint2.setAlpha(alpha32);
                            }
                            chatMessageCellDelegate = this.delegate;
                            if (chatMessageCellDelegate != null) {
                                if (!z4) {
                                }
                            }
                            Emoji.emojiDrawingYOffset = -this.transitionYOffsetForDrawables;
                            i14 = size;
                            i15 = i13;
                            SpoilerEffect.renderWithRipple(this, this.invalidateSpoilersParent, i11, 0, textLayoutBlock.spoilersPatchedTextLayout, textLayoutBlock.textLayout, textLayoutBlock.spoilers, canvas, this.currentPosition == null);
                            Emoji.emojiDrawingYOffset = 0.0f;
                            canvas.restore();
                            i8 = i15 + 1;
                            size = i14;
                        }
                        if (z5) {
                        }
                        i9 = i7;
                        if (i9 != Integer.MIN_VALUE) {
                        }
                    }
                }
                backgroundDrawableRight = getBackgroundDrawableRight() + this.transitionParams.deltaRight;
                float dp3 = (backgroundDrawableRight - (AndroidUtilities.dp(10 + ((this.currentMessageObject.isOutOwner() || this.mediaBackground || this.drawPinnedBottom) ? 0 : 6)) + getExtraTextX())) - f;
                if (f4 != 1.0f) {
                }
                z5 = false;
                int color52 = (this.currentMessageObject.isOutOwner() || ChatObject.isChannelAndNotMegaGroup(this.currentMessageObject.getChatId(), this.currentAccount)) ? Theme.chat_msgTextPaint.getColor() : getThemedColor(Theme.key_chat_outTimeText);
                if (this.quoteHighlight == null) {
                }
                i5 = i2;
                i6 = i3;
                i7 = i4;
                i8 = i;
                while (i8 <= size) {
                }
                if (z5) {
                }
                i9 = i7;
                if (i9 != Integer.MIN_VALUE) {
                }
            }
        }
        if (i >= 0) {
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:10:0x0021  */
    /* JADX WARN: Removed duplicated region for block: B:15:0x003a  */
    /* JADX WARN: Removed duplicated region for block: B:22:0x0045  */
    /* JADX WARN: Removed duplicated region for block: B:23:0x0047  */
    /* JADX WARN: Removed duplicated region for block: B:25:0x004a  */
    /* JADX WARN: Removed duplicated region for block: B:26:0x004c  */
    /* JADX WARN: Removed duplicated region for block: B:29:0x0052  */
    /* JADX WARN: Removed duplicated region for block: B:33:0x0060  */
    /* JADX WARN: Removed duplicated region for block: B:35:0x0063 A[LOOP:1: B:35:0x0063->B:37:0x0066, LOOP_START, PHI: r2 r5 
      PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:34:0x0061, B:37:0x0066] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r5v2 int) = (r5v1 int), (r5v3 int) binds: [B:34:0x0061, B:37:0x0066] A[DONT_GENERATE, DONT_INLINE]] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public AnimatedEmojiSpan[] getAnimatedEmojiSpans() {
        AnimatedEmojiSpan[] animatedEmojiSpanArr;
        MessageObject messageObject;
        AnimatedEmojiSpan[] animatedEmojiSpanArr2;
        int i;
        MessageObject messageObject2 = this.currentMessageObject;
        AnimatedEmojiSpan[] animatedEmojiSpanArr3 = null;
        int i2 = 0;
        if (messageObject2 != null) {
            CharSequence charSequence = messageObject2.messageText;
            if (charSequence instanceof Spanned) {
                animatedEmojiSpanArr = (AnimatedEmojiSpan[]) ((Spanned) charSequence).getSpans(0, charSequence.length(), AnimatedEmojiSpan.class);
                messageObject = this.currentMessageObject;
                if (messageObject != null) {
                    CharSequence charSequence2 = messageObject.caption;
                    if (charSequence2 instanceof Spanned) {
                        animatedEmojiSpanArr2 = (AnimatedEmojiSpan[]) ((Spanned) charSequence2).getSpans(0, charSequence2.length(), AnimatedEmojiSpan.class);
                        if ((animatedEmojiSpanArr != null && animatedEmojiSpanArr.length != 0) || (animatedEmojiSpanArr2 != null && animatedEmojiSpanArr2.length != 0)) {
                            animatedEmojiSpanArr3 = new AnimatedEmojiSpan[(animatedEmojiSpanArr != null ? 0 : animatedEmojiSpanArr.length) + (animatedEmojiSpanArr2 != null ? 0 : animatedEmojiSpanArr2.length)];
                            if (animatedEmojiSpanArr == null) {
                                int i3 = 0;
                                i = 0;
                                while (i3 < animatedEmojiSpanArr.length) {
                                    animatedEmojiSpanArr3[i] = animatedEmojiSpanArr[i3];
                                    i3++;
                                    i++;
                                }
                            } else {
                                i = 0;
                            }
                            if (animatedEmojiSpanArr2 != null) {
                                while (i2 < animatedEmojiSpanArr2.length) {
                                    animatedEmojiSpanArr3[i] = animatedEmojiSpanArr2[i2];
                                    i2++;
                                    i++;
                                }
                            }
                        }
                        return animatedEmojiSpanArr3;
                    }
                }
                animatedEmojiSpanArr2 = null;
                if (animatedEmojiSpanArr != null) {
                    animatedEmojiSpanArr3 = new AnimatedEmojiSpan[(animatedEmojiSpanArr != null ? 0 : animatedEmojiSpanArr.length) + (animatedEmojiSpanArr2 != null ? 0 : animatedEmojiSpanArr2.length)];
                    if (animatedEmojiSpanArr == null) {
                    }
                    if (animatedEmojiSpanArr2 != null) {
                    }
                    return animatedEmojiSpanArr3;
                }
                animatedEmojiSpanArr3 = new AnimatedEmojiSpan[(animatedEmojiSpanArr != null ? 0 : animatedEmojiSpanArr.length) + (animatedEmojiSpanArr2 != null ? 0 : animatedEmojiSpanArr2.length)];
                if (animatedEmojiSpanArr == null) {
                }
                if (animatedEmojiSpanArr2 != null) {
                }
                return animatedEmojiSpanArr3;
            }
        }
        animatedEmojiSpanArr = null;
        messageObject = this.currentMessageObject;
        if (messageObject != null) {
        }
        animatedEmojiSpanArr2 = null;
        if (animatedEmojiSpanArr != null) {
        }
        animatedEmojiSpanArr3 = new AnimatedEmojiSpan[(animatedEmojiSpanArr != null ? 0 : animatedEmojiSpanArr.length) + (animatedEmojiSpanArr2 != null ? 0 : animatedEmojiSpanArr2.length)];
        if (animatedEmojiSpanArr == null) {
        }
        if (animatedEmojiSpanArr2 != null) {
        }
        return animatedEmojiSpanArr3;
    }

    public void updateCaptionLayout() {
        float imageX;
        float imageY;
        float imageHeight;
        MessageObject messageObject = this.currentMessageObject;
        int i = messageObject.type;
        if (i == 1 || i == 20 || this.documentAttachType == 4 || i == 8 || i == 23) {
            TransitionParams transitionParams = this.transitionParams;
            if (transitionParams.imageChangeBoundsTransition) {
                imageX = transitionParams.animateToImageX;
                imageY = transitionParams.animateToImageY;
                imageHeight = transitionParams.animateToImageH;
            } else {
                imageX = this.photoImage.getImageX();
                imageY = this.photoImage.getImageY();
                imageHeight = this.photoImage.getImageHeight();
            }
            this.captionX = imageX + AndroidUtilities.dp(5.0f) + this.captionOffsetX;
            this.captionY = imageY + imageHeight + AndroidUtilities.dp(6.0f);
        } else {
            if (this.hasOldCaptionPreview) {
                this.captionX = this.backgroundDrawableLeft + AndroidUtilities.dp(messageObject.isOutOwner() ? 11.0f : 17.0f) + this.captionOffsetX;
                float dp = (((this.totalHeight - this.captionHeight) - AndroidUtilities.dp(this.drawPinnedTop ? 9.0f : 10.0f)) - this.linkPreviewHeight) - AndroidUtilities.dp(17.0f);
                this.captionY = dp;
                if (this.drawCommentButton && this.drawSideButton != 3) {
                    this.captionY = dp - AndroidUtilities.dp(shouldDrawTimeOnMedia() ? 41.3f : 43.0f);
                }
            } else {
                if (this.isRoundVideo) {
                    this.captionX = getBackgroundDrawableLeft() + AndroidUtilities.dp((this.currentMessageObject.isOutOwner() ? 0 : 6) + 11);
                } else {
                    int i2 = this.backgroundDrawableLeft;
                    if (!messageObject.isOutOwner() && !this.mediaBackground && !this.drawPinnedBottom) {
                        r7 = 17.0f;
                    }
                    this.captionX = i2 + AndroidUtilities.dp(r7) + this.captionOffsetX;
                }
                float dp2 = (this.totalHeight - this.captionHeight) - AndroidUtilities.dp(this.drawPinnedTop ? 9.0f : 10.0f);
                this.captionY = dp2;
                if (this.drawCommentButton && this.drawSideButton != 3) {
                    this.captionY = dp2 - AndroidUtilities.dp(shouldDrawTimeOnMedia() ? 41.3f : 43.0f);
                }
                ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
                if (!reactionsLayoutInBubble.isEmpty && !reactionsLayoutInBubble.isSmall) {
                    this.captionY -= reactionsLayoutInBubble.totalHeight;
                }
            }
        }
        this.captionX += getExtraTextX();
    }

    private boolean textIsSelectionMode() {
        ChatMessageCellDelegate chatMessageCellDelegate;
        return getCurrentMessagesGroup() == null && (chatMessageCellDelegate = this.delegate) != null && chatMessageCellDelegate.getTextSelectionHelper() != null && this.delegate.getTextSelectionHelper().isSelected(this.currentMessageObject);
    }

    public float getViewTop() {
        return this.viewTop;
    }

    public int getBackgroundHeight() {
        return this.backgroundHeight;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public int getMiniIconForCurrentState() {
        int i = this.miniButtonState;
        if (i < 0) {
            return 4;
        }
        return i == 0 ? 2 : 3;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public int getIconForCurrentState() {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null || (messageObject != null && messageObject.hasExtendedMedia())) {
            return 4;
        }
        if (this.documentAttachType == 7 && this.currentMessageObject.isVoiceTranscriptionOpen() && this.canStreamVideo) {
            int i = this.buttonState;
            return (i == 1 || i == 4) ? 1 : 0;
        }
        int i2 = this.documentAttachType;
        if (i2 == 3 || i2 == 5) {
            if (this.currentMessageObject.isOutOwner()) {
                this.radialProgress.setColorKeys(Theme.key_chat_outLoader, Theme.key_chat_outLoaderSelected, Theme.key_chat_outMediaIcon, Theme.key_chat_outMediaIconSelected);
            } else {
                ReplyMessageLine replyMessageLine = this.linkLine;
                if (replyMessageLine != null && this.hasLinkPreview) {
                    this.radialProgress.setColors(replyMessageLine.getColor(), this.linkLine.getColor(), Theme.blendOver(-1, Theme.multAlpha(this.linkLine.getColor(), 0.01f)), Theme.blendOver(-1, Theme.multAlpha(this.linkLine.getColor(), 0.05f)));
                } else {
                    this.radialProgress.setColorKeys(Theme.key_chat_inLoader, Theme.key_chat_inLoaderSelected, Theme.key_chat_inMediaIcon, Theme.key_chat_inMediaIconSelected);
                }
            }
            int i3 = this.buttonState;
            if (i3 == 1) {
                return 1;
            }
            if (i3 == 2) {
                return 2;
            }
            return i3 == 4 ? 3 : 0;
        }
        if (i2 == 1 && !this.drawPhotoImage) {
            if (this.currentMessageObject.isOutOwner()) {
                this.radialProgress.setColorKeys(Theme.key_chat_outLoader, Theme.key_chat_outLoaderSelected, Theme.key_chat_outMediaIcon, Theme.key_chat_outMediaIconSelected);
            } else {
                ReplyMessageLine replyMessageLine2 = this.linkLine;
                if (replyMessageLine2 != null && this.hasLinkPreview) {
                    this.radialProgress.setColors(replyMessageLine2.getColor(), this.linkLine.getColor(), Theme.blendOver(-1, Theme.multAlpha(this.linkLine.getColor(), 0.01f)), Theme.blendOver(-1, Theme.multAlpha(this.linkLine.getColor(), 0.05f)));
                } else {
                    this.radialProgress.setColorKeys(Theme.key_chat_inLoader, Theme.key_chat_inLoaderSelected, Theme.key_chat_inMediaIcon, Theme.key_chat_inMediaIconSelected);
                }
            }
            int i4 = this.buttonState;
            if (i4 == -1) {
                return 5;
            }
            if (i4 == 0) {
                return 2;
            }
            if (i4 == 1) {
                return 3;
            }
        } else {
            RadialProgress2 radialProgress2 = this.radialProgress;
            int i5 = Theme.key_chat_mediaLoaderPhoto;
            int i6 = Theme.key_chat_mediaLoaderPhotoSelected;
            int i7 = Theme.key_chat_mediaLoaderPhotoIcon;
            int i8 = Theme.key_chat_mediaLoaderPhotoIconSelected;
            radialProgress2.setColorKeys(i5, i6, i7, i8);
            this.videoRadialProgress.setColorKeys(i5, i6, i7, i8);
            int i9 = this.buttonState;
            if (i9 >= 0 && i9 < 4) {
                if (i9 == 0) {
                    return 2;
                }
                if (i9 == 1) {
                    return 3;
                }
                return (i9 != 2 && this.autoPlayingMedia) ? 4 : 0;
            } else if (i9 == -1) {
                if (this.documentAttachType == 1) {
                    if (this.drawPhotoImage && (this.currentPhotoObject != null || this.currentPhotoObjectThumb != null)) {
                        if (this.photoImage.hasBitmapImage()) {
                            return 4;
                        }
                        MessageObject messageObject2 = this.currentMessageObject;
                        if (messageObject2.mediaExists || messageObject2.attachPathExists) {
                            return 4;
                        }
                    }
                    return 5;
                } else if (this.currentMessageObject.needDrawBluredPreview()) {
                    return 7;
                } else {
                    if (this.hasEmbed) {
                        return 0;
                    }
                }
            }
        }
        MessageObject messageObject3 = this.currentMessageObject;
        return (messageObject3 != null && this.isRoundVideo && messageObject3.isVoiceTranscriptionOpen()) ? 0 : 4;
    }

    public int getMaxNameWidth() {
        int min;
        int dp;
        MessageObject messageObject;
        MessageObject messageObject2;
        int i;
        int i2;
        int dp2;
        int parentWidth;
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        int i3 = this.documentAttachType;
        if (i3 == 6 || i3 == 8 || (i = (messageObject2 = this.currentMessageObject).type) == 5) {
            if (AndroidUtilities.isTablet()) {
                min = AndroidUtilities.getMinTabletSide();
                dp = AndroidUtilities.dp(needDrawAvatar() ? 42.0f : 0.0f);
            } else {
                min = Math.min(getParentWidth(), AndroidUtilities.displaySize.y);
                dp = AndroidUtilities.dp(needDrawAvatar() ? 42.0f : 0.0f);
            }
            int i4 = min - dp;
            MessageObject messageObject3 = this.currentMessageObject;
            if (messageObject3 != null && messageObject3.isSaved && messageObject3.isOutOwner() && checkNeedDrawShareButton(this.currentMessageObject)) {
                i4 -= AndroidUtilities.dp(25.0f);
            }
            if (this.isPlayingRound && ((messageObject = this.currentMessageObject) == null || !messageObject.isVoiceTranscriptionOpen())) {
                return (i4 - (this.backgroundWidth - (AndroidUtilities.roundPlayingMessageSize - AndroidUtilities.roundMessageSize))) - AndroidUtilities.dp(57.0f);
            }
            return (i4 - this.backgroundWidth) - AndroidUtilities.dp(57.0f);
        }
        MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
        if (groupedMessages != null && !groupedMessages.isDocuments) {
            if (AndroidUtilities.isTablet()) {
                parentWidth = AndroidUtilities.getMinTabletSide();
            } else {
                parentWidth = getParentWidth();
            }
            i2 = 0;
            for (int i5 = 0; i5 < this.currentMessagesGroup.posArray.size(); i5++) {
                if (this.currentMessagesGroup.posArray.get(i5).minY != 0) {
                    break;
                }
                double d = i2;
                double ceil = Math.ceil(((groupedMessagePosition.pw + groupedMessagePosition.leftSpanOffset) / 1000.0f) * parentWidth);
                Double.isNaN(d);
                i2 = (int) (d + ceil);
            }
            dp2 = AndroidUtilities.dp((this.isAvatarVisible ? 48 : 0) + 31);
        } else if (i == 19) {
            return Math.max(messageObject2.textWidth, (int) (((AndroidUtilities.displaySize.x - AndroidUtilities.dp(52.0f)) - (this.isAvatarVisible ? AndroidUtilities.dp(48.0f) : 0)) * 0.5f));
        } else {
            i2 = this.backgroundWidth;
            if (messageObject2 != null && messageObject2.isSaved && messageObject2.isOutOwner() && checkNeedDrawShareButton(this.currentMessageObject)) {
                i2 -= AndroidUtilities.dp(25.0f);
            }
            dp2 = AndroidUtilities.dp(this.mediaBackground ? 22.0f : 31.0f);
        }
        return i2 - dp2;
    }

    /* JADX WARN: Code restructure failed: missing block: B:93:0x0132, code lost:
        if ((r2 & 2) != 0) goto L55;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void updateButtonState(boolean z, boolean z2, boolean z3) {
        String fileName;
        boolean z4;
        int i;
        int i2;
        int i3;
        boolean z5;
        boolean z6;
        boolean isLoadingVideo;
        int i4;
        boolean z7;
        int i5;
        boolean z8;
        int i6;
        int i7;
        MessageObject messageObject;
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        MessageObject messageObject2 = this.currentMessageObject;
        if (messageObject2 == null) {
            return;
        }
        if (messageObject2.type == 23 && messageObject2.isVideoStory()) {
            this.buttonState = 2;
            getIconForCurrentState();
            return;
        }
        boolean z9 = (!z2 || (!PhotoViewer.isShowingImage(this.currentMessageObject) && this.attachedToWindow)) ? z2 : false;
        this.drawRadialCheckBackground = false;
        MessageObject messageObject3 = this.currentMessageObject;
        int i8 = messageObject3.type;
        if (i8 == 1) {
            TLRPC$PhotoSize tLRPC$PhotoSize = this.currentPhotoObject;
            if (tLRPC$PhotoSize == null) {
                this.radialProgress.setIcon(4, z, z9);
                return;
            } else {
                fileName = FileLoader.getAttachFileName(tLRPC$PhotoSize);
                z4 = this.currentMessageObject.mediaExists;
            }
        } else if (i8 == 8 || (i2 = this.documentAttachType) == 7 || i2 == 4 || i2 == 8 || i8 == 9 || i2 == 3 || i2 == 5) {
            if (messageObject3.useCustomPhoto) {
                this.buttonState = 1;
                this.radialProgress.setIcon(getIconForCurrentState(), z, z9);
                return;
            } else if (messageObject3.attachPathExists && !TextUtils.isEmpty(messageObject3.messageOwner.attachPath)) {
                fileName = this.currentMessageObject.messageOwner.attachPath;
                z4 = true;
            } else {
                if (!this.currentMessageObject.isSendError() || (i = this.documentAttachType) == 3 || i == 5) {
                    fileName = this.currentMessageObject.getFileName();
                    z4 = this.currentMessageObject.mediaExists;
                }
                fileName = null;
                z4 = false;
            }
        } else if (i2 != 0) {
            fileName = FileLoader.getAttachFileName(this.documentAttach);
            z4 = this.currentMessageObject.mediaExists;
        } else {
            TLRPC$PhotoSize tLRPC$PhotoSize2 = this.currentPhotoObject;
            if (tLRPC$PhotoSize2 != null) {
                fileName = FileLoader.getAttachFileName(tLRPC$PhotoSize2);
                z4 = this.currentMessageObject.mediaExists;
            }
            fileName = null;
            z4 = false;
        }
        TLRPC$Document tLRPC$Document = this.documentAttach;
        boolean canDownloadMedia = (tLRPC$Document == null || tLRPC$Document.dc_id != Integer.MIN_VALUE) ? DownloadController.getInstance(this.currentAccount).canDownloadMedia(this.currentMessageObject) : false;
        this.canStreamVideo = (this.currentMessageObject.isSent() || this.currentMessageObject.isForwarded()) && ((i3 = this.documentAttachType) == 4 || i3 == 7 || (i3 == 2 && canDownloadMedia)) && this.currentMessageObject.canStreamVideo() && !this.currentMessageObject.needDrawBluredPreview();
        if (SharedConfig.streamMedia) {
            z5 = z9;
            if (((int) this.currentMessageObject.getDialogId()) != 0 && !this.currentMessageObject.isSecretMedia()) {
                if (this.documentAttachType != 5) {
                    if (this.canStreamVideo && (groupedMessagePosition = this.currentPosition) != null) {
                        int i9 = groupedMessagePosition.flags;
                        if ((i9 & 1) != 0) {
                        }
                    }
                }
                this.hasMiniProgress = z4 ? 1 : 2;
                z4 = true;
            }
        } else {
            z5 = z9;
        }
        if (this.currentMessageObject.isSendError() || (TextUtils.isEmpty(fileName) && (this.currentMessageObject.isAnyKindOfSticker() || (!this.currentMessageObject.isSending() && !this.currentMessageObject.isEditing())))) {
            this.radialProgress.setIcon(4, z, false);
            this.radialProgress.setMiniIcon(4, z, false);
            this.videoRadialProgress.setIcon(4, z, false);
            this.videoRadialProgress.setMiniIcon(4, z, false);
            return;
        }
        HashMap<String, String> hashMap = this.currentMessageObject.messageOwner.params;
        boolean z10 = hashMap != null && hashMap.containsKey("query_id");
        int i10 = this.documentAttachType;
        if (i10 == 3 || i10 == 5 || (i10 == 7 && (messageObject = this.currentMessageObject) != null && messageObject.isVoiceTranscriptionOpen() && this.canStreamVideo)) {
            z6 = z5;
            if ((this.currentMessageObject.isOut() && ((this.currentMessageObject.isSending() && !this.currentMessageObject.isForwarded()) || (this.currentMessageObject.isEditing() && this.currentMessageObject.isEditingMedia()))) || (this.currentMessageObject.isSendError() && z10)) {
                if (!TextUtils.isEmpty(this.currentMessageObject.messageOwner.attachPath)) {
                    DownloadController downloadController = DownloadController.getInstance(this.currentAccount);
                    MessageObject messageObject4 = this.currentMessageObject;
                    downloadController.addLoadingFileObserver(messageObject4.messageOwner.attachPath, messageObject4, this);
                    this.wasSending = true;
                    this.buttonState = 4;
                    boolean isSendingMessage = SendMessagesHelper.getInstance(this.currentAccount).isSendingMessage(this.currentMessageObject.getId());
                    if (this.currentPosition != null && isSendingMessage && this.buttonState == 4) {
                        this.drawRadialCheckBackground = true;
                        getIconForCurrentState();
                        this.radialProgress.setIcon(6, z, z6);
                    } else {
                        this.radialProgress.setIcon(getIconForCurrentState(), z, z6);
                    }
                    this.radialProgress.setMiniIcon(4, z, z6);
                    if (!z10) {
                        long[] fileProgressSizes = ImageLoader.getInstance().getFileProgressSizes(this.currentMessageObject.messageOwner.attachPath);
                        if (fileProgressSizes == null && isSendingMessage) {
                            r15 = 1.0f;
                        } else if (fileProgressSizes != null) {
                            r15 = DownloadController.getProgress(fileProgressSizes);
                        }
                        this.radialProgress.setProgress(r15, false);
                    } else {
                        this.radialProgress.setProgress(0.0f, false);
                    }
                } else {
                    this.buttonState = -1;
                    getIconForCurrentState();
                    this.radialProgress.setIcon(12, z, false);
                    this.radialProgress.setProgress(0.0f, false);
                    this.radialProgress.setMiniIcon(4, z, false);
                }
            } else if (this.hasMiniProgress != 0) {
                this.radialProgress.setMiniProgressBackgroundColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outLoader : Theme.key_chat_inLoader));
                if (!MediaController.getInstance().isPlayingMessage(this.currentMessageObject) || MediaController.getInstance().isMessagePaused()) {
                    this.buttonState = 0;
                } else {
                    this.buttonState = 1;
                }
                this.radialProgress.setIcon(getIconForCurrentState(), z, z6);
                if (this.hasMiniProgress == 1) {
                    DownloadController.getInstance(this.currentAccount).removeLoadingFileObserver(this);
                    this.miniButtonState = -1;
                } else {
                    DownloadController.getInstance(this.currentAccount).addLoadingFileObserver(fileName, this.currentMessageObject, this);
                    if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(fileName)) {
                        createLoadingProgressLayout(this.documentAttach);
                        this.miniButtonState = 0;
                    } else {
                        this.miniButtonState = 1;
                        long[] fileProgressSizes2 = ImageLoader.getInstance().getFileProgressSizes(fileName);
                        if (fileProgressSizes2 != null) {
                            this.radialProgress.setProgress(DownloadController.getProgress(fileProgressSizes2), z6);
                            createLoadingProgressLayout(fileProgressSizes2[0], fileProgressSizes2[1]);
                        } else {
                            this.radialProgress.setProgress(0.0f, z6);
                            createLoadingProgressLayout(0L, this.currentMessageObject.getSize());
                        }
                    }
                }
                this.radialProgress.setMiniIcon(getMiniIconForCurrentState(), z, z6);
            } else if (z4) {
                DownloadController.getInstance(this.currentAccount).removeLoadingFileObserver(this);
                if (!MediaController.getInstance().isPlayingMessage(this.currentMessageObject) || MediaController.getInstance().isMessagePaused()) {
                    this.buttonState = 0;
                } else {
                    this.buttonState = 1;
                }
                this.radialProgress.setIcon(getIconForCurrentState(), z, z6);
            } else {
                DownloadController.getInstance(this.currentAccount).addLoadingFileObserver(fileName, this.currentMessageObject, this);
                if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(fileName)) {
                    this.buttonState = 2;
                } else {
                    this.buttonState = 4;
                    long[] fileProgressSizes3 = ImageLoader.getInstance().getFileProgressSizes(fileName);
                    if (fileProgressSizes3 != null) {
                        this.radialProgress.setProgress(DownloadController.getProgress(fileProgressSizes3), z6);
                        createLoadingProgressLayout(fileProgressSizes3[0], fileProgressSizes3[1]);
                    } else {
                        createLoadingProgressLayout(this.documentAttach);
                        this.radialProgress.setProgress(0.0f, z6);
                    }
                }
                this.radialProgress.setIcon(getIconForCurrentState(), z, z6);
            }
            updatePlayingMessageProgress();
        } else {
            MessageObject messageObject5 = this.currentMessageObject;
            if (messageObject5.type == 0 && (i6 = this.documentAttachType) != 1 && i6 != 10 && i6 != 2 && i6 != 4 && i6 != 8 && i6 != 9) {
                if (this.currentPhotoObject == null || !this.drawImageButton) {
                    return;
                }
                if (!z4) {
                    DownloadController.getInstance(this.currentAccount).addLoadingFileObserver(fileName, this.currentMessageObject, this);
                    if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(fileName)) {
                        MessageObject messageObject6 = this.currentMessageObject;
                        if (!messageObject6.loadingCancelled && canDownloadMedia && ((i7 = this.documentAttachType) == 0 || (i7 == 2 && MessageObject.isGifDocument(this.documentAttach, messageObject6.hasValidGroupId())))) {
                            this.buttonState = 1;
                        } else {
                            this.buttonState = 0;
                        }
                    } else {
                        this.buttonState = 1;
                        long[] fileProgressSizes4 = ImageLoader.getInstance().getFileProgressSizes(fileName);
                        r15 = fileProgressSizes4 != null ? DownloadController.getProgress(fileProgressSizes4) : 0.0f;
                        if (fileProgressSizes4 != null && fileProgressSizes4[0] == fileProgressSizes4[1]) {
                            createLoadingProgressLayout(fileProgressSizes4[0], fileProgressSizes4[1]);
                        } else if (this.currentMessageObject.getDocument() != null) {
                            MessageObject messageObject7 = this.currentMessageObject;
                            createLoadingProgressLayout(messageObject7.loadedFileSize, messageObject7.getSize());
                        }
                    }
                    this.radialProgress.setProgress(r15, false);
                } else {
                    DownloadController.getInstance(this.currentAccount).removeLoadingFileObserver(this);
                    if (this.documentAttachType == 2 && !this.photoImage.isAllowStartAnimation()) {
                        this.buttonState = 2;
                    } else {
                        this.buttonState = -1;
                    }
                }
                z6 = z5;
                this.radialProgress.setIcon(getIconForCurrentState(), z, z6);
                invalidate();
            } else {
                z6 = z5;
                if (messageObject5.isOut() && ((this.currentMessageObject.isSending() && !this.currentMessageObject.isForwarded()) || (this.currentMessageObject.isEditing() && this.currentMessageObject.isEditingMedia()))) {
                    if (!TextUtils.isEmpty(this.currentMessageObject.messageOwner.attachPath)) {
                        DownloadController downloadController2 = DownloadController.getInstance(this.currentAccount);
                        MessageObject messageObject8 = this.currentMessageObject;
                        downloadController2.addLoadingFileObserver(messageObject8.messageOwner.attachPath, messageObject8, this);
                        this.wasSending = true;
                        String str = this.currentMessageObject.messageOwner.attachPath;
                        boolean z11 = str == null || !str.startsWith("http");
                        TLRPC$Message tLRPC$Message = this.currentMessageObject.messageOwner;
                        HashMap<String, String> hashMap2 = tLRPC$Message.params;
                        if (tLRPC$Message.message != null && hashMap2 != null && (hashMap2.containsKey("url") || hashMap2.containsKey("bot"))) {
                            this.buttonState = -1;
                            z11 = false;
                        } else {
                            this.buttonState = 1;
                        }
                        boolean isSendingMessage2 = SendMessagesHelper.getInstance(this.currentAccount).isSendingMessage(this.currentMessageObject.getId());
                        if (this.currentPosition != null && isSendingMessage2 && this.buttonState == 1) {
                            this.drawRadialCheckBackground = true;
                            getIconForCurrentState();
                            this.radialProgress.setIcon(6, z, z6);
                        } else {
                            this.radialProgress.setIcon(getIconForCurrentState(), z, z6);
                        }
                        if (z11) {
                            long[] fileProgressSizes5 = ImageLoader.getInstance().getFileProgressSizes(this.currentMessageObject.messageOwner.attachPath);
                            if (fileProgressSizes5 == null && isSendingMessage2) {
                                z8 = false;
                                r15 = 1.0f;
                            } else if (fileProgressSizes5 != null) {
                                r15 = DownloadController.getProgress(fileProgressSizes5);
                                z8 = false;
                                createLoadingProgressLayout(fileProgressSizes5[0], fileProgressSizes5[1]);
                            } else {
                                z8 = false;
                            }
                            this.radialProgress.setProgress(r15, z8);
                        } else {
                            this.radialProgress.setProgress(0.0f, false);
                        }
                        invalidate();
                        z7 = false;
                    } else {
                        getIconForCurrentState();
                        if (this.currentMessageObject.isSticker() || this.currentMessageObject.isAnimatedSticker() || this.currentMessageObject.isLocation() || this.currentMessageObject.isGif()) {
                            z7 = false;
                            i5 = -1;
                        } else if (this.documentAttachType == 10) {
                            i5 = -1;
                            z7 = false;
                        } else {
                            this.buttonState = 1;
                            z7 = false;
                            this.radialProgress.setIcon(12, z, false);
                            this.radialProgress.setProgress(0.0f, z7);
                        }
                        this.buttonState = i5;
                        this.radialProgress.setIcon(4, z, z7);
                        this.radialProgress.setProgress(0.0f, z7);
                    }
                    this.videoRadialProgress.setIcon(4, z, z7);
                } else {
                    if (this.wasSending && !TextUtils.isEmpty(this.currentMessageObject.messageOwner.attachPath)) {
                        DownloadController.getInstance(this.currentAccount).removeLoadingFileObserver(this);
                    }
                    int i11 = this.documentAttachType;
                    if ((i11 == 4 || i11 == 2 || i11 == 7) && this.autoPlayingMedia) {
                        isLoadingVideo = FileLoader.getInstance(this.currentAccount).isLoadingVideo(this.documentAttach, MediaController.getInstance().isPlayingMessage(this.currentMessageObject));
                        AnimatedFileDrawable animation = this.photoImage.getAnimation();
                        if (animation != null) {
                            MessageObject messageObject9 = this.currentMessageObject;
                            if (messageObject9.hadAnimationNotReadyLoading) {
                                if (animation.hasBitmap()) {
                                    this.currentMessageObject.hadAnimationNotReadyLoading = false;
                                }
                            } else {
                                messageObject9.hadAnimationNotReadyLoading = isLoadingVideo && !animation.hasBitmap();
                            }
                        } else {
                            int i12 = this.documentAttachType;
                            if (i12 == 2 && !z4) {
                                this.currentMessageObject.hadAnimationNotReadyLoading = true;
                            } else if (i12 == 4 && !isLoadingVideo) {
                                String key = ImageLocation.getForDocument(this.documentAttach).getKey(null, null, false);
                                if (key != null) {
                                    key = key + "@" + ImageLoader.AUTOPLAY_FILTER;
                                }
                                if (key != null) {
                                    isLoadingVideo = ImageLoader.getInstance().imageLoadingByKeys.contains(key);
                                }
                            }
                        }
                    } else {
                        isLoadingVideo = false;
                    }
                    if (this.hasMiniProgress != 0) {
                        this.radialProgress.setMiniProgressBackgroundColor(getThemedColor(Theme.key_chat_inLoaderPhoto));
                        this.buttonState = 3;
                        this.radialProgress.setIcon(getIconForCurrentState(), z, z6);
                        if (this.hasMiniProgress == 1) {
                            DownloadController.getInstance(this.currentAccount).removeLoadingFileObserver(this);
                            this.miniButtonState = -1;
                        } else {
                            DownloadController.getInstance(this.currentAccount).addLoadingFileObserver(fileName, this.currentMessageObject, this);
                            if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(fileName)) {
                                this.miniButtonState = 0;
                            } else {
                                this.miniButtonState = 1;
                                long[] fileProgressSizes6 = ImageLoader.getInstance().getFileProgressSizes(fileName);
                                if (fileProgressSizes6 != null) {
                                    createLoadingProgressLayout(fileProgressSizes6[0], fileProgressSizes6[1]);
                                    this.radialProgress.setProgress(DownloadController.getProgress(fileProgressSizes6), z6);
                                } else {
                                    createLoadingProgressLayout(this.documentAttach);
                                    this.radialProgress.setProgress(0.0f, z6);
                                }
                            }
                        }
                        this.radialProgress.setMiniIcon(getMiniIconForCurrentState(), z, z6);
                    } else if (z4 || (((i4 = this.documentAttachType) == 4 || i4 == 2 || i4 == 7) && this.autoPlayingMedia && !this.currentMessageObject.hadAnimationNotReadyLoading && !isLoadingVideo)) {
                        DownloadController.getInstance(this.currentAccount).removeLoadingFileObserver(this);
                        if (this.drawVideoImageButton && z6) {
                            int i13 = this.animatingDrawVideoImageButton;
                            if (i13 != 1 && this.animatingDrawVideoImageButtonProgress > 0.0f) {
                                if (i13 == 0) {
                                    this.animatingDrawVideoImageButtonProgress = 1.0f;
                                }
                                this.animatingDrawVideoImageButton = 1;
                            }
                        } else if (this.animatingDrawVideoImageButton == 0) {
                            this.animatingDrawVideoImageButton = 1;
                        }
                        this.drawVideoImageButton = false;
                        this.drawVideoSize = false;
                        if (this.currentMessageObject.needDrawBluredPreview()) {
                            this.buttonState = -1;
                        } else {
                            int i14 = this.documentAttachType;
                            if (i14 == 2 && this.currentMessageObject.gifState == 1.0f) {
                                if (this.photoImage.isAnimationRunning()) {
                                    this.currentMessageObject.gifState = 0.0f;
                                    this.buttonState = -1;
                                } else {
                                    this.buttonState = 2;
                                }
                            } else if (i14 == 4 && !this.hasEmbed) {
                                this.buttonState = 3;
                            } else {
                                this.buttonState = -1;
                            }
                        }
                        this.videoRadialProgress.setIcon(4, z, this.animatingDrawVideoImageButton != 0);
                        this.radialProgress.setIcon(getIconForCurrentState(), z, z6);
                        if (!z3 && this.photoNotSet) {
                            setMessageObject(this.currentMessageObject, this.currentMessagesGroup, this.pinnedBottom, this.pinnedTop);
                        }
                        invalidate();
                    } else {
                        this.drawVideoSize = i4 == 4 || i4 == 2;
                        if ((i4 == 4 || i4 == 2 || i4 == 7) && this.canStreamVideo && !this.drawVideoImageButton && z6) {
                            int i15 = this.animatingDrawVideoImageButton;
                            if (i15 != 2 && this.animatingDrawVideoImageButtonProgress < 1.0f) {
                                if (i15 == 0) {
                                    this.animatingDrawVideoImageButtonProgress = 0.0f;
                                }
                                this.animatingDrawVideoImageButton = 2;
                            }
                        } else if (this.animatingDrawVideoImageButton == 0) {
                            this.animatingDrawVideoImageButtonProgress = 1.0f;
                        }
                        DownloadController.getInstance(this.currentAccount).addLoadingFileObserver(fileName, this.currentMessageObject, this);
                        if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(fileName)) {
                            MessageObject messageObject10 = this.currentMessageObject;
                            if (!messageObject10.loadingCancelled && canDownloadMedia) {
                                this.buttonState = 1;
                            } else if (messageObject10.type == 4) {
                                this.buttonState = -1;
                            } else {
                                this.buttonState = 0;
                            }
                            int i16 = messageObject10.type;
                            boolean z12 = i16 == 3 || i16 == 8 || this.documentAttachType == 4;
                            MessageObject.GroupedMessagePosition groupedMessagePosition2 = this.currentPosition;
                            boolean z13 = groupedMessagePosition2 == null || (groupedMessagePosition2.flags & 3) == 3;
                            int i17 = this.documentAttachType;
                            if ((i17 == 4 || (i17 == 2 && canDownloadMedia)) && this.canStreamVideo && z12 && z13) {
                                this.drawVideoImageButton = true;
                                getIconForCurrentState();
                                this.radialProgress.setIcon(this.autoPlayingMedia ? 4 : 0, z, z6);
                                this.videoRadialProgress.setIcon(2, z, z6);
                            } else {
                                this.drawVideoImageButton = false;
                                this.radialProgress.setIcon(getIconForCurrentState(), z, z6);
                                this.videoRadialProgress.setIcon(4, z, false);
                                if (!this.drawVideoSize && this.animatingDrawVideoImageButton == 0) {
                                    this.animatingDrawVideoImageButtonProgress = 0.0f;
                                }
                            }
                        } else {
                            this.buttonState = 1;
                            long[] fileProgressSizes7 = ImageLoader.getInstance().getFileProgressSizes(fileName);
                            if (fileProgressSizes7 != null) {
                                createLoadingProgressLayout(fileProgressSizes7[0], fileProgressSizes7[1]);
                            } else {
                                createLoadingProgressLayout(this.documentAttach);
                            }
                            MessageObject messageObject11 = this.currentMessageObject;
                            int i18 = messageObject11.type;
                            boolean z14 = i18 == 3 || i18 == 8 || this.documentAttachType == 4;
                            MessageObject.GroupedMessagePosition groupedMessagePosition3 = this.currentPosition;
                            boolean z15 = groupedMessagePosition3 == null || (groupedMessagePosition3.flags & 3) == 3;
                            if ((this.documentAttachType == 4 || (MessageObject.isGifDocument(this.documentAttach, messageObject11.hasValidGroupId()) && canDownloadMedia)) && this.canStreamVideo && z14 && z15) {
                                this.drawVideoImageButton = true;
                                getIconForCurrentState();
                                this.radialProgress.setIcon((this.autoPlayingMedia || this.documentAttachType == 2) ? 4 : 0, z, z6);
                                this.videoRadialProgress.setProgress(fileProgressSizes7 != null ? DownloadController.getProgress(fileProgressSizes7) : 0.0f, z6);
                                this.videoRadialProgress.setIcon(14, z, z6);
                            } else {
                                this.drawVideoImageButton = false;
                                this.radialProgress.setProgress(fileProgressSizes7 != null ? DownloadController.getProgress(fileProgressSizes7) : 0.0f, z6);
                                this.radialProgress.setIcon(getIconForCurrentState(), z, z6);
                                this.videoRadialProgress.setIcon(4, z, false);
                                if (!this.drawVideoSize && this.animatingDrawVideoImageButton == 0) {
                                    this.animatingDrawVideoImageButtonProgress = 0.0f;
                                }
                            }
                        }
                        invalidate();
                    }
                }
            }
        }
        if (this.hasMiniProgress == 0) {
            this.radialProgress.setMiniIcon(4, false, z6);
        }
    }

    private void didPressMiniButton(boolean z) {
        int i = this.miniButtonState;
        if (i != 0) {
            if (i == 1) {
                int i2 = this.documentAttachType;
                if ((i2 == 3 || i2 == 5 || i2 == 7) && MediaController.getInstance().isPlayingMessage(this.currentMessageObject)) {
                    MediaController.getInstance().cleanupPlayer(true, true);
                }
                this.miniButtonState = 0;
                this.currentMessageObject.loadingCancelled = true;
                FileLoader.getInstance(this.currentAccount).cancelLoadFile(this.documentAttach);
                this.radialProgress.setMiniIcon(getMiniIconForCurrentState(), false, true);
                invalidate();
                return;
            }
            return;
        }
        this.miniButtonState = 1;
        this.radialProgress.setProgress(0.0f, false);
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && !messageObject.isAnyKindOfSticker()) {
            this.currentMessageObject.putInDownloadsStore = true;
        }
        int i3 = this.documentAttachType;
        if (i3 == 3 || i3 == 5) {
            FileLoader fileLoader = FileLoader.getInstance(this.currentAccount);
            TLRPC$Document tLRPC$Document = this.documentAttach;
            MessageObject messageObject2 = this.currentMessageObject;
            fileLoader.loadFile(tLRPC$Document, messageObject2, 2, messageObject2.shouldEncryptPhotoOrVideo() ? 2 : 0);
            this.currentMessageObject.loadingCancelled = false;
        } else if (i3 == 4 || i3 == 7) {
            createLoadingProgressLayout(this.documentAttach);
            FileLoader fileLoader2 = FileLoader.getInstance(this.currentAccount);
            TLRPC$Document tLRPC$Document2 = this.documentAttach;
            MessageObject messageObject3 = this.currentMessageObject;
            fileLoader2.loadFile(tLRPC$Document2, messageObject3, 2, messageObject3.shouldEncryptPhotoOrVideo() ? 2 : 0);
            this.currentMessageObject.loadingCancelled = false;
        }
        this.radialProgress.setMiniIcon(getMiniIconForCurrentState(), false, true);
        invalidate();
    }

    private void didPressButton(boolean z, boolean z2) {
        MessageObject messageObject;
        MessageObject messageObject2;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        String str;
        MessageObject messageObject3;
        MessageObject messageObject4 = this.currentMessageObject;
        if (messageObject4 != null && !messageObject4.isAnyKindOfSticker()) {
            this.currentMessageObject.putInDownloadsStore = true;
        }
        int i = this.buttonState;
        if (i == 0 && (!this.drawVideoImageButton || z2)) {
            int i2 = this.documentAttachType;
            if (i2 == 3 || i2 == 5 || (i2 == 7 && (messageObject3 = this.currentMessageObject) != null && messageObject3.isVoiceTranscriptionOpen() && this.currentMessageObject.mediaExists)) {
                if (this.miniButtonState == 0) {
                    FileLoader.getInstance(this.currentAccount).loadFile(this.documentAttach, this.currentMessageObject, 2, 0);
                    this.currentMessageObject.loadingCancelled = false;
                }
                if (this.delegate.needPlayMessage(this, this.currentMessageObject, false)) {
                    if (this.hasMiniProgress == 2 && this.miniButtonState != 1) {
                        this.miniButtonState = 1;
                        this.radialProgress.setProgress(0.0f, false);
                        this.radialProgress.setMiniIcon(getMiniIconForCurrentState(), false, true);
                    }
                    updatePlayingMessageProgress();
                    this.buttonState = 1;
                    this.radialProgress.setIcon(getIconForCurrentState(), false, true);
                    invalidate();
                    return;
                }
                return;
            }
            if (z2) {
                this.videoRadialProgress.setProgress(0.0f, false);
            } else {
                this.radialProgress.setProgress(0.0f, false);
            }
            if (this.currentPhotoObject != null && (this.photoImage.hasNotThumb() || this.currentPhotoObjectThumb == null)) {
                tLRPC$PhotoSize = this.currentPhotoObject;
                str = ((tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) || "s".equals(tLRPC$PhotoSize.type)) ? this.currentPhotoFilterThumb : this.currentPhotoFilter;
            } else {
                tLRPC$PhotoSize = this.currentPhotoObjectThumb;
                str = this.currentPhotoFilterThumb;
            }
            String str2 = str;
            int i3 = this.currentMessageObject.shouldEncryptPhotoOrVideo() ? 2 : 0;
            MessageObject messageObject5 = this.currentMessageObject;
            int i4 = messageObject5.type;
            if (i4 == 1 || i4 == 20) {
                this.photoImage.setForceLoading(true);
                this.photoImage.setImage(ImageLocation.getForObject(this.currentPhotoObject, this.photoParentObject), this.currentPhotoFilter, ImageLocation.getForObject(this.currentPhotoObjectThumb, this.photoParentObject), this.currentPhotoFilterThumb, this.currentPhotoObjectThumbStripped, this.currentPhotoObject.size, null, this.currentMessageObject, i3);
            } else if (i4 == 8) {
                FileLoader.getInstance(this.currentAccount).loadFile(this.documentAttach, this.currentMessageObject, 2, 0);
                if (this.currentMessageObject.loadedFileSize > 0) {
                    createLoadingProgressLayout(this.documentAttach);
                }
            } else if (this.isRoundVideo) {
                if (messageObject5.isSecretMedia()) {
                    FileLoader fileLoader = FileLoader.getInstance(this.currentAccount);
                    TLRPC$Document document = this.currentMessageObject.getDocument();
                    MessageObject messageObject6 = this.currentMessageObject;
                    fileLoader.loadFile(document, messageObject6, 2, messageObject6.shouldEncryptPhotoOrVideo() ? 2 : 1);
                } else {
                    MessageObject messageObject7 = this.currentMessageObject;
                    messageObject7.gifState = 2.0f;
                    TLRPC$Document document2 = messageObject7.getDocument();
                    this.photoImage.setForceLoading(true);
                    this.photoImage.setImage(ImageLocation.getForDocument(document2), null, ImageLocation.getForObject(tLRPC$PhotoSize, document2), str2, document2.size, null, this.currentMessageObject, 0);
                }
                this.wouldBeInPip = true;
                invalidate();
            } else if (i4 == 9) {
                FileLoader.getInstance(this.currentAccount).loadFile(this.documentAttach, this.currentMessageObject, 2, 0);
                if (this.currentMessageObject.loadedFileSize > 0) {
                    createLoadingProgressLayout(this.documentAttach);
                }
            } else {
                int i5 = this.documentAttachType;
                if (i5 == 4) {
                    FileLoader.getInstance(this.currentAccount).loadFile(this.documentAttach, this.currentMessageObject, 1, i3);
                    MessageObject messageObject8 = this.currentMessageObject;
                    if (messageObject8.loadedFileSize > 0) {
                        createLoadingProgressLayout(messageObject8.getDocument());
                    }
                } else if (i4 != 0 || i5 == 0) {
                    this.photoImage.setForceLoading(true);
                    this.photoImage.setImage(ImageLocation.getForObject(this.currentPhotoObject, this.photoParentObject), this.currentPhotoFilter, ImageLocation.getForObject(this.currentPhotoObjectThumb, this.photoParentObject), this.currentPhotoFilterThumb, this.currentPhotoObjectThumbStripped, 0L, null, this.currentMessageObject, 0);
                } else if (i5 == 2) {
                    this.photoImage.setForceLoading(true);
                    this.photoImage.setImage(ImageLocation.getForDocument(this.documentAttach), null, ImageLocation.getForDocument(this.currentPhotoObject, this.documentAttach), this.currentPhotoFilterThumb, this.documentAttach.size, null, this.currentMessageObject, i3);
                    MessageObject messageObject9 = this.currentMessageObject;
                    messageObject9.gifState = 2.0f;
                    if (messageObject9.loadedFileSize > 0) {
                        createLoadingProgressLayout(messageObject9.getDocument());
                    }
                } else if (i5 == 1) {
                    FileLoader.getInstance(this.currentAccount).loadFile(this.documentAttach, this.currentMessageObject, 2, 0);
                } else if (i5 == 8) {
                    this.photoImage.setImage(ImageLocation.getForDocument(this.documentAttach), this.currentPhotoFilter, ImageLocation.getForDocument(this.currentPhotoObject, this.documentAttach), "b1", 0L, "jpg", this.currentMessageObject, 1);
                }
            }
            this.currentMessageObject.loadingCancelled = false;
            this.buttonState = 1;
            if (z2) {
                this.videoRadialProgress.setIcon(14, false, z);
            } else {
                this.radialProgress.setIcon(getIconForCurrentState(), false, z);
            }
            invalidate();
        } else if (i == 1 && (!this.drawVideoImageButton || z2)) {
            this.photoImage.setForceLoading(false);
            int i6 = this.documentAttachType;
            if (i6 == 3 || i6 == 5 || (i6 == 7 && (messageObject2 = this.currentMessageObject) != null && messageObject2.isVoiceTranscriptionOpen())) {
                if (MediaController.getInstance().lambda$startAudioAgain$7(this.currentMessageObject)) {
                    this.buttonState = 0;
                    this.radialProgress.setIcon(getIconForCurrentState(), false, z);
                    invalidate();
                }
            } else if (this.currentMessageObject.isOut() && !this.drawVideoImageButton && (this.currentMessageObject.isSending() || this.currentMessageObject.isEditing())) {
                if (this.radialProgress.getIcon() != 6) {
                    this.delegate.didPressCancelSendButton(this);
                }
            } else {
                MessageObject messageObject10 = this.currentMessageObject;
                messageObject10.loadingCancelled = true;
                int i7 = this.documentAttachType;
                if (i7 == 2 || i7 == 4 || i7 == 1 || i7 == 8) {
                    FileLoader.getInstance(this.currentAccount).cancelLoadFile(this.documentAttach);
                } else {
                    int i8 = messageObject10.type;
                    if (i8 == 0 || i8 == 1 || i8 == 20 || i8 == 8 || i8 == 5) {
                        ImageLoader.getInstance().cancelForceLoadingForImageReceiver(this.photoImage);
                        this.photoImage.cancelLoadImage();
                    } else if (i8 == 9) {
                        FileLoader.getInstance(this.currentAccount).cancelLoadFile(this.currentMessageObject.getDocument());
                    }
                }
                this.buttonState = 0;
                if (z2) {
                    this.videoRadialProgress.setIcon(2, false, z);
                } else {
                    this.radialProgress.setIcon(getIconForCurrentState(), false, z);
                }
                invalidate();
            }
        } else if (i != 2) {
            if (i == 3 || i == 0) {
                if (this.hasMiniProgress == 2 && this.miniButtonState != 1) {
                    this.miniButtonState = 1;
                    this.radialProgress.setProgress(0.0f, false);
                    this.radialProgress.setMiniIcon(getMiniIconForCurrentState(), false, z);
                }
                ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
                if (chatMessageCellDelegate != null) {
                    chatMessageCellDelegate.didPressImage(this, 0.0f, 0.0f);
                }
            } else if (i == 4) {
                int i9 = this.documentAttachType;
                if (i9 == 3 || i9 == 5 || (i9 == 7 && (messageObject = this.currentMessageObject) != null && messageObject.isVoiceTranscriptionOpen())) {
                    if ((this.currentMessageObject.isOut() && (this.currentMessageObject.isSending() || this.currentMessageObject.isEditing())) || this.currentMessageObject.isSendError()) {
                        if (this.delegate == null || this.radialProgress.getIcon() == 6) {
                            return;
                        }
                        this.delegate.didPressCancelSendButton(this);
                        return;
                    }
                    this.currentMessageObject.loadingCancelled = true;
                    FileLoader.getInstance(this.currentAccount).cancelLoadFile(this.documentAttach);
                    this.buttonState = 2;
                    this.radialProgress.setIcon(getIconForCurrentState(), false, z);
                    invalidate();
                }
            }
        } else {
            MessageObject messageObject11 = this.currentMessageObject;
            if (messageObject11 != null && messageObject11.type == 23) {
                this.delegate.didPressImage(this, 0.0f, 0.0f);
            } else if (this.documentAttachType == 7 && messageObject11 != null && messageObject11.isVoiceTranscriptionOpen()) {
                if (this.miniButtonState == 0) {
                    FileLoader.getInstance(this.currentAccount).loadFile(this.documentAttach, this.currentMessageObject, 2, 0);
                    this.currentMessageObject.loadingCancelled = false;
                }
                if (this.delegate.needPlayMessage(this, this.currentMessageObject, false)) {
                    if (this.hasMiniProgress == 2 && this.miniButtonState != 1) {
                        this.miniButtonState = 1;
                        this.radialProgress.setProgress(0.0f, false);
                        this.radialProgress.setMiniIcon(getMiniIconForCurrentState(), false, true);
                    }
                    updatePlayingMessageProgress();
                    this.buttonState = 1;
                    this.radialProgress.setIcon(getIconForCurrentState(), false, true);
                    invalidate();
                }
                if (this.isRoundVideo) {
                    this.wouldBeInPip = true;
                    invalidate();
                }
            } else {
                int i10 = this.documentAttachType;
                if (i10 == 3 || i10 == 5) {
                    this.radialProgress.setProgress(0.0f, false);
                    FileLoader.getInstance(this.currentAccount).loadFile(this.documentAttach, this.currentMessageObject, 2, 0);
                    this.currentMessageObject.loadingCancelled = false;
                    this.buttonState = 4;
                    this.radialProgress.setIcon(getIconForCurrentState(), true, z);
                    invalidate();
                    return;
                }
                if (this.isRoundVideo) {
                    MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
                    if (playingMessageObject == null || !playingMessageObject.isRoundVideo()) {
                        this.photoImage.setAllowStartAnimation(true);
                        this.photoImage.startAnimation();
                    }
                } else {
                    this.photoImage.setAllowStartAnimation(true);
                    this.photoImage.startAnimation();
                }
                this.currentMessageObject.gifState = 0.0f;
                this.buttonState = -1;
                this.radialProgress.setIcon(getIconForCurrentState(), false, z);
            }
        }
    }

    @Override // org.telegram.messenger.DownloadController.FileDownloadProgressListener
    public void onFailedDownload(String str, boolean z) {
        int i = this.documentAttachType;
        updateButtonState(true, i == 3 || i == 5, false);
    }

    /* JADX WARN: Code restructure failed: missing block: B:46:0x00c6, code lost:
        if ((r1 & 2) != 0) goto L45;
     */
    @Override // org.telegram.messenger.DownloadController.FileDownloadProgressListener
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void onSuccessDownload(String str) {
        TLRPC$Document tLRPC$Document;
        if (this.documentAttachType == 6 && this.currentMessageObject.isDice()) {
            DownloadController.getInstance(this.currentAccount).removeLoadingFileObserver(this);
            setCurrentDiceValue(true);
            return;
        }
        int i = this.documentAttachType;
        if (i == 3 || i == 5) {
            updateButtonState(false, true, false);
            updateWaveform();
            return;
        }
        if (this.drawVideoImageButton) {
            this.videoRadialProgress.setProgress(1.0f, true);
        } else {
            this.radialProgress.setProgress(1.0f, true);
        }
        if (!this.currentMessageObject.needDrawBluredPreview() && !this.autoPlayingMedia && (tLRPC$Document = this.documentAttach) != null) {
            if (this.documentAttachType == 7) {
                ImageReceiver imageReceiver = this.photoImage;
                ImageLocation forDocument = ImageLocation.getForDocument(tLRPC$Document);
                ImageLocation forObject = ImageLocation.getForObject(this.currentPhotoObject, this.photoParentObject);
                TLRPC$PhotoSize tLRPC$PhotoSize = this.currentPhotoObject;
                imageReceiver.setImage(forDocument, ImageLoader.AUTOPLAY_FILTER, forObject, ((tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) || (tLRPC$PhotoSize != null && "s".equals(tLRPC$PhotoSize.type))) ? this.currentPhotoFilterThumb : this.currentPhotoFilter, ImageLocation.getForObject(this.currentPhotoObjectThumb, this.photoParentObject), this.currentPhotoFilterThumb, this.currentPhotoObjectThumbStripped, this.documentAttach.size, null, this.currentMessageObject, 0);
                this.photoImage.setAllowStartAnimation(true);
                this.photoImage.startAnimation();
                this.autoPlayingMedia = true;
            } else {
                if (!this.isSmallImage && SharedConfig.isAutoplayVideo() && !this.currentMessageObject.isRepostPreview && this.documentAttachType == 4) {
                    MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
                    if (groupedMessagePosition != null) {
                        int i2 = groupedMessagePosition.flags;
                        if ((i2 & 1) != 0) {
                        }
                    }
                    this.animatingNoSound = 2;
                    ImageReceiver imageReceiver2 = this.photoImage;
                    ImageLocation forDocument2 = ImageLocation.getForDocument(this.documentAttach);
                    ImageLocation forObject2 = ImageLocation.getForObject(this.currentPhotoObject, this.photoParentObject);
                    TLRPC$PhotoSize tLRPC$PhotoSize2 = this.currentPhotoObject;
                    imageReceiver2.setImage(forDocument2, ImageLoader.AUTOPLAY_FILTER, forObject2, ((tLRPC$PhotoSize2 instanceof TLRPC$TL_photoStrippedSize) || (tLRPC$PhotoSize2 != null && "s".equals(tLRPC$PhotoSize2.type))) ? this.currentPhotoFilterThumb : this.currentPhotoFilter, ImageLocation.getForObject(this.currentPhotoObjectThumb, this.photoParentObject), this.currentPhotoFilterThumb, this.currentPhotoObjectThumbStripped, this.documentAttach.size, null, this.currentMessageObject, 0);
                    if (!PhotoViewer.isPlayingMessage(this.currentMessageObject)) {
                        this.photoImage.setAllowStartAnimation(true);
                        this.photoImage.startAnimation();
                    } else {
                        this.photoImage.setAllowStartAnimation(false);
                    }
                    this.autoPlayingMedia = true;
                }
                if (this.documentAttachType == 2) {
                    ImageReceiver imageReceiver3 = this.photoImage;
                    ImageLocation forDocument3 = ImageLocation.getForDocument(this.documentAttach);
                    ImageLocation forObject3 = ImageLocation.getForObject(this.currentPhotoObject, this.photoParentObject);
                    TLRPC$PhotoSize tLRPC$PhotoSize3 = this.currentPhotoObject;
                    imageReceiver3.setImage(forDocument3, ImageLoader.AUTOPLAY_FILTER, forObject3, ((tLRPC$PhotoSize3 instanceof TLRPC$TL_photoStrippedSize) || (tLRPC$PhotoSize3 != null && "s".equals(tLRPC$PhotoSize3.type))) ? this.currentPhotoFilterThumb : this.currentPhotoFilter, ImageLocation.getForObject(this.currentPhotoObjectThumb, this.photoParentObject), this.currentPhotoFilterThumb, this.currentPhotoObjectThumbStripped, this.documentAttach.size, null, this.currentMessageObject, 0);
                    if (SharedConfig.isAutoplayGifs() && !this.currentMessageObject.isRepostPreview) {
                        this.photoImage.setAllowStartAnimation(true);
                        this.photoImage.startAnimation();
                    } else {
                        this.photoImage.setAllowStartAnimation(false);
                        this.photoImage.stopAnimation();
                    }
                    this.autoPlayingMedia = true;
                }
            }
        }
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject.type == 0) {
            if (!this.autoPlayingMedia && this.documentAttachType == 2 && messageObject.gifState != 1.0f) {
                this.buttonState = 2;
                didPressButton(true, false);
                return;
            } else if (!this.photoNotSet) {
                updateButtonState(false, true, false);
                return;
            } else {
                setMessageObject(messageObject, this.currentMessagesGroup, this.pinnedBottom, this.pinnedTop);
                return;
            }
        }
        if (!this.photoNotSet) {
            updateButtonState(false, true, false);
        }
        if (this.photoNotSet) {
            setMessageObject(this.currentMessageObject, this.currentMessagesGroup, this.pinnedBottom, this.pinnedTop);
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:18:0x0024, code lost:
        if (r8.mediaExists == false) goto L18;
     */
    /* JADX WARN: Code restructure failed: missing block: B:30:0x003f, code lost:
        if (r8 == 6) goto L18;
     */
    /* JADX WARN: Code restructure failed: missing block: B:31:0x0041, code lost:
        if (r7 == 1) goto L18;
     */
    @Override // org.telegram.messenger.ImageReceiver.ImageReceiverDelegate
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void didSetImage(ImageReceiver imageReceiver, boolean z, boolean z2, boolean z3) {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && z) {
            if (setCurrentDiceValue((z3 || messageObject.wasUnread) ? false : true)) {
                return;
            }
            if (z2) {
                MessageObject messageObject2 = this.currentMessageObject;
                if (messageObject2.type == 20) {
                }
            }
            if (!z2) {
                MessageObject messageObject3 = this.currentMessageObject;
                if (!messageObject3.mediaExists) {
                    if (!messageObject3.attachPathExists) {
                        int i = messageObject3.type;
                        if (i == 0) {
                            int i2 = this.documentAttachType;
                            if (i2 != 8) {
                                if (i2 != 0) {
                                }
                            }
                            this.currentMessageObject.mediaExists = true;
                            updateButtonState(false, true, false);
                        }
                    }
                }
            }
        }
        if (!z || this.currentMessageObject == null) {
            return;
        }
        if (this.blurredPhotoImage.getBitmap() != null) {
            this.blurredPhotoImage.getBitmap().recycle();
            this.blurredPhotoImage.setImageBitmap((Bitmap) null);
        }
        if (!this.currentMessageObject.hasMediaSpoilers() || imageReceiver.getBitmap() == null || imageReceiver.getBitmap().isRecycled()) {
            return;
        }
        this.blurredPhotoImage.setImageBitmap(Utilities.stackBlurBitmapMax(imageReceiver.getBitmap(), this.currentMessageObject.isRoundVideo()));
        this.blurredPhotoImage.setColorFilter(getFancyBlurFilter());
    }

    public boolean setCurrentDiceValue(boolean z) {
        MessagesController.DiceFrameSuccess diceFrameSuccess;
        if (this.currentMessageObject.isDice()) {
            Drawable drawable = this.photoImage.getDrawable();
            if (drawable instanceof RLottieDrawable) {
                RLottieDrawable rLottieDrawable = (RLottieDrawable) drawable;
                String diceEmoji = this.currentMessageObject.getDiceEmoji();
                TLRPC$TL_messages_stickerSet stickerSetByEmojiOrName = MediaDataController.getInstance(this.currentAccount).getStickerSetByEmojiOrName(diceEmoji);
                if (stickerSetByEmojiOrName != null) {
                    int diceValue = this.currentMessageObject.getDiceValue();
                    if ("🎰".equals(this.currentMessageObject.getDiceEmoji())) {
                        if (diceValue >= 0 && diceValue <= 64) {
                            ((SlotsDrawable) rLottieDrawable).setDiceNumber(this, diceValue, stickerSetByEmojiOrName, z);
                            if (this.currentMessageObject.isOut()) {
                                rLottieDrawable.setOnFinishCallback(this.diceFinishCallback, ConnectionsManager.DEFAULT_DATACENTER_ID);
                            }
                            this.currentMessageObject.wasUnread = false;
                        }
                        if (!rLottieDrawable.hasBaseDice() && stickerSetByEmojiOrName.documents.size() > 0) {
                            ((SlotsDrawable) rLottieDrawable).setBaseDice(this, stickerSetByEmojiOrName);
                        }
                    } else {
                        if (!rLottieDrawable.hasBaseDice() && stickerSetByEmojiOrName.documents.size() > 0) {
                            TLRPC$Document tLRPC$Document = stickerSetByEmojiOrName.documents.get(0);
                            if (rLottieDrawable.setBaseDice(FileLoader.getInstance(this.currentAccount).getPathToAttach(tLRPC$Document, true))) {
                                DownloadController.getInstance(this.currentAccount).removeLoadingFileObserver(this);
                            } else {
                                DownloadController.getInstance(this.currentAccount).addLoadingFileObserver(FileLoader.getAttachFileName(tLRPC$Document), this.currentMessageObject, this);
                                FileLoader.getInstance(this.currentAccount).loadFile(tLRPC$Document, stickerSetByEmojiOrName, 1, 1);
                            }
                        }
                        if (diceValue >= 0 && diceValue < stickerSetByEmojiOrName.documents.size()) {
                            if (!z && this.currentMessageObject.isOut() && (diceFrameSuccess = MessagesController.getInstance(this.currentAccount).diceSuccess.get(diceEmoji)) != null && diceFrameSuccess.num == diceValue) {
                                rLottieDrawable.setOnFinishCallback(this.diceFinishCallback, diceFrameSuccess.frame);
                            }
                            TLRPC$Document tLRPC$Document2 = stickerSetByEmojiOrName.documents.get(Math.max(diceValue, 0));
                            if (rLottieDrawable.setDiceNumber(FileLoader.getInstance(this.currentAccount).getPathToAttach(tLRPC$Document2, true), z)) {
                                DownloadController.getInstance(this.currentAccount).removeLoadingFileObserver(this);
                            } else {
                                DownloadController.getInstance(this.currentAccount).addLoadingFileObserver(FileLoader.getAttachFileName(tLRPC$Document2), this.currentMessageObject, this);
                                FileLoader.getInstance(this.currentAccount).loadFile(tLRPC$Document2, stickerSetByEmojiOrName, 1, 1);
                            }
                            this.currentMessageObject.wasUnread = false;
                        }
                    }
                } else {
                    MediaDataController.getInstance(this.currentAccount).loadStickersByEmojiOrName(diceEmoji, true, true);
                }
            }
            return true;
        }
        return false;
    }

    @Override // org.telegram.messenger.ImageReceiver.ImageReceiverDelegate
    public void onAnimationReady(ImageReceiver imageReceiver) {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && imageReceiver == this.photoImage && messageObject.isAnimatedSticker()) {
            this.delegate.setShouldNotRepeatSticker(this.currentMessageObject);
        }
    }

    @Override // org.telegram.messenger.DownloadController.FileDownloadProgressListener
    public void onProgressDownload(String str, long j, long j2) {
        float min = j2 == 0 ? 0.0f : Math.min(1.0f, ((float) j) / ((float) j2));
        this.currentMessageObject.loadedFileSize = j;
        createLoadingProgressLayout(j, j2);
        if (this.drawVideoImageButton) {
            this.videoRadialProgress.setProgress(min, true);
        } else {
            this.radialProgress.setProgress(min, true);
        }
        int i = this.documentAttachType;
        if (i == 3 || i == 5) {
            if (this.hasMiniProgress != 0) {
                if (this.miniButtonState != 1) {
                    updateButtonState(false, false, false);
                }
            } else if (this.buttonState != 4) {
                updateButtonState(false, false, false);
            }
        } else if (this.hasMiniProgress != 0) {
            if (this.miniButtonState != 1) {
                updateButtonState(false, false, false);
            }
        } else if (this.buttonState != 1) {
            updateButtonState(false, false, false);
        }
    }

    @Override // org.telegram.messenger.DownloadController.FileDownloadProgressListener
    public void onProgressUpload(String str, long j, long j2, boolean z) {
        int i;
        float min = j2 == 0 ? 0.0f : Math.min(1.0f, ((float) j) / ((float) j2));
        this.currentMessageObject.loadedFileSize = j;
        this.radialProgress.setProgress(min, true);
        if (j == j2 && this.currentPosition != null && SendMessagesHelper.getInstance(this.currentAccount).isSendingMessage(this.currentMessageObject.getId()) && ((i = this.buttonState) == 1 || (i == 4 && this.documentAttachType == 5))) {
            this.drawRadialCheckBackground = true;
            getIconForCurrentState();
            this.radialProgress.setIcon(6, false, true);
        }
        long j3 = this.lastLoadingSizeTotal;
        if (j3 > 0 && Math.abs(j3 - j2) > 1048576) {
            this.lastLoadingSizeTotal = j2;
        }
        createLoadingProgressLayout(j, j2);
    }

    private void createLoadingProgressLayout(TLRPC$Document tLRPC$Document) {
        if (tLRPC$Document == null) {
            return;
        }
        long[] fileProgressSizes = ImageLoader.getInstance().getFileProgressSizes(FileLoader.getDocumentFileName(tLRPC$Document));
        if (fileProgressSizes != null) {
            createLoadingProgressLayout(fileProgressSizes[0], fileProgressSizes[1]);
        } else {
            createLoadingProgressLayout(this.currentMessageObject.loadedFileSize, tLRPC$Document.size);
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:22:0x005d  */
    /* JADX WARN: Removed duplicated region for block: B:27:0x007c  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void createLoadingProgressLayout(long j, long j2) {
        boolean z;
        String format;
        int ceil;
        String str;
        int i;
        long j3 = j2;
        if (j3 <= 0 || this.documentAttach == null) {
            this.loadingProgressLayout = null;
            return;
        }
        long j4 = (j << 16) + j3;
        if (this.loadingProgressLayout == null || this.loadingProgressLayoutHash != j4) {
            this.loadingProgressLayoutHash = j4;
            long j5 = this.lastLoadingSizeTotal;
            if (j5 == 0) {
                this.lastLoadingSizeTotal = j3;
            } else if (j > j5) {
                j3 = j5;
                String formatFileSize = AndroidUtilities.formatFileSize(j3);
                int ceil2 = (int) Math.ceil(Theme.chat_infoPaint.measureText(String.format("000.0 mm / %s", formatFileSize)));
                if (this.documentAttachType != 1) {
                    format = ceil2 <= Math.max(this.infoWidth, this.docTitleWidth) ? String.format("%s / %s", AndroidUtilities.formatFileSize(j5), formatFileSize) : AndroidUtilities.formatFileSize(j5);
                    z = true;
                } else {
                    MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
                    z = groupedMessagePosition == null || (groupedMessagePosition.flags & 3) == 3;
                    if (z) {
                        format = String.format("%s / %s", AndroidUtilities.formatFileSize(j5), formatFileSize);
                    } else {
                        int min = (int) (Math.min(1.0f, ((float) j5) / ((float) j3)) * 100.0f);
                        format = min >= 100 ? "100%" : String.format(Locale.US, "%2d%%", Integer.valueOf(min));
                    }
                }
                ceil = (int) Math.ceil(Theme.chat_infoPaint.measureText(format));
                if (z || ceil <= this.backgroundWidth - AndroidUtilities.dp(48.0f)) {
                    str = format;
                    i = ceil;
                } else {
                    int min2 = (int) (Math.min(1.0f, ((float) j5) / ((float) j3)) * 100.0f);
                    String format2 = min2 < 100 ? String.format(Locale.US, "%2d%%", Integer.valueOf(min2)) : "100%";
                    i = (int) Math.ceil(Theme.chat_infoPaint.measureText(format2));
                    str = format2;
                }
                this.loadingProgressLayout = new CachedStaticLayout(new StaticLayout(str, Theme.chat_infoPaint, i, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
            } else {
                j3 = j5;
            }
            j5 = j;
            String formatFileSize2 = AndroidUtilities.formatFileSize(j3);
            int ceil22 = (int) Math.ceil(Theme.chat_infoPaint.measureText(String.format("000.0 mm / %s", formatFileSize2)));
            if (this.documentAttachType != 1) {
            }
            ceil = (int) Math.ceil(Theme.chat_infoPaint.measureText(format));
            if (z) {
            }
            str = format;
            i = ceil;
            this.loadingProgressLayout = new CachedStaticLayout(new StaticLayout(str, Theme.chat_infoPaint, i, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
        }
    }

    @Override // android.view.View
    public void onProvideStructure(ViewStructure viewStructure) {
        CharSequence charSequence;
        CharSequence charSequence2;
        super.onProvideStructure(viewStructure);
        if (!this.allowAssistant || Build.VERSION.SDK_INT < 23) {
            return;
        }
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && (charSequence2 = messageObject.messageText) != null && charSequence2.length() > 0) {
            viewStructure.setText(this.currentMessageObject.messageText);
            return;
        }
        MessageObject messageObject2 = this.currentMessageObject;
        if (messageObject2 == null || (charSequence = messageObject2.caption) == null || charSequence.length() <= 0) {
            return;
        }
        viewStructure.setText(this.currentMessageObject.caption);
    }

    public void setDelegate(ChatMessageCellDelegate chatMessageCellDelegate) {
        this.delegate = chatMessageCellDelegate;
    }

    public ChatMessageCellDelegate getDelegate() {
        return this.delegate;
    }

    public void setAllowAssistant(boolean z) {
        this.allowAssistant = z;
    }

    /* JADX WARN: Removed duplicated region for block: B:100:0x01ee  */
    /* JADX WARN: Removed duplicated region for block: B:122:0x0282  */
    /* JADX WARN: Removed duplicated region for block: B:131:0x02ca  */
    /* JADX WARN: Removed duplicated region for block: B:134:0x02d2  */
    /* JADX WARN: Removed duplicated region for block: B:135:0x02d4  */
    /* JADX WARN: Removed duplicated region for block: B:138:0x02ec  */
    /* JADX WARN: Removed duplicated region for block: B:143:0x0309  */
    /* JADX WARN: Removed duplicated region for block: B:146:0x0361  */
    /* JADX WARN: Removed duplicated region for block: B:152:0x03bd  */
    /* JADX WARN: Removed duplicated region for block: B:161:0x041f  */
    /* JADX WARN: Removed duplicated region for block: B:164:0x0435  */
    /* JADX WARN: Removed duplicated region for block: B:176:0x0470  */
    /* JADX WARN: Removed duplicated region for block: B:180:0x0488  */
    /* JADX WARN: Removed duplicated region for block: B:201:0x0515  */
    /* JADX WARN: Removed duplicated region for block: B:42:0x00dd  */
    /* JADX WARN: Removed duplicated region for block: B:43:0x00ec  */
    /* JADX WARN: Removed duplicated region for block: B:89:0x01a2  */
    /* JADX WARN: Removed duplicated region for block: B:99:0x01c0  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void measureTime(MessageObject messageObject) {
        TLRPC$User user;
        String replace;
        String str;
        String str2;
        CharSequence charSequence;
        int ceil;
        MessageObject messageObject2;
        TLRPC$Message tLRPC$Message;
        int dp;
        String format;
        Locale locale;
        String format2;
        MessageObject messageObject3;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        int i;
        TLRPC$Message tLRPC$Message2;
        MessageObject.GroupedMessages groupedMessages;
        MessageObject primaryMessageObject = getPrimaryMessageObject();
        long fromChatId = messageObject.getFromChatId();
        CharSequence charSequence2 = "";
        if (!messageObject.scheduled) {
            if (primaryMessageObject.messageOwner.via_business_bot_id != 0) {
                TLRPC$User user2 = MessagesController.getInstance(messageObject.currentAccount).getUser(Long.valueOf(primaryMessageObject.messageOwner.via_business_bot_id));
                if (user2 != null) {
                    replace = UserObject.getUserName(user2);
                }
            } else {
                TLRPC$Message tLRPC$Message3 = messageObject.messageOwner;
                if (tLRPC$Message3.post_author != null) {
                    if (!this.isMegagroup || messageObject.getFromChatId() != messageObject.getDialogId()) {
                        replace = messageObject.messageOwner.post_author.replace("\n", "");
                    }
                } else {
                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2 = tLRPC$Message3.fwd_from;
                    if (tLRPC$MessageFwdHeader2 != null && (str = tLRPC$MessageFwdHeader2.post_author) != null) {
                        replace = str.replace("\n", "");
                    } else if (tLRPC$MessageFwdHeader2 != null && tLRPC$MessageFwdHeader2.imported) {
                        replace = tLRPC$MessageFwdHeader2.date == tLRPC$Message3.date ? LocaleController.getString("ImportedMessage", R.string.ImportedMessage) : LocaleController.formatImportedDate(messageObject.messageOwner.fwd_from.date) + " " + LocaleController.getString("ImportedMessage", R.string.ImportedMessage);
                    } else if (!messageObject.isOutOwner() && fromChatId > 0 && messageObject.messageOwner.post && (user = MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(fromChatId))) != null) {
                        replace = ContactsController.formatName(user.first_name, user.last_name).replace('\n', ' ');
                    }
                }
            }
            TLRPC$User user3 = !this.currentMessageObject.isFromUser() ? MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(fromChatId)) : null;
            boolean hasReplies = messageObject.hasReplies();
            int i2 = 0;
            if (!messageObject.scheduled && !messageObject.isLiveLocation() && !messageObject.messageOwner.edit_hide && messageObject.getDialogId() != 777000) {
                tLRPC$Message2 = messageObject.messageOwner;
                if (tLRPC$Message2.via_bot_id == 0 && tLRPC$Message2.via_bot_name == null && (user3 == null || !user3.bot)) {
                    if (this.currentPosition != null || (groupedMessages = this.currentMessagesGroup) == null || groupedMessages.messages.isEmpty()) {
                        this.edited = (messageObject.messageOwner.flags & LiteMode.FLAG_CHAT_SCALE) == 0 || messageObject.isEditing();
                    } else {
                        this.edited = false;
                        hasReplies = this.currentMessagesGroup.messages.get(0).hasReplies();
                        if (!this.currentMessagesGroup.messages.get(0).messageOwner.edit_hide) {
                            int size = this.currentMessagesGroup.messages.size();
                            for (int i3 = 0; i3 < size; i3++) {
                                MessageObject messageObject4 = this.currentMessagesGroup.messages.get(i3);
                                if ((messageObject4.messageOwner.flags & LiteMode.FLAG_CHAT_SCALE) != 0 || messageObject4.isEditing()) {
                                    this.edited = true;
                                    break;
                                }
                            }
                        }
                    }
                    if (!this.currentMessageObject.isSponsored() && !this.currentMessageObject.isQuickReply()) {
                        messageObject3 = this.currentMessageObject;
                        if (messageObject3.scheduled || messageObject3.messageOwner.date != 2147483646) {
                            if (messageObject3.realDate == 0) {
                                str2 = LocaleController.formatSmallDateChat(this.currentMessageObject.realDate) + ", " + LocaleController.getInstance().formatterDay.format(this.currentMessageObject.realDate * 1000);
                            } else if (messageObject3.isRepostPreview) {
                                str2 = LocaleController.formatSmallDateChat(messageObject.messageOwner.date) + ", " + LocaleController.getInstance().formatterDay.format(messageObject.messageOwner.date * 1000);
                            } else if (this.edited) {
                                str2 = LocaleController.getString("EditedMessage", R.string.EditedMessage) + " " + LocaleController.getInstance().formatterDay.format(messageObject.messageOwner.date * 1000);
                            } else if (messageObject3.isSaved && (tLRPC$MessageFwdHeader = messageObject3.messageOwner.fwd_from) != null && ((i = tLRPC$MessageFwdHeader.date) != 0 || tLRPC$MessageFwdHeader.saved_date != 0)) {
                                int i4 = tLRPC$MessageFwdHeader.saved_date;
                                if (i4 != 0) {
                                    i = i4;
                                }
                                str2 = LocaleController.formatSeenDate(i);
                            } else {
                                str2 = LocaleController.getInstance().formatterDay.format(messageObject.messageOwner.date * 1000);
                            }
                            if (replace == null) {
                                TLRPC$Message tLRPC$Message4 = messageObject.messageOwner;
                                if (tLRPC$Message4.via_business_bot_id != 0) {
                                    this.currentTimeString = str2 + ", ";
                                } else {
                                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader3 = tLRPC$Message4.fwd_from;
                                    if (tLRPC$MessageFwdHeader3 != null && tLRPC$MessageFwdHeader3.imported) {
                                        this.currentTimeString = " " + str2;
                                    } else {
                                        this.currentTimeString = ", " + str2;
                                    }
                                }
                            } else {
                                this.currentTimeString = str2;
                            }
                            TextPaint textPaint = Theme.chat_timePaint;
                            ceil = (int) Math.ceil(textPaint.measureText(charSequence, 0, this.currentTimeString != null ? 0 : charSequence.length()));
                            this.timeWidth = ceil;
                            this.timeTextWidth = ceil;
                            messageObject2 = this.currentMessageObject;
                            if (messageObject2.scheduled && messageObject2.messageOwner.date == 2147483646) {
                                this.timeWidth = ceil - AndroidUtilities.dp(8.0f);
                            }
                            tLRPC$Message = messageObject.messageOwner;
                            if ((tLRPC$Message.flags & 1024) != 0) {
                                this.currentViewsString = String.format("%s", LocaleController.formatShortNumber(Math.max(1, tLRPC$Message.views), null));
                                this.viewsTextWidth = (int) Math.ceil(Theme.chat_timePaint.measureText(format2));
                                this.timeWidth = (int) (this.timeWidth + this.viewsTextWidth + ((Theme.chat_msgInViewsDrawable.getIntrinsicWidth() * (Theme.chat_timePaint.getTextSize() - AndroidUtilities.dp(2.0f))) / Theme.chat_msgInViewsDrawable.getIntrinsicHeight()) + AndroidUtilities.dp(10.0f));
                            }
                            if (messageObject.type == 20) {
                                int i5 = R.string.PaymentCheckoutPay;
                                LocaleController localeController = LocaleController.getInstance();
                                TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
                                String formatString = LocaleController.formatString(i5, localeController.formatCurrencyString(tLRPC$MessageMedia.total_amount, tLRPC$MessageMedia.currency).toUpperCase(Locale.ROOT));
                                if (formatString.length() >= 2) {
                                    formatString = formatString.substring(0, 1).toUpperCase(locale) + formatString.substring(1).toLowerCase(locale);
                                }
                                this.currentUnlockString = formatString;
                                this.unlockTextWidth = (int) Math.ceil(Theme.chat_unlockExtendedMediaTextPaint.measureText(formatString));
                            }
                            if (!this.isChat && this.isMegagroup && !this.isThreadChat && hasReplies) {
                                this.currentRepliesString = String.format("%s", LocaleController.formatShortNumber(getRepliesCount(), null));
                                this.repliesTextWidth = (int) Math.ceil(Theme.chat_timePaint.measureText(format));
                                this.timeWidth = (int) (this.timeWidth + this.repliesTextWidth + ((Theme.chat_msgInRepliesDrawable.getIntrinsicWidth() * (Theme.chat_timePaint.getTextSize() - AndroidUtilities.dp(2.0f))) / Theme.chat_msgInRepliesDrawable.getIntrinsicHeight()) + AndroidUtilities.dp(10.0f));
                            } else {
                                this.currentRepliesString = null;
                            }
                            if (this.isPinned) {
                                this.timeWidth += Theme.chat_msgInPinnedDrawable.getIntrinsicWidth() + AndroidUtilities.dp(3.0f);
                            }
                            if (messageObject.scheduled) {
                                if (messageObject.isSendError()) {
                                    this.timeWidth += AndroidUtilities.dp(18.0f);
                                } else if (messageObject.isSending() && messageObject.messageOwner.peer_id.channel_id != 0 && !messageObject.isSupergroup()) {
                                    this.timeWidth += AndroidUtilities.dp(18.0f);
                                }
                            }
                            if (this.currentMessageObject.shouldDrawReactions()) {
                                ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
                                if (reactionsLayoutInBubble.isSmall) {
                                    reactionsLayoutInBubble.measure(ConnectionsManager.DEFAULT_DATACENTER_ID, 3);
                                    this.timeWidth += this.reactionsLayoutInBubble.width;
                                }
                            }
                            if (replace == null) {
                                if (this.availableTimeWidth == 0) {
                                    this.availableTimeWidth = AndroidUtilities.dp(1000.0f);
                                }
                                int i6 = this.availableTimeWidth - this.timeWidth;
                                if (messageObject.isOutOwner()) {
                                    if (messageObject.type == 5) {
                                        dp = AndroidUtilities.dp(20.0f);
                                    } else {
                                        dp = AndroidUtilities.dp(96.0f);
                                    }
                                    i6 -= dp;
                                }
                                CharSequence replaceEmoji = Emoji.replaceEmoji((CharSequence) replace, Theme.chat_timePaint.getFontMetricsInt(), AndroidUtilities.dp(10.0f), false);
                                int ceil2 = (int) Math.ceil(Theme.chat_timePaint.measureText(replaceEmoji, 0, replaceEmoji.length()));
                                this.signWidth = Math.min(ceil2, i6);
                                if (ceil2 <= i6) {
                                    charSequence2 = replaceEmoji;
                                    i2 = ceil2;
                                } else if (i6 > 0) {
                                    charSequence2 = TextUtils.ellipsize(replaceEmoji, Theme.chat_timePaint, i6, TextUtils.TruncateAt.END);
                                    i2 = i6;
                                }
                                SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder();
                                if (messageObject.messageOwner.via_business_bot_id != 0) {
                                    spannableStringBuilder.append(this.currentTimeString);
                                    spannableStringBuilder.append(charSequence2);
                                } else {
                                    spannableStringBuilder.append(charSequence2);
                                    spannableStringBuilder.append(this.currentTimeString);
                                }
                                this.currentTimeString = spannableStringBuilder;
                                this.timeTextWidth += i2;
                                this.timeWidth += i2;
                                return;
                            }
                            this.signWidth = 0;
                            return;
                        }
                    }
                    str2 = "";
                    if (replace == null) {
                    }
                    TextPaint textPaint2 = Theme.chat_timePaint;
                    ceil = (int) Math.ceil(textPaint2.measureText(charSequence, 0, this.currentTimeString != null ? 0 : charSequence.length()));
                    this.timeWidth = ceil;
                    this.timeTextWidth = ceil;
                    messageObject2 = this.currentMessageObject;
                    if (messageObject2.scheduled) {
                        this.timeWidth = ceil - AndroidUtilities.dp(8.0f);
                    }
                    tLRPC$Message = messageObject.messageOwner;
                    if ((tLRPC$Message.flags & 1024) != 0) {
                    }
                    if (messageObject.type == 20) {
                    }
                    if (!this.isChat) {
                    }
                    this.currentRepliesString = null;
                    if (this.isPinned) {
                    }
                    if (messageObject.scheduled) {
                    }
                    if (this.currentMessageObject.shouldDrawReactions()) {
                    }
                    if (replace == null) {
                    }
                }
            }
            this.edited = false;
            if (!this.currentMessageObject.isSponsored()) {
                messageObject3 = this.currentMessageObject;
                if (messageObject3.scheduled) {
                }
                if (messageObject3.realDate == 0) {
                }
                if (replace == null) {
                }
                TextPaint textPaint22 = Theme.chat_timePaint;
                ceil = (int) Math.ceil(textPaint22.measureText(charSequence, 0, this.currentTimeString != null ? 0 : charSequence.length()));
                this.timeWidth = ceil;
                this.timeTextWidth = ceil;
                messageObject2 = this.currentMessageObject;
                if (messageObject2.scheduled) {
                }
                tLRPC$Message = messageObject.messageOwner;
                if ((tLRPC$Message.flags & 1024) != 0) {
                }
                if (messageObject.type == 20) {
                }
                if (!this.isChat) {
                }
                this.currentRepliesString = null;
                if (this.isPinned) {
                }
                if (messageObject.scheduled) {
                }
                if (this.currentMessageObject.shouldDrawReactions()) {
                }
                if (replace == null) {
                }
            }
            str2 = "";
            if (replace == null) {
            }
            TextPaint textPaint222 = Theme.chat_timePaint;
            ceil = (int) Math.ceil(textPaint222.measureText(charSequence, 0, this.currentTimeString != null ? 0 : charSequence.length()));
            this.timeWidth = ceil;
            this.timeTextWidth = ceil;
            messageObject2 = this.currentMessageObject;
            if (messageObject2.scheduled) {
            }
            tLRPC$Message = messageObject.messageOwner;
            if ((tLRPC$Message.flags & 1024) != 0) {
            }
            if (messageObject.type == 20) {
            }
            if (!this.isChat) {
            }
            this.currentRepliesString = null;
            if (this.isPinned) {
            }
            if (messageObject.scheduled) {
            }
            if (this.currentMessageObject.shouldDrawReactions()) {
            }
            if (replace == null) {
            }
        }
        replace = null;
        if (!this.currentMessageObject.isFromUser()) {
        }
        boolean hasReplies2 = messageObject.hasReplies();
        int i22 = 0;
        if (!messageObject.scheduled) {
            tLRPC$Message2 = messageObject.messageOwner;
            if (tLRPC$Message2.via_bot_id == 0) {
                if (this.currentPosition != null) {
                }
                this.edited = (messageObject.messageOwner.flags & LiteMode.FLAG_CHAT_SCALE) == 0 || messageObject.isEditing();
                if (!this.currentMessageObject.isSponsored()) {
                }
                str2 = "";
                if (replace == null) {
                }
                TextPaint textPaint2222 = Theme.chat_timePaint;
                ceil = (int) Math.ceil(textPaint2222.measureText(charSequence, 0, this.currentTimeString != null ? 0 : charSequence.length()));
                this.timeWidth = ceil;
                this.timeTextWidth = ceil;
                messageObject2 = this.currentMessageObject;
                if (messageObject2.scheduled) {
                }
                tLRPC$Message = messageObject.messageOwner;
                if ((tLRPC$Message.flags & 1024) != 0) {
                }
                if (messageObject.type == 20) {
                }
                if (!this.isChat) {
                }
                this.currentRepliesString = null;
                if (this.isPinned) {
                }
                if (messageObject.scheduled) {
                }
                if (this.currentMessageObject.shouldDrawReactions()) {
                }
                if (replace == null) {
                }
            }
        }
        this.edited = false;
        if (!this.currentMessageObject.isSponsored()) {
        }
        str2 = "";
        if (replace == null) {
        }
        TextPaint textPaint22222 = Theme.chat_timePaint;
        ceil = (int) Math.ceil(textPaint22222.measureText(charSequence, 0, this.currentTimeString != null ? 0 : charSequence.length()));
        this.timeWidth = ceil;
        this.timeTextWidth = ceil;
        messageObject2 = this.currentMessageObject;
        if (messageObject2.scheduled) {
        }
        tLRPC$Message = messageObject.messageOwner;
        if ((tLRPC$Message.flags & 1024) != 0) {
        }
        if (messageObject.type == 20) {
        }
        if (!this.isChat) {
        }
        this.currentRepliesString = null;
        if (this.isPinned) {
        }
        if (messageObject.scheduled) {
        }
        if (this.currentMessageObject.shouldDrawReactions()) {
        }
        if (replace == null) {
        }
    }

    private boolean shouldDrawSelectionOverlay() {
        return hasSelectionOverlay() && ((isPressed() && this.isCheckPressed) || ((!this.isCheckPressed && this.isPressed) || this.isHighlighted || this.isHighlightedAnimated)) && !textIsSelectionMode() && ((this.currentMessagesGroup == null || this.drawSelectionBackground) && this.currentBackgroundDrawable != null);
    }

    private int getSelectionOverlayColor() {
        Theme.ResourcesProvider resourcesProvider = this.resourcesProvider;
        if (resourcesProvider == null) {
            return 0;
        }
        MessageObject messageObject = this.currentMessageObject;
        return resourcesProvider.getColor((messageObject == null || !messageObject.isOut()) ? Theme.key_chat_inBubbleSelectedOverlay : Theme.key_chat_outBubbleSelectedOverlay);
    }

    private boolean hasSelectionOverlay() {
        int selectionOverlayColor = getSelectionOverlayColor();
        return (selectionOverlayColor == 0 || selectionOverlayColor == -65536) ? false : true;
    }

    private boolean isDrawSelectionBackground() {
        MessageObject messageObject;
        return ((isPressed() && this.isCheckPressed) || ((!this.isCheckPressed && this.isPressed) || this.isHighlighted)) && !textIsSelectionMode() && !hasSelectionOverlay() && ((messageObject = this.currentMessageObject) == null || !messageObject.preview);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public boolean isOpenChatByShare(MessageObject messageObject) {
        ChatMessageCellDelegate chatMessageCellDelegate;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = messageObject.messageOwner.fwd_from;
        return (tLRPC$MessageFwdHeader == null || tLRPC$MessageFwdHeader.saved_from_peer == null || ((chatMessageCellDelegate = this.delegate) != null && !chatMessageCellDelegate.isReplyOrSelf())) ? false : true;
    }

    /* JADX WARN: Code restructure failed: missing block: B:20:0x002b, code lost:
        if ((r0 & (r5.isOutOwner() ? 1 : 2)) != 0) goto L20;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    protected boolean checkNeedDrawShareButton(MessageObject messageObject) {
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        MessageObject messageObject2 = this.currentMessageObject;
        if ((!messageObject2.deleted || messageObject2.deletedByThanos) && !messageObject2.isSponsored()) {
            if (this.currentMessagesGroup != null && (groupedMessagePosition = this.currentPosition) != null) {
                int i = groupedMessagePosition.flags;
                boolean z = true;
                if ((i & 8) != 0) {
                }
                z = false;
                if (!this.currentMessagesGroup.isDocuments && !z) {
                    return false;
                }
            }
            return messageObject.needDrawShareButton();
        }
        return false;
    }

    public boolean isInsideBackground(float f, float f2) {
        if (this.currentBackgroundDrawable != null) {
            int i = this.backgroundDrawableLeft;
            if (f >= i && f <= i + this.backgroundDrawableRight) {
                return true;
            }
        }
        return false;
    }

    private void updateCurrentUserAndChat() {
        TLRPC$Peer tLRPC$Peer;
        if (this.currentMessageObject == null) {
            return;
        }
        MessagesController messagesController = MessagesController.getInstance(this.currentAccount);
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = this.currentMessageObject.messageOwner.fwd_from;
        long clientUserId = UserConfig.getInstance(this.currentAccount).getClientUserId();
        if (tLRPC$MessageFwdHeader != null && (tLRPC$MessageFwdHeader.from_id instanceof TLRPC$TL_peerChannel) && (this.currentMessageObject.getDialogId() == clientUserId || this.currentMessageObject.getDialogId() == UserObject.REPLY_BOT)) {
            this.currentChat = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(tLRPC$MessageFwdHeader.from_id.channel_id));
        } else if (tLRPC$MessageFwdHeader != null && (tLRPC$Peer = tLRPC$MessageFwdHeader.saved_from_peer) != null) {
            long j = tLRPC$Peer.user_id;
            if (j != 0) {
                if (!this.isSavedChat) {
                    TLRPC$Peer tLRPC$Peer2 = tLRPC$MessageFwdHeader.from_id;
                    if (tLRPC$Peer2 instanceof TLRPC$TL_peerUser) {
                        this.currentUser = messagesController.getUser(Long.valueOf(tLRPC$Peer2.user_id));
                        return;
                    }
                }
                this.currentUser = messagesController.getUser(Long.valueOf(j));
            } else if (tLRPC$Peer.channel_id != 0) {
                if (this.currentMessageObject.isSavedFromMegagroup()) {
                    TLRPC$Peer tLRPC$Peer3 = tLRPC$MessageFwdHeader.from_id;
                    if (tLRPC$Peer3 instanceof TLRPC$TL_peerUser) {
                        this.currentUser = messagesController.getUser(Long.valueOf(tLRPC$Peer3.user_id));
                        return;
                    }
                }
                this.currentChat = messagesController.getChat(Long.valueOf(tLRPC$MessageFwdHeader.saved_from_peer.channel_id));
            } else {
                long j2 = tLRPC$Peer.chat_id;
                if (j2 != 0) {
                    TLRPC$Peer tLRPC$Peer4 = tLRPC$MessageFwdHeader.from_id;
                    if (tLRPC$Peer4 instanceof TLRPC$TL_peerUser) {
                        this.currentUser = messagesController.getUser(Long.valueOf(tLRPC$Peer4.user_id));
                    } else {
                        this.currentChat = messagesController.getChat(Long.valueOf(j2));
                    }
                }
            }
        } else if (tLRPC$MessageFwdHeader != null && (tLRPC$MessageFwdHeader.from_id instanceof TLRPC$TL_peerUser) && (tLRPC$MessageFwdHeader.imported || this.currentMessageObject.getDialogId() == clientUserId)) {
            this.currentUser = messagesController.getUser(Long.valueOf(tLRPC$MessageFwdHeader.from_id.user_id));
        } else if (tLRPC$MessageFwdHeader != null && !TextUtils.isEmpty(tLRPC$MessageFwdHeader.saved_from_name) && (tLRPC$MessageFwdHeader.imported || this.currentMessageObject.getDialogId() == clientUserId)) {
            TLRPC$TL_user tLRPC$TL_user = new TLRPC$TL_user();
            this.currentUser = tLRPC$TL_user;
            tLRPC$TL_user.first_name = tLRPC$MessageFwdHeader.saved_from_name;
        } else if (tLRPC$MessageFwdHeader != null && !TextUtils.isEmpty(tLRPC$MessageFwdHeader.from_name) && (tLRPC$MessageFwdHeader.imported || this.currentMessageObject.getDialogId() == clientUserId)) {
            TLRPC$TL_user tLRPC$TL_user2 = new TLRPC$TL_user();
            this.currentUser = tLRPC$TL_user2;
            tLRPC$TL_user2.first_name = tLRPC$MessageFwdHeader.from_name;
        } else {
            long fromChatId = this.currentMessageObject.getFromChatId();
            if (DialogObject.isEncryptedDialog(this.currentMessageObject.getDialogId())) {
                if (this.currentMessageObject.isOutOwner()) {
                    this.currentUser = UserConfig.getInstance(this.currentAccount).getCurrentUser();
                    return;
                }
                TLRPC$EncryptedChat encryptedChat = messagesController.getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(this.currentMessageObject.getDialogId())));
                if (encryptedChat != null) {
                    this.currentUser = messagesController.getUser(Long.valueOf(encryptedChat.user_id));
                }
            } else if (DialogObject.isUserDialog(fromChatId) && !this.currentMessageObject.messageOwner.post) {
                this.currentUser = messagesController.getUser(Long.valueOf(fromChatId));
            } else if (DialogObject.isChatDialog(fromChatId)) {
                this.currentChat = messagesController.getChat(Long.valueOf(-fromChatId));
            } else {
                TLRPC$Message tLRPC$Message = this.currentMessageObject.messageOwner;
                if (tLRPC$Message.post) {
                    this.currentChat = messagesController.getChat(Long.valueOf(tLRPC$Message.peer_id.channel_id));
                }
            }
        }
    }

    /* JADX WARN: Can't wrap try/catch for region: R(33:184|(1:694)(2:188|(1:(1:691))(1:192))|193|(1:689)(1:197)|198|(5:200|(1:202)(1:685)|203|(3:679|(1:683)|684)|207)(2:686|(1:688))|208|(1:678)(1:214)|215|(1:677)(1:219)|220|(1:676)(1:224)|(1:229)|230|(1:675)(1:234)|235|(8:(2:388|(28:464|(1:466)(1:672)|467|(3:469|(3:471|(3:473|(1:475)(1:668)|476)(1:669)|477)(1:670)|(1:479)(1:667))(1:671)|480|(2:635|(1:666)(9:649|(1:651)(1:665)|652|(1:654)(1:664)|655|(1:657)(1:663)|658|(1:660)(1:662)|661))(3:486|(1:488)(2:632|(1:634))|(1:490)(7:619|(1:621)(1:631)|622|(1:624)(1:630)|625|(1:627)(1:629)|628))|491|(5:493|(3:566|(1:568)|569)(1:497)|(1:499)|500|(4:559|(1:561)(1:565)|562|(1:564))(2:(2:515|(2:520|(1:522)(2:523|(1:525)(2:526|(2:542|(1:558)(6:548|(1:550)(1:557)|551|(1:553)|554|(1:556)))(6:530|(1:532)(1:541)|533|(1:535)|536|(2:538|(1:540))))))(1:519))(1:513)|514))(9:570|(2:575|(2:577|(2:579|(3:581|(1:583)|569)(1:584))(1:585))(2:586|(2:588|(2:(3:596|(1:598)(1:618)|(2:600|(2:602|(2:604|605))(2:606|(2:608|(2:610|605))(2:611|(1:617)))))|569)(1:594))))(1:574)|(0)|500|(3:502|504|506)|559|(0)(0)|562|(0))|247|248|249|(1:251)|252|(1:254)(1:381)|255|256|(1:258)(1:378)|259|(2:261|(1:263))|264|(1:377)(3:269|(1:271)(1:376)|272)|273|274|(1:276)(1:373)|277|(21:279|(3:281|(2:283|284)(1:286)|285)|287|288|(1:290)|291|(1:368)(2:(1:298)(1:367)|299)|(1:301)|366|303|(4:305|(1:364)(1:309)|310|(1:363)(4:312|(2:314|(2:316|317))(1:362)|361|317))(1:365)|318|(1:322)|323|(4:325|(4:328|(1:342)(4:330|(1:332)(1:341)|(1:334)(1:340)|(2:336|337)(1:339))|338|326)|343|344)|345|(4:352|353|(1:355)(1:357)|356)|358|353|(0)(0)|356)|369|(1:371))(4:404|(4:406|(1:408)(2:412|(1:414)(2:415|(1:417)))|409|(1:411))|418|(17:425|(1:427)(1:463)|428|(2:430|(1:432)(1:458))(2:459|(1:461)(12:462|434|(1:436)(1:457)|437|(1:439)(1:456)|440|(1:442)(1:455)|443|(1:447)|448|(1:454)(1:452)|453))|433|434|(0)(0)|437|(0)(0)|440|(0)(0)|443|(2:445|447)|448|(1:450)|454|453)(23:424|246|247|248|249|(0)|252|(0)(0)|255|256|(0)(0)|259|(0)|264|(0)|377|273|274|(0)(0)|277|(0)|369|(0))))(3:239|(2:(1:385)(1:387)|386)(1:243)|244)|273|274|(0)(0)|277|(0)|369|(0))|245|246|247|248|249|(0)|252|(0)(0)|255|256|(0)(0)|259|(0)|264|(0)|377) */
    /* JADX WARN: Code restructure failed: missing block: B:786:0x12a4, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:787:0x12a5, code lost:
        org.telegram.messenger.FileLog.e(r0);
     */
    /* JADX WARN: Code restructure failed: missing block: B:816:0x1341, code lost:
        if (r51.isReplyQuote == false) goto L366;
     */
    /* JADX WARN: Code restructure failed: missing block: B:899:0x1515, code lost:
        if ((r0.action instanceof org.telegram.tgnet.TLRPC$TL_messageActionTopicCreate) == false) goto L712;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:239:0x06c9  */
    /* JADX WARN: Removed duplicated region for block: B:242:0x06db  */
    /* JADX WARN: Removed duplicated region for block: B:243:0x06de  */
    /* JADX WARN: Removed duplicated region for block: B:246:0x06fd  */
    /* JADX WARN: Removed duplicated region for block: B:247:0x0701  */
    /* JADX WARN: Removed duplicated region for block: B:250:0x0714  */
    /* JADX WARN: Removed duplicated region for block: B:251:0x075f  */
    /* JADX WARN: Removed duplicated region for block: B:520:0x0c80  */
    /* JADX WARN: Removed duplicated region for block: B:521:0x0c83  */
    /* JADX WARN: Removed duplicated region for block: B:524:0x0c92  */
    /* JADX WARN: Removed duplicated region for block: B:525:0x0c95  */
    /* JADX WARN: Removed duplicated region for block: B:528:0x0ca5  */
    /* JADX WARN: Removed duplicated region for block: B:529:0x0ca9  */
    /* JADX WARN: Removed duplicated region for block: B:687:0x102a  */
    /* JADX WARN: Removed duplicated region for block: B:750:0x118c  */
    /* JADX WARN: Removed duplicated region for block: B:751:0x1192  */
    /* JADX WARN: Removed duplicated region for block: B:754:0x11b0  */
    /* JADX WARN: Removed duplicated region for block: B:760:0x11e4  */
    /* JADX WARN: Removed duplicated region for block: B:763:0x11ee  */
    /* JADX WARN: Removed duplicated region for block: B:764:0x11f1  */
    /* JADX WARN: Removed duplicated region for block: B:767:0x120c A[Catch: Exception -> 0x12a4, TryCatch #4 {Exception -> 0x12a4, blocks: (B:765:0x1204, B:767:0x120c, B:769:0x1221, B:771:0x1226, B:773:0x124e, B:774:0x1273, B:777:0x1279, B:779:0x127d, B:783:0x1287, B:784:0x1298), top: B:930:0x1204 }] */
    /* JADX WARN: Removed duplicated region for block: B:768:0x1220  */
    /* JADX WARN: Removed duplicated region for block: B:771:0x1226 A[Catch: Exception -> 0x12a4, TryCatch #4 {Exception -> 0x12a4, blocks: (B:765:0x1204, B:767:0x120c, B:769:0x1221, B:771:0x1226, B:773:0x124e, B:774:0x1273, B:777:0x1279, B:779:0x127d, B:783:0x1287, B:784:0x1298), top: B:930:0x1204 }] */
    /* JADX WARN: Removed duplicated region for block: B:776:0x1277 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:790:0x12b0 A[Catch: Exception -> 0x14e3, TryCatch #5 {Exception -> 0x14e3, blocks: (B:788:0x12a8, B:790:0x12b0, B:792:0x12b8, B:794:0x12bd, B:796:0x12d4, B:798:0x12e0, B:799:0x12e4, B:800:0x12e7, B:802:0x12f1, B:803:0x12f8, B:805:0x12fc, B:807:0x1300, B:812:0x130b, B:815:0x133f, B:818:0x134a, B:820:0x1353, B:822:0x136c, B:824:0x1372, B:826:0x137e, B:828:0x138f, B:830:0x1397, B:835:0x13ab, B:838:0x13d8, B:840:0x13e8, B:844:0x13f2, B:845:0x1410, B:847:0x141a, B:848:0x1426, B:850:0x1430, B:852:0x1452, B:860:0x1460, B:861:0x1468, B:862:0x1473, B:863:0x147f, B:865:0x1488, B:867:0x1490, B:872:0x14b5, B:876:0x14c1, B:875:0x14bf, B:871:0x149e, B:842:0x13ec, B:837:0x13b0, B:817:0x1343, B:877:0x14c9, B:879:0x14cf), top: B:931:0x12a8 }] */
    /* JADX WARN: Removed duplicated region for block: B:791:0x12b7  */
    /* JADX WARN: Removed duplicated region for block: B:794:0x12bd A[Catch: Exception -> 0x14e3, TryCatch #5 {Exception -> 0x14e3, blocks: (B:788:0x12a8, B:790:0x12b0, B:792:0x12b8, B:794:0x12bd, B:796:0x12d4, B:798:0x12e0, B:799:0x12e4, B:800:0x12e7, B:802:0x12f1, B:803:0x12f8, B:805:0x12fc, B:807:0x1300, B:812:0x130b, B:815:0x133f, B:818:0x134a, B:820:0x1353, B:822:0x136c, B:824:0x1372, B:826:0x137e, B:828:0x138f, B:830:0x1397, B:835:0x13ab, B:838:0x13d8, B:840:0x13e8, B:844:0x13f2, B:845:0x1410, B:847:0x141a, B:848:0x1426, B:850:0x1430, B:852:0x1452, B:860:0x1460, B:861:0x1468, B:862:0x1473, B:863:0x147f, B:865:0x1488, B:867:0x1490, B:872:0x14b5, B:876:0x14c1, B:875:0x14bf, B:871:0x149e, B:842:0x13ec, B:837:0x13b0, B:817:0x1343, B:877:0x14c9, B:879:0x14cf), top: B:931:0x12a8 }] */
    /* JADX WARN: Removed duplicated region for block: B:874:0x14bd  */
    /* JADX WARN: Removed duplicated region for block: B:875:0x14bf A[Catch: Exception -> 0x14e3, TryCatch #5 {Exception -> 0x14e3, blocks: (B:788:0x12a8, B:790:0x12b0, B:792:0x12b8, B:794:0x12bd, B:796:0x12d4, B:798:0x12e0, B:799:0x12e4, B:800:0x12e7, B:802:0x12f1, B:803:0x12f8, B:805:0x12fc, B:807:0x1300, B:812:0x130b, B:815:0x133f, B:818:0x134a, B:820:0x1353, B:822:0x136c, B:824:0x1372, B:826:0x137e, B:828:0x138f, B:830:0x1397, B:835:0x13ab, B:838:0x13d8, B:840:0x13e8, B:844:0x13f2, B:845:0x1410, B:847:0x141a, B:848:0x1426, B:850:0x1430, B:852:0x1452, B:860:0x1460, B:861:0x1468, B:862:0x1473, B:863:0x147f, B:865:0x1488, B:867:0x1490, B:872:0x14b5, B:876:0x14c1, B:875:0x14bf, B:871:0x149e, B:842:0x13ec, B:837:0x13b0, B:817:0x1343, B:877:0x14c9, B:879:0x14cf), top: B:931:0x12a8 }] */
    /* JADX WARN: Removed duplicated region for block: B:879:0x14cf A[Catch: Exception -> 0x14e3, TRY_LEAVE, TryCatch #5 {Exception -> 0x14e3, blocks: (B:788:0x12a8, B:790:0x12b0, B:792:0x12b8, B:794:0x12bd, B:796:0x12d4, B:798:0x12e0, B:799:0x12e4, B:800:0x12e7, B:802:0x12f1, B:803:0x12f8, B:805:0x12fc, B:807:0x1300, B:812:0x130b, B:815:0x133f, B:818:0x134a, B:820:0x1353, B:822:0x136c, B:824:0x1372, B:826:0x137e, B:828:0x138f, B:830:0x1397, B:835:0x13ab, B:838:0x13d8, B:840:0x13e8, B:844:0x13f2, B:845:0x1410, B:847:0x141a, B:848:0x1426, B:850:0x1430, B:852:0x1452, B:860:0x1460, B:861:0x1468, B:862:0x1473, B:863:0x147f, B:865:0x1488, B:867:0x1490, B:872:0x14b5, B:876:0x14c1, B:875:0x14bf, B:871:0x149e, B:842:0x13ec, B:837:0x13b0, B:817:0x1343, B:877:0x14c9, B:879:0x14cf), top: B:931:0x12a8 }] */
    /* JADX WARN: Type inference failed for: r0v18, types: [org.telegram.ui.CachedStaticLayout[]] */
    /* JADX WARN: Type inference failed for: r10v47 */
    /* JADX WARN: Type inference failed for: r10v70, types: [java.lang.CharSequence] */
    /* JADX WARN: Type inference failed for: r12v4, types: [org.telegram.tgnet.TLRPC$Document] */
    /* JADX WARN: Type inference failed for: r1v21, types: [android.text.Layout[]] */
    /* JADX WARN: Type inference failed for: r4v1 */
    /* JADX WARN: Type inference failed for: r4v2, types: [org.telegram.tgnet.TLRPC$Chat, org.telegram.tgnet.TLRPC$User, java.lang.String] */
    /* JADX WARN: Type inference failed for: r4v76 */
    /* JADX WARN: Type inference failed for: r5v1 */
    /* JADX WARN: Type inference failed for: r5v2, types: [boolean, int] */
    /* JADX WARN: Type inference failed for: r5v40 */
    /* JADX WARN: Type inference failed for: r9v115 */
    /* JADX WARN: Type inference failed for: r9v116, types: [boolean, int] */
    /* JADX WARN: Type inference failed for: r9v117 */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void setMessageObjectInternal(MessageObject messageObject) {
        String str;
        SpannableStringBuilder replaceTags;
        String str2;
        String str3;
        ?? r4;
        ?? r5;
        boolean z;
        int i;
        int i2;
        SpannableStringBuilder spannableStringBuilder;
        int i3;
        boolean z2;
        boolean z3;
        String str4;
        CharSequence charSequence;
        String str5;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        boolean z4;
        TLRPC$PhotoSize tLRPC$PhotoSize2;
        TLRPC$Photo tLRPC$Photo;
        int i4;
        int i5;
        TextPaint textPaint;
        String str6;
        char c;
        int i6;
        char c2;
        CharSequence charSequence2;
        MessageObject messageObject2;
        Object obj;
        TLRPC$Chat chat;
        String str7;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2;
        TextPaint textPaint2;
        String str8;
        boolean z5;
        CharSequence replaceEmoji;
        ArrayList<TLRPC$MessageEntity> arrayList;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader3;
        CharSequence charSequence3;
        boolean z6;
        boolean z7;
        CharSequence charSequence4;
        TLRPC$MessageMedia tLRPC$MessageMedia;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader4;
        TLRPC$MessageMedia tLRPC$MessageMedia2;
        TLRPC$Photo tLRPC$Photo2;
        TLRPC$PhotoSize tLRPC$PhotoSize3;
        int i7;
        int i8;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader5;
        boolean z8;
        SpannableStringBuilder spannableStringBuilder2;
        int i9;
        Object obj2;
        Object obj3;
        String ellipsize;
        int i10;
        TextStyleSpan[] textStyleSpanArr;
        int i11;
        SpannableStringBuilder spannableStringBuilder3;
        int i12;
        ?? r9;
        int i13;
        boolean z9;
        CharSequence createExpiredStoryString;
        MessageTopicButton messageTopicButton;
        ChatMessageCellDelegate chatMessageCellDelegate;
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        TLRPC$TL_forumTopic tLRPC$TL_forumTopic;
        int dp;
        MessageObject.GroupedMessagePosition groupedMessagePosition2;
        ChatMessageCellDelegate chatMessageCellDelegate2;
        SpannableStringBuilder spannableStringBuilder4;
        int i14;
        int themedColor;
        SpannableStringBuilder spannableStringBuilder5;
        TLRPC$Chat tLRPC$Chat;
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        if ((tLRPC$Message.flags & 1024) != 0 || tLRPC$Message.replies != null) {
            MessageObject messageObject3 = this.currentMessageObject;
            if (!messageObject3.scheduled && !messageObject3.isSponsored() && !this.currentMessageObject.viewsReloaded) {
                MessagesController.getInstance(this.currentAccount).addToViewsQueue(this.currentMessageObject);
                this.currentMessageObject.viewsReloaded = true;
            }
        }
        updateCurrentUserAndChat();
        setAvatar(messageObject);
        measureTime(messageObject);
        this.namesOffset = 0;
        TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
        if (tLRPC$Message2.via_bot_id != 0) {
            TLRPC$User user = MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(messageObject.messageOwner.via_bot_id));
            if (user != null && !TextUtils.isEmpty(user.username)) {
                str = "@" + user.username;
                replaceTags = AndroidUtilities.replaceTags(String.format(" %s <b>%s</b>", LocaleController.getString("ViaBot", R.string.ViaBot), str));
                this.viaWidth = (int) Math.ceil(Theme.chat_replyNamePaint.measureText(replaceTags, 0, replaceTags.length()));
                this.currentViaBotUser = user;
            }
            str = null;
            replaceTags = null;
        } else {
            if (!TextUtils.isEmpty(tLRPC$Message2.via_bot_name)) {
                str = "@" + messageObject.messageOwner.via_bot_name;
                replaceTags = AndroidUtilities.replaceTags(String.format(" %s <b>%s</b>", LocaleController.getString("ViaBot", R.string.ViaBot), str));
                this.viaWidth = (int) Math.ceil(Theme.chat_replyNamePaint.measureText(replaceTags, 0, replaceTags.length()));
            }
            str = null;
            replaceTags = null;
        }
        boolean isNeedAuthorName = isNeedAuthorName();
        boolean z10 = (messageObject.messageOwner.fwd_from == null || messageObject.type == 14) && str != null;
        if (!this.hasPsaHint && (isNeedAuthorName || z10)) {
            this.drawNameLayout = true;
            int maxNameWidth = getMaxNameWidth();
            this.nameWidth = maxNameWidth;
            if (maxNameWidth < 0) {
                this.nameWidth = AndroidUtilities.dp(100.0f);
            }
            if (this.isMegagroup && (tLRPC$Chat = this.currentChat) != null && messageObject.messageOwner.post_author != null && tLRPC$Chat.id == (-this.currentMessageObject.getFromChatId())) {
                spannableStringBuilder4 = new SpannableStringBuilder(messageObject.messageOwner.post_author.replace("\n", ""));
            } else if (this.isMegagroup && this.currentChat != null && this.currentMessageObject.isForwardedChannelPost()) {
                spannableStringBuilder4 = new SpannableStringBuilder(LocaleController.getString("DiscussChannel", R.string.DiscussChannel));
            } else {
                if ((this.currentUser != null || this.currentChat != null) && !this.currentMessageObject.isOutOwner() && !this.currentMessageObject.isAnyKindOfSticker() && this.currentMessageObject.type != 5 && (chatMessageCellDelegate2 = this.delegate) != null) {
                    TLRPC$User tLRPC$User = this.currentUser;
                    String adminRank = chatMessageCellDelegate2.getAdminRank(tLRPC$User != null ? tLRPC$User.id : this.currentChat.id);
                    if (adminRank != null) {
                        if (adminRank.length() == 0) {
                            adminRank = LocaleController.getString("ChatAdmin", R.string.ChatAdmin);
                        }
                        spannableStringBuilder4 = new SpannableStringBuilder(adminRank);
                    }
                }
                spannableStringBuilder4 = null;
            }
            int i15 = this.currentMessageObject.messageOwner.from_boosts_applied;
            if (i15 > 0) {
                if (spannableStringBuilder4 == null) {
                    spannableStringBuilder4 = new SpannableStringBuilder();
                }
                Pair<SpannableString, BoostCounterSpan> create = BoostCounterSpan.create(this, Theme.chat_namePaint, i15);
                BoostCounterSpan boostCounterSpan = (BoostCounterSpan) create.second;
                this.boostCounterSpan = boostCounterSpan;
                boostCounterSpan.isRtl = AndroidUtilities.isRTL(spannableStringBuilder4);
                if (this.boostCounterSpan.isRtl) {
                    spannableStringBuilder4.insert(0, (CharSequence) create.first);
                } else {
                    spannableStringBuilder4.append((CharSequence) create.first);
                }
            }
            if (spannableStringBuilder4 != null) {
                i14 = (int) new StaticLayout(spannableStringBuilder4, Theme.chat_adminPaint, AndroidUtilities.dp(300.0f), Layout.Alignment.ALIGN_NORMAL, 0.0f, 0.0f, false).getLineWidth(0);
                this.nameWidth -= i14;
            } else {
                i14 = 0;
            }
            this.currentNameStatus = null;
            String str9 = messageObject.customName;
            if (str9 != null) {
                this.currentNameString = str9;
            } else if (isNeedAuthorName) {
                this.currentNameString = getAuthorName();
                this.currentNameStatus = getAuthorStatus();
            } else {
                this.currentNameString = "";
            }
            int dp2 = AndroidUtilities.dp(this.currentMessageObject.isSponsored() ? -24.0f : 0.0f);
            CharSequence replace = this.currentNameString.replace('\n', ' ').replace((char) 8207, ' ');
            try {
                replace = Emoji.replaceEmoji(replace, Theme.chat_namePaint.getFontMetricsInt(), AndroidUtilities.dp(14.0f), false);
            } catch (Exception unused) {
            }
            CharSequence ellipsize2 = TextUtils.ellipsize(replace, Theme.chat_namePaint, (this.nameWidth + dp2) - (z10 ? this.viaWidth : 0), TextUtils.TruncateAt.END);
            if (z10) {
                int ceil = (int) Math.ceil(Theme.chat_namePaint.measureText(ellipsize2, 0, ellipsize2.length()));
                this.viaNameWidth = ceil;
                if (ceil != 0) {
                    this.viaNameWidth = ceil + AndroidUtilities.dp(4.0f);
                }
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    themedColor = getThemedColor(Theme.key_chat_stickerViaBotNameText);
                } else {
                    themedColor = getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outViaBotNameText : Theme.key_chat_inViaBotNameText);
                }
                String string = LocaleController.getString("ViaBot", R.string.ViaBot);
                if (this.currentNameString.length() > 0) {
                    spannableStringBuilder5 = new SpannableStringBuilder(String.format("%s %s %s", ellipsize2, string, str));
                    str3 = "";
                    TypefaceSpan typefaceSpan = new TypefaceSpan(Typeface.DEFAULT, 0, themedColor);
                    this.viaSpan1 = typefaceSpan;
                    str2 = "ViaBot";
                    spannableStringBuilder5.setSpan(typefaceSpan, ellipsize2.length() + 1, ellipsize2.length() + 1 + string.length(), 33);
                    if (this.currentNameStatus != null) {
                        this.viaNameWidth += AndroidUtilities.dp(28.0f);
                        spannableStringBuilder5.setSpan(new DialogCell.FixedWidthSpan(AndroidUtilities.dp(28.0f)), ellipsize2.length(), ellipsize2.length() + 1, 33);
                    }
                    TypefaceSpan typefaceSpan2 = new TypefaceSpan(AndroidUtilities.getTypeface(AndroidUtilities.TYPEFACE_ROBOTO_MEDIUM), 0, themedColor);
                    this.viaSpan2 = typefaceSpan2;
                    spannableStringBuilder5.setSpan(typefaceSpan2, ellipsize2.length() + 2 + string.length(), spannableStringBuilder5.length(), 33);
                } else {
                    str2 = "ViaBot";
                    str3 = "";
                    this.viaOnly = true;
                    spannableStringBuilder5 = new SpannableStringBuilder(String.format("%s %s", string, str));
                    TypefaceSpan typefaceSpan3 = new TypefaceSpan(Typeface.DEFAULT, 0, themedColor);
                    this.viaSpan1 = typefaceSpan3;
                    spannableStringBuilder5.setSpan(typefaceSpan3, 0, string.length() + 1, 33);
                    TypefaceSpan typefaceSpan4 = new TypefaceSpan(AndroidUtilities.getTypeface(AndroidUtilities.TYPEFACE_ROBOTO_MEDIUM), 0, themedColor);
                    this.viaSpan2 = typefaceSpan4;
                    spannableStringBuilder5.setSpan(typefaceSpan4, string.length() + 1, spannableStringBuilder5.length(), 33);
                }
                ellipsize2 = TextUtils.ellipsize(spannableStringBuilder5, Theme.chat_namePaint, this.nameWidth + dp2, TextUtils.TruncateAt.END);
            } else {
                str2 = "ViaBot";
                str3 = "";
            }
            try {
                CachedStaticLayout cachedStaticLayout = new CachedStaticLayout(new StaticLayout(ellipsize2, Theme.chat_namePaint, this.nameWidth + dp2 + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                this.nameLayout = cachedStaticLayout;
                if (cachedStaticLayout.layout.getLineCount() > 0) {
                    int ceil2 = (int) Math.ceil(this.nameLayout.layout.getLineWidth(0));
                    this.nameLayoutWidth = ceil2;
                    this.nameWidth = ceil2;
                    if (!messageObject.isAnyKindOfSticker()) {
                        this.namesOffset = (int) (this.namesOffset + AndroidUtilities.dp(5.0f) + Theme.chat_namePaint.getTextSize());
                    }
                    this.nameOffsetX = this.nameLayout.layout.getLineLeft(0);
                } else {
                    this.nameLayoutWidth = 0;
                    this.nameWidth = 0;
                    this.nameOffsetX = 0.0f;
                }
                if (this.currentNameStatus != null) {
                    this.nameWidth += AndroidUtilities.dp(20.0f);
                }
                this.nameWidth -= dp2;
                if (spannableStringBuilder4 != null) {
                    CachedStaticLayout cachedStaticLayout2 = new CachedStaticLayout(new StaticLayout(spannableStringBuilder4, Theme.chat_adminPaint, i14 + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                    this.adminLayout = cachedStaticLayout2;
                    this.nameWidth = (int) (this.nameWidth + cachedStaticLayout2.getLineWidth(0) + AndroidUtilities.dp(8.0f));
                    this.boostCounterBounds = new RectF();
                } else {
                    this.adminLayout = null;
                    this.boostCounterBounds = null;
                }
            } catch (Exception e) {
                FileLog.e(e);
            }
            if (this.currentNameStatusDrawable == null) {
                AnimatedEmojiDrawable.SwapAnimatedEmojiDrawable swapAnimatedEmojiDrawable = new AnimatedEmojiDrawable.SwapAnimatedEmojiDrawable((View) this, true, AndroidUtilities.dp(20.0f));
                this.currentNameStatusDrawable = swapAnimatedEmojiDrawable;
                if (this.attachedToWindow) {
                    swapAnimatedEmojiDrawable.attach();
                }
            }
            Object obj4 = this.currentNameStatus;
            if (obj4 == null) {
                this.currentNameStatusDrawable.set((Drawable) null, false);
            } else if (obj4 instanceof Long) {
                this.currentNameStatusDrawable.set(((Long) obj4).longValue(), false);
            } else if (obj4 instanceof Drawable) {
                this.currentNameStatusDrawable.set((Drawable) obj4, false);
            }
            r4 = 0;
            if (this.currentNameString.length() == 0) {
                this.currentNameString = null;
            }
            r5 = 0;
        } else {
            str2 = "ViaBot";
            str3 = "";
            r4 = 0;
            this.currentNameString = null;
            this.nameLayout = null;
            r5 = 0;
            this.nameWidth = 0;
            this.nameOffsetX = 0.0f;
        }
        this.currentForwardUser = r4;
        this.currentForwardNameString = r4;
        this.currentForwardChannel = r4;
        this.currentForwardName = r4;
        ?? r0 = this.forwardedNameLayout;
        r0[r5] = r4;
        r0[1] = r4;
        this.replyPanelIsForward = r5;
        this.forwardedNameWidth = r5;
        if (messageObject.isForwarded()) {
            TLRPC$Peer tLRPC$Peer = messageObject.messageOwner.fwd_from.from_id;
            if (tLRPC$Peer instanceof TLRPC$TL_peerChannel) {
                this.currentForwardChannel = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(messageObject.messageOwner.fwd_from.from_id.channel_id));
            } else if (tLRPC$Peer instanceof TLRPC$TL_peerChat) {
                this.currentForwardChannel = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(messageObject.messageOwner.fwd_from.from_id.chat_id));
            } else if (tLRPC$Peer instanceof TLRPC$TL_peerUser) {
                this.currentForwardUser = MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(messageObject.messageOwner.fwd_from.from_id.user_id));
            }
        }
        if (messageObject.type == 23 || (this.drawForwardedName && messageObject.needDrawForwarded() && ((groupedMessagePosition2 = this.currentPosition) == null || groupedMessagePosition2.minY == 0))) {
            int i16 = messageObject.type;
            if (i16 != 23 && (str5 = messageObject.messageOwner.fwd_from.from_name) != null) {
                this.currentForwardName = str5;
            }
            if (i16 == 23 || this.currentForwardUser != null || this.currentForwardChannel != null || this.currentForwardName != null) {
                if (this.forwardAvatar == null) {
                    AvatarSpan avatarSpan = new AvatarSpan(this, this.currentAccount);
                    this.forwardAvatar = avatarSpan;
                    avatarSpan.translate(0.0f, AndroidUtilities.dp(-0.33f));
                }
                this.forwardAvatar.setSize((((int) Theme.chat_forwardNamePaint.getTextSize()) * 1.23f) / AndroidUtilities.density);
                if (messageObject.type == 23) {
                    str4 = LocaleController.getString(R.string.ForwardedStory);
                    this.currentForwardNameString = str4;
                    long peerDialogId = DialogObject.getPeerDialogId(messageObject.messageOwner.media.peer);
                    if (peerDialogId > 0) {
                        AvatarSpan avatarSpan2 = this.forwardAvatar;
                        TLRPC$User user2 = MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(peerDialogId));
                        this.currentForwardUser = user2;
                        avatarSpan2.setUser(user2);
                    } else {
                        AvatarSpan avatarSpan3 = this.forwardAvatar;
                        TLRPC$Chat chat2 = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(-peerDialogId));
                        this.currentForwardChannel = chat2;
                        avatarSpan3.setChat(chat2);
                    }
                    String nameFromDialogId = getNameFromDialogId(peerDialogId);
                    if (peerDialogId >= 0 || this.currentForwardChannel != null) {
                        z3 = true;
                    } else {
                        nameFromDialogId = LocaleController.getString("ChannelPrivate", R.string.ChannelPrivate);
                        z3 = false;
                    }
                    StringBuilder sb = new StringBuilder();
                    sb.append(z3 ? "A " : str3);
                    sb.append(nameFromDialogId);
                    SpannableStringBuilder spannableStringBuilder6 = new SpannableStringBuilder(sb.toString());
                    spannableStringBuilder6.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface(AndroidUtilities.TYPEFACE_ROBOTO_MEDIUM)), 0, spannableStringBuilder6.length(), 33);
                    if (z3) {
                        spannableStringBuilder6.setSpan(this.forwardAvatar, 0, 1, 33);
                    }
                    this.forwardedNameWidth = getMaxNameWidth();
                    z2 = false;
                    charSequence = spannableStringBuilder6;
                } else {
                    TLRPC$Chat tLRPC$Chat2 = this.currentForwardChannel;
                    if (tLRPC$Chat2 != null) {
                        TLRPC$User tLRPC$User2 = this.currentForwardUser;
                        if (tLRPC$User2 != null) {
                            this.currentForwardNameString = String.format("%s (%s)", tLRPC$Chat2.title, UserObject.getUserName(tLRPC$User2));
                            this.forwardAvatar.setUser(this.currentForwardUser);
                        } else if (!TextUtils.isEmpty(messageObject.messageOwner.fwd_from.post_author)) {
                            this.currentForwardNameString = String.format("%s (%s)", this.currentForwardChannel.title, messageObject.messageOwner.fwd_from.post_author);
                            this.forwardAvatar.setChat(this.currentForwardChannel);
                        } else {
                            TLRPC$Chat tLRPC$Chat3 = this.currentForwardChannel;
                            this.currentForwardNameString = tLRPC$Chat3.title;
                            this.forwardAvatar.setChat(tLRPC$Chat3);
                        }
                    } else {
                        TLRPC$User tLRPC$User3 = this.currentForwardUser;
                        if (tLRPC$User3 != null) {
                            this.currentForwardNameString = UserObject.getUserName(tLRPC$User3);
                            this.forwardAvatar.setUser(this.currentForwardUser);
                        } else {
                            this.currentForwardNameString = this.currentForwardName;
                            z = false;
                            this.forwardedNameWidth = getMaxNameWidth();
                            String forwardedMessageText = getForwardedMessageText(messageObject);
                            if (this.hasPsaHint) {
                                this.forwardedNameWidth -= AndroidUtilities.dp(36.0f);
                            }
                            StringBuilder sb2 = new StringBuilder();
                            sb2.append(!z ? "A " : str3);
                            sb2.append(this.currentForwardNameString.replace('\n', ' '));
                            CharSequence ellipsize3 = TextUtils.ellipsize(sb2.toString(), Theme.chat_replyNamePaint, (this.forwardedNameWidth - this.viaWidth) - AndroidUtilities.dp(!z ? 17.33f : 0.0f), TextUtils.TruncateAt.END);
                            String charSequence5 = ellipsize3.toString();
                            if (replaceTags == null) {
                                SpannableStringBuilder spannableStringBuilder7 = new SpannableStringBuilder(String.format("%s %s %s", charSequence5, LocaleController.getString(str2, R.string.ViaBot), str));
                                this.viaNameWidth = (int) Math.ceil(Theme.chat_forwardNamePaint.measureText(charSequence5));
                                TypefaceSpan typefaceSpan5 = new TypefaceSpan(AndroidUtilities.getTypeface(AndroidUtilities.TYPEFACE_ROBOTO_MEDIUM));
                                int length = spannableStringBuilder7.length() - str.length();
                                i = 1;
                                i2 = 33;
                                spannableStringBuilder7.setSpan(typefaceSpan5, length - 1, spannableStringBuilder7.length(), 33);
                                spannableStringBuilder = spannableStringBuilder7;
                            } else {
                                i = 1;
                                i2 = 33;
                                spannableStringBuilder = new SpannableStringBuilder(charSequence5);
                            }
                            if (z || spannableStringBuilder.length() <= i) {
                                i3 = 0;
                            } else {
                                i3 = 0;
                                spannableStringBuilder.setSpan(this.forwardAvatar, 0, i, i2);
                            }
                            this.forwardNameCenterX = ((int) Math.ceil(Theme.chat_forwardNamePaint.measureText(ellipsize3, i3, ellipsize3.length()))) / 2;
                            if (this.currentForwardName == null && messageObject.messageOwner.fwd_from.from_id == null) {
                                z2 = false;
                            } else {
                                z2 = false;
                                spannableStringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface(AndroidUtilities.TYPEFACE_ROBOTO_MEDIUM)), 0, ellipsize3.length(), 33);
                            }
                            z3 = z;
                            str4 = forwardedMessageText;
                            charSequence = spannableStringBuilder;
                        }
                    }
                    z = true;
                    this.forwardedNameWidth = getMaxNameWidth();
                    String forwardedMessageText2 = getForwardedMessageText(messageObject);
                    if (this.hasPsaHint) {
                    }
                    StringBuilder sb22 = new StringBuilder();
                    sb22.append(!z ? "A " : str3);
                    sb22.append(this.currentForwardNameString.replace('\n', ' '));
                    CharSequence ellipsize32 = TextUtils.ellipsize(sb22.toString(), Theme.chat_replyNamePaint, (this.forwardedNameWidth - this.viaWidth) - AndroidUtilities.dp(!z ? 17.33f : 0.0f), TextUtils.TruncateAt.END);
                    String charSequence52 = ellipsize32.toString();
                    if (replaceTags == null) {
                    }
                    if (z) {
                    }
                    i3 = 0;
                    this.forwardNameCenterX = ((int) Math.ceil(Theme.chat_forwardNamePaint.measureText(ellipsize32, i3, ellipsize32.length()))) / 2;
                    if (this.currentForwardName == null) {
                    }
                    z2 = false;
                    spannableStringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface(AndroidUtilities.TYPEFACE_ROBOTO_MEDIUM)), 0, ellipsize32.length(), 33);
                    z3 = z;
                    str4 = forwardedMessageText2;
                    charSequence = spannableStringBuilder;
                }
                try {
                    charSequence = Emoji.replaceEmoji(charSequence, Theme.chat_forwardNamePaint.getFontMetricsInt(), AndroidUtilities.dp(14.0f), z2);
                } catch (Exception unused2) {
                }
                try {
                    this.forwardedNameLayout[1] = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(charSequence, Theme.chat_forwardNamePaint, this.forwardedNameWidth, TextUtils.TruncateAt.END), Theme.chat_forwardNamePaint, this.forwardedNameWidth + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                    if (z3) {
                        this.forwardedNameLayout[1].disableCache();
                    }
                    this.forwardedNameLayout[0] = new CachedStaticLayout(new StaticLayout(TextUtils.ellipsize(AndroidUtilities.replaceTags(str4), Theme.chat_forwardNamePaint, this.forwardedNameWidth, TextUtils.TruncateAt.END), Theme.chat_forwardNamePaint, this.forwardedNameWidth + AndroidUtilities.dp(2.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                    if (this.forwardBg == null) {
                        this.forwardBg = new ForwardBackground(this);
                    }
                    this.forwardBg.set(this.forwardedNameLayout, !this.currentMessageObject.isOutOwner() && (!this.drawNameLayout || this.nameLayout == null) && this.pinnedTop);
                    int max = Math.max((int) Math.ceil(this.forwardedNameLayout[0].getLineWidth(0)), (int) Math.ceil(this.forwardedNameLayout[1].getLineWidth(0)));
                    this.forwardedNameWidth = max;
                    if (this.hasPsaHint) {
                        this.forwardedNameWidth = max + AndroidUtilities.dp(36.0f);
                    }
                    this.forwardNameOffsetX[0] = this.forwardedNameLayout[0].getLineLeft(0);
                    this.forwardNameOffsetX[1] = this.forwardedNameLayout[1].getLineLeft(0);
                    if ((messageObject.type != 5 && !messageObject.isAnyKindOfSticker()) || messageObject.type == 19) {
                        int dp3 = (int) (this.namesOffset + AndroidUtilities.dp(8.0f) + (Theme.chat_forwardNamePaint.getTextSize() * 2.0f));
                        this.namesOffset = dp3;
                        if (messageObject.type == 19) {
                            this.namesOffset = dp3 + AndroidUtilities.dp(8.0f);
                        }
                    }
                } catch (Exception e2) {
                    FileLog.e(e2);
                }
            }
        }
        this.drawTopic = false;
        float f = 10.0f;
        if (!this.isThreadChat && (chatMessageCellDelegate = this.delegate) != null && chatMessageCellDelegate.shouldShowTopicButton(this) && !this.pinnedTop && ((MessageObject.getTopicId(this.currentAccount, messageObject.messageOwner, true) != 0 || messageObject.replyToForumTopic != null) && ((groupedMessagePosition = this.currentPosition) == null || groupedMessagePosition.minY == 0))) {
            long topicId = messageObject.replyToForumTopic == null ? MessageObject.getTopicId(this.currentAccount, messageObject.messageOwner, true) : tLRPC$TL_forumTopic.id;
            TLRPC$TL_forumTopic tLRPC$TL_forumTopic2 = messageObject.replyToForumTopic;
            if (tLRPC$TL_forumTopic2 == null) {
                tLRPC$TL_forumTopic2 = MessagesController.getInstance(this.currentAccount).getTopicsController().findTopic(-messageObject.getDialogId(), topicId);
            }
            if (tLRPC$TL_forumTopic2 != null) {
                this.drawTopic = true;
                int maxNameWidth2 = getMaxNameWidth();
                if (!messageObject.shouldDrawWithoutBackground()) {
                    maxNameWidth2 -= AndroidUtilities.dp(10.0f);
                } else {
                    if (messageObject.type == 5) {
                        dp = AndroidUtilities.dp(48.0f);
                    } else if (messageObject.isAnyKindOfSticker()) {
                        dp = AndroidUtilities.dp(25.0f);
                    }
                    maxNameWidth2 += dp;
                }
                if (this.topicButton == null) {
                    this.topicButton = new MessageTopicButton(getContext(), this.resourcesProvider) { // from class: org.telegram.ui.Cells.ChatMessageCell.9
                        @Override // org.telegram.ui.Components.Forum.MessageTopicButton
                        protected void onClick() {
                            if (ChatMessageCell.this.delegate != null) {
                                ChatMessageCell.this.delegate.didPressTopicButton(ChatMessageCell.this);
                            }
                        }
                    };
                }
                this.namesOffset += this.topicButton.set(this, messageObject, tLRPC$TL_forumTopic2, maxNameWidth2);
            }
        }
        if (!this.drawTopic && (messageTopicButton = this.topicButton) != null) {
            messageTopicButton.onDetached(this);
            this.topicButton = null;
        }
        if (((!messageObject.isGiveawayResults() && ((!this.isThreadChat || messageObject.isQuickReply() || this.isSavedChat || messageObject.getReplyTopMsgId(this.isForum) != 0 || this.isForumGeneral) && messageObject.hasValidReplyMessageObject())) || ((messageObject.messageOwner.fwd_from != null && messageObject.isDice()) || ((tLRPC$MessageReplyHeader = messageObject.messageOwner.reply_to) != null && (tLRPC$MessageReplyHeader.story_id != 0 || !TextUtils.isEmpty(tLRPC$MessageReplyHeader.quote_text) || messageObject.messageOwner.reply_to.reply_from != null)))) && !messageObject.isRepostPreview) {
            MessageObject.GroupedMessagePosition groupedMessagePosition3 = this.currentPosition;
            if (groupedMessagePosition3 == null || groupedMessagePosition3.minY == 0) {
                if ((!messageObject.isAnyKindOfSticker() && messageObject.type != 5) || messageObject.type == 19) {
                    int dp4 = (int) (this.namesOffset + AndroidUtilities.dp(20.0f) + Theme.chat_replyTextPaint.getTextSize() + Theme.chat_replyNamePaint.getTextSize());
                    this.namesOffset = dp4;
                    int i17 = messageObject.type;
                    if (i17 == 19 && !this.drawForwardedName) {
                        this.namesOffset = dp4 + AndroidUtilities.dp(12.0f);
                    } else if (i17 != 0) {
                        this.namesOffset = dp4 + AndroidUtilities.dp(5.0f);
                    }
                }
                if (this.drawForwardedName && this.forwardedNameLayout[0] != null) {
                    this.namesOffset += AndroidUtilities.dp(2.0f);
                }
                int maxNameWidth3 = getMaxNameWidth();
                if (!messageObject.shouldDrawWithoutBackground()) {
                    maxNameWidth3 -= AndroidUtilities.dp(messageObject.isOutOwner() ? 20.0f : 10.0f);
                    if (messageObject.type != 0 || messageObject.needDrawShareButton()) {
                        if (messageObject.isSaved && messageObject.isOutOwner()) {
                            f = 35.0f;
                        }
                        maxNameWidth3 -= AndroidUtilities.dp(f);
                    }
                } else if (messageObject.type == 5) {
                    maxNameWidth3 += AndroidUtilities.dp(13.0f);
                }
                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader6 = messageObject.messageOwner.reply_to;
                boolean z11 = (tLRPC$MessageReplyHeader6 == null || (tLRPC$MessageReplyHeader6.flags & 64) == 0 || tLRPC$MessageReplyHeader6.quote_text == null) ? false : true;
                this.hasReplyQuote = z11;
                boolean z12 = z11 && tLRPC$MessageReplyHeader6.quote;
                this.isReplyQuote = z12;
                boolean z13 = z12 && tLRPC$MessageReplyHeader6.quote;
                if (z12 && z13 && this.replyQuoteDrawable == null) {
                    this.replyQuoteDrawable = getContext().getResources().getDrawable(R.drawable.mini_quote).mutate();
                    this.replyQuoteDrawableColor = -1;
                }
                TextPaint textPaint3 = (this.isReplyQuote && messageObject.shouldDrawWithoutBackground()) ? Theme.chat_quoteTextPaint : Theme.chat_replyTextPaint;
                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader7 = messageObject.messageOwner.reply_to;
                try {
                    if (tLRPC$MessageReplyHeader7 != null && tLRPC$MessageReplyHeader7.story_id != 0) {
                        String nameFromDialogId2 = getNameFromDialogId(DialogObject.getPeerDialogId(tLRPC$MessageReplyHeader7.peer));
                        TL_stories$StoryItem tL_stories$StoryItem = messageObject.messageOwner.replyStory;
                        if (tL_stories$StoryItem == null || (tL_stories$StoryItem instanceof TL_stories$TL_storyItemDeleted)) {
                            if (tL_stories$StoryItem == null) {
                                createExpiredStoryString = LocaleController.getString("Loading", R.string.Loading);
                            } else {
                                createExpiredStoryString = StoriesUtilities.createExpiredStoryString();
                            }
                            this.needReplyImage = false;
                        } else {
                            this.needReplyImage = true;
                            StoriesUtilities.setStoryMiniImage(this.replyImageReceiver, tL_stories$StoryItem);
                            createExpiredStoryString = StoriesUtilities.createReplyStoryString();
                            maxNameWidth3 = (int) (maxNameWidth3 - (AndroidUtilities.dp(16.0f) + (textPaint3.getTextSize() + Theme.chat_replyNamePaint.getTextSize())));
                        }
                        obj = nameFromDialogId2;
                        replaceEmoji = createExpiredStoryString;
                    } else if (((!this.isThreadChat || messageObject.isQuickReply() || this.isSavedChat || messageObject.getReplyTopMsgId(this.isForum) != 0 || this.isForumGeneral) && messageObject.hasValidReplyMessageObject()) || this.hasReplyQuote || ((tLRPC$MessageReplyHeader5 = messageObject.messageOwner.reply_to) != null && tLRPC$MessageReplyHeader5.reply_from != null)) {
                        MessageObject messageObject4 = messageObject.replyMessageObject;
                        this.lastReplyMessage = messageObject4 == null ? null : messageObject4.messageOwner;
                        if (messageObject4 != null) {
                            boolean hasMediaSpoilers = messageObject4.hasMediaSpoilers();
                            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject.replyMessageObject.photoThumbs2, 320);
                            TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(messageObject.replyMessageObject.photoThumbs2, 40);
                            MessageObject messageObject5 = messageObject.replyMessageObject;
                            TLObject tLObject = messageObject5.photoThumbsObject2;
                            if (closestPhotoSizeWithSize == null) {
                                if (messageObject5.mediaExists) {
                                    closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject5.photoThumbs, AndroidUtilities.getPhotoSize());
                                    i8 = closestPhotoSizeWithSize != null ? closestPhotoSizeWithSize.size : 0;
                                    i7 = 0;
                                } else {
                                    closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject5.photoThumbs, 320);
                                    i7 = 1;
                                    i8 = 0;
                                }
                                i4 = i8;
                                tLRPC$PhotoSize3 = FileLoader.getClosestPhotoSizeWithSize(messageObject.replyMessageObject.photoThumbs, 40);
                                tLObject = messageObject.replyMessageObject.photoThumbsObject;
                            } else {
                                tLRPC$PhotoSize3 = closestPhotoSizeWithSize2;
                                i7 = 1;
                                i4 = 0;
                            }
                            if (tLRPC$PhotoSize3 == closestPhotoSizeWithSize) {
                                tLRPC$PhotoSize2 = closestPhotoSizeWithSize;
                                i5 = i7;
                                z4 = hasMediaSpoilers;
                                tLRPC$PhotoSize = null;
                                tLRPC$Photo = tLObject;
                            } else {
                                i5 = i7;
                                TLRPC$PhotoSize tLRPC$PhotoSize4 = closestPhotoSizeWithSize;
                                z4 = hasMediaSpoilers;
                                tLRPC$PhotoSize = tLRPC$PhotoSize3;
                                tLRPC$PhotoSize2 = tLRPC$PhotoSize4;
                                tLRPC$Photo = tLObject;
                            }
                        } else {
                            tLRPC$PhotoSize = null;
                            z4 = false;
                            tLRPC$PhotoSize2 = null;
                            tLRPC$Photo = null;
                            i4 = 0;
                            i5 = 1;
                        }
                        TLRPC$Message tLRPC$Message3 = messageObject.messageOwner;
                        if (tLRPC$Message3 == null || (tLRPC$MessageReplyHeader4 = tLRPC$Message3.reply_to) == null || (tLRPC$MessageMedia2 = tLRPC$MessageReplyHeader4.reply_media) == null) {
                            textPaint = textPaint3;
                            str6 = str3;
                            c = ' ';
                            i6 = 33;
                            c2 = '\n';
                            charSequence2 = null;
                            if (tLRPC$PhotoSize2 == null || (messageObject2 = messageObject.replyMessageObject) == null || messageObject2.isAnyKindOfSticker() || ((messageObject.isAnyKindOfSticker() && !AndroidUtilities.isTablet()) || messageObject.replyMessageObject.isSecretMedia() || messageObject.replyMessageObject.isWebpageDocument())) {
                                this.replyImageReceiver.setImageBitmap((Drawable) null);
                                this.needReplyImage = false;
                            } else {
                                if (messageObject.replyMessageObject.isRoundVideo()) {
                                    this.replyImageReceiver.setRoundRadius(AndroidUtilities.dp(32.0f));
                                } else {
                                    this.replyImageReceiver.setRoundRadius(AndroidUtilities.dp(4.0f));
                                }
                                this.currentReplyPhoto = tLRPC$PhotoSize2;
                                this.replyImageReceiver.setImage(ImageLocation.getForObject(tLRPC$PhotoSize2, tLRPC$Photo), z4 ? "5_5_b" : "50_50", ImageLocation.getForObject(tLRPC$PhotoSize, tLRPC$Photo), z4 ? "50_50_b4" : "50_50_b", i4, null, messageObject.replyMessageObject, i5);
                                this.needReplyImage = true;
                                maxNameWidth3 = (int) (maxNameWidth3 - ((AndroidUtilities.dp(this.isReplyQuote ? 3.0f : 7.0f) + Theme.chat_replyNamePaint.getTextSize()) + Theme.chat_replyTextPaint.getTextSize()));
                            }
                        } else {
                            ?? r12 = tLRPC$MessageMedia2.document;
                            if (r12 != null) {
                                tLRPC$PhotoSize2 = FileLoader.getClosestPhotoSizeWithSize(r12.thumbs, 320);
                                tLRPC$Photo2 = r12;
                            } else {
                                TLRPC$Photo tLRPC$Photo3 = tLRPC$MessageMedia2.photo;
                                tLRPC$Photo2 = tLRPC$Photo;
                                if (tLRPC$Photo3 != null) {
                                    tLRPC$PhotoSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo3.sizes, 320);
                                    tLRPC$Photo2 = tLRPC$Photo3;
                                }
                            }
                            if (tLRPC$PhotoSize2 == null) {
                                charSequence2 = null;
                                this.replyImageReceiver.setImageBitmap((Drawable) null);
                                this.needReplyImage = false;
                                textPaint = textPaint3;
                                str6 = str3;
                                c = ' ';
                                i6 = 33;
                                c2 = '\n';
                            } else {
                                this.currentReplyPhoto = tLRPC$PhotoSize2;
                                str6 = str3;
                                c = ' ';
                                i6 = 33;
                                textPaint = textPaint3;
                                this.replyImageReceiver.setImage(ImageLocation.getForObject(tLRPC$PhotoSize2, tLRPC$Photo2), z4 ? "5_5_b" : "50_50", ImageLocation.getForObject(tLRPC$PhotoSize, tLRPC$Photo2), z4 ? "50_50_b4" : "50_50_b", i4, null, messageObject, i5);
                                this.needReplyImage = true;
                                maxNameWidth3 = (int) (maxNameWidth3 - ((AndroidUtilities.dp(this.isReplyQuote ? 3.0f : 7.0f) + Theme.chat_replyNamePaint.getTextSize()) + Theme.chat_replyTextPaint.getTextSize()));
                                charSequence2 = null;
                                c2 = '\n';
                            }
                        }
                        if (DialogObject.isEncryptedDialog(messageObject.getDialogId())) {
                            MessageObject messageObject6 = messageObject.replyMessageObject;
                            if (messageObject6 != null && messageObject6.isOutOwner()) {
                                obj = UserObject.getUserName(UserConfig.getInstance(this.currentAccount).getCurrentUser());
                            } else {
                                TLRPC$EncryptedChat encryptedChat = MessagesController.getInstance(this.currentAccount).getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(this.currentMessageObject.getDialogId())));
                                if (encryptedChat != null) {
                                    obj = UserObject.getUserName(MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(encryptedChat.user_id)));
                                }
                                obj = charSequence2;
                            }
                            if (obj == null) {
                                obj = LocaleController.getString("Loading", R.string.Loading);
                            }
                            if (!this.hasReplyQuote || ((tLRPC$MessageReplyHeader3 = messageObject.messageOwner.reply_to) != null && tLRPC$MessageReplyHeader3.quote_text != null && tLRPC$MessageReplyHeader3.reply_from != null)) {
                                textPaint2 = textPaint;
                                str8 = messageObject.messageOwner.reply_to.quote_text;
                                if (str8.length() <= 150) {
                                    z5 = false;
                                    str8 = str8.substring(0, ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                                } else {
                                    z5 = false;
                                }
                                replaceEmoji = Emoji.replaceEmoji(new SpannableStringBuilder(str8.replace(c2, c)), textPaint2.getFontMetricsInt(), AndroidUtilities.dp(14.0f), z5);
                                arrayList = messageObject.messageOwner.reply_to.quote_entities;
                                obj3 = charSequence2;
                                if (arrayList != null) {
                                    replaceEmoji = MessageObject.replaceAnimatedEmoji(replaceEmoji, arrayList, textPaint2.getFontMetricsInt(), true);
                                    MessageObject.addEntitiesToText(replaceEmoji, messageObject.messageOwner.reply_to.quote_entities, this.currentMessageObject.isOutOwner(), false, false, false);
                                    obj3 = charSequence2;
                                }
                            } else {
                                if (tLRPC$MessageReplyHeader3 != null && tLRPC$MessageReplyHeader3.reply_from != null && (tLRPC$MessageMedia = tLRPC$MessageReplyHeader3.reply_media) != null) {
                                    replaceEmoji = messageObject.getMediaTitle(tLRPC$MessageMedia);
                                } else {
                                    MessageObject messageObject7 = messageObject.replyMessageObject;
                                    if (messageObject7 != null && (charSequence4 = messageObject7.messageTextForReply) != null) {
                                        replaceEmoji = charSequence4;
                                    } else if (MessageObject.getMedia(messageObject7) instanceof TLRPC$TL_messageMediaGame) {
                                        textPaint2 = textPaint;
                                        replaceEmoji = TextUtils.ellipsize(Emoji.replaceEmoji((CharSequence) MessageObject.getMedia(messageObject.replyMessageObject).game.title, textPaint.getFontMetricsInt(), AndroidUtilities.dp(14.0f), false), textPaint2, maxNameWidth3, TextUtils.TruncateAt.END);
                                        obj3 = charSequence2;
                                    } else {
                                        textPaint2 = textPaint;
                                        if (MessageObject.getMedia(messageObject.replyMessageObject) instanceof TLRPC$TL_messageMediaInvoice) {
                                            replaceEmoji = TextUtils.ellipsize(Emoji.replaceEmoji((CharSequence) MessageObject.getMedia(messageObject.replyMessageObject).title, textPaint2.getFontMetricsInt(), AndroidUtilities.dp(14.0f), false), textPaint2, maxNameWidth3, TextUtils.TruncateAt.END);
                                            obj3 = charSequence2;
                                        } else {
                                            MessageObject messageObject8 = messageObject.replyMessageObject;
                                            if (messageObject8 != null && !TextUtils.isEmpty(messageObject8.caption)) {
                                                String charSequence6 = messageObject.replyMessageObject.caption.toString();
                                                if (charSequence6.length() > 150) {
                                                    z7 = false;
                                                    charSequence6 = charSequence6.substring(0, ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                                                } else {
                                                    z7 = false;
                                                }
                                                CharSequence replaceEmoji2 = Emoji.replaceEmoji(charSequence6.replace(c2, c), textPaint2.getFontMetricsInt(), AndroidUtilities.dp(14.0f), z7);
                                                TLRPC$Message tLRPC$Message4 = messageObject.replyMessageObject.messageOwner;
                                                if (tLRPC$Message4 != null) {
                                                    replaceEmoji2 = MessageObject.replaceAnimatedEmoji(replaceEmoji2, tLRPC$Message4.entities, textPaint2.getFontMetricsInt(), true);
                                                }
                                                float f2 = maxNameWidth3;
                                                replaceEmoji = TextUtils.ellipsize(replaceEmoji2, textPaint2, f2, TextUtils.TruncateAt.END);
                                                obj3 = charSequence2;
                                                if (replaceEmoji instanceof Spannable) {
                                                    MessageObject messageObject9 = messageObject.replyMessageObject;
                                                    TLRPC$Message tLRPC$Message5 = messageObject9.messageOwner;
                                                    obj3 = charSequence2;
                                                    if (tLRPC$Message5 != null) {
                                                        MediaDataController.addTextStyleRuns(tLRPC$Message5.entities, messageObject9.caption, (Spannable) replaceEmoji);
                                                        replaceEmoji = TextUtils.ellipsize(replaceEmoji, textPaint2, f2, TextUtils.TruncateAt.END);
                                                        obj3 = charSequence2;
                                                    }
                                                }
                                            } else {
                                                MessageObject messageObject10 = messageObject.replyMessageObject;
                                                if (messageObject10 == null || (charSequence3 = messageObject10.messageText) == null || charSequence3.length() <= 0) {
                                                    replaceEmoji = charSequence2;
                                                    obj3 = charSequence2;
                                                } else {
                                                    String charSequence7 = messageObject.replyMessageObject.messageText.toString();
                                                    if (charSequence7.length() > 150) {
                                                        z6 = false;
                                                        charSequence7 = charSequence7.substring(0, ImageReceiver.DEFAULT_CROSSFADE_DURATION);
                                                    } else {
                                                        z6 = false;
                                                    }
                                                    CharSequence replaceEmoji3 = Emoji.replaceEmoji(charSequence7.replace(c2, c), textPaint2.getFontMetricsInt(), AndroidUtilities.dp(14.0f), z6);
                                                    TLRPC$Message tLRPC$Message6 = messageObject.replyMessageObject.messageOwner;
                                                    if (tLRPC$Message6 != null) {
                                                        replaceEmoji3 = MessageObject.replaceAnimatedEmoji(replaceEmoji3, tLRPC$Message6.entities, textPaint2.getFontMetricsInt(), true);
                                                    }
                                                    float f3 = maxNameWidth3;
                                                    replaceEmoji = TextUtils.ellipsize(replaceEmoji3, textPaint2, f3, TextUtils.TruncateAt.END);
                                                    obj3 = charSequence2;
                                                    if (replaceEmoji instanceof Spannable) {
                                                        MediaDataController.addTextStyleRuns(messageObject.replyMessageObject, (Spannable) replaceEmoji);
                                                        replaceEmoji = TextUtils.ellipsize(replaceEmoji, textPaint2, f3, TextUtils.TruncateAt.END);
                                                        obj3 = charSequence2;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                textPaint2 = textPaint;
                                obj3 = charSequence2;
                            }
                        } else {
                            if (this.hasReplyQuote && !DialogObject.isEncryptedDialog(messageObject.getDialogId())) {
                                obj = messageObject.getReplyQuoteNameWithIcon();
                            } else if (messageObject.hideSendersName) {
                                TLRPC$Peer tLRPC$Peer2 = messageObject.sendAsPeer;
                                if (tLRPC$Peer2 != null) {
                                    if (tLRPC$Peer2.channel_id != 0) {
                                        TLRPC$Chat chat3 = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(messageObject.sendAsPeer.channel_id));
                                        if (chat3 != null) {
                                            obj = chat3.title;
                                        }
                                        obj = charSequence2;
                                    } else {
                                        obj = UserObject.getUserName(MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(messageObject.sendAsPeer.user_id)));
                                    }
                                } else {
                                    obj = UserObject.getUserName(AccountInstance.getInstance(this.currentAccount).getUserConfig().getCurrentUser());
                                }
                            } else {
                                obj = messageObject.customReplyName;
                                if (obj == null) {
                                    MessageObject messageObject11 = messageObject.replyMessageObject;
                                    if (messageObject11 != null || (tLRPC$MessageReplyHeader2 = messageObject.messageOwner.reply_to) == null || tLRPC$MessageReplyHeader2.reply_from == null) {
                                        if (messageObject11 != null) {
                                            obj = this.drawForwardedName ? messageObject11.getForwardedName() : charSequence2;
                                            if (obj == null) {
                                                long fromChatId = messageObject.replyMessageObject.getFromChatId();
                                                if (fromChatId > 0) {
                                                    TLRPC$User user3 = MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(fromChatId));
                                                    if (user3 != null) {
                                                        str7 = UserObject.getUserName(user3);
                                                        obj = str7;
                                                    }
                                                } else if (fromChatId < 0) {
                                                    TLRPC$Chat chat4 = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(-fromChatId));
                                                    if (chat4 != null) {
                                                        str7 = chat4.title;
                                                        obj = str7;
                                                    }
                                                } else {
                                                    TLRPC$Message tLRPC$Message7 = messageObject.replyMessageObject.messageOwner;
                                                    if (tLRPC$Message7 != null && tLRPC$Message7.peer_id != null && (chat = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(messageObject.replyMessageObject.messageOwner.peer_id.channel_id))) != null) {
                                                        obj = chat.title;
                                                    }
                                                }
                                            }
                                        }
                                        obj = charSequence2;
                                    } else {
                                        obj = messageObject.getReplyQuoteNameWithIcon();
                                    }
                                }
                            }
                            if (obj == null) {
                            }
                            if (!this.hasReplyQuote) {
                            }
                            textPaint2 = textPaint;
                            str8 = messageObject.messageOwner.reply_to.quote_text;
                            if (str8.length() <= 150) {
                            }
                            replaceEmoji = Emoji.replaceEmoji(new SpannableStringBuilder(str8.replace(c2, c)), textPaint2.getFontMetricsInt(), AndroidUtilities.dp(14.0f), z5);
                            arrayList = messageObject.messageOwner.reply_to.quote_entities;
                            obj3 = charSequence2;
                            if (arrayList != null) {
                            }
                        }
                        obj = Emoji.replaceEmoji(obj, Theme.chat_replyNamePaint.getFontMetricsInt(), AndroidUtilities.dp(14.0f), false);
                        if (this.isReplyQuote) {
                            maxNameWidth3 -= AndroidUtilities.dp(24.0f);
                        }
                        int i18 = maxNameWidth3;
                        ellipsize = obj == null ? str6 : TextUtils.ellipsize(AndroidUtilities.replaceCharSequence("\n", obj, " "), Theme.chat_replyNamePaint, i18, TextUtils.TruncateAt.END);
                        this.replyNameWidth = AndroidUtilities.dp(4.0f) + (this.needReplyImage ? AndroidUtilities.dp(16.0f) + ((int) (textPaint2.getTextSize() + Theme.chat_replyNamePaint.getTextSize())) : 0);
                        if (ellipsize != null) {
                            CachedStaticLayout cachedStaticLayout3 = new CachedStaticLayout(new StaticLayout(ellipsize, Theme.chat_replyNamePaint, i18 + AndroidUtilities.dp(6.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                            this.replyNameLayout = cachedStaticLayout3;
                            if (cachedStaticLayout3.layout.getLineCount() > 0) {
                                this.replyNameWidth += ((int) Math.ceil(this.replyNameLayout.layout.getLineWidth(0))) + AndroidUtilities.dp(4.0f);
                                this.replyNameOffset = (int) this.replyNameLayout.layout.getLineLeft(0);
                            }
                        }
                        if (this.isReplyQuote || !z13 || this.replyQuoteDrawable == null) {
                            this.replyNameWidth += AndroidUtilities.dp(3.0f);
                        } else {
                            this.replyNameWidth += AndroidUtilities.dp(6 + (!this.drawPinnedTop ? 2 : 0)) + this.replyQuoteDrawable.getIntrinsicWidth();
                        }
                        this.replyTextWidth = AndroidUtilities.dp(4.0f) + (this.needReplyImage ? AndroidUtilities.dp(33.0f) : 0);
                        if (replaceEmoji != null) {
                            SpannableStringBuilder spannableStringBuilder8 = new SpannableStringBuilder(replaceEmoji);
                            boolean z14 = false;
                            for (TextStyleSpan textStyleSpan : (TextStyleSpan[]) spannableStringBuilder8.getSpans(0, spannableStringBuilder8.length(), TextStyleSpan.class)) {
                                if ((textStyleSpan.getTextStyleRun().flags & 4) != 0) {
                                    spannableStringBuilder8.removeSpan(textStyleSpan);
                                    z14 = true;
                                }
                            }
                            this.replyTextRTL = AndroidUtilities.isRTL(spannableStringBuilder8);
                            if (this.isReplyQuote) {
                                i18 += AndroidUtilities.dp(36.0f);
                            }
                            boolean z15 = this.isReplyQuote;
                            if (z15 && this.needReplyImage && !this.replyTextRTL) {
                                float dp5 = AndroidUtilities.dp(z15 ? 3.0f : 7.0f) + Theme.chat_replyNamePaint.getTextSize() + Theme.chat_replyTextPaint.getTextSize();
                                spannableStringBuilder8.setSpan(new LeadingMarginSpan.Standard(((int) dp5) + AndroidUtilities.dp(4.0f), 0), 0, spannableStringBuilder8.length(), i6);
                                this.replyTextWidth = (int) (this.replyTextWidth - dp5);
                                i11 = (int) (i18 + dp5);
                            } else {
                                i11 = i18;
                            }
                            if (!z14) {
                                spannableStringBuilder3 = spannableStringBuilder8;
                            }
                            spannableStringBuilder3 = TextUtils.ellipsize(spannableStringBuilder8, textPaint2, i11, TextUtils.TruncateAt.END);
                            this.replyTextOffset = 0;
                            if (Build.VERSION.SDK_INT >= 23) {
                                StaticLayout.Builder includePad = StaticLayout.Builder.obtain(spannableStringBuilder3, 0, spannableStringBuilder3.length(), textPaint2, i11).setAlignment(Layout.Alignment.ALIGN_NORMAL).setIncludePad(false);
                                includePad.setBreakStrategy(0);
                                if (!this.isReplyQuote || this.currentMessageObject.replyTextRevealed) {
                                    i12 = 5;
                                } else {
                                    i12 = 5;
                                    includePad.setMaxLines(5).setEllipsize(TextUtils.TruncateAt.END);
                                }
                                CachedStaticLayout cachedStaticLayout4 = new CachedStaticLayout(includePad.build());
                                this.replyTextLayout = cachedStaticLayout4;
                                MessageObject messageObject12 = this.currentMessageObject;
                                if (!messageObject12.replyTextRevealed) {
                                    if (cachedStaticLayout4.layout.getLineCount() > 0) {
                                        StaticLayout staticLayout = this.replyTextLayout.layout;
                                        if (staticLayout.getEllipsisCount(staticLayout.getLineCount() - 1) > 0) {
                                            z9 = true;
                                            messageObject12.replyTextEllipsized = z9;
                                        }
                                    }
                                    z9 = false;
                                    messageObject12.replyTextEllipsized = z9;
                                }
                            } else {
                                i12 = 5;
                                this.replyTextLayout = new CachedStaticLayout(new StaticLayout(spannableStringBuilder3, 0, spannableStringBuilder3.length(), textPaint2, i11, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.END, i11));
                            }
                            this.replyTextHeight = this.replyTextLayout.layout.getHeight();
                            if ((!messageObject.isAnyKindOfSticker() && messageObject.type != i12) || messageObject.type == 19) {
                                this.namesOffset = (int) (this.namesOffset + Math.max(0.0f, (this.replyTextHeight - AndroidUtilities.dp(3.66f)) - Theme.chat_replyTextPaint.getTextSize()));
                            }
                            if (this.replyTextLayout.layout.getLineCount() > 0) {
                                this.replyTextOffset = this.replyTextLayout.layout.getWidth();
                                int i19 = 0;
                                for (int i20 = 0; i20 < this.replyTextLayout.layout.getLineCount(); i20++) {
                                    i19 = Math.max(i19, (int) Math.ceil(this.replyTextLayout.layout.getLineWidth(i20)));
                                    int ceil3 = (int) Math.ceil(this.replyTextLayout.layout.getLineLeft(i20));
                                    if (i20 > 0) {
                                        if ((this.replyTextOffset == 0) != (ceil3 == 0)) {
                                            i19 = this.replyTextLayout.layout.getWidth();
                                        }
                                    }
                                    this.replyTextOffset = Math.min(this.replyTextOffset, ceil3);
                                }
                                this.replyTextWidth += i19 + AndroidUtilities.dp(18.0f);
                            }
                            this.replySpoilers.clear();
                            if (!this.hasReplyQuote && (getMessageObject().replyMessageObject == null || getMessageObject().replyMessageObject.isSpoilersRevealed)) {
                                r9 = 0;
                                i13 = 1;
                                AnimatedEmojiSpan.EmojiGroupedSpans emojiGroupedSpans = this.animatedEmojiReplyStack;
                                ?? r1 = new Layout[i13];
                                CachedStaticLayout cachedStaticLayout5 = this.replyTextLayout;
                                r1[r9] = cachedStaticLayout5 != null ? obj3 : cachedStaticLayout5.layout;
                                this.animatedEmojiReplyStack = AnimatedEmojiSpan.update((int) r9, this, (boolean) r9, emojiGroupedSpans, (Layout[]) r1);
                            }
                            StaticLayout staticLayout2 = this.replyTextLayout.layout;
                            int i21 = this.replyTextOffset;
                            r9 = 0;
                            i13 = 1;
                            SpoilerEffect.addSpoilers(this, staticLayout2, i21, i21 + this.replyTextWidth, this.replySpoilersPool, this.replySpoilers);
                            AnimatedEmojiSpan.EmojiGroupedSpans emojiGroupedSpans2 = this.animatedEmojiReplyStack;
                            ?? r13 = new Layout[i13];
                            CachedStaticLayout cachedStaticLayout52 = this.replyTextLayout;
                            r13[r9] = cachedStaticLayout52 != null ? obj3 : cachedStaticLayout52.layout;
                            this.animatedEmojiReplyStack = AnimatedEmojiSpan.update((int) r9, this, (boolean) r9, emojiGroupedSpans2, (Layout[]) r13);
                        }
                        i10 = this.replyNameWidth;
                        if (i10 > this.replyTextWidth) {
                            this.replyNameWidth = i10 + AndroidUtilities.dp(Math.max(2.0f, SharedConfig.bubbleRadius / 4.0f));
                        }
                    } else {
                        this.replyImageReceiver.setImageBitmap((Drawable) null);
                        this.needReplyImage = false;
                        this.replyPanelIsForward = true;
                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = messageObject.messageOwner.fwd_from;
                        if (tLRPC$MessageFwdHeader != null) {
                            TLRPC$Peer tLRPC$Peer3 = tLRPC$MessageFwdHeader.from_id;
                            if (tLRPC$Peer3 instanceof TLRPC$TL_peerChannel) {
                                this.currentForwardChannel = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(messageObject.messageOwner.fwd_from.from_id.channel_id));
                            } else if (tLRPC$Peer3 instanceof TLRPC$TL_peerChat) {
                                this.currentForwardChannel = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(messageObject.messageOwner.fwd_from.from_id.chat_id));
                            } else if (tLRPC$Peer3 instanceof TLRPC$TL_peerUser) {
                                this.currentForwardUser = MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(messageObject.messageOwner.fwd_from.from_id.user_id));
                            }
                            String str10 = messageObject.messageOwner.fwd_from.from_name;
                            if (str10 != null) {
                                this.currentForwardName = str10;
                            }
                        }
                        if (this.currentForwardUser != null || this.currentForwardChannel != null || this.currentForwardName != null) {
                            if (this.forwardAvatar == null) {
                                AvatarSpan avatarSpan4 = new AvatarSpan(this, this.currentAccount);
                                this.forwardAvatar = avatarSpan4;
                                avatarSpan4.translate(0.0f, AndroidUtilities.dp(-0.33f));
                            }
                            this.forwardAvatar.setSize((((int) Theme.chat_forwardNamePaint.getTextSize()) * 1.23f) / AndroidUtilities.density);
                            TLRPC$Chat tLRPC$Chat4 = this.currentForwardChannel;
                            if (tLRPC$Chat4 != null) {
                                TLRPC$User tLRPC$User4 = this.currentForwardUser;
                                if (tLRPC$User4 != null) {
                                    this.currentForwardNameString = String.format("%s (%s)", tLRPC$Chat4.title, UserObject.getUserName(tLRPC$User4));
                                    this.forwardAvatar.setUser(this.currentForwardUser);
                                } else {
                                    this.currentForwardNameString = tLRPC$Chat4.title;
                                    this.forwardAvatar.setChat(tLRPC$Chat4);
                                }
                            } else {
                                TLRPC$User tLRPC$User5 = this.currentForwardUser;
                                if (tLRPC$User5 != null) {
                                    this.currentForwardNameString = UserObject.getUserName(tLRPC$User5);
                                    this.forwardAvatar.setUser(this.currentForwardUser);
                                } else {
                                    this.currentForwardNameString = this.currentForwardName;
                                    z8 = false;
                                    String forwardedMessageText3 = getForwardedMessageText(messageObject);
                                    String str11 = this.currentForwardNameString;
                                    String replace2 = str11 != null ? str3 : str11.replace('\n', ' ');
                                    StringBuilder sb3 = new StringBuilder();
                                    sb3.append(!z8 ? "A " : str3);
                                    sb3.append((Object) replace2);
                                    CharSequence ellipsize4 = TextUtils.ellipsize(sb3.toString(), Theme.chat_replyNamePaint, maxNameWidth3 - AndroidUtilities.dp(!z8 ? 17.33f : 0.0f), TextUtils.TruncateAt.END);
                                    spannableStringBuilder2 = new SpannableStringBuilder(ellipsize4);
                                    if (z8 && spannableStringBuilder2.length() > 1) {
                                        spannableStringBuilder2.setSpan(this.forwardAvatar, 0, 1, 33);
                                    }
                                    if (this.currentForwardName == null && messageObject.messageOwner.fwd_from.from_id == null) {
                                        i9 = 0;
                                    } else {
                                        i9 = 0;
                                        spannableStringBuilder2.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface(AndroidUtilities.TYPEFACE_ROBOTO_MEDIUM)), 0, ellipsize4.length(), 33);
                                    }
                                    CharSequence ellipsize5 = TextUtils.ellipsize(spannableStringBuilder2, textPaint3, maxNameWidth3, TextUtils.TruncateAt.END);
                                    this.forwardNameCenterX = ((int) Math.ceil(Theme.chat_replyNamePaint.measureText(ellipsize4, i9, ellipsize4.length()))) / 2;
                                    replaceEmoji = ellipsize5;
                                    obj = forwardedMessageText3;
                                }
                            }
                            z8 = true;
                            String forwardedMessageText32 = getForwardedMessageText(messageObject);
                            String str112 = this.currentForwardNameString;
                            if (str112 != null) {
                            }
                            StringBuilder sb32 = new StringBuilder();
                            sb32.append(!z8 ? "A " : str3);
                            sb32.append((Object) replace2);
                            CharSequence ellipsize42 = TextUtils.ellipsize(sb32.toString(), Theme.chat_replyNamePaint, maxNameWidth3 - AndroidUtilities.dp(!z8 ? 17.33f : 0.0f), TextUtils.TruncateAt.END);
                            spannableStringBuilder2 = new SpannableStringBuilder(ellipsize42);
                            if (z8) {
                                spannableStringBuilder2.setSpan(this.forwardAvatar, 0, 1, 33);
                            }
                            if (this.currentForwardName == null) {
                            }
                            i9 = 0;
                            spannableStringBuilder2.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface(AndroidUtilities.TYPEFACE_ROBOTO_MEDIUM)), 0, ellipsize42.length(), 33);
                            CharSequence ellipsize52 = TextUtils.ellipsize(spannableStringBuilder2, textPaint3, maxNameWidth3, TextUtils.TruncateAt.END);
                            this.forwardNameCenterX = ((int) Math.ceil(Theme.chat_replyNamePaint.measureText(ellipsize42, i9, ellipsize42.length()))) / 2;
                            replaceEmoji = ellipsize52;
                            obj = forwardedMessageText32;
                        } else {
                            textPaint2 = textPaint3;
                            str6 = str3;
                            replaceEmoji = null;
                            i6 = 33;
                            obj2 = null;
                            obj = null;
                            obj3 = obj2;
                            obj = Emoji.replaceEmoji(obj, Theme.chat_replyNamePaint.getFontMetricsInt(), AndroidUtilities.dp(14.0f), false);
                            if (this.isReplyQuote) {
                            }
                            int i182 = maxNameWidth3;
                            if (obj == null) {
                            }
                            this.replyNameWidth = AndroidUtilities.dp(4.0f) + (this.needReplyImage ? AndroidUtilities.dp(16.0f) + ((int) (textPaint2.getTextSize() + Theme.chat_replyNamePaint.getTextSize())) : 0);
                            if (ellipsize != null) {
                            }
                            if (this.isReplyQuote) {
                            }
                            this.replyNameWidth += AndroidUtilities.dp(3.0f);
                            this.replyTextWidth = AndroidUtilities.dp(4.0f) + (this.needReplyImage ? AndroidUtilities.dp(33.0f) : 0);
                            if (replaceEmoji != null) {
                            }
                            i10 = this.replyNameWidth;
                            if (i10 > this.replyTextWidth) {
                            }
                        }
                    }
                    this.replyTextWidth = AndroidUtilities.dp(4.0f) + (this.needReplyImage ? AndroidUtilities.dp(33.0f) : 0);
                    if (replaceEmoji != null) {
                    }
                    i10 = this.replyNameWidth;
                    if (i10 > this.replyTextWidth) {
                    }
                } catch (Exception e3) {
                    FileLog.e(e3);
                }
                textPaint2 = textPaint3;
                str6 = str3;
                i6 = 33;
                obj2 = null;
                obj3 = obj2;
                obj = Emoji.replaceEmoji(obj, Theme.chat_replyNamePaint.getFontMetricsInt(), AndroidUtilities.dp(14.0f), false);
                if (this.isReplyQuote) {
                }
                int i1822 = maxNameWidth3;
                if (obj == null) {
                }
                this.replyNameWidth = AndroidUtilities.dp(4.0f) + (this.needReplyImage ? AndroidUtilities.dp(16.0f) + ((int) (textPaint2.getTextSize() + Theme.chat_replyNamePaint.getTextSize())) : 0);
                if (ellipsize != null) {
                }
                if (this.isReplyQuote) {
                }
                this.replyNameWidth += AndroidUtilities.dp(3.0f);
            }
        } else if ((!this.isThreadChat || messageObject.isQuickReply()) && messageObject.getReplyMsgId() != 0 && !messageObject.isGiveawayResults() && !messageObject.isRepostPreview) {
            MessageObject messageObject13 = messageObject.replyMessageObject;
            if (messageObject13 != null) {
                TLRPC$Message tLRPC$Message8 = messageObject13.messageOwner;
                if (!(tLRPC$Message8 instanceof TLRPC$TL_messageEmpty)) {
                    if (tLRPC$Message8 != null) {
                    }
                }
            }
            ChatMessageCellDelegate chatMessageCellDelegate3 = this.delegate;
            if (chatMessageCellDelegate3 == null || chatMessageCellDelegate3.doNotShowLoadingReply(messageObject)) {
                if (!messageObject.isAnyKindOfSticker() && messageObject.type != 5) {
                    int dp6 = (int) (this.namesOffset + AndroidUtilities.dp(18.0f) + Theme.chat_replyTextPaint.getTextSize() + Theme.chat_replyNamePaint.getTextSize());
                    this.namesOffset = dp6;
                    if (messageObject.type != 0) {
                        this.namesOffset = dp6 + AndroidUtilities.dp(5.0f);
                    }
                }
                this.needReplyImage = false;
                int maxNameWidth4 = getMaxNameWidth();
                if (!messageObject.shouldDrawWithoutBackground()) {
                    maxNameWidth4 -= AndroidUtilities.dp(10.0f);
                } else if (messageObject.type == 5) {
                    maxNameWidth4 += AndroidUtilities.dp(13.0f);
                }
                CachedStaticLayout cachedStaticLayout6 = new CachedStaticLayout(new StaticLayout(LocaleController.getString("Loading", R.string.Loading), Theme.chat_replyNamePaint, maxNameWidth4 + AndroidUtilities.dp(6.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                this.replyNameLayout = cachedStaticLayout6;
                if (cachedStaticLayout6.layout.getLineCount() > 0) {
                    this.replyNameWidth += ((int) Math.ceil(this.replyNameLayout.layout.getLineWidth(0))) + AndroidUtilities.dp(8.0f);
                    this.replyNameOffset = (int) this.replyNameLayout.layout.getLineLeft(0);
                }
            }
        }
        requestLayout();
    }

    private String getNameFromDialogId(long j) {
        TLRPC$Chat chat;
        if (j > 0) {
            TLRPC$User user = MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(j));
            if (user != null) {
                return UserObject.getUserName(user);
            }
            return null;
        } else if (j >= 0 || (chat = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(-j))) == null) {
            return null;
        } else {
            return chat.title;
        }
    }

    protected boolean isNeedAuthorName() {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject.forceAvatar) {
            return true;
        }
        if (messageObject.isSponsored() || this.currentMessageObject.isGiveawayOrGiveawayResults()) {
            return false;
        }
        if (this.isPinnedChat && this.currentMessageObject.type == 0) {
            return true;
        }
        if (!this.pinnedTop && this.drawName && this.isChat) {
            if (!this.currentMessageObject.isOutOwner()) {
                return true;
            }
            if ((this.currentMessageObject.isSupergroup() && this.currentMessageObject.isFromGroup()) || this.currentMessageObject.isRepostPreview) {
                return true;
            }
        }
        return this.currentMessageObject.isImportedForward() && this.currentMessageObject.messageOwner.fwd_from.from_id == null;
    }

    private String getAuthorName() {
        TLRPC$User tLRPC$User = this.currentUser;
        if (tLRPC$User != null) {
            return UserObject.getUserName(tLRPC$User);
        }
        TLRPC$Chat tLRPC$Chat = this.currentChat;
        if (tLRPC$Chat != null) {
            return tLRPC$Chat.title;
        }
        MessageObject messageObject = this.currentMessageObject;
        return (messageObject == null || !messageObject.isSponsored()) ? "DELETED" : this.currentMessageObject.sponsoredTitle;
    }

    private Object getAuthorStatus() {
        TLRPC$User tLRPC$User = this.currentUser;
        if (tLRPC$User != null) {
            Long emojiStatusDocumentId = UserObject.getEmojiStatusDocumentId(tLRPC$User);
            if (emojiStatusDocumentId != null) {
                return emojiStatusDocumentId;
            }
            if (this.currentUser.premium) {
                return ContextCompat.getDrawable(ApplicationLoader.applicationContext, R.drawable.msg_premium_liststar).mutate();
            }
            return null;
        }
        return null;
    }

    private String getForwardedMessageText(MessageObject messageObject) {
        if (this.hasPsaHint) {
            String string = LocaleController.getString("PsaMessage_" + messageObject.messageOwner.fwd_from.psa_type);
            return string == null ? LocaleController.getString("PsaMessageDefault", R.string.PsaMessageDefault) : string;
        }
        return LocaleController.getString(R.string.ForwardedFrom);
    }

    public int getExtraInsetHeight() {
        int i = this.addedCaptionHeight;
        if (this.drawCommentButton) {
            i += AndroidUtilities.dp(shouldDrawTimeOnMedia() ? 41.3f : 43.0f);
        }
        return (this.reactionsLayoutInBubble.isEmpty || !this.currentMessageObject.shouldDrawReactionsInLayout()) ? i : i + this.reactionsLayoutInBubble.totalHeight;
    }

    public ImageReceiver getAvatarImage() {
        if (this.isAvatarVisible) {
            return this.avatarImage;
        }
        return null;
    }

    public float getCheckBoxTranslation() {
        return this.checkBoxTranslation;
    }

    public boolean shouldDrawAlphaLayer() {
        MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
        return (groupedMessages == null || !groupedMessages.transitionParams.backgroundChangeBounds) && getAlpha() != 1.0f;
    }

    public float getCaptionX() {
        return this.captionX;
    }

    public boolean isDrawPinnedBottom() {
        MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
        return this.mediaBackground || this.drawPinnedBottom || (groupedMessagePosition != null && (groupedMessagePosition.flags & 8) == 0 && this.currentMessagesGroup.isDocuments);
    }

    public void drawCheckBox(Canvas canvas) {
        float f;
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null || messageObject.isSending()) {
            return;
        }
        MessageObject messageObject2 = this.currentMessageObject;
        if (messageObject2.type == 27 || messageObject2.isSendError() || this.checkBox == null) {
            return;
        }
        if (this.checkBoxVisible || this.checkBoxAnimationInProgress) {
            MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
            if (groupedMessagePosition != null) {
                int i = groupedMessagePosition.flags;
                if ((i & 8) == 0 || (i & 1) == 0) {
                    return;
                }
            }
            canvas.save();
            float y = getY();
            MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
            if (groupedMessages != null && groupedMessages.messages.size() > 1) {
                f = (getTop() + this.currentMessagesGroup.transitionParams.offsetTop) - getTranslationY();
            } else {
                f = y + this.transitionParams.deltaTop;
            }
            canvas.translate(0.0f, f + this.transitionYOffsetForDrawables);
            this.checkBox.draw(canvas);
            canvas.restore();
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:21:0x0041  */
    /* JADX WARN: Removed duplicated region for block: B:22:0x0046  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void setBackgroundTopY(boolean z) {
        int i;
        int i2;
        int i3 = 0;
        while (i3 < 2) {
            boolean z2 = true;
            if (i3 == 1 && !z) {
                return;
            }
            Theme.MessageDrawable messageDrawable = i3 == 0 ? this.currentBackgroundDrawable : this.currentBackgroundSelectedDrawable;
            if (messageDrawable != null) {
                int i4 = this.parentWidth;
                int i5 = this.parentHeight;
                if (i5 == 0) {
                    i4 = getParentWidth();
                    i5 = AndroidUtilities.displaySize.y;
                    if (getParent() instanceof View) {
                        View view = (View) getParent();
                        int measuredWidth = view.getMeasuredWidth();
                        i2 = view.getMeasuredHeight();
                        i = measuredWidth;
                        float y = !z ? getY() : getTop();
                        float f = this.parentViewTopOffset;
                        messageDrawable.setTop((int) (y + f), i, i2, (int) f, this.blurredViewTopOffset, this.blurredViewBottomOffset, this.pinnedTop, (this.pinnedBottom && this.transitionParams.changePinnedBottomProgress == 1.0f) ? false : true);
                        MessageObject messageObject = this.currentMessageObject;
                        messageDrawable.setBotButtonsBottom((messageObject == null && messageObject.hasInlineBotButtons()) ? false : false);
                    }
                }
                i = i4;
                i2 = i5;
                if (!z) {
                }
                float f2 = this.parentViewTopOffset;
                messageDrawable.setTop((int) (y + f2), i, i2, (int) f2, this.blurredViewTopOffset, this.blurredViewBottomOffset, this.pinnedTop, (this.pinnedBottom && this.transitionParams.changePinnedBottomProgress == 1.0f) ? false : true);
                MessageObject messageObject2 = this.currentMessageObject;
                messageDrawable.setBotButtonsBottom((messageObject2 == null && messageObject2.hasInlineBotButtons()) ? false : false);
            }
            i3++;
        }
    }

    public void setBackgroundTopY(int i) {
        int i2;
        int i3;
        boolean z;
        MessageObject messageObject;
        Theme.MessageDrawable messageDrawable = this.currentBackgroundDrawable;
        int i4 = this.parentWidth;
        int i5 = this.parentHeight;
        if (i5 == 0) {
            i4 = getParentWidth();
            i5 = AndroidUtilities.displaySize.y;
            if (getParent() instanceof View) {
                View view = (View) getParent();
                int measuredWidth = view.getMeasuredWidth();
                i3 = view.getMeasuredHeight();
                i2 = measuredWidth;
                float f = this.parentViewTopOffset;
                z = false;
                messageDrawable.setTop((int) (i + f), i2, i3, (int) f, this.blurredViewTopOffset, this.blurredViewBottomOffset, this.pinnedTop, (this.pinnedBottom && this.transitionParams.changePinnedBottomProgress == 1.0f) ? false : true);
                messageObject = this.currentMessageObject;
                if (messageObject != null && messageObject.hasInlineBotButtons()) {
                    z = true;
                }
                messageDrawable.setBotButtonsBottom(z);
            }
        }
        i2 = i4;
        i3 = i5;
        float f2 = this.parentViewTopOffset;
        z = false;
        messageDrawable.setTop((int) (i + f2), i2, i3, (int) f2, this.blurredViewTopOffset, this.blurredViewBottomOffset, this.pinnedTop, (this.pinnedBottom && this.transitionParams.changePinnedBottomProgress == 1.0f) ? false : true);
        messageObject = this.currentMessageObject;
        if (messageObject != null) {
            z = true;
        }
        messageDrawable.setBotButtonsBottom(z);
    }

    public void setDrawableBoundsInner(Drawable drawable, int i, int i2, int i3, int i4) {
        if (drawable != null) {
            float f = i4 + i2;
            TransitionParams transitionParams = this.transitionParams;
            float f2 = transitionParams.deltaBottom;
            this.transitionYOffsetForDrawables = (f + f2) - ((int) (f + f2));
            drawable.setBounds((int) (i + transitionParams.deltaLeft), (int) (i2 + transitionParams.deltaTop), (int) (i + i3 + transitionParams.deltaRight), (int) (f + f2));
        }
    }

    private void setupTextColors() {
        if (this.currentMessageObject.isOutOwner()) {
            TextPaint textPaint = Theme.chat_msgTextPaint;
            int i = Theme.key_chat_messageTextOut;
            textPaint.setColor(getThemedColor(i));
            Theme.chat_msgGameTextPaint.setColor(getThemedColor(i));
            Theme.chat_msgTextCodePaint.setColor(getThemedColor(i));
            Theme.chat_msgTextCode2Paint.setColor(getThemedColor(i));
            Theme.chat_msgTextCode3Paint.setColor(getThemedColor(i));
            TextPaint textPaint2 = Theme.chat_msgGameTextPaint;
            TextPaint textPaint3 = Theme.chat_replyTextPaint;
            TextPaint textPaint4 = Theme.chat_quoteTextPaint;
            TextPaint textPaint5 = Theme.chat_msgTextPaint;
            TextPaint textPaint6 = Theme.chat_msgTextCodePaint;
            TextPaint textPaint7 = Theme.chat_msgTextCode2Paint;
            TextPaint textPaint8 = Theme.chat_msgTextCode3Paint;
            int themedColor = getThemedColor(Theme.key_chat_messageLinkOut);
            textPaint8.linkColor = themedColor;
            textPaint7.linkColor = themedColor;
            textPaint6.linkColor = themedColor;
            textPaint5.linkColor = themedColor;
            textPaint4.linkColor = themedColor;
            textPaint3.linkColor = themedColor;
            textPaint2.linkColor = themedColor;
            return;
        }
        TextPaint textPaint9 = Theme.chat_msgTextPaint;
        int i2 = Theme.key_chat_messageTextIn;
        textPaint9.setColor(getThemedColor(i2));
        Theme.chat_msgGameTextPaint.setColor(getThemedColor(i2));
        Theme.chat_msgTextCodePaint.setColor(getThemedColor(i2));
        Theme.chat_msgTextCode2Paint.setColor(getThemedColor(i2));
        Theme.chat_msgTextCode3Paint.setColor(getThemedColor(i2));
        TextPaint textPaint10 = Theme.chat_msgGameTextPaint;
        TextPaint textPaint11 = Theme.chat_replyTextPaint;
        TextPaint textPaint12 = Theme.chat_quoteTextPaint;
        TextPaint textPaint13 = Theme.chat_msgTextPaint;
        TextPaint textPaint14 = Theme.chat_msgTextCodePaint;
        TextPaint textPaint15 = Theme.chat_msgTextCode2Paint;
        TextPaint textPaint16 = Theme.chat_msgTextCode3Paint;
        int themedColor2 = getThemedColor(Theme.key_chat_messageLinkIn);
        textPaint16.linkColor = themedColor2;
        textPaint15.linkColor = themedColor2;
        textPaint14.linkColor = themedColor2;
        textPaint13.linkColor = themedColor2;
        textPaint12.linkColor = themedColor2;
        textPaint11.linkColor = themedColor2;
        textPaint10.linkColor = themedColor2;
    }

    @Override // org.telegram.ui.Cells.BaseCell
    public int getBoundsLeft() {
        int i;
        int dp;
        float f;
        MessageObject messageObject = this.currentMessageObject;
        boolean z = messageObject != null && messageObject.isOutOwner();
        if (needDrawAvatar()) {
            if (this.currentPosition != null) {
                f = 73.0f;
            } else {
                MessageObject messageObject2 = this.currentMessageObject;
                f = (messageObject2 == null || !messageObject2.isRepostPreview) ? 63 : 42;
            }
            i = AndroidUtilities.dp(f);
        } else {
            i = 0;
        }
        int dp2 = (z && (checkNeedDrawShareButton(this.currentMessageObject) || this.useTranscribeButton)) ? AndroidUtilities.dp(48.0f) : 0;
        int i2 = ConnectionsManager.DEFAULT_DATACENTER_ID;
        if (this.botButtons != null) {
            MessageObject messageObject3 = this.currentMessageObject;
            if (messageObject3 != null && messageObject3.isOutOwner()) {
                dp = (getMeasuredWidth() - this.widthForButtons) - AndroidUtilities.dp(10.0f);
            } else {
                dp = this.backgroundDrawableLeft + AndroidUtilities.dp((this.mediaBackground || this.drawPinnedBottom) ? 1.0f : 7.0f);
            }
            for (int i3 = 0; i3 < this.botButtons.size(); i3++) {
                i2 = Math.max(i2, this.botButtons.get(i3).x + dp);
            }
        }
        return Math.max(0, Math.min(i2, (getBackgroundDrawableLeft() - i) - dp2));
    }

    @Override // org.telegram.ui.Cells.BaseCell
    public int getBoundsRight() {
        int dp;
        MessageObject messageObject = this.currentMessageObject;
        int i = 0;
        int dp2 = ((messageObject != null && !messageObject.isOutOwner()) && (checkNeedDrawShareButton(this.currentMessageObject) || this.useTranscribeButton)) ? AndroidUtilities.dp(48.0f) : 0;
        if (this.botButtons != null) {
            MessageObject messageObject2 = this.currentMessageObject;
            if (messageObject2 != null && messageObject2.isOutOwner()) {
                dp = (getMeasuredWidth() - this.widthForButtons) - AndroidUtilities.dp(10.0f);
            } else {
                dp = this.backgroundDrawableLeft + AndroidUtilities.dp((this.mediaBackground || this.drawPinnedBottom) ? 1.0f : 7.0f);
            }
            int i2 = 0;
            while (i < this.botButtons.size()) {
                BotButton botButton = this.botButtons.get(i);
                i2 = Math.max(i2, botButton.x + dp + botButton.width);
                i++;
            }
            i = i2;
        }
        return Math.max(getBackgroundDrawableRight() + dp2, i);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    @Override // android.view.View
    @SuppressLint({"WrongCall"})
    public void onDraw(Canvas canvas) {
        int i;
        boolean z;
        MessageObject messageObject;
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        MessageTopicButton messageTopicButton;
        MessageTopicButton messageTopicButton2;
        Theme.MessageDrawable messageDrawable;
        int i2;
        int i3;
        int i4;
        int i5;
        int i6;
        if (this.currentMessageObject == null) {
            return;
        }
        if (!this.wasLayout) {
            onLayout(false, getLeft(), getTop(), getRight(), getBottom());
        }
        if (this.enterTransitionInProgress && this.currentMessageObject.isAnimatedEmojiStickers()) {
            return;
        }
        if (this.channelRecommendationsCell != null && this.currentMessageObject.type == 27) {
            ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
            if (chatMessageCellDelegate == null || chatMessageCellDelegate.canDrawOutboundsContent()) {
                this.channelRecommendationsCell.draw(canvas);
            }
            this.transitionParams.recordDrawingState();
            return;
        }
        setupTextColors();
        if (this.documentAttach != null) {
            int i7 = this.documentAttachType;
            if (i7 == 3 || i7 == 7) {
                if (this.currentMessageObject.isOutOwner()) {
                    this.seekBarWaveform.setColors(getThemedColor(Theme.key_chat_outVoiceSeekbar), getThemedColor(Theme.key_chat_outVoiceSeekbarFill), getThemedColor(Theme.key_chat_outVoiceSeekbarSelected));
                    SeekBar seekBar = this.seekBar;
                    int themedColor = getThemedColor(Theme.key_chat_outAudioSeekbar);
                    int themedColor2 = getThemedColor(Theme.key_chat_outAudioCacheSeekbar);
                    int i8 = Theme.key_chat_outAudioSeekbarFill;
                    seekBar.setColors(themedColor, themedColor2, getThemedColor(i8), getThemedColor(i8), getThemedColor(Theme.key_chat_outAudioSeekbarSelected));
                } else if (this.hasLinkPreview && this.linkLine != null) {
                    this.seekBarWaveform.setColors(Theme.adaptHue(getThemedColor(Theme.key_chat_inVoiceSeekbar), this.linkLine.getColor()), Theme.adaptHue(getThemedColor(Theme.key_chat_inVoiceSeekbarFill), this.linkLine.getColor()), Theme.adaptHue(getThemedColor(Theme.key_chat_inVoiceSeekbarSelected), this.linkLine.getColor()));
                    SeekBar seekBar2 = this.seekBar;
                    int adaptHue = Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioSeekbar), this.linkLine.getColor());
                    int adaptHue2 = Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioCacheSeekbar), this.linkLine.getColor());
                    int i9 = Theme.key_chat_inAudioSeekbarFill;
                    seekBar2.setColors(adaptHue, adaptHue2, Theme.adaptHue(getThemedColor(i9), this.linkLine.getColor()), Theme.adaptHue(getThemedColor(i9), this.linkLine.getColor()), Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioSeekbarSelected), this.linkLine.getColor()));
                } else {
                    this.seekBarWaveform.setColors(getThemedColor(Theme.key_chat_inVoiceSeekbar), getThemedColor(Theme.key_chat_inVoiceSeekbarFill), getThemedColor(Theme.key_chat_inVoiceSeekbarSelected));
                    SeekBar seekBar3 = this.seekBar;
                    int themedColor3 = getThemedColor(Theme.key_chat_inAudioSeekbar);
                    int themedColor4 = getThemedColor(Theme.key_chat_inAudioCacheSeekbar);
                    int i10 = Theme.key_chat_inAudioSeekbarFill;
                    seekBar3.setColors(themedColor3, themedColor4, getThemedColor(i10), getThemedColor(i10), getThemedColor(Theme.key_chat_inAudioSeekbarSelected));
                }
            } else if (i7 == 5) {
                if (this.currentMessageObject.isOutOwner()) {
                    SeekBar seekBar4 = this.seekBar;
                    int themedColor5 = getThemedColor(Theme.key_chat_outAudioSeekbar);
                    int themedColor6 = getThemedColor(Theme.key_chat_outAudioCacheSeekbar);
                    int i11 = Theme.key_chat_outAudioSeekbarFill;
                    seekBar4.setColors(themedColor5, themedColor6, getThemedColor(i11), getThemedColor(i11), getThemedColor(Theme.key_chat_outAudioSeekbarSelected));
                } else if (this.hasLinkPreview && this.linkLine != null) {
                    SeekBar seekBar5 = this.seekBar;
                    int adaptHue3 = Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioSeekbar), this.linkLine.getColor());
                    int adaptHue4 = Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioCacheSeekbar), this.linkLine.getColor());
                    int i12 = Theme.key_chat_inAudioSeekbarFill;
                    seekBar5.setColors(adaptHue3, adaptHue4, Theme.adaptHue(getThemedColor(i12), this.linkLine.getColor()), Theme.adaptHue(getThemedColor(i12), this.linkLine.getColor()), Theme.adaptHue(getThemedColor(Theme.key_chat_inAudioSeekbarSelected), this.linkLine.getColor()));
                } else {
                    SeekBar seekBar6 = this.seekBar;
                    int themedColor7 = getThemedColor(Theme.key_chat_inAudioSeekbar);
                    int themedColor8 = getThemedColor(Theme.key_chat_inAudioCacheSeekbar);
                    int i13 = Theme.key_chat_inAudioSeekbarFill;
                    seekBar6.setColors(themedColor7, themedColor8, getThemedColor(i13), getThemedColor(i13), getThemedColor(Theme.key_chat_inAudioSeekbarSelected));
                }
            }
        }
        MessageObject messageObject2 = this.currentMessageObject;
        if (messageObject2.type == 5) {
            TextPaint textPaint = Theme.chat_timePaint;
            int themedColor9 = getThemedColor(Theme.key_chat_serviceText);
            if (isDrawSelectionBackground()) {
                i6 = this.currentMessageObject.isOutOwner() ? Theme.key_chat_outTimeSelectedText : Theme.key_chat_inTimeSelectedText;
            } else {
                i6 = this.currentMessageObject.isOutOwner() ? Theme.key_chat_outTimeText : Theme.key_chat_inTimeText;
            }
            textPaint.setColor(ColorUtils.blendARGB(themedColor9, getThemedColor(i6), getVideoTranscriptionProgress()));
        } else if (this.mediaBackground) {
            if (messageObject2.shouldDrawWithoutBackground()) {
                Theme.chat_timePaint.setColor(getThemedColor(Theme.key_chat_serviceText));
            } else {
                Theme.chat_timePaint.setColor(getThemedColor(Theme.key_chat_mediaTimeText));
            }
        } else if (messageObject2.isOutOwner()) {
            Theme.chat_timePaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outTimeSelectedText : Theme.key_chat_outTimeText));
        } else {
            Theme.chat_timePaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inTimeSelectedText : Theme.key_chat_inTimeText));
        }
        if (isWidthAdaptive()) {
            canvas.save();
            canvas.translate(-getBoundsLeft(), 0.0f);
        }
        drawBackgroundInternal(canvas, false);
        if (this.isHighlightedAnimated) {
            long currentTimeMillis = System.currentTimeMillis();
            long abs = Math.abs(currentTimeMillis - this.lastHighlightProgressTime);
            if (abs > 17) {
                abs = 17;
            }
            int i14 = (int) (this.highlightProgress - abs);
            this.highlightProgress = i14;
            this.lastHighlightProgressTime = currentTimeMillis;
            if (i14 <= 0) {
                this.highlightProgress = 0;
                this.isHighlightedAnimated = false;
                if (this.highlightedQuote) {
                    resetUrlPaths();
                }
                this.highlightedQuote = false;
            }
            invalidate();
            if (getParent() != null) {
                ((View) getParent()).invalidate();
            }
        }
        if (this.alphaInternal != 1.0f) {
            int measuredHeight = getMeasuredHeight();
            int measuredWidth = getMeasuredWidth();
            Theme.MessageDrawable messageDrawable2 = this.currentBackgroundDrawable;
            if (messageDrawable2 != null) {
                i5 = messageDrawable2.getBounds().top;
                i4 = this.currentBackgroundDrawable.getBounds().bottom;
                i3 = this.currentBackgroundDrawable.getBounds().left;
                i2 = this.currentBackgroundDrawable.getBounds().right;
            } else {
                i2 = measuredWidth;
                i3 = 0;
                i4 = measuredHeight;
                i5 = 0;
            }
            if (this.drawSideButton != 0) {
                if (this.currentMessageObject.isOutOwner()) {
                    i3 -= AndroidUtilities.dp(40.0f);
                } else {
                    i2 += AndroidUtilities.dp(40.0f);
                }
            }
            if (getY() < 0.0f) {
                i5 = (int) (-getY());
            }
            float y = getY() + getMeasuredHeight();
            int i15 = this.parentHeight;
            if (y > i15) {
                i4 = (int) (i15 - getY());
            }
            this.rect.set(i3, i5, i2, i4);
            i = canvas.saveLayerAlpha(this.rect, (int) (this.alphaInternal * 255.0f), 31);
        } else {
            i = Integer.MIN_VALUE;
        }
        if (!this.transitionParams.animateBackgroundBoundsInner || (messageDrawable = this.currentBackgroundDrawable) == null || this.isRoundVideo) {
            z = false;
        } else {
            Rect bounds = messageDrawable.getBounds();
            canvas.save();
            canvas.clipRect(bounds.left + AndroidUtilities.dp(4.0f), bounds.top + AndroidUtilities.dp(4.0f), bounds.right - AndroidUtilities.dp(4.0f), bounds.bottom - AndroidUtilities.dp(4.0f));
            z = true;
        }
        drawContent(canvas, false);
        ExpiredStoryView expiredStoryView = this.expiredStoryView;
        if (expiredStoryView != null && expiredStoryView.visible) {
            expiredStoryView.draw(canvas, this);
        }
        if (z) {
            canvas.restore();
        }
        if (this.replyNameLayout != null) {
            float f = this.replyTextHeight;
            TransitionParams transitionParams = this.transitionParams;
            if (transitionParams != null && transitionParams.animateReplyTextLayout != null) {
                f = AndroidUtilities.lerp(this.transitionParams.animateFromReplyTextHeight, f, this.transitionParams.animateChangeProgress);
            }
            this.replyHeight = AndroidUtilities.dp(9.0f) + Theme.chat_replyNamePaint.getTextSize() + Math.max(f - AndroidUtilities.dp(3.66f), Theme.chat_replyTextPaint.getTextSize());
            if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                MessageObject messageObject3 = this.currentMessageObject;
                if (messageObject3.type != 19) {
                    if (messageObject3.isOutOwner()) {
                        int dp = AndroidUtilities.dp(23.0f);
                        this.replyStartX = dp;
                        if (this.isPlayingRound) {
                            this.replyStartX = dp - (AndroidUtilities.roundPlayingMessageSize - AndroidUtilities.roundMessageSize);
                        }
                    } else if (this.currentMessageObject.type == 5) {
                        this.replyStartX = this.backgroundDrawableLeft + this.backgroundDrawableRight + AndroidUtilities.dp(4.0f);
                    } else {
                        this.replyStartX = this.backgroundDrawableLeft + this.backgroundDrawableRight + AndroidUtilities.dp(17.0f);
                    }
                    if (this.drawForwardedName) {
                        int dp2 = AndroidUtilities.dp(4.0f) + (((int) Theme.chat_forwardNamePaint.getTextSize()) * 2);
                        this.forwardHeight = dp2;
                        this.replyStartY = this.forwardNameY + dp2 + AndroidUtilities.dp(6.0f);
                    } else {
                        int dp3 = AndroidUtilities.dp(12.0f);
                        this.replyStartY = dp3;
                        if (this.drawTopic && (messageTopicButton2 = this.topicButton) != null) {
                            this.replyStartY = dp3 + messageTopicButton2.height() + AndroidUtilities.dp(10.0f);
                        }
                    }
                    this.replyStartY += AndroidUtilities.dp(0.66f);
                }
            }
            if (this.currentMessageObject.isOutOwner()) {
                int dp4 = this.backgroundDrawableLeft + AndroidUtilities.dp(12.0f) + getExtraTextX();
                this.replyStartX = dp4;
                if (this.currentMessageObject.type == 19) {
                    this.replyStartX = dp4 - Math.max(0, ((Math.max(this.replyNameWidth, this.replyTextWidth) + dp4) + AndroidUtilities.dp(14.0f)) - AndroidUtilities.displaySize.x);
                }
            } else if (this.mediaBackground) {
                this.replyStartX = this.backgroundDrawableLeft + AndroidUtilities.dp(12.0f) + getExtraTextX();
            } else {
                this.replyStartX = this.backgroundDrawableLeft + AndroidUtilities.dp(this.drawPinnedBottom ? 12.0f : 18.0f) + getExtraTextX();
            }
            if (this.currentMessageObject.type == 19) {
                this.replyStartX -= AndroidUtilities.dp(7.0f);
            }
            this.forwardHeight = AndroidUtilities.dp(4.0f) + (((int) Theme.chat_forwardNamePaint.getTextSize()) * 2);
            int dp5 = AndroidUtilities.dp(12.0f) + ((!this.drawNameLayout || this.nameLayout == null) ? 0 : AndroidUtilities.dp(6.0f) + ((int) Theme.chat_namePaint.getTextSize())) + ((!this.drawForwardedName || this.forwardedNameLayout[0] == null) ? 0 : AndroidUtilities.dp(4.0f) + this.forwardHeight);
            this.replyStartY = dp5;
            if (this.drawTopic && (messageTopicButton = this.topicButton) != null) {
                this.replyStartY = dp5 + messageTopicButton.height() + AndroidUtilities.dp(5.0f);
            }
            this.replyStartY += AndroidUtilities.dp(0.66f);
        }
        if (this.currentPosition == null && !this.transitionParams.animateBackgroundBoundsInner && (!this.enterTransitionInProgress || this.currentMessageObject.isVoice())) {
            drawNamesLayout(canvas, 1.0f);
        }
        if ((!this.autoPlayingMedia || !MediaController.getInstance().isPlayingMessageAndReadyToDraw(this.currentMessageObject) || this.isRoundVideo) && !this.transitionParams.animateBackgroundBoundsInner && ((messageObject = this.currentMessageObject) == null || !messageObject.preview)) {
            drawOverlays(canvas);
        }
        if ((this.drawTime || !this.mediaBackground) && !this.forceNotDrawTime && !this.transitionParams.animateBackgroundBoundsInner && ((!this.enterTransitionInProgress || this.currentMessageObject.isVoice()) && (!this.currentMessageObject.isQuickReply() || this.currentMessageObject.isSendError()))) {
            drawTime(canvas, 1.0f, false);
        }
        if ((this.controlsAlpha != 1.0f || this.timeAlpha != 1.0f) && this.currentMessageObject.type != 5) {
            long currentTimeMillis2 = System.currentTimeMillis();
            long abs2 = Math.abs(this.lastControlsAlphaChangeTime - currentTimeMillis2);
            long j = this.totalChangeTime + (abs2 <= 17 ? abs2 : 17L);
            this.totalChangeTime = j;
            if (j > 200) {
                this.totalChangeTime = 200L;
            }
            this.lastControlsAlphaChangeTime = currentTimeMillis2;
            if (this.controlsAlpha != 1.0f) {
                this.controlsAlpha = AndroidUtilities.decelerateInterpolator.getInterpolation(((float) this.totalChangeTime) / 200.0f);
            }
            if (this.timeAlpha != 1.0f) {
                this.timeAlpha = AndroidUtilities.decelerateInterpolator.getInterpolation(((float) this.totalChangeTime) / 200.0f);
            }
            invalidate();
            if (this.forceNotDrawTime && (groupedMessagePosition = this.currentPosition) != null && groupedMessagePosition.last && getParent() != null) {
                ((View) getParent()).invalidate();
            }
        }
        if ((this.drawBackground || this.transitionParams.animateDrawBackground) && shouldDrawSelectionOverlay() && this.currentMessagesGroup == null && hasSelectionOverlay()) {
            if (this.selectionOverlayPaint == null) {
                this.selectionOverlayPaint = new Paint(1);
            }
            this.selectionOverlayPaint.setColor(getSelectionOverlayColor());
            int alpha = this.selectionOverlayPaint.getAlpha();
            this.selectionOverlayPaint.setAlpha((int) (alpha * getHighlightAlpha() * getAlpha()));
            if (this.selectionOverlayPaint.getAlpha() > 0) {
                canvas.save();
                canvas.clipRect(0, 0, getMeasuredWidth(), getMeasuredHeight());
                this.currentBackgroundDrawable.drawCached(canvas, this.backgroundCacheParams, this.selectionOverlayPaint);
                canvas.restore();
            }
            this.selectionOverlayPaint.setAlpha(alpha);
        }
        ChatMessageCellDelegate chatMessageCellDelegate2 = this.delegate;
        if (chatMessageCellDelegate2 == null || chatMessageCellDelegate2.canDrawOutboundsContent() || this.transitionParams.messageEntering || getAlpha() != 1.0f) {
            drawOutboundsContent(canvas);
        }
        if (i != Integer.MIN_VALUE) {
            canvas.restoreToCount(i);
        }
        if (isWidthAdaptive()) {
            canvas.restore();
        }
        updateSelectionTextPosition();
    }

    @SuppressLint({"WrongCall"})
    public void drawBackgroundInternal(Canvas canvas, boolean z) {
        Drawable shadowDrawable;
        Drawable drawable;
        int i;
        int i2;
        int dp;
        int i3;
        int i4;
        int i5;
        MessageObject messageObject;
        Canvas canvas2;
        String str;
        String str2;
        String str3;
        boolean z2;
        float f;
        MessageObject messageObject2;
        MessageObject.GroupedMessages groupedMessages;
        Theme.MessageDrawable messageDrawable;
        int i6;
        int i7;
        MessageObject messageObject3;
        int i8;
        int dp2;
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        Drawable shadowDrawable2;
        int i9;
        int i10;
        int i11;
        int dp3;
        if (this.currentMessageObject == null) {
            return;
        }
        boolean z3 = this.wasLayout;
        if (!z3 && !this.animationRunning) {
            forceLayout();
            return;
        }
        if (!z3) {
            onLayout(false, getLeft(), getTop(), getRight(), getBottom());
        }
        MessageObject.GroupedMessagePosition groupedMessagePosition2 = this.currentPosition;
        boolean z4 = groupedMessagePosition2 != null && (groupedMessagePosition2.flags & 8) == 0 && this.currentMessagesGroup.isDocuments && !this.drawPinnedBottom;
        if (this.currentMessageObject.isOutOwner()) {
            if (this.transitionParams.changePinnedBottomProgress >= 1.0f && !this.mediaBackground && !this.drawPinnedBottom && !z4) {
                this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgOut");
                this.currentBackgroundSelectedDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgOutSelected");
                this.transitionParams.drawPinnedBottomBackground = false;
            } else {
                this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgOutMedia");
                this.currentBackgroundSelectedDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgOutMediaSelected");
                this.transitionParams.drawPinnedBottomBackground = true;
            }
            setBackgroundTopY(true);
            if (isDrawSelectionBackground() && (this.currentPosition == null || getBackground() != null)) {
                shadowDrawable2 = this.currentBackgroundSelectedDrawable.getShadowDrawable();
            } else {
                shadowDrawable2 = this.currentBackgroundDrawable.getShadowDrawable();
            }
            drawable = shadowDrawable2;
            this.backgroundDrawableLeft = (this.layoutWidth - this.backgroundWidth) - (!this.mediaBackground ? 0 : AndroidUtilities.dp(9.0f));
            int dp4 = this.backgroundWidth - (this.mediaBackground ? 0 : AndroidUtilities.dp(3.0f));
            this.backgroundDrawableRight = dp4;
            MessageObject.GroupedMessages groupedMessages2 = this.currentMessagesGroup;
            if (groupedMessages2 != null && !groupedMessages2.isDocuments && !this.currentPosition.edge) {
                this.backgroundDrawableRight = dp4 + AndroidUtilities.dp(10.0f);
            }
            int i12 = this.backgroundDrawableLeft;
            if (!z4 && this.transitionParams.changePinnedBottomProgress != 1.0f) {
                if (!this.mediaBackground) {
                    this.backgroundDrawableRight -= AndroidUtilities.dp(6.0f);
                }
            } else if (!this.mediaBackground && this.drawPinnedBottom) {
                this.backgroundDrawableRight -= AndroidUtilities.dp(6.0f);
            }
            MessageObject.GroupedMessagePosition groupedMessagePosition3 = this.currentPosition;
            if (groupedMessagePosition3 != null) {
                if ((groupedMessagePosition3.flags & 2) == 0) {
                    this.backgroundDrawableRight += AndroidUtilities.dp(SharedConfig.bubbleRadius + 2);
                }
                if ((this.currentPosition.flags & 1) == 0) {
                    i12 -= AndroidUtilities.dp(SharedConfig.bubbleRadius + 2);
                    this.backgroundDrawableRight += AndroidUtilities.dp(SharedConfig.bubbleRadius + 2);
                }
                if ((this.currentPosition.flags & 4) == 0) {
                    i10 = 0 - AndroidUtilities.dp(SharedConfig.bubbleRadius + 3);
                    i11 = AndroidUtilities.dp(SharedConfig.bubbleRadius + 3) + 0;
                } else {
                    i10 = 0;
                    i11 = 0;
                }
                if ((this.currentPosition.flags & 8) == 0) {
                    i11 += AndroidUtilities.dp(SharedConfig.bubbleRadius + 3);
                }
                i9 = i12;
            } else {
                i9 = i12;
                i10 = 0;
                i11 = 0;
            }
            boolean z5 = this.drawPinnedBottom;
            if (z5 && this.drawPinnedTop) {
                dp3 = 0;
            } else if (z5) {
                dp3 = AndroidUtilities.dp(1.0f);
            } else {
                dp3 = AndroidUtilities.dp(2.0f);
            }
            int dp5 = (this.drawPinnedTop ? 0 : AndroidUtilities.dp(1.0f)) + i10;
            this.backgroundDrawableTop = dp5;
            int i13 = (this.layoutHeight - dp3) + i11;
            this.backgroundDrawableBottom = dp5 + i13;
            if (!this.mediaBackground) {
                if (this.drawPinnedTop) {
                    this.backgroundDrawableTop = dp5 - AndroidUtilities.dp(1.0f);
                    i13 += AndroidUtilities.dp(1.0f);
                }
                if (this.drawPinnedBottom) {
                    this.backgroundDrawableBottom += AndroidUtilities.dp(1.0f);
                    i13 += AndroidUtilities.dp(1.0f);
                }
            }
            int i14 = i13;
            if (z4) {
                setDrawableBoundsInner(this.currentBackgroundDrawable, i9, this.backgroundDrawableTop - i10, this.backgroundDrawableRight, (i14 - i11) + 10);
                setDrawableBoundsInner(this.currentBackgroundSelectedDrawable, this.backgroundDrawableLeft, this.backgroundDrawableTop, this.backgroundDrawableRight - AndroidUtilities.dp(6.0f), i14);
            } else {
                int i15 = i9;
                setDrawableBoundsInner(this.currentBackgroundDrawable, i15, this.backgroundDrawableTop, this.backgroundDrawableRight, i14);
                setDrawableBoundsInner(this.currentBackgroundSelectedDrawable, i15, this.backgroundDrawableTop, this.backgroundDrawableRight, i14);
            }
            setDrawableBoundsInner(drawable, i9, this.backgroundDrawableTop, this.backgroundDrawableRight, i14);
        } else {
            if (this.transitionParams.changePinnedBottomProgress >= 1.0f && !this.mediaBackground && !this.drawPinnedBottom && !z4) {
                this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgIn");
                this.currentBackgroundSelectedDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgInSelected");
                this.transitionParams.drawPinnedBottomBackground = false;
            } else {
                this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgInMedia");
                this.currentBackgroundSelectedDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgInMediaSelected");
                this.transitionParams.drawPinnedBottomBackground = true;
            }
            setBackgroundTopY(true);
            if (isDrawSelectionBackground() && (this.currentPosition == null || getBackground() != null)) {
                shadowDrawable = this.currentBackgroundSelectedDrawable.getShadowDrawable();
            } else {
                shadowDrawable = this.currentBackgroundDrawable.getShadowDrawable();
            }
            drawable = shadowDrawable;
            this.backgroundDrawableLeft = AndroidUtilities.dp((((this.isChat || ((messageObject = this.currentMessageObject) != null && (messageObject.isRepostPreview || messageObject.forceAvatar))) && this.isAvatarVisible) ? 48 : 0) + (!this.mediaBackground ? 3 : 9));
            this.backgroundDrawableRight = this.backgroundWidth - (this.mediaBackground ? 0 : AndroidUtilities.dp(3.0f));
            MessageObject.GroupedMessages groupedMessages3 = this.currentMessagesGroup;
            if (groupedMessages3 != null && !groupedMessages3.isDocuments) {
                if (!this.currentPosition.edge) {
                    this.backgroundDrawableLeft -= AndroidUtilities.dp(10.0f);
                    this.backgroundDrawableRight += AndroidUtilities.dp(10.0f);
                }
                if (this.currentPosition.leftSpanOffset != 0) {
                    this.backgroundDrawableLeft += (int) Math.ceil((i5 / 1000.0f) * getGroupPhotosWidth());
                }
            }
            boolean z6 = this.mediaBackground;
            if ((!z6 && this.drawPinnedBottom) || (!z4 && this.transitionParams.changePinnedBottomProgress != 1.0f)) {
                if (this.drawPinnedBottom || !z6) {
                    this.backgroundDrawableRight -= AndroidUtilities.dp(6.0f);
                }
                if (!this.mediaBackground) {
                    this.backgroundDrawableLeft += AndroidUtilities.dp(6.0f);
                }
            }
            MessageObject.GroupedMessagePosition groupedMessagePosition4 = this.currentPosition;
            if (groupedMessagePosition4 != null) {
                if ((groupedMessagePosition4.flags & 2) == 0) {
                    this.backgroundDrawableRight += AndroidUtilities.dp(SharedConfig.bubbleRadius + 2);
                }
                if ((this.currentPosition.flags & 1) == 0) {
                    this.backgroundDrawableLeft -= AndroidUtilities.dp(SharedConfig.bubbleRadius + 2);
                    this.backgroundDrawableRight += AndroidUtilities.dp(SharedConfig.bubbleRadius + 2);
                }
                if ((this.currentPosition.flags & 4) == 0) {
                    i4 = 0 - AndroidUtilities.dp(SharedConfig.bubbleRadius + 3);
                    i3 = AndroidUtilities.dp(SharedConfig.bubbleRadius + 3) + 0;
                } else {
                    i3 = 0;
                    i4 = 0;
                }
                if ((this.currentPosition.flags & 8) == 0) {
                    i3 += AndroidUtilities.dp(SharedConfig.bubbleRadius + 4);
                }
                i = i3;
                i2 = i4;
            } else {
                i = 0;
                i2 = 0;
            }
            boolean z7 = this.drawPinnedBottom;
            if (z7 && this.drawPinnedTop) {
                dp = 0;
            } else if (z7) {
                dp = AndroidUtilities.dp(1.0f);
            } else {
                dp = AndroidUtilities.dp(2.0f);
            }
            int dp6 = i2 + (this.drawPinnedTop ? 0 : AndroidUtilities.dp(1.0f));
            this.backgroundDrawableTop = dp6;
            int i16 = (this.layoutHeight - dp) + i;
            this.backgroundDrawableBottom = dp6 + i16;
            if (!this.mediaBackground) {
                if (this.drawPinnedTop) {
                    this.backgroundDrawableTop = dp6 - AndroidUtilities.dp(1.0f);
                    i16 += AndroidUtilities.dp(1.0f);
                }
                if (this.drawPinnedBottom) {
                    this.backgroundDrawableBottom += AndroidUtilities.dp(1.0f);
                    i16 += AndroidUtilities.dp(1.0f);
                }
            }
            int i17 = i16;
            setDrawableBoundsInner(this.currentBackgroundDrawable, this.backgroundDrawableLeft, this.backgroundDrawableTop, this.backgroundDrawableRight, i17);
            if (z4) {
                setDrawableBoundsInner(this.currentBackgroundSelectedDrawable, AndroidUtilities.dp(6.0f) + this.backgroundDrawableLeft, this.backgroundDrawableTop, this.backgroundDrawableRight - AndroidUtilities.dp(6.0f), i17);
            } else {
                setDrawableBoundsInner(this.currentBackgroundSelectedDrawable, this.backgroundDrawableLeft, this.backgroundDrawableTop, this.backgroundDrawableRight, i17);
            }
            setDrawableBoundsInner(drawable, this.backgroundDrawableLeft, this.backgroundDrawableTop, this.backgroundDrawableRight, i17);
        }
        Drawable drawable2 = drawable;
        if (!this.currentMessageObject.isOutOwner() && this.transitionParams.changePinnedBottomProgress != 1.0f && !this.mediaBackground && !this.drawPinnedBottom) {
            this.backgroundDrawableLeft -= AndroidUtilities.dp(6.0f);
            this.backgroundDrawableRight += AndroidUtilities.dp(6.0f);
        }
        if (this.hasPsaHint) {
            MessageObject.GroupedMessagePosition groupedMessagePosition5 = this.currentPosition;
            if (groupedMessagePosition5 == null || (groupedMessagePosition5.flags & 2) != 0) {
                i8 = this.currentBackgroundDrawable.getBounds().right;
            } else {
                int groupPhotosWidth = getGroupPhotosWidth();
                i8 = 0;
                for (int i18 = 0; i18 < this.currentMessagesGroup.posArray.size(); i18++) {
                    if (this.currentMessagesGroup.posArray.get(i18).minY != 0) {
                        break;
                    }
                    double d = i8;
                    double ceil = Math.ceil(((groupedMessagePosition.pw + groupedMessagePosition.leftSpanOffset) / 1000.0f) * groupPhotosWidth);
                    Double.isNaN(d);
                    i8 = (int) (d + ceil);
                }
            }
            Drawable drawable3 = Theme.chat_psaHelpDrawable[this.currentMessageObject.isOutOwner() ? 1 : 0];
            if (this.currentMessageObject.type == 5) {
                dp2 = AndroidUtilities.dp(12.0f);
            } else {
                dp2 = AndroidUtilities.dp((this.drawNameLayout ? 19 : 0) + 10);
            }
            this.psaHelpX = (i8 - drawable3.getIntrinsicWidth()) - AndroidUtilities.dp(this.currentMessageObject.isOutOwner() ? 20.0f : 14.0f);
            this.psaHelpY = dp2 + AndroidUtilities.dp(4.0f);
        }
        if (this.checkBoxVisible || this.checkBoxAnimationInProgress) {
            animateCheckboxTranslation();
            int dp7 = AndroidUtilities.dp(21.0f);
            this.checkBox.setBounds(AndroidUtilities.dp(-27.0f) + this.checkBoxTranslation, (this.currentBackgroundDrawable.getBounds().bottom - AndroidUtilities.dp(8.0f)) - dp7, dp7, dp7);
        }
        if (z || !drawBackgroundInParent()) {
            int saveCount = canvas.getSaveCount();
            if (this.transitionYOffsetForDrawables != 0.0f) {
                canvas.save();
                canvas2 = canvas;
                canvas2.translate(0.0f, this.transitionYOffsetForDrawables);
            } else {
                canvas2 = canvas;
            }
            MessageObject messageObject4 = this.currentMessageObject;
            if (messageObject4 == null || !messageObject4.isRoundVideo()) {
                str = "drawableMsgInMedia";
                str2 = "drawableMsgIn";
                str3 = "drawableMsgOut";
                z2 = false;
                f = 0.0f;
            } else {
                float videoTranscriptionProgress = getVideoTranscriptionProgress();
                this.currentBackgroundDrawable.setRoundingRadius(1.0f - videoTranscriptionProgress);
                f = AndroidUtilities.lerp(this.backgroundWidth / 2, 0, videoTranscriptionProgress);
                int i19 = (int) (videoTranscriptionProgress * 255.0f);
                str = "drawableMsgInMedia";
                str2 = "drawableMsgIn";
                str3 = "drawableMsgOut";
                z2 = false;
                z2 = false;
                canvas.saveLayerAlpha(0.0f, 0.0f, getWidth(), Math.max(this.currentBackgroundDrawable.getBounds().bottom, getHeight()), i19, 31);
                this.roundVideoPlayPipFloat.set((((MediaController.getInstance().isPiPShown() && MediaController.getInstance().isPlayingMessageAndReadyToDraw(this.currentMessageObject)) || this.wouldBeInPip) && canvas.isHardwareAccelerated()) ? 1.0f : 0.0f);
                if (MediaController.getInstance().isPiPShown()) {
                    this.wouldBeInPip = false;
                }
            }
            if ((this.drawBackground || this.transitionParams.animateDrawBackground) && this.currentBackgroundDrawable != null && ((this.currentPosition == null || (isDrawSelectionBackground() && (this.currentMessageObject.isMusic() || this.currentMessageObject.isDocument()))) && (!this.enterTransitionInProgress || this.currentMessageObject.isVoice()))) {
                float f2 = this.alphaInternal;
                if (z) {
                    f2 *= getAlpha();
                }
                if (hasSelectionOverlay()) {
                    this.currentSelectedBackgroundAlpha = 0.0f;
                    int i20 = (int) (f2 * 255.0f);
                    this.currentBackgroundDrawable.setAlpha(i20);
                    this.currentBackgroundDrawable.drawCached(canvas2, this.backgroundCacheParams);
                    if (drawable2 != null && this.currentPosition == null) {
                        drawable2.setAlpha(i20);
                        drawable2.draw(canvas2);
                    }
                } else {
                    if (this.isHighlightedAnimated) {
                        this.currentBackgroundDrawable.setAlpha((int) (f2 * 255.0f));
                        this.currentBackgroundDrawable.drawCached(canvas2, this.backgroundCacheParams);
                        float highlightAlpha = getHighlightAlpha();
                        this.currentSelectedBackgroundAlpha = highlightAlpha;
                        if (this.currentPosition == null) {
                            this.currentBackgroundSelectedDrawable.setAlpha((int) (highlightAlpha * f2 * 255.0f));
                            this.currentBackgroundSelectedDrawable.drawCached(canvas2, this.backgroundCacheParams);
                        }
                    } else if (this.selectedBackgroundProgress != 0.0f && (((messageObject2 = this.currentMessageObject) == null || !messageObject2.preview) && ((groupedMessages = this.currentMessagesGroup) == null || !groupedMessages.isDocuments))) {
                        this.currentBackgroundDrawable.setAlpha((int) (f2 * 255.0f));
                        this.currentBackgroundDrawable.drawCached(canvas2, this.backgroundCacheParams);
                        float f3 = this.selectedBackgroundProgress;
                        this.currentSelectedBackgroundAlpha = f3;
                        this.currentBackgroundSelectedDrawable.setAlpha((int) (f3 * f2 * 255.0f));
                        this.currentBackgroundSelectedDrawable.drawCached(canvas2, this.backgroundCacheParams);
                        if (this.currentBackgroundDrawable.getGradientShader() == null) {
                            drawable2 = null;
                        }
                    } else if (isDrawSelectionBackground() && this.quoteHighlight == null && (this.currentPosition == null || this.currentMessageObject.isMusic() || this.currentMessageObject.isDocument() || getBackground() != null)) {
                        if (this.currentPosition != null) {
                            canvas.save();
                            canvas2.clipRect(z2 ? 1 : 0, z2 ? 1 : 0, getMeasuredWidth(), getMeasuredHeight());
                        }
                        this.currentSelectedBackgroundAlpha = 1.0f;
                        this.currentBackgroundSelectedDrawable.setAlpha((int) (f2 * 255.0f));
                        this.currentBackgroundSelectedDrawable.drawCached(canvas2, this.backgroundCacheParams);
                        if (this.currentPosition != null) {
                            canvas.restore();
                        }
                    } else {
                        this.currentSelectedBackgroundAlpha = 0.0f;
                        this.currentBackgroundDrawable.setAlpha((int) (f2 * 255.0f));
                        this.currentBackgroundDrawable.drawCached(canvas2, this.backgroundCacheParams);
                    }
                    if (drawable2 != null && this.currentPosition == null) {
                        drawable2.setAlpha((int) (f2 * 255.0f));
                        drawable2.draw(canvas2);
                    }
                    if (this.transitionParams.changePinnedBottomProgress != 1.0f && this.currentPosition == null) {
                        if (this.currentMessageObject.isOutOwner()) {
                            Theme.MessageDrawable messageDrawable2 = (Theme.MessageDrawable) getThemedDrawable(str3);
                            Rect bounds = this.currentBackgroundDrawable.getBounds();
                            messageDrawable2.setBounds(bounds.left, bounds.top, bounds.right + AndroidUtilities.dp(6.0f), bounds.bottom);
                            canvas.save();
                            canvas2.translate(-f, 0.0f);
                            canvas2.clipRect(bounds.right - AndroidUtilities.dp(16.0f), bounds.bottom - AndroidUtilities.dp(16.0f), bounds.right + AndroidUtilities.dp(16.0f), bounds.bottom);
                            int i21 = this.parentWidth;
                            int i22 = this.parentHeight;
                            if (i22 == 0) {
                                i21 = getParentWidth();
                                i22 = AndroidUtilities.displaySize.y;
                                if (getParent() instanceof View) {
                                    View view = (View) getParent();
                                    int measuredWidth = view.getMeasuredWidth();
                                    i7 = view.getMeasuredHeight();
                                    i6 = measuredWidth;
                                    float y = getY();
                                    float f4 = this.parentViewTopOffset;
                                    messageDrawable2.setTop((int) (y + f4), i6, i7, (int) f4, this.blurredViewTopOffset, this.blurredViewBottomOffset, this.pinnedTop, this.pinnedBottom);
                                    messageObject3 = this.currentMessageObject;
                                    if (messageObject3 != null && messageObject3.hasInlineBotButtons()) {
                                        z2 = true;
                                    }
                                    messageDrawable2.setBotButtonsBottom(z2);
                                    messageDrawable2.setAlpha((int) (((!this.mediaBackground || this.pinnedBottom) ? 1.0f - this.transitionParams.changePinnedBottomProgress : this.transitionParams.changePinnedBottomProgress) * 255.0f));
                                    messageDrawable2.draw(canvas2);
                                    messageDrawable2.setAlpha(255);
                                    canvas.restore();
                                }
                            }
                            i6 = i21;
                            i7 = i22;
                            float y2 = getY();
                            float f42 = this.parentViewTopOffset;
                            messageDrawable2.setTop((int) (y2 + f42), i6, i7, (int) f42, this.blurredViewTopOffset, this.blurredViewBottomOffset, this.pinnedTop, this.pinnedBottom);
                            messageObject3 = this.currentMessageObject;
                            if (messageObject3 != null) {
                                z2 = true;
                            }
                            messageDrawable2.setBotButtonsBottom(z2);
                            messageDrawable2.setAlpha((int) (((!this.mediaBackground || this.pinnedBottom) ? 1.0f - this.transitionParams.changePinnedBottomProgress : this.transitionParams.changePinnedBottomProgress) * 255.0f));
                            messageDrawable2.draw(canvas2);
                            messageDrawable2.setAlpha(255);
                            canvas.restore();
                        } else {
                            if (this.transitionParams.drawPinnedBottomBackground) {
                                messageDrawable = (Theme.MessageDrawable) getThemedDrawable(str2);
                            } else {
                                messageDrawable = (Theme.MessageDrawable) getThemedDrawable(str);
                            }
                            messageDrawable.setAlpha((int) (((this.mediaBackground || this.pinnedBottom) ? 1.0f - this.transitionParams.changePinnedBottomProgress : this.transitionParams.changePinnedBottomProgress) * 255.0f));
                            Rect bounds2 = this.currentBackgroundDrawable.getBounds();
                            messageDrawable.setBounds(bounds2.left - AndroidUtilities.dp(6.0f), bounds2.top, bounds2.right, bounds2.bottom);
                            canvas.save();
                            canvas2.translate(f, 0.0f);
                            canvas2.clipRect(bounds2.left - AndroidUtilities.dp(6.0f), bounds2.bottom - AndroidUtilities.dp(16.0f), bounds2.left + AndroidUtilities.dp(18.0f), bounds2.bottom);
                            messageDrawable.draw(canvas2);
                            messageDrawable.setAlpha(255);
                            canvas.restore();
                        }
                    }
                }
            }
            MessageObject messageObject5 = this.currentMessageObject;
            if (messageObject5 != null && messageObject5.isRoundVideo()) {
                this.currentBackgroundDrawable.setRoundingRadius(0.0f);
            }
            canvas2.restoreToCount(saveCount);
        }
    }

    private void animateCheckboxTranslation() {
        boolean z = this.checkBoxVisible;
        if (z || this.checkBoxAnimationInProgress) {
            if ((z && this.checkBoxAnimationProgress == 1.0f) || (!z && this.checkBoxAnimationProgress == 0.0f)) {
                this.checkBoxAnimationInProgress = false;
            }
            this.checkBoxTranslation = (int) Math.ceil((z ? CubicBezierInterpolator.EASE_OUT : CubicBezierInterpolator.EASE_IN).getInterpolation(this.checkBoxAnimationProgress) * AndroidUtilities.dp(35.0f));
            if (!this.currentMessageObject.isOutOwner() || this.currentMessageObject.hasWideCode) {
                updateTranslation();
            }
            if (this.checkBoxAnimationInProgress) {
                long elapsedRealtime = SystemClock.elapsedRealtime();
                long j = elapsedRealtime - this.lastCheckBoxAnimationTime;
                this.lastCheckBoxAnimationTime = elapsedRealtime;
                if (this.checkBoxVisible) {
                    float f = this.checkBoxAnimationProgress + (((float) j) / 200.0f);
                    this.checkBoxAnimationProgress = f;
                    if (f > 1.0f) {
                        this.checkBoxAnimationProgress = 1.0f;
                    }
                } else {
                    float f2 = this.checkBoxAnimationProgress - (((float) j) / 200.0f);
                    this.checkBoxAnimationProgress = f2;
                    if (f2 <= 0.0f) {
                        this.checkBoxAnimationProgress = 0.0f;
                    }
                }
                invalidate();
                ((View) getParent()).invalidate();
            }
        }
    }

    public boolean drawBackgroundInParent() {
        MessageObject messageObject;
        return this.canDrawBackgroundInParent && (messageObject = this.currentMessageObject) != null && messageObject.isOutOwner() && getThemedColor(Theme.key_chat_outBubbleGradient1) != 0;
    }

    public void drawServiceBackground(Canvas canvas, RectF rectF, float f, float f2) {
        applyServiceShaderMatrix();
        if (f2 != 1.0f) {
            int alpha = getThemedPaint("paintChatActionBackground").getAlpha();
            getThemedPaint("paintChatActionBackground").setAlpha((int) (alpha * f2));
            canvas.drawRoundRect(rectF, f, f, getThemedPaint("paintChatActionBackground"));
            getThemedPaint("paintChatActionBackground").setAlpha(alpha);
        } else {
            canvas.drawRoundRect(rectF, f, f, getThemedPaint(this.sideButtonPressed ? "paintChatActionBackgroundSelected" : "paintChatActionBackground"));
        }
        if (hasGradientService()) {
            if (f2 != 1.0f) {
                int alpha2 = Theme.chat_actionBackgroundGradientDarkenPaint.getAlpha();
                Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha((int) (f2 * alpha2));
                canvas.drawRoundRect(rectF, f, f, Theme.chat_actionBackgroundGradientDarkenPaint);
                Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha(alpha2);
                return;
            }
            canvas.drawRoundRect(rectF, f, f, Theme.chat_actionBackgroundGradientDarkenPaint);
        }
    }

    public void drawCommentButton(Canvas canvas, float f) {
        if (this.drawSideButton != 3) {
            return;
        }
        int dp = AndroidUtilities.dp(32.0f);
        if (this.commentLayout != null) {
            this.sideStartY -= AndroidUtilities.dp(18.0f);
            dp += AndroidUtilities.dp(18.0f);
        }
        RectF rectF = this.rect;
        float f2 = this.sideStartX;
        rectF.set(f2, this.sideStartY, AndroidUtilities.dp(32.0f) + f2, this.sideStartY + dp);
        applyServiceShaderMatrix();
        if (f != 1.0f) {
            int alpha = getThemedPaint("paintChatActionBackground").getAlpha();
            getThemedPaint("paintChatActionBackground").setAlpha((int) (alpha * f));
            canvas.drawRoundRect(this.rect, AndroidUtilities.dp(16.0f), AndroidUtilities.dp(16.0f), getThemedPaint("paintChatActionBackground"));
            getThemedPaint("paintChatActionBackground").setAlpha(alpha);
        } else {
            canvas.drawRoundRect(this.rect, AndroidUtilities.dp(16.0f), AndroidUtilities.dp(16.0f), getThemedPaint(this.sideButtonPressed ? "paintChatActionBackgroundSelected" : "paintChatActionBackground"));
        }
        if (hasGradientService()) {
            if (f != 1.0f) {
                int alpha2 = Theme.chat_actionBackgroundGradientDarkenPaint.getAlpha();
                Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha((int) (alpha2 * f));
                canvas.drawRoundRect(this.rect, AndroidUtilities.dp(16.0f), AndroidUtilities.dp(16.0f), Theme.chat_actionBackgroundGradientDarkenPaint);
                Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha(alpha2);
            } else {
                canvas.drawRoundRect(this.rect, AndroidUtilities.dp(16.0f), AndroidUtilities.dp(16.0f), Theme.chat_actionBackgroundGradientDarkenPaint);
            }
        }
        Drawable themeDrawable = Theme.getThemeDrawable("drawableCommentSticker");
        BaseCell.setDrawableBounds(themeDrawable, this.sideStartX + AndroidUtilities.dp(4.0f), this.sideStartY + AndroidUtilities.dp(4.0f));
        if (f != 1.0f) {
            themeDrawable.setAlpha((int) (f * 255.0f));
            themeDrawable.draw(canvas);
            themeDrawable.setAlpha(255);
        } else {
            themeDrawable.draw(canvas);
        }
        if (this.commentLayout != null) {
            Theme.chat_stickerCommentCountPaint.setColor(getThemedColor(Theme.key_chat_stickerReplyNameText));
            Theme.chat_stickerCommentCountPaint.setAlpha((int) (f * 255.0f));
            if (this.transitionParams.animateComments) {
                if (this.transitionParams.animateCommentsLayout != null) {
                    canvas.save();
                    TextPaint textPaint = Theme.chat_stickerCommentCountPaint;
                    double d = this.transitionParams.animateChangeProgress;
                    Double.isNaN(d);
                    double d2 = f;
                    Double.isNaN(d2);
                    textPaint.setAlpha((int) ((1.0d - d) * 255.0d * d2));
                    canvas.translate(this.sideStartX + ((AndroidUtilities.dp(32.0f) - this.transitionParams.animateTotalCommentWidth) / 2), this.sideStartY + AndroidUtilities.dp(30.0f));
                    this.transitionParams.animateCommentsLayout.draw(canvas);
                    canvas.restore();
                }
                Theme.chat_stickerCommentCountPaint.setAlpha((int) (this.transitionParams.animateChangeProgress * 255.0f));
            }
            canvas.save();
            canvas.translate(this.sideStartX + ((AndroidUtilities.dp(32.0f) - this.totalCommentWidth) / 2), this.sideStartY + AndroidUtilities.dp(30.0f));
            this.commentLayout.draw(canvas);
            canvas.restore();
        }
    }

    public void applyServiceShaderMatrix() {
        applyServiceShaderMatrix(getMeasuredWidth(), this.backgroundHeight, getX(), this.viewTop);
    }

    private void applyServiceShaderMatrix(int i, int i2, float f, float f2) {
        Theme.ResourcesProvider resourcesProvider = this.resourcesProvider;
        if (resourcesProvider != null) {
            resourcesProvider.applyServiceShaderMatrix(i, i2, f, f2);
        } else {
            Theme.applyServiceShaderMatrix(i, i2, f, f2);
        }
    }

    public boolean hasOutboundsContent() {
        AnimatedEmojiDrawable.SwapAnimatedEmojiDrawable swapAnimatedEmojiDrawable;
        MessageObject messageObject;
        if (this.channelRecommendationsCell == null || (messageObject = this.currentMessageObject) == null || messageObject.type != 27) {
            if (getAlpha() != 1.0f) {
                return false;
            }
            if ((this.transitionParams.transitionBotButtons.isEmpty() || !this.transitionParams.animateBotButtonsChanged) && this.botButtons.isEmpty() && this.drawSideButton == 0) {
                if (!this.drawNameLayout || this.nameLayout == null || (swapAnimatedEmojiDrawable = this.currentNameStatusDrawable) == null || swapAnimatedEmojiDrawable.getDrawable() == null) {
                    AnimatedEmojiSpan.EmojiGroupedSpans emojiGroupedSpans = this.animatedEmojiStack;
                    if (emojiGroupedSpans == null || emojiGroupedSpans.holders.isEmpty()) {
                        if (this.drawTopic && this.topicButton != null) {
                            MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
                            if (groupedMessagePosition == null) {
                                return true;
                            }
                            if (groupedMessagePosition.minY == 0 && groupedMessagePosition.minX == 0) {
                                return true;
                            }
                        }
                        if (this.currentMessagesGroup == null) {
                            TransitionParams transitionParams = this.transitionParams;
                            if (((transitionParams.animateReplaceCaptionLayout && transitionParams.animateChangeProgress != 1.0f) || (transitionParams.animateChangeProgress != 1.0f && transitionParams.animateMessageText)) && transitionParams.animateOutAnimateEmoji != null && !this.transitionParams.animateOutAnimateEmoji.holders.isEmpty()) {
                                return true;
                            }
                        }
                        return false;
                    }
                    return true;
                }
                return true;
            }
            return true;
        }
        return true;
    }

    public void drawOutboundsContent(Canvas canvas) {
        TransitionParams transitionParams;
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        float f;
        float f2;
        float f3;
        MessageObject.GroupedMessagePosition groupedMessagePosition2;
        float dp;
        int extraTextX;
        float f4;
        int themedColor;
        TLRPC$User tLRPC$User;
        TLRPC$TL_peerColor tLRPC$TL_peerColor;
        float dp2;
        int i;
        int i2;
        float dp3;
        MessageObject.GroupedMessages groupedMessages;
        MessageObject messageObject;
        ChannelRecommendationsCell channelRecommendationsCell = this.channelRecommendationsCell;
        if (channelRecommendationsCell != null && (messageObject = this.currentMessageObject) != null && messageObject.type == 27) {
            channelRecommendationsCell.draw(canvas);
        } else if (this.currentMessageObject == null) {
        } else {
            if (!this.enterTransitionInProgress) {
                drawAnimatedEmojis(canvas, 1.0f);
            }
            if (this.currentNameStatusDrawable != null && this.drawNameLayout && this.nameLayout != null && (((groupedMessagePosition2 = this.currentPosition) == null || (groupedMessagePosition2.minX == 0 && groupedMessagePosition2.minY == 0)) && (!this.currentMessageObject.deleted || this.drawingToBitmap || (groupedMessages = this.currentMessagesGroup) == null || groupedMessages.messages.size() < 1))) {
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    themedColor = getThemedColor(Theme.key_chat_stickerNameText);
                    if (this.currentMessageObject.isOutOwner()) {
                        dp3 = AndroidUtilities.dp(28.0f);
                    } else {
                        dp3 = this.backgroundDrawableLeft + this.transitionParams.deltaLeft + this.backgroundDrawableRight + AndroidUtilities.dp(22.0f);
                    }
                    dp2 = this.layoutHeight - AndroidUtilities.dp(38.0f);
                    f4 = dp3 - this.nameOffsetX;
                } else {
                    float f5 = 11.0f;
                    if (this.mediaBackground || this.currentMessageObject.isOutOwner()) {
                        dp = this.backgroundDrawableLeft + this.transitionParams.deltaLeft + AndroidUtilities.dp(11.0f);
                        extraTextX = getExtraTextX();
                    } else {
                        dp = this.backgroundDrawableLeft + this.transitionParams.deltaLeft + AndroidUtilities.dp((this.mediaBackground || !this.drawPinnedBottom) ? 17.0f : 17.0f);
                        extraTextX = getExtraTextX();
                    }
                    f4 = dp + extraTextX;
                    if (this.currentMessageObject.isOutOwner() && ChatObject.isChannel(this.currentChat)) {
                        Theme.MessageDrawable messageDrawable = this.currentBackgroundDrawable;
                        if (messageDrawable != null && messageDrawable.hasGradient()) {
                            themedColor = getThemedColor(Theme.key_chat_messageTextOut);
                        } else {
                            themedColor = getThemedColor(Theme.key_chat_outForwardedNameText);
                        }
                    } else if (this.currentMessageObject.isOutOwner()) {
                        themedColor = getThemedColor(Theme.key_chat_outForwardedNameText);
                    } else {
                        MessageObject messageObject2 = this.currentMessageObject;
                        if (messageObject2.overrideLinkColor >= 0 || ((messageObject2.isFromUser() && this.currentUser != null) || ((this.currentMessageObject.isFromChannel() && this.currentChat != null) || ((tLRPC$TL_peerColor = this.currentMessageObject.sponsoredColor) != null && tLRPC$TL_peerColor.color != -1)))) {
                            MessageObject messageObject3 = this.currentMessageObject;
                            int i3 = messageObject3.overrideLinkColor;
                            if (i3 < 0) {
                                TLRPC$TL_peerColor tLRPC$TL_peerColor2 = messageObject3.sponsoredColor;
                                if (tLRPC$TL_peerColor2 != null) {
                                    i3 = tLRPC$TL_peerColor2.color;
                                } else if (messageObject3.isFromUser() && (tLRPC$User = this.currentUser) != null) {
                                    i3 = UserObject.getColorId(tLRPC$User);
                                } else {
                                    i3 = ChatObject.getColorId(this.currentChat);
                                }
                            }
                            if (i3 < 7) {
                                themedColor = getThemedColor(Theme.keys_avatar_nameInMessage[i3]);
                            } else {
                                MessagesController.PeerColors peerColors = MessagesController.getInstance(this.currentAccount).peerColors;
                                MessagesController.PeerColor color = peerColors != null ? peerColors.getColor(i3) : null;
                                if (color != null) {
                                    themedColor = color.getColor(0, this.resourcesProvider);
                                } else {
                                    themedColor = getThemedColor(Theme.key_chat_inForwardedNameText);
                                }
                            }
                        } else {
                            themedColor = getThemedColor(Theme.key_chat_inForwardedNameText);
                        }
                    }
                    dp2 = AndroidUtilities.dp(this.drawPinnedTop ? 9.0f : 10.0f);
                }
                MessageObject.GroupedMessages groupedMessages2 = this.currentMessagesGroup;
                if (groupedMessages2 != null) {
                    MessageObject.GroupedMessages.TransitionParams transitionParams2 = groupedMessages2.transitionParams;
                    if (transitionParams2.backgroundChangeBounds) {
                        f4 += transitionParams2.offsetLeft;
                        dp2 += transitionParams2.offsetTop - getTranslationY();
                    }
                }
                float f6 = f4 + this.animationOffsetX;
                TransitionParams transitionParams3 = this.transitionParams;
                float f7 = dp2 + transitionParams3.deltaTop;
                if (transitionParams3.animateSign) {
                    f6 = ((f6 - this.transitionParams.animateNameX) * this.transitionParams.animateChangeProgress) + this.transitionParams.animateNameX;
                }
                this.currentNameStatusDrawable.setBounds((int) (Math.abs(f6) + (this.viaNameWidth > 0 ? i - AndroidUtilities.dp(32.0f) : this.nameLayoutWidth) + AndroidUtilities.dp(2.0f)), (int) (((this.nameLayout.layout.getHeight() / 2) + f7) - AndroidUtilities.dp(10.0f)), (int) (Math.abs(f6) + (this.viaNameWidth > 0 ? i2 - AndroidUtilities.dp(32.0f) : this.nameLayoutWidth) + AndroidUtilities.dp(22.0f)), (int) (f7 + (this.nameLayout.layout.getHeight() / 2) + AndroidUtilities.dp(10.0f)));
                this.currentNameStatusDrawable.setColor(Integer.valueOf(ColorUtils.setAlphaComponent(themedColor, R.styleable.AppCompatTheme_tooltipFrameBackground)));
                this.currentNameStatusDrawable.draw(canvas);
            }
            if (this.drawTopic && this.topicButton != null && ((groupedMessagePosition = this.currentPosition) == null || (groupedMessagePosition.minY == 0 && groupedMessagePosition.minX == 0))) {
                if (!this.isRoundVideo || this.hasLinkPreview) {
                    f = 1.0f;
                } else {
                    f = (1.0f - getVideoTranscriptionProgress()) * 1.0f;
                    TransitionParams transitionParams4 = this.transitionParams;
                    if (transitionParams4.animatePlayingRound) {
                        if (this.isPlayingRound) {
                            f3 = 1.0f - transitionParams4.animateChangeProgress;
                        } else {
                            f3 = transitionParams4.animateChangeProgress;
                        }
                        f *= f3;
                    } else if (this.isPlayingRound) {
                        f = 0.0f;
                    }
                }
                if (!this.transitionParams.animateForwardedLayout) {
                    f2 = 1.0f;
                } else if (!this.currentMessageObject.needDrawForwarded()) {
                    f2 = 1.0f - this.transitionParams.animateChangeProgress;
                } else {
                    f2 = this.transitionParams.animateChangeProgress;
                }
                this.topicButton.drawOutbounds(canvas, f2 * f);
            }
            if (!this.transitionParams.transitionBotButtons.isEmpty()) {
                if (this.transitionParams.animateBotButtonsChanged) {
                    drawBotButtons(canvas, this.transitionParams.transitionBotButtons, (int) (MathUtils.clamp(1.0f - ((float) Math.pow(transitionParams.animateChangeProgress, 2.0d)), 0.0f, 1.0f) * 255.0f));
                }
            }
            if (!this.botButtons.isEmpty()) {
                ArrayList<BotButton> arrayList = this.botButtons;
                TransitionParams transitionParams5 = this.transitionParams;
                drawBotButtons(canvas, arrayList, transitionParams5.animateBotButtonsChanged ? (int) (transitionParams5.animateChangeProgress * 255.0f) : 255);
            }
            drawSideButton(canvas);
        }
    }

    public void drawAnimatedEmojis(Canvas canvas, float f) {
        drawAnimatedEmojiMessageText(canvas, f);
        if (shouldDrawCaptionLayout()) {
            drawAnimatedEmojiCaption(canvas, f);
        }
    }

    private void drawAnimatedEmojiMessageText(Canvas canvas, float f) {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null || messageObject.isSponsored()) {
            return;
        }
        int i = this.textY;
        float f2 = i;
        TransitionParams transitionParams = this.transitionParams;
        if (transitionParams.animateText) {
            float f3 = transitionParams.animateFromTextY;
            float f4 = transitionParams.animateChangeProgress;
            f2 = (f3 * (1.0f - f4)) + (i * f4);
        }
        float f5 = f2;
        if (transitionParams.animateChangeProgress != 1.0f && transitionParams.animateMessageText) {
            canvas.save();
            Theme.MessageDrawable messageDrawable = this.currentBackgroundDrawable;
            if (messageDrawable != null) {
                Rect bounds = messageDrawable.getBounds();
                if (this.currentMessageObject.isOutOwner() && !this.mediaBackground && !this.pinnedBottom) {
                    canvas.clipRect(bounds.left + AndroidUtilities.dp(4.0f), bounds.top + AndroidUtilities.dp(4.0f), bounds.right - AndroidUtilities.dp(10.0f), bounds.bottom - AndroidUtilities.dp(4.0f));
                } else {
                    canvas.clipRect(bounds.left + AndroidUtilities.dp(4.0f), bounds.top + AndroidUtilities.dp(4.0f), bounds.right - AndroidUtilities.dp(4.0f), bounds.bottom - AndroidUtilities.dp(4.0f));
                }
            }
            drawAnimatedEmojiMessageText(this.textX, f5, canvas, this.transitionParams.animateOutTextBlocks, this.transitionParams.animateOutAnimateEmoji, false, f * (1.0f - this.transitionParams.animateChangeProgress), this.currentMessageObject.textXOffset, false);
            float f6 = this.textX;
            MessageObject messageObject2 = this.currentMessageObject;
            drawAnimatedEmojiMessageText(f6, f5, canvas, messageObject2.textLayoutBlocks, this.animatedEmojiStack, true, f * this.transitionParams.animateChangeProgress, messageObject2.textXOffset, false);
            canvas.restore();
            return;
        }
        float f7 = this.textX;
        MessageObject messageObject3 = this.currentMessageObject;
        drawAnimatedEmojiMessageText(f7, f5, canvas, messageObject3.textLayoutBlocks, this.animatedEmojiStack, true, f, messageObject3.textXOffset, false);
    }

    private void drawAnimatedEmojiMessageText(float f, float f2, Canvas canvas, ArrayList<MessageObject.TextLayoutBlock> arrayList, AnimatedEmojiSpan.EmojiGroupedSpans emojiGroupedSpans, boolean z, float f3, float f4, boolean z2) {
        int size;
        int i;
        if (this.currentMessageObject == null || arrayList == null || arrayList.isEmpty() || f3 == 0.0f) {
            return;
        }
        if (z && !z2) {
            if (this.fullyDraw) {
                this.firstVisibleBlockNum = 0;
                this.lastVisibleBlockNum = arrayList.size();
            }
            i = this.firstVisibleBlockNum;
            size = this.lastVisibleBlockNum;
        } else {
            size = arrayList.size();
            i = 0;
        }
        for (int i2 = i; i2 <= size && i2 < arrayList.size(); i2++) {
            if (i2 >= 0) {
                MessageObject.TextLayoutBlock textLayoutBlock = arrayList.get(i2);
                canvas.save();
                canvas.translate(f - (textLayoutBlock.isRtl() ? (int) Math.ceil(f4) : 0), f2 + textLayoutBlock.padTop + textLayoutBlock.textYOffset + this.transitionYOffsetForDrawables);
                float f5 = f2 + textLayoutBlock.textYOffset + this.transitionYOffsetForDrawables;
                boolean z3 = this.transitionParams.messageEntering;
                int i3 = this.currentMessageObject.isOutOwner() ? Theme.key_chat_messageTextOut : Theme.key_chat_messageTextIn;
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    i3 = Theme.key_windowBackgroundWhiteBlackText;
                }
                AnimatedEmojiSpan.drawAnimatedEmojis(canvas, textLayoutBlock.textLayout.layout, emojiGroupedSpans, 0.0f, textLayoutBlock.spoilers, 0.0f, 0.0f, f5, f3, getAdaptiveEmojiColorFilter(0, getThemedColor(i3)));
                canvas.restore();
            }
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:43:0x00d4  */
    /* JADX WARN: Removed duplicated region for block: B:44:0x00d8  */
    /* JADX WARN: Removed duplicated region for block: B:47:0x00de  */
    /* JADX WARN: Removed duplicated region for block: B:48:0x00e2  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void drawAnimatedEmojiCaption(Canvas canvas, float f) {
        float f2;
        float f3;
        TransitionParams transitionParams;
        float f4;
        if (this.captionLayout == null) {
            return;
        }
        float f5 = this.captionY;
        float f6 = this.captionX;
        TransitionParams transitionParams2 = this.transitionParams;
        if (transitionParams2.animateBackgroundBoundsInner) {
            if (transitionParams2.transformGroupToSingleMessage) {
                f5 -= getTranslationY();
                f4 = this.transitionParams.deltaLeft;
            } else if (transitionParams2.moveCaption) {
                float f7 = this.captionX;
                TransitionParams transitionParams3 = this.transitionParams;
                float f8 = transitionParams3.animateChangeProgress;
                f3 = (f7 * f8) + (transitionParams3.captionFromX * (1.0f - f8));
                f2 = (this.captionY * f8) + (transitionParams3.captionFromY * (1.0f - f8));
                transitionParams = this.transitionParams;
                if (transitionParams.animateReplaceCaptionLayout || transitionParams.animateChangeProgress == 1.0f) {
                    MessageObject.TextLayoutBlocks textLayoutBlocks = this.captionLayout;
                    drawAnimatedEmojiMessageText(f3, f2, canvas, textLayoutBlocks == null ? textLayoutBlocks.textLayoutBlocks : null, this.animatedEmojiStack, true, f, textLayoutBlocks == null ? textLayoutBlocks.textXOffset : 0.0f, true);
                }
                ArrayList<MessageObject.TextLayoutBlock> arrayList = transitionParams.animateOutCaptionLayout != null ? this.transitionParams.animateOutCaptionLayout.textLayoutBlocks : null;
                AnimatedEmojiSpan.EmojiGroupedSpans emojiGroupedSpans = this.transitionParams.animateOutAnimateEmoji;
                TransitionParams transitionParams4 = this.transitionParams;
                drawAnimatedEmojiMessageText(f3, f2, canvas, arrayList, emojiGroupedSpans, false, f * (1.0f - transitionParams4.animateChangeProgress), transitionParams4.animateOutCaptionLayout != null ? this.transitionParams.animateOutCaptionLayout.textXOffset : 0.0f, true);
                MessageObject.TextLayoutBlocks textLayoutBlocks2 = this.captionLayout;
                drawAnimatedEmojiMessageText(f3, f2, canvas, textLayoutBlocks2 != null ? textLayoutBlocks2.textLayoutBlocks : null, this.animatedEmojiStack, true, f * this.transitionParams.animateChangeProgress, textLayoutBlocks2 != null ? textLayoutBlocks2.textXOffset : 0.0f, true);
                return;
            } else if (!this.currentMessageObject.isVoice() || !TextUtils.isEmpty(this.currentMessageObject.caption)) {
                f4 = this.transitionParams.deltaLeft;
            }
            f6 += f4;
        }
        f2 = f5;
        f3 = f6;
        transitionParams = this.transitionParams;
        if (transitionParams.animateReplaceCaptionLayout) {
        }
        MessageObject.TextLayoutBlocks textLayoutBlocks3 = this.captionLayout;
        drawAnimatedEmojiMessageText(f3, f2, canvas, textLayoutBlocks3 == null ? textLayoutBlocks3.textLayoutBlocks : null, this.animatedEmojiStack, true, f, textLayoutBlocks3 == null ? textLayoutBlocks3.textXOffset : 0.0f, true);
    }

    private void drawSideButton(Canvas canvas) {
        MessageObject.GroupedMessages groupedMessages;
        if (this.drawSideButton != 0) {
            MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
            if (groupedMessagePosition == null || (groupedMessages = this.currentMessagesGroup) == null || !groupedMessages.isDocuments || groupedMessagePosition.last) {
                if (this.currentMessageObject.isOutOwner()) {
                    float dp = this.transitionParams.lastBackgroundLeft - AndroidUtilities.dp(40.0f);
                    this.sideStartX = dp;
                    MessageObject.GroupedMessages groupedMessages2 = this.currentMessagesGroup;
                    if (groupedMessages2 != null) {
                        this.sideStartX = dp + (groupedMessages2.transitionParams.offsetLeft - this.animationOffsetX);
                    }
                } else {
                    float dp2 = this.transitionParams.lastBackgroundRight + AndroidUtilities.dp(8.0f);
                    this.sideStartX = dp2;
                    MessageObject.GroupedMessages groupedMessages3 = this.currentMessagesGroup;
                    if (groupedMessages3 != null) {
                        this.sideStartX = dp2 + (groupedMessages3.transitionParams.offsetRight - this.animationOffsetX);
                    }
                }
                if (this.drawSideButton == 4) {
                    this.sideStartY = AndroidUtilities.dp(6.0f);
                } else {
                    float dp3 = (this.layoutHeight + this.transitionParams.deltaBottom) - AndroidUtilities.dp(41.0f);
                    this.sideStartY = dp3;
                    MessageObject messageObject = this.currentMessageObject;
                    if (messageObject.type == 19 && messageObject.textWidth < this.timeTextWidth) {
                        this.sideStartY = dp3 - AndroidUtilities.dp(22.0f);
                    }
                    MessageObject.GroupedMessages groupedMessages4 = this.currentMessagesGroup;
                    if (groupedMessages4 != null) {
                        float f = this.sideStartY;
                        MessageObject.GroupedMessages.TransitionParams transitionParams = groupedMessages4.transitionParams;
                        float f2 = f + transitionParams.offsetBottom;
                        this.sideStartY = f2;
                        if (transitionParams.backgroundChangeBounds) {
                            this.sideStartY = f2 - getTranslationY();
                        }
                    }
                    if (this.currentMessageObject.shouldDrawReactions()) {
                        ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
                        if (!reactionsLayoutInBubble.isSmall) {
                            if (this.isRoundVideo) {
                                this.sideStartY -= reactionsLayoutInBubble.getCurrentTotalHeight(this.transitionParams.animateChangeProgress) * (1.0f - getVideoTranscriptionProgress());
                            } else if (reactionsLayoutInBubble.drawServiceShaderBackground > 0.0f) {
                                this.sideStartY -= reactionsLayoutInBubble.getCurrentTotalHeight(this.transitionParams.animateChangeProgress);
                            }
                        }
                    }
                }
                if (this.drawSideButton != 4) {
                    float dp4 = ((this.layoutHeight + this.transitionParams.deltaBottom) - AndroidUtilities.dp(32.0f)) / 2.0f;
                    if (this.sideStartY < dp4) {
                        this.sideStartY = dp4;
                    }
                }
                if (!this.currentMessageObject.isOutOwner() && this.isRoundVideo && !this.hasLinkPreview) {
                    float dp5 = this.isAvatarVisible ? (AndroidUtilities.roundPlayingMessageSize - AndroidUtilities.roundMessageSize) * 0.7f : AndroidUtilities.dp(50.0f);
                    float videoTranscriptionProgress = this.isPlayingRound ? (1.0f - getVideoTranscriptionProgress()) * dp5 : 0.0f;
                    float dp6 = this.isPlayingRound ? AndroidUtilities.dp(28.0f) * (1.0f - getVideoTranscriptionProgress()) : 0.0f;
                    TransitionParams transitionParams2 = this.transitionParams;
                    if (transitionParams2.animatePlayingRound) {
                        videoTranscriptionProgress = (this.isPlayingRound ? transitionParams2.animateChangeProgress : 1.0f - transitionParams2.animateChangeProgress) * (1.0f - getVideoTranscriptionProgress()) * dp5;
                        dp6 = AndroidUtilities.dp(28.0f) * (this.isPlayingRound ? this.transitionParams.animateChangeProgress : 1.0f - this.transitionParams.animateChangeProgress) * (1.0f - getVideoTranscriptionProgress());
                    }
                    this.sideStartX -= videoTranscriptionProgress;
                    this.sideStartY -= dp6;
                }
                if (this.drawSideButton == 3) {
                    if (!this.enterTransitionInProgress || this.currentMessageObject.isVoice()) {
                        drawCommentButton(canvas, 1.0f);
                    }
                } else if (SizeNotifierFrameLayout.drawingBlur) {
                } else {
                    RectF rectF = this.rect;
                    float f3 = this.sideStartX;
                    rectF.set(f3, this.sideStartY, AndroidUtilities.dp(32.0f) + f3, this.sideStartY + AndroidUtilities.dp(this.drawSideButton2 == 5 ? 64.0f : 32.0f));
                    applyServiceShaderMatrix();
                    if (this.drawSideButton == 4 && this.drawSideButton2 == 5 && this.sideButtonPressed) {
                        Path path = this.sideButtonPath1;
                        if (path == null) {
                            this.sideButtonPath1 = new Path();
                        } else {
                            path.rewind();
                        }
                        Path path2 = this.sideButtonPath2;
                        if (path2 == null) {
                            this.sideButtonPath2 = new Path();
                        } else {
                            path2.rewind();
                        }
                        if (this.sideButtonPathCorners1 == null) {
                            this.sideButtonPathCorners1 = r2;
                            float dp7 = AndroidUtilities.dp(16.0f);
                            float[] fArr = {dp7, dp7, dp7, dp7};
                        }
                        if (this.sideButtonPathCorners2 == null) {
                            this.sideButtonPathCorners2 = r2;
                            float dp8 = AndroidUtilities.dp(16.0f);
                            float[] fArr2 = {0.0f, 0.0f, 0.0f, 0.0f, dp8, dp8, dp8, dp8};
                        }
                        RectF rectF2 = AndroidUtilities.rectTmp;
                        float f4 = this.sideStartX;
                        rectF2.set(f4, this.sideStartY, AndroidUtilities.dp(32.0f) + f4, this.sideStartY + AndroidUtilities.dp(32.0f));
                        this.sideButtonPath1.addRoundRect(rectF2, this.sideButtonPathCorners1, Path.Direction.CW);
                        rectF2.set(this.sideStartX, this.sideStartY + AndroidUtilities.dp(32.0f), this.sideStartX + AndroidUtilities.dp(32.0f), this.sideStartY + AndroidUtilities.dp(64.0f));
                        this.sideButtonPath2.addRoundRect(rectF2, this.sideButtonPathCorners2, Path.Direction.CW);
                        if (this.pressedSideButton == 4) {
                            canvas.drawPath(this.sideButtonPath1, getThemedPaint("paintChatActionBackgroundSelected"));
                            canvas.drawPath(this.sideButtonPath2, getThemedPaint("paintChatActionBackground"));
                        } else {
                            canvas.drawPath(this.sideButtonPath1, getThemedPaint("paintChatActionBackground"));
                            canvas.drawPath(this.sideButtonPath2, getThemedPaint("paintChatActionBackgroundSelected"));
                        }
                    } else {
                        canvas.drawRoundRect(this.rect, AndroidUtilities.dp(16.0f), AndroidUtilities.dp(16.0f), getThemedPaint(this.sideButtonPressed ? "paintChatActionBackgroundSelected" : "paintChatActionBackground"));
                    }
                    if (hasGradientService()) {
                        canvas.drawRoundRect(this.rect, AndroidUtilities.dp(16.0f), AndroidUtilities.dp(16.0f), Theme.chat_actionBackgroundGradientDarkenPaint);
                    }
                    int i = this.drawSideButton;
                    if (i == 2) {
                        Drawable themedDrawable = getThemedDrawable("drawableGoIcon");
                        BaseCell.setDrawableBounds(themedDrawable, (this.sideStartX + AndroidUtilities.dp(16.0f)) - (themedDrawable.getIntrinsicWidth() / 2.0f), (this.sideStartY + AndroidUtilities.dp(16.0f)) - (themedDrawable.getIntrinsicHeight() / 2.0f));
                        themedDrawable.draw(canvas);
                    } else if (i == 4) {
                        int dp9 = (int) (this.sideStartX + AndroidUtilities.dp(16.0f));
                        int dp10 = (int) (this.sideStartY + AndroidUtilities.dp(16.0f));
                        Drawable themedDrawable2 = getThemedDrawable("drawableCloseIcon");
                        int intrinsicWidth = themedDrawable2.getIntrinsicWidth() / 2;
                        int intrinsicHeight = themedDrawable2.getIntrinsicHeight() / 2;
                        themedDrawable2.setBounds(dp9 - intrinsicWidth, dp10 - intrinsicHeight, intrinsicWidth + dp9, intrinsicHeight + dp10);
                        BaseCell.setDrawableBounds(themedDrawable2, this.sideStartX + AndroidUtilities.dp(4.0f), this.sideStartY + AndroidUtilities.dp(4.0f));
                        canvas.save();
                        canvas.scale(0.65f, 0.65f, themedDrawable2.getBounds().centerX(), themedDrawable2.getBounds().centerY());
                        themedDrawable2.draw(canvas);
                        canvas.restore();
                        if (this.drawSideButton2 == 5) {
                            Drawable themedDrawable3 = getThemedDrawable("drawableMoreIcon");
                            int intrinsicWidth2 = themedDrawable3.getIntrinsicWidth() / 2;
                            int intrinsicHeight2 = themedDrawable3.getIntrinsicHeight() / 2;
                            themedDrawable3.setBounds(dp9 - intrinsicWidth2, dp10 - intrinsicHeight2, dp9 + intrinsicWidth2, dp10 + intrinsicHeight2);
                            BaseCell.setDrawableBounds(themedDrawable3, this.sideStartX + AndroidUtilities.dp(4.0f), this.sideStartY + AndroidUtilities.dp(34.0f));
                            themedDrawable3.draw(canvas);
                        }
                    } else {
                        int dp11 = (int) (this.sideStartX + AndroidUtilities.dp(16.0f));
                        int dp12 = (int) (this.sideStartY + AndroidUtilities.dp(16.0f));
                        Drawable themedDrawable4 = getThemedDrawable("drawableShareIcon");
                        int intrinsicWidth3 = themedDrawable4.getIntrinsicWidth() / 2;
                        int intrinsicHeight3 = themedDrawable4.getIntrinsicHeight() / 2;
                        themedDrawable4.setBounds(dp11 - intrinsicWidth3, dp12 - intrinsicHeight3, dp11 + intrinsicWidth3, dp12 + intrinsicHeight3);
                        BaseCell.setDrawableBounds(themedDrawable4, this.sideStartX + AndroidUtilities.dp(4.0f), this.sideStartY + AndroidUtilities.dp(4.0f));
                        themedDrawable4.draw(canvas);
                    }
                }
            }
        }
    }

    public void setTimeAlpha(float f) {
        this.timeAlpha = f;
    }

    public float getTimeAlpha() {
        return this.timeAlpha;
    }

    public int getBackgroundDrawableLeft() {
        int dp;
        int dp2;
        int i;
        MessageObject messageObject = getMessageObject();
        if (messageObject != null && messageObject.isOutOwner()) {
            if (this.isRoundVideo) {
                return (this.layoutWidth - this.backgroundWidth) - ((int) ((1.0f - getVideoTranscriptionProgress()) * AndroidUtilities.dp(9.0f)));
            }
            return (this.layoutWidth - this.backgroundWidth) - (this.mediaBackground ? AndroidUtilities.dp(9.0f) : 0);
        }
        if (this.isRoundVideo) {
            if ((this.isChat || (messageObject != null && (messageObject.isRepostPreview || messageObject.forceAvatar))) && this.isAvatarVisible) {
                r1 = 48;
            }
            dp = AndroidUtilities.dp(r1 + 3) + ((int) (AndroidUtilities.dp(6.0f) * (1.0f - getVideoTranscriptionProgress())));
        } else {
            if ((this.isChat || (messageObject != null && (messageObject.isRepostPreview || messageObject.forceAvatar))) && this.isAvatarVisible) {
                r1 = 48;
            }
            dp = AndroidUtilities.dp(r1 + (this.mediaBackground ? 9 : 3));
        }
        MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
        if (groupedMessages != null && !groupedMessages.isDocuments && (i = this.currentPosition.leftSpanOffset) != 0) {
            dp += (int) Math.ceil((i / 1000.0f) * getGroupPhotosWidth());
        }
        if (this.isRoundVideo) {
            if (!this.drawPinnedBottom) {
                return dp;
            }
            dp2 = (int) (AndroidUtilities.dp(6.0f) * (1.0f - getVideoTranscriptionProgress()));
        } else if (this.mediaBackground || !this.drawPinnedBottom) {
            return dp;
        } else {
            dp2 = AndroidUtilities.dp(6.0f);
        }
        return dp + dp2;
    }

    public int getBackgroundDrawableRight() {
        int dp;
        int backgroundDrawableLeft;
        MessageObject messageObject;
        MessageObject messageObject2;
        int i = this.backgroundWidth;
        if (this.isRoundVideo) {
            dp = i - ((int) (getVideoTranscriptionProgress() * AndroidUtilities.dp(3.0f)));
            if (this.drawPinnedBottom && (messageObject2 = this.currentMessageObject) != null && messageObject2.isOutOwner()) {
                dp = (int) (dp - (AndroidUtilities.dp(6.0f) * (1.0f - getVideoTranscriptionProgress())));
            }
            if (this.drawPinnedBottom && ((messageObject = this.currentMessageObject) == null || !messageObject.isOutOwner())) {
                dp = (int) (dp - (AndroidUtilities.dp(6.0f) * (1.0f - getVideoTranscriptionProgress())));
            }
            backgroundDrawableLeft = getBackgroundDrawableLeft();
        } else {
            dp = i - (this.mediaBackground ? 0 : AndroidUtilities.dp(3.0f));
            if (!this.mediaBackground && this.drawPinnedBottom) {
                dp -= AndroidUtilities.dp(6.0f);
            }
            backgroundDrawableLeft = getBackgroundDrawableLeft();
        }
        return backgroundDrawableLeft + dp;
    }

    public int getBackgroundDrawableTop() {
        MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
        int dp = ((groupedMessagePosition == null || (groupedMessagePosition.flags & 4) != 0) ? 0 : 0 - AndroidUtilities.dp(3.0f)) + (this.drawPinnedTop ? 0 : AndroidUtilities.dp(1.0f));
        return (this.mediaBackground || !this.drawPinnedTop) ? dp : dp - AndroidUtilities.dp(1.0f);
    }

    public int getBackgroundDrawableBottom() {
        int i;
        MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
        int i2 = 0;
        if (groupedMessagePosition != null) {
            int i3 = 4;
            i = (groupedMessagePosition.flags & 4) == 0 ? AndroidUtilities.dp(3.0f) + 0 : 0;
            if ((this.currentPosition.flags & 8) == 0) {
                MessageObject messageObject = this.currentMessageObject;
                if (messageObject != null && messageObject.isOutOwner()) {
                    i3 = 3;
                }
                i += AndroidUtilities.dp(i3);
            }
        } else {
            i = 0;
        }
        boolean z = this.drawPinnedBottom;
        if (!z || !this.drawPinnedTop) {
            if (z) {
                i2 = AndroidUtilities.dp(1.0f);
            } else {
                i2 = AndroidUtilities.dp(2.0f);
            }
        }
        int backgroundDrawableTop = ((getBackgroundDrawableTop() + this.layoutHeight) - i2) + i;
        if (this.mediaBackground) {
            return backgroundDrawableTop;
        }
        if (this.drawPinnedTop) {
            backgroundDrawableTop += AndroidUtilities.dp(1.0f);
        }
        return this.drawPinnedBottom ? backgroundDrawableTop + AndroidUtilities.dp(1.0f) : backgroundDrawableTop;
    }

    /* JADX WARN: Removed duplicated region for block: B:36:0x008d  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void drawBackground(Canvas canvas, int i, int i2, int i3, int i4, boolean z, boolean z2, boolean z3, int i5) {
        int i6;
        int i7;
        Theme.MessageDrawable messageDrawable;
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && messageObject.isOutOwner()) {
            if (!this.mediaBackground && !z2) {
                this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable(z3 ? "drawableMsgOutSelected" : "drawableMsgOut");
            } else {
                this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable(z3 ? "drawableMsgOutMediaSelected" : "drawableMsgOutMedia");
            }
        } else if (!this.mediaBackground && !z2) {
            this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable(z3 ? "drawableMsgInSelected" : "drawableMsgIn");
        } else {
            this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable(z3 ? "drawableMsgInMediaSelected" : "drawableMsgInMedia");
        }
        int i8 = this.parentWidth;
        int i9 = this.parentHeight;
        if (i9 == 0) {
            i8 = getParentWidth();
            i9 = AndroidUtilities.displaySize.y;
            if (getParent() instanceof View) {
                View view = (View) getParent();
                int measuredWidth = view.getMeasuredWidth();
                i7 = view.getMeasuredHeight();
                i6 = measuredWidth;
                messageDrawable = this.currentBackgroundDrawable;
                if (messageDrawable != null) {
                    messageDrawable.setTop(i5, i6, i7, (int) this.parentViewTopOffset, this.blurredViewTopOffset, this.blurredViewBottomOffset, z, z2);
                    Theme.MessageDrawable messageDrawable2 = this.currentBackgroundDrawable;
                    MessageObject messageObject2 = this.currentMessageObject;
                    messageDrawable2.setBotButtonsBottom(messageObject2 != null && messageObject2.hasInlineBotButtons());
                    Drawable shadowDrawable = this.currentBackgroundDrawable.getShadowDrawable();
                    if (shadowDrawable != null) {
                        shadowDrawable.setAlpha((int) (getAlpha() * 255.0f));
                        shadowDrawable.setBounds(i, i2, i3, i4);
                        shadowDrawable.draw(canvas);
                        shadowDrawable.setAlpha(255);
                    }
                    this.currentBackgroundDrawable.setAlpha((int) (getAlpha() * 255.0f));
                    this.currentBackgroundDrawable.setBounds(i, i2, i3, i4);
                    this.currentBackgroundDrawable.drawCached(canvas, this.backgroundCacheParams);
                    this.currentBackgroundDrawable.setAlpha(255);
                }
                animateCheckboxTranslation();
            }
        }
        i6 = i8;
        i7 = i9;
        messageDrawable = this.currentBackgroundDrawable;
        if (messageDrawable != null) {
        }
        animateCheckboxTranslation();
    }

    public boolean hasNameLayout() {
        if (!this.drawNameLayout || this.nameLayout == null) {
            if (this.drawForwardedName) {
                CachedStaticLayout[] cachedStaticLayoutArr = this.forwardedNameLayout;
                if (cachedStaticLayoutArr[0] != null && cachedStaticLayoutArr[1] != null) {
                    MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
                    if (groupedMessagePosition == null) {
                        return true;
                    }
                    if (groupedMessagePosition.minY == 0 && groupedMessagePosition.minX == 0) {
                        return true;
                    }
                }
            }
            return this.replyNameLayout != null || this.drawTopic;
        }
        return true;
    }

    public boolean isDrawNameLayout() {
        return this.drawNameLayout && this.nameLayout != null;
    }

    public boolean isDrawTopic() {
        return this.drawTopic;
    }

    public float getDrawTopicHeight() {
        MessageTopicButton messageTopicButton = this.topicButton;
        if (messageTopicButton != null) {
            return messageTopicButton.height();
        }
        return 0.0f;
    }

    public boolean isAdminLayoutChanged() {
        return !TextUtils.equals(this.lastPostAuthor, this.currentMessageObject.messageOwner.post_author);
    }

    /* JADX WARN: Code restructure failed: missing block: B:696:0x10dc, code lost:
        if (r6.type == 0) goto L543;
     */
    /* JADX WARN: Code restructure failed: missing block: B:698:0x10e4, code lost:
        if (android.text.TextUtils.isEmpty(r6.caption) == false) goto L543;
     */
    /* JADX WARN: Code restructure failed: missing block: B:700:0x10f2, code lost:
        if ((org.telegram.messenger.MessageObject.getMedia(r40.currentMessageObject.replyMessageObject.messageOwner) instanceof org.telegram.tgnet.TLRPC$TL_messageMediaGame) != false) goto L549;
     */
    /* JADX WARN: Code restructure failed: missing block: B:702:0x1100, code lost:
        if ((org.telegram.messenger.MessageObject.getMedia(r40.currentMessageObject.replyMessageObject.messageOwner) instanceof org.telegram.tgnet.TLRPC$TL_messageMediaInvoice) != false) goto L549;
     */
    /* JADX WARN: Code restructure failed: missing block: B:721:0x1165, code lost:
        if (r6.type == 0) goto L568;
     */
    /* JADX WARN: Code restructure failed: missing block: B:723:0x116d, code lost:
        if (android.text.TextUtils.isEmpty(r6.caption) == false) goto L568;
     */
    /* JADX WARN: Code restructure failed: missing block: B:725:0x117b, code lost:
        if ((org.telegram.messenger.MessageObject.getMedia(r40.currentMessageObject.replyMessageObject.messageOwner) instanceof org.telegram.tgnet.TLRPC$TL_messageMediaGame) != false) goto L574;
     */
    /* JADX WARN: Code restructure failed: missing block: B:727:0x1189, code lost:
        if ((org.telegram.messenger.MessageObject.getMedia(r40.currentMessageObject.replyMessageObject.messageOwner) instanceof org.telegram.tgnet.TLRPC$TL_messageMediaInvoice) != false) goto L574;
     */
    /* JADX WARN: Removed duplicated region for block: B:1007:? A[RETURN, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:216:0x053a  */
    /* JADX WARN: Removed duplicated region for block: B:220:0x0564  */
    /* JADX WARN: Removed duplicated region for block: B:230:0x058a  */
    /* JADX WARN: Removed duplicated region for block: B:276:0x06b3  */
    /* JADX WARN: Removed duplicated region for block: B:277:0x06b5  */
    /* JADX WARN: Removed duplicated region for block: B:280:0x06c0  */
    /* JADX WARN: Removed duplicated region for block: B:284:0x06dd  */
    /* JADX WARN: Removed duplicated region for block: B:369:0x082e  */
    /* JADX WARN: Removed duplicated region for block: B:370:0x083c  */
    /* JADX WARN: Removed duplicated region for block: B:518:0x0c1c  */
    /* JADX WARN: Removed duplicated region for block: B:529:0x0c6c  */
    /* JADX WARN: Removed duplicated region for block: B:539:0x0ccc  */
    /* JADX WARN: Removed duplicated region for block: B:542:0x0cd3  */
    /* JADX WARN: Removed duplicated region for block: B:574:0x0db7  */
    /* JADX WARN: Removed duplicated region for block: B:593:0x0de5  */
    /* JADX WARN: Removed duplicated region for block: B:609:0x0e3e  */
    /* JADX WARN: Removed duplicated region for block: B:611:0x0e4e  */
    /* JADX WARN: Removed duplicated region for block: B:629:0x0ea3  */
    /* JADX WARN: Removed duplicated region for block: B:632:0x0eaf  */
    /* JADX WARN: Removed duplicated region for block: B:998:0x190a  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void drawNamesLayout(Canvas canvas, float f) {
        int i;
        float f2;
        TLRPC$User tLRPC$User;
        float f3;
        int i2;
        MessageObject.GroupedMessages groupedMessages;
        int i3;
        int i4;
        int dp;
        float f4;
        int themedColor;
        int i5;
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        int i6;
        int i7;
        int i8;
        int i9;
        boolean z;
        boolean z2;
        float f5;
        int i10;
        boolean z3;
        float f6;
        Canvas canvas2;
        int i11;
        int dp2;
        int i12;
        float f7;
        float f8;
        float f9;
        float backgroundDrawableRight;
        float f10;
        float f11;
        MessageObject.GroupedMessagePosition groupedMessagePosition2;
        int parentWidth;
        int i13;
        MessageObject.GroupedMessagePosition groupedMessagePosition3;
        float f12;
        float f13;
        float f14;
        int color;
        int i14;
        Canvas canvas3;
        float f15;
        float f16;
        int i15;
        float f17;
        float f18;
        int i16;
        MessageObject messageObject;
        TLRPC$Message tLRPC$Message;
        int i17;
        int i18;
        CachedStaticLayout cachedStaticLayout;
        ChatMessageCellDelegate chatMessageCellDelegate;
        float f19;
        MessageObject.GroupedMessagePosition groupedMessagePosition4;
        int dp3;
        int extraTextX;
        int i19;
        float dp4;
        float dp5;
        TransitionParams transitionParams;
        int dp6;
        float f20;
        MessageObject.GroupedMessagePosition groupedMessagePosition5;
        float f21;
        int i20;
        int alpha;
        float f22;
        int i21;
        float f23;
        int i22;
        MessageTopicButton messageTopicButton;
        float f24;
        float f25;
        boolean z4;
        ForwardBackground forwardBackground;
        int i23;
        float f26;
        long peerDialogId;
        int colorId;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        int i24;
        MessageTopicButton messageTopicButton2;
        float f27;
        MessageObject.GroupedMessages groupedMessages2;
        long elapsedRealtime = SystemClock.elapsedRealtime();
        long j = elapsedRealtime - this.lastNamesAnimationTime;
        if (j > 17) {
            j = 17;
        }
        this.lastNamesAnimationTime = elapsedRealtime;
        if (this.currentMessageObject.deleted && !this.drawingToBitmap && (groupedMessages2 = this.currentMessagesGroup) != null && groupedMessages2.messages.size() >= 1) {
            return;
        }
        if (f != 1.0f) {
            this.rect.set(0.0f, 0.0f, getMaxNameWidth(), getMeasuredHeight());
            i = canvas.saveLayerAlpha(this.rect, (int) (f * 255.0f), 31);
        } else {
            i = Integer.MIN_VALUE;
        }
        if (!this.isRoundVideo || this.hasLinkPreview) {
            f2 = 1.0f;
        } else {
            float videoTranscriptionProgress = (1.0f - getVideoTranscriptionProgress()) * 1.0f;
            TransitionParams transitionParams2 = this.transitionParams;
            if (transitionParams2.animatePlayingRound) {
                if (this.isPlayingRound) {
                    f27 = 1.0f - transitionParams2.animateChangeProgress;
                } else {
                    f27 = transitionParams2.animateChangeProgress;
                }
                videoTranscriptionProgress *= f27;
            } else if (this.isPlayingRound) {
                f2 = 0.0f;
            }
            f2 = videoTranscriptionProgress;
        }
        boolean z5 = this.drawNameLayout;
        if ((z5 || this.transitionParams.animateDrawNameLayout) && this.nameLayout != null) {
            TransitionParams transitionParams3 = this.transitionParams;
            float f28 = !transitionParams3.animateDrawNameLayout ? 1.0f : z5 ? transitionParams3.animateChangeProgress : 1.0f - transitionParams3.animateChangeProgress;
            canvas.save();
            if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                Theme.chat_namePaint.setColor(getThemedColor(Theme.key_chat_stickerNameText));
                if (this.currentMessageObject.isOutOwner()) {
                    this.nameX = AndroidUtilities.dp(28.0f);
                } else {
                    this.nameX = this.backgroundDrawableLeft + this.transitionParams.deltaLeft + this.backgroundDrawableRight + AndroidUtilities.dp(22.0f);
                }
                this.nameY = this.layoutHeight - AndroidUtilities.dp(38.0f);
                float f29 = (this.currentMessageObject.isOut() && (this.checkBoxVisible || this.checkBoxAnimationInProgress)) ? 1.0f - this.checkBoxAnimationProgress : 1.0f;
                this.rect.set(((int) this.nameX) - AndroidUtilities.dp(12.0f), ((int) this.nameY) - AndroidUtilities.dp(5.0f), ((int) this.nameX) + AndroidUtilities.dp(12.0f) + this.nameWidth, ((int) this.nameY) + AndroidUtilities.dp(22.0f));
                applyServiceShaderMatrix();
                int alpha2 = getThemedPaint("paintChatActionBackground").getAlpha();
                getThemedPaint("paintChatActionBackground").setAlpha((int) (alpha2 * f29 * f2));
                canvas.drawRoundRect(this.rect, AndroidUtilities.dp(6.0f), AndroidUtilities.dp(6.0f), getThemedPaint("paintChatActionBackground"));
                if (hasGradientService()) {
                    int alpha3 = Theme.chat_actionBackgroundGradientDarkenPaint.getAlpha();
                    Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha((int) (alpha3 * this.timeAlpha * f2));
                    canvas.drawRoundRect(this.rect, AndroidUtilities.dp(6.0f), AndroidUtilities.dp(6.0f), Theme.chat_actionBackgroundGradientDarkenPaint);
                    Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha(alpha3);
                }
                if (this.viaSpan1 != null || this.viaSpan2 != null) {
                    int alpha4 = (((int) (Color.alpha(getThemedColor(i9)) * f29)) << 24) | (getThemedColor(Theme.key_chat_stickerViaBotNameText) & 16777215);
                    TypefaceSpan typefaceSpan = this.viaSpan1;
                    if (typefaceSpan != null) {
                        typefaceSpan.setColor(alpha4);
                    }
                    TypefaceSpan typefaceSpan2 = this.viaSpan2;
                    if (typefaceSpan2 != null) {
                        typefaceSpan2.setColor(alpha4);
                    }
                }
                this.nameX -= this.nameOffsetX;
                getThemedPaint("paintChatActionBackground").setAlpha(alpha2);
            } else {
                if (this.mediaBackground || this.currentMessageObject.isOutOwner()) {
                    this.nameX = (((this.backgroundDrawableLeft + this.transitionParams.deltaLeft) + AndroidUtilities.dp(11.0f)) - this.nameOffsetX) + getExtraTextX();
                } else {
                    this.nameX = (((this.backgroundDrawableLeft + this.transitionParams.deltaLeft) + AndroidUtilities.dp((this.mediaBackground || !this.drawPinnedBottom) ? 17.0f : 11.0f)) - this.nameOffsetX) + getExtraTextX();
                }
                if (this.currentMessageObject.isOutOwner() && ChatObject.isChannel(this.currentChat)) {
                    Theme.MessageDrawable messageDrawable = this.currentBackgroundDrawable;
                    if (messageDrawable != null && messageDrawable.hasGradient()) {
                        Theme.chat_namePaint.setColor(getThemedColor(Theme.key_chat_messageTextOut));
                    } else {
                        Theme.chat_namePaint.setColor(getThemedColor(Theme.key_chat_outForwardedNameText));
                    }
                } else if (this.currentMessageObject.isOutOwner()) {
                    Theme.chat_namePaint.setColor(getThemedColor(Theme.key_chat_outForwardedNameText));
                } else {
                    MessageObject messageObject2 = this.currentMessageObject;
                    if (messageObject2.overrideLinkColor >= 0 || ((messageObject2.isFromUser() && this.currentUser != null) || (this.currentMessageObject.isFromChannel() && this.currentChat != null))) {
                        MessageObject messageObject3 = this.currentMessageObject;
                        int i25 = messageObject3.overrideLinkColor;
                        if (i25 < 0) {
                            if (messageObject3.isFromUser() && (tLRPC$User = this.currentUser) != null) {
                                i25 = UserObject.getColorId(tLRPC$User);
                            } else {
                                i25 = ChatObject.getColorId(this.currentChat);
                            }
                        }
                        if (i25 < 7) {
                            Theme.chat_namePaint.setColor(getThemedColor(Theme.keys_avatar_nameInMessage[i25]));
                        } else {
                            MessagesController.PeerColors peerColors = MessagesController.getInstance(this.currentAccount).peerColors;
                            MessagesController.PeerColor color2 = peerColors != null ? peerColors.getColor(i25) : null;
                            if (color2 != null) {
                                Theme.chat_namePaint.setColor(color2.getColor(0, this.resourcesProvider));
                            } else {
                                Theme.chat_namePaint.setColor(getThemedColor(Theme.key_chat_inForwardedNameText));
                            }
                        }
                    } else {
                        Theme.chat_namePaint.setColor(getThemedColor(Theme.key_chat_inForwardedNameText));
                    }
                }
                this.nameY = AndroidUtilities.dp(this.drawPinnedTop ? 9.0f : 10.0f);
                if (this.viaSpan1 != null || this.viaSpan2 != null) {
                    int themedColor2 = getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outViaBotNameText : Theme.key_chat_inViaBotNameText);
                    TypefaceSpan typefaceSpan3 = this.viaSpan1;
                    if (typefaceSpan3 != null) {
                        typefaceSpan3.setColor(themedColor2);
                    }
                    TypefaceSpan typefaceSpan4 = this.viaSpan2;
                    if (typefaceSpan4 != null) {
                        typefaceSpan4.setColor(themedColor2);
                    }
                }
            }
            MessageObject.GroupedMessages groupedMessages3 = this.currentMessagesGroup;
            if (groupedMessages3 != null) {
                MessageObject.GroupedMessages.TransitionParams transitionParams4 = groupedMessages3.transitionParams;
                if (transitionParams4.backgroundChangeBounds) {
                    this.nameX += transitionParams4.offsetLeft;
                    this.nameY += transitionParams4.offsetTop - getTranslationY();
                }
            }
            this.nameX += this.animationOffsetX;
            float f30 = this.nameY;
            TransitionParams transitionParams5 = this.transitionParams;
            this.nameY = f30 + transitionParams5.deltaTop;
            if (!transitionParams5.animateSign) {
                f3 = this.nameX;
            } else {
                f3 = this.transitionParams.animateNameX + ((this.nameX - this.transitionParams.animateNameX) * this.transitionParams.animateChangeProgress);
            }
            if (!this.currentMessageObject.isSponsored()) {
                int multAlpha = Theme.multAlpha(Theme.chat_namePaint.getColor(), 0.12f);
                Drawable drawable = this.nameLayoutSelector;
                if (drawable == null) {
                    this.nameLayoutSelectorColor = multAlpha;
                    Drawable createRadSelectorDrawable = Theme.createRadSelectorDrawable(multAlpha, 6, 6);
                    this.nameLayoutSelector = createRadSelectorDrawable;
                    createRadSelectorDrawable.setCallback(this);
                } else if (this.nameLayoutSelectorColor != multAlpha) {
                    this.nameLayoutSelectorColor = multAlpha;
                    Theme.setSelectorDrawableColor(drawable, multAlpha, true);
                }
                this.nameLayoutSelector.setBounds((int) ((this.nameOffsetX + f3) - AndroidUtilities.dp(4.0f)), (int) (this.nameY - AndroidUtilities.dp(1.33f)), (int) (this.nameOffsetX + f3 + (this.viaNameWidth > 0 ? i6 - AndroidUtilities.dp(32.0f) : this.nameLayoutWidth) + AndroidUtilities.dp(4.0f)), (int) (this.nameY + this.nameLayout.layout.getHeight() + AndroidUtilities.dp(1.33f)));
                int i26 = (int) (f28 * 255.0f);
                this.nameLayoutSelector.setAlpha(i26);
                this.nameLayoutSelector.draw(canvas);
                if (this.currentNameStatus != null) {
                    Drawable drawable2 = this.nameStatusSelector;
                    if (drawable2 == null) {
                        this.nameStatusSelectorColor = multAlpha;
                        Drawable createRadSelectorDrawable2 = Theme.createRadSelectorDrawable(multAlpha, 6, 6);
                        this.nameStatusSelector = createRadSelectorDrawable2;
                        createRadSelectorDrawable2.setCallback(this);
                    } else if (this.nameStatusSelectorColor != multAlpha) {
                        this.nameStatusSelectorColor = multAlpha;
                        Theme.setSelectorDrawableColor(drawable2, multAlpha, true);
                    }
                    boolean z6 = this.currentNameStatus instanceof Drawable;
                    float f31 = z6 ? 1.5f : 0.0f;
                    float f32 = z6 ? -5.0f : 0.0f;
                    float f33 = 3.33f - f31;
                    i2 = i;
                    this.nameStatusSelector.setBounds((int) (this.nameOffsetX + f3 + (this.viaNameWidth > 0 ? i7 - AndroidUtilities.dp(32.0f) : this.nameLayoutWidth)), (int) (this.nameY - AndroidUtilities.dp(f33)), (int) (this.nameOffsetX + f3 + (this.viaNameWidth > 0 ? i8 - AndroidUtilities.dp(32.0f) : this.nameLayoutWidth) + AndroidUtilities.dp(f32 + 24.0f)), (int) (this.nameY + this.nameLayout.layout.getHeight() + AndroidUtilities.dp(f33)));
                    this.nameStatusSelector.setAlpha(i26);
                    this.nameStatusSelector.draw(canvas);
                    canvas.translate(f3, this.nameY);
                    int alpha5 = Theme.chat_namePaint.getAlpha();
                    Theme.chat_namePaint.setAlpha((int) (alpha5 * f28));
                    this.nameLayout.draw(canvas);
                    Theme.chat_namePaint.setAlpha(alpha5);
                    canvas.restore();
                    groupedMessages = this.currentMessagesGroup;
                    if (groupedMessages == null && !groupedMessages.isDocuments) {
                        int groupPhotosWidth = getGroupPhotosWidth();
                        int i27 = 0;
                        for (int i28 = 0; i28 < this.currentMessagesGroup.posArray.size(); i28++) {
                            if (this.currentMessagesGroup.posArray.get(i28).minY != 0) {
                                break;
                            }
                            double d = i27;
                            double ceil = Math.ceil(((groupedMessagePosition.pw + groupedMessagePosition.leftSpanOffset) / 1000.0f) * groupPhotosWidth);
                            Double.isNaN(d);
                            i27 = (int) (d + ceil);
                        }
                        if (!this.mediaBackground && this.currentMessageObject.isOutOwner()) {
                            i5 = (this.backgroundDrawableLeft + i27) - AndroidUtilities.dp(6.0f);
                        } else {
                            i5 = this.backgroundDrawableLeft + i27;
                        }
                        f4 = i5 - (getExtraTextX() + AndroidUtilities.dp(8.0f));
                        if (!this.currentMessageObject.isOutOwner()) {
                            f4 -= AndroidUtilities.dp(48.0f);
                        }
                    } else {
                        if (!this.currentMessageObject.shouldDrawWithoutBackground()) {
                            if (this.currentMessageObject.isOutOwner()) {
                                i3 = AndroidUtilities.dp(39.0f);
                                i4 = this.nameWidth;
                            } else {
                                f4 = this.backgroundDrawableLeft + this.transitionParams.deltaLeft + this.backgroundDrawableRight + AndroidUtilities.dp(33.0f) + this.nameWidth;
                            }
                        } else if (!this.mediaBackground && this.currentMessageObject.isOutOwner()) {
                            dp = (this.backgroundDrawableLeft + this.backgroundDrawableRight) - AndroidUtilities.dp(6.0f);
                            f4 = dp;
                        } else {
                            i3 = this.backgroundDrawableLeft;
                            i4 = this.backgroundDrawableRight;
                        }
                        dp = i3 + i4;
                        f4 = dp;
                    }
                    float f34 = f4 + this.transitionParams.deltaRight;
                    if (this.adminLayout != null) {
                        if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                            themedColor = getThemedColor(Theme.key_chat_stickerReplyNameText);
                        } else if (this.currentMessageObject.isOutOwner()) {
                            themedColor = getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outAdminSelectedText : Theme.key_chat_outAdminText);
                        } else {
                            themedColor = getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inAdminSelectedText : Theme.key_chat_inAdminText);
                        }
                        Theme.chat_adminPaint.setColor(themedColor);
                        canvas.save();
                        float dp7 = (f34 - AndroidUtilities.dp(11.0f)) - this.adminLayout.getLineWidth(0);
                        float dp8 = this.nameY + AndroidUtilities.dp(0.5f);
                        BoostCounterSpan boostCounterSpan = this.boostCounterSpan;
                        if (boostCounterSpan != null && this.boostCounterBounds != null) {
                            float dp9 = (f34 - AndroidUtilities.dp(boostCounterSpan.isRtl ? 5.0f : 7.5f)) - this.boostCounterSpan.getWidth();
                            this.boostCounterBounds.set(dp9, dp8, this.boostCounterSpan.getWidth() + dp9, this.adminLayout.getHeight() + dp8);
                            int multAlpha2 = Theme.multAlpha(Theme.chat_namePaint.getColor(), 0.12f);
                            Drawable drawable3 = this.boostCounterLayoutSelector;
                            if (drawable3 == null) {
                                this.boostCounterSelectorColor = multAlpha2;
                                Drawable createRadSelectorDrawable3 = Theme.createRadSelectorDrawable(multAlpha2, 6, 6);
                                this.boostCounterLayoutSelector = createRadSelectorDrawable3;
                                createRadSelectorDrawable3.setCallback(this);
                            } else if (this.boostCounterSelectorColor != multAlpha2) {
                                this.boostCounterSelectorColor = multAlpha2;
                                Theme.setSelectorDrawableColor(drawable3, multAlpha2, true);
                            }
                            RectF rectF = this.boostCounterBounds;
                            this.boostCounterLayoutSelector.setBounds(((int) this.boostCounterBounds.left) - AndroidUtilities.dp(4.0f), (int) rectF.top, (int) rectF.right, (int) rectF.bottom);
                            this.boostCounterLayoutSelector.setAlpha((int) (f28 * 255.0f));
                            this.boostCounterLayoutSelector.draw(canvas);
                        }
                        canvas.translate(dp7, this.nameY + AndroidUtilities.dp(0.5f));
                        if (this.transitionParams.animateSign) {
                            Theme.chat_adminPaint.setAlpha((int) (Color.alpha(themedColor) * this.transitionParams.animateChangeProgress));
                        }
                        this.adminLayout.draw(canvas);
                        canvas.restore();
                        z = !this.drawForwardedName || this.currentMessageObject.type == 23;
                        z2 = this.replyNameLayout == null;
                        CachedStaticLayout[] cachedStaticLayoutArr = this.forwardedNameLayout;
                        int i29 = this.forwardedNameWidth;
                        if (this.transitionParams.animateForwardedLayout) {
                            f5 = 1.0f;
                        } else if (!this.currentMessageObject.needDrawForwarded()) {
                            TransitionParams transitionParams6 = this.transitionParams;
                            cachedStaticLayoutArr = transitionParams6.animatingForwardedNameLayout;
                            f5 = 1.0f - transitionParams6.animateChangeProgress;
                            i29 = transitionParams6.animateForwardNameWidth;
                            z = true;
                        } else {
                            f5 = this.transitionParams.animateChangeProgress;
                        }
                        if (z || cachedStaticLayoutArr[0] == null || cachedStaticLayoutArr[1] == null || !((groupedMessagePosition5 = this.currentPosition) == null || (groupedMessagePosition5.minY == 0 && groupedMessagePosition5.minX == 0))) {
                            i10 = -1;
                            z3 = true;
                            f6 = 0.0f;
                        } else {
                            MessageObject messageObject4 = this.currentMessageObject;
                            if (messageObject4.type == 5 || messageObject4.isAnyKindOfSticker()) {
                                Theme.chat_forwardNamePaint.setColor(getThemedColor(Theme.key_chat_stickerReplyNameText));
                                MessageObject messageObject5 = this.currentMessageObject;
                                if (messageObject5.type == 19) {
                                    if (messageObject5.isOutOwner()) {
                                        if (this.currentMessageObject.needDrawForwarded()) {
                                            float dp10 = this.backgroundDrawableLeft + AndroidUtilities.dp(11.0f) + getExtraTextX();
                                            this.forwardNameX = dp10;
                                            f25 = dp10 + this.transitionParams.deltaLeft;
                                        } else {
                                            f25 = this.transitionParams.animateForwardNameX;
                                        }
                                        f24 = f25 - Math.max(0.0f, (Math.max(AndroidUtilities.dp(14.0f) + i29, z2 ? Math.max(this.replyNameWidth, this.replyTextWidth) + AndroidUtilities.dp(14.0f) : 0) + f25) - AndroidUtilities.displaySize.x);
                                    } else {
                                        float f35 = 11.0f;
                                        if (this.currentMessageObject.needDrawForwarded()) {
                                            int i30 = this.backgroundDrawableLeft;
                                            if (!this.mediaBackground && !this.drawPinnedBottom) {
                                                f35 = 17.0f;
                                            }
                                            f24 = i30 + AndroidUtilities.dp(f35) + getExtraTextX();
                                            this.forwardNameX = f24;
                                        } else {
                                            f24 = this.transitionParams.animateForwardNameX;
                                        }
                                    }
                                    f21 = f24 - AndroidUtilities.dp(7.0f);
                                } else if (messageObject5.needDrawForwarded()) {
                                    if (this.currentMessageObject.isOutOwner()) {
                                        f21 = AndroidUtilities.dp(23.0f);
                                        this.forwardNameX = f21;
                                    } else {
                                        f21 = this.backgroundDrawableLeft + this.backgroundDrawableRight + AndroidUtilities.dp(17.0f);
                                        this.forwardNameX = f21;
                                    }
                                } else {
                                    f21 = this.transitionParams.animateForwardNameX;
                                }
                                if (!this.currentMessageObject.isVoiceTranscriptionOpen() && ((this.currentMessageObject.isOutOwner() && this.currentMessageObject.type == 5 && this.transitionParams.animatePlayingRound) || this.isPlayingRound)) {
                                    f21 -= AndroidUtilities.dp(78.0f) * (this.isPlayingRound ? this.transitionParams.animateChangeProgress : 1.0f - this.transitionParams.animateChangeProgress);
                                }
                                this.forwardNameY = AndroidUtilities.dp(12.0f) + ((!this.drawTopic || (messageTopicButton = this.topicButton) == null) ? 0 : messageTopicButton.height() + AndroidUtilities.dp(14.0f));
                                this.forwardHeight = AndroidUtilities.dp(4.0f) + (((int) Theme.chat_forwardNamePaint.getTextSize()) * 2);
                                int dp11 = i29 + AndroidUtilities.dp(14.0f);
                                if (z2) {
                                    int max = Math.max(dp11, Math.max(this.replyNameWidth, this.replyTextWidth) - AndroidUtilities.dp(4.0f)) + (((int) f21) - AndroidUtilities.dp(7.0f));
                                    i20 = max;
                                    this.rect.set(i22 - AndroidUtilities.dp(7.0f), this.forwardNameY - AndroidUtilities.dp(6.0f), max, this.forwardNameY + this.forwardHeight + AndroidUtilities.dp(6.0f) + AndroidUtilities.dp(41.0f));
                                    z3 = false;
                                } else {
                                    int i31 = (int) f21;
                                    this.rect.set(i31 - AndroidUtilities.dp(7.0f), this.forwardNameY - AndroidUtilities.dp(6.0f), (i31 - AndroidUtilities.dp(7.0f)) + dp11, this.forwardNameY + this.forwardHeight + AndroidUtilities.dp(6.0f));
                                    z3 = true;
                                    i20 = -1;
                                }
                                if (z2 || this.forwardBg == null) {
                                    applyServiceShaderMatrix(getMeasuredWidth(), this.backgroundHeight, getX(), this.viewTop);
                                    if (f5 == 1.0f && f2 == 1.0f) {
                                        alpha = -1;
                                    } else {
                                        alpha = getThemedPaint("paintChatActionBackground").getAlpha();
                                        getThemedPaint("paintChatActionBackground").setAlpha((int) (alpha * f5 * f2));
                                    }
                                    canvas.drawRoundRect(this.rect, AndroidUtilities.dp(6.0f), AndroidUtilities.dp(6.0f), getThemedPaint("paintChatActionBackground"));
                                    if (hasGradientService()) {
                                        if (f5 == 1.0f && f2 == 1.0f) {
                                            i21 = -1;
                                        } else {
                                            i21 = Theme.chat_actionBackgroundGradientDarkenPaint.getAlpha();
                                            Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha((int) (i21 * f5 * f2));
                                        }
                                        f22 = f21;
                                        canvas.drawRoundRect(this.rect, AndroidUtilities.dp(6.0f), AndroidUtilities.dp(6.0f), Theme.chat_actionBackgroundGradientDarkenPaint);
                                    } else {
                                        f22 = f21;
                                        i21 = -1;
                                    }
                                } else {
                                    applyServiceShaderMatrix(getMeasuredWidth(), this.backgroundHeight, getX() + f21, this.viewTop + this.forwardNameY);
                                    canvas.save();
                                    canvas.translate(f21, this.forwardNameY);
                                    float scale = this.forwardBg.bounce.getScale(0.02f);
                                    ForwardBackground forwardBackground2 = this.forwardBg;
                                    canvas.scale(scale, scale, forwardBackground2.cx, forwardBackground2.cy);
                                    if (f5 == 1.0f && f2 == 1.0f) {
                                        alpha = -1;
                                    } else {
                                        alpha = getThemedPaint("paintChatActionBackground").getAlpha();
                                        getThemedPaint("paintChatActionBackground").setAlpha((int) (alpha * f5 * f2));
                                    }
                                    canvas.drawPath(this.forwardBg.path, getThemedPaint("paintChatActionBackground"));
                                    if (hasGradientService()) {
                                        if (f5 == 1.0f && f2 == 1.0f) {
                                            i21 = -1;
                                        } else {
                                            i21 = Theme.chat_actionBackgroundGradientDarkenPaint.getAlpha();
                                            Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha((int) (i21 * f5 * f2));
                                        }
                                        canvas.drawPath(this.forwardBg.path, Theme.chat_actionBackgroundGradientDarkenPaint);
                                    } else {
                                        i21 = -1;
                                    }
                                    canvas.restore();
                                    f22 = f21;
                                }
                                if (alpha >= 0) {
                                    getThemedPaint("paintChatActionBackground").setAlpha(alpha);
                                }
                                if (i21 >= 0) {
                                    Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha(i21);
                                }
                                f23 = f22;
                            } else {
                                int dp12 = AndroidUtilities.dp(7.0f) + (this.drawNameLayout ? AndroidUtilities.dp(6.0f) + ((int) Theme.chat_namePaint.getTextSize()) : 0) + ((!this.drawTopic || (messageTopicButton2 = this.topicButton) == null) ? 0 : messageTopicButton2.height() + AndroidUtilities.dp((this.currentMessageObject.type != 0 ? 3 : 0) + 7));
                                this.forwardNameY = dp12;
                                if (!this.drawNameLayout && ((i24 = this.currentMessageObject.type) == 8 || i24 == 1 || i24 == 3 || i24 == 23)) {
                                    this.forwardNameY = dp12 + AndroidUtilities.dp(2.0f);
                                }
                                if (!this.drawNameLayout && this.currentMessageObject.type == 0 && !this.drawPinnedTop) {
                                    this.forwardNameY += AndroidUtilities.dp(2.0f);
                                }
                                this.forwardHeight = AndroidUtilities.dp(4.0f) + (((int) Theme.chat_forwardNamePaint.getTextSize()) * 2);
                                Theme.chat_forwardNamePaint.setColor(getThemedColor(this.hasPsaHint ? Theme.key_chat_inPsaNameText : Theme.key_chat_inForwardedNameText));
                                if (this.currentMessageObject.isOutOwner()) {
                                    Theme.chat_forwardNamePaint.setColor(getThemedColor(this.hasPsaHint ? Theme.key_chat_outPsaNameText : Theme.key_chat_outForwardedNameText));
                                } else if (!this.hasPsaHint) {
                                    MessageObject messageObject6 = this.currentMessageObject;
                                    if (messageObject6.messageOwner != null && (messageObject6.isStoryMedia() || ((tLRPC$MessageFwdHeader = this.currentMessageObject.messageOwner.fwd_from) != null && tLRPC$MessageFwdHeader.from_id != null))) {
                                        if (this.currentMessageObject.isStoryMedia()) {
                                            peerDialogId = DialogObject.getPeerDialogId(MessageObject.getMedia(this.currentMessageObject).peer);
                                        } else {
                                            peerDialogId = DialogObject.getPeerDialogId(this.currentMessageObject.messageOwner.fwd_from.from_id);
                                        }
                                        long j2 = peerDialogId;
                                        if (j2 < 0) {
                                            TLRPC$Chat chat = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(-j2));
                                            if (chat != null) {
                                                colorId = ChatObject.getColorId(chat);
                                                if (colorId >= 7) {
                                                    Theme.chat_forwardNamePaint.setColor(getThemedColor(Theme.keys_avatar_nameInMessage[colorId]));
                                                } else {
                                                    MessagesController.PeerColors peerColors2 = MessagesController.getInstance(this.currentAccount).peerColors;
                                                    MessagesController.PeerColor color3 = peerColors2 != null ? peerColors2.getColor(colorId) : null;
                                                    if (color3 != null) {
                                                        Theme.chat_forwardNamePaint.setColor(color3.getColor(0, this.resourcesProvider));
                                                    }
                                                }
                                            }
                                            colorId = 5;
                                            if (colorId >= 7) {
                                            }
                                        } else {
                                            TLRPC$User user = MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(j2));
                                            if (user != null) {
                                                colorId = UserObject.getColorId(user);
                                                if (colorId >= 7) {
                                                }
                                            }
                                            colorId = 5;
                                            if (colorId >= 7) {
                                            }
                                        }
                                    }
                                }
                                if (this.currentMessageObject.isOutOwner()) {
                                    if (this.currentMessageObject.needDrawForwarded()) {
                                        float dp13 = this.backgroundDrawableLeft + AndroidUtilities.dp(10.0f) + getExtraTextX();
                                        this.forwardNameX = dp13;
                                        f23 = dp13 + this.transitionParams.deltaLeft;
                                    } else {
                                        f23 = this.transitionParams.animateForwardNameX;
                                    }
                                } else if (this.currentMessageObject.needDrawForwarded()) {
                                    f23 = this.backgroundDrawableLeft + AndroidUtilities.dp((this.mediaBackground || this.drawPinnedBottom) ? 10.0f : 16.0f) + getExtraTextX();
                                    this.forwardNameX = f23;
                                } else {
                                    f23 = this.transitionParams.animateForwardNameX;
                                }
                                z3 = true;
                                i20 = -1;
                            }
                            if (this.transitionParams.animateForwardedLayout && this.currentBackgroundDrawable != null && this.currentMessagesGroup == null) {
                                MessageObject messageObject7 = this.currentMessageObject;
                                if (messageObject7.type != 5 && !messageObject7.isAnyKindOfSticker()) {
                                    Rect bounds = this.currentBackgroundDrawable.getBounds();
                                    canvas.save();
                                    if (this.currentMessageObject.isOutOwner() && !this.mediaBackground && !this.pinnedBottom) {
                                        canvas.clipRect(bounds.left + AndroidUtilities.dp(4.0f), bounds.top + AndroidUtilities.dp(4.0f), bounds.right - AndroidUtilities.dp(10.0f), bounds.bottom - AndroidUtilities.dp(4.0f));
                                    } else {
                                        canvas.clipRect(bounds.left + AndroidUtilities.dp(4.0f), bounds.top + AndroidUtilities.dp(4.0f), bounds.right - AndroidUtilities.dp(4.0f), bounds.bottom - AndroidUtilities.dp(4.0f));
                                    }
                                    z4 = true;
                                    canvas.save();
                                    canvas.translate(f23, this.forwardNameY);
                                    forwardBackground = this.forwardBg;
                                    if (forwardBackground != null) {
                                        float scale2 = forwardBackground.bounce.getScale(0.02f);
                                        ForwardBackground forwardBackground3 = this.forwardBg;
                                        canvas.scale(scale2, scale2, forwardBackground3.cx, forwardBackground3.cy);
                                        MessageObject messageObject8 = this.currentMessageObject;
                                        if (messageObject8.type == 5 || messageObject8.isAnyKindOfSticker()) {
                                            this.forwardBg.setColor(Theme.multAlpha(Theme.getColor(Theme.key_listSelector, this.resourcesProvider), 1.35f));
                                        } else {
                                            this.forwardBg.setColor(Theme.multAlpha(Theme.chat_forwardNamePaint.getColor(), 0.15f));
                                        }
                                        this.forwardBg.draw(canvas);
                                    }
                                    for (i23 = 0; i23 < 2; i23++) {
                                        canvas.save();
                                        canvas.translate(-this.forwardNameOffsetX[i23], ((this.forwardHeight / 2.0f) + AndroidUtilities.dp(1.33f)) * i23);
                                        if (f5 != 1.0f || f2 != 1.0f) {
                                            int alpha6 = cachedStaticLayoutArr[i23].getPaint().getAlpha();
                                            cachedStaticLayoutArr[i23].getPaint().setAlpha((int) (alpha6 * f5 * f2));
                                            cachedStaticLayoutArr[i23].draw(canvas);
                                            cachedStaticLayoutArr[i23].getPaint().setAlpha(alpha6);
                                        } else {
                                            cachedStaticLayoutArr[i23].draw(canvas);
                                        }
                                        canvas.restore();
                                    }
                                    canvas.restore();
                                    if (z4) {
                                        canvas.restore();
                                    }
                                    if (this.hasPsaHint) {
                                        f6 = f23;
                                    } else {
                                        if (this.psaButtonVisible || this.psaButtonProgress > 0.0f) {
                                            Drawable drawable4 = Theme.chat_psaHelpDrawable[this.currentMessageObject.isOutOwner() ? 1 : 0];
                                            int intrinsicWidth = this.psaHelpX + (drawable4.getIntrinsicWidth() / 2);
                                            int intrinsicHeight = this.psaHelpY + (drawable4.getIntrinsicHeight() / 2);
                                            if (this.psaButtonVisible) {
                                                float f36 = this.psaButtonProgress;
                                                if (f36 < 1.0f) {
                                                    f26 = AnimationProperties.overshootInterpolator.getInterpolation(f36);
                                                    int intrinsicWidth2 = ((int) (drawable4.getIntrinsicWidth() * f26)) / 2;
                                                    f6 = f23;
                                                    int intrinsicHeight2 = ((int) (drawable4.getIntrinsicHeight() * f26)) / 2;
                                                    drawable4.setBounds(intrinsicWidth - intrinsicWidth2, intrinsicHeight - intrinsicHeight2, intrinsicWidth + intrinsicWidth2, intrinsicHeight + intrinsicHeight2);
                                                    drawable4.draw(canvas);
                                                    if (Build.VERSION.SDK_INT >= 21 && this.selectorDrawable[0] != null && this.selectorDrawableMaskType[0] == 3) {
                                                        canvas.save();
                                                        float f37 = this.psaButtonProgress;
                                                        canvas.scale(f37, f37, this.selectorDrawable[0].getBounds().centerX(), this.selectorDrawable[0].getBounds().centerY());
                                                        this.selectorDrawable[0].draw(canvas);
                                                        canvas.restore();
                                                    }
                                                }
                                            }
                                            f26 = this.psaButtonProgress;
                                            int intrinsicWidth22 = ((int) (drawable4.getIntrinsicWidth() * f26)) / 2;
                                            f6 = f23;
                                            int intrinsicHeight22 = ((int) (drawable4.getIntrinsicHeight() * f26)) / 2;
                                            drawable4.setBounds(intrinsicWidth - intrinsicWidth22, intrinsicHeight - intrinsicHeight22, intrinsicWidth + intrinsicWidth22, intrinsicHeight + intrinsicHeight22);
                                            drawable4.draw(canvas);
                                            if (Build.VERSION.SDK_INT >= 21) {
                                                canvas.save();
                                                float f372 = this.psaButtonProgress;
                                                canvas.scale(f372, f372, this.selectorDrawable[0].getBounds().centerX(), this.selectorDrawable[0].getBounds().centerY());
                                                this.selectorDrawable[0].draw(canvas);
                                                canvas.restore();
                                            }
                                        } else {
                                            f6 = f23;
                                        }
                                        boolean z7 = this.psaButtonVisible;
                                        if (z7) {
                                            float f38 = this.psaButtonProgress;
                                            if (f38 < 1.0f) {
                                                this.psaButtonProgress = f38 + (((float) j) / 180.0f);
                                                invalidate();
                                                if (this.psaButtonProgress > 1.0f) {
                                                    this.psaButtonProgress = 1.0f;
                                                    setInvalidatesParent(false);
                                                }
                                            }
                                        }
                                        if (!z7) {
                                            float f39 = this.psaButtonProgress;
                                            if (f39 > 0.0f) {
                                                this.psaButtonProgress = f39 - (((float) j) / 180.0f);
                                                invalidate();
                                                if (this.psaButtonProgress < 0.0f) {
                                                    this.psaButtonProgress = 0.0f;
                                                    setInvalidatesParent(false);
                                                }
                                            }
                                        }
                                    }
                                    i10 = i20;
                                }
                            }
                            z4 = false;
                            canvas.save();
                            canvas.translate(f23, this.forwardNameY);
                            forwardBackground = this.forwardBg;
                            if (forwardBackground != null) {
                            }
                            while (i23 < 2) {
                            }
                            canvas.restore();
                            if (z4) {
                            }
                            if (this.hasPsaHint) {
                            }
                            i10 = i20;
                        }
                        if (this.drawTopic && this.topicButton != null && f5 > 0.0f && f2 > 0.0f && ((groupedMessagePosition4 = this.currentPosition) == null || (groupedMessagePosition4.minY == 0 && groupedMessagePosition4.minX == 0))) {
                            if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                                MessageObject messageObject9 = this.currentMessageObject;
                                if (messageObject9.type != 19) {
                                    if (messageObject9.isOutOwner()) {
                                        f20 = AndroidUtilities.dp(23.0f);
                                        if (this.isPlayingRound) {
                                            f20 -= AndroidUtilities.roundPlayingMessageSize - AndroidUtilities.roundMessageSize;
                                        }
                                    } else {
                                        if (this.currentMessageObject.type == 5) {
                                            dp6 = this.backgroundDrawableLeft + this.backgroundDrawableRight + AndroidUtilities.dp(4.0f);
                                        } else {
                                            dp6 = this.backgroundDrawableLeft + this.backgroundDrawableRight + AndroidUtilities.dp(17.0f);
                                        }
                                        f20 = dp6;
                                    }
                                    dp5 = AndroidUtilities.dp(12.0f);
                                    dp4 = f20 - AndroidUtilities.dp(8.0f);
                                    transitionParams = this.transitionParams;
                                    if (transitionParams.animateBackgroundBoundsInner) {
                                        dp4 += transitionParams.deltaLeft;
                                    }
                                    this.topicButton.draw(canvas, dp4, dp5, f5 * f2);
                                }
                            }
                            if (!this.currentMessageObject.isOutOwner()) {
                                i19 = this.backgroundDrawableLeft + AndroidUtilities.dp(12.0f) + getExtraTextX();
                            } else {
                                if (this.mediaBackground) {
                                    dp3 = this.backgroundDrawableLeft + AndroidUtilities.dp(12.0f);
                                    extraTextX = getExtraTextX();
                                } else {
                                    dp3 = this.backgroundDrawableLeft + AndroidUtilities.dp(this.drawPinnedBottom ? 12.0f : 18.0f);
                                    extraTextX = getExtraTextX();
                                }
                                i19 = dp3 + extraTextX;
                            }
                            dp4 = i19 - AndroidUtilities.dp(2.33f);
                            dp5 = AndroidUtilities.dp(12.0f) + ((this.drawNameLayout || this.nameLayout == null) ? 0 : AndroidUtilities.dp(6.0f) + ((int) Theme.chat_namePaint.getTextSize()));
                            transitionParams = this.transitionParams;
                            if (transitionParams.animateBackgroundBoundsInner) {
                            }
                            this.topicButton.draw(canvas, dp4, dp5, f5 * f2);
                        }
                        if (z2) {
                            float f40 = this.replyStartX;
                            float f41 = this.replyStartY;
                            MessageObject.GroupedMessages groupedMessages4 = this.currentMessagesGroup;
                            if (groupedMessages4 != null) {
                                MessageObject.GroupedMessages.TransitionParams transitionParams7 = groupedMessages4.transitionParams;
                                if (transitionParams7.backgroundChangeBounds) {
                                    f40 += transitionParams7.offsetLeft;
                                }
                            }
                            TransitionParams transitionParams8 = this.transitionParams;
                            if (transitionParams8.animateBackgroundBoundsInner) {
                                if (this.isRoundVideo) {
                                    f19 = (this.currentMessageObject.isOutOwner() ? 0.0f : this.transitionParams.deltaLeft) + this.transitionParams.deltaRight;
                                } else {
                                    f19 = transitionParams8.deltaLeft;
                                }
                                f40 += f19;
                                TransitionParams transitionParams9 = this.transitionParams;
                                f41 = AndroidUtilities.lerp(transitionParams9.animateFromReplyY, this.replyStartY, transitionParams9.animateChangeProgress);
                            }
                            float f42 = f41;
                            float f43 = !z3 ? f6 : f40;
                            boolean z8 = (this.currentMessageObject == null || (chatMessageCellDelegate = this.delegate) == null || !chatMessageCellDelegate.isProgressLoading(this, 0)) ? false : true;
                            if (this.replyPressedFloat == null) {
                                this.replyPressedFloat = new AnimatedFloat(this);
                            }
                            float f44 = this.replyPressedFloat.set((this.replySelectorPressed || z8) ? 1.0f : 0.0f);
                            if (this.replyLine == null) {
                                this.replyLine = new ReplyMessageLine(this);
                            }
                            Theme.chat_replyNamePaint.setColor(this.replyLine.check(this.currentMessageObject, this.currentUser, this.currentChat, this.resourcesProvider, 0));
                            int alphaComponent = ColorUtils.setAlphaComponent(this.replyLine.getColor(), 30);
                            if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                                Theme.chat_replyLinePaint.setColor(getThemedColor(Theme.key_chat_stickerReplyLine));
                                Theme.chat_replyLinePaint.setAlpha((int) (Theme.chat_replyLinePaint.getAlpha() * this.timeAlpha * f2));
                                alphaComponent = ColorUtils.setAlphaComponent(Theme.chat_replyLinePaint.getColor(), Color.alpha(alphaComponent));
                                Theme.chat_replyNamePaint.setColor(getThemedColor(Theme.key_chat_stickerReplyNameText));
                                Theme.chat_replyNamePaint.setAlpha((int) (Theme.chat_replyNamePaint.getAlpha() * this.timeAlpha * f2));
                                Theme.chat_replyTextPaint.setColor(getThemedColor(Theme.key_chat_stickerReplyMessageText));
                                Theme.chat_replyTextPaint.setAlpha((int) (Theme.chat_replyTextPaint.getAlpha() * this.timeAlpha * f2));
                                if (z3) {
                                    if (this.replyBounce == null) {
                                        this.replyBounce = new ButtonBounce(this, 2.0f, 2.0f);
                                    }
                                    canvas.save();
                                    float scale3 = this.replyBounce.getScale(0.0125f);
                                    int i32 = (int) f43;
                                    this.rect.set(i32 - AndroidUtilities.dp(7.0f), f42 - AndroidUtilities.dp(3.0f), (i32 - AndroidUtilities.dp(4.0f)) + Math.max(this.replyNameWidth, this.replyTextWidth), f42 + AndroidUtilities.dp(3.0f) + this.replyHeight);
                                    float f45 = this.replyBounceX;
                                    RectF rectF2 = this.rect;
                                    float clamp = Utilities.clamp(f45, rectF2.right, rectF2.left);
                                    float f46 = this.replyBounceY;
                                    RectF rectF3 = this.rect;
                                    canvas.scale(scale3, scale3, clamp, Utilities.clamp(f46, rectF3.bottom, rectF3.top));
                                    applyServiceShaderMatrix();
                                    int alpha7 = getThemedPaint("paintChatActionBackground").getAlpha();
                                    getThemedPaint("paintChatActionBackground").setAlpha((int) (alpha7 * this.timeAlpha * f2));
                                    canvas.drawRoundRect(this.rect, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), getThemedPaint("paintChatActionBackground"));
                                    getThemedPaint("paintChatActionBackground").setAlpha(alpha7);
                                    if (hasGradientService()) {
                                        int alpha8 = Theme.chat_actionBackgroundGradientDarkenPaint.getAlpha();
                                        Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha((int) (alpha8 * this.timeAlpha * f2));
                                        canvas.drawRoundRect(this.rect, AndroidUtilities.dp(4.0f), AndroidUtilities.dp(4.0f), Theme.chat_actionBackgroundGradientDarkenPaint);
                                        Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha(alpha8);
                                    }
                                    canvas.restore();
                                }
                            } else if (this.currentMessageObject.isOutOwner()) {
                                if (this.currentMessageObject.isReplyToStory()) {
                                    Theme.chat_replyTextPaint.setColor(Theme.chat_replyNamePaint.getColor());
                                } else {
                                    int themedColor3 = getThemedColor(Theme.key_chat_outReplyMessageText);
                                    MessageObject messageObject10 = this.currentMessageObject;
                                    if (!messageObject10.forceAvatar) {
                                        if (messageObject10.hasValidReplyMessageObject()) {
                                            MessageObject messageObject11 = this.currentMessageObject.replyMessageObject;
                                            if (messageObject11.contentType != 1) {
                                            }
                                        }
                                        if (!this.hasReplyQuote) {
                                            themedColor3 = getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outReplyMediaMessageSelectedText : Theme.key_chat_outReplyMediaMessageText);
                                            f44 = (f44 * 0.4f) + 0.6f;
                                        }
                                    }
                                    Theme.chat_replyTextPaint.setColor(ColorUtils.blendARGB(themedColor3, Theme.adaptHue(themedColor3, Theme.chat_replyNamePaint.getColor()), f44));
                                }
                            } else if (this.currentMessageObject.isReplyToStory()) {
                                Theme.chat_replyTextPaint.setColor(Theme.chat_replyNamePaint.getColor());
                            } else {
                                int themedColor4 = getThemedColor(Theme.key_chat_inReplyMessageText);
                                MessageObject messageObject12 = this.currentMessageObject;
                                if (!messageObject12.forceAvatar) {
                                    if (messageObject12.hasValidReplyMessageObject()) {
                                        MessageObject messageObject13 = this.currentMessageObject.replyMessageObject;
                                        if (messageObject13.contentType != 1) {
                                        }
                                    }
                                    if (!this.hasReplyQuote) {
                                        themedColor4 = getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inReplyMediaMessageSelectedText : Theme.key_chat_inReplyMediaMessageText);
                                        f44 = (f44 * 0.4f) + 0.6f;
                                    }
                                }
                                Theme.chat_replyTextPaint.setColor(ColorUtils.blendARGB(themedColor4, Theme.adaptHue(themedColor4, Theme.chat_replyNamePaint.getColor()), f44));
                            }
                            int i33 = alphaComponent;
                            Theme.chat_quoteTextPaint.setColor(Theme.chat_replyTextPaint.getColor());
                            float dp14 = AndroidUtilities.dp(10.0f);
                            this.forwardNameX = (f43 - this.replyTextOffset) + dp14 + (this.needReplyImage ? dp2 + AndroidUtilities.dp(25.0f) : 0);
                            MessageObject.GroupedMessagePosition groupedMessagePosition6 = this.currentPosition;
                            if ((groupedMessagePosition6 == null || (groupedMessagePosition6.minY == 0 && groupedMessagePosition6.minX == 0)) && (!this.enterTransitionInProgress || this.currentMessageObject.isVoice())) {
                                float alpha9 = (this.transitionParams.ignoreAlpha ? 1.0f : getAlpha()) * f2;
                                if (alpha9 != 1.0f) {
                                    RectF rectF4 = AndroidUtilities.rectTmp;
                                    rectF4.set(0.0f, 0.0f, getWidth(), getHeight());
                                    i12 = canvas.saveLayerAlpha(rectF4, (int) (alpha9 * 255.0f), 31);
                                } else {
                                    i12 = -1;
                                }
                                float min = Math.min(4.0f, SharedConfig.bubbleRadius);
                                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                                    float f47 = z3 ? 6.0f : 4.0f;
                                    this.replySelectorRect.set(f43 - AndroidUtilities.dp(7.0f), f42 - AndroidUtilities.dp(3.0f), (Math.max(this.replyNameWidth, this.replyTextWidth) + f43) - AndroidUtilities.dp(4.0f), f42 + this.replyHeight + AndroidUtilities.dp(3.0f));
                                    if (i10 > 0) {
                                        RectF rectF5 = this.replySelectorRect;
                                        rectF5.right = Math.max(rectF5.right, i10);
                                    }
                                    f8 = dp14;
                                    f10 = f47;
                                    f11 = f10;
                                    f9 = f43;
                                } else {
                                    if (this.drawTopic || this.drawNameLayout || (this.drawForwardedName && this.forwardedNameLayout[0] != null)) {
                                        f7 = min;
                                    } else if (!this.currentMessageObject.isOutOwner() || !this.drawPinnedTop) {
                                        f7 = SharedConfig.bubbleRadius * 0.6f;
                                    } else {
                                        f7 = SharedConfig.bubbleRadius / 3.0f;
                                    }
                                    if (this.currentMessagesGroup != null && (groupedMessagePosition2 = this.currentPosition) != null) {
                                        int i34 = groupedMessagePosition2.flags;
                                        if ((i34 & 1) == 0 || (i34 & 2) == 0) {
                                            if (AndroidUtilities.isTablet()) {
                                                parentWidth = AndroidUtilities.getMinTabletSide();
                                            } else {
                                                parentWidth = getParentWidth();
                                            }
                                            int i35 = 0;
                                            int i36 = 0;
                                            while (i35 < this.currentMessagesGroup.posArray.size()) {
                                                if (this.currentMessagesGroup.posArray.get(i35).minY != 0) {
                                                    break;
                                                }
                                                float f48 = dp14;
                                                double d2 = i36;
                                                double ceil2 = Math.ceil(((groupedMessagePosition3.pw + groupedMessagePosition3.leftSpanOffset) / 1000.0f) * parentWidth);
                                                Double.isNaN(d2);
                                                i36 = (int) (d2 + ceil2);
                                                i35++;
                                                f43 = f43;
                                                dp14 = f48;
                                            }
                                            f8 = dp14;
                                            f9 = f43;
                                            if (!this.mediaBackground && this.currentMessageObject.isOutOwner()) {
                                                i13 = (this.backgroundDrawableLeft + i36) - AndroidUtilities.dp(6.0f);
                                            } else {
                                                i13 = this.backgroundDrawableLeft + i36;
                                            }
                                            backgroundDrawableRight = i13 - (getExtraTextX() + AndroidUtilities.dp((this.isAvatarVisible ? 48 : 0) + 8));
                                            this.replySelectorRect.set(this.backgroundDrawableLeft + this.transitionParams.deltaLeft + AndroidUtilities.dp(10 + ((!this.currentMessageObject.isOutOwner() || this.mediaBackground || this.drawPinnedBottom) ? 0 : 6)) + getExtraTextX(), (f42 - AndroidUtilities.dp((this.mediaBackground && this.drawPinnedTop && !this.drawNameLayout) ? 2 : 0)) - ((this.drawForwardedName || this.forwardedNameLayout[0] == null || this.drawNameLayout) ? 0 : 2), backgroundDrawableRight - (AndroidUtilities.dp(10 + ((this.currentMessageObject.isOutOwner() || this.mediaBackground || this.drawPinnedBottom) ? 0 : 6)) + getExtraTextX()), f42 + this.replyHeight + AndroidUtilities.dp(4.0f));
                                            f10 = f7;
                                            f11 = min;
                                        }
                                    }
                                    f8 = dp14;
                                    f9 = f43;
                                    backgroundDrawableRight = getBackgroundDrawableRight() + this.transitionParams.deltaRight;
                                    this.replySelectorRect.set(this.backgroundDrawableLeft + this.transitionParams.deltaLeft + AndroidUtilities.dp(10 + ((!this.currentMessageObject.isOutOwner() || this.mediaBackground || this.drawPinnedBottom) ? 0 : 6)) + getExtraTextX(), (f42 - AndroidUtilities.dp((this.mediaBackground && this.drawPinnedTop && !this.drawNameLayout) ? 2 : 0)) - ((this.drawForwardedName || this.forwardedNameLayout[0] == null || this.drawNameLayout) ? 0 : 2), backgroundDrawableRight - (AndroidUtilities.dp(10 + ((this.currentMessageObject.isOutOwner() || this.mediaBackground || this.drawPinnedBottom) ? 0 : 6)) + getExtraTextX()), f42 + this.replyHeight + AndroidUtilities.dp(4.0f));
                                    f10 = f7;
                                    f11 = min;
                                }
                                if (z3) {
                                    if (this.replyBounce == null) {
                                        this.replyBounce = new ButtonBounce(this, 2.0f, 2.0f);
                                    }
                                    if (i12 == -1) {
                                        i12 = canvas.getSaveCount();
                                    }
                                    canvas.save();
                                    float scale4 = this.replyBounce.getScale(0.0125f);
                                    float f49 = this.replyBounceX;
                                    RectF rectF6 = this.replySelectorRect;
                                    float clamp2 = Utilities.clamp(f49, rectF6.right, rectF6.left);
                                    float f50 = this.replyBounceY;
                                    RectF rectF7 = this.replySelectorRect;
                                    canvas.scale(scale4, scale4, clamp2, Utilities.clamp(f50, rectF7.bottom, rectF7.top));
                                }
                                int i37 = i12;
                                this.replyLine.setLoading(z8);
                                this.replyLine.drawBackground(canvas, this.replySelectorRect, f11, f10, f11, f, this.isReplyQuote, this.currentMessageObject.shouldDrawWithoutBackground());
                                if (this.replySelector == null) {
                                    this.replySelectorColor = i33;
                                    Drawable createRadSelectorDrawable4 = Theme.createRadSelectorDrawable(i33, 0, 0);
                                    this.replySelector = createRadSelectorDrawable4;
                                    createRadSelectorDrawable4.setCallback(this);
                                }
                                Drawable drawable5 = this.replySelector;
                                RectF rectF8 = this.replySelectorRect;
                                drawable5.setBounds((int) rectF8.left, (int) rectF8.top, (int) rectF8.right, (int) rectF8.bottom);
                                if (f11 != this.replySelectorRadLeft || f10 != this.replySelectorRadRight) {
                                    Drawable drawable6 = this.replySelector;
                                    this.replySelectorRadLeft = f11;
                                    this.replySelectorRadRight = f10;
                                    Theme.setMaskDrawableRad(drawable6, f11, f10, f11, f11);
                                }
                                if (i33 != this.replySelectorColor) {
                                    Drawable drawable7 = this.replySelector;
                                    this.replySelectorColor = i33;
                                    Theme.setSelectorDrawableColor(drawable7, i33, true);
                                }
                                this.replySelector.draw(canvas);
                                Path path = this.replyRoundRectPath;
                                if (path == null) {
                                    this.replyRoundRectPath = new Path();
                                } else {
                                    path.rewind();
                                }
                                this.replyLine.drawLine(canvas, this.replySelectorRect);
                                this.replyLine.drawLoadingBackground(canvas, this.replySelectorRect, f11, f10, f11, f);
                                if (this.needReplyImage) {
                                    this.replyImageReceiver.setAlpha(f2);
                                    float min2 = Math.min(this.replySelectorRect.height() - AndroidUtilities.dp(10.0f), AndroidUtilities.dp(this.isReplyQuote ? 3.0f : 7.0f) + Theme.chat_replyNamePaint.getTextSize() + Theme.chat_replyTextPaint.getTextSize());
                                    ImageReceiver imageReceiver = this.replyImageReceiver;
                                    float dp15 = this.replySelectorRect.left + AndroidUtilities.dp(8.0f);
                                    float f51 = this.replySelectorRect.top;
                                    if (!this.isReplyQuote || (cachedStaticLayout = this.replyTextLayout) == null || cachedStaticLayout.layout.getLineCount() > 1) {
                                        i17 = 5;
                                        i18 = 0;
                                    } else {
                                        i17 = 5;
                                        i18 = 2;
                                    }
                                    imageReceiver.setImageCoords(dp15, f51 + AndroidUtilities.dp(i18 + i17), min2, min2);
                                    this.replyImageReceiver.draw(canvas);
                                    MessageObject messageObject14 = this.currentMessageObject;
                                    if (messageObject14 != null && messageObject14.hasValidReplyMessageObject() && this.currentMessageObject.replyMessageObject.hasMediaSpoilers()) {
                                        int[] roundRadius = this.replyImageReceiver.getRoundRadius();
                                        float[] fArr = this.mediaSpoilerRadii;
                                        float f52 = roundRadius[0];
                                        fArr[1] = f52;
                                        fArr[0] = f52;
                                        float f53 = roundRadius[1];
                                        fArr[3] = f53;
                                        fArr[2] = f53;
                                        float f54 = roundRadius[2];
                                        fArr[5] = f54;
                                        fArr[4] = f54;
                                        float f55 = roundRadius[3];
                                        fArr[7] = f55;
                                        fArr[6] = f55;
                                        this.mediaSpoilerPath.rewind();
                                        RectF rectF9 = AndroidUtilities.rectTmp;
                                        rectF9.set(this.replyImageReceiver.getImageX(), this.replyImageReceiver.getImageY(), this.replyImageReceiver.getImageX2(), this.replyImageReceiver.getImageY2());
                                        this.mediaSpoilerPath.addRoundRect(rectF9, this.mediaSpoilerRadii, Path.Direction.CW);
                                        canvas.save();
                                        canvas.clipPath(this.mediaSpoilerPath);
                                        this.mediaSpoilerEffect.setColor(ColorUtils.setAlphaComponent(-1, (int) (Color.alpha(-1) * 0.325f * this.replyImageReceiver.getAlpha())));
                                        this.mediaSpoilerEffect.setBounds((int) this.replyImageReceiver.getImageX(), (int) this.replyImageReceiver.getImageY(), (int) this.replyImageReceiver.getImageX2(), (int) this.replyImageReceiver.getImageY2());
                                        this.mediaSpoilerEffect.draw(canvas);
                                        canvas.restore();
                                        invalidate();
                                    }
                                    f12 = min2;
                                } else {
                                    f12 = 0.0f;
                                }
                                MessageObject messageObject15 = this.currentMessageObject;
                                if (messageObject15 == null || !messageObject15.shouldDrawWithoutBackground()) {
                                    f13 = 1.0f;
                                    f14 = -AndroidUtilities.dp(1.0f);
                                } else {
                                    f14 = -AndroidUtilities.dp(6.0f);
                                    f13 = 1.0f;
                                }
                                MessageObject messageObject16 = this.currentMessageObject;
                                float dp16 = (messageObject16 == null || !messageObject16.shouldDrawWithoutBackground()) ? AndroidUtilities.dp(3.0f) : AndroidUtilities.dp(f13);
                                boolean z9 = this.isReplyQuote;
                                boolean z10 = z9 && (messageObject = this.currentMessageObject) != null && (tLRPC$Message = messageObject.messageOwner) != null && tLRPC$Message.reply_to.quote;
                                if (z9 && z10 && this.replyQuoteDrawable != null) {
                                    if (this.replyLine.getColor() != this.replyQuoteDrawableColor) {
                                        Drawable drawable8 = this.replyQuoteDrawable;
                                        int color4 = this.replyLine.getColor();
                                        this.replyQuoteDrawableColor = color4;
                                        drawable8.setColorFilter(new PorterDuffColorFilter(color4, PorterDuff.Mode.SRC_IN));
                                    }
                                    this.replyQuoteDrawable.setBounds((int) ((this.replySelectorRect.right - AndroidUtilities.dp((!this.drawPinnedTop ? 1 : 0) + 2)) - this.replyQuoteDrawable.getIntrinsicWidth()), (int) (this.replySelectorRect.top + AndroidUtilities.dp((!this.drawPinnedTop ? 1 : 0) + 2)), (int) (this.replySelectorRect.right - AndroidUtilities.dp((!this.drawPinnedTop ? 1 : 0) + 2)), (int) (this.replySelectorRect.top + AndroidUtilities.dp((!this.drawPinnedTop ? 1 : 0) + 2) + this.replyQuoteDrawable.getIntrinsicHeight()));
                                    this.replyQuoteDrawable.draw(canvas);
                                }
                                if (this.replyNameLayout != null) {
                                    canvas.save();
                                    canvas.translate(((f9 + f14) - this.replyNameOffset) + f8 + (this.needReplyImage ? f12 + AndroidUtilities.dp(3.0f) : 0.0f), f42 + dp16);
                                    this.replyNameLayout.draw(canvas);
                                    canvas.restore();
                                }
                                MessageObject messageObject17 = this.currentMessageObject;
                                if (messageObject17 != null && messageObject17.isOutOwner() && !ChatObject.isChannelAndNotMegaGroup(this.currentMessageObject.getChatId(), this.currentAccount)) {
                                    color = getThemedColor(Theme.key_chat_outTimeText);
                                } else {
                                    color = Theme.chat_replyTextPaint.getColor();
                                }
                                int i38 = color;
                                if (this.transitionParams.animateReplyTextLayout == null || this.transitionParams.animateChangeProgress >= 1.0f) {
                                    i14 = i37;
                                    canvas3 = canvas;
                                    f15 = f9;
                                    f16 = f8;
                                    i15 = i2;
                                    f17 = 2.0f;
                                    f18 = 1.0f;
                                } else {
                                    canvas.save();
                                    canvas.clipRect(this.replySelectorRect);
                                    canvas.save();
                                    float f56 = f9 + f8 + f14;
                                    if (this.isReplyQuote && this.needReplyImage) {
                                        f56 -= AndroidUtilities.dp(2.0f);
                                    }
                                    if (this.needReplyImage && (!this.isReplyQuote || this.replyTextRTL)) {
                                        f56 += f12 + AndroidUtilities.dp(3.0f);
                                    }
                                    if (this.replyTextRTL && this.transitionParams.animateReplyTextOffset > 0.0f) {
                                        f56 = (this.replySelectorRect.right - AndroidUtilities.dp(8.0f)) - this.transitionParams.animateReplyTextLayout.layout.getWidth();
                                    }
                                    canvas.translate(f56, ((f42 + dp16) - AndroidUtilities.dp(1.0f)) + Theme.chat_replyNamePaint.getTextSize() + AndroidUtilities.dp(5.0f));
                                    TextPaint paint = this.transitionParams.animateReplyTextLayout.getPaint();
                                    int alpha10 = paint.getAlpha();
                                    paint.setAlpha((int) (alpha10 * (1.0f - this.transitionParams.animateChangeProgress)));
                                    SpoilerEffect.renderWithRipple((View) this, this.invalidateSpoilersParent, i38, -AndroidUtilities.dp(2.0f), this.spoilersPatchedReplyTextLayout, this.transitionParams.animateReplyTextLayout, this.replySpoilers, canvas, false);
                                    f17 = 2.0f;
                                    f16 = f8;
                                    i15 = i2;
                                    i14 = i37;
                                    f15 = f9;
                                    f18 = 1.0f;
                                    canvas3 = canvas;
                                    AnimatedEmojiSpan.drawAnimatedEmojis(canvas, this.transitionParams.animateReplyTextLayout.layout, this.transitionParams.animateOutAnimateEmojiReply, 0.0f, this.replySpoilers, 0.0f, 0.0f, 0.0f, f, getAdaptiveEmojiColorFilter(2, paint.getColor()));
                                    paint.setAlpha(alpha10);
                                    canvas.restore();
                                }
                                if (this.replyTextLayout != null) {
                                    canvas.save();
                                    float f57 = f15 + f16 + f14;
                                    if (this.isReplyQuote && this.needReplyImage) {
                                        f57 -= AndroidUtilities.dp(f17);
                                    }
                                    if (this.needReplyImage && (!this.isReplyQuote || this.replyTextRTL)) {
                                        f57 += f12 + AndroidUtilities.dp(3.0f);
                                    }
                                    if (this.replyTextRTL && this.replyTextOffset > 0) {
                                        f57 = (this.replySelectorRect.right - AndroidUtilities.dp(8.0f)) - this.replyTextLayout.layout.getWidth();
                                    }
                                    canvas3.translate(f57, ((f42 + dp16) - AndroidUtilities.dp(f18)) + Theme.chat_replyNamePaint.getTextSize() + AndroidUtilities.dp(5.0f));
                                    TextPaint paint2 = this.replyTextLayout.getPaint();
                                    int alpha11 = paint2.getAlpha();
                                    paint2.setAlpha((int) (alpha11 * (this.transitionParams.animateReplyTextLayout != null ? this.transitionParams.animateChangeProgress : 1.0f)));
                                    SpoilerEffect.renderWithRipple((View) this, this.invalidateSpoilersParent, i38, -AndroidUtilities.dp(f17), this.spoilersPatchedReplyTextLayout, this.replyTextLayout, this.replySpoilers, canvas, false);
                                    i11 = i15;
                                    canvas2 = canvas3;
                                    i16 = i14;
                                    AnimatedEmojiSpan.drawAnimatedEmojis(canvas, this.replyTextLayout.layout, this.animatedEmojiReplyStack, 0.0f, this.replySpoilers, 0.0f, 0.0f, 0.0f, f, getAdaptiveEmojiColorFilter(2, paint2.getColor()));
                                    paint2.setAlpha(alpha11);
                                    canvas.restore();
                                } else {
                                    i16 = i14;
                                    canvas2 = canvas3;
                                    i11 = i15;
                                }
                                if (this.transitionParams.animateReplyTextLayout != null && this.transitionParams.animateChangeProgress < f18) {
                                    canvas.restore();
                                }
                                if (i16 >= 0) {
                                    canvas2.restoreToCount(i16);
                                }
                                if (i11 != Integer.MIN_VALUE) {
                                    canvas2.restoreToCount(i11);
                                    return;
                                }
                                return;
                            }
                        }
                        canvas2 = canvas;
                        i11 = i2;
                        if (i11 != Integer.MIN_VALUE) {
                        }
                    }
                }
            }
            i2 = i;
            canvas.translate(f3, this.nameY);
            int alpha52 = Theme.chat_namePaint.getAlpha();
            Theme.chat_namePaint.setAlpha((int) (alpha52 * f28));
            this.nameLayout.draw(canvas);
            Theme.chat_namePaint.setAlpha(alpha52);
            canvas.restore();
            groupedMessages = this.currentMessagesGroup;
            if (groupedMessages == null) {
            }
            if (!this.currentMessageObject.shouldDrawWithoutBackground()) {
            }
            dp = i3 + i4;
            f4 = dp;
            float f342 = f4 + this.transitionParams.deltaRight;
            if (this.adminLayout != null) {
            }
        } else {
            i2 = i;
        }
        if (this.drawForwardedName) {
        }
        if (this.replyNameLayout == null) {
        }
        CachedStaticLayout[] cachedStaticLayoutArr2 = this.forwardedNameLayout;
        int i292 = this.forwardedNameWidth;
        if (this.transitionParams.animateForwardedLayout) {
        }
        if (z) {
        }
        i10 = -1;
        z3 = true;
        f6 = 0.0f;
        if (this.drawTopic) {
            if (this.currentMessageObject.shouldDrawWithoutBackground()) {
            }
            if (!this.currentMessageObject.isOutOwner()) {
            }
            dp4 = i19 - AndroidUtilities.dp(2.33f);
            dp5 = AndroidUtilities.dp(12.0f) + ((this.drawNameLayout || this.nameLayout == null) ? 0 : AndroidUtilities.dp(6.0f) + ((int) Theme.chat_namePaint.getTextSize()));
            transitionParams = this.transitionParams;
            if (transitionParams.animateBackgroundBoundsInner) {
            }
            this.topicButton.draw(canvas, dp4, dp5, f5 * f2);
        }
        if (z2) {
        }
        canvas2 = canvas;
        i11 = i2;
        if (i11 != Integer.MIN_VALUE) {
        }
    }

    public boolean hasCaptionLayout() {
        return this.captionLayout != null;
    }

    public boolean hasCommentLayout() {
        return this.drawCommentButton;
    }

    public MessageObject.TextLayoutBlocks getCaptionLayout() {
        return this.captionLayout;
    }

    public void setDrawSelectionBackground(boolean z) {
        if (this.drawSelectionBackground != z) {
            this.drawSelectionBackground = z;
            invalidate();
        }
    }

    public boolean isDrawingSelectionBackground() {
        return this.drawSelectionBackground || this.isHighlightedAnimated || this.isHighlighted;
    }

    public float getHighlightAlpha() {
        return getHighlightAlpha(false);
    }

    public float getHighlightAlpha(boolean z) {
        float f;
        QuoteHighlight quoteHighlight;
        if (this.drawSelectionBackground || !this.isHighlightedAnimated) {
            f = 1.0f;
        } else {
            int i = this.highlightProgress;
            f = (i >= 300 ? 1.0f : i / 300.0f) * 1.0f;
        }
        return (z || (quoteHighlight = this.quoteHighlight) == null) ? f : f * (1.0f - quoteHighlight.getT());
    }

    public void setCheckBoxVisible(boolean z, boolean z2) {
        MessageObject.GroupedMessages groupedMessages;
        MessageObject.GroupedMessages groupedMessages2;
        MessageObject messageObject;
        if (z2 && (messageObject = this.currentMessageObject) != null && messageObject.deletedByThanos) {
            return;
        }
        if (z) {
            this.quoteHighlight = null;
            CheckBoxBase checkBoxBase = this.checkBox;
            if (checkBoxBase == null) {
                CheckBoxBase checkBoxBase2 = new CheckBoxBase(this, 21, this.resourcesProvider);
                this.checkBox = checkBoxBase2;
                if (this.attachedToWindow) {
                    checkBoxBase2.onAttachedToWindow();
                }
            } else {
                checkBoxBase.setResourcesProvider(this.resourcesProvider);
            }
        }
        if (z && (((groupedMessages = this.currentMessagesGroup) != null && groupedMessages.messages.size() > 1) || ((groupedMessages2 = this.groupedMessagesToSet) != null && groupedMessages2.messages.size() > 1))) {
            CheckBoxBase checkBoxBase3 = this.mediaCheckBox;
            if (checkBoxBase3 == null) {
                CheckBoxBase checkBoxBase4 = new CheckBoxBase(this, 21, this.resourcesProvider);
                this.mediaCheckBox = checkBoxBase4;
                checkBoxBase4.setUseDefaultCheck(true);
                if (this.attachedToWindow) {
                    this.mediaCheckBox.onAttachedToWindow();
                }
            } else {
                checkBoxBase3.setResourcesProvider(this.resourcesProvider);
            }
        }
        if (this.checkBoxVisible == z) {
            if (z2 == this.checkBoxAnimationInProgress || z2) {
                return;
            }
            this.checkBoxAnimationProgress = z ? 1.0f : 0.0f;
            invalidate();
            return;
        }
        this.checkBoxAnimationInProgress = z2;
        this.checkBoxVisible = z;
        if (z2) {
            this.lastCheckBoxAnimationTime = SystemClock.elapsedRealtime();
        } else {
            this.checkBoxAnimationProgress = z ? 1.0f : 0.0f;
        }
        invalidate();
    }

    public boolean isCheckBoxVisible() {
        return this.checkBoxVisible || this.checkBoxAnimationInProgress;
    }

    public void setChecked(boolean z, boolean z2, boolean z3) {
        MessageObject messageObject;
        if (z || !z3 || (messageObject = this.currentMessageObject) == null || !messageObject.deletedByThanos) {
            CheckBoxBase checkBoxBase = this.checkBox;
            if (checkBoxBase != null) {
                checkBoxBase.setChecked(z2, z3);
            }
            CheckBoxBase checkBoxBase2 = this.mediaCheckBox;
            if (checkBoxBase2 != null) {
                checkBoxBase2.setChecked(z, z3);
            }
            this.backgroundDrawable.setSelected(z2, z3);
        }
    }

    public void setLastTouchCoords(float f, float f2) {
        this.lastTouchX = f;
        this.lastTouchY = f2;
        this.backgroundDrawable.setTouchCoords(f + getTranslationX(), this.lastTouchY);
    }

    public MessageBackgroundDrawable getBackgroundDrawable() {
        return this.backgroundDrawable;
    }

    public Theme.MessageDrawable getCurrentBackgroundDrawable(boolean z) {
        if (z) {
            MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
            boolean z2 = groupedMessagePosition != null && (groupedMessagePosition.flags & 8) == 0 && this.currentMessagesGroup.isDocuments && !this.drawPinnedBottom;
            if (this.currentMessageObject.isOutOwner()) {
                if (!this.mediaBackground && !this.drawPinnedBottom && !z2) {
                    this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgOut");
                } else {
                    this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgOutMedia");
                }
            } else if (!this.mediaBackground && !this.drawPinnedBottom && !z2) {
                this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgIn");
            } else {
                this.currentBackgroundDrawable = (Theme.MessageDrawable) getThemedDrawable("drawableMsgInMedia");
            }
        }
        this.currentBackgroundDrawable.getBackgroundDrawable();
        return this.currentBackgroundDrawable;
    }

    private boolean shouldDrawCaptionLayout() {
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        MessageObject.GroupedMessages groupedMessages;
        MessageObject messageObject = this.currentMessageObject;
        return (messageObject == null || messageObject.preview || ((groupedMessagePosition = this.currentPosition) != null && ((groupedMessages = this.currentMessagesGroup) == null || !groupedMessages.isDocuments || (groupedMessagePosition.flags & 8) != 0)) || this.transitionParams.animateBackgroundBoundsInner || (this.enterTransitionInProgress && messageObject.isVoice())) ? false : true;
    }

    public void drawCaptionLayout(Canvas canvas, boolean z, float f) {
        if (this.animatedEmojiStack != null && this.captionLayout == null) {
            MessageObject.TextLayoutBlocks unused = this.transitionParams.animateOutCaptionLayout;
        }
        TransitionParams transitionParams = this.transitionParams;
        if (!transitionParams.animateReplaceCaptionLayout || transitionParams.animateChangeProgress == 1.0f) {
            drawCaptionLayout(canvas, this.captionLayout, true, z, f);
        } else {
            drawCaptionLayout(canvas, transitionParams.animateOutCaptionLayout, false, z, f * (1.0f - this.transitionParams.animateChangeProgress));
            drawCaptionLayout(canvas, this.captionLayout, true, z, f * this.transitionParams.animateChangeProgress);
        }
        if (!z) {
            drawAnimatedEmojiCaption(canvas, f);
        }
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && messageObject.messageOwner != null && messageObject.isVoiceTranscriptionOpen()) {
            MessageObject messageObject2 = this.currentMessageObject;
            if (!messageObject2.messageOwner.voiceTranscriptionFinal && TranscribeButton.isTranscribing(messageObject2)) {
                invalidate();
            }
        }
        if (this.isRoundVideo) {
            this.reactionsLayoutInBubble.drawServiceShaderBackground = 1.0f - getVideoTranscriptionProgress();
        }
        if (z || !this.currentMessageObject.shouldDrawReactions()) {
            return;
        }
        MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
        if (groupedMessagePosition != null) {
            int i = groupedMessagePosition.flags;
            if ((i & 8) == 0 || (i & 1) == 0) {
                return;
            }
        }
        ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
        if (reactionsLayoutInBubble.isSmall) {
            return;
        }
        if (reactionsLayoutInBubble.drawServiceShaderBackground > 0.0f) {
            applyServiceShaderMatrix();
        }
        if (getAlpha() != 1.0f) {
            RectF rectF = AndroidUtilities.rectTmp;
            rectF.set(0.0f, 0.0f, getWidth(), getHeight());
            canvas.saveLayerAlpha(rectF, (int) (getAlpha() * 255.0f), 31);
        }
        ReactionsLayoutInBubble reactionsLayoutInBubble2 = this.reactionsLayoutInBubble;
        if (reactionsLayoutInBubble2.drawServiceShaderBackground > 0.0f || !this.transitionParams.animateBackgroundBoundsInner || this.currentPosition != null || this.isRoundVideo) {
            TransitionParams transitionParams2 = this.transitionParams;
            reactionsLayoutInBubble2.draw(canvas, transitionParams2.animateChange ? transitionParams2.animateChangeProgress : 1.0f, null);
        } else {
            canvas.save();
            canvas.clipRect(0.0f, 0.0f, getMeasuredWidth(), getBackgroundDrawableBottom() + this.transitionParams.deltaBottom);
            ReactionsLayoutInBubble reactionsLayoutInBubble3 = this.reactionsLayoutInBubble;
            TransitionParams transitionParams3 = this.transitionParams;
            reactionsLayoutInBubble3.draw(canvas, transitionParams3.animateChange ? transitionParams3.animateChangeProgress : 1.0f, null);
            canvas.restore();
        }
        if (getAlpha() != 1.0f) {
            canvas.restore();
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:253:0x05c8  */
    /* JADX WARN: Removed duplicated region for block: B:261:0x05d7  */
    /* JADX WARN: Removed duplicated region for block: B:275:0x0643  */
    /* JADX WARN: Removed duplicated region for block: B:285:0x068d  */
    /* JADX WARN: Removed duplicated region for block: B:286:0x06a7  */
    /* JADX WARN: Removed duplicated region for block: B:289:0x06b4  */
    /* JADX WARN: Removed duplicated region for block: B:290:0x06b9  */
    /* JADX WARN: Removed duplicated region for block: B:293:0x06cd  */
    /* JADX WARN: Removed duplicated region for block: B:295:0x06d1  */
    /* JADX WARN: Removed duplicated region for block: B:301:0x06e8  */
    /* JADX WARN: Removed duplicated region for block: B:318:0x0791  */
    /* JADX WARN: Removed duplicated region for block: B:433:? A[RETURN, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void drawCaptionLayout(Canvas canvas, MessageObject.TextLayoutBlocks textLayoutBlocks, boolean z, boolean z2, float f) {
        int dp;
        int extraTextX;
        int i;
        int dp2;
        MessageObject.TextLayoutBlocks textLayoutBlocks2;
        float f2;
        int i2;
        Rect rect;
        int i3;
        Path path;
        float f3;
        int i4;
        int i5;
        float f4;
        MessageObject messageObject;
        int i6;
        boolean z3;
        int dp3;
        float f5;
        Paint paint;
        int i7;
        int i8;
        int i9;
        long j;
        float f6;
        InfiniteProgress infiniteProgress;
        TextPaint textPaint;
        TextPaint textPaint2;
        TLRPC$MessageReplies tLRPC$MessageReplies;
        boolean z4;
        int themedColor;
        int i10;
        int i11;
        MessageObject.GroupedMessagePosition groupedMessagePosition;
        MessageObject.GroupedMessagePosition groupedMessagePosition2;
        if (this.mediaBackground) {
            dp = this.backgroundDrawableLeft + AndroidUtilities.dp(12.0f);
            extraTextX = getExtraTextX();
        } else {
            dp = this.backgroundDrawableLeft + AndroidUtilities.dp(this.drawPinnedBottom ? 12.0f : 18.0f);
            extraTextX = getExtraTextX();
        }
        int i12 = dp + extraTextX;
        int extraTextX2 = i12 - getExtraTextX();
        int i13 = 1;
        if (this.currentMessagesGroup == null || this.currentMessageObject.isMusic() || this.currentMessageObject.isDocument()) {
            i = i12;
            dp2 = extraTextX2 + (this.backgroundWidth - (this.mediaBackground ? 0 : AndroidUtilities.dp(9.0f)));
        } else {
            int groupPhotosWidth = getGroupPhotosWidth();
            float f7 = 1000.0f;
            if ((this.currentPosition.flags & 1) == 0) {
                double d = extraTextX2;
                double ceil = Math.ceil((groupedMessagePosition.pw / 1000.0f) * groupPhotosWidth);
                Double.isNaN(d);
                dp2 = (int) (d + ceil);
                i = i12;
            } else {
                int i14 = 0;
                int i15 = 0;
                while (i14 < this.currentMessagesGroup.posArray.size()) {
                    if (this.currentMessagesGroup.posArray.get(i14).minY != 0) {
                        break;
                    }
                    double d2 = i15;
                    double ceil2 = Math.ceil(((groupedMessagePosition2.pw + groupedMessagePosition2.leftSpanOffset) / f7) * groupPhotosWidth);
                    Double.isNaN(d2);
                    i15 = (int) (d2 + ceil2);
                    i14++;
                    i12 = i12;
                    f7 = 1000.0f;
                }
                i = i12;
                dp2 = extraTextX2 + (i15 - AndroidUtilities.dp(9.0f));
            }
        }
        MessageObject.GroupedMessagePosition groupedMessagePosition3 = this.currentPosition;
        if (groupedMessagePosition3 != null && (groupedMessagePosition3.flags & 1) == 0 && !this.currentMessagesGroup.hasSibling) {
            dp2 += AndroidUtilities.dp(14.0f);
        }
        if (this.currentBackgroundDrawable != null && this.drawCommentButton && this.timeLayout != null) {
            float dp4 = ((this.layoutHeight + this.transitionParams.deltaBottom) - AndroidUtilities.dp(18.0f)) - this.timeLayout.layout.getHeight();
            MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
            if (groupedMessages != null) {
                MessageObject.GroupedMessages.TransitionParams transitionParams = groupedMessages.transitionParams;
                dp4 += transitionParams.offsetBottom;
                if (transitionParams.backgroundChangeBounds) {
                    dp4 -= getTranslationY();
                }
            }
            float f8 = dp4;
            if (this.pinnedBottom) {
                i4 = 2;
                i5 = 3;
            } else if (this.pinnedTop) {
                i4 = 4;
                i5 = 1;
            } else {
                i4 = 3;
                i5 = 0;
            }
            int currentBackgroundLeft = getCurrentBackgroundLeft() + AndroidUtilities.dp((this.currentMessageObject.isOutOwner() || this.mediaBackground || this.drawPinnedBottom) ? 2.0f : 8.0f);
            float dp5 = this.layoutHeight - AndroidUtilities.dp(45.1f - i5);
            MessageObject.GroupedMessagePosition groupedMessagePosition4 = this.currentPosition;
            if (groupedMessagePosition4 != null && (groupedMessagePosition4.flags & 1) == 0 && !this.currentMessagesGroup.hasSibling) {
                currentBackgroundLeft -= AndroidUtilities.dp(10.0f);
            }
            Rect rect2 = this.commentButtonRect;
            MessageObject messageObject2 = this.currentMessageObject;
            rect2.set(currentBackgroundLeft - AndroidUtilities.dp(((messageObject2 == null || !messageObject2.isOut()) && !this.drawPinnedBottom && this.currentPosition == null && ((messageObject = this.currentMessageObject) == null || messageObject.type != 17 || this.pollInstantViewTouchesBottom)) ? 6.0f : 0.0f), (int) dp5, dp2 - AndroidUtilities.dp(14.0f), this.layoutHeight - AndroidUtilities.dp(i4));
            if (this.selectorDrawable[1] != null && this.selectorDrawableMaskType[1] == 2) {
                int saveCount = canvas.getSaveCount();
                this.selectorDrawable[1].setBounds(this.commentButtonRect);
                this.selectorDrawable[1].draw(canvas);
                canvas.restoreToCount(saveCount);
            }
            MessageObject.GroupedMessagePosition groupedMessagePosition5 = this.currentPosition;
            if (groupedMessagePosition5 == null || ((groupedMessagePosition5.flags & 1) != 0 && groupedMessagePosition5.minX == 0 && groupedMessagePosition5.maxX == 0)) {
                ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
                boolean z5 = chatMessageCellDelegate != null && chatMessageCellDelegate.shouldDrawThreadProgress(this);
                if (z5) {
                    LoadingDrawable loadingDrawable = this.commentLoading;
                    if (loadingDrawable == null) {
                        LoadingDrawable loadingDrawable2 = new LoadingDrawable();
                        this.commentLoading = loadingDrawable2;
                        loadingDrawable2.setAppearByGradient(true);
                    } else if (loadingDrawable.isDisappeared() || this.commentLoading.isDisappearing()) {
                        this.commentLoading.reset();
                        this.commentLoading.resetDisappear();
                    }
                } else {
                    LoadingDrawable loadingDrawable3 = this.commentLoading;
                    if (loadingDrawable3 != null && !loadingDrawable3.isDisappearing() && !this.commentLoading.isDisappeared()) {
                        this.commentLoading.disappear();
                    }
                }
                if (this.commentLoading != null) {
                    int themedColor2 = getThemedColor(Theme.key_chat_inInstant);
                    this.commentLoading.setColors(Theme.multAlpha(themedColor2, 0.05f), Theme.multAlpha(themedColor2, 0.15f));
                    this.commentLoading.setBounds(this.commentButtonRect);
                    canvas.save();
                    MaskDrawable[] maskDrawableArr = this.selectorMaskDrawable;
                    if (maskDrawableArr[1] != null) {
                        canvas.clipPath(maskDrawableArr[1].path);
                    }
                    this.commentLoading.draw(canvas);
                    canvas.restore();
                }
                if (getAlpha() != 1.0f) {
                    RectF rectF = AndroidUtilities.rectTmp;
                    rectF.set(0.0f, 0.0f, getWidth(), getHeight());
                    canvas.saveLayerAlpha(rectF, (int) (getAlpha() * 255.0f), 31);
                }
                Theme.chat_instantViewPaint.setColor(getThemedColor(Theme.key_chat_inPreviewInstantText));
                if (this.commentAvatarImages != null) {
                    int dp6 = AndroidUtilities.dp(17.0f);
                    int extraTextX3 = i + getExtraTextX();
                    int length = this.commentAvatarImages.length - 1;
                    i6 = 2;
                    z3 = false;
                    while (length >= 0) {
                        if (this.commentAvatarImagesVisible[length] && this.commentAvatarImages[length].hasImageSet()) {
                            this.commentAvatarImages[length].setImageX((dp6 * length) + extraTextX3);
                            this.commentAvatarImages[length].setImageY((f8 - AndroidUtilities.dp(4.0f)) + (this.pinnedBottom ? AndroidUtilities.dp(2.0f) : 0));
                            ImageReceiver[] imageReceiverArr = this.commentAvatarImages;
                            if (length != imageReceiverArr.length - i13) {
                                canvas.drawCircle(imageReceiverArr[length].getCenterX(), this.commentAvatarImages[length].getCenterY(), AndroidUtilities.dp(13.0f), this.currentBackgroundDrawable.getPaint());
                            }
                            this.commentAvatarImages[length].draw(canvas);
                            if (length != 0) {
                                i6 += 17;
                            }
                            z3 = true;
                        }
                        length--;
                        i13 = 1;
                    }
                } else {
                    i6 = 2;
                    z3 = false;
                }
                if (getAlpha() != 1.0f) {
                    canvas.restore();
                }
                textLayoutBlocks2 = textLayoutBlocks;
                if (this.mediaBackground && textLayoutBlocks2 == null) {
                    ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
                    if (reactionsLayoutInBubble.isEmpty || reactionsLayoutInBubble.isSmall) {
                        i7 = i;
                        i8 = 3;
                        if (this.commentLayout == null && this.drawSideButton != i8) {
                            Theme.chat_commentTextPaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outPreviewInstantText : Theme.key_chat_inPreviewInstantText));
                            float f9 = i6 + 33;
                            int dp7 = i7 + AndroidUtilities.dp(f9);
                            this.commentX = dp7;
                            if (this.drawCommentNumber) {
                                this.commentX = dp7 + this.commentNumberWidth + AndroidUtilities.dp(4.0f);
                            }
                            int alpha = Theme.chat_commentTextPaint.getAlpha();
                            if (this.transitionParams.animateComments && this.transitionParams.animateCommentsLayout != null) {
                                canvas.save();
                                TextPaint textPaint3 = Theme.chat_commentTextPaint;
                                double d3 = alpha;
                                double d4 = this.transitionParams.animateChangeProgress;
                                Double.isNaN(d4);
                                Double.isNaN(d3);
                                textPaint3.setAlpha((int) (d3 * (1.0d - d4)));
                                canvas.translate(this.transitionParams.animateCommentX + ((this.commentX - this.transitionParams.animateCommentX) * this.transitionParams.animateChangeProgress), (f8 - AndroidUtilities.dp(0.1f)) + (this.pinnedBottom ? AndroidUtilities.dp(2.0f) : 0));
                                this.transitionParams.animateCommentsLayout.draw(canvas);
                                canvas.restore();
                            }
                            canvas.save();
                            canvas.translate(i7 + AndroidUtilities.dp(f9), (f8 - AndroidUtilities.dp(0.1f)) + (this.pinnedBottom ? AndroidUtilities.dp(2.0f) : 0));
                            if (!this.currentMessageObject.isSent()) {
                                Theme.chat_commentTextPaint.setAlpha(127);
                                Theme.chat_commentArrowDrawable.setAlpha(127);
                                Theme.chat_commentDrawable.setAlpha(127);
                            } else {
                                Theme.chat_commentArrowDrawable.setAlpha(255);
                                Theme.chat_commentDrawable.setAlpha(255);
                            }
                            if (this.drawCommentNumber || (this.transitionParams.animateComments && this.transitionParams.animateDrawCommentNumber)) {
                                if (this.drawCommentNumber && this.transitionParams.animateComments) {
                                    if (this.transitionParams.animateDrawCommentNumber) {
                                        Theme.chat_commentTextPaint.setAlpha(alpha);
                                    } else {
                                        Theme.chat_commentTextPaint.setAlpha((int) (alpha * this.transitionParams.animateChangeProgress));
                                    }
                                }
                                Theme.chat_commentTextPaint.setAlpha((int) (textPaint.getAlpha() * getAlpha()));
                                this.commentNumberLayout.draw(canvas);
                                if (this.drawCommentNumber) {
                                    canvas.translate(this.commentNumberWidth + AndroidUtilities.dp(4.0f), 0.0f);
                                }
                            }
                            if (this.transitionParams.animateComments && this.transitionParams.animateCommentsLayout != null) {
                                Theme.chat_commentTextPaint.setAlpha((int) (alpha * this.transitionParams.animateChangeProgress));
                            } else {
                                Theme.chat_commentTextPaint.setAlpha((int) (alpha * f));
                            }
                            Theme.chat_commentTextPaint.setAlpha((int) (textPaint2.getAlpha() * getAlpha()));
                            this.commentLayout.draw(canvas);
                            canvas.restore();
                            int dp8 = i7 + this.commentWidth + AndroidUtilities.dp(f9) + AndroidUtilities.dp(9.0f);
                            this.commentUnreadX = dp8;
                            if (this.drawCommentNumber) {
                                this.commentUnreadX = dp8 + this.commentNumberWidth + AndroidUtilities.dp(4.0f);
                            }
                            MessageObject.GroupedMessages groupedMessages2 = this.currentMessagesGroup;
                            if (groupedMessages2 != null && !groupedMessages2.messages.isEmpty()) {
                                MessageObject messageObject3 = this.currentMessagesGroup.messages.get(0);
                                if (messageObject3.hasReplies()) {
                                    tLRPC$MessageReplies = messageObject3.messageOwner.replies;
                                    if (tLRPC$MessageReplies == null) {
                                    }
                                    this.commentDrawUnread = z4;
                                    if (z4) {
                                    }
                                }
                                tLRPC$MessageReplies = null;
                                if (tLRPC$MessageReplies == null) {
                                }
                                this.commentDrawUnread = z4;
                                if (z4) {
                                }
                            } else {
                                if (this.currentMessageObject.hasReplies()) {
                                    tLRPC$MessageReplies = this.currentMessageObject.messageOwner.replies;
                                    z4 = tLRPC$MessageReplies == null && (i11 = tLRPC$MessageReplies.read_max_id) != 0 && i11 < tLRPC$MessageReplies.max_id;
                                    this.commentDrawUnread = z4;
                                    if (z4) {
                                        Theme.chat_docBackPaint.setColor(getThemedColor(Theme.key_chat_inInstant));
                                        if (!this.transitionParams.animateComments) {
                                            i10 = this.commentUnreadX;
                                        } else {
                                            if (!this.transitionParams.animateCommentDrawUnread) {
                                                Theme.chat_docBackPaint.setAlpha((int) (Color.alpha(themedColor) * this.transitionParams.animateChangeProgress));
                                            }
                                            i10 = (int) (this.transitionParams.animateCommentUnreadX + ((this.commentUnreadX - this.transitionParams.animateCommentUnreadX) * this.transitionParams.animateChangeProgress));
                                        }
                                        canvas.drawCircle(i10, f8 + AndroidUtilities.dp(8.0f) + (this.pinnedBottom ? AndroidUtilities.dp(2.0f) : 0), AndroidUtilities.dp(2.5f), Theme.chat_docBackPaint);
                                    }
                                }
                                tLRPC$MessageReplies = null;
                                if (tLRPC$MessageReplies == null) {
                                }
                                this.commentDrawUnread = z4;
                                if (z4) {
                                }
                            }
                            if (textLayoutBlocks2 == null) {
                                if (z2 && this.links.isEmpty()) {
                                    return;
                                }
                                if ((!this.currentMessageObject.deleted || this.drawingToBitmap || this.currentPosition == null) && f != 0.0f) {
                                    setupTextColors();
                                    canvas.save();
                                    MessageObject.GroupedMessages groupedMessages3 = this.currentMessagesGroup;
                                    float f10 = groupedMessages3 != null ? groupedMessages3.transitionParams.captionEnterProgress * f : f;
                                    if (f10 == 0.0f) {
                                        return;
                                    }
                                    float f11 = this.captionY;
                                    float f12 = this.captionX;
                                    TransitionParams transitionParams2 = this.transitionParams;
                                    if (transitionParams2.animateBackgroundBoundsInner) {
                                        if (transitionParams2.transformGroupToSingleMessage) {
                                            f11 -= getTranslationY();
                                            f3 = this.transitionParams.deltaLeft;
                                        } else if (transitionParams2.moveCaption) {
                                            float f13 = this.captionX;
                                            TransitionParams transitionParams3 = this.transitionParams;
                                            float f14 = transitionParams3.animateChangeProgress;
                                            float f15 = (f13 * f14) + (transitionParams3.captionFromX * (1.0f - f14));
                                            float f16 = (transitionParams3.captionFromY * (1.0f - f14)) + (this.captionY * f14);
                                            f12 = f15;
                                            f11 = f16;
                                        } else if ((!this.currentMessageObject.isVoice() && !this.currentMessageObject.isRoundVideo()) || !TextUtils.isEmpty(this.currentMessageObject.caption)) {
                                            f3 = this.transitionParams.deltaLeft;
                                        }
                                        f12 += f3;
                                    }
                                    if (this.isRoundVideo && this.transitionParams.animateDrawBackground) {
                                        f2 = 1.0f;
                                        f11 += (1.0f - getVideoTranscriptionProgress()) * AndroidUtilities.roundMessageSize;
                                    } else {
                                        f2 = 1.0f;
                                    }
                                    float f17 = f11;
                                    if (f10 != f2) {
                                        this.rect.set(f12, f17, textLayoutBlocks2.textWidth + f12, textLayoutBlocks2.textHeight + f17);
                                        i2 = canvas.saveLayerAlpha(this.rect, (int) (f10 * 255.0f), 31);
                                    } else {
                                        i2 = Integer.MIN_VALUE;
                                    }
                                    if (this.isRoundVideo && this.transitionParams.animateDrawBackground) {
                                        Theme.MessageDrawable.PathDrawParams pathDrawParams = this.backgroundCacheParams;
                                        if (pathDrawParams != null && (path = pathDrawParams.getPath()) != null && !path.isEmpty()) {
                                            canvas.translate(0.0f, this.transitionYOffsetForDrawables);
                                            canvas.clipPath(path);
                                            canvas.translate(0.0f, -this.transitionYOffsetForDrawables);
                                        }
                                    } else if (this.transitionParams.animateBackgroundBoundsInner && this.currentBackgroundDrawable != null && this.currentMessagesGroup == null) {
                                        int height = (!this.drawCommentButton || (rect = this.commentButtonRect) == null) ? 0 : rect.height();
                                        ReactionsLayoutInBubble reactionsLayoutInBubble2 = this.reactionsLayoutInBubble;
                                        int i16 = height + ((reactionsLayoutInBubble2 == null || reactionsLayoutInBubble2.isSmall) ? 0 : reactionsLayoutInBubble2.height);
                                        if (this.currentMessageObject.isOutOwner() && !this.mediaBackground && !this.pinnedBottom) {
                                            canvas.clipRect(getBackgroundDrawableLeft() + this.transitionParams.deltaLeft + AndroidUtilities.dp(4.0f), getBackgroundDrawableTop() + this.transitionParams.deltaTop + AndroidUtilities.dp(4.0f), (getBackgroundDrawableRight() + this.transitionParams.deltaRight) - AndroidUtilities.dp(10.0f), ((getBackgroundDrawableBottom() + this.transitionParams.deltaBottom) - AndroidUtilities.dp(4.0f)) - i16);
                                        } else {
                                            canvas.clipRect(getBackgroundDrawableLeft() + this.transitionParams.deltaLeft + AndroidUtilities.dp(4.0f), getBackgroundDrawableTop() + this.transitionParams.deltaTop + AndroidUtilities.dp(4.0f), (getBackgroundDrawableRight() + this.transitionParams.deltaRight) - AndroidUtilities.dp(4.0f), ((getBackgroundDrawableBottom() + this.transitionParams.deltaBottom) - AndroidUtilities.dp(4.0f)) - i16);
                                        }
                                    }
                                    canvas.save();
                                    canvas.translate(f12, f17);
                                    if (this.highlightPath != null) {
                                        float currentTimeMillis = ((float) (System.currentTimeMillis() - this.highlightPathStart)) / 850.0f;
                                        if (currentTimeMillis > 1.0f) {
                                            this.highlightPath = null;
                                        } else {
                                            int alpha2 = Theme.chat_textSearchSelectionPaint.getAlpha();
                                            float f18 = currentTimeMillis * 4.0f;
                                            Theme.chat_textSearchSelectionPaint.setAlpha((int) (alpha2 * 0.8f * (1.0f - currentTimeMillis) * f18));
                                            canvas.save();
                                            float interpolation = (AndroidUtilities.overshootInterpolator.getInterpolation(Math.min(1.0f, f18)) * 0.6f) + 0.4f;
                                            LinkPath linkPath = this.highlightPath;
                                            canvas.scale(interpolation, interpolation, linkPath.centerX, linkPath.centerY);
                                            canvas.drawPath(this.highlightPath, Theme.chat_textSearchSelectionPaint);
                                            canvas.restore();
                                            Theme.chat_textSearchSelectionPaint.setAlpha(alpha2);
                                        }
                                        invalidate();
                                    }
                                    if (this.currentMessageObject.type == 5) {
                                        TextPaint textPaint4 = Theme.chat_timePaint;
                                        int themedColor3 = getThemedColor(Theme.key_chat_serviceText);
                                        if (isDrawSelectionBackground()) {
                                            i3 = this.currentMessageObject.isOutOwner() ? Theme.key_chat_outTimeSelectedText : Theme.key_chat_inTimeSelectedText;
                                        } else {
                                            i3 = this.currentMessageObject.isOutOwner() ? Theme.key_chat_outTimeText : Theme.key_chat_inTimeText;
                                        }
                                        textPaint4.setColor(ColorUtils.blendARGB(themedColor3, getThemedColor(i3), getVideoTranscriptionProgress()));
                                    }
                                    canvas.restore();
                                    if (!z2) {
                                        drawMessageText(f12, f17, canvas, textLayoutBlocks2.textLayoutBlocks, textLayoutBlocks2.textXOffset, z, f, true, false, true);
                                    }
                                    if (i2 != Integer.MIN_VALUE) {
                                        canvas.restoreToCount(i2);
                                    }
                                    canvas.restore();
                                    return;
                                }
                                return;
                            }
                            return;
                        }
                        if (!z3) {
                            BaseCell.setDrawableBounds(Theme.chat_commentDrawable, i7, (f8 - AndroidUtilities.dp(4.0f)) + (this.pinnedBottom ? AndroidUtilities.dp(2.0f) : 0));
                            if (f != 1.0f) {
                                Theme.chat_commentDrawable.setAlpha((int) (f * 255.0f));
                                Theme.chat_commentDrawable.draw(canvas);
                                Theme.chat_commentDrawable.setAlpha(255);
                            } else {
                                Theme.chat_commentDrawable.draw(canvas);
                            }
                        }
                        this.commentArrowX = dp2 - AndroidUtilities.dp(44.0f);
                        if (this.transitionParams.animateComments) {
                            i9 = this.commentArrowX;
                        } else {
                            i9 = (int) (this.transitionParams.animateCommentArrowX + ((this.commentArrowX - this.transitionParams.animateCommentArrowX) * this.transitionParams.animateChangeProgress));
                        }
                        float dp9 = (f8 - AndroidUtilities.dp(4.0f)) + (!this.pinnedBottom ? AndroidUtilities.dp(2.0f) : 0);
                        long elapsedRealtime = SystemClock.elapsedRealtime();
                        j = elapsedRealtime - this.commentProgressLastUpadteTime;
                        this.commentProgressLastUpadteTime = elapsedRealtime;
                        if (j > 17) {
                            j = 17;
                        }
                        if (!z5) {
                            float f19 = this.commentProgressAlpha;
                            if (f19 < 1.0f) {
                                float f20 = f19 + (((float) j) / 180.0f);
                                this.commentProgressAlpha = f20;
                                if (f20 > 1.0f) {
                                    this.commentProgressAlpha = 1.0f;
                                }
                            }
                            f6 = 0.0f;
                        } else {
                            float f21 = this.commentProgressAlpha;
                            f6 = 0.0f;
                            if (f21 > 0.0f) {
                                float f22 = f21 - (((float) j) / 180.0f);
                                this.commentProgressAlpha = f22;
                                if (f22 < 0.0f) {
                                    this.commentProgressAlpha = 0.0f;
                                }
                            }
                        }
                        if ((!z5 || this.commentProgressAlpha > f6) && (infiniteProgress = this.commentProgress) != null) {
                            infiniteProgress.setColor(getThemedColor(Theme.key_chat_inInstant));
                            this.commentProgress.setAlpha(this.commentProgressAlpha);
                            this.commentProgress.draw(canvas, AndroidUtilities.dp(11.0f) + i9, dp9 + AndroidUtilities.dp(12.0f), this.commentProgressAlpha);
                            invalidate();
                        }
                        if (z5 || this.commentProgressAlpha < 1.0f) {
                            int intrinsicWidth = Theme.chat_commentArrowDrawable.getIntrinsicWidth() / 2;
                            float f23 = i9 + intrinsicWidth;
                            float intrinsicHeight = Theme.chat_commentArrowDrawable.getIntrinsicHeight() / 2;
                            float f24 = dp9 + intrinsicHeight;
                            Drawable drawable = Theme.chat_commentArrowDrawable;
                            float f25 = intrinsicWidth;
                            float f26 = this.commentProgressAlpha;
                            drawable.setBounds((int) (f23 - ((1.0f - f26) * f25)), (int) (f24 - ((1.0f - f26) * intrinsicHeight)), (int) (f23 + (f25 * (1.0f - f26))), (int) (f24 + (intrinsicHeight * (1.0f - f26))));
                            Theme.chat_commentArrowDrawable.setAlpha((int) ((1.0f - this.commentProgressAlpha) * 255.0f * f));
                            Theme.chat_commentArrowDrawable.draw(canvas);
                        }
                        if (textLayoutBlocks2 == null) {
                        }
                    }
                }
                if (isDrawSelectionBackground()) {
                    Theme.chat_replyLinePaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outVoiceSeekbarSelected : Theme.key_chat_inVoiceSeekbarSelected));
                } else {
                    Theme.chat_replyLinePaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outVoiceSeekbar : Theme.key_chat_inVoiceSeekbar));
                }
                TransitionParams transitionParams4 = this.transitionParams;
                float dp10 = (this.layoutHeight - AndroidUtilities.dp(f4)) + transitionParams4.deltaBottom;
                MessageObject.GroupedMessages groupedMessages4 = this.currentMessagesGroup;
                if (groupedMessages4 != null) {
                    MessageObject.GroupedMessages.TransitionParams transitionParams5 = groupedMessages4.transitionParams;
                    float f27 = dp10 + transitionParams5.offsetBottom;
                    if (transitionParams5.backgroundChangeBounds) {
                        f27 -= getTranslationY();
                    }
                    dp3 = dp2;
                    f5 = f27;
                } else {
                    dp3 = (i + ((int) ((this.backgroundWidth - transitionParams4.deltaLeft) + transitionParams4.deltaRight))) - AndroidUtilities.dp(12.0f);
                    f5 = dp10;
                }
                Theme.chat_replyLinePaint.setAlpha((int) (paint.getAlpha() * getAlpha()));
                int i17 = i;
                i7 = i17;
                i8 = 3;
                canvas.drawLine(i17, f5, dp3 - AndroidUtilities.dp(14.0f), f5, Theme.chat_replyLinePaint);
                dp2 = dp3;
                if (this.commentLayout == null) {
                }
                if (!z3) {
                }
                this.commentArrowX = dp2 - AndroidUtilities.dp(44.0f);
                if (this.transitionParams.animateComments) {
                }
                float dp92 = (f8 - AndroidUtilities.dp(4.0f)) + (!this.pinnedBottom ? AndroidUtilities.dp(2.0f) : 0);
                long elapsedRealtime2 = SystemClock.elapsedRealtime();
                j = elapsedRealtime2 - this.commentProgressLastUpadteTime;
                this.commentProgressLastUpadteTime = elapsedRealtime2;
                if (j > 17) {
                }
                if (!z5) {
                }
                if (!z5) {
                }
                infiniteProgress.setColor(getThemedColor(Theme.key_chat_inInstant));
                this.commentProgress.setAlpha(this.commentProgressAlpha);
                this.commentProgress.draw(canvas, AndroidUtilities.dp(11.0f) + i9, dp92 + AndroidUtilities.dp(12.0f), this.commentProgressAlpha);
                invalidate();
                if (z5) {
                }
                int intrinsicWidth2 = Theme.chat_commentArrowDrawable.getIntrinsicWidth() / 2;
                float f232 = i9 + intrinsicWidth2;
                float intrinsicHeight2 = Theme.chat_commentArrowDrawable.getIntrinsicHeight() / 2;
                float f242 = dp92 + intrinsicHeight2;
                Drawable drawable2 = Theme.chat_commentArrowDrawable;
                float f252 = intrinsicWidth2;
                float f262 = this.commentProgressAlpha;
                drawable2.setBounds((int) (f232 - ((1.0f - f262) * f252)), (int) (f242 - ((1.0f - f262) * intrinsicHeight2)), (int) (f232 + (f252 * (1.0f - f262))), (int) (f242 + (intrinsicHeight2 * (1.0f - f262))));
                Theme.chat_commentArrowDrawable.setAlpha((int) ((1.0f - this.commentProgressAlpha) * 255.0f * f));
                Theme.chat_commentArrowDrawable.draw(canvas);
                if (textLayoutBlocks2 == null) {
                }
            }
        }
        textLayoutBlocks2 = textLayoutBlocks;
        if (textLayoutBlocks2 == null) {
        }
    }

    public void drawProgressLoadingLink(Canvas canvas, int i) {
        updateProgressLoadingLink();
        ArrayList<LoadingDrawableLocation> arrayList = this.progressLoadingLinkDrawables;
        if (arrayList == null || arrayList.isEmpty()) {
            return;
        }
        MessageObject messageObject = this.currentMessageObject;
        int themedColor = getThemedColor((messageObject == null || !messageObject.isOutOwner()) ? Theme.key_chat_linkSelectBackground : Theme.key_chat_outLinkSelectBackground);
        int i2 = 0;
        while (i2 < this.progressLoadingLinkDrawables.size()) {
            LoadingDrawableLocation loadingDrawableLocation = this.progressLoadingLinkDrawables.get(i2);
            if (loadingDrawableLocation.blockNum == i) {
                LoadingDrawable loadingDrawable = loadingDrawableLocation.drawable;
                loadingDrawable.setColors(Theme.multAlpha(themedColor, 0.85f), Theme.multAlpha(themedColor, 2.0f), Theme.multAlpha(themedColor, 3.5f), Theme.multAlpha(themedColor, 6.0f));
                loadingDrawable.draw(canvas);
                invalidate();
                if (loadingDrawable.isDisappeared()) {
                    this.progressLoadingLinkDrawables.remove(i2);
                    i2--;
                }
            }
            i2++;
        }
    }

    public void updateProgressLoadingLink() {
        MessageObject messageObject;
        ChatMessageCellDelegate chatMessageCellDelegate = this.delegate;
        if (chatMessageCellDelegate == null) {
            return;
        }
        if (!chatMessageCellDelegate.isProgressLoading(this, 1)) {
            this.progressLoadingLink = null;
            ArrayList<LoadingDrawableLocation> arrayList = this.progressLoadingLinkDrawables;
            if (arrayList == null || arrayList.isEmpty()) {
                return;
            }
            for (int i = 0; i < this.progressLoadingLinkDrawables.size(); i++) {
                LoadingDrawableLocation loadingDrawableLocation = this.progressLoadingLinkDrawables.get(i);
                if (!loadingDrawableLocation.drawable.isDisappearing()) {
                    loadingDrawableLocation.drawable.disappear();
                }
            }
            return;
        }
        CharacterStyle progressLoadingLink = this.delegate.getProgressLoadingLink(this);
        if (progressLoadingLink == this.progressLoadingLink) {
            return;
        }
        this.progressLoadingLink = progressLoadingLink;
        LoadingDrawable loadingDrawable = this.progressLoadingLinkCurrentDrawable;
        if (loadingDrawable != null) {
            loadingDrawable.disappear();
            this.progressLoadingLinkCurrentDrawable = null;
        }
        LoadingDrawable loadingDrawable2 = new LoadingDrawable();
        this.progressLoadingLinkCurrentDrawable = loadingDrawable2;
        loadingDrawable2.setAppearByGradient(true);
        LinkPath linkPath = new LinkPath(true);
        this.progressLoadingLinkCurrentDrawable.usePath(linkPath);
        this.progressLoadingLinkCurrentDrawable.setRadiiDp(5.0f);
        LoadingDrawableLocation loadingDrawableLocation2 = new LoadingDrawableLocation(this);
        loadingDrawableLocation2.drawable = this.progressLoadingLinkCurrentDrawable;
        loadingDrawableLocation2.blockNum = -3;
        if (this.progressLoadingLinkDrawables == null) {
            this.progressLoadingLinkDrawables = new ArrayList<>();
        }
        this.progressLoadingLinkDrawables.add(loadingDrawableLocation2);
        if (this.progressLoadingLink == null || findProgressLoadingLink(loadingDrawableLocation2, linkPath, getDescriptionLayout(), 0.0f, -2)) {
            return;
        }
        MessageObject.TextLayoutBlocks textLayoutBlocks = this.captionLayout;
        if ((textLayoutBlocks == null || !findProgressLoadingLink(loadingDrawableLocation2, linkPath, textLayoutBlocks.textLayoutBlocks)) && (messageObject = this.currentMessageObject) != null) {
            findProgressLoadingLink(loadingDrawableLocation2, linkPath, messageObject.textLayoutBlocks);
        }
    }

    private boolean findProgressLoadingLink(LoadingDrawableLocation loadingDrawableLocation, LinkPath linkPath, ArrayList<MessageObject.TextLayoutBlock> arrayList) {
        if (arrayList == null) {
            return false;
        }
        for (int i = 0; i < arrayList.size(); i++) {
            if (findProgressLoadingLink(loadingDrawableLocation, linkPath, arrayList.get(i).textLayout.layout, 0.0f, i)) {
                return true;
            }
        }
        return false;
    }

    private boolean findProgressLoadingLink(LoadingDrawableLocation loadingDrawableLocation, LinkPath linkPath, Layout layout, float f, int i) {
        if (layout != null && (layout.getText() instanceof Spanned)) {
            Spanned spanned = (Spanned) layout.getText();
            CharacterStyle[] characterStyleArr = (CharacterStyle[]) spanned.getSpans(0, spanned.length(), CharacterStyle.class);
            if (characterStyleArr != null) {
                int i2 = 0;
                while (true) {
                    if (i2 >= characterStyleArr.length) {
                        break;
                    } else if (characterStyleArr[i2] == this.progressLoadingLink) {
                        loadingDrawableLocation.blockNum = i;
                        break;
                    } else {
                        i2++;
                    }
                }
            }
            if (loadingDrawableLocation.blockNum == i) {
                linkPath.rewind();
                int spanStart = spanned.getSpanStart(this.progressLoadingLink);
                int spanEnd = spanned.getSpanEnd(this.progressLoadingLink);
                linkPath.setCurrentLayout(layout, spanStart, f);
                layout.getSelectionPath(spanStart, spanEnd, linkPath);
                this.progressLoadingLinkCurrentDrawable.updateBounds();
                return true;
            }
        }
        return false;
    }

    public boolean needDrawTime() {
        MessageObject messageObject;
        return !this.forceNotDrawTime && ((messageObject = this.currentMessageObject) == null || messageObject.type != 27);
    }

    public boolean shouldDrawTimeOnMedia() {
        int i = this.overideShouldDrawTimeOnMedia;
        if (i != 0) {
            return i == 1;
        } else if (this.mediaBackground && this.captionLayout == null) {
            ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
            if (!reactionsLayoutInBubble.isEmpty && !reactionsLayoutInBubble.isSmall) {
                MessageObject messageObject = this.currentMessageObject;
                if (messageObject == null) {
                    return false;
                }
                if (!messageObject.isAnyKindOfSticker() && !this.currentMessageObject.isRoundVideo()) {
                    return false;
                }
            }
            return true;
        } else {
            return false;
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:60:0x010d  */
    /* JADX WARN: Removed duplicated region for block: B:61:0x0131  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void drawTime(Canvas canvas, float f, boolean z) {
        float f2;
        float f3;
        TransitionParams transitionParams;
        float f4;
        float f5;
        ChatMessageCellDelegate chatMessageCellDelegate;
        if (this.drawFromPinchToZoom || (chatMessageCellDelegate = this.delegate) == null || chatMessageCellDelegate.getPinchToZoomHelper() == null || !this.delegate.getPinchToZoomHelper().isInOverlayModeFor(this) || !shouldDrawTimeOnMedia()) {
            MessageObject messageObject = this.currentMessageObject;
            if (messageObject == null || messageObject.type != 27) {
                int i = 0;
                while (i < 2) {
                    if (i != 0 || !isDrawSelectionBackground() || this.currentSelectedBackgroundAlpha != 1.0f || shouldDrawTimeOnMedia()) {
                        if (i == 1 && ((!isDrawSelectionBackground() && this.currentSelectedBackgroundAlpha == 0.0f) || shouldDrawTimeOnMedia())) {
                            break;
                        }
                        boolean z2 = i == 1;
                        if (i == 1) {
                            f3 = this.currentSelectedBackgroundAlpha;
                        } else if (!shouldDrawTimeOnMedia()) {
                            f3 = 1.0f - this.currentSelectedBackgroundAlpha;
                        } else {
                            f2 = f;
                            if (!this.transitionParams.animateShouldDrawTimeOnMedia && this.transitionParams.animateChangeProgress != 1.0f) {
                                if (shouldDrawTimeOnMedia()) {
                                    this.overideShouldDrawTimeOnMedia = 1;
                                    boolean z3 = z2;
                                    drawTimeInternal(canvas, f2 * this.transitionParams.animateChangeProgress, z, this.timeX, this.timeLayout, this.timeWidth, z3);
                                    this.overideShouldDrawTimeOnMedia = 2;
                                    TransitionParams transitionParams2 = this.transitionParams;
                                    drawTimeInternal(canvas, f2 * (1.0f - transitionParams2.animateChangeProgress), z, transitionParams2.animateFromTimeX, transitionParams2.animateTimeLayout, this.transitionParams.animateTimeWidth, z3);
                                } else {
                                    this.overideShouldDrawTimeOnMedia = 2;
                                    boolean z4 = z2;
                                    drawTimeInternal(canvas, f2 * this.transitionParams.animateChangeProgress, z, this.timeX, this.timeLayout, this.timeWidth, z4);
                                    this.overideShouldDrawTimeOnMedia = 1;
                                    TransitionParams transitionParams3 = this.transitionParams;
                                    drawTimeInternal(canvas, f2 * (1.0f - transitionParams3.animateChangeProgress), z, transitionParams3.animateFromTimeX, transitionParams3.animateTimeLayout, this.transitionParams.animateTimeWidth, z4);
                                }
                                this.overideShouldDrawTimeOnMedia = 0;
                            } else {
                                transitionParams = this.transitionParams;
                                if (!transitionParams.shouldAnimateTimeX) {
                                    float f6 = transitionParams.animateChangeProgress;
                                    f5 = (this.timeX * f6) + (transitionParams.animateFromTimeX * (1.0f - f6));
                                    f4 = (this.timeWidth * f6) + (transitionParams.animateTimeWidth * (1.0f - this.transitionParams.animateChangeProgress));
                                } else {
                                    float f7 = this.timeX + transitionParams.deltaRight;
                                    f4 = this.timeWidth;
                                    f5 = f7;
                                }
                                drawTimeInternal(canvas, f2, z, f5, this.timeLayout, f4, z2);
                            }
                        }
                        f2 = f3 * f;
                        if (!this.transitionParams.animateShouldDrawTimeOnMedia) {
                        }
                        transitionParams = this.transitionParams;
                        if (!transitionParams.shouldAnimateTimeX) {
                        }
                        drawTimeInternal(canvas, f2, z, f5, this.timeLayout, f4, z2);
                    }
                    i++;
                }
                if (this.transitionParams.animateBackgroundBoundsInner) {
                    MessageObject messageObject2 = this.currentMessageObject;
                    if (messageObject2 == null || !messageObject2.preview) {
                        drawOverlays(canvas);
                    }
                }
            }
        }
    }

    private void drawTimeInternal(Canvas canvas, float f, boolean z, float f2, CachedStaticLayout cachedStaticLayout, float f3, boolean z2) {
        int i;
        float f4;
        float f5;
        String str;
        char c;
        char c2;
        int i2;
        int i3;
        boolean z3;
        float f6;
        char c3;
        float dp;
        boolean z4;
        Paint themedPaint;
        float f7;
        int dp2;
        boolean z5;
        int i4;
        float imageY2;
        int i5;
        int i6;
        int i7;
        float f8;
        MessageObject messageObject;
        float currentWidth;
        TextPaint textPaint;
        int i8;
        boolean z6 = z;
        if (((!this.drawTime || this.groupPhotoInvisible) && shouldDrawTimeOnMedia()) || cachedStaticLayout == null) {
            return;
        }
        MessageObject messageObject2 = this.currentMessageObject;
        if ((!messageObject2.deleted || this.currentPosition == null) && (i = messageObject2.type) != 16) {
            if (i == 5) {
                TextPaint textPaint2 = Theme.chat_timePaint;
                int themedColor = getThemedColor(Theme.key_chat_serviceText);
                if (isDrawSelectionBackground()) {
                    i8 = this.currentMessageObject.isOutOwner() ? Theme.key_chat_outTimeSelectedText : Theme.key_chat_inTimeSelectedText;
                } else {
                    i8 = this.currentMessageObject.isOutOwner() ? Theme.key_chat_outTimeText : Theme.key_chat_inTimeText;
                }
                textPaint2.setColor(ColorUtils.blendARGB(themedColor, getThemedColor(i8), getVideoTranscriptionProgress()));
            } else if (shouldDrawTimeOnMedia()) {
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    Theme.chat_timePaint.setColor(getThemedColor(Theme.key_chat_serviceText));
                } else {
                    Theme.chat_timePaint.setColor(getThemedColor(Theme.key_chat_mediaTimeText));
                }
            } else if (this.currentMessageObject.isOutOwner()) {
                Theme.chat_timePaint.setColor(getThemedColor(z2 ? Theme.key_chat_outTimeSelectedText : Theme.key_chat_outTimeText));
            } else {
                Theme.chat_timePaint.setColor(getThemedColor(z2 ? Theme.key_chat_inTimeSelectedText : Theme.key_chat_inTimeText));
            }
            float f9 = getTransitionParams().animateDrawingTimeAlpha ? getTransitionParams().animateChangeProgress * f : f;
            if (f9 != 1.0f) {
                Theme.chat_timePaint.setAlpha((int) (textPaint.getAlpha() * f9));
            }
            canvas.save();
            if (this.drawPinnedBottom && !shouldDrawTimeOnMedia()) {
                canvas.translate(0.0f, AndroidUtilities.dp(2.0f));
            }
            float f10 = this.layoutHeight;
            TransitionParams transitionParams = this.transitionParams;
            if (transitionParams.animateBackgroundBoundsInner) {
                f10 += transitionParams.deltaBottom;
            }
            if (transitionParams.shouldAnimateTimeX) {
                float f11 = transitionParams.animateChangeProgress;
                f4 = (transitionParams.animateFromTimeX * (1.0f - f11)) + (this.timeX * f11);
            } else {
                f4 = f2;
            }
            MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
            if (groupedMessages == null || !groupedMessages.transitionParams.backgroundChangeBounds) {
                f5 = f2;
            } else {
                f10 -= getTranslationY();
                float f12 = this.currentMessagesGroup.transitionParams.offsetRight;
                f5 = f2 + f12;
                f4 += f12;
            }
            if (this.drawPinnedBottom && shouldDrawTimeOnMedia()) {
                f10 += AndroidUtilities.dp(1.0f);
            }
            float f13 = f10;
            if (this.transitionParams.animateBackgroundBoundsInner) {
                float f14 = this.animationOffsetX;
                f5 += f14;
                f4 += f14;
            }
            float f15 = f5;
            if (this.currentMessageObject.shouldDrawReactions()) {
                ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
                if (reactionsLayoutInBubble.isSmall) {
                    TransitionParams transitionParams2 = this.transitionParams;
                    if (transitionParams2.animateBackgroundBoundsInner && transitionParams2.deltaRight != 0.0f) {
                        currentWidth = reactionsLayoutInBubble.getCurrentWidth(1.0f);
                    } else {
                        currentWidth = reactionsLayoutInBubble.getCurrentWidth(transitionParams2.animateChangeProgress);
                    }
                    f4 += currentWidth;
                }
            }
            if (this.transitionParams.animateEditedEnter) {
                f4 -= this.transitionParams.animateEditedWidthDiff * (1.0f - this.transitionParams.animateChangeProgress);
            }
            float f16 = f4;
            if (shouldDrawTimeOnMedia()) {
                int i9 = -(this.drawCommentButton ? AndroidUtilities.dp(41.3f) : 0);
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    themedPaint = getThemedPaint("paintChatActionBackground");
                } else {
                    themedPaint = getThemedPaint("paintChatTimeBackground");
                }
                int alpha = themedPaint.getAlpha();
                Theme.chat_timePaint.setAlpha((int) (this.timeAlpha * 255.0f * f9));
                MessageObject messageObject3 = this.currentMessageObject;
                if (messageObject3 == null || messageObject3.type != 4) {
                    f7 = f9;
                } else {
                    float currentAlpha = this.photoImage.isCrossfadingWithOldImage() ? 1.0f : this.photoImage.getCurrentAlpha();
                    if (!this.photoImage.hasNotThumb()) {
                        currentAlpha = 0.0f;
                    }
                    f7 = AndroidUtilities.lerp(0.35f, 1.0f, currentAlpha);
                }
                themedPaint.setAlpha((int) (alpha * this.timeAlpha * f7 * 0.6f));
                int i10 = this.documentAttachType;
                if (i10 != 7 && i10 != 6 && this.currentMessageObject.type != 19) {
                    int[] roundRadius = this.photoImage.getRoundRadius();
                    dp2 = Math.min(AndroidUtilities.dp(8.0f), Math.max(roundRadius[2], roundRadius[3]));
                    z5 = SharedConfig.bubbleRadius >= 10;
                } else {
                    int dp3 = AndroidUtilities.dp(4.0f);
                    MessageObject messageObject4 = this.currentMessageObject;
                    dp2 = dp3 + ((messageObject4 == null || !messageObject4.isAnyKindOfSticker()) ? 0 : AndroidUtilities.dp(8.0f));
                    z5 = false;
                }
                MessageObject messageObject5 = this.currentMessageObject;
                float dp4 = f15 + ((messageObject5 == null || !messageObject5.isAnyKindOfSticker()) ? 0 : AndroidUtilities.dp(-6.0f));
                float dp5 = dp4 - AndroidUtilities.dp(z5 ? 6.0f : 4.0f);
                MessageObject messageObject6 = this.currentMessageObject;
                float dp6 = (messageObject6 == null || !messageObject6.isAnyKindOfSticker()) ? 0.0f : AndroidUtilities.dp(2.0f);
                if (this.documentAttachType != 7 || ((messageObject = this.currentMessageObject) != null && messageObject.isRoundOnce())) {
                    i4 = i9;
                    imageY2 = this.photoImage.getImageY2() + this.additionalTimeOffsetY;
                } else {
                    i4 = i9;
                    imageY2 = f13 - ((AndroidUtilities.dp(this.drawPinnedBottom ? 4.0f : 5.0f) + this.reactionsLayoutInBubble.getCurrentTotalHeight(this.transitionParams.animateChangeProgress)) * (1.0f - getVideoTranscriptionProgress()));
                }
                float f17 = imageY2;
                float dp7 = f17 - AndroidUtilities.dp(23.0f);
                float max = Math.max(AndroidUtilities.dp(17.0f), Theme.chat_timePaint.getTextSize() + AndroidUtilities.dp(5.0f));
                RectF rectF = this.rect;
                float f18 = dp5 - dp6;
                float f19 = dp6 + dp5 + f3;
                if (z5) {
                    i5 = 12;
                    z3 = z5;
                } else {
                    z3 = z5;
                    i5 = 8;
                }
                if (this.currentMessageObject.isOutOwner()) {
                    i6 = (this.currentMessageObject.type == 19 ? 4 : 0) + 20;
                } else {
                    i6 = 0;
                }
                rectF.set(f18, dp7, f19 + AndroidUtilities.dp(i5 + i6), max + dp7);
                if (!this.currentMessageObject.isQuickReply()) {
                    if (this.currentMessageObject.hasMediaSpoilers() && this.currentMessageObject.type != 5) {
                        this.rectPath.rewind();
                        float f20 = dp2;
                        this.rectPath.addRoundRect(this.rect, f20, f20, Path.Direction.CW);
                        canvas.save();
                        canvas.clipPath(this.rectPath);
                        ImageReceiver imageReceiver = this.currentMessageObject.needDrawBluredPreview() ? this.photoImage : this.blurredPhotoImage;
                        float alpha2 = imageReceiver.getAlpha();
                        imageReceiver.setAlpha(0.5f * alpha2);
                        imageReceiver.draw(canvas);
                        imageReceiver.setAlpha(alpha2);
                        canvas.restore();
                        Paint themedPaint2 = getThemedPaint("paintChatTimeBackground");
                        int alpha3 = themedPaint2.getAlpha();
                        themedPaint2.setAlpha((int) (alpha3 * this.controlsAlpha * 0.4f));
                        canvas.drawRoundRect(this.rect, f20, f20, themedPaint2);
                        themedPaint2.setAlpha(alpha3);
                    }
                    applyServiceShaderMatrix();
                    float f21 = dp2;
                    canvas.drawRoundRect(this.rect, f21, f21, themedPaint);
                    if (themedPaint == getThemedPaint("paintChatActionBackground") && hasGradientService()) {
                        int alpha4 = Theme.chat_actionBackgroundGradientDarkenPaint.getAlpha();
                        Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha((int) (alpha4 * this.timeAlpha * f7));
                        canvas.drawRoundRect(this.rect, f21, f21, Theme.chat_actionBackgroundGradientDarkenPaint);
                        Theme.chat_actionBackgroundGradientDarkenPaint.setAlpha(alpha4);
                    }
                }
                themedPaint.setAlpha(alpha);
                float f22 = -cachedStaticLayout.layout.getLineLeft(0);
                MessageObject messageObject7 = this.currentMessageObject;
                float dp8 = f22 + ((messageObject7 == null || !messageObject7.isAnyKindOfSticker()) ? 0 : AndroidUtilities.dp(-6.0f));
                if (this.currentMessageObject.shouldDrawReactions() && this.reactionsLayoutInBubble.isSmall) {
                    updateReactionLayoutPosition();
                    this.reactionsLayoutInBubble.draw(canvas, this.transitionParams.animateChangeProgress, null);
                }
                if ((!ChatObject.isChannel(this.currentChat) || this.currentChat.megagroup) && (this.currentMessageObject.messageOwner.flags & 1024) == 0 && this.repliesLayout == null && !this.isPinned) {
                    z6 = z;
                    str = "paintChatTimeBackground";
                    i7 = i4;
                    c = 4;
                    c2 = 7;
                } else {
                    float lineWidth = dp8 + (this.timeWidth - cachedStaticLayout.layout.getLineWidth(0));
                    ReactionsLayoutInBubble reactionsLayoutInBubble2 = this.reactionsLayoutInBubble;
                    if (reactionsLayoutInBubble2.isSmall && !reactionsLayoutInBubble2.isEmpty) {
                        lineWidth -= reactionsLayoutInBubble2.width;
                    }
                    float f23 = lineWidth;
                    int createStatusDrawableParams = this.transitionParams.createStatusDrawableParams();
                    int i11 = this.transitionParams.lastStatusDrawableParams;
                    if (i11 < 0 || i11 == createStatusDrawableParams || this.statusDrawableAnimationInProgress) {
                        z6 = z;
                    } else {
                        z6 = z;
                        createStatusDrawableAnimator(i11, createStatusDrawableParams, z6);
                    }
                    boolean z7 = this.statusDrawableAnimationInProgress;
                    if (z7) {
                        createStatusDrawableParams = this.animateToStatusDrawableParams;
                    }
                    boolean z8 = (createStatusDrawableParams & 4) != 0;
                    boolean z9 = (createStatusDrawableParams & 8) != 0;
                    if (z7) {
                        int i12 = this.animateFromStatusDrawableParams;
                        boolean z10 = (i12 & 4) != 0;
                        int i13 = i4;
                        boolean z11 = (i12 & 8) != 0;
                        float f24 = i13;
                        f8 = f23;
                        c = 4;
                        float f25 = f9;
                        i7 = i13;
                        str = "paintChatTimeBackground";
                        c2 = 7;
                        drawClockOrErrorLayout(canvas, z10, z11, f13, f25, f24, dp4, 1.0f - this.statusDrawableProgress, z2);
                        drawClockOrErrorLayout(canvas, z8, z9, f13, f25, f24, dp4, this.statusDrawableProgress, z2);
                        if (!this.currentMessageObject.isOutOwner()) {
                            if (!z10 && !z11) {
                                drawViewsAndRepliesLayout(canvas, f13, f9, f24, dp4, 1.0f - this.statusDrawableProgress, z2);
                            }
                            if (!z8 && !z9) {
                                drawViewsAndRepliesLayout(canvas, f13, f9, f24, dp4, this.statusDrawableProgress, z2);
                            }
                        }
                    } else {
                        str = "paintChatTimeBackground";
                        f8 = f23;
                        i7 = i4;
                        c = 4;
                        c2 = 7;
                        if (!this.currentMessageObject.isOutOwner() && !z8 && !z9) {
                            drawViewsAndRepliesLayout(canvas, f13, f9, i7, dp4, 1.0f, z2);
                        }
                        drawClockOrErrorLayout(canvas, z8, z9, f13, f9, i7, dp4, 1.0f, z2);
                    }
                    if (this.currentMessageObject.isOutOwner()) {
                        drawViewsAndRepliesLayout(canvas, f13, f9, i7, dp4, 1.0f, z2);
                    }
                    TransitionParams transitionParams3 = this.transitionParams;
                    transitionParams3.lastStatusDrawableParams = transitionParams3.createStatusDrawableParams();
                    if (z8 && z6 && getParent() != null) {
                        ((View) getParent()).invalidate();
                    }
                    dp8 = f8;
                }
                canvas.save();
                float f26 = f16 + dp8;
                this.drawTimeX = f26;
                float dp9 = (f17 - AndroidUtilities.dp(7.3f)) - cachedStaticLayout.layout.getHeight();
                this.drawTimeY = dp9;
                canvas.translate(f26, dp9);
                cachedStaticLayout.draw(canvas);
                canvas.restore();
                Theme.chat_timePaint.setAlpha(255);
                i3 = i7;
            } else {
                str = "paintChatTimeBackground";
                c = 4;
                c2 = 7;
                if (this.currentMessageObject.isSponsored()) {
                    i2 = -AndroidUtilities.dp(48.0f);
                    if (this.hasNewLineForTime) {
                        i2 -= AndroidUtilities.dp(4.0f);
                    }
                } else {
                    i2 = -(this.drawCommentButton ? AndroidUtilities.dp(43.0f) : 0);
                }
                int i14 = i2;
                float f27 = -cachedStaticLayout.layout.getLineLeft(0);
                if (this.currentMessageObject.shouldDrawReactions() && this.reactionsLayoutInBubble.isSmall) {
                    updateReactionLayoutPosition();
                    this.reactionsLayoutInBubble.draw(canvas, this.transitionParams.animateChangeProgress, null);
                }
                if ((ChatObject.isChannel(this.currentChat) && !this.currentChat.megagroup) || (this.currentMessageObject.messageOwner.flags & 1024) != 0 || this.repliesLayout != null || this.transitionParams.animateReplies || this.isPinned || this.transitionParams.animatePinned) {
                    float lineWidth2 = f27 + (f3 - cachedStaticLayout.layout.getLineWidth(0));
                    ReactionsLayoutInBubble reactionsLayoutInBubble3 = this.reactionsLayoutInBubble;
                    if (reactionsLayoutInBubble3.isSmall && !reactionsLayoutInBubble3.isEmpty) {
                        lineWidth2 -= reactionsLayoutInBubble3.width;
                    }
                    float f28 = lineWidth2;
                    int createStatusDrawableParams2 = this.transitionParams.createStatusDrawableParams();
                    int i15 = this.transitionParams.lastStatusDrawableParams;
                    if (i15 >= 0 && i15 != createStatusDrawableParams2 && !this.statusDrawableAnimationInProgress) {
                        createStatusDrawableAnimator(i15, createStatusDrawableParams2, z6);
                    }
                    boolean z12 = this.statusDrawableAnimationInProgress;
                    if (z12) {
                        createStatusDrawableParams2 = this.animateToStatusDrawableParams;
                    }
                    boolean z13 = (createStatusDrawableParams2 & 4) != 0;
                    boolean z14 = (createStatusDrawableParams2 & 8) != 0;
                    if (z12) {
                        int i16 = this.animateFromStatusDrawableParams;
                        boolean z15 = (i16 & 4) != 0;
                        boolean z16 = (i16 & 8) != 0;
                        float f29 = i14;
                        float f30 = f9;
                        drawClockOrErrorLayout(canvas, z15, z16, f13, f30, f29, f15, 1.0f - this.statusDrawableProgress, z2);
                        drawClockOrErrorLayout(canvas, z13, z14, f13, f30, f29, f15, this.statusDrawableProgress, z2);
                        if (!this.currentMessageObject.isOutOwner()) {
                            if (!z15 && !z16) {
                                drawViewsAndRepliesLayout(canvas, f13, f9, f29, f15, 1.0f - this.statusDrawableProgress, z2);
                            }
                            if (!z13 && !z14) {
                                drawViewsAndRepliesLayout(canvas, f13, f9, f29, f15, this.statusDrawableProgress, z2);
                            }
                        }
                    } else {
                        if (!this.currentMessageObject.isOutOwner() && !z13 && !z14) {
                            drawViewsAndRepliesLayout(canvas, f13, f9, i14, f15, 1.0f, z2);
                        }
                        drawClockOrErrorLayout(canvas, z13, z14, f13, f9, i14, f15, 1.0f, z2);
                    }
                    if (this.currentMessageObject.isOutOwner()) {
                        drawViewsAndRepliesLayout(canvas, f13, f9, i14, f15, 1.0f, z2);
                    }
                    TransitionParams transitionParams4 = this.transitionParams;
                    transitionParams4.lastStatusDrawableParams = transitionParams4.createStatusDrawableParams();
                    if (z13 && z6 && getParent() != null) {
                        ((View) getParent()).invalidate();
                    }
                    f27 = f28;
                }
                canvas.save();
                float f31 = 6.5f;
                if (this.transitionParams.animateEditedEnter) {
                    TransitionParams transitionParams5 = this.transitionParams;
                    if (transitionParams5.animateChangeProgress != 1.0f) {
                        if (transitionParams5.animateEditedLayout != null) {
                            canvas.translate(f16 + f27, ((f13 - AndroidUtilities.dp((this.pinnedBottom || this.pinnedTop) ? 7.5f : 7.5f)) - cachedStaticLayout.layout.getHeight()) + i14);
                            int alpha5 = Theme.chat_timePaint.getAlpha();
                            Theme.chat_timePaint.setAlpha((int) (alpha5 * this.transitionParams.animateChangeProgress));
                            this.transitionParams.animateEditedLayout.draw(canvas);
                            Theme.chat_timePaint.setAlpha(alpha5);
                            this.transitionParams.animateTimeLayout.draw(canvas);
                        } else {
                            int alpha6 = Theme.chat_timePaint.getAlpha();
                            canvas.save();
                            float f32 = i14;
                            canvas.translate(this.transitionParams.animateFromTimeX + f27, ((f13 - AndroidUtilities.dp((this.pinnedBottom || this.pinnedTop) ? 7.5f : 6.5f)) - cachedStaticLayout.layout.getHeight()) + f32);
                            float f33 = alpha6;
                            Theme.chat_timePaint.setAlpha((int) ((1.0f - this.transitionParams.animateChangeProgress) * f33));
                            this.transitionParams.animateTimeLayout.draw(canvas);
                            canvas.restore();
                            canvas.translate(f16 + f27, ((f13 - AndroidUtilities.dp((this.pinnedBottom || this.pinnedTop) ? 7.5f : 7.5f)) - cachedStaticLayout.layout.getHeight()) + f32);
                            Theme.chat_timePaint.setAlpha((int) (f33 * this.transitionParams.animateChangeProgress));
                            cachedStaticLayout.draw(canvas);
                            Theme.chat_timePaint.setAlpha(alpha6);
                        }
                        canvas.restore();
                        i3 = i14;
                        z3 = false;
                    }
                }
                float f34 = f16 + f27;
                this.drawTimeX = f34;
                float dp10 = ((f13 - AndroidUtilities.dp((this.pinnedBottom || this.pinnedTop) ? 7.5f : 7.5f)) - cachedStaticLayout.layout.getHeight()) + i14;
                this.drawTimeY = dp10;
                canvas.translate(f34, dp10);
                cachedStaticLayout.draw(canvas);
                canvas.restore();
                i3 = i14;
                z3 = false;
            }
            if (this.currentMessageObject.isOutOwner()) {
                int createStatusDrawableParams3 = this.transitionParams.createStatusDrawableParams();
                int i17 = this.transitionParams.lastStatusDrawableParams;
                if (i17 >= 0 && i17 != createStatusDrawableParams3 && !this.statusDrawableAnimationInProgress) {
                    createStatusDrawableAnimator(i17, createStatusDrawableParams3, z6);
                }
                if (this.statusDrawableAnimationInProgress) {
                    createStatusDrawableParams3 = this.animateToStatusDrawableParams;
                }
                boolean z17 = (createStatusDrawableParams3 & 1) != 0;
                boolean z18 = (createStatusDrawableParams3 & 2) != 0;
                boolean z19 = (createStatusDrawableParams3 & 4) != 0;
                boolean z20 = (createStatusDrawableParams3 & 8) != 0;
                if (this.transitionYOffsetForDrawables != 0.0f) {
                    canvas.save();
                    canvas.translate(0.0f, this.transitionYOffsetForDrawables);
                    z4 = true;
                } else {
                    z4 = false;
                }
                if (this.statusDrawableAnimationInProgress) {
                    int i18 = this.animateFromStatusDrawableParams;
                    boolean z21 = (i18 & 1) != 0;
                    boolean z22 = (i18 & 2) != 0;
                    boolean z23 = (i18 & 4) != 0;
                    boolean z24 = (i18 & 8) != 0;
                    if (!z23 && z22 && z18 && !z21 && z17) {
                        f6 = 0.0f;
                        c3 = 5;
                        drawStatusDrawable(canvas, z17, z18, z19, z20, f9, z3, i3, f13, this.statusDrawableProgress, true, z2);
                    } else {
                        f6 = 0.0f;
                        c3 = 5;
                        float f35 = i3;
                        boolean z25 = z22;
                        boolean z26 = z23;
                        boolean z27 = z24;
                        float f36 = f9;
                        boolean z28 = z3;
                        drawStatusDrawable(canvas, z21, z25, z26, z27, f36, z28, f35, f13, 1.0f - this.statusDrawableProgress, false, z2);
                        drawStatusDrawable(canvas, z17, z18, z19, z20, f36, z28, f35, f13, this.statusDrawableProgress, false, z2);
                    }
                } else {
                    f6 = 0.0f;
                    c3 = 5;
                    drawStatusDrawable(canvas, z17, z18, z19, z20, f9, z3, i3, f13, 1.0f, false, z2);
                }
                if (z4) {
                    canvas.restore();
                }
                TransitionParams transitionParams6 = this.transitionParams;
                transitionParams6.lastStatusDrawableParams = transitionParams6.createStatusDrawableParams();
                if (z6 && z19 && getParent() != null) {
                    ((View) getParent()).invalidate();
                }
            } else {
                f6 = 0.0f;
                c3 = 5;
            }
            canvas.restore();
            if (this.unlockLayout != null) {
                if (this.unlockX == f6 || this.unlockY == f6) {
                    calculateUnlockXY();
                }
                this.unlockSpoilerPath.rewind();
                RectF rectF2 = AndroidUtilities.rectTmp;
                rectF2.set(this.photoImage.getImageX(), this.photoImage.getImageY(), this.photoImage.getImageX2(), this.photoImage.getImageY2());
                int[] roundRadius2 = this.photoImage.getRoundRadius();
                float[] fArr = this.unlockSpoilerRadii;
                float f37 = roundRadius2[0];
                fArr[1] = f37;
                fArr[0] = f37;
                float f38 = roundRadius2[1];
                fArr[3] = f38;
                fArr[2] = f38;
                float f39 = roundRadius2[2];
                fArr[c3] = f39;
                fArr[c] = f39;
                float f40 = roundRadius2[3];
                fArr[c2] = f40;
                fArr[6] = f40;
                this.unlockSpoilerPath.addRoundRect(rectF2, fArr, Path.Direction.CW);
                canvas.save();
                canvas.clipPath(this.unlockSpoilerPath);
                this.unlockSpoilerPath.rewind();
                rectF2.set(this.unlockX - AndroidUtilities.dp(12.0f), this.unlockY - AndroidUtilities.dp(8.0f), this.unlockX + Theme.chat_msgUnlockDrawable.getIntrinsicWidth() + AndroidUtilities.dp(14.0f) + this.unlockLayout.getWidth() + AndroidUtilities.dp(12.0f), this.unlockY + this.unlockLayout.getHeight() + AndroidUtilities.dp(8.0f));
                this.unlockSpoilerPath.addRoundRect(rectF2, AndroidUtilities.dp(32.0f), AndroidUtilities.dp(32.0f), Path.Direction.CW);
                canvas.clipPath(this.unlockSpoilerPath, Region.Op.DIFFERENCE);
                this.unlockSpoilerEffect.setColor(ColorUtils.setAlphaComponent(-1, (int) (Color.alpha(-1) * 0.325f)));
                this.unlockSpoilerEffect.setBounds((int) this.photoImage.getImageX(), (int) this.photoImage.getImageY(), (int) this.photoImage.getImageX2(), (int) this.photoImage.getImageY2());
                this.unlockSpoilerEffect.draw(canvas);
                invalidate();
                canvas.restore();
                canvas.saveLayerAlpha(0.0f, 0.0f, getWidth(), getHeight(), (int) (this.unlockAlpha * 255.0f), 31);
                int alpha7 = Theme.chat_timeBackgroundPaint.getAlpha();
                Theme.chat_timeBackgroundPaint.setAlpha((int) (alpha7 * 0.7f));
                canvas.drawRoundRect(rectF2, AndroidUtilities.dp(32.0f), AndroidUtilities.dp(32.0f), Theme.chat_timeBackgroundPaint);
                Theme.chat_timeBackgroundPaint.setAlpha(alpha7);
                canvas.translate(this.unlockX + AndroidUtilities.dp(4.0f), this.unlockY);
                Drawable drawable = Theme.chat_msgUnlockDrawable;
                drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), Theme.chat_msgUnlockDrawable.getIntrinsicHeight());
                Theme.chat_msgUnlockDrawable.draw(canvas);
                canvas.translate(AndroidUtilities.dp(6.0f) + Theme.chat_msgUnlockDrawable.getIntrinsicWidth(), f6);
                this.unlockLayout.draw(canvas);
                canvas.restore();
                if (this.videoInfoLayout != null && this.photoImage.getVisible() && this.imageBackgroundSideColor == 0) {
                    int i19 = SharedConfig.bubbleRadius;
                    if (i19 > 2) {
                        dp = AndroidUtilities.dp(i19 - 2);
                        z3 = SharedConfig.bubbleRadius >= 10;
                    } else {
                        dp = AndroidUtilities.dp(i19);
                    }
                    int imageX = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(9.0f));
                    int imageY = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(6.0f));
                    this.rect.set(imageX - AndroidUtilities.dp(4.0f), imageY - AndroidUtilities.dp(1.5f), this.durationWidth + imageX + AndroidUtilities.dp(4.0f) + AndroidUtilities.dp(z3 ? 2.0f : 0.0f), this.videoInfoLayout.getHeight() + imageY + AndroidUtilities.dp(1.5f));
                    canvas.drawRoundRect(this.rect, dp, dp, getThemedPaint(str));
                    canvas.save();
                    canvas.translate(imageX + (z3 ? 2 : 0), imageY);
                    this.videoInfoLayout.draw(canvas);
                    canvas.restore();
                }
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void createStatusDrawableAnimator(int i, int i2, final boolean z) {
        boolean z2 = false;
        boolean z3 = (i2 & 1) != 0;
        boolean z4 = (i2 & 2) != 0;
        boolean z5 = (i & 1) != 0;
        boolean z6 = (i & 2) != 0;
        if (!((i & 4) != 0) && z6 && z4 && !z5 && z3) {
            z2 = true;
        }
        if (!this.transitionParams.messageEntering || z2) {
            this.statusDrawableProgress = 0.0f;
            ValueAnimator ofFloat = ValueAnimator.ofFloat(0.0f, 1.0f);
            this.statusDrawableAnimator = ofFloat;
            if (z2) {
                ofFloat.setDuration(220L);
            } else {
                ofFloat.setDuration(150L);
            }
            this.statusDrawableAnimator.setInterpolator(CubicBezierInterpolator.DEFAULT);
            this.animateFromStatusDrawableParams = i;
            this.animateToStatusDrawableParams = i2;
            this.statusDrawableAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { // from class: org.telegram.ui.Cells.ChatMessageCell$$ExternalSyntheticLambda1
                @Override // android.animation.ValueAnimator.AnimatorUpdateListener
                public final void onAnimationUpdate(ValueAnimator valueAnimator) {
                    ChatMessageCell.this.lambda$createStatusDrawableAnimator$12(z, valueAnimator);
                }
            });
            this.statusDrawableAnimator.addListener(new AnimatorListenerAdapter() { // from class: org.telegram.ui.Cells.ChatMessageCell.10
                @Override // android.animation.AnimatorListenerAdapter, android.animation.Animator.AnimatorListener
                public void onAnimationEnd(Animator animator) {
                    int createStatusDrawableParams = ChatMessageCell.this.transitionParams.createStatusDrawableParams();
                    if (ChatMessageCell.this.animateToStatusDrawableParams == createStatusDrawableParams) {
                        ChatMessageCell.this.statusDrawableAnimationInProgress = false;
                        ChatMessageCell chatMessageCell = ChatMessageCell.this;
                        chatMessageCell.transitionParams.lastStatusDrawableParams = chatMessageCell.animateToStatusDrawableParams;
                        return;
                    }
                    ChatMessageCell chatMessageCell2 = ChatMessageCell.this;
                    chatMessageCell2.createStatusDrawableAnimator(chatMessageCell2.animateToStatusDrawableParams, createStatusDrawableParams, z);
                }
            });
            this.statusDrawableAnimationInProgress = true;
            this.statusDrawableAnimator.start();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$createStatusDrawableAnimator$12(boolean z, ValueAnimator valueAnimator) {
        this.statusDrawableProgress = ((Float) valueAnimator.getAnimatedValue()).floatValue();
        invalidate();
        if (!z || getParent() == null) {
            return;
        }
        ((View) getParent()).invalidate();
    }

    /* JADX WARN: Removed duplicated region for block: B:38:0x0099  */
    /* JADX WARN: Removed duplicated region for block: B:41:0x00b0  */
    /* JADX WARN: Removed duplicated region for block: B:44:0x00d3  */
    /* JADX WARN: Removed duplicated region for block: B:67:0x0155  */
    /* JADX WARN: Removed duplicated region for block: B:70:0x01a1  */
    /* JADX WARN: Removed duplicated region for block: B:73:? A[RETURN, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:77:? A[RETURN, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void drawClockOrErrorLayout(Canvas canvas, boolean z, boolean z2, float f, float f2, float f3, float f4, float f5, boolean z3) {
        float dp;
        float currentTotalHeight;
        int themedColor;
        float dp2;
        float dp3;
        boolean z4 = f5 != 1.0f;
        float f6 = (f5 * 0.5f) + 0.5f;
        float f7 = f2 * f5;
        if (z) {
            if (this.currentMessageObject.isOutOwner()) {
                return;
            }
            MsgClockDrawable msgClockDrawable = Theme.chat_msgClockDrawable;
            if (shouldDrawTimeOnMedia()) {
                themedColor = getThemedColor(Theme.key_chat_mediaSentClock);
            } else {
                themedColor = getThemedColor(z3 ? Theme.key_chat_outSentClockSelected : Theme.key_chat_mediaSentClock);
            }
            msgClockDrawable.setColor(themedColor);
            if (shouldDrawTimeOnMedia()) {
                dp2 = this.photoImage.getImageY2() + this.additionalTimeOffsetY;
                dp3 = AndroidUtilities.dp(9.0f);
            } else {
                dp2 = (f - AndroidUtilities.dp((this.pinnedBottom || this.pinnedTop) ? 9.5f : 8.5f)) + f3;
                if (this.isRoundVideo) {
                    dp3 = (AndroidUtilities.dp(this.drawPinnedBottom ? 4.0f : 5.0f) + this.reactionsLayoutInBubble.getCurrentTotalHeight(this.transitionParams.animateChangeProgress)) * (1.0f - getVideoTranscriptionProgress());
                }
                BaseCell.setDrawableBounds(msgClockDrawable, f4 + (this.currentMessageObject.scheduled ? 0 : AndroidUtilities.dp(11.0f)), dp2 - msgClockDrawable.getIntrinsicHeight());
                msgClockDrawable.setAlpha((int) (f7 * 255.0f));
                if (z4) {
                    canvas.save();
                    canvas.scale(f6, f6, msgClockDrawable.getBounds().centerX(), msgClockDrawable.getBounds().centerY());
                }
                msgClockDrawable.draw(canvas);
                msgClockDrawable.setAlpha(255);
                invalidate();
                if (z4) {
                    return;
                }
                canvas.restore();
                return;
            }
            dp2 -= dp3;
            BaseCell.setDrawableBounds(msgClockDrawable, f4 + (this.currentMessageObject.scheduled ? 0 : AndroidUtilities.dp(11.0f)), dp2 - msgClockDrawable.getIntrinsicHeight());
            msgClockDrawable.setAlpha((int) (f7 * 255.0f));
            if (z4) {
            }
            msgClockDrawable.draw(canvas);
            msgClockDrawable.setAlpha(255);
            invalidate();
            if (z4) {
            }
        } else if (!z2 || this.currentMessageObject.isOutOwner()) {
        } else {
            float dp4 = f4 + (this.currentMessageObject.scheduled ? 0 : AndroidUtilities.dp(11.0f));
            float f8 = 21.5f;
            if (shouldDrawTimeOnMedia()) {
                dp = this.photoImage.getImageY2() + this.additionalTimeOffsetY;
                currentTotalHeight = AndroidUtilities.dp(21.5f);
            } else {
                if (!this.pinnedBottom && !this.pinnedTop) {
                    f8 = 20.5f;
                }
                dp = (f - AndroidUtilities.dp(f8)) + f3;
                if (this.isRoundVideo) {
                    currentTotalHeight = this.reactionsLayoutInBubble.getCurrentTotalHeight(this.transitionParams.animateChangeProgress) * (1.0f - getVideoTranscriptionProgress());
                }
                this.rect.set(dp4, dp, AndroidUtilities.dp(14.0f) + dp4, AndroidUtilities.dp(14.0f) + dp);
                int alpha = Theme.chat_msgErrorPaint.getAlpha();
                int i = (int) (f7 * 255.0f);
                Theme.chat_msgErrorPaint.setAlpha(i);
                if (z4) {
                    canvas.save();
                    canvas.scale(f6, f6, this.rect.centerX(), this.rect.centerY());
                }
                canvas.drawRoundRect(this.rect, AndroidUtilities.dp(1.0f), AndroidUtilities.dp(1.0f), Theme.chat_msgErrorPaint);
                Theme.chat_msgErrorPaint.setAlpha(alpha);
                Drawable themedDrawable = getThemedDrawable("drawableMsgError");
                BaseCell.setDrawableBounds(themedDrawable, dp4 + AndroidUtilities.dp(6.0f), dp + AndroidUtilities.dp(2.0f));
                themedDrawable.setAlpha(i);
                themedDrawable.draw(canvas);
                themedDrawable.setAlpha(255);
                if (z4) {
                    return;
                }
                canvas.restore();
                return;
            }
            dp -= currentTotalHeight;
            this.rect.set(dp4, dp, AndroidUtilities.dp(14.0f) + dp4, AndroidUtilities.dp(14.0f) + dp);
            int alpha2 = Theme.chat_msgErrorPaint.getAlpha();
            int i2 = (int) (f7 * 255.0f);
            Theme.chat_msgErrorPaint.setAlpha(i2);
            if (z4) {
            }
            canvas.drawRoundRect(this.rect, AndroidUtilities.dp(1.0f), AndroidUtilities.dp(1.0f), Theme.chat_msgErrorPaint);
            Theme.chat_msgErrorPaint.setAlpha(alpha2);
            Drawable themedDrawable2 = getThemedDrawable("drawableMsgError");
            BaseCell.setDrawableBounds(themedDrawable2, dp4 + AndroidUtilities.dp(6.0f), dp + AndroidUtilities.dp(2.0f));
            themedDrawable2.setAlpha(i2);
            themedDrawable2.draw(canvas);
            themedDrawable2.setAlpha(255);
            if (z4) {
            }
        }
    }

    public float getTimeY() {
        int i;
        int i2 = 0;
        if (shouldDrawTimeOnMedia()) {
            if (this.drawCommentButton) {
                i2 = AndroidUtilities.dp(41.3f);
            }
        } else if (this.currentMessageObject.isSponsored()) {
            i = -AndroidUtilities.dp(48.0f);
            if (this.hasNewLineForTime) {
                i -= AndroidUtilities.dp(4.0f);
            }
            return getTimeY(i);
        } else if (this.drawCommentButton) {
            i2 = AndroidUtilities.dp(43.0f);
        }
        i = -i2;
        return getTimeY(i);
    }

    public float getTimeY(float f) {
        if (shouldDrawTimeOnMedia() && this.documentAttachType != 7) {
            return ((this.photoImage.getImageY2() + this.additionalTimeOffsetY) - AndroidUtilities.dp(7.3f)) - this.timeLayout.layout.getHeight();
        }
        float dp = ((this.layoutHeight - AndroidUtilities.dp((this.pinnedBottom || this.pinnedTop) ? 7.5f : 6.5f)) - this.timeLayout.layout.getHeight()) + f;
        if (this.isRoundVideo) {
            return dp - ((AndroidUtilities.dp(this.drawPinnedBottom ? 4.0f : 5.0f) + this.reactionsLayoutInBubble.getCurrentTotalHeight(this.transitionParams.animateChangeProgress)) * (1.0f - getVideoTranscriptionProgress()));
        }
        return dp;
    }

    /* JADX WARN: Removed duplicated region for block: B:100:0x01cf  */
    /* JADX WARN: Removed duplicated region for block: B:102:0x01de  */
    /* JADX WARN: Removed duplicated region for block: B:105:0x01e9  */
    /* JADX WARN: Removed duplicated region for block: B:84:0x012c  */
    /* JADX WARN: Removed duplicated region for block: B:87:0x0156  */
    /* JADX WARN: Removed duplicated region for block: B:91:0x019d  */
    /* JADX WARN: Removed duplicated region for block: B:94:0x01b3  */
    /* JADX WARN: Removed duplicated region for block: B:95:0x01b7  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void drawViewsAndRepliesLayout(Canvas canvas, float f, float f2, float f3, float f4, float f5, boolean z) {
        Drawable themedDrawable;
        float f6;
        float f7;
        float f8;
        float f9;
        CachedStaticLayout cachedStaticLayout;
        float f10;
        Drawable themedDrawable2;
        float drawableBounds;
        Drawable themedDrawable3;
        boolean z2 = f5 != 1.0f;
        float f11 = (f5 * 0.5f) + 0.5f;
        float f12 = f2 * f5;
        ReactionsLayoutInBubble reactionsLayoutInBubble = this.reactionsLayoutInBubble;
        float currentWidth = reactionsLayoutInBubble.isSmall ? reactionsLayoutInBubble.getCurrentWidth(1.0f) : 0.0f;
        int alpha = Theme.chat_timePaint.getAlpha();
        float timeY = getTimeY(f3);
        if (this.repliesLayout != null || this.transitionParams.animateReplies) {
            TransitionParams transitionParams = this.transitionParams;
            float f13 = (transitionParams.shouldAnimateTimeX ? this.timeX : f4) + currentWidth;
            boolean z3 = transitionParams.animateReplies && this.transitionParams.animateRepliesLayout == null && this.repliesLayout != null;
            boolean z4 = this.transitionParams.animateReplies && this.transitionParams.animateRepliesLayout != null && this.repliesLayout == null;
            boolean z5 = (!this.transitionParams.animateReplies || this.transitionParams.animateRepliesLayout == null || this.repliesLayout == null) ? false : true;
            if (!this.isRoundVideo || !this.transitionParams.animateDrawBackground) {
                TransitionParams transitionParams2 = this.transitionParams;
                if (!transitionParams2.shouldAnimateTimeX || z3) {
                    f13 += transitionParams2.deltaRight;
                } else if (z4) {
                    f13 = transitionParams2.animateFromTimeXReplies;
                } else {
                    float f14 = transitionParams2.animateFromTimeXReplies;
                    float f15 = this.transitionParams.animateChangeProgress;
                    f13 = (f13 * f15) + (f14 * (1.0f - f15));
                }
            }
            MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
            if (groupedMessages != null) {
                MessageObject.GroupedMessages.TransitionParams transitionParams3 = groupedMessages.transitionParams;
                if (transitionParams3.backgroundChangeBounds) {
                    f13 += transitionParams3.offsetRight;
                }
            }
            if (this.transitionParams.animateBackgroundBoundsInner) {
                f13 += this.animationOffsetX;
            }
            if (shouldDrawTimeOnMedia()) {
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    themedDrawable = getThemedDrawable("drawableMsgStickerReplies");
                } else {
                    themedDrawable = Theme.chat_msgMediaRepliesDrawable;
                }
            } else if (!this.currentMessageObject.isOutOwner()) {
                themedDrawable = z ? Theme.chat_msgInRepliesSelectedDrawable : Theme.chat_msgInRepliesDrawable;
            } else {
                themedDrawable = getThemedDrawable("drawableMsgOutReplies");
            }
            float drawableBounds2 = BaseCell.setDrawableBounds(themedDrawable, f13, timeY, Theme.chat_timePaint.getTextSize());
            if (z3) {
                f7 = this.transitionParams.animateChangeProgress;
            } else if (z4) {
                f7 = 1.0f - this.transitionParams.animateChangeProgress;
            } else {
                f6 = f12;
                themedDrawable.setAlpha((int) (f6 * 255.0f));
                if (z2) {
                    canvas.save();
                    canvas.scale(f11, f11, (((AndroidUtilities.dp(3.0f) + drawableBounds2) + this.repliesTextWidth) / 2.0f) + f13, themedDrawable.getBounds().centerY());
                }
                themedDrawable.draw(canvas);
                themedDrawable.setAlpha(255);
                if (this.transitionParams.animateReplies) {
                    f8 = f12;
                    f9 = f11;
                } else {
                    if (z5) {
                        canvas.save();
                        TextPaint textPaint = Theme.chat_timePaint;
                        double d = alpha;
                        f8 = f12;
                        f9 = f11;
                        double d2 = this.transitionParams.animateChangeProgress;
                        Double.isNaN(d2);
                        Double.isNaN(d);
                        textPaint.setAlpha((int) (d * (1.0d - d2)));
                        canvas.translate(f13 + drawableBounds2 + AndroidUtilities.dp(3.0f), timeY);
                        this.transitionParams.animateRepliesLayout.draw(canvas);
                        canvas.restore();
                    } else {
                        f8 = f12;
                        f9 = f11;
                    }
                    Theme.chat_timePaint.setAlpha((int) (alpha * f6));
                }
                canvas.save();
                canvas.translate(f13 + drawableBounds2 + AndroidUtilities.dp(3.0f), timeY);
                cachedStaticLayout = this.repliesLayout;
                if (cachedStaticLayout == null) {
                    cachedStaticLayout.draw(canvas);
                } else if (this.transitionParams.animateRepliesLayout != null) {
                    this.transitionParams.animateRepliesLayout.draw(canvas);
                }
                canvas.restore();
                if (this.repliesLayout != null) {
                    currentWidth += drawableBounds2 + this.repliesTextWidth + AndroidUtilities.dp(10.0f);
                }
                if (z2) {
                    canvas.restore();
                }
                if (this.transitionParams.animateReplies) {
                    Theme.chat_timePaint.setAlpha(alpha);
                }
                this.transitionParams.lastTimeXReplies = f13;
            }
            f6 = f7 * f12;
            themedDrawable.setAlpha((int) (f6 * 255.0f));
            if (z2) {
            }
            themedDrawable.draw(canvas);
            themedDrawable.setAlpha(255);
            if (this.transitionParams.animateReplies) {
            }
            canvas.save();
            canvas.translate(f13 + drawableBounds2 + AndroidUtilities.dp(3.0f), timeY);
            cachedStaticLayout = this.repliesLayout;
            if (cachedStaticLayout == null) {
            }
            canvas.restore();
            if (this.repliesLayout != null) {
            }
            if (z2) {
            }
            if (this.transitionParams.animateReplies) {
            }
            this.transitionParams.lastTimeXReplies = f13;
        } else {
            f8 = f12;
            f9 = f11;
        }
        if (this.viewsLayout != null) {
            TransitionParams transitionParams4 = this.transitionParams;
            boolean z6 = transitionParams4.shouldAnimateTimeX;
            float f16 = (z6 ? this.timeX : f4) + currentWidth;
            if (!this.isRoundVideo || !transitionParams4.animateDrawBackground) {
                if (!z6) {
                    f16 += transitionParams4.deltaRight;
                } else {
                    float f17 = transitionParams4.animateFromTimeXViews;
                    float f18 = this.transitionParams.animateChangeProgress;
                    f16 = (f16 * f18) + (f17 * (1.0f - f18));
                }
            }
            MessageObject.GroupedMessages groupedMessages2 = this.currentMessagesGroup;
            if (groupedMessages2 != null) {
                MessageObject.GroupedMessages.TransitionParams transitionParams5 = groupedMessages2.transitionParams;
                if (transitionParams5.backgroundChangeBounds) {
                    f16 += transitionParams5.offsetRight;
                }
            }
            if (this.transitionParams.animateBackgroundBoundsInner) {
                f16 += this.animationOffsetX;
            }
            if (shouldDrawTimeOnMedia()) {
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    themedDrawable3 = getThemedDrawable("drawableMsgStickerViews");
                } else {
                    themedDrawable3 = Theme.chat_msgMediaViewsDrawable;
                }
            } else if (!this.currentMessageObject.isOutOwner()) {
                themedDrawable3 = z ? Theme.chat_msgInViewsSelectedDrawable : Theme.chat_msgInViewsDrawable;
            } else {
                themedDrawable3 = getThemedDrawable(z ? "drawableMsgOutViewsSelected" : "drawableMsgOutViews");
            }
            float drawableBounds3 = BaseCell.setDrawableBounds(themedDrawable3, f16, AndroidUtilities.dp(1.5f) + timeY, Theme.chat_timePaint.getTextSize() - AndroidUtilities.dp(2.0f));
            if (z2) {
                canvas.save();
                f10 = f9;
                canvas.scale(f10, f10, (((themedDrawable3.getIntrinsicWidth() + AndroidUtilities.dp(3.0f)) + this.viewsTextWidth) / 2.0f) + f16, themedDrawable3.getBounds().centerY());
            } else {
                f10 = f9;
            }
            themedDrawable3.setAlpha((int) (f8 * 255.0f));
            themedDrawable3.draw(canvas);
            themedDrawable3.setAlpha(255);
            if (this.transitionParams.animateViewsLayout != null) {
                canvas.save();
                TextPaint textPaint2 = Theme.chat_timePaint;
                double d3 = alpha;
                double d4 = this.transitionParams.animateChangeProgress;
                Double.isNaN(d4);
                Double.isNaN(d3);
                textPaint2.setAlpha((int) (d3 * (1.0d - d4)));
                canvas.translate(f16 + drawableBounds3 + AndroidUtilities.dp(3.0f), timeY);
                this.transitionParams.animateViewsLayout.draw(canvas);
                canvas.restore();
                Theme.chat_timePaint.setAlpha((int) (alpha * this.transitionParams.animateChangeProgress));
            }
            canvas.save();
            canvas.translate(f16 + drawableBounds3 + AndroidUtilities.dp(3.0f), timeY);
            this.viewsLayout.draw(canvas);
            canvas.restore();
            if (z2) {
                canvas.restore();
            }
            currentWidth += this.viewsTextWidth + drawableBounds3 + AndroidUtilities.dp(10.0f);
            if (this.transitionParams.animateViewsLayout != null) {
                Theme.chat_timePaint.setAlpha(alpha);
            }
            this.transitionParams.lastTimeXViews = f16;
        } else {
            f10 = f9;
        }
        if (this.isPinned || this.transitionParams.animatePinned) {
            TransitionParams transitionParams6 = this.transitionParams;
            float f19 = (transitionParams6.shouldAnimateTimeX ? this.timeX : f4) + currentWidth;
            boolean z7 = transitionParams6.animatePinned && this.isPinned;
            boolean z8 = this.transitionParams.animatePinned && !this.isPinned;
            if (!this.isRoundVideo) {
                TransitionParams transitionParams7 = this.transitionParams;
                if (!transitionParams7.shouldAnimateTimeX || z7) {
                    f19 += transitionParams7.deltaRight;
                } else if (z8) {
                    f19 = transitionParams7.animateFromTimeXPinned;
                } else {
                    float f20 = transitionParams7.animateFromTimeXPinned;
                    float f21 = transitionParams7.animateChangeProgress;
                    f19 = (f19 * f21) + (f20 * (1.0f - f21));
                }
            }
            MessageObject.GroupedMessages groupedMessages3 = this.currentMessagesGroup;
            if (groupedMessages3 != null) {
                MessageObject.GroupedMessages.TransitionParams transitionParams8 = groupedMessages3.transitionParams;
                if (transitionParams8.backgroundChangeBounds) {
                    f19 += transitionParams8.offsetRight;
                }
            }
            if (this.transitionParams.animateBackgroundBoundsInner) {
                f19 += this.animationOffsetX;
            }
            if (shouldDrawTimeOnMedia()) {
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    themedDrawable2 = getThemedDrawable("drawableMsgStickerPinned");
                } else {
                    themedDrawable2 = Theme.chat_msgMediaPinnedDrawable;
                }
            } else if (!this.currentMessageObject.isOutOwner()) {
                themedDrawable2 = z ? Theme.chat_msgInPinnedSelectedDrawable : Theme.chat_msgInPinnedDrawable;
            } else {
                themedDrawable2 = getThemedDrawable(z ? "drawableMsgOutPinnedSelected" : "drawableMsgOutPinned");
            }
            if (this.transitionParams.animatePinned) {
                if (this.isPinned) {
                    themedDrawable2.setAlpha((int) (f8 * 255.0f * this.transitionParams.animateChangeProgress));
                    drawableBounds = BaseCell.setDrawableBounds(themedDrawable2, f19, timeY, Theme.chat_timePaint.getTextSize() + AndroidUtilities.dp(1.0f));
                } else {
                    themedDrawable2.setAlpha((int) (f8 * 255.0f * (1.0f - this.transitionParams.animateChangeProgress)));
                    drawableBounds = BaseCell.setDrawableBounds(themedDrawable2, f19, timeY, Theme.chat_timePaint.getTextSize() + AndroidUtilities.dp(1.0f));
                }
            } else {
                themedDrawable2.setAlpha((int) (f8 * 255.0f));
                drawableBounds = BaseCell.setDrawableBounds(themedDrawable2, f19, timeY, Theme.chat_timePaint.getTextSize() + AndroidUtilities.dp(1.0f));
            }
            if (z2) {
                canvas.save();
                canvas.scale(f10, f10, (drawableBounds / 2.0f) + f19, themedDrawable2.getBounds().centerY());
            }
            themedDrawable2.draw(canvas);
            themedDrawable2.setAlpha(255);
            if (z2) {
                canvas.restore();
            }
            this.transitionParams.lastTimeXPinned = f19;
        }
    }

    private void drawStatusDrawable(Canvas canvas, boolean z, boolean z2, boolean z3, boolean z4, float f, boolean z5, float f2, float f3, float f4, boolean z6, boolean z7) {
        float imageY2;
        int dp;
        int dp2;
        int i;
        Drawable themedDrawable;
        Drawable drawable;
        int i2;
        MessageObject messageObject;
        boolean z8 = (f4 == 1.0f || z6) ? false : true;
        float f5 = (f4 * 0.5f) + 0.5f;
        float f6 = z8 ? f * f4 : f;
        if (this.documentAttachType != 7 || ((messageObject = this.currentMessageObject) != null && messageObject.isRoundOnce())) {
            imageY2 = this.photoImage.getImageY2() + this.additionalTimeOffsetY;
        } else {
            imageY2 = f3 - ((AndroidUtilities.dp(this.drawPinnedBottom ? 4.0f : 5.0f) + this.reactionsLayoutInBubble.getCurrentTotalHeight(this.transitionParams.animateChangeProgress)) * (1.0f - getVideoTranscriptionProgress()));
        }
        float dp3 = imageY2 - AndroidUtilities.dp(8.5f);
        MessageObject messageObject2 = this.currentMessageObject;
        float dp4 = (messageObject2 == null || !messageObject2.isAnyKindOfSticker()) ? 0.0f : AndroidUtilities.dp(-6.0f);
        if (z3) {
            MsgClockDrawable msgClockDrawable = Theme.chat_msgClockDrawable;
            if (shouldDrawTimeOnMedia()) {
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    i2 = getThemedColor(Theme.key_chat_serviceText);
                    BaseCell.setDrawableBounds(msgClockDrawable, ((this.layoutWidth - AndroidUtilities.dp(z5 ? 24.0f : 22.0f)) - msgClockDrawable.getIntrinsicWidth()) + dp4, (dp3 - msgClockDrawable.getIntrinsicHeight()) + f2);
                    msgClockDrawable.setAlpha((int) (this.timeAlpha * 255.0f * f6));
                } else {
                    i2 = getThemedColor(Theme.key_chat_mediaSentClock);
                    BaseCell.setDrawableBounds(msgClockDrawable, ((this.layoutWidth - AndroidUtilities.dp(z5 ? 24.0f : 22.0f)) - msgClockDrawable.getIntrinsicWidth()) + dp4, (dp3 - msgClockDrawable.getIntrinsicHeight()) + f2);
                    msgClockDrawable.setAlpha((int) (f6 * 255.0f));
                }
            } else {
                int themedColor = getThemedColor(Theme.key_chat_outSentClock);
                BaseCell.setDrawableBounds(msgClockDrawable, (this.layoutWidth - AndroidUtilities.dp(18.5f)) - msgClockDrawable.getIntrinsicWidth(), ((f3 - AndroidUtilities.dp(8.5f)) - msgClockDrawable.getIntrinsicHeight()) + f2);
                msgClockDrawable.setAlpha((int) (f6 * 255.0f));
                i2 = themedColor;
            }
            msgClockDrawable.setColor(i2);
            if (z8) {
                canvas.save();
                canvas.scale(f5, f5, msgClockDrawable.getBounds().centerX(), msgClockDrawable.getBounds().centerY());
            }
            msgClockDrawable.draw(canvas);
            msgClockDrawable.setAlpha(255);
            if (z8) {
                canvas.restore();
            }
            invalidate();
        }
        float f7 = 9.0f;
        if (z2) {
            if (shouldDrawTimeOnMedia()) {
                if (z6) {
                    canvas.save();
                }
                if (this.currentMessageObject.shouldDrawWithoutBackground()) {
                    drawable = getThemedDrawable("drawableMsgStickerCheck");
                    if (z) {
                        if (z6) {
                            canvas.translate(AndroidUtilities.dp(4.8f) * (1.0f - f4), 0.0f);
                        }
                        BaseCell.setDrawableBounds(drawable, ((this.layoutWidth - AndroidUtilities.dp(z5 ? 28.3f : 26.3f)) - drawable.getIntrinsicWidth()) + dp4, (dp3 - drawable.getIntrinsicHeight()) + f2);
                    } else {
                        BaseCell.setDrawableBounds(drawable, ((this.layoutWidth - AndroidUtilities.dp(z5 ? 23.5f : 21.5f)) - drawable.getIntrinsicWidth()) + dp4, (dp3 - drawable.getIntrinsicHeight()) + f2);
                    }
                    drawable.setAlpha((int) (this.timeAlpha * 255.0f * f6));
                } else {
                    if (z) {
                        if (z6) {
                            canvas.translate(AndroidUtilities.dp(4.8f) * (1.0f - f4), 0.0f);
                        }
                        BaseCell.setDrawableBounds(Theme.chat_msgMediaCheckDrawable, (this.layoutWidth - AndroidUtilities.dp(z5 ? 28.3f : 26.3f)) - Theme.chat_msgMediaCheckDrawable.getIntrinsicWidth(), (dp3 - Theme.chat_msgMediaCheckDrawable.getIntrinsicHeight()) + f2);
                    } else {
                        BaseCell.setDrawableBounds(Theme.chat_msgMediaCheckDrawable, (this.layoutWidth - AndroidUtilities.dp(z5 ? 23.5f : 21.5f)) - Theme.chat_msgMediaCheckDrawable.getIntrinsicWidth(), (dp3 - Theme.chat_msgMediaCheckDrawable.getIntrinsicHeight()) + f2);
                    }
                    Theme.chat_msgMediaCheckDrawable.setAlpha((int) (this.timeAlpha * 255.0f * f6));
                    drawable = Theme.chat_msgMediaCheckDrawable;
                }
                if (z8) {
                    canvas.save();
                    canvas.scale(f5, f5, drawable.getBounds().centerX(), drawable.getBounds().centerY());
                }
                drawable.draw(canvas);
                if (z8) {
                    canvas.restore();
                }
                if (z6) {
                    canvas.restore();
                }
                drawable.setAlpha(255);
            } else {
                if (z6) {
                    canvas.save();
                }
                if (z) {
                    if (z6) {
                        canvas.translate(AndroidUtilities.dp(4.0f) * (1.0f - f4), 0.0f);
                    }
                    themedDrawable = getThemedDrawable(z7 ? "drawableMsgOutCheckReadSelected" : "drawableMsgOutCheckRead");
                    BaseCell.setDrawableBounds(themedDrawable, ((this.layoutWidth - AndroidUtilities.dp(22.5f)) - themedDrawable.getIntrinsicWidth()) + dp4, ((f3 - AndroidUtilities.dp((this.pinnedBottom || this.pinnedTop) ? 9.0f : 8.0f)) - themedDrawable.getIntrinsicHeight()) + f2);
                } else {
                    themedDrawable = getThemedDrawable(z7 ? "drawableMsgOutCheckSelected" : "drawableMsgOutCheck");
                    BaseCell.setDrawableBounds(themedDrawable, ((this.layoutWidth - AndroidUtilities.dp(18.5f)) - themedDrawable.getIntrinsicWidth()) + dp4, ((f3 - AndroidUtilities.dp((this.pinnedBottom || this.pinnedTop) ? 9.0f : 8.0f)) - themedDrawable.getIntrinsicHeight()) + f2);
                }
                themedDrawable.setAlpha((int) (f6 * 255.0f));
                if (z8) {
                    canvas.save();
                    canvas.scale(f5, f5, themedDrawable.getBounds().centerX(), themedDrawable.getBounds().centerY());
                }
                themedDrawable.draw(canvas);
                if (z8) {
                    canvas.restore();
                }
                if (z6) {
                    canvas.restore();
                }
                themedDrawable.setAlpha(255);
            }
        }
        if (z) {
            if (shouldDrawTimeOnMedia()) {
                Drawable themedDrawable2 = this.currentMessageObject.shouldDrawWithoutBackground() ? getThemedDrawable("drawableMsgStickerHalfCheck") : Theme.chat_msgMediaHalfCheckDrawable;
                BaseCell.setDrawableBounds(themedDrawable2, ((this.layoutWidth - AndroidUtilities.dp(z5 ? 23.5f : 21.5f)) - themedDrawable2.getIntrinsicWidth()) + dp4, (dp3 - themedDrawable2.getIntrinsicHeight()) + f2);
                themedDrawable2.setAlpha((int) (this.timeAlpha * 255.0f * f6));
                if (z8 || z6) {
                    canvas.save();
                    canvas.scale(f5, f5, themedDrawable2.getBounds().centerX(), themedDrawable2.getBounds().centerY());
                }
                themedDrawable2.draw(canvas);
                if (z8 || z6) {
                    canvas.restore();
                }
                themedDrawable2.setAlpha(255);
            } else {
                Drawable themedDrawable3 = getThemedDrawable(z7 ? "drawableMsgOutHalfCheckSelected" : "drawableMsgOutHalfCheck");
                float dp5 = (this.layoutWidth - AndroidUtilities.dp(18.0f)) - themedDrawable3.getIntrinsicWidth();
                if (!this.pinnedBottom && !this.pinnedTop) {
                    f7 = 8.0f;
                }
                BaseCell.setDrawableBounds(themedDrawable3, dp5, ((f3 - AndroidUtilities.dp(f7)) - themedDrawable3.getIntrinsicHeight()) + f2);
                themedDrawable3.setAlpha((int) (f6 * 255.0f));
                if (z8 || z6) {
                    canvas.save();
                    canvas.scale(f5, f5, themedDrawable3.getBounds().centerX(), themedDrawable3.getBounds().centerY());
                }
                themedDrawable3.draw(canvas);
                if (z8 || z6) {
                    canvas.restore();
                }
                themedDrawable3.setAlpha(255);
            }
        }
        if (z4) {
            if (shouldDrawTimeOnMedia()) {
                dp = this.layoutWidth - AndroidUtilities.dp(34.5f);
                dp2 = AndroidUtilities.dp(26.5f);
            } else {
                dp = this.layoutWidth - AndroidUtilities.dp(32.0f);
                dp2 = AndroidUtilities.dp((this.pinnedBottom || this.pinnedTop) ? 22.0f : 21.0f);
            }
            float f8 = (f3 - dp2) + f2;
            this.rect.set((int) (dp + dp4), f8, AndroidUtilities.dp(14.0f) + i, AndroidUtilities.dp(14.0f) + f8);
            int alpha = Theme.chat_msgErrorPaint.getAlpha();
            Theme.chat_msgErrorPaint.setAlpha((int) (alpha * f6));
            canvas.drawRoundRect(this.rect, AndroidUtilities.dp(1.0f), AndroidUtilities.dp(1.0f), Theme.chat_msgErrorPaint);
            Theme.chat_msgErrorPaint.setAlpha(alpha);
            BaseCell.setDrawableBounds(Theme.chat_msgErrorDrawable, i + AndroidUtilities.dp(6.0f), f8 + AndroidUtilities.dp(2.0f));
            Theme.chat_msgErrorDrawable.setAlpha((int) (f6 * 255.0f));
            if (z8) {
                canvas.save();
                canvas.scale(f5, f5, Theme.chat_msgErrorDrawable.getBounds().centerX(), Theme.chat_msgErrorDrawable.getBounds().centerY());
            }
            Theme.chat_msgErrorDrawable.draw(canvas);
            Theme.chat_msgErrorDrawable.setAlpha(255);
            if (z8) {
                canvas.restore();
            }
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:389:0x0b5a, code lost:
        if (r0[r15] == 3) goto L641;
     */
    /* JADX WARN: Code restructure failed: missing block: B:619:0x1164, code lost:
        if (r1 == 2) goto L1119;
     */
    /* JADX WARN: Code restructure failed: missing block: B:628:0x1174, code lost:
        if (r1 != (-1)) goto L910;
     */
    /* JADX WARN: Code restructure failed: missing block: B:630:0x117c, code lost:
        if (r43.currentMessageObject.needDrawBluredPreview() == false) goto L1118;
     */
    /* JADX WARN: Code restructure failed: missing block: B:901:0x16fe, code lost:
        if (r43.radialProgress.getIcon() != 4) goto L278;
     */
    /* JADX WARN: Removed duplicated region for block: B:1024:0x1982  */
    /* JADX WARN: Removed duplicated region for block: B:1027:0x1989  */
    /* JADX WARN: Removed duplicated region for block: B:107:0x03af  */
    /* JADX WARN: Removed duplicated region for block: B:108:0x03b3  */
    /* JADX WARN: Removed duplicated region for block: B:1112:0x1b87  */
    /* JADX WARN: Removed duplicated region for block: B:1119:0x1ba4  */
    /* JADX WARN: Removed duplicated region for block: B:1122:0x1bf5  */
    /* JADX WARN: Removed duplicated region for block: B:1144:? A[RETURN, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:333:0x096d  */
    /* JADX WARN: Removed duplicated region for block: B:346:0x09ce  */
    /* JADX WARN: Removed duplicated region for block: B:350:0x09ec  */
    /* JADX WARN: Removed duplicated region for block: B:351:0x09ef  */
    /* JADX WARN: Removed duplicated region for block: B:354:0x09fc  */
    /* JADX WARN: Removed duplicated region for block: B:361:0x0a16  */
    /* JADX WARN: Removed duplicated region for block: B:364:0x0a57  */
    /* JADX WARN: Removed duplicated region for block: B:369:0x0aab  */
    /* JADX WARN: Removed duplicated region for block: B:376:0x0b24  */
    /* JADX WARN: Removed duplicated region for block: B:384:0x0b4a  */
    /* JADX WARN: Removed duplicated region for block: B:388:0x0b57  */
    /* JADX WARN: Removed duplicated region for block: B:391:0x0b5d  */
    /* JADX WARN: Removed duplicated region for block: B:394:0x0b62  */
    /* JADX WARN: Removed duplicated region for block: B:397:0x0b91  */
    /* JADX WARN: Removed duplicated region for block: B:400:0x0b9f  */
    /* JADX WARN: Removed duplicated region for block: B:542:0x0fb9  */
    /* JADX WARN: Removed duplicated region for block: B:567:0x1060  */
    /* JADX WARN: Removed duplicated region for block: B:792:0x14c8  */
    /* JADX WARN: Removed duplicated region for block: B:796:0x14e1  */
    /* JADX WARN: Removed duplicated region for block: B:804:0x1502  */
    /* JADX WARN: Removed duplicated region for block: B:808:0x1519  */
    /* JADX WARN: Removed duplicated region for block: B:830:0x1557  */
    /* JADX WARN: Removed duplicated region for block: B:834:0x1568  */
    /* JADX WARN: Removed duplicated region for block: B:842:0x1580  */
    /* JADX WARN: Removed duplicated region for block: B:876:0x16ae  */
    /* JADX WARN: Removed duplicated region for block: B:888:0x16d5  */
    /* JADX WARN: Removed duplicated region for block: B:906:0x170a  */
    /* JADX WARN: Removed duplicated region for block: B:907:0x1710  */
    /* JADX WARN: Removed duplicated region for block: B:912:0x1730  */
    /* JADX WARN: Removed duplicated region for block: B:925:0x176b  */
    /* JADX WARN: Removed duplicated region for block: B:938:0x1796  */
    /* JADX WARN: Removed duplicated region for block: B:942:0x17a2  */
    /* JADX WARN: Removed duplicated region for block: B:946:0x17b1  */
    /* JADX WARN: Removed duplicated region for block: B:957:0x17d4  */
    /* JADX WARN: Removed duplicated region for block: B:963:0x17fd  */
    /* JADX WARN: Removed duplicated region for block: B:964:0x17ff  */
    /* JADX WARN: Removed duplicated region for block: B:967:0x1807  */
    /* JADX WARN: Removed duplicated region for block: B:971:0x1872  */
    /* JADX WARN: Removed duplicated region for block: B:975:0x1893  */
    /* JADX WARN: Removed duplicated region for block: B:985:0x18af  */
    /* JADX WARN: Removed duplicated region for block: B:989:0x18bd  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void drawOverlays(Canvas canvas) {
        long j;
        boolean z;
        int i;
        long j2;
        int i2;
        float f;
        float f2;
        int i3;
        float f3;
        float f4;
        boolean z2;
        boolean z3;
        float f5;
        int i4;
        int i5;
        CachedStaticLayout cachedStaticLayout;
        int i6;
        int i7;
        int themedColor;
        int themedColor2;
        float f6;
        int dp;
        long j3;
        int i8;
        int i9;
        int i10;
        long j4;
        char c;
        int size;
        int i11;
        String format;
        Drawable drawable;
        int i12;
        int i13;
        PollButton pollButton;
        int i14;
        int i15;
        long j5;
        int[] iArr;
        int i16;
        TLRPC$Poll tLRPC$Poll;
        long max;
        String formatDurationNoHours;
        int dp2;
        int dp3;
        float f7;
        int dp4;
        int i17;
        int i18;
        float f8;
        Drawable drawable2;
        Drawable drawable3;
        int dp5;
        CachedStaticLayout cachedStaticLayout2;
        String formatLocationLeftTime;
        CachedStaticLayout cachedStaticLayout3;
        float abs;
        float f9;
        boolean z4;
        CachedStaticLayout cachedStaticLayout4;
        float f10;
        float currentAlpha;
        float f11;
        Theme.MessageDrawable messageDrawable;
        boolean z5;
        Canvas canvas2;
        float f12;
        int i19;
        float f13;
        float f14;
        float f15;
        float imageX;
        CachedStaticLayout cachedStaticLayout5;
        float imageY2;
        float f16;
        float dp6;
        float dp7;
        ReactionsLayoutInBubble reactionsLayoutInBubble;
        MessageObject messageObject;
        boolean z6;
        int i20;
        AnimatedFileDrawable animation;
        ChatMessageCellDelegate chatMessageCellDelegate;
        if (!this.drawFromPinchToZoom && (chatMessageCellDelegate = this.delegate) != null && chatMessageCellDelegate.getPinchToZoomHelper() != null && this.delegate.getPinchToZoomHelper().isInOverlayModeFor(this)) {
            return;
        }
        long elapsedRealtime = SystemClock.elapsedRealtime();
        long j6 = elapsedRealtime - this.lastAnimationTime;
        if (j6 > 17) {
            j6 = 17;
        }
        this.lastAnimationTime = elapsedRealtime;
        if (this.currentMessageObject.hadAnimationNotReadyLoading && this.photoImage.getVisible() && !this.currentMessageObject.needDrawBluredPreview() && (((i20 = this.documentAttachType) == 7 || i20 == 4 || i20 == 2) && (animation = this.photoImage.getAnimation()) != null && animation.hasBitmap())) {
            this.currentMessageObject.hadAnimationNotReadyLoading = false;
            updateButtonState(false, true, false);
        }
        if (!this.hasGamePreview) {
            MessageObject messageObject2 = this.currentMessageObject;
            int i21 = messageObject2.type;
            if (i21 == 3 || i21 == 1 || i21 == 20 || (i7 = this.documentAttachType) == 4 || i7 == 2) {
                if (this.photoImage.getVisible()) {
                    MessageObject messageObject3 = this.currentMessageObject;
                    if (!messageObject3.isRepostPreview) {
                        if (!messageObject3.needDrawBluredPreview()) {
                            MessageObject messageObject4 = this.currentMessageObject;
                            if (!messageObject4.isRepostPreview && !messageObject4.preview && !this.isSmallImage && this.documentAttachType == 4) {
                                int alpha = ((BitmapDrawable) Theme.chat_msgMediaMenuDrawable).getPaint().getAlpha();
                                if (this.drawMediaCheckBox) {
                                    Theme.chat_msgMediaMenuDrawable.setAlpha((int) (alpha * this.controlsAlpha * (1.0f - this.checkBoxAnimationProgress)));
                                } else {
                                    Theme.chat_msgMediaMenuDrawable.setAlpha((int) (alpha * this.controlsAlpha));
                                }
                                Drawable drawable4 = Theme.chat_msgMediaMenuDrawable;
                                int imageX2 = (int) ((this.photoImage.getImageX() + this.photoImage.getImageWidth()) - AndroidUtilities.dp(14.0f));
                                this.otherX = imageX2;
                                int imageY = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(8.1f));
                                this.otherY = imageY;
                                BaseCell.setDrawableBounds(drawable4, imageX2, imageY);
                                Theme.chat_msgMediaMenuDrawable.draw(canvas);
                                Theme.chat_msgMediaMenuDrawable.setAlpha(alpha);
                            }
                        }
                        boolean isPlayingMessage = MediaController.getInstance().isPlayingMessage(this.currentMessageObject);
                        if (this.animatingNoSoundPlaying != isPlayingMessage) {
                            this.animatingNoSoundPlaying = isPlayingMessage;
                            this.animatingNoSound = isPlayingMessage ? 1 : 2;
                            this.animatingNoSoundProgress = isPlayingMessage ? 1.0f : 0.0f;
                        }
                        MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
                        boolean z7 = groupedMessagePosition == null || (groupedMessagePosition.flags & 3) == 3;
                        int i22 = this.documentAttachType;
                        int i23 = i22 != 4 ? 2 : 2;
                        int i24 = this.buttonState;
                        if (i24 != 1) {
                            if (i24 != i23) {
                                if (i24 != 0) {
                                    if (i24 != 3) {
                                    }
                                }
                            }
                        }
                        if (!this.currentMessageObject.isRepostVideoPreview) {
                            if (this.autoPlayingMedia) {
                                updatePlayingMessageProgress();
                            }
                            if ((this.infoLayout != null || this.loadingProgressLayout != null) && (!this.forceNotDrawTime || this.autoPlayingMedia || this.drawVideoImageButton || this.animatingLoadingProgressProgress != 0.0f || ((z7 && this.docTitleLayout != null) || (this.loadingProgressLayout != null && this.currentPosition != null && ((i6 = this.buttonState) == 1 || (i6 == 3 && this.miniButtonState == 1)))))) {
                                if (!z7) {
                                    f5 = this.animatingLoadingProgressProgress;
                                    z2 = false;
                                    z3 = true;
                                    f3 = 0.0f;
                                } else {
                                    boolean z8 = (this.buttonState == 1 || this.miniButtonState == 1 || this.animatingLoadingProgressProgress != 0.0f) && !this.currentMessageObject.isSecretMedia() && ((i3 = this.documentAttachType) == 4 || i3 == 2 || i3 == 1);
                                    MessageObject messageObject5 = this.currentMessageObject;
                                    int i25 = messageObject5.type;
                                    if (i25 == 3 || i25 == 8 || this.documentAttachType == 4) {
                                        f3 = (messageObject5.needDrawBluredPreview() && this.docTitleLayout == null) ? 0.0f : this.animatingDrawVideoImageButtonProgress;
                                        f4 = 0.0f;
                                    } else {
                                        f4 = 0.0f;
                                        f3 = 0.0f;
                                    }
                                    z2 = f3 > f4 && this.docTitleLayout != null;
                                    if (z2 || !(z8 || this.infoLayout == null)) {
                                        z3 = z8;
                                        f5 = 1.0f;
                                    } else {
                                        z3 = z8;
                                        f5 = this.animatingLoadingProgressProgress;
                                    }
                                }
                                float isSmallImage = f5 * (1.0f - isSmallImage());
                                if (isSmallImage > 0.0f) {
                                    int i26 = this.documentAttachType;
                                    boolean z9 = (i26 == 7 || i26 == 6 || this.currentMessageObject.type == 19 || SharedConfig.bubbleRadius < 10) ? false : true;
                                    Theme.chat_infoPaint.setColor(getThemedColor(Theme.key_chat_mediaInfoText));
                                    int imageX3 = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(4.0f));
                                    int imageY3 = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(4.0f));
                                    int intrinsicWidth = (!this.autoPlayingMedia || (isPlayingMessage && this.animatingNoSound == 0)) ? 0 : (int) ((Theme.chat_msgNoSoundDrawable.getIntrinsicWidth() + AndroidUtilities.dp(4.0f)) * this.animatingNoSoundProgress);
                                    if (z3 && (cachedStaticLayout = this.loadingProgressLayout) != null) {
                                        i5 = (int) cachedStaticLayout.getLineWidth(0);
                                        i4 = 0;
                                    } else {
                                        i4 = intrinsicWidth;
                                        i5 = this.infoWidth;
                                    }
                                    z = z7;
                                    int ceil = (int) Math.ceil(AndroidUtilities.dp(z9 ? 12.0f : 8.0f) + i5 + i4 + ((((Math.max((this.infoWidth == i5 ? i4 : 0) + i5, this.docTitleWidth) + (this.canStreamVideo ? AndroidUtilities.dp(32.0f) : 0)) - i5) - i4) * f3));
                                    if (f3 != 0.0f && this.docTitleLayout == null) {
                                        f3 = 0.0f;
                                    }
                                    canvas.save();
                                    int alpha2 = getThemedPaint("paintChatTimeBackground").getAlpha();
                                    j = j6;
                                    getThemedPaint("paintChatTimeBackground").setAlpha((int) (alpha2 * this.controlsAlpha * isSmallImage * (this.currentMessageObject.needDrawBluredPreview() ? 0.4f : 1.0f)));
                                    float f17 = imageX3;
                                    float f18 = imageY3;
                                    this.rect.set(f17, f18, imageX3 + ceil, imageY3 + AndroidUtilities.dp((15.5f * f3) + 16.5f));
                                    int[] roundRadius = this.photoImage.getRoundRadius();
                                    int min = Math.min(AndroidUtilities.dp(8.0f), Math.max(roundRadius[0], roundRadius[1]));
                                    if (this.currentMessageObject.needDrawBluredPreview()) {
                                        this.rectPath.reset();
                                        float f19 = min;
                                        this.rectPath.addRoundRect(this.rect, f19, f19, Path.Direction.CW);
                                        canvas.save();
                                        canvas.clipPath(this.rectPath);
                                        float alpha3 = this.photoImage.getAlpha();
                                        this.photoImage.setAlpha(0.5f * alpha3);
                                        this.photoImage.draw(canvas);
                                        this.photoImage.setAlpha(alpha3);
                                        canvas.restore();
                                        canvas.drawRoundRect(this.rect, f19, f19, getThemedPaint("paintChatTimeBackground"));
                                    } else if (z2 || ((z3 && this.loadingProgressLayout != null) || (!z3 && this.infoLayout != null))) {
                                        canvas.scale(isSmallImage, isSmallImage, f17, f18);
                                        float f20 = min;
                                        canvas.drawRoundRect(this.rect, f20, f20, getThemedPaint("paintChatTimeBackground"));
                                    } else {
                                        canvas.scale(isSmallImage, isSmallImage, f17, f18);
                                    }
                                    Theme.chat_infoPaint.setAlpha((int) (this.controlsAlpha * 255.0f * isSmallImage));
                                    Theme.chat_infoBoldPaint.setColor(Theme.chat_infoPaint.getColor());
                                    int imageX4 = (int) (this.photoImage.getImageX() + AndroidUtilities.dp((z9 ? 10 : 8) + (this.canStreamVideo ? 30.0f * f3 : 0.0f)));
                                    this.noSoundCenterX = imageX4;
                                    canvas.translate(imageX4, this.photoImage.getImageY() + AndroidUtilities.dp((0.2f * f3) + 5.5f));
                                    CachedStaticLayout cachedStaticLayout6 = this.infoLayout;
                                    if (cachedStaticLayout6 != null && (!z3 || z2)) {
                                        cachedStaticLayout6.draw(canvas);
                                    }
                                    if (i4 != 0 && (!z3 || z2)) {
                                        canvas.save();
                                        Drawable drawable5 = Theme.chat_msgNoSoundDrawable;
                                        float f21 = this.animatingNoSoundProgress;
                                        drawable5.setAlpha((int) (f21 * 255.0f * f21 * this.controlsAlpha));
                                        int dp8 = AndroidUtilities.dp(this.animatingNoSoundProgress * 14.0f);
                                        int dp9 = (AndroidUtilities.dp(14.0f) - dp8) / 2;
                                        int dp10 = this.infoWidth + AndroidUtilities.dp(4.0f);
                                        canvas.translate(dp10, 0.0f);
                                        Theme.chat_msgNoSoundDrawable.setBounds(0, dp9, dp8, dp9 + dp8);
                                        Theme.chat_msgNoSoundDrawable.draw(canvas);
                                        this.noSoundCenterX += dp10 + (dp8 / 2);
                                        canvas.restore();
                                    }
                                    if (z3 && this.loadingProgressLayout != null) {
                                        canvas.save();
                                        if (z2) {
                                            Theme.chat_infoPaint.setAlpha((int) (this.controlsAlpha * 255.0f * f3));
                                            canvas.translate(0.0f, AndroidUtilities.dp(f3 * 14.3f));
                                        }
                                        this.loadingProgressLayout.draw(canvas);
                                        canvas.restore();
                                    } else if (z2) {
                                        Theme.chat_infoPaint.setAlpha((int) (this.controlsAlpha * 255.0f * f3));
                                        canvas.translate(0.0f, AndroidUtilities.dp(f3 * 14.3f));
                                        this.docTitleLayout.draw(canvas);
                                    }
                                    canvas.restore();
                                    Theme.chat_infoPaint.setAlpha(255);
                                    getThemedPaint("paintChatTimeBackground").setAlpha(alpha2);
                                    i = this.animatingDrawVideoImageButton;
                                    if (i != 1) {
                                        j2 = j;
                                        float f22 = this.animatingDrawVideoImageButtonProgress - (((float) j2) / 160.0f);
                                        this.animatingDrawVideoImageButtonProgress = f22;
                                        if (f22 <= 0.0f) {
                                            this.animatingDrawVideoImageButtonProgress = 0.0f;
                                            this.animatingDrawVideoImageButton = 0;
                                        }
                                        invalidate();
                                    } else {
                                        j2 = j;
                                        if (i == 2) {
                                            float f23 = this.animatingDrawVideoImageButtonProgress + (((float) j2) / 160.0f);
                                            this.animatingDrawVideoImageButtonProgress = f23;
                                            if (f23 >= 1.0f) {
                                                this.animatingDrawVideoImageButtonProgress = 1.0f;
                                                this.animatingDrawVideoImageButton = 0;
                                            }
                                            invalidate();
                                        }
                                    }
                                    i2 = this.animatingNoSound;
                                    if (i2 != 1) {
                                        float f24 = this.animatingNoSoundProgress - (((float) j2) / 180.0f);
                                        this.animatingNoSoundProgress = f24;
                                        if (f24 <= 0.0f) {
                                            this.animatingNoSoundProgress = 0.0f;
                                            this.animatingNoSound = 0;
                                        }
                                        invalidate();
                                    } else if (i2 == 2) {
                                        float f25 = this.animatingNoSoundProgress + (((float) j2) / 180.0f);
                                        this.animatingNoSoundProgress = f25;
                                        if (f25 >= 1.0f) {
                                            this.animatingNoSoundProgress = 1.0f;
                                            this.animatingNoSound = 0;
                                        }
                                        invalidate();
                                    }
                                    f = ((this.buttonState != 1 || this.miniButtonState == 1) && this.loadingProgressLayout != null) ? 1.0f : 0.0f;
                                    if (f == 0.0f && this.infoLayout != null && z) {
                                        this.animatingLoadingProgressProgress = 0.0f;
                                    }
                                    f2 = this.animatingLoadingProgressProgress;
                                    if (f2 >= f) {
                                        float f26 = f2 + (((float) j2) / 160.0f);
                                        this.animatingLoadingProgressProgress = f26;
                                        if (f26 > f) {
                                            this.animatingLoadingProgressProgress = f;
                                        }
                                        invalidate();
                                    } else if (f2 != f) {
                                        float f27 = f2 - (((float) j2) / 160.0f);
                                        this.animatingLoadingProgressProgress = f27;
                                        if (f27 < f) {
                                            this.animatingLoadingProgressProgress = f;
                                        }
                                        invalidate();
                                    }
                                    if (this.drawImageButton || !this.photoImage.getVisible() || this.isSmallImage || this.currentMessageObject.isRepostVideoPreview) {
                                        messageDrawable = null;
                                    } else {
                                        float f28 = this.controlsAlpha;
                                        if (f28 != 1.0f) {
                                            this.radialProgress.setOverrideAlpha(f28);
                                        }
                                        if (this.photoImage.hasImageSet()) {
                                            messageDrawable = null;
                                            this.radialProgress.setBackgroundDrawable(null);
                                        } else {
                                            messageDrawable = null;
                                            this.radialProgress.setBackgroundDrawable(isDrawSelectionBackground() ? this.currentBackgroundSelectedDrawable : this.currentBackgroundDrawable);
                                        }
                                        MessageObject messageObject6 = this.currentMessageObject;
                                        if (messageObject6 != null && messageObject6.isRoundVideo()) {
                                            MessageObject messageObject7 = this.currentMessageObject;
                                            if (!messageObject7.mediaExists || messageObject7.isRoundOnce()) {
                                                this.radialProgress.setProgressRect(this.photoImage.getImageX() + ((this.photoImage.getImageWidth() / 2.0f) - this.radialProgress.getRadius()), this.photoImage.getImageY() + ((this.photoImage.getImageHeight() / 2.0f) - this.radialProgress.getRadius()), this.photoImage.getImageX() + (this.photoImage.getImageWidth() / 2.0f) + this.radialProgress.getRadius(), this.photoImage.getImageY() + (this.photoImage.getImageHeight() / 2.0f) + this.radialProgress.getRadius());
                                                z6 = false;
                                                if ((this.isRoundVideo || !this.hasLinkPreview) && (!this.currentMessageObject.needDrawBluredPreview() || !MediaController.getInstance().isPlayingMessage(this.currentMessageObject))) {
                                                    if (this.currentMessageObject.hasMediaSpoilers()) {
                                                        MessageObject messageObject8 = this.currentMessageObject;
                                                        if ((!messageObject8.isMediaSpoilersRevealed || !messageObject8.revealingMediaSpoilers) && SharedConfig.isAutoplayVideo() && !this.currentMessageObject.isRepostPreview && this.currentMessagesGroup == null) {
                                                            if (this.radialProgress.getIcon() != 0) {
                                                            }
                                                        }
                                                    }
                                                    if (this.currentMessageObject.needDrawBluredPreview()) {
                                                        this.radialProgress.overrideCircleAlpha = 0.0f;
                                                    } else if (this.isRoundVideo) {
                                                        this.radialProgress.overrideCircleAlpha = ((1.0f - getVideoTranscriptionProgress()) * 0.75f) + 0.25f;
                                                    }
                                                    if (!this.currentMessageObject.isRoundOnce() && ((!SharedConfig.isAutoplayVideo() || this.currentMessagesGroup != null) && this.currentMessageObject.hasMediaSpoilers() && !this.currentMessageObject.isMediaSpoilersRevealed && this.radialProgress.getIcon() == 0)) {
                                                        canvas.saveLayerAlpha(this.radialProgress.getProgressRect(), (int) (this.mediaSpoilerRevealProgress * 255.0f), 31);
                                                    }
                                                    drawRadialProgress(canvas);
                                                    if (!this.currentMessageObject.isRoundOnce() && ((!SharedConfig.isAutoplayVideo() || this.currentMessagesGroup != null) && this.currentMessageObject.hasMediaSpoilers() && !this.currentMessageObject.isMediaSpoilersRevealed && this.radialProgress.getIcon() == 0)) {
                                                        canvas.restore();
                                                    }
                                                    if (!this.currentMessageObject.needDrawBluredPreview() || this.isRoundVideo) {
                                                        this.radialProgress.overrideCircleAlpha = 1.0f;
                                                        if (z6) {
                                                            canvas.restore();
                                                        }
                                                    }
                                                    if (z6) {
                                                    }
                                                }
                                                if (z6) {
                                                }
                                            }
                                        }
                                        MessageObject messageObject9 = this.currentMessageObject;
                                        if (messageObject9 != null && messageObject9.isRoundVideo()) {
                                            this.radialProgress.setProgressRect(this.photoImage.getImageX(), this.photoImage.getImageY(), this.photoImage.getImageX() + this.photoImage.getImageWidth(), this.photoImage.getImageY() + this.photoImage.getImageHeight());
                                            canvas.saveLayerAlpha(this.radialProgress.getProgressRect(), (int) (getVideoTranscriptionProgress() * 255.0f), 31);
                                            float imageHeight = this.photoImage.getImageHeight() / (this.radialProgress.getRadius() * 2);
                                            canvas.scale(imageHeight, imageHeight, this.radialProgress.getProgressRect().centerX(), this.radialProgress.getProgressRect().centerY());
                                            z6 = true;
                                            if (this.isRoundVideo) {
                                            }
                                            if (this.currentMessageObject.hasMediaSpoilers()) {
                                            }
                                            if (this.currentMessageObject.needDrawBluredPreview()) {
                                            }
                                            if (!this.currentMessageObject.isRoundOnce()) {
                                                canvas.saveLayerAlpha(this.radialProgress.getProgressRect(), (int) (this.mediaSpoilerRevealProgress * 255.0f), 31);
                                            }
                                            drawRadialProgress(canvas);
                                            if (!this.currentMessageObject.isRoundOnce()) {
                                                canvas.restore();
                                            }
                                            if (!this.currentMessageObject.needDrawBluredPreview()) {
                                            }
                                            this.radialProgress.overrideCircleAlpha = 1.0f;
                                            if (z6) {
                                            }
                                        }
                                        z6 = false;
                                        if (this.isRoundVideo) {
                                        }
                                        if (this.currentMessageObject.hasMediaSpoilers()) {
                                        }
                                        if (this.currentMessageObject.needDrawBluredPreview()) {
                                        }
                                        if (!this.currentMessageObject.isRoundOnce()) {
                                        }
                                        drawRadialProgress(canvas);
                                        if (!this.currentMessageObject.isRoundOnce()) {
                                        }
                                        if (!this.currentMessageObject.needDrawBluredPreview()) {
                                        }
                                        this.radialProgress.overrideCircleAlpha = 1.0f;
                                        if (z6) {
                                        }
                                    }
                                    z5 = (this.buttonState == -1 || (messageObject = this.currentMessageObject) == null || !messageObject.needDrawBluredPreview() || MediaController.getInstance().isPlayingMessage(this.currentMessageObject) || this.currentMessageObject.messageOwner.destroyTime == 0) ? false : true;
                                    if (z5 || this.timerParticlesAlpha != null) {
                                        canvas2 = canvas;
                                        f12 = 1.0f;
                                        i19 = -1;
                                        f13 = 0.0f;
                                    } else {
                                        f12 = 1.0f;
                                        i19 = -1;
                                        f13 = 0.0f;
                                        canvas2 = canvas;
                                        this.timerParticlesAlpha = new AnimatedFloat(0.0f, this, 150L, 120L, CubicBezierInterpolator.EASE_OUT);
                                    }
                                    AnimatedFloat animatedFloat = this.timerParticlesAlpha;
                                    f14 = animatedFloat == null ? 0.0f : animatedFloat.set(z5);
                                    if (f14 > f13 && this.photoImage.getVisible()) {
                                        float max2 = ((float) Math.max(0L, (this.currentMessageObject.messageOwner.destroyTime * 1000) - (System.currentTimeMillis() + (ConnectionsManager.getInstance(this.currentAccount).getTimeDifference() * 1000)))) / (this.currentMessageObject.messageOwner.ttl * 1000.0f);
                                        Theme.chat_deleteProgressPaint.setColor(i19);
                                        Theme.chat_deleteProgressPaint.setAlpha((int) (f14 * 255.0f * this.controlsAlpha));
                                        Theme.chat_deleteProgressPaint.setStrokeWidth(AndroidUtilities.dp(2.0f));
                                        float f29 = max2 * (-360.0f);
                                        canvas.drawArc(this.deleteProgressRect, -90.0f, f29, false, Theme.chat_deleteProgressPaint);
                                        if (this.timerParticles == null) {
                                            this.timerParticles = new TimerParticles();
                                        }
                                        this.timerParticles.draw(canvas, Theme.chat_deleteProgressPaint, this.deleteProgressRect, f29, this.controlsAlpha);
                                        invalidate();
                                        updateSecretTimeText(this.currentMessageObject);
                                    }
                                    if ((!this.drawVideoImageButton || this.animatingDrawVideoImageButton != 0) && !this.currentMessageObject.isRepostPreview && this.photoImage.getVisible() && !this.isSmallImage) {
                                        f15 = this.controlsAlpha;
                                        if (f15 != f12) {
                                            this.videoRadialProgress.setOverrideAlpha(f15);
                                        }
                                        this.videoRadialProgress.draw(canvas2);
                                    }
                                    if (this.drawMediaCheckBox) {
                                        int i27 = this.documentAttachType;
                                        if (i27 != 5 && (i27 != 1 || this.drawPhotoImage)) {
                                            int dp11 = AndroidUtilities.dp(21.0f);
                                            this.mediaCheckBox.setBackgroundType(0);
                                            this.mediaCheckBox.setBounds(((int) this.photoImage.getImageX2()) - AndroidUtilities.dp(25.0f), ((int) this.photoImage.getImageY()) + AndroidUtilities.dp(4.0f), dp11, dp11);
                                            this.mediaCheckBox.setColor(i19, i19, this.currentMessageObject.isOutOwner() ? Theme.key_chat_outBubbleSelected : Theme.key_chat_inBubbleSelected);
                                            this.mediaCheckBox.setBackgroundDrawable(messageDrawable);
                                            this.mediaCheckBox.draw(canvas2);
                                        }
                                        int dp12 = AndroidUtilities.dp(20.0f);
                                        this.mediaCheckBox.setBackgroundType(this.radialProgress.getMiniIcon() != 4 ? 12 : 13);
                                        this.mediaCheckBox.setBounds(this.buttonX + AndroidUtilities.dp(28.0f), this.buttonY + AndroidUtilities.dp(28.0f), dp12, dp12);
                                        this.mediaCheckBox.setColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outTimeText : Theme.key_chat_inTimeText, this.currentMessageObject.isOutOwner() ? Theme.key_chat_outLoader : Theme.key_chat_inLoader, this.currentMessageObject.isOutOwner() ? Theme.key_chat_outBubble : Theme.key_chat_inBubble);
                                        this.mediaCheckBox.setBackgroundDrawable(isDrawSelectionBackground() ? this.currentBackgroundSelectedDrawable : this.currentBackgroundDrawable);
                                        this.mediaCheckBox.draw(canvas2);
                                    }
                                    if (this.documentAttachType == 7) {
                                        boolean isPlayingMessage2 = MediaController.getInstance().isPlayingMessage(this.currentMessageObject);
                                        MessageObject messageObject10 = this.currentMessageObject;
                                        if (messageObject10.type == 5) {
                                            if (messageObject10.isOutOwner()) {
                                                float f30 = (AndroidUtilities.roundPlayingMessageSize - AndroidUtilities.roundMessageSize) * 0.2f;
                                                boolean z10 = this.isPlayingRound;
                                                float f31 = z10 ? f30 : 0.0f;
                                                TransitionParams transitionParams = this.transitionParams;
                                                if (transitionParams.animatePlayingRound) {
                                                    f16 = f30 * (z10 ? transitionParams.animateChangeProgress : f12 - transitionParams.animateChangeProgress);
                                                } else {
                                                    f16 = f31;
                                                }
                                            } else {
                                                f16 = 0.0f;
                                            }
                                            MessageObject messageObject11 = this.currentMessageObject;
                                            if (messageObject11 != null && messageObject11.isRoundOnce()) {
                                                dp6 = this.photoImage.getImageX();
                                                dp7 = (this.photoImage.getImageY2() - ((AndroidUtilities.dp(this.drawPinnedBottom ? 4.0f : 5.0f) + this.reactionsLayoutInBubble.getCurrentTotalHeight(this.transitionParams.animateChangeProgress)) * (f12 - getVideoTranscriptionProgress()))) - AndroidUtilities.dp(17.0f);
                                            } else {
                                                dp6 = f16 + this.backgroundDrawableLeft + this.transitionParams.deltaLeft + ((this.currentMessageObject.isOutOwner() || this.drawPinnedBottom || !this.drawBackground) ? 0 : AndroidUtilities.dp(6.0f)) + AndroidUtilities.dp(8.0f) + this.roundPlayingDrawableProgress;
                                                dp7 = this.layoutHeight - AndroidUtilities.dp(28 - (this.drawPinnedBottom ? 2 : 0));
                                            }
                                            if (!this.reactionsLayoutInBubble.isEmpty) {
                                                dp7 -= reactionsLayoutInBubble.totalHeight;
                                            }
                                            TransitionParams transitionParams2 = this.transitionParams;
                                            transitionParams2.lastDrawRoundVideoDotY = dp7;
                                            if (transitionParams2.animateRoundVideoDotY) {
                                                float f32 = transitionParams2.animateFromRoundVideoDotY;
                                                float f33 = transitionParams2.animateChangeProgress;
                                                dp7 = (dp7 * f33) + (f32 * (f12 - f33));
                                            }
                                            int i28 = this.timeAudioX;
                                            if (!this.hasLinkPreview) {
                                                if (this.currentMessageObject.isOutOwner()) {
                                                    int width = getWidth();
                                                    TransitionParams transitionParams3 = this.transitionParams;
                                                    i28 = ((width - (transitionParams3.animateBackgroundBoundsInner ? (int) ((this.backgroundWidth - transitionParams3.deltaLeft) + transitionParams3.deltaRight) : this.backgroundWidth)) - ((this.drawPinnedBottom || !this.mediaBackground) ? 0 : AndroidUtilities.dp(8.0f))) + AndroidUtilities.dp(67.0f);
                                                }
                                                dp6 = AndroidUtilities.lerp(dp6, i28 - AndroidUtilities.dp(4.0f), getVideoTranscriptionProgress());
                                                dp7 = AndroidUtilities.lerp(dp7, ((AndroidUtilities.dp(44.0f) + this.namesOffset) + this.mediaOffsetY) - AndroidUtilities.dp(1.7f), getVideoTranscriptionProgress());
                                            }
                                            this.rect.set(dp6, dp7, this.timeWidthAudio + dp6 + AndroidUtilities.dp(22.0f), AndroidUtilities.dp(17.0f) + dp7);
                                            applyServiceShaderMatrix();
                                            Paint themedPaint = getThemedPaint("paintChatActionBackground");
                                            int alpha4 = themedPaint.getAlpha();
                                            themedPaint.setAlpha((int) (alpha4 * this.timeAlpha * 0.5f * (f12 - getVideoTranscriptionProgress())));
                                            canvas2.drawRoundRect(this.rect, AndroidUtilities.dp(6.0f), AndroidUtilities.dp(6.0f), themedPaint);
                                            if (hasGradientService()) {
                                                Paint themedPaint2 = getThemedPaint("paintChatActionBackgroundDarken");
                                                int alpha5 = themedPaint2.getAlpha();
                                                themedPaint2.setAlpha((int) (alpha5 * this.timeAlpha * (f12 - getVideoTranscriptionProgress())));
                                                canvas2.drawRoundRect(this.rect, AndroidUtilities.dp(6.0f), AndroidUtilities.dp(6.0f), themedPaint2);
                                                themedPaint2.setAlpha(alpha5);
                                            }
                                            themedPaint.setAlpha(alpha4);
                                            boolean z11 = isPlayingMessage2 || !this.currentMessageObject.isContentUnread();
                                            if (z11) {
                                                float f34 = this.roundPlayingDrawableProgress;
                                                if (f34 != f12) {
                                                    float f35 = f34 + 0.10666667f;
                                                    this.roundPlayingDrawableProgress = f35;
                                                    if (f35 > f12) {
                                                        this.roundPlayingDrawableProgress = f12;
                                                    } else {
                                                        invalidate();
                                                    }
                                                    if (z11) {
                                                        if (isPlayingMessage2 && !MediaController.getInstance().isMessagePaused()) {
                                                            this.roundVideoPlayingDrawable.start();
                                                        } else {
                                                            this.roundVideoPlayingDrawable.stop();
                                                        }
                                                    }
                                                    if (this.roundPlayingDrawableProgress < f12) {
                                                        float dp13 = this.timeWidthAudio + dp6 + AndroidUtilities.dp(12.0f);
                                                        float dp14 = AndroidUtilities.dp(8.3f) + dp7;
                                                        canvas.save();
                                                        float f36 = this.roundPlayingDrawableProgress;
                                                        canvas2.scale(f12 - f36, f12 - f36, dp13, dp14);
                                                        Theme.chat_docBackPaint.setColor(Theme.chat_timePaint.getColor());
                                                        Theme.chat_docBackPaint.setAlpha((int) (this.timeAlpha * 255.0f * (f12 - this.roundPlayingDrawableProgress)));
                                                        canvas2.drawCircle(dp13, dp14, AndroidUtilities.dp(3.0f), Theme.chat_docBackPaint);
                                                        canvas.restore();
                                                    }
                                                    if (this.roundPlayingDrawableProgress > f13) {
                                                        BaseCell.setDrawableBounds(this.roundVideoPlayingDrawable, this.timeWidthAudio + dp6 + AndroidUtilities.dp(6.0f), AndroidUtilities.dp(2.3f) + dp7);
                                                        canvas.save();
                                                        float f37 = this.roundPlayingDrawableProgress;
                                                        canvas2.scale(f37, f37, this.roundVideoPlayingDrawable.getBounds().centerX(), this.roundVideoPlayingDrawable.getBounds().centerY());
                                                        if (!this.hasLinkPreview) {
                                                            this.roundVideoPlayingDrawable.timeColor = Theme.chat_timePaint.getColor();
                                                            this.roundVideoPlayingDrawable.colorProgress = getVideoTranscriptionProgress();
                                                        } else {
                                                            this.roundVideoPlayingDrawable.colorProgress = f13;
                                                        }
                                                        this.roundVideoPlayingDrawable.setAlpha((int) (this.roundPlayingDrawableProgress * 255.0f * (f12 - getVideoTranscriptionProgress())));
                                                        this.roundVideoPlayingDrawable.draw(canvas2);
                                                        canvas.restore();
                                                    }
                                                    imageX = dp6 + AndroidUtilities.dp(4.0f);
                                                    imageY2 = dp7 + AndroidUtilities.dp(1.7f);
                                                }
                                            }
                                            if (!z11) {
                                                float f38 = this.roundPlayingDrawableProgress;
                                                if (f38 != f13) {
                                                    float f39 = f38 - 0.10666667f;
                                                    this.roundPlayingDrawableProgress = f39;
                                                    if (f39 < f13) {
                                                        this.roundPlayingDrawableProgress = f13;
                                                    } else {
                                                        invalidate();
                                                    }
                                                }
                                            }
                                            if (z11) {
                                            }
                                            if (this.roundPlayingDrawableProgress < f12) {
                                            }
                                            if (this.roundPlayingDrawableProgress > f13) {
                                            }
                                            imageX = dp6 + AndroidUtilities.dp(4.0f);
                                            imageY2 = dp7 + AndroidUtilities.dp(1.7f);
                                        } else {
                                            imageX = this.photoImage.getImageX();
                                            imageY2 = this.photoImage.getImageY2() - (this.durationLayout != null ? cachedStaticLayout5.getHeight() : 0);
                                        }
                                        if (this.durationLayout != null) {
                                            Theme.chat_timePaint.setAlpha((int) (this.timeAlpha * 255.0f));
                                            canvas.save();
                                            canvas2.translate(imageX, imageY2);
                                            this.durationLayout.draw(canvas2);
                                            canvas.restore();
                                            Theme.chat_timePaint.setAlpha(255);
                                            return;
                                        }
                                        return;
                                    }
                                    return;
                                }
                            }
                        }
                        j = j6;
                        z = z7;
                        i = this.animatingDrawVideoImageButton;
                        if (i != 1) {
                        }
                        i2 = this.animatingNoSound;
                        if (i2 != 1) {
                        }
                        if (this.buttonState != 1) {
                        }
                        if (f == 0.0f) {
                            this.animatingLoadingProgressProgress = 0.0f;
                        }
                        f2 = this.animatingLoadingProgressProgress;
                        if (f2 >= f) {
                        }
                        if (this.drawImageButton) {
                        }
                        messageDrawable = null;
                        if (this.buttonState == -1) {
                        }
                        if (z5) {
                        }
                        canvas2 = canvas;
                        f12 = 1.0f;
                        i19 = -1;
                        f13 = 0.0f;
                        AnimatedFloat animatedFloat2 = this.timerParticlesAlpha;
                        if (animatedFloat2 == null) {
                        }
                        if (f14 > f13) {
                            float max22 = ((float) Math.max(0L, (this.currentMessageObject.messageOwner.destroyTime * 1000) - (System.currentTimeMillis() + (ConnectionsManager.getInstance(this.currentAccount).getTimeDifference() * 1000)))) / (this.currentMessageObject.messageOwner.ttl * 1000.0f);
                            Theme.chat_deleteProgressPaint.setColor(i19);
                            Theme.chat_deleteProgressPaint.setAlpha((int) (f14 * 255.0f * this.controlsAlpha));
                            Theme.chat_deleteProgressPaint.setStrokeWidth(AndroidUtilities.dp(2.0f));
                            float f292 = max22 * (-360.0f);
                            canvas.drawArc(this.deleteProgressRect, -90.0f, f292, false, Theme.chat_deleteProgressPaint);
                            if (this.timerParticles == null) {
                            }
                            this.timerParticles.draw(canvas, Theme.chat_deleteProgressPaint, this.deleteProgressRect, f292, this.controlsAlpha);
                            invalidate();
                            updateSecretTimeText(this.currentMessageObject);
                        }
                        if (!this.drawVideoImageButton) {
                        }
                        f15 = this.controlsAlpha;
                        if (f15 != f12) {
                        }
                        this.videoRadialProgress.draw(canvas2);
                        if (this.drawMediaCheckBox) {
                        }
                        if (this.documentAttachType == 7) {
                        }
                    }
                }
            } else if (i21 == 4) {
                if (this.docTitleLayout != null) {
                    if (messageObject2.isOutOwner()) {
                        Theme.chat_locationTitlePaint.setColor(getThemedColor(Theme.key_chat_messageTextOut));
                        Theme.chat_locationAddressPaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outVenueInfoSelectedText : Theme.key_chat_outVenueInfoText));
                    } else {
                        Theme.chat_locationTitlePaint.setColor(getThemedColor(Theme.key_chat_messageTextIn));
                        Theme.chat_locationAddressPaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inVenueInfoSelectedText : Theme.key_chat_inVenueInfoText));
                    }
                    if (MessageObject.getMedia(this.currentMessageObject.messageOwner) instanceof TLRPC$TL_messageMediaGeoLive) {
                        int imageY22 = (int) (this.photoImage.getImageY2() + AndroidUtilities.dp(30.0f));
                        if (this.locationExpired) {
                            TransitionParams transitionParams4 = this.transitionParams;
                            if (!transitionParams4.animateLocationIsExpired) {
                                transitionParams4.lastDrawLocationExpireText = null;
                                transitionParams4.lastDrawDocTitleLayout = null;
                                transitionParams4.lastDrawInfoLayout = null;
                                f10 = 1.0f;
                                if (this.photoImage.isCrossfadingWithOldImage()) {
                                    currentAlpha = this.photoImage.getCurrentAlpha();
                                    f11 = 0.0f;
                                } else {
                                    f11 = 0.0f;
                                    currentAlpha = 1.0f;
                                }
                                if (currentAlpha > f11 && (this.photoImage.hasNotThumb() || this.photoImage.isCrossfadingWithOldImage())) {
                                    int imageX5 = (int) ((this.photoImage.getImageX() + (this.photoImage.getImageWidth() / 2.0f)) - AndroidUtilities.dp(31.0f));
                                    int imageY4 = (int) (((this.photoImage.getImageY() + (this.photoImage.getImageHeight() / 2.0f)) - AndroidUtilities.dp(38.0f)) - (AndroidUtilities.dp(16.0f) * (f10 - CubicBezierInterpolator.EASE_OUT_BACK.getInterpolation(currentAlpha))));
                                    Drawable avatarLiveLocation = this.sharedResources.getAvatarLiveLocation();
                                    BaseCell.setDrawableBounds(avatarLiveLocation, imageX5, imageY4);
                                    float f40 = currentAlpha * 5.0f;
                                    avatarLiveLocation.setAlpha((int) (Math.min(f10, f40) * 255.0f));
                                    avatarLiveLocation.draw(canvas);
                                    this.locationImageReceiver.setImageCoords(imageX5 + AndroidUtilities.dp(5.0f), imageY4 + AndroidUtilities.dp(5.0f), AndroidUtilities.dp(52.0f), AndroidUtilities.dp(52.0f));
                                    this.locationImageReceiver.setAlpha(Math.min(f10, f40));
                                    this.locationImageReceiver.draw(canvas);
                                }
                            }
                        }
                        this.forceNotDrawTime = true;
                        CachedStaticLayout cachedStaticLayout7 = this.docTitleLayout;
                        CachedStaticLayout cachedStaticLayout8 = this.infoLayout;
                        TransitionParams transitionParams5 = this.transitionParams;
                        if (transitionParams5.animateLocationIsExpired) {
                            float f41 = transitionParams5.lastDrawLocationExpireProgress;
                            String str = transitionParams5.lastDrawLocationExpireText;
                            CachedStaticLayout cachedStaticLayout9 = transitionParams5.lastDrawDocTitleLayout;
                            CachedStaticLayout cachedStaticLayout10 = transitionParams5.lastDrawInfoLayout;
                            abs = f41;
                            f9 = 1.0f - transitionParams5.animateChangeProgress;
                            cachedStaticLayout4 = cachedStaticLayout10;
                            z4 = false;
                            cachedStaticLayout3 = cachedStaticLayout9;
                            formatLocationLeftTime = str;
                        } else {
                            if (MessageObject.getMedia(this.currentMessageObject.messageOwner).period == Integer.MAX_VALUE) {
                                cachedStaticLayout3 = cachedStaticLayout7;
                                formatLocationLeftTime = "";
                                abs = 1.0f;
                                f9 = 1.0f;
                                z4 = true;
                            } else {
                                formatLocationLeftTime = LocaleController.formatLocationLeftTime(Math.abs(MessageObject.getMedia(this.currentMessageObject.messageOwner).period - (ConnectionsManager.getInstance(this.currentAccount).getCurrentTime() - this.currentMessageObject.messageOwner.date)));
                                cachedStaticLayout3 = cachedStaticLayout7;
                                abs = 1.0f - (Math.abs(ConnectionsManager.getInstance(this.currentAccount).getCurrentTime() - this.currentMessageObject.messageOwner.date) / MessageObject.getMedia(this.currentMessageObject.messageOwner).period);
                                f9 = 1.0f;
                                z4 = false;
                            }
                            cachedStaticLayout4 = cachedStaticLayout8;
                        }
                        this.rect.set(this.photoImage.getImageX2() - AndroidUtilities.dp(43.0f), imageY22 - AndroidUtilities.dp(15.0f), this.photoImage.getImageX2() - AndroidUtilities.dp(13.0f), AndroidUtilities.dp(15.0f) + imageY22);
                        if (this.currentMessageObject.isOutOwner()) {
                            Paint paint = Theme.chat_radialProgress2Paint;
                            int i29 = Theme.key_chat_outInstant;
                            paint.setColor(getThemedColor(i29));
                            Theme.chat_livePaint.setColor(getThemedColor(i29));
                        } else {
                            Paint paint2 = Theme.chat_radialProgress2Paint;
                            int i30 = Theme.key_chat_inInstant;
                            paint2.setColor(getThemedColor(i30));
                            Theme.chat_livePaint.setColor(getThemedColor(i30));
                        }
                        int alpha6 = Theme.chat_locationTitlePaint.getAlpha();
                        int alpha7 = Theme.chat_locationAddressPaint.getAlpha();
                        int alpha8 = Theme.chat_livePaint.getAlpha();
                        if (f9 != 1.0f) {
                            Theme.chat_locationTitlePaint.setAlpha((int) (alpha6 * f9));
                            Theme.chat_locationAddressPaint.setAlpha((int) (alpha7 * f9));
                            Theme.chat_livePaint.setAlpha((int) (alpha8 * f9));
                            canvas.save();
                            canvas.translate(0.0f, (-AndroidUtilities.dp(50.0f)) * this.transitionParams.animateChangeProgress);
                        }
                        Theme.chat_radialProgress2Paint.setAlpha((int) (50.0f * f9));
                        canvas.drawCircle(this.rect.centerX(), this.rect.centerY(), AndroidUtilities.dp(15.0f), Theme.chat_radialProgress2Paint);
                        Theme.chat_radialProgress2Paint.setAlpha((int) (f9 * 255.0f));
                        CachedStaticLayout cachedStaticLayout11 = cachedStaticLayout4;
                        String str2 = formatLocationLeftTime;
                        CachedStaticLayout cachedStaticLayout12 = cachedStaticLayout3;
                        canvas.drawArc(this.rect, -90.0f, abs * (-360.0f), false, Theme.chat_radialProgress2Paint);
                        if (z4) {
                            if (this.foreverDrawable == null) {
                                this.foreverDrawable = getContext().getResources().getDrawable(R.drawable.filled_location_forever).mutate();
                            }
                            if (Theme.chat_livePaint.getColor() != this.foreverDrawableColor) {
                                Drawable drawable6 = this.foreverDrawable;
                                int color = Theme.chat_livePaint.getColor();
                                this.foreverDrawableColor = color;
                                drawable6.setColorFilter(new PorterDuffColorFilter(color, PorterDuff.Mode.SRC_IN));
                            }
                            this.foreverDrawable.setBounds(((int) this.rect.centerX()) - (this.foreverDrawable.getIntrinsicWidth() / 2), ((int) this.rect.centerY()) - (this.foreverDrawable.getIntrinsicHeight() / 2), ((int) this.rect.centerX()) + (this.foreverDrawable.getIntrinsicWidth() / 2), ((int) this.rect.centerY()) + (this.foreverDrawable.getIntrinsicHeight() / 2));
                            this.foreverDrawable.draw(canvas);
                        } else {
                            float measureText = Theme.chat_livePaint.measureText(str2);
                            int length = str2.length();
                            float f42 = length > 4 ? 0.75f : length > 3 ? 0.85f : 1.0f;
                            canvas.save();
                            canvas.scale(f42, f42, this.rect.centerX(), this.rect.centerY());
                            canvas.drawText(str2, this.rect.centerX() - (measureText / 2.0f), imageY22 + AndroidUtilities.dp(4.0f), Theme.chat_livePaint);
                            canvas.restore();
                        }
                        if (cachedStaticLayout12 != null && cachedStaticLayout11 != null) {
                            canvas.save();
                            canvas.translate(this.photoImage.getImageX() + AndroidUtilities.dp(10.0f), this.photoImage.getImageY2() + AndroidUtilities.dp(10.0f));
                            cachedStaticLayout12.draw(canvas);
                            canvas.translate(0.0f, AndroidUtilities.dp(23.0f));
                            cachedStaticLayout11.draw(canvas);
                            canvas.restore();
                        }
                        f10 = 1.0f;
                        if (f9 != 1.0f) {
                            Theme.chat_locationTitlePaint.setAlpha(alpha6);
                            Theme.chat_locationAddressPaint.setAlpha(alpha7);
                            Theme.chat_livePaint.setAlpha(alpha8);
                            canvas.restore();
                        }
                        TransitionParams transitionParams6 = this.transitionParams;
                        transitionParams6.lastDrawLocationExpireProgress = abs;
                        transitionParams6.lastDrawLocationExpireText = str2;
                        transitionParams6.lastDrawDocTitleLayout = cachedStaticLayout12;
                        transitionParams6.lastDrawInfoLayout = cachedStaticLayout11;
                        if (this.photoImage.isCrossfadingWithOldImage()) {
                        }
                        if (currentAlpha > f11) {
                            int imageX52 = (int) ((this.photoImage.getImageX() + (this.photoImage.getImageWidth() / 2.0f)) - AndroidUtilities.dp(31.0f));
                            int imageY42 = (int) (((this.photoImage.getImageY() + (this.photoImage.getImageHeight() / 2.0f)) - AndroidUtilities.dp(38.0f)) - (AndroidUtilities.dp(16.0f) * (f10 - CubicBezierInterpolator.EASE_OUT_BACK.getInterpolation(currentAlpha))));
                            Drawable avatarLiveLocation2 = this.sharedResources.getAvatarLiveLocation();
                            BaseCell.setDrawableBounds(avatarLiveLocation2, imageX52, imageY42);
                            float f402 = currentAlpha * 5.0f;
                            avatarLiveLocation2.setAlpha((int) (Math.min(f10, f402) * 255.0f));
                            avatarLiveLocation2.draw(canvas);
                            this.locationImageReceiver.setImageCoords(imageX52 + AndroidUtilities.dp(5.0f), imageY42 + AndroidUtilities.dp(5.0f), AndroidUtilities.dp(52.0f), AndroidUtilities.dp(52.0f));
                            this.locationImageReceiver.setAlpha(Math.min(f10, f402));
                            this.locationImageReceiver.draw(canvas);
                        }
                    } else {
                        canvas.save();
                        canvas.translate(this.photoImage.getImageX() + AndroidUtilities.dp(6.0f), this.photoImage.getImageY2() + AndroidUtilities.dp(8.0f));
                        this.docTitleLayout.draw(canvas);
                        if (this.infoLayout != null) {
                            canvas.translate(0.0f, AndroidUtilities.dp(21.0f));
                            this.infoLayout.draw(canvas);
                        }
                        canvas.restore();
                    }
                }
            } else if (i21 == 16) {
                boolean isVideoCall = messageObject2.isVideoCall();
                if (this.currentMessageObject.isOutOwner()) {
                    drawable2 = Theme.chat_msgCallUpGreenDrawable;
                    if (this.currentMessageObject.isVideoCall()) {
                        isDrawSelectionBackground();
                        drawable3 = getThemedDrawable("drawableMsgOutCallVideo");
                    } else {
                        drawable3 = getThemedDrawable(isDrawSelectionBackground() ? "drawableMsgOutCallAudioSelected" : "drawableMsgOutCallAudio");
                    }
                } else {
                    TLRPC$PhoneCallDiscardReason tLRPC$PhoneCallDiscardReason = this.currentMessageObject.messageOwner.action.reason;
                    if ((tLRPC$PhoneCallDiscardReason instanceof TLRPC$TL_phoneCallDiscardReasonMissed) || (tLRPC$PhoneCallDiscardReason instanceof TLRPC$TL_phoneCallDiscardReasonBusy)) {
                        drawable2 = Theme.chat_msgCallDownRedDrawable;
                    } else {
                        drawable2 = Theme.chat_msgCallDownGreenDrawable;
                    }
                    drawable3 = isDrawSelectionBackground() ? Theme.chat_msgInCallSelectedDrawable[isVideoCall ? 1 : 0] : Theme.chat_msgInCallDrawable[isVideoCall ? 1 : 0];
                }
                if (this.currentMessageObject.isOutOwner()) {
                    Theme.chat_audioTitlePaint.setColor(getThemedColor(Theme.key_chat_messageTextOut));
                    Theme.chat_contactPhonePaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outTimeSelectedText : Theme.key_chat_outTimeText));
                } else {
                    Theme.chat_audioTitlePaint.setColor(getThemedColor(Theme.key_chat_messageTextIn));
                    Theme.chat_contactPhonePaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inTimeSelectedText : Theme.key_chat_inTimeText));
                }
                this.forceNotDrawTime = true;
                if (this.currentMessageObject.isOutOwner()) {
                    dp5 = (this.layoutWidth - this.backgroundWidth) + AndroidUtilities.dp(16.0f);
                } else if (needDrawAvatar()) {
                    dp5 = AndroidUtilities.dp(74.0f);
                } else {
                    dp5 = AndroidUtilities.dp(25.0f);
                }
                this.otherX = dp5;
                if (LocaleController.isRTL) {
                    dp5 += drawable3.getIntrinsicWidth() + AndroidUtilities.dp(12.0f);
                }
                if (this.titleLayout != null) {
                    canvas.save();
                    canvas.translate(dp5, AndroidUtilities.dp(12.0f) + this.namesOffset);
                    this.titleLayout.draw(canvas);
                    canvas.restore();
                }
                if (this.docTitleLayout != null) {
                    canvas.save();
                    canvas.translate(AndroidUtilities.dp(LocaleController.isRTL ? -19.0f : 19.0f) + dp5, AndroidUtilities.dp(37.0f) + this.namesOffset);
                    this.docTitleLayout.draw(canvas);
                    canvas.restore();
                }
                BaseCell.setDrawableBounds(drawable2, (dp5 + ((!LocaleController.isRTL || (cachedStaticLayout2 = this.docTitleLayout) == null) ? 0 : cachedStaticLayout2.getWidth() - drawable2.getIntrinsicWidth())) - AndroidUtilities.dp(1.0f), AndroidUtilities.dp(37.0f) + this.namesOffset);
                drawable2.draw(canvas);
                if (Build.VERSION.SDK_INT >= 21) {
                    Drawable[] drawableArr = this.selectorDrawable;
                    if (drawableArr[0] != null && this.selectorDrawableMaskType[0] == 4) {
                        drawableArr[0].draw(canvas);
                    }
                }
                boolean z12 = this.pinnedBottom;
                if (!z12 && !this.pinnedTop) {
                    this.otherY = AndroidUtilities.dp(18.5f);
                } else if (z12 && this.pinnedTop) {
                    this.otherY = AndroidUtilities.dp(18.0f);
                } else if (!z12) {
                    this.otherY = AndroidUtilities.dp(17.0f);
                } else {
                    this.otherY = AndroidUtilities.dp(19.0f);
                }
                BaseCell.setDrawableBounds(drawable3, this.otherX + AndroidUtilities.dp((LocaleController.isRTL ? 0 : 200) + (!isVideoCall ? 1 : 0)), this.otherY);
                drawable3.draw(canvas);
            } else if (i21 == 17) {
                long currentTimeMillis = System.currentTimeMillis();
                long j7 = currentTimeMillis - this.voteLastUpdateTime;
                long j8 = j7 > 17 ? 17L : j7;
                this.voteLastUpdateTime = currentTimeMillis;
                if (this.currentMessageObject.isOutOwner()) {
                    themedColor = getThemedColor(Theme.key_chat_messageTextOut);
                    themedColor2 = getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outTimeSelectedText : Theme.key_chat_outTimeText);
                } else {
                    themedColor = getThemedColor(Theme.key_chat_messageTextIn);
                    themedColor2 = getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inTimeSelectedText : Theme.key_chat_inTimeText);
                }
                Theme.chat_audioTitlePaint.setColor(themedColor);
                Theme.chat_audioPerformerPaint.setColor(themedColor);
                Theme.chat_instantViewPaint.setColor(themedColor);
                Theme.chat_timePaint.setColor(themedColor2);
                Theme.chat_livePaint.setColor(themedColor2);
                Theme.chat_locationAddressPaint.setColor(themedColor2);
                canvas.save();
                TransitionParams transitionParams7 = this.transitionParams;
                if (transitionParams7.animateForwardedLayout) {
                    float f43 = transitionParams7.animateChangeProgress;
                    float f44 = (this.namesOffset * f43) + (transitionParams7.animateForwardedNamesOffset * (1.0f - f43));
                    if (this.currentMessageObject.needDrawForwarded()) {
                        f44 -= this.namesOffset;
                    }
                    f6 = 0.0f;
                    canvas.translate(0.0f, f44);
                } else {
                    f6 = 0.0f;
                }
                if (this.currentMessageObject.isOutOwner()) {
                    dp = (this.layoutWidth - this.backgroundWidth) + AndroidUtilities.dp(11.0f);
                } else if (needDrawAvatar()) {
                    dp = AndroidUtilities.dp(68.0f);
                } else {
                    dp = AndroidUtilities.dp(20.0f);
                }
                int i31 = dp;
                if (this.titleLayout != null) {
                    canvas.save();
                    canvas.translate(getExtraTextX() + i31, AndroidUtilities.dp(15.0f) + this.namesOffset);
                    this.titleLayout.draw(canvas);
                    CachedStaticLayout cachedStaticLayout13 = this.titleLayout;
                    i8 = 255;
                    j3 = j8;
                    i9 = 2;
                    AnimatedEmojiSpan.drawAnimatedEmojis(canvas, cachedStaticLayout13 == null ? null : cachedStaticLayout13.layout, this.animatedEmojiPollQuestion, 0.0f, null, 0.0f, 0.0f, 0.0f, 1.0f, getAdaptiveEmojiColorFilter(1, cachedStaticLayout13.getPaint().getColor()));
                    canvas.restore();
                } else {
                    j3 = j8;
                    i8 = 255;
                    i9 = 2;
                }
                CachedStaticLayout cachedStaticLayout14 = this.titleLayout;
                int height = (cachedStaticLayout14 != null ? cachedStaticLayout14.getHeight() : 0) + AndroidUtilities.dp(20.0f) + this.namesOffset;
                if (this.docTitleLayout != null) {
                    canvas.save();
                    canvas.translate(this.docTitleOffsetX + i31 + getExtraTextX(), height);
                    this.docTitleLayout.draw(canvas);
                    canvas.restore();
                    TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll = (TLRPC$TL_messageMediaPoll) MessageObject.getMedia(this.currentMessageObject.messageOwner);
                    if (this.lastPoll.quiz && ((this.pollVoted || this.pollClosed) && !TextUtils.isEmpty(tLRPC$TL_messageMediaPoll.results.solution))) {
                        Drawable themedDrawable = getThemedDrawable(this.currentMessageObject.isOutOwner() ? "drawable_chat_pollHintDrawableOut" : "drawable_chat_pollHintDrawableIn");
                        if (this.pollVoteInProgress) {
                            themedDrawable.setAlpha((int) (this.pollAnimationProgress * 255.0f));
                        } else {
                            themedDrawable.setAlpha(i8);
                        }
                        int i32 = this.docTitleOffsetX;
                        if (i32 < 0 || (i32 == 0 && this.docTitleLayout.getLineLeft(0) == f6)) {
                            this.pollHintX = (this.currentBackgroundDrawable.getBounds().right - themedDrawable.getIntrinsicWidth()) - AndroidUtilities.dp(this.currentMessageObject.isOutOwner() ? 17.0f : 11.0f);
                        } else {
                            this.pollHintX = getCurrentBackgroundLeft() + AndroidUtilities.dp(11.0f);
                        }
                        this.pollHintY = height - AndroidUtilities.dp(6.0f);
                        int intrinsicWidth2 = this.pollHintX + (themedDrawable.getIntrinsicWidth() / i9);
                        int intrinsicHeight = this.pollHintY + (themedDrawable.getIntrinsicHeight() / i9);
                        if (this.hintButtonVisible) {
                            float f45 = this.hintButtonProgress;
                            if (f45 < 1.0f) {
                                f8 = AnimationProperties.overshootInterpolator.getInterpolation(f45);
                                int intrinsicWidth3 = ((int) (themedDrawable.getIntrinsicWidth() * f8)) / i9;
                                int intrinsicHeight2 = ((int) (themedDrawable.getIntrinsicHeight() * f8)) / i9;
                                themedDrawable.setBounds(intrinsicWidth2 - intrinsicWidth3, intrinsicHeight - intrinsicHeight2, intrinsicWidth2 + intrinsicWidth3, intrinsicHeight + intrinsicHeight2);
                                themedDrawable.draw(canvas);
                            }
                        }
                        f8 = this.hintButtonProgress;
                        int intrinsicWidth32 = ((int) (themedDrawable.getIntrinsicWidth() * f8)) / i9;
                        int intrinsicHeight22 = ((int) (themedDrawable.getIntrinsicHeight() * f8)) / i9;
                        themedDrawable.setBounds(intrinsicWidth2 - intrinsicWidth32, intrinsicHeight - intrinsicHeight22, intrinsicWidth2 + intrinsicWidth32, intrinsicHeight + intrinsicHeight22);
                        themedDrawable.draw(canvas);
                    } else {
                        this.pollHintX = -1;
                    }
                    if (this.pollAvatarImages != null && !this.isBot) {
                        int ceil2 = (int) Math.ceil(this.docTitleLayout.getLineLeft(0));
                        if (this.docTitleOffsetX != 0 || ceil2 != 0) {
                            int i33 = -AndroidUtilities.dp(13.0f);
                            int i34 = this.docTitleOffsetX;
                            if (i34 != 0) {
                                dp4 = ((i34 + i31) - AndroidUtilities.dp(23.0f)) - getExtraTextX();
                            } else {
                                dp4 = ((ceil2 + i31) - AndroidUtilities.dp(23.0f)) - getExtraTextX();
                            }
                            i17 = dp4;
                            i18 = i33;
                        } else {
                            i18 = AndroidUtilities.dp(13.0f);
                            i17 = ((int) Math.ceil(this.docTitleLayout.getLineWidth(0))) + i31 + AndroidUtilities.dp(7.0f) + getExtraTextX();
                        }
                        for (int length2 = this.pollAvatarImages.length - 1; length2 >= 0; length2--) {
                            if (this.pollAvatarImagesVisible[length2] && this.pollAvatarImages[length2].hasImageSet()) {
                                this.pollAvatarImages[length2].setImageX((i18 * length2) + i17);
                                this.pollAvatarImages[length2].setImageY(height - AndroidUtilities.dp(1.0f));
                                ImageReceiver[] imageReceiverArr = this.pollAvatarImages;
                                if (length2 != imageReceiverArr.length - 1) {
                                    canvas.drawCircle(imageReceiverArr[length2].getCenterX(), this.pollAvatarImages[length2].getCenterY(), AndroidUtilities.dp(9.0f), this.currentBackgroundDrawable.getPaint());
                                }
                                if (this.animatePollAvatars && this.animatePollAnswerAlpha) {
                                    this.pollAvatarImages[length2].setAlpha(Math.min(this.pollUnvoteInProgress ? (1.0f - this.pollAnimationProgress) / 0.3f : this.pollAnimationProgress, 1.0f));
                                }
                                this.pollAvatarImages[length2].draw(canvas);
                            }
                        }
                        if ((!this.pollClosed && !this.pollVoted) || this.pollVoteInProgress) {
                            tLRPC$Poll = this.lastPoll;
                            if (tLRPC$Poll.quiz && tLRPC$Poll.close_period != 0) {
                                max = Math.max(0L, (this.lastPoll.close_date * 1000) - ConnectionsManager.getInstance(this.currentAccount).getCurrentTimeMillis());
                                if (this.closeTimeText != null || this.lastPollCloseTime != max) {
                                    this.closeTimeText = AndroidUtilities.formatDurationNoHours((int) Math.ceil(((float) max) / 1000.0f), false);
                                    this.closeTimeWidth = (int) Math.ceil(Theme.chat_timePaint.measureText(formatDurationNoHours));
                                    this.lastPollCloseTime = max;
                                }
                                if (max <= 0 && !this.pollClosed) {
                                    if (this.currentMessageObject.pollLastCheckTime + 1000 < SystemClock.elapsedRealtime()) {
                                        this.currentMessageObject.pollLastCheckTime = 0L;
                                    }
                                    this.delegate.needReloadPolls();
                                }
                                int dp15 = (this.currentBackgroundDrawable.getBounds().right - this.closeTimeWidth) - AndroidUtilities.dp(!this.currentMessageObject.isOutOwner() ? 40.0f : 34.0f);
                                if (max <= 5000) {
                                    Theme.chat_timePaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outPollWrongAnswer : Theme.key_chat_inPollWrongAnswer));
                                }
                                if (this.animatePollAnswer) {
                                    Theme.chat_timePaint.setAlpha((int) ((1.0f - this.pollAnimationProgress) * 255.0f));
                                }
                                canvas.drawText(this.closeTimeText, dp15, AndroidUtilities.dp(11.0f) + height, Theme.chat_timePaint);
                                Theme.chat_pollTimerPaint.setColor(Theme.chat_timePaint.getColor());
                                dp2 = dp15 + this.closeTimeWidth + AndroidUtilities.dp(13.0f);
                                int dp16 = AndroidUtilities.dp(5.1f);
                                dp3 = height + AndroidUtilities.dp(6.0f);
                                if (max > 60000) {
                                    this.rect.set(dp2 - dp16, dp3 - dp16, dp2 + dp16, dp16 + dp3);
                                    float min2 = (((float) max) / (Math.min(60, this.lastPoll.close_period) * 1000.0f)) * (-360.0f);
                                    f7 = 0.0f;
                                    c = 0;
                                    i10 = i31;
                                    canvas.drawArc(this.rect, -90.0f, min2, false, Theme.chat_pollTimerPaint);
                                    this.timerParticles.draw(canvas, Theme.chat_pollTimerPaint, this.rect, min2, this.pollVoteInProgress ? 1.0f - this.pollAnimationProgress : 1.0f);
                                } else {
                                    i10 = i31;
                                    f7 = 0.0f;
                                    c = 0;
                                    canvas.drawCircle(dp2, dp3, dp16, Theme.chat_pollTimerPaint);
                                }
                                if (max <= 60000 || this.timerTransitionProgress != f7) {
                                    Theme.chat_pollTimerPaint.setAlpha((int) (this.timerTransitionProgress * 255.0f));
                                    float f46 = dp2;
                                    canvas.drawLine(f46 - (AndroidUtilities.dp(2.1f) * this.timerTransitionProgress), dp3 - AndroidUtilities.dp(7.5f), f46 + (AndroidUtilities.dp(2.1f) * this.timerTransitionProgress), dp3 - AndroidUtilities.dp(7.5f), Theme.chat_pollTimerPaint);
                                    float f47 = dp3;
                                    canvas.drawLine(f46, f47 - (AndroidUtilities.dp(3.0f) * this.timerTransitionProgress), f46, f47, Theme.chat_pollTimerPaint);
                                    if (max <= 60000) {
                                        j4 = j3;
                                        float f48 = this.timerTransitionProgress - (((float) j4) / 180.0f);
                                        this.timerTransitionProgress = f48;
                                        if (f48 < f7) {
                                            this.timerTransitionProgress = f7;
                                        }
                                        invalidate();
                                        if (Build.VERSION.SDK_INT >= 21 && this.selectorDrawable[c] != null) {
                                            iArr = this.selectorDrawableMaskType;
                                            i16 = iArr[c] == 1 ? 3 : 3;
                                            if (iArr[c] == i16) {
                                                canvas.save();
                                                float f49 = this.hintButtonProgress;
                                                canvas.scale(f49, f49, this.selectorDrawable[c].getBounds().centerX(), this.selectorDrawable[c].getBounds().centerY());
                                            }
                                            this.selectorDrawable[c].draw(canvas);
                                            if (this.selectorDrawableMaskType[c] == i16) {
                                                canvas.restore();
                                            }
                                        }
                                        size = this.pollButtons.size();
                                        i11 = 0;
                                        int i35 = 0;
                                        while (i11 < size) {
                                            PollButton pollButton2 = this.pollButtons.get(i11);
                                            int i36 = i10;
                                            pollButton2.x = i36;
                                            canvas.save();
                                            canvas.translate(AndroidUtilities.dp(35.0f) + i36, pollButton2.y + this.namesOffset);
                                            pollButton2.title.draw(canvas);
                                            AnimatedEmojiSpan.drawAnimatedEmojis(canvas, pollButton2.title == null ? null : pollButton2.title.layout, pollButton2.animatedEmoji, 0.0f, null, 0.0f, 0.0f, 0.0f, 1.0f, getAdaptiveEmojiColorFilter(1, pollButton2.title.getPaint().getColor()));
                                            int min3 = (int) (this.animatePollAnswerAlpha ? Math.min((this.pollUnvoteInProgress ? 1.0f - this.pollAnimationProgress : this.pollAnimationProgress) / 0.3f, 1.0f) * 255.0f : 255.0f);
                                            boolean z13 = this.pollVoted;
                                            if (z13 || this.pollClosed || this.animatePollAnswerAlpha) {
                                                if (this.lastPoll.quiz && z13 && pollButton2.chosen) {
                                                    if (pollButton2.correct) {
                                                        i12 = this.currentMessageObject.isOutOwner() ? Theme.key_chat_outPollCorrectAnswer : Theme.key_chat_inPollCorrectAnswer;
                                                    } else {
                                                        i12 = this.currentMessageObject.isOutOwner() ? Theme.key_chat_outPollWrongAnswer : Theme.key_chat_inPollWrongAnswer;
                                                    }
                                                    if (!this.currentBackgroundDrawable.hasGradient() || Theme.hasThemeKey(i12)) {
                                                        Theme.chat_docBackPaint.setColor(getThemedColor(i12));
                                                    } else {
                                                        Theme.chat_docBackPaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outAudioSeekbarFill : Theme.key_chat_inAudioSeekbarFill));
                                                    }
                                                } else {
                                                    Theme.chat_docBackPaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outAudioSeekbarFill : Theme.key_chat_inAudioSeekbarFill));
                                                }
                                                if (this.animatePollAnswerAlpha) {
                                                    float f50 = min3;
                                                    Theme.chat_instantViewPaint.setAlpha((int) ((Theme.chat_instantViewPaint.getAlpha() / 255.0f) * f50));
                                                    Theme.chat_docBackPaint.setAlpha((int) (f50 * (Theme.chat_docBackPaint.getAlpha() / 255.0f)));
                                                }
                                                canvas.drawText(String.format("%d%%", Integer.valueOf((int) Math.ceil(pollButton2.prevPercent + ((pollButton2.percent - pollButton2.prevPercent) * this.pollAnimationProgress)))), (-AndroidUtilities.dp(6.5f)) - ((int) Math.ceil(Theme.chat_instantViewPaint.measureText(format))), AndroidUtilities.dp(14.0f), Theme.chat_instantViewPaint);
                                                this.rect.set(0.0f, pollButton2.height + AndroidUtilities.dp(6.0f), (this.backgroundWidth - AndroidUtilities.dp(76.0f)) * (pollButton2.prevPercentProgress + ((pollButton2.percentProgress - pollButton2.prevPercentProgress) * this.pollAnimationProgress)), pollButton2.height + AndroidUtilities.dp(11.0f));
                                                canvas.drawRoundRect(this.rect, AndroidUtilities.dp(2.0f), AndroidUtilities.dp(2.0f), Theme.chat_docBackPaint);
                                                if (pollButton2.chosen || pollButton2.prevChosen || (this.lastPoll.quiz && pollButton2.correct && (this.pollVoted || this.pollClosed))) {
                                                    float dp17 = this.rect.left - AndroidUtilities.dp(13.5f);
                                                    float centerY = this.rect.centerY();
                                                    canvas.drawCircle(dp17, centerY, AndroidUtilities.dp(7.0f), Theme.chat_docBackPaint);
                                                    if (this.lastPoll.quiz && pollButton2.chosen && !pollButton2.correct) {
                                                        drawable = Theme.chat_pollCrossDrawable[this.currentMessageObject.isOutOwner() ? 1 : 0];
                                                    } else {
                                                        drawable = Theme.chat_pollCheckDrawable[this.currentMessageObject.isOutOwner() ? 1 : 0];
                                                    }
                                                    drawable.setAlpha(min3);
                                                    BaseCell.setDrawableBounds(drawable, dp17 - (drawable.getIntrinsicWidth() / 2), centerY - (drawable.getIntrinsicHeight() / 2));
                                                    drawable.draw(canvas);
                                                }
                                            }
                                            if ((this.pollVoted || this.pollClosed) && !this.animatePollAnswerAlpha) {
                                                i13 = i36;
                                                pollButton = pollButton2;
                                                i14 = i11;
                                                i15 = size;
                                                j5 = j4;
                                            } else {
                                                if (isDrawSelectionBackground()) {
                                                    Theme.chat_replyLinePaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outVoiceSeekbarSelected : Theme.key_chat_inVoiceSeekbarSelected));
                                                } else {
                                                    Theme.chat_replyLinePaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outVoiceSeekbar : Theme.key_chat_inVoiceSeekbar));
                                                }
                                                if (this.animatePollAnswerAlpha) {
                                                    Theme.chat_replyLinePaint.setAlpha((int) ((255 - min3) * (Theme.chat_replyLinePaint.getAlpha() / 255.0f)));
                                                }
                                                i13 = i36;
                                                pollButton = pollButton2;
                                                i14 = i11;
                                                i15 = size;
                                                j5 = j4;
                                                canvas.drawLine(-AndroidUtilities.dp(2.0f), pollButton2.height + AndroidUtilities.dp(13.0f), this.backgroundWidth - AndroidUtilities.dp(58.0f), pollButton2.height + AndroidUtilities.dp(13.0f), Theme.chat_replyLinePaint);
                                                if (this.pollVoteInProgress && i14 == this.pollVoteInProgressNum) {
                                                    Theme.chat_instantViewRectPaint.setColor(getThemedColor(this.currentMessageObject.isOutOwner() ? Theme.key_chat_outAudioSeekbarFill : Theme.key_chat_inAudioSeekbarFill));
                                                    if (this.animatePollAnswerAlpha) {
                                                        Theme.chat_instantViewRectPaint.setAlpha((int) ((255 - min3) * (Theme.chat_instantViewRectPaint.getAlpha() / 255.0f)));
                                                    }
                                                    this.rect.set((-AndroidUtilities.dp(22.0f)) - AndroidUtilities.dp(8.5f), AndroidUtilities.dp(9.0f) - AndroidUtilities.dp(8.5f), (-AndroidUtilities.dp(23.0f)) + AndroidUtilities.dp(8.5f), AndroidUtilities.dp(9.0f) + AndroidUtilities.dp(8.5f));
                                                    canvas.drawArc(this.rect, this.voteRadOffset, this.voteCurrentCircleLength, false, Theme.chat_instantViewRectPaint);
                                                } else {
                                                    if (this.currentMessageObject.isOutOwner()) {
                                                        Theme.chat_instantViewRectPaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_outMenuSelected : Theme.key_chat_outMenu));
                                                    } else {
                                                        Theme.chat_instantViewRectPaint.setColor(getThemedColor(isDrawSelectionBackground() ? Theme.key_chat_inMenuSelected : Theme.key_chat_inMenu));
                                                    }
                                                    if (this.animatePollAnswerAlpha) {
                                                        Theme.chat_instantViewRectPaint.setAlpha((int) ((255 - min3) * (Theme.chat_instantViewRectPaint.getAlpha() / 255.0f)));
                                                    }
                                                    canvas.drawCircle(-AndroidUtilities.dp(22.0f), AndroidUtilities.dp(9.0f), AndroidUtilities.dp(8.5f), Theme.chat_instantViewRectPaint);
                                                    if (this.lastPoll.multiple_choice) {
                                                        int dp18 = AndroidUtilities.dp(8.5f);
                                                        int i37 = Theme.key_checkboxCheck;
                                                        if (this.currentMessageObject.isOutOwner() && getThemedColor(i37) == -1) {
                                                            i37 = Theme.key_chat_outBubble;
                                                        }
                                                        this.pollCheckBox[i14].setColor(-1, this.currentMessageObject.isOutOwner() ? Theme.key_chat_outAudioSeekbarFill : Theme.key_chat_inAudioSeekbarFill, i37);
                                                        int i38 = dp18 / 2;
                                                        this.pollCheckBox[i14].setBounds((-AndroidUtilities.dp(22.0f)) - i38, AndroidUtilities.dp(9.0f) - i38, dp18, dp18);
                                                        this.pollCheckBox[i14].draw(canvas);
                                                    }
                                                }
                                            }
                                            canvas.restore();
                                            if (i14 == i15 - 1) {
                                                i35 = pollButton.y + this.namesOffset + pollButton.height;
                                            }
                                            i11 = i14 + 1;
                                            size = i15;
                                            i10 = i13;
                                            j4 = j5;
                                        }
                                        long j9 = j4;
                                        int i39 = i10;
                                        if (!this.drawInstantView) {
                                            int currentBackgroundLeft = getCurrentBackgroundLeft() + AndroidUtilities.dp((this.currentMessageObject.isOutOwner() || this.mediaBackground || this.drawPinnedBottom) ? 2.0f : 8.0f);
                                            int dp19 = i35 + AndroidUtilities.dp(13.0f);
                                            if (this.currentMessageObject.isOutOwner()) {
                                                Theme.chat_instantViewPaint.setColor(getThemedColor(Theme.key_chat_outPreviewInstantText));
                                            } else {
                                                Theme.chat_instantViewPaint.setColor(getThemedColor(Theme.key_chat_inPreviewInstantText));
                                            }
                                            this.instantButtonRect.set(currentBackgroundLeft, dp19, this.instantWidth + currentBackgroundLeft, AndroidUtilities.dp(44.0f) + dp19);
                                            Drawable[] drawableArr2 = this.selectorDrawable;
                                            if (drawableArr2[0] != null && this.selectorDrawableMaskType[0] == 2) {
                                                drawableArr2[0].setBounds(currentBackgroundLeft - AndroidUtilities.dp(this.pollInstantViewTouchesBottom ? 6.0f : 0.0f), dp19, this.instantWidth + currentBackgroundLeft, AndroidUtilities.dp(44.0f) + dp19);
                                                this.selectorDrawable[0].draw(canvas);
                                            }
                                            if (this.instantViewLayout != null) {
                                                canvas.save();
                                                canvas.translate(currentBackgroundLeft + this.instantTextX, dp19 + AndroidUtilities.dp(14.5f));
                                                this.instantViewLayout.draw(canvas);
                                                canvas.restore();
                                            }
                                        } else if (this.infoLayout != null) {
                                            TLRPC$Poll tLRPC$Poll2 = this.lastPoll;
                                            if (tLRPC$Poll2.public_voters || tLRPC$Poll2.multiple_choice) {
                                                i35 += AndroidUtilities.dp(6.0f);
                                            }
                                            canvas.save();
                                            canvas.translate(i39 + this.infoX, i35 + AndroidUtilities.dp(22.0f));
                                            this.infoLayout.draw(canvas);
                                            canvas.restore();
                                        }
                                        updatePollAnimations(j9);
                                        canvas.restore();
                                    }
                                }
                                j4 = j3;
                                invalidate();
                                if (Build.VERSION.SDK_INT >= 21) {
                                    iArr = this.selectorDrawableMaskType;
                                    if (iArr[c] == 1) {
                                    }
                                    if (iArr[c] == i16) {
                                    }
                                    this.selectorDrawable[c].draw(canvas);
                                    if (this.selectorDrawableMaskType[c] == i16) {
                                    }
                                }
                                size = this.pollButtons.size();
                                i11 = 0;
                                int i352 = 0;
                                while (i11 < size) {
                                }
                                long j92 = j4;
                                int i392 = i10;
                                if (!this.drawInstantView) {
                                }
                                updatePollAnimations(j92);
                                canvas.restore();
                            }
                        }
                        i10 = i31;
                        j4 = j3;
                        c = 0;
                        if (Build.VERSION.SDK_INT >= 21) {
                        }
                        size = this.pollButtons.size();
                        i11 = 0;
                        int i3522 = 0;
                        while (i11 < size) {
                        }
                        long j922 = j4;
                        int i3922 = i10;
                        if (!this.drawInstantView) {
                        }
                        updatePollAnimations(j922);
                        canvas.restore();
                    }
                }
                if (!this.pollClosed) {
                    tLRPC$Poll = this.lastPoll;
                    if (tLRPC$Poll.quiz) {
                        max = Math.max(0L, (this.lastPoll.close_date * 1000) - ConnectionsManager.getInstance(this.currentAccount).getCurrentTimeMillis());
                        if (this.closeTimeText != null) {
                        }
                        this.closeTimeText = AndroidUtilities.formatDurationNoHours((int) Math.ceil(((float) max) / 1000.0f), false);
                        this.closeTimeWidth = (int) Math.ceil(Theme.chat_timePaint.measureText(formatDurationNoHours));
                        this.lastPollCloseTime = max;
                        if (max <= 0) {
                            if (this.currentMessageObject.pollLastCheckTime + 1000 < SystemClock.elapsedRealtime()) {
                            }
                            this.delegate.needReloadPolls();
                        }
                        int dp152 = (this.currentBackgroundDrawable.getBounds().right - this.closeTimeWidth) - AndroidUtilities.dp(!this.currentMessageObject.isOutOwner() ? 40.0f : 34.0f);
                        if (max <= 5000) {
                        }
                        if (this.animatePollAnswer) {
                        }
                        canvas.drawText(this.closeTimeText, dp152, AndroidUtilities.dp(11.0f) + height, Theme.chat_timePaint);
                        Theme.chat_pollTimerPaint.setColor(Theme.chat_timePaint.getColor());
                        dp2 = dp152 + this.closeTimeWidth + AndroidUtilities.dp(13.0f);
                        int dp162 = AndroidUtilities.dp(5.1f);
                        dp3 = height + AndroidUtilities.dp(6.0f);
                        if (max > 60000) {
                        }
                        if (max <= 60000) {
                        }
                        Theme.chat_pollTimerPaint.setAlpha((int) (this.timerTransitionProgress * 255.0f));
                        float f462 = dp2;
                        canvas.drawLine(f462 - (AndroidUtilities.dp(2.1f) * this.timerTransitionProgress), dp3 - AndroidUtilities.dp(7.5f), f462 + (AndroidUtilities.dp(2.1f) * this.timerTransitionProgress), dp3 - AndroidUtilities.dp(7.5f), Theme.chat_pollTimerPaint);
                        float f472 = dp3;
                        canvas.drawLine(f462, f472 - (AndroidUtilities.dp(3.0f) * this.timerTransitionProgress), f462, f472, Theme.chat_pollTimerPaint);
                        if (max <= 60000) {
                        }
                        j4 = j3;
                        invalidate();
                        if (Build.VERSION.SDK_INT >= 21) {
                        }
                        size = this.pollButtons.size();
                        i11 = 0;
                        int i35222 = 0;
                        while (i11 < size) {
                        }
                        long j9222 = j4;
                        int i39222 = i10;
                        if (!this.drawInstantView) {
                        }
                        updatePollAnimations(j9222);
                        canvas.restore();
                    }
                    i10 = i31;
                    j4 = j3;
                    c = 0;
                    if (Build.VERSION.SDK_INT >= 21) {
                    }
                    size = this.pollButtons.size();
                    i11 = 0;
                    int i352222 = 0;
                    while (i11 < size) {
                    }
                    long j92222 = j4;
                    int i392222 = i10;
                    if (!this.drawInstantView) {
                    }
                    updatePollAnimations(j92222);
                    canvas.restore();
                }
                tLRPC$Poll = this.lastPoll;
                if (tLRPC$Poll.quiz) {
                }
                i10 = i31;
                j4 = j3;
                c = 0;
                if (Build.VERSION.SDK_INT >= 21) {
                }
                size = this.pollButtons.size();
                i11 = 0;
                int i3522222 = 0;
                while (i11 < size) {
                }
                long j922222 = j4;
                int i3922222 = i10;
                if (!this.drawInstantView) {
                }
                updatePollAnimations(j922222);
                canvas.restore();
            } else if (i21 == 12) {
                drawContact(canvas);
            }
        }
        if (this.drawImageButton) {
        }
        messageDrawable = null;
        if (this.buttonState == -1) {
        }
        if (z5) {
        }
        canvas2 = canvas;
        f12 = 1.0f;
        i19 = -1;
        f13 = 0.0f;
        AnimatedFloat animatedFloat22 = this.timerParticlesAlpha;
        if (animatedFloat22 == null) {
        }
        if (f14 > f13) {
        }
        if (!this.drawVideoImageButton) {
        }
        f15 = this.controlsAlpha;
        if (f15 != f12) {
        }
        this.videoRadialProgress.draw(canvas2);
        if (this.drawMediaCheckBox) {
        }
        if (this.documentAttachType == 7) {
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void drawRadialProgress(Canvas canvas) {
        boolean isRoundOnce = this.currentMessageObject.isRoundOnce();
        if (isRoundOnce) {
            RectF rectF = AndroidUtilities.rectTmp;
            rectF.set(this.radialProgress.getProgressRect());
            rectF.inset(-AndroidUtilities.dp(15.0f), -AndroidUtilities.dp(15.0f));
            canvas.saveLayerAlpha(rectF, (int) (this.radialProgressAlpha * 255.0f), 31);
        } else {
            canvas.save();
            int i = this.currentMessageObject.type;
            if (this.drawPhotoImage && (i == 3 || i == 1 || i == 8)) {
                canvas.clipRect(this.photoImage.getImageX(), this.photoImage.getImageY(), this.photoImage.getImageX2(), this.photoImage.getImageY2());
            }
        }
        if (this.currentMessageObject.needDrawBluredPreview()) {
            drawPhotoBlurRect(canvas, this.radialProgress.getProgressRect());
        }
        RadialProgress2 radialProgress2 = this.radialProgress;
        radialProgress2.iconScale = 1.0f;
        radialProgress2.draw(canvas);
        if (isRoundOnce) {
            canvas.save();
            drawPhotoBlurRect(canvas, getRadialProgress().getProgressRect());
            getRadialProgress().draw(canvas);
            RectF progressRect = getRadialProgress().getProgressRect();
            float centerX = progressRect.centerX() + AndroidUtilities.dp(18.0f);
            float centerY = progressRect.centerY() + AndroidUtilities.dp(18.0f);
            float dp = AndroidUtilities.dp(10.0f);
            float dp2 = AndroidUtilities.dp(1.33f) + dp;
            if (this.clipPaint == null) {
                Paint paint = new Paint(1);
                this.clipPaint = paint;
                paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));
            }
            canvas.drawCircle(centerX, centerY, dp2, this.clipPaint);
            RectF rectF2 = AndroidUtilities.rectTmp;
            rectF2.set(centerX - dp, centerY - dp, centerX + dp, dp + centerY);
            drawPhotoBlurRect(canvas, rectF2);
            if (this.oncePeriod == null) {
                CaptionContainerView.PeriodDrawable periodDrawable = new CaptionContainerView.PeriodDrawable(3);
                this.oncePeriod = periodDrawable;
                periodDrawable.updateColors(-1, 0, 0);
                CaptionContainerView.PeriodDrawable periodDrawable2 = this.oncePeriod;
                periodDrawable2.diameterDp = 14.0f;
                periodDrawable2.setTextSize(10.0f);
                this.oncePeriod.strokePaint.setStrokeWidth(AndroidUtilities.dpf2(1.5f));
                this.oncePeriod.setValue(1, false, false);
                this.oncePeriod.textOffsetX = -AndroidUtilities.dpf2(0.33f);
                this.oncePeriod.textOffsetY = AndroidUtilities.dpf2(0.33f);
            }
            CaptionContainerView.PeriodDrawable periodDrawable3 = this.oncePeriod;
            periodDrawable3.diameterDp = 14.0f;
            periodDrawable3.setTextSize(10.0f);
            this.oncePeriod.setClear(false);
            this.oncePeriod.setCenterXY(centerX, centerY);
            this.oncePeriod.draw(canvas, 1.0f);
            canvas.restore();
        }
        canvas.restore();
    }

    protected void drawPhotoBlurRect(Canvas canvas, RectF rectF) {
        this.rectPath.rewind();
        this.rectPath.addRoundRect(rectF, rectF.width() / 2.0f, rectF.height() / 2.0f, Path.Direction.CW);
        canvas.save();
        canvas.clipPath(this.rectPath);
        float alpha = this.photoImage.getAlpha();
        this.photoImage.setAlpha((this.currentMessageObject.isRoundOnce() ? 1.0f : 0.5f) * alpha);
        this.photoImage.draw(canvas);
        this.photoImage.setAlpha(alpha);
        canvas.restore();
        Paint themedPaint = getThemedPaint("paintChatTimeBackground");
        int alpha2 = themedPaint.getAlpha();
        themedPaint.setAlpha((int) (alpha2 * this.controlsAlpha * 0.4f));
        canvas.drawRoundRect(rectF, rectF.width() / 2.0f, rectF.height() / 2.0f, themedPaint);
        themedPaint.setAlpha(alpha2);
    }

    @Override // org.telegram.messenger.DownloadController.FileDownloadProgressListener
    public int getObserverTag() {
        return this.TAG;
    }

    public MessageObject getMessageObject() {
        MessageObject messageObject = this.messageObjectToSet;
        return messageObject != null ? messageObject : this.currentMessageObject;
    }

    public TLRPC$Document getStreamingMedia() {
        int i = this.documentAttachType;
        if (i == 4 || i == 7 || i == 2) {
            return this.documentAttach;
        }
        return null;
    }

    public boolean drawPinnedBottom() {
        MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
        if (groupedMessages != null && groupedMessages.isDocuments) {
            MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
            if (groupedMessagePosition == null || (groupedMessagePosition.flags & 8) == 0) {
                return true;
            }
            return this.pinnedBottom;
        }
        return this.pinnedBottom;
    }

    public float getVideoTranscriptionProgress() {
        MessageObject messageObject;
        if (this.transitionParams == null || (messageObject = this.currentMessageObject) == null || !messageObject.isRoundVideo()) {
            return 1.0f;
        }
        TransitionParams transitionParams = this.transitionParams;
        if (!transitionParams.animateDrawBackground) {
            return this.drawBackground ? 1.0f : 0.0f;
        } else if (this.drawBackground) {
            return transitionParams.animateChangeProgress;
        } else {
            return 1.0f - transitionParams.animateChangeProgress;
        }
    }

    public boolean drawPinnedTop() {
        MessageObject.GroupedMessages groupedMessages = this.currentMessagesGroup;
        if (groupedMessages != null && groupedMessages.isDocuments) {
            MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
            if (groupedMessagePosition == null || (groupedMessagePosition.flags & 4) == 0) {
                return true;
            }
            return this.pinnedTop;
        }
        return this.pinnedTop;
    }

    public boolean isPinnedBottom() {
        return this.pinnedBottom;
    }

    public boolean isPinnedTop() {
        return this.pinnedTop;
    }

    public MessageObject.GroupedMessages getCurrentMessagesGroup() {
        return this.currentMessagesGroup;
    }

    public MessageObject.GroupedMessagePosition getCurrentPosition() {
        return this.currentPosition;
    }

    public int getLayoutHeight() {
        return this.layoutHeight;
    }

    @Override // android.view.View
    public boolean performAccessibilityAction(int i, Bundle bundle) {
        ChatMessageCellDelegate chatMessageCellDelegate;
        ChatMessageCellDelegate chatMessageCellDelegate2 = this.delegate;
        if (chatMessageCellDelegate2 == null || !chatMessageCellDelegate2.onAccessibilityAction(i, bundle)) {
            if (i == 16) {
                int iconForCurrentState = getIconForCurrentState();
                if (iconForCurrentState != 4 && iconForCurrentState != 5) {
                    didPressButton(true, false);
                } else if (this.currentMessageObject.type == 16) {
                    this.delegate.didPressOther(this, this.otherX, this.otherY);
                } else {
                    didClickedImage();
                }
                return true;
            }
            if (i == R.id.acc_action_small_button) {
                didPressMiniButton(true);
            } else if (i == R.id.acc_action_msg_options) {
                ChatMessageCellDelegate chatMessageCellDelegate3 = this.delegate;
                if (chatMessageCellDelegate3 != null) {
                    if (this.currentMessageObject.type == 16) {
                        chatMessageCellDelegate3.didLongPress(this, 0.0f, 0.0f);
                    } else {
                        chatMessageCellDelegate3.didPressOther(this, this.otherX, this.otherY);
                    }
                }
            } else if (i == R.id.acc_action_open_forwarded_origin && (chatMessageCellDelegate = this.delegate) != null) {
                TLRPC$Chat tLRPC$Chat = this.currentForwardChannel;
                if (tLRPC$Chat != null) {
                    chatMessageCellDelegate.didPressChannelAvatar(this, tLRPC$Chat, this.currentMessageObject.messageOwner.fwd_from.channel_post, this.lastTouchX, this.lastTouchY);
                } else {
                    TLRPC$User tLRPC$User = this.currentForwardUser;
                    if (tLRPC$User != null) {
                        chatMessageCellDelegate.didPressUserAvatar(this, tLRPC$User, this.lastTouchX, this.lastTouchY);
                    } else if (this.currentForwardName != null) {
                        chatMessageCellDelegate.didPressHiddenForward(this);
                    }
                }
            }
            if ((this.currentMessageObject.isVoice() || this.currentMessageObject.isRoundVideo() || (this.currentMessageObject.isMusic() && MediaController.getInstance().isPlayingMessage(this.currentMessageObject))) && this.seekBarAccessibilityDelegate.performAccessibilityActionInternal(i, bundle)) {
                return true;
            }
            return super.performAccessibilityAction(i, bundle);
        }
        return false;
    }

    public void setAnimationRunning(boolean z, boolean z2) {
        this.animationRunning = z;
        if (z) {
            this.willRemoved = z2;
        } else {
            this.willRemoved = false;
        }
    }

    @Override // android.view.View
    public boolean onHoverEvent(MotionEvent motionEvent) {
        int x = (int) motionEvent.getX();
        int y = (int) motionEvent.getY();
        if (motionEvent.getAction() == 9 || motionEvent.getAction() == 7) {
            for (int i = 0; i < this.accessibilityVirtualViewBounds.size(); i++) {
                if (this.accessibilityVirtualViewBounds.valueAt(i).contains(x, y)) {
                    int keyAt = this.accessibilityVirtualViewBounds.keyAt(i);
                    if (keyAt != this.currentFocusedVirtualView) {
                        this.currentFocusedVirtualView = keyAt;
                        sendAccessibilityEventForVirtualView(keyAt, LiteMode.FLAG_CHAT_SCALE);
                        return true;
                    }
                    return true;
                }
            }
        } else if (motionEvent.getAction() == 10) {
            this.currentFocusedVirtualView = 0;
        }
        return super.onHoverEvent(motionEvent);
    }

    @Override // android.view.View
    public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo accessibilityNodeInfo) {
        super.onInitializeAccessibilityNodeInfo(accessibilityNodeInfo);
    }

    @Override // android.view.View
    public AccessibilityNodeProvider getAccessibilityNodeProvider() {
        return new MessageAccessibilityNodeProvider();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void sendAccessibilityEventForVirtualView(int i, int i2) {
        sendAccessibilityEventForVirtualView(i, i2, null);
    }

    private void sendAccessibilityEventForVirtualView(int i, int i2, String str) {
        if (((AccessibilityManager) getContext().getSystemService("accessibility")).isTouchExplorationEnabled()) {
            AccessibilityEvent obtain = AccessibilityEvent.obtain(i2);
            obtain.setPackageName(getContext().getPackageName());
            obtain.setSource(this, i);
            if (str != null) {
                obtain.getText().add(str);
            }
            if (getParent() != null) {
                getParent().requestSendAccessibilityEvent(this, obtain);
            }
        }
    }

    public static Point getMessageSize(int i, int i2) {
        return getMessageSize(i, i2, 0, 0);
    }

    /* JADX WARN: Removed duplicated region for block: B:13:0x0042  */
    /* JADX WARN: Removed duplicated region for block: B:16:0x004c  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private static Point getMessageSize(int i, int i2, int i3, int i4) {
        int min;
        if (i4 == 0 || i3 == 0) {
            if (AndroidUtilities.isTablet()) {
                min = AndroidUtilities.getMinTabletSide();
            } else if (i >= i2) {
                android.graphics.Point point = AndroidUtilities.displaySize;
                i3 = Math.min(point.x, point.y) - AndroidUtilities.dp(64.0f);
                i4 = AndroidUtilities.dp(100.0f) + i3;
                if (i3 > AndroidUtilities.getPhotoSize()) {
                    i3 = AndroidUtilities.getPhotoSize();
                }
                if (i4 > AndroidUtilities.getPhotoSize()) {
                    i4 = AndroidUtilities.getPhotoSize();
                }
            } else {
                android.graphics.Point point2 = AndroidUtilities.displaySize;
                min = Math.min(point2.x, point2.y);
            }
            i3 = (int) (min * 0.7f);
            i4 = AndroidUtilities.dp(100.0f) + i3;
            if (i3 > AndroidUtilities.getPhotoSize()) {
            }
            if (i4 > AndroidUtilities.getPhotoSize()) {
            }
        }
        float f = i;
        float f2 = i3;
        float f3 = f / f2;
        int i5 = (int) (f / f3);
        float f4 = i2;
        int i6 = (int) (f4 / f3);
        if (i5 == 0) {
            i5 = AndroidUtilities.dp(150.0f);
        }
        if (i6 == 0) {
            i6 = AndroidUtilities.dp(150.0f);
        }
        if (i6 > i4) {
            i5 = (int) (i5 / (i6 / i4));
        } else if (i6 < AndroidUtilities.dp(120.0f)) {
            i4 = AndroidUtilities.dp(120.0f);
            float f5 = f / (f4 / i4);
            if (f5 < f2) {
                i5 = (int) f5;
            }
        } else {
            i4 = i6;
        }
        return new Point(i5, i4);
    }

    public StaticLayout getDescriptionLayout() {
        CachedStaticLayout cachedStaticLayout = this.descriptionLayout;
        if (cachedStaticLayout == null) {
            return null;
        }
        return cachedStaticLayout.layout;
    }

    public void setSelectedBackgroundProgress(float f) {
        this.selectedBackgroundProgress = f;
        invalidate();
    }

    public int computeHeight(MessageObject messageObject, MessageObject.GroupedMessages groupedMessages, boolean z) {
        this.photoImage.setIgnoreImageSet(true);
        this.avatarImage.setIgnoreImageSet(true);
        this.replyImageReceiver.setIgnoreImageSet(true);
        this.locationImageReceiver.setIgnoreImageSet(true);
        if (groupedMessages != null && groupedMessages.messages.size() != 1) {
            if (groupedMessages.messages.size() != groupedMessages.positions.size()) {
                groupedMessages.calculate();
            }
            this.computedGroupCaptionY = 0;
            int i = 0;
            for (int i2 = 0; i2 < groupedMessages.messages.size(); i2++) {
                MessageObject messageObject2 = groupedMessages.messages.get(i2);
                MessageObject.GroupedMessagePosition position = groupedMessages.getPosition(messageObject2);
                if (position != null && (position.flags & 1) != 0) {
                    setMessageContent(messageObject2, groupedMessages, false, false);
                    if (z && !TextUtils.isEmpty(this.currentCaption)) {
                        updateCaptionLayout();
                        this.computedGroupCaptionY = (int) (i + this.captionY);
                        this.computedCaptionLayout = this.captionLayout;
                    }
                    i += this.totalHeight + this.keyboardHeight;
                }
            }
            return i;
        }
        setMessageContent(messageObject, groupedMessages, false, false);
        this.photoImage.setIgnoreImageSet(false);
        this.avatarImage.setIgnoreImageSet(false);
        this.replyImageReceiver.setIgnoreImageSet(false);
        this.locationImageReceiver.setIgnoreImageSet(false);
        updateCaptionLayout();
        return this.totalHeight + this.keyboardHeight;
    }

    public void shakeView() {
        PropertyValuesHolder ofKeyframe = PropertyValuesHolder.ofKeyframe(View.ROTATION, Keyframe.ofFloat(0.0f, 0.0f), Keyframe.ofFloat(0.2f, 3.0f), Keyframe.ofFloat(0.4f, -3.0f), Keyframe.ofFloat(0.6f, 3.0f), Keyframe.ofFloat(0.8f, -3.0f), Keyframe.ofFloat(1.0f, 0.0f));
        Keyframe ofFloat = Keyframe.ofFloat(0.0f, 1.0f);
        Keyframe ofFloat2 = Keyframe.ofFloat(0.5f, 0.97f);
        Keyframe ofFloat3 = Keyframe.ofFloat(1.0f, 1.0f);
        PropertyValuesHolder ofKeyframe2 = PropertyValuesHolder.ofKeyframe(View.SCALE_X, ofFloat, ofFloat2, ofFloat3);
        PropertyValuesHolder ofKeyframe3 = PropertyValuesHolder.ofKeyframe(View.SCALE_Y, ofFloat, ofFloat2, ofFloat3);
        AnimatorSet animatorSet = new AnimatorSet();
        this.shakeAnimation = animatorSet;
        animatorSet.playTogether(ObjectAnimator.ofPropertyValuesHolder(this, ofKeyframe), ObjectAnimator.ofPropertyValuesHolder(this, ofKeyframe2), ObjectAnimator.ofPropertyValuesHolder(this, ofKeyframe3));
        this.shakeAnimation.setDuration(500L);
        this.shakeAnimation.start();
    }

    private void cancelShakeAnimation() {
        AnimatorSet animatorSet = this.shakeAnimation;
        if (animatorSet != null) {
            animatorSet.cancel();
            this.shakeAnimation = null;
            setScaleX(1.0f);
            setScaleY(1.0f);
            setRotation(0.0f);
        }
    }

    public void setSlidingOffset(float f) {
        if (this.slidingOffsetX != f) {
            this.slidingOffsetX = f;
            updateTranslation();
        }
    }

    public void setAnimationOffsetX(float f) {
        if (this.animationOffsetX != f) {
            this.animationOffsetX = f;
            updateTranslation();
        }
    }

    private void updateTranslation() {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null) {
            return;
        }
        setTranslationX(this.slidingOffsetX + this.animationOffsetX + ((!messageObject.isOutOwner() || this.currentMessageObject.hasWideCode) ? this.checkBoxTranslation : 0));
    }

    public float getNonAnimationTranslationX(boolean z) {
        boolean z2;
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject != null && !messageObject.isOutOwner()) {
            if (z && ((z2 = this.checkBoxVisible) || this.checkBoxAnimationInProgress)) {
                this.checkBoxTranslation = (int) Math.ceil((z2 ? CubicBezierInterpolator.EASE_OUT : CubicBezierInterpolator.EASE_IN).getInterpolation(this.checkBoxAnimationProgress) * AndroidUtilities.dp(35.0f));
            }
            return this.slidingOffsetX + this.checkBoxTranslation;
        }
        return this.slidingOffsetX;
    }

    public float getSlidingOffsetX() {
        return this.slidingOffsetX;
    }

    public boolean willRemovedAfterAnimation() {
        return this.willRemoved;
    }

    public float getAnimationOffsetX() {
        return this.animationOffsetX;
    }

    @Override // android.view.View
    public void setTranslationX(float f) {
        super.setTranslationX(f);
    }

    public SeekBar getSeekBar() {
        return this.seekBar;
    }

    public SeekBarWaveform getSeekBarWaveform() {
        return this.seekBarWaveform;
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* loaded from: classes4.dex */
    public class MessageAccessibilityNodeProvider extends AccessibilityNodeProvider {
        private Path linkPath;
        private Rect rect;
        private RectF rectF;

        private MessageAccessibilityNodeProvider() {
            this.linkPath = new Path();
            this.rectF = new RectF();
            this.rect = new Rect();
        }

        /* loaded from: classes4.dex */
        private class ProfileSpan extends ClickableSpan {
            private TLRPC$User user;

            public ProfileSpan(TLRPC$User tLRPC$User) {
                this.user = tLRPC$User;
            }

            @Override // android.text.style.ClickableSpan
            public void onClick(View view) {
                if (ChatMessageCell.this.delegate != null) {
                    ChatMessageCell.this.delegate.didPressUserAvatar(ChatMessageCell.this, this.user, 0.0f, 0.0f);
                }
            }
        }

        @Override // android.view.accessibility.AccessibilityNodeProvider
        public AccessibilityNodeInfo createAccessibilityNodeInfo(int i) {
            boolean z;
            int i2;
            String str;
            String formatShortNumber;
            int i3;
            String str2;
            boolean z2;
            boolean z3;
            CharSequence charSequence;
            CharSequence charSequence2;
            int i4;
            CharacterStyle[] characterStyleArr;
            TLRPC$ReactionCount tLRPC$ReactionCount;
            boolean z4;
            TLRPC$MessagePeerReaction tLRPC$MessagePeerReaction;
            int i5;
            String str3;
            String string;
            CharacterStyle[] characterStyleArr2;
            CharacterStyle[] characterStyleArr3;
            String string2;
            AccessibilityNodeInfo.CollectionItemInfo collectionItemInfo;
            int[] iArr = {0, 0};
            ChatMessageCell.this.getLocationOnScreen(iArr);
            if (i == -1) {
                AccessibilityNodeInfo obtain = AccessibilityNodeInfo.obtain(ChatMessageCell.this);
                ChatMessageCell.this.onInitializeAccessibilityNodeInfo(obtain);
                boolean z5 = ChatMessageCell.this.currentMessageObject != null && ChatMessageCell.this.currentMessageObject.isOut() && !ChatMessageCell.this.currentMessageObject.scheduled && ChatMessageCell.this.currentMessageObject.isUnread();
                boolean z6 = ChatMessageCell.this.currentMessageObject != null && ChatMessageCell.this.currentMessageObject.isContentUnread();
                long j = ChatMessageCell.this.currentMessageObject != null ? ChatMessageCell.this.currentMessageObject.loadedFileSize : 0L;
                ChatMessageCell chatMessageCell = ChatMessageCell.this;
                if (chatMessageCell.accessibilityText == null || chatMessageCell.accessibilityTextUnread != z5 || ChatMessageCell.this.accessibilityTextContentUnread != z6 || ChatMessageCell.this.accessibilityTextFileSize != j) {
                    SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder();
                    ChatMessageCell chatMessageCell2 = ChatMessageCell.this;
                    if (chatMessageCell2.isChat && chatMessageCell2.currentUser != null && !ChatMessageCell.this.currentMessageObject.isOut()) {
                        spannableStringBuilder.append((CharSequence) UserObject.getUserName(ChatMessageCell.this.currentUser));
                        spannableStringBuilder.setSpan(new ProfileSpan(ChatMessageCell.this.currentUser), 0, spannableStringBuilder.length(), 33);
                        spannableStringBuilder.append('\n');
                    }
                    if (ChatMessageCell.this.drawForwardedName) {
                        int i6 = 0;
                        while (i6 < 2) {
                            if (ChatMessageCell.this.forwardedNameLayout[i6] != null && ChatMessageCell.this.forwardedNameLayout[i6].getText() != null) {
                                spannableStringBuilder.append(ChatMessageCell.this.forwardedNameLayout[i6].getText());
                                spannableStringBuilder.append(i6 == 0 ? " " : "\n");
                            }
                            i6++;
                        }
                    }
                    if (ChatMessageCell.this.documentAttach != null && ChatMessageCell.this.documentAttachType == 1) {
                        String attachFileName = FileLoader.getAttachFileName(ChatMessageCell.this.documentAttach);
                        if (attachFileName.indexOf(46) != -1) {
                            spannableStringBuilder.append((CharSequence) LocaleController.formatString(R.string.AccDescrDocumentType, attachFileName.substring(attachFileName.lastIndexOf(46) + 1).toUpperCase(Locale.ROOT)));
                        }
                    }
                    if (!TextUtils.isEmpty(ChatMessageCell.this.currentMessageObject.messageText)) {
                        spannableStringBuilder.append(ChatMessageCell.this.currentMessageObject.messageText);
                    }
                    if (ChatMessageCell.this.documentAttach == null || !((ChatMessageCell.this.documentAttachType == 1 || ChatMessageCell.this.documentAttachType == 2 || ChatMessageCell.this.documentAttachType == 4) && ChatMessageCell.this.buttonState == 1 && ChatMessageCell.this.loadingProgressLayout != null)) {
                        charSequence = ", ";
                    } else {
                        spannableStringBuilder.append((CharSequence) "\n");
                        boolean isSending = ChatMessageCell.this.currentMessageObject.isSending();
                        charSequence = ", ";
                        spannableStringBuilder.append((CharSequence) LocaleController.formatString(isSending ? "AccDescrUploadProgress" : "AccDescrDownloadProgress", isSending ? R.string.AccDescrUploadProgress : R.string.AccDescrDownloadProgress, AndroidUtilities.formatFileSize(ChatMessageCell.this.currentMessageObject.loadedFileSize), AndroidUtilities.formatFileSize(ChatMessageCell.this.lastLoadingSizeTotal)));
                    }
                    if (!ChatMessageCell.this.currentMessageObject.isMusic()) {
                        charSequence2 = charSequence;
                        if (ChatMessageCell.this.currentMessageObject.isVoice() || ChatMessageCell.this.isRoundVideo) {
                            spannableStringBuilder.append(charSequence2);
                            spannableStringBuilder.append((CharSequence) LocaleController.formatDuration((int) ChatMessageCell.this.currentMessageObject.getDuration()));
                            spannableStringBuilder.append(charSequence2);
                            if (ChatMessageCell.this.currentMessageObject.isContentUnread()) {
                                spannableStringBuilder.append((CharSequence) LocaleController.getString("AccDescrMsgNotPlayed", R.string.AccDescrMsgNotPlayed));
                            } else {
                                spannableStringBuilder.append((CharSequence) LocaleController.getString("AccDescrMsgPlayed", R.string.AccDescrMsgPlayed));
                            }
                        }
                    } else {
                        spannableStringBuilder.append((CharSequence) "\n");
                        spannableStringBuilder.append((CharSequence) LocaleController.formatString("AccDescrMusicInfo", R.string.AccDescrMusicInfo, ChatMessageCell.this.currentMessageObject.getMusicAuthor(), ChatMessageCell.this.currentMessageObject.getMusicTitle()));
                        charSequence2 = charSequence;
                        spannableStringBuilder.append(charSequence2);
                        spannableStringBuilder.append((CharSequence) LocaleController.formatDuration((int) ChatMessageCell.this.currentMessageObject.getDuration()));
                    }
                    if (ChatMessageCell.this.lastPoll != null) {
                        spannableStringBuilder.append(charSequence2);
                        spannableStringBuilder.append((CharSequence) ChatMessageCell.this.lastPoll.question.text);
                        spannableStringBuilder.append(charSequence2);
                        if (!ChatMessageCell.this.pollClosed) {
                            if (ChatMessageCell.this.lastPoll.quiz) {
                                if (ChatMessageCell.this.lastPoll.public_voters) {
                                    string = LocaleController.getString("QuizPoll", R.string.QuizPoll);
                                } else {
                                    string = LocaleController.getString("AnonymousQuizPoll", R.string.AnonymousQuizPoll);
                                }
                            } else if (ChatMessageCell.this.lastPoll.public_voters) {
                                string = LocaleController.getString("PublicPoll", R.string.PublicPoll);
                            } else {
                                string = LocaleController.getString("AnonymousPoll", R.string.AnonymousPoll);
                            }
                        } else {
                            string = LocaleController.getString("FinalResults", R.string.FinalResults);
                        }
                        spannableStringBuilder.append((CharSequence) string);
                    }
                    if (ChatMessageCell.this.documentAttach != null) {
                        if (ChatMessageCell.this.documentAttachType == 4) {
                            spannableStringBuilder.append(charSequence2);
                            spannableStringBuilder.append((CharSequence) LocaleController.formatDuration((int) ChatMessageCell.this.currentMessageObject.getDuration()));
                        }
                        if (ChatMessageCell.this.buttonState == 0 || ChatMessageCell.this.documentAttachType == 1) {
                            spannableStringBuilder.append(charSequence2);
                            spannableStringBuilder.append((CharSequence) AndroidUtilities.formatFileSize(ChatMessageCell.this.documentAttach.size));
                        }
                    }
                    if (!ChatMessageCell.this.currentMessageObject.isVoiceTranscriptionOpen()) {
                        if (MessageObject.getMedia(ChatMessageCell.this.currentMessageObject.messageOwner) != null && !TextUtils.isEmpty(ChatMessageCell.this.currentMessageObject.caption)) {
                            spannableStringBuilder.append((CharSequence) "\n");
                            spannableStringBuilder.append(ChatMessageCell.this.currentMessageObject.caption);
                        }
                    } else {
                        spannableStringBuilder.append((CharSequence) "\n");
                        spannableStringBuilder.append(ChatMessageCell.this.currentMessageObject.getVoiceTranscription());
                    }
                    if (ChatMessageCell.this.currentMessageObject.isOut()) {
                        if (!ChatMessageCell.this.currentMessageObject.isSent()) {
                            if (!ChatMessageCell.this.currentMessageObject.isSending()) {
                                if (ChatMessageCell.this.currentMessageObject.isSendError()) {
                                    spannableStringBuilder.append((CharSequence) "\n");
                                    spannableStringBuilder.append((CharSequence) LocaleController.getString("AccDescrMsgSendingError", R.string.AccDescrMsgSendingError));
                                }
                            } else {
                                spannableStringBuilder.append((CharSequence) "\n");
                                spannableStringBuilder.append((CharSequence) LocaleController.getString("AccDescrMsgSending", R.string.AccDescrMsgSending));
                                float progress = ChatMessageCell.this.radialProgress.getProgress();
                                if (progress > 0.0f) {
                                    spannableStringBuilder.append((CharSequence) Integer.toString(Math.round(progress * 100.0f))).append((CharSequence) "%");
                                }
                            }
                        } else {
                            spannableStringBuilder.append((CharSequence) "\n");
                            if (ChatMessageCell.this.currentMessageObject.scheduled) {
                                spannableStringBuilder.append((CharSequence) LocaleController.formatString("AccDescrScheduledDate", R.string.AccDescrScheduledDate, ChatMessageCell.this.currentTimeString));
                            } else {
                                spannableStringBuilder.append((CharSequence) LocaleController.formatString("AccDescrSentDate", R.string.AccDescrSentDate, LocaleController.getString("TodayAt", R.string.TodayAt) + " " + ((Object) ChatMessageCell.this.currentTimeString)));
                                spannableStringBuilder.append(charSequence2);
                                if (ChatMessageCell.this.currentMessageObject.isUnread()) {
                                    i5 = R.string.AccDescrMsgUnread;
                                    str3 = "AccDescrMsgUnread";
                                } else {
                                    i5 = R.string.AccDescrMsgRead;
                                    str3 = "AccDescrMsgRead";
                                }
                                spannableStringBuilder.append((CharSequence) LocaleController.getString(str3, i5));
                            }
                        }
                    } else {
                        spannableStringBuilder.append((CharSequence) "\n");
                        spannableStringBuilder.append((CharSequence) LocaleController.formatString("AccDescrReceivedDate", R.string.AccDescrReceivedDate, LocaleController.getString("TodayAt", R.string.TodayAt) + " " + ((Object) ChatMessageCell.this.currentTimeString)));
                    }
                    if (ChatMessageCell.this.getRepliesCount() > 0 && !ChatMessageCell.this.hasCommentLayout()) {
                        spannableStringBuilder.append((CharSequence) "\n");
                        spannableStringBuilder.append((CharSequence) LocaleController.formatPluralString("AccDescrNumberOfReplies", ChatMessageCell.this.getRepliesCount(), new Object[0]));
                    }
                    if (ChatMessageCell.this.currentMessageObject.messageOwner.reactions != null && ChatMessageCell.this.currentMessageObject.messageOwner.reactions.results != null) {
                        String str4 = "";
                        if (ChatMessageCell.this.currentMessageObject.messageOwner.reactions.results.size() == 1) {
                            TLRPC$ReactionCount tLRPC$ReactionCount2 = ChatMessageCell.this.currentMessageObject.messageOwner.reactions.results.get(0);
                            TLRPC$Reaction tLRPC$Reaction = tLRPC$ReactionCount2.reaction;
                            String str5 = tLRPC$Reaction instanceof TLRPC$TL_reactionEmoji ? ((TLRPC$TL_reactionEmoji) tLRPC$Reaction).emoticon : "";
                            int i7 = tLRPC$ReactionCount2.count;
                            if (i7 == 1) {
                                spannableStringBuilder.append((CharSequence) "\n");
                                if (ChatMessageCell.this.currentMessageObject.messageOwner.reactions.recent_reactions == null || ChatMessageCell.this.currentMessageObject.messageOwner.reactions.recent_reactions.size() != 1 || (tLRPC$MessagePeerReaction = ChatMessageCell.this.currentMessageObject.messageOwner.reactions.recent_reactions.get(0)) == null) {
                                    z4 = false;
                                } else {
                                    TLRPC$User user = MessagesController.getInstance(ChatMessageCell.this.currentAccount).getUser(Long.valueOf(MessageObject.getPeerId(tLRPC$MessagePeerReaction.peer_id)));
                                    z4 = UserObject.isUserSelf(user);
                                    if (user != null) {
                                        str4 = UserObject.getFirstName(user);
                                    }
                                }
                                if (z4) {
                                    spannableStringBuilder.append((CharSequence) LocaleController.formatString("AccDescrYouReactedWith", R.string.AccDescrYouReactedWith, str5));
                                } else {
                                    spannableStringBuilder.append((CharSequence) LocaleController.formatString("AccDescrReactedWith", R.string.AccDescrReactedWith, str4, str5));
                                }
                            } else if (i7 > 1) {
                                spannableStringBuilder.append((CharSequence) "\n");
                                spannableStringBuilder.append((CharSequence) LocaleController.formatPluralString("AccDescrNumberOfPeopleReactions", tLRPC$ReactionCount2.count, str5));
                            }
                        } else {
                            spannableStringBuilder.append((CharSequence) LocaleController.getString("Reactions", R.string.Reactions)).append((CharSequence) ": ");
                            int size = ChatMessageCell.this.currentMessageObject.messageOwner.reactions.results.size();
                            for (int i8 = 0; i8 < size; i8++) {
                                TLRPC$Reaction tLRPC$Reaction2 = ChatMessageCell.this.currentMessageObject.messageOwner.reactions.results.get(i8).reaction;
                                spannableStringBuilder.append((CharSequence) (tLRPC$Reaction2 instanceof TLRPC$TL_reactionEmoji ? ((TLRPC$TL_reactionEmoji) tLRPC$Reaction2).emoticon : "")).append((CharSequence) " ").append((CharSequence) (tLRPC$ReactionCount.count + ""));
                                if (i8 + 1 < size) {
                                    spannableStringBuilder.append(charSequence2);
                                }
                            }
                            spannableStringBuilder.append((CharSequence) "\n");
                        }
                    }
                    if ((ChatMessageCell.this.currentMessageObject.messageOwner.flags & 1024) != 0) {
                        spannableStringBuilder.append((CharSequence) "\n");
                        i4 = 0;
                        spannableStringBuilder.append((CharSequence) LocaleController.formatPluralString("AccDescrNumberOfViews", ChatMessageCell.this.currentMessageObject.messageOwner.views, new Object[0]));
                    } else {
                        i4 = 0;
                    }
                    spannableStringBuilder.append((CharSequence) "\n");
                    for (final CharacterStyle characterStyle : (CharacterStyle[]) spannableStringBuilder.getSpans(i4, spannableStringBuilder.length(), ClickableSpan.class)) {
                        int spanStart = spannableStringBuilder.getSpanStart(characterStyle);
                        int spanEnd = spannableStringBuilder.getSpanEnd(characterStyle);
                        spannableStringBuilder.removeSpan(characterStyle);
                        spannableStringBuilder.setSpan(new ClickableSpan() { // from class: org.telegram.ui.Cells.ChatMessageCell.MessageAccessibilityNodeProvider.1
                            @Override // android.text.style.ClickableSpan
                            public void onClick(View view) {
                                CharacterStyle characterStyle2 = characterStyle;
                                if (!(characterStyle2 instanceof ProfileSpan)) {
                                    if (ChatMessageCell.this.delegate != null) {
                                        ChatMessageCell.this.delegate.didPressUrl(ChatMessageCell.this, characterStyle, false);
                                        return;
                                    }
                                    return;
                                }
                                ((ProfileSpan) characterStyle2).onClick(view);
                            }
                        }, spanStart, spanEnd, 33);
                    }
                    ChatMessageCell chatMessageCell3 = ChatMessageCell.this;
                    chatMessageCell3.accessibilityText = spannableStringBuilder;
                    chatMessageCell3.accessibilityTextUnread = z5;
                    ChatMessageCell.this.accessibilityTextContentUnread = z6;
                    ChatMessageCell.this.accessibilityTextFileSize = j;
                }
                int i9 = Build.VERSION.SDK_INT;
                if (i9 < 24) {
                    obtain.setContentDescription(ChatMessageCell.this.accessibilityText.toString());
                } else {
                    obtain.setText(ChatMessageCell.this.accessibilityText);
                }
                obtain.setEnabled(true);
                if (i9 >= 19 && (collectionItemInfo = obtain.getCollectionItemInfo()) != null) {
                    obtain.setCollectionItemInfo(AccessibilityNodeInfo.CollectionItemInfo.obtain(collectionItemInfo.getRowIndex(), 1, 0, 1, false));
                }
                if (i9 >= 21) {
                    obtain.addAction(new AccessibilityNodeInfo.AccessibilityAction(R.id.acc_action_msg_options, LocaleController.getString("AccActionMessageOptions", R.string.AccActionMessageOptions)));
                    int iconForCurrentState = ChatMessageCell.this.getIconForCurrentState();
                    if (iconForCurrentState == 0) {
                        string2 = LocaleController.getString("AccActionPlay", R.string.AccActionPlay);
                    } else if (iconForCurrentState == 1) {
                        string2 = LocaleController.getString("AccActionPause", R.string.AccActionPause);
                    } else if (iconForCurrentState == 2) {
                        string2 = LocaleController.getString("AccActionDownload", R.string.AccActionDownload);
                    } else if (iconForCurrentState == 3) {
                        string2 = LocaleController.getString("AccActionCancelDownload", R.string.AccActionCancelDownload);
                    } else if (iconForCurrentState == 5) {
                        string2 = LocaleController.getString("AccActionOpenFile", R.string.AccActionOpenFile);
                    } else {
                        string2 = ChatMessageCell.this.currentMessageObject.type == 16 ? LocaleController.getString("CallAgain", R.string.CallAgain) : null;
                    }
                    obtain.addAction(new AccessibilityNodeInfo.AccessibilityAction(16, string2));
                    obtain.addAction(new AccessibilityNodeInfo.AccessibilityAction(32, LocaleController.getString("AccActionEnterSelectionMode", R.string.AccActionEnterSelectionMode)));
                    if (ChatMessageCell.this.getMiniIconForCurrentState() == 2) {
                        obtain.addAction(new AccessibilityNodeInfo.AccessibilityAction(R.id.acc_action_small_button, LocaleController.getString("AccActionDownload", R.string.AccActionDownload)));
                    }
                } else {
                    obtain.addAction(16);
                    obtain.addAction(32);
                }
                if ((ChatMessageCell.this.currentMessageObject.isVoice() || ChatMessageCell.this.currentMessageObject.isRoundVideo() || ChatMessageCell.this.currentMessageObject.isMusic()) && MediaController.getInstance().isPlayingMessage(ChatMessageCell.this.currentMessageObject)) {
                    ChatMessageCell.this.seekBarAccessibilityDelegate.onInitializeAccessibilityNodeInfoInternal(obtain);
                }
                if (ChatMessageCell.this.useTranscribeButton) {
                    ChatMessageCell chatMessageCell4 = ChatMessageCell.this;
                    if (chatMessageCell4.transcribeButton != null) {
                        obtain.addChild(chatMessageCell4, 493);
                    }
                }
                if (i9 < 24) {
                    ChatMessageCell chatMessageCell5 = ChatMessageCell.this;
                    if (chatMessageCell5.isChat && chatMessageCell5.currentUser != null && !ChatMessageCell.this.currentMessageObject.isOut()) {
                        obtain.addChild(ChatMessageCell.this, 5000);
                    }
                    if (ChatMessageCell.this.currentMessageObject.messageText instanceof Spannable) {
                        Spannable spannable = (Spannable) ChatMessageCell.this.currentMessageObject.messageText;
                        int i10 = 0;
                        for (CharacterStyle characterStyle2 : (CharacterStyle[]) spannable.getSpans(0, spannable.length(), ClickableSpan.class)) {
                            obtain.addChild(ChatMessageCell.this, i10 + 2000);
                            i10++;
                        }
                    }
                    if (ChatMessageCell.this.currentMessageObject.caption instanceof Spannable) {
                        ChatMessageCell chatMessageCell6 = ChatMessageCell.this;
                        if (chatMessageCell6.captionLayout != null) {
                            Spannable spannable2 = (Spannable) chatMessageCell6.currentMessageObject.caption;
                            int i11 = 0;
                            for (CharacterStyle characterStyle3 : (CharacterStyle[]) spannable2.getSpans(0, spannable2.length(), ClickableSpan.class)) {
                                obtain.addChild(ChatMessageCell.this, i11 + 3000);
                                i11++;
                            }
                        }
                    }
                }
                Iterator it = ChatMessageCell.this.botButtons.iterator();
                int i12 = 0;
                while (it.hasNext()) {
                    BotButton botButton = (BotButton) it.next();
                    obtain.addChild(ChatMessageCell.this, i12 + 1000);
                    i12++;
                }
                if (ChatMessageCell.this.hintButtonVisible && ChatMessageCell.this.pollHintX != -1 && ChatMessageCell.this.currentMessageObject.isPoll()) {
                    obtain.addChild(ChatMessageCell.this, 495);
                }
                Iterator it2 = ChatMessageCell.this.pollButtons.iterator();
                int i13 = 0;
                while (it2.hasNext()) {
                    PollButton pollButton = (PollButton) it2.next();
                    obtain.addChild(ChatMessageCell.this, i13 + 500);
                    i13++;
                }
                if (ChatMessageCell.this.drawInstantView && !ChatMessageCell.this.instantButtonRect.isEmpty()) {
                    obtain.addChild(ChatMessageCell.this, 499);
                }
                if (ChatMessageCell.this.drawContact && ChatMessageCell.this.contactRect != null && !ChatMessageCell.this.contactRect.isEmpty()) {
                    obtain.addChild(ChatMessageCell.this, 492);
                    if (ChatMessageCell.this.contactButtons != null && ChatMessageCell.this.contactButtons.size() > 1) {
                        Iterator it3 = ChatMessageCell.this.contactButtons.iterator();
                        while (it3.hasNext()) {
                            InstantViewButton instantViewButton = (InstantViewButton) it3.next();
                            if (ChatMessageCell.this.drawContactView && instantViewButton.type == 5 && !instantViewButton.rect.isEmpty()) {
                                obtain.addChild(ChatMessageCell.this, 491);
                            }
                            if (ChatMessageCell.this.drawContactAdd && instantViewButton.type == 31 && !instantViewButton.rect.isEmpty()) {
                                obtain.addChild(ChatMessageCell.this, 490);
                            }
                            if (ChatMessageCell.this.drawContactSendMessage && instantViewButton.type == 30 && !instantViewButton.rect.isEmpty()) {
                                obtain.addChild(ChatMessageCell.this, 489);
                            }
                        }
                    }
                }
                if (ChatMessageCell.this.commentLayout != null) {
                    obtain.addChild(ChatMessageCell.this, 496);
                }
                if (ChatMessageCell.this.drawSideButton == 1 || ChatMessageCell.this.drawSideButton == 2) {
                    obtain.addChild(ChatMessageCell.this, 498);
                }
                ChatMessageCell chatMessageCell7 = ChatMessageCell.this;
                if (chatMessageCell7.replyNameLayout != null) {
                    obtain.addChild(chatMessageCell7, 497);
                }
                if (ChatMessageCell.this.forwardedNameLayout[0] != null && ChatMessageCell.this.forwardedNameLayout[1] != null) {
                    if (Build.VERSION.SDK_INT >= 21) {
                        obtain.addAction(new AccessibilityNodeInfo.AccessibilityAction(R.id.acc_action_open_forwarded_origin, LocaleController.getString("AccActionOpenForwardedOrigin", R.string.AccActionOpenForwardedOrigin)));
                    } else {
                        obtain.addChild(ChatMessageCell.this, 494);
                    }
                }
                if (ChatMessageCell.this.drawSelectionBackground || ChatMessageCell.this.getBackground() != null) {
                    obtain.setSelected(true);
                }
                return obtain;
            }
            AccessibilityNodeInfo obtain2 = AccessibilityNodeInfo.obtain();
            obtain2.setSource(ChatMessageCell.this, i);
            obtain2.setParent(ChatMessageCell.this);
            obtain2.setPackageName(ChatMessageCell.this.getContext().getPackageName());
            if (i == 5000) {
                if (ChatMessageCell.this.currentUser == null) {
                    return null;
                }
                obtain2.setText(UserObject.getUserName(ChatMessageCell.this.currentUser));
                this.rect.set((int) ChatMessageCell.this.nameX, (int) ChatMessageCell.this.nameY, (int) (ChatMessageCell.this.nameX + ChatMessageCell.this.nameWidth), (int) (ChatMessageCell.this.nameY + (ChatMessageCell.this.nameLayout != null ? ChatMessageCell.this.nameLayout.layout.getHeight() : 10)));
                obtain2.setBoundsInParent(this.rect);
                if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null) {
                    ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                }
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
                obtain2.setClassName("android.widget.TextView");
                obtain2.setEnabled(true);
                obtain2.setClickable(true);
                obtain2.setLongClickable(true);
                obtain2.addAction(16);
                obtain2.addAction(32);
            } else if (i >= 3000) {
                if (!(ChatMessageCell.this.currentMessageObject.caption instanceof Spannable)) {
                    return null;
                }
                ChatMessageCell chatMessageCell8 = ChatMessageCell.this;
                if (chatMessageCell8.captionLayout == null) {
                    return null;
                }
                Spannable spannable3 = (Spannable) chatMessageCell8.currentMessageObject.caption;
                ClickableSpan linkById = getLinkById(i, false);
                if (linkById == null) {
                    return null;
                }
                int[] realSpanStartAndEnd = ChatMessageCell.this.getRealSpanStartAndEnd(spannable3, linkById);
                obtain2.setText(spannable3.subSequence(realSpanStartAndEnd[0], realSpanStartAndEnd[1]).toString());
                Iterator<MessageObject.TextLayoutBlock> it4 = ChatMessageCell.this.captionLayout.textLayoutBlocks.iterator();
                while (true) {
                    if (!it4.hasNext()) {
                        z3 = true;
                        break;
                    }
                    MessageObject.TextLayoutBlock next = it4.next();
                    int length = next.textLayout.getText().length();
                    int i14 = next.charactersOffset;
                    if (i14 <= realSpanStartAndEnd[0] && length + i14 >= realSpanStartAndEnd[1]) {
                        next.textLayout.layout.getSelectionPath(realSpanStartAndEnd[0] - i14, realSpanStartAndEnd[1] - i14, this.linkPath);
                        this.linkPath.computeBounds(this.rectF, true);
                        Rect rect = this.rect;
                        RectF rectF = this.rectF;
                        rect.set((int) rectF.left, (int) rectF.top, (int) rectF.right, (int) rectF.bottom);
                        this.rect.offset(0, (int) next.textYOffset);
                        Rect rect2 = this.rect;
                        ChatMessageCell chatMessageCell9 = ChatMessageCell.this;
                        rect2.offset(chatMessageCell9.textX, chatMessageCell9.textY);
                        obtain2.setBoundsInParent(this.rect);
                        if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null) {
                            ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                        }
                        z3 = true;
                        this.rect.offset(iArr[0], iArr[1]);
                        obtain2.setBoundsInScreen(this.rect);
                    }
                }
                obtain2.setClassName("android.widget.TextView");
                obtain2.setEnabled(z3);
                obtain2.setClickable(z3);
                obtain2.setLongClickable(z3);
                obtain2.addAction(16);
                obtain2.addAction(32);
            } else if (i >= 2000) {
                if (!(ChatMessageCell.this.currentMessageObject.messageText instanceof Spannable)) {
                    return null;
                }
                Spannable spannable4 = (Spannable) ChatMessageCell.this.currentMessageObject.messageText;
                ClickableSpan linkById2 = getLinkById(i, false);
                if (linkById2 == null) {
                    return null;
                }
                int[] realSpanStartAndEnd2 = ChatMessageCell.this.getRealSpanStartAndEnd(spannable4, linkById2);
                obtain2.setText(spannable4.subSequence(realSpanStartAndEnd2[0], realSpanStartAndEnd2[1]).toString());
                Iterator<MessageObject.TextLayoutBlock> it5 = ChatMessageCell.this.currentMessageObject.textLayoutBlocks.iterator();
                while (true) {
                    if (!it5.hasNext()) {
                        z2 = true;
                        break;
                    }
                    MessageObject.TextLayoutBlock next2 = it5.next();
                    int length2 = next2.textLayout.getText().length();
                    int i15 = next2.charactersOffset;
                    if (i15 <= realSpanStartAndEnd2[0] && length2 + i15 >= realSpanStartAndEnd2[1]) {
                        next2.textLayout.layout.getSelectionPath(realSpanStartAndEnd2[0] - i15, realSpanStartAndEnd2[1] - i15, this.linkPath);
                        this.linkPath.computeBounds(this.rectF, true);
                        Rect rect3 = this.rect;
                        RectF rectF2 = this.rectF;
                        rect3.set((int) rectF2.left, (int) rectF2.top, (int) rectF2.right, (int) rectF2.bottom);
                        this.rect.offset(0, (int) next2.textYOffset);
                        Rect rect4 = this.rect;
                        ChatMessageCell chatMessageCell10 = ChatMessageCell.this;
                        rect4.offset(chatMessageCell10.textX, chatMessageCell10.textY);
                        obtain2.setBoundsInParent(this.rect);
                        if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null) {
                            ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                        }
                        z2 = true;
                        this.rect.offset(iArr[0], iArr[1]);
                        obtain2.setBoundsInScreen(this.rect);
                    }
                }
                obtain2.setClassName("android.widget.TextView");
                obtain2.setEnabled(z2);
                obtain2.setClickable(z2);
                obtain2.setLongClickable(z2);
                obtain2.addAction(16);
                obtain2.addAction(32);
            } else if (i >= 1000) {
                int i16 = i - 1000;
                if (i16 >= ChatMessageCell.this.botButtons.size()) {
                    return null;
                }
                BotButton botButton2 = (BotButton) ChatMessageCell.this.botButtons.get(i16);
                obtain2.setText(botButton2.title.getText());
                obtain2.setClassName("android.widget.Button");
                obtain2.setEnabled(true);
                obtain2.setClickable(true);
                obtain2.addAction(16);
                this.rect.set(botButton2.x, botButton2.y, botButton2.x + botButton2.width, botButton2.y + botButton2.height);
                this.rect.offset(ChatMessageCell.this.currentMessageObject.isOutOwner() ? (ChatMessageCell.this.getMeasuredWidth() - ChatMessageCell.this.widthForButtons) - AndroidUtilities.dp(10.0f) : ChatMessageCell.this.backgroundDrawableLeft + AndroidUtilities.dp(ChatMessageCell.this.mediaBackground ? 1.0f : 7.0f), ChatMessageCell.this.layoutHeight);
                obtain2.setBoundsInParent(this.rect);
                if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null) {
                    ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                }
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
            } else if (i >= 500) {
                int i17 = i - 500;
                if (i17 >= ChatMessageCell.this.pollButtons.size()) {
                    return null;
                }
                PollButton pollButton2 = (PollButton) ChatMessageCell.this.pollButtons.get(i17);
                StringBuilder sb = new StringBuilder(pollButton2.title.getText());
                if (ChatMessageCell.this.pollVoted) {
                    obtain2.setSelected(pollButton2.chosen);
                    sb.append(", ");
                    sb.append(pollButton2.percent);
                    sb.append("%");
                    if (ChatMessageCell.this.lastPoll != null && ChatMessageCell.this.lastPoll.quiz && (pollButton2.chosen || pollButton2.correct)) {
                        sb.append(", ");
                        if (pollButton2.correct) {
                            i3 = R.string.AccDescrQuizCorrectAnswer;
                            str2 = "AccDescrQuizCorrectAnswer";
                        } else {
                            i3 = R.string.AccDescrQuizIncorrectAnswer;
                            str2 = "AccDescrQuizIncorrectAnswer";
                        }
                        sb.append(LocaleController.getString(str2, i3));
                    }
                } else {
                    obtain2.setClassName("android.widget.Button");
                }
                obtain2.setText(sb);
                obtain2.setEnabled(true);
                obtain2.addAction(16);
                int i18 = pollButton2.y + ChatMessageCell.this.namesOffset;
                int dp = ChatMessageCell.this.backgroundWidth - AndroidUtilities.dp(76.0f);
                Rect rect5 = this.rect;
                int i19 = pollButton2.x;
                rect5.set(i19, i18, dp + i19, pollButton2.height + i18);
                obtain2.setBoundsInParent(this.rect);
                if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null) {
                    ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                }
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
                obtain2.setClickable(true);
            } else if (i == 495) {
                obtain2.setClassName("android.widget.Button");
                obtain2.setEnabled(true);
                obtain2.setText(LocaleController.getString("AccDescrQuizExplanation", R.string.AccDescrQuizExplanation));
                obtain2.addAction(16);
                this.rect.set(ChatMessageCell.this.pollHintX - AndroidUtilities.dp(8.0f), ChatMessageCell.this.pollHintY - AndroidUtilities.dp(8.0f), ChatMessageCell.this.pollHintX + AndroidUtilities.dp(32.0f), ChatMessageCell.this.pollHintY + AndroidUtilities.dp(32.0f));
                obtain2.setBoundsInParent(this.rect);
                if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null || !((Rect) ChatMessageCell.this.accessibilityVirtualViewBounds.get(i)).equals(this.rect)) {
                    ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                }
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
                obtain2.setClickable(true);
            } else if (i == 499) {
                obtain2.setClassName("android.widget.Button");
                obtain2.setEnabled(true);
                if (ChatMessageCell.this.instantViewLayout != null) {
                    obtain2.setText(ChatMessageCell.this.instantViewLayout.getText());
                }
                obtain2.addAction(16);
                ChatMessageCell.this.instantButtonRect.round(this.rect);
                obtain2.setBoundsInParent(this.rect);
                if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null || !((Rect) ChatMessageCell.this.accessibilityVirtualViewBounds.get(i)).equals(this.rect)) {
                    ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                }
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
                obtain2.setClickable(true);
            } else if (i == 492) {
                obtain2.setClassName("android.widget.Button");
                obtain2.setEnabled(true);
                if (ChatMessageCell.this.titleLayout != null) {
                    obtain2.setText(ChatMessageCell.this.titleLayout.getText());
                }
                obtain2.addAction(16);
                ChatMessageCell.this.contactRect.round(this.rect);
                if (ChatMessageCell.this.contactButtons != null && ChatMessageCell.this.contactButtons.size() > 1) {
                    InstantViewButton instantViewButton2 = (InstantViewButton) ChatMessageCell.this.contactButtons.get(0);
                    if (!instantViewButton2.rect.isEmpty()) {
                        Rect rect6 = this.rect;
                        rect6.set(rect6.left, rect6.top, rect6.right, (int) (rect6.bottom - instantViewButton2.rect.height()));
                    }
                }
                obtain2.setBoundsInParent(this.rect);
                if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null || !((Rect) ChatMessageCell.this.accessibilityVirtualViewBounds.get(i)).equals(this.rect)) {
                    ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                }
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
                obtain2.setClickable(true);
            } else if (i == 491 || i == 490 || i == 489) {
                int i20 = i != 491 ? i == 490 ? 31 : 30 : 5;
                for (int i21 = 0; i21 < ChatMessageCell.this.contactButtons.size(); i21++) {
                    InstantViewButton instantViewButton3 = (InstantViewButton) ChatMessageCell.this.contactButtons.get(i21);
                    if (instantViewButton3.type == i20) {
                        obtain2.setClassName("android.widget.Button");
                        obtain2.setEnabled(true);
                        if (instantViewButton3.layout != null) {
                            obtain2.setText(instantViewButton3.layout.getText());
                        }
                        obtain2.addAction(16);
                        instantViewButton3.rect.round(this.rect);
                        obtain2.setBoundsInParent(this.rect);
                        if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null || !((Rect) ChatMessageCell.this.accessibilityVirtualViewBounds.get(i)).equals(this.rect)) {
                            ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                        }
                        z = true;
                        this.rect.offset(iArr[0], iArr[1]);
                        obtain2.setBoundsInScreen(this.rect);
                        obtain2.setClickable(true);
                        obtain2.setFocusable(z);
                        obtain2.setVisibleToUser(z);
                        return obtain2;
                    }
                }
            } else if (i == 498) {
                obtain2.setClassName("android.widget.ImageButton");
                obtain2.setEnabled(true);
                ChatMessageCell chatMessageCell11 = ChatMessageCell.this;
                if (chatMessageCell11.isOpenChatByShare(chatMessageCell11.currentMessageObject)) {
                    obtain2.setContentDescription(LocaleController.getString("AccDescrOpenChat", R.string.AccDescrOpenChat));
                } else {
                    obtain2.setContentDescription(LocaleController.getString("ShareFile", R.string.ShareFile));
                }
                obtain2.addAction(16);
                this.rect.set((int) ChatMessageCell.this.sideStartX, (int) ChatMessageCell.this.sideStartY, ((int) ChatMessageCell.this.sideStartX) + AndroidUtilities.dp(40.0f), ((int) ChatMessageCell.this.sideStartY) + AndroidUtilities.dp(32.0f));
                obtain2.setBoundsInParent(this.rect);
                if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null || !((Rect) ChatMessageCell.this.accessibilityVirtualViewBounds.get(i)).equals(this.rect)) {
                    ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                }
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
                obtain2.setClickable(true);
            } else if (i == 497) {
                obtain2.setEnabled(true);
                StringBuilder sb2 = new StringBuilder();
                sb2.append(LocaleController.getString("Reply", R.string.Reply));
                sb2.append(", ");
                CachedStaticLayout cachedStaticLayout = ChatMessageCell.this.replyNameLayout;
                if (cachedStaticLayout != null) {
                    sb2.append(cachedStaticLayout.getText());
                    sb2.append(", ");
                }
                CachedStaticLayout cachedStaticLayout2 = ChatMessageCell.this.replyTextLayout;
                if (cachedStaticLayout2 != null) {
                    sb2.append(cachedStaticLayout2.getText());
                }
                obtain2.setContentDescription(sb2.toString());
                obtain2.addAction(16);
                Rect rect7 = this.rect;
                ChatMessageCell chatMessageCell12 = ChatMessageCell.this;
                int i22 = chatMessageCell12.replyStartX;
                ChatMessageCell chatMessageCell13 = ChatMessageCell.this;
                rect7.set(i22, chatMessageCell12.replyStartY, Math.max(chatMessageCell12.replyNameWidth, ChatMessageCell.this.replyTextWidth) + i22, chatMessageCell13.replyStartY + ((int) chatMessageCell13.replyHeight));
                obtain2.setBoundsInParent(this.rect);
                if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null || !((Rect) ChatMessageCell.this.accessibilityVirtualViewBounds.get(i)).equals(this.rect)) {
                    ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                }
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
                obtain2.setClickable(true);
            } else if (i == 494) {
                obtain2.setEnabled(true);
                StringBuilder sb3 = new StringBuilder();
                if (ChatMessageCell.this.forwardedNameLayout[0] != null && ChatMessageCell.this.forwardedNameLayout[1] != null) {
                    int i23 = 0;
                    while (i23 < 2) {
                        sb3.append(ChatMessageCell.this.forwardedNameLayout[i23].getText());
                        sb3.append(i23 == 0 ? " " : "\n");
                        i23++;
                    }
                }
                obtain2.setContentDescription(sb3.toString());
                obtain2.addAction(16);
                int min = (int) Math.min(ChatMessageCell.this.forwardNameX - ChatMessageCell.this.forwardNameOffsetX[0], ChatMessageCell.this.forwardNameX - ChatMessageCell.this.forwardNameOffsetX[1]);
                this.rect.set(min, ChatMessageCell.this.forwardNameY, ChatMessageCell.this.forwardedNameWidth + min, ChatMessageCell.this.forwardNameY + ChatMessageCell.this.forwardHeight);
                obtain2.setBoundsInParent(this.rect);
                if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null || !((Rect) ChatMessageCell.this.accessibilityVirtualViewBounds.get(i)).equals(this.rect)) {
                    ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                }
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
                obtain2.setClickable(true);
            } else if (i == 496) {
                obtain2.setClassName("android.widget.Button");
                obtain2.setEnabled(true);
                int repliesCount = ChatMessageCell.this.getRepliesCount();
                if (ChatMessageCell.this.currentMessageObject != null && !ChatMessageCell.this.currentMessageObject.shouldDrawWithoutBackground() && !ChatMessageCell.this.currentMessageObject.isAnimatedEmoji()) {
                    if (ChatMessageCell.this.isRepliesChat) {
                        formatShortNumber = LocaleController.getString("ViewInChat", R.string.ViewInChat);
                    } else {
                        formatShortNumber = repliesCount == 0 ? LocaleController.getString("LeaveAComment", R.string.LeaveAComment) : LocaleController.formatPluralString("CommentsCount", repliesCount, new Object[0]);
                    }
                } else {
                    formatShortNumber = (ChatMessageCell.this.isRepliesChat || repliesCount <= 0) ? null : LocaleController.formatShortNumber(repliesCount, null);
                }
                if (formatShortNumber != null) {
                    obtain2.setText(formatShortNumber);
                }
                obtain2.addAction(16);
                this.rect.set(ChatMessageCell.this.commentButtonRect);
                obtain2.setBoundsInParent(this.rect);
                if (ChatMessageCell.this.accessibilityVirtualViewBounds.get(i) == null || !((Rect) ChatMessageCell.this.accessibilityVirtualViewBounds.get(i)).equals(this.rect)) {
                    ChatMessageCell.this.accessibilityVirtualViewBounds.put(i, new Rect(this.rect));
                }
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
                obtain2.setClickable(true);
            } else if (i == 493) {
                obtain2.setClassName("android.widget.Button");
                obtain2.setEnabled(true);
                if (ChatMessageCell.this.currentMessageObject.isVoiceTranscriptionOpen()) {
                    i2 = R.string.AccActionCloseTranscription;
                    str = "AccActionCloseTranscription";
                } else {
                    i2 = R.string.AccActionOpenTranscription;
                    str = "AccActionOpenTranscription";
                }
                obtain2.setText(LocaleController.getString(str, i2));
                obtain2.addAction(16);
                ChatMessageCell chatMessageCell14 = ChatMessageCell.this;
                if (chatMessageCell14.transcribeButton != null) {
                    this.rect.set((int) chatMessageCell14.transcribeX, (int) ChatMessageCell.this.transcribeY, (int) (ChatMessageCell.this.transcribeX + ChatMessageCell.this.transcribeButton.width()), (int) (ChatMessageCell.this.transcribeY + ChatMessageCell.this.transcribeButton.height()));
                }
                obtain2.setBoundsInParent(this.rect);
                this.rect.offset(iArr[0], iArr[1]);
                obtain2.setBoundsInScreen(this.rect);
                obtain2.setClickable(true);
            }
            z = true;
            obtain2.setFocusable(z);
            obtain2.setVisibleToUser(z);
            return obtain2;
        }

        /* JADX WARN: Code restructure failed: missing block: B:96:0x0203, code lost:
            if (r7.this$0.currentMessageObject.messageOwner.reply_to.reply_from == null) goto L4;
         */
        @Override // android.view.accessibility.AccessibilityNodeProvider
        /*
            Code decompiled incorrectly, please refer to instructions dump.
        */
        public boolean performAction(int i, int i2, Bundle bundle) {
            TranscribeButton transcribeButton;
            if (i == -1) {
                ChatMessageCell.this.performAccessibilityAction(i2, bundle);
            } else if (i2 == 64) {
                ChatMessageCell.this.sendAccessibilityEventForVirtualView(i, LiteMode.FLAG_CHAT_SCALE);
            } else {
                if (i2 == 16) {
                    if (i == 5000) {
                        if (ChatMessageCell.this.delegate != null) {
                            ChatMessageCellDelegate chatMessageCellDelegate = ChatMessageCell.this.delegate;
                            ChatMessageCell chatMessageCell = ChatMessageCell.this;
                            chatMessageCellDelegate.didPressUserAvatar(chatMessageCell, chatMessageCell.currentUser, 0.0f, 0.0f);
                        }
                    } else if (i >= 3000) {
                        ClickableSpan linkById = getLinkById(i, true);
                        if (linkById != null) {
                            ChatMessageCell.this.delegate.didPressUrl(ChatMessageCell.this, linkById, false);
                            ChatMessageCell.this.sendAccessibilityEventForVirtualView(i, 1);
                        }
                    } else if (i >= 2000) {
                        ClickableSpan linkById2 = getLinkById(i, false);
                        if (linkById2 != null) {
                            ChatMessageCell.this.delegate.didPressUrl(ChatMessageCell.this, linkById2, false);
                            ChatMessageCell.this.sendAccessibilityEventForVirtualView(i, 1);
                        }
                    } else if (i >= 1000) {
                        int i3 = i - 1000;
                        if (i3 >= ChatMessageCell.this.botButtons.size()) {
                            return false;
                        }
                        BotButton botButton = (BotButton) ChatMessageCell.this.botButtons.get(i3);
                        if (ChatMessageCell.this.delegate != null && botButton.button != null) {
                            ChatMessageCell.this.delegate.didPressBotButton(ChatMessageCell.this, botButton.button);
                        }
                        ChatMessageCell.this.sendAccessibilityEventForVirtualView(i, 1);
                    } else if (i >= 500) {
                        int i4 = i - 500;
                        if (i4 >= ChatMessageCell.this.pollButtons.size()) {
                            return false;
                        }
                        PollButton pollButton = (PollButton) ChatMessageCell.this.pollButtons.get(i4);
                        if (ChatMessageCell.this.delegate != null) {
                            ArrayList<TLRPC$PollAnswer> arrayList = new ArrayList<>();
                            arrayList.add(pollButton.answer);
                            ChatMessageCell.this.delegate.didPressVoteButtons(ChatMessageCell.this, arrayList, -1, 0, 0);
                        }
                        ChatMessageCell.this.sendAccessibilityEventForVirtualView(i, 1);
                    } else if (i == 495) {
                        if (ChatMessageCell.this.delegate != null) {
                            ChatMessageCell.this.delegate.didPressHint(ChatMessageCell.this, 0);
                        }
                    } else if (i == 499) {
                        if (ChatMessageCell.this.delegate != null) {
                            ChatMessageCellDelegate chatMessageCellDelegate2 = ChatMessageCell.this.delegate;
                            ChatMessageCell chatMessageCell2 = ChatMessageCell.this;
                            chatMessageCellDelegate2.didPressInstantButton(chatMessageCell2, chatMessageCell2.drawInstantViewType);
                        }
                    } else if (i == 492) {
                        if (ChatMessageCell.this.delegate != null) {
                            ChatMessageCell.this.delegate.didPressInstantButton(ChatMessageCell.this, 5);
                        }
                    } else if (i == 491) {
                        if (ChatMessageCell.this.delegate != null) {
                            ChatMessageCell.this.delegate.didPressInstantButton(ChatMessageCell.this, 5);
                        }
                    } else if (i == 490) {
                        if (ChatMessageCell.this.delegate != null) {
                            ChatMessageCell.this.delegate.didPressInstantButton(ChatMessageCell.this, 31);
                        }
                    } else if (i == 489) {
                        if (ChatMessageCell.this.delegate != null) {
                            ChatMessageCell.this.delegate.didPressInstantButton(ChatMessageCell.this, 30);
                        }
                    } else if (i == 498) {
                        if (ChatMessageCell.this.delegate != null) {
                            ChatMessageCell.this.delegate.didPressSideButton(ChatMessageCell.this);
                        }
                    } else if (i == 497) {
                        if (ChatMessageCell.this.delegate != null) {
                            ChatMessageCell chatMessageCell3 = ChatMessageCell.this;
                            if (!chatMessageCell3.isThreadChat || chatMessageCell3.currentMessageObject.getReplyTopMsgId() != 0) {
                                if (!ChatMessageCell.this.currentMessageObject.hasValidReplyMessageObject()) {
                                    ChatMessageCell chatMessageCell4 = ChatMessageCell.this;
                                    if (!chatMessageCell4.hasReplyQuote) {
                                        if (chatMessageCell4.currentMessageObject.messageOwner != null) {
                                            if (ChatMessageCell.this.currentMessageObject.messageOwner.reply_to != null) {
                                            }
                                        }
                                    }
                                }
                                ChatMessageCellDelegate chatMessageCellDelegate3 = ChatMessageCell.this.delegate;
                                ChatMessageCell chatMessageCell5 = ChatMessageCell.this;
                                chatMessageCellDelegate3.didPressReplyMessage(chatMessageCell5, chatMessageCell5.currentMessageObject.getReplyMsgId());
                            }
                        }
                    } else if (i == 494) {
                        if (ChatMessageCell.this.delegate != null) {
                            if (ChatMessageCell.this.currentForwardChannel != null) {
                                ChatMessageCellDelegate chatMessageCellDelegate4 = ChatMessageCell.this.delegate;
                                ChatMessageCell chatMessageCell6 = ChatMessageCell.this;
                                chatMessageCellDelegate4.didPressChannelAvatar(chatMessageCell6, chatMessageCell6.currentForwardChannel, ChatMessageCell.this.currentMessageObject.messageOwner.fwd_from.channel_post, ChatMessageCell.this.lastTouchX, ChatMessageCell.this.lastTouchY);
                            } else if (ChatMessageCell.this.currentForwardUser != null) {
                                ChatMessageCellDelegate chatMessageCellDelegate5 = ChatMessageCell.this.delegate;
                                ChatMessageCell chatMessageCell7 = ChatMessageCell.this;
                                chatMessageCellDelegate5.didPressUserAvatar(chatMessageCell7, chatMessageCell7.currentForwardUser, ChatMessageCell.this.lastTouchX, ChatMessageCell.this.lastTouchY);
                            } else if (ChatMessageCell.this.currentForwardName != null) {
                                ChatMessageCell.this.delegate.didPressHiddenForward(ChatMessageCell.this);
                            }
                        }
                    } else if (i == 496) {
                        if (ChatMessageCell.this.delegate != null) {
                            ChatMessageCell chatMessageCell8 = ChatMessageCell.this;
                            if (chatMessageCell8.isRepliesChat) {
                                chatMessageCell8.delegate.didPressSideButton(ChatMessageCell.this);
                            } else {
                                chatMessageCell8.delegate.didPressCommentButton(ChatMessageCell.this);
                            }
                        }
                    } else if (i == 493 && (transcribeButton = ChatMessageCell.this.transcribeButton) != null) {
                        transcribeButton.onTap();
                    }
                } else if (i2 == 32) {
                    ClickableSpan linkById3 = getLinkById(i, i >= 3000);
                    if (linkById3 != null && ChatMessageCell.this.delegate != null) {
                        ChatMessageCell.this.delegate.didPressUrl(ChatMessageCell.this, linkById3, true);
                        ChatMessageCell.this.sendAccessibilityEventForVirtualView(i, 2);
                    }
                }
            }
            return true;
        }

        private ClickableSpan getLinkById(int i, boolean z) {
            if (i == 5000) {
                return null;
            }
            if (z) {
                int i2 = i - 3000;
                if (!(ChatMessageCell.this.currentMessageObject.caption instanceof Spannable) || i2 < 0) {
                    return null;
                }
                Spannable spannable = (Spannable) ChatMessageCell.this.currentMessageObject.caption;
                ClickableSpan[] clickableSpanArr = (ClickableSpan[]) spannable.getSpans(0, spannable.length(), ClickableSpan.class);
                if (clickableSpanArr.length <= i2) {
                    return null;
                }
                return clickableSpanArr[i2];
            }
            int i3 = i - 2000;
            if (!(ChatMessageCell.this.currentMessageObject.messageText instanceof Spannable) || i3 < 0) {
                return null;
            }
            Spannable spannable2 = (Spannable) ChatMessageCell.this.currentMessageObject.messageText;
            ClickableSpan[] clickableSpanArr2 = (ClickableSpan[]) spannable2.getSpans(0, spannable2.length(), ClickableSpan.class);
            if (clickableSpanArr2.length <= i3) {
                return null;
            }
            return clickableSpanArr2[i3];
        }
    }

    public void setImageCoords(RectF rectF) {
        setImageCoords(rectF.left, rectF.top, rectF.width(), rectF.height());
    }

    public void setImageCoords(float f, float f2, float f3, float f4) {
        this.photoImage.setImageCoords(f, f2, f3, f4);
        int i = this.documentAttachType;
        if (i == 4 || i == 2) {
            this.videoButtonX = (int) (this.photoImage.getImageX() + AndroidUtilities.dp(8.0f));
            int imageY = (int) (this.photoImage.getImageY() + AndroidUtilities.dp(8.0f));
            this.videoButtonY = imageY;
            RadialProgress2 radialProgress2 = this.videoRadialProgress;
            int i2 = this.videoButtonX;
            radialProgress2.setProgressRect(i2, imageY, AndroidUtilities.dp(24.0f) + i2, this.videoButtonY + AndroidUtilities.dp(24.0f));
            this.buttonX = (int) (f + ((this.photoImage.getImageWidth() - AndroidUtilities.dp(48.0f)) / 2.0f));
            int imageY2 = (int) (this.photoImage.getImageY() + ((this.photoImage.getImageHeight() - AndroidUtilities.dp(48.0f)) / 2.0f));
            this.buttonY = imageY2;
            RadialProgress2 radialProgress22 = this.radialProgress;
            int i3 = this.buttonX;
            radialProgress22.setProgressRect(i3, imageY2, AndroidUtilities.dp(48.0f) + i3, this.buttonY + AndroidUtilities.dp(48.0f));
        }
    }

    @Override // android.view.View
    public float getAlpha() {
        if (this.ALPHA_PROPERTY_WORKAROUND) {
            return this.alphaInternal;
        }
        return super.getAlpha();
    }

    @Override // android.view.View
    public void setAlpha(float f) {
        if ((f == 1.0f) != (getAlpha() == 1.0f)) {
            invalidate();
        }
        if (this.ALPHA_PROPERTY_WORKAROUND) {
            this.alphaInternal = f;
            invalidate();
        } else {
            super.setAlpha(f);
        }
        MessageObject.GroupedMessagePosition groupedMessagePosition = this.currentPosition;
        if ((groupedMessagePosition != null && (groupedMessagePosition.minY != 0 || groupedMessagePosition.minX != 0)) || ((this.enterTransitionInProgress && !this.currentMessageObject.isVoice()) || this.replyNameLayout == null || this.replyTextLayout == null)) {
            MessageObject.GroupedMessagePosition groupedMessagePosition2 = this.currentPosition;
            if (groupedMessagePosition2 != null) {
                int i = groupedMessagePosition2.flags;
                if ((i & 8) == 0 || (i & 1) == 0) {
                    return;
                }
            }
            if (this.reactionsLayoutInBubble.isSmall) {
                return;
            }
        }
        invalidate();
    }

    public int getCurrentBackgroundLeft() {
        Theme.MessageDrawable messageDrawable = this.currentBackgroundDrawable;
        if (messageDrawable == null) {
            return 0;
        }
        int i = messageDrawable.getBounds().left;
        if (this.currentMessageObject.isOutOwner() || this.transitionParams.changePinnedBottomProgress == 1.0f) {
            return i;
        }
        boolean z = this.isRoundVideo;
        if ((z || !this.mediaBackground) && !this.drawPinnedBottom) {
            if (z) {
                return (int) (i - (AndroidUtilities.dp(6.0f) * getVideoTranscriptionProgress()));
            }
            return i - AndroidUtilities.dp(6.0f);
        }
        return i;
    }

    public int getCurrentBackgroundRight() {
        Theme.MessageDrawable messageDrawable = this.currentBackgroundDrawable;
        if (messageDrawable == null) {
            return getWidth();
        }
        int i = messageDrawable.getBounds().right;
        if (!this.currentMessageObject.isOutOwner() || this.transitionParams.changePinnedBottomProgress == 1.0f) {
            return i;
        }
        boolean z = this.isRoundVideo;
        if ((z || !this.mediaBackground) && !this.drawPinnedBottom) {
            if (z) {
                return (int) (i + (AndroidUtilities.dp(6.0f) * getVideoTranscriptionProgress()));
            }
            return i + AndroidUtilities.dp(6.0f);
        }
        return i;
    }

    public TransitionParams getTransitionParams() {
        return this.transitionParams;
    }

    public int getTopMediaOffset() {
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null || messageObject.type != 14) {
            return 0;
        }
        return this.mediaOffsetY + this.namesOffset;
    }

    public int getMediaOffsetY() {
        if (!this.transitionParams.animateMediaOffsetY) {
            return this.mediaOffsetY;
        }
        return AndroidUtilities.lerp(this.transitionParams.animateFromMediaOffsetY, this.mediaOffsetY, this.transitionParams.animateChangeProgress);
    }

    public int getTextX() {
        return this.textX;
    }

    public int getTextY() {
        return this.textY;
    }

    public boolean isPlayingRound() {
        return this.isRoundVideo && this.isPlayingRound;
    }

    public int getParentWidth() {
        int i;
        MessageObject messageObject = this.currentMessageObject;
        if (messageObject == null) {
            messageObject = this.messageObjectToSet;
        }
        return (messageObject == null || !messageObject.preview || (i = this.parentWidth) <= 0) ? AndroidUtilities.displaySize.x : i;
    }

    /* loaded from: classes4.dex */
    public class TransitionParams {
        public boolean animateBackgroundBoundsInner;
        boolean animateBotButtonsChanged;
        private boolean animateButton;
        public boolean animateChange;
        private int animateCommentArrowX;
        private boolean animateCommentDrawUnread;
        private int animateCommentUnreadX;
        private float animateCommentX;
        private boolean animateComments;
        private CachedStaticLayout animateCommentsLayout;
        public boolean animateDrawBackground;
        private boolean animateDrawCommentNumber;
        public boolean animateDrawNameLayout;
        public boolean animateDrawingTimeAlpha;
        private boolean animateEditedEnter;
        private CachedStaticLayout animateEditedLayout;
        private int animateEditedWidthDiff;
        int animateForwardNameWidth;
        float animateForwardNameX;
        public boolean animateForwardedLayout;
        public int animateForwardedNamesOffset;
        private float animateFromButtonX;
        private float animateFromButtonY;
        public int animateFromLinkPreviewHeight;
        public int animateFromLinkPreviewY;
        private int animateFromMediaOffsetY;
        private float animateFromReplyTextHeight;
        public float animateFromReplyY;
        public float animateFromRoundVideoDotY;
        public float animateFromTextY;
        public int animateFromTimeX;
        public float animateFromTimeXPinned;
        private float animateFromTimeXReplies;
        private float animateFromTimeXViews;
        public boolean animateLinkAbove;
        public boolean animateLinkPreviewHeight;
        public boolean animateLinkPreviewY;
        public boolean animateLocationIsExpired;
        private boolean animateMediaOffsetY;
        public boolean animateMessageText;
        private float animateNameX;
        private AnimatedEmojiSpan.EmojiGroupedSpans animateOutAnimateEmoji;
        private AnimatedEmojiSpan.EmojiGroupedSpans animateOutAnimateEmojiReply;
        private MessageObject.TextLayoutBlocks animateOutCaptionLayout;
        private ArrayList<MessageObject.TextLayoutBlock> animateOutTextBlocks;
        private float animateOutTextXOffset;
        private boolean animatePinned;
        public boolean animatePlayingRound;
        public boolean animateRadius;
        public boolean animateRecommendationsExpanded;
        boolean animateReplaceCaptionLayout;
        private boolean animateReplies;
        private CachedStaticLayout animateRepliesLayout;
        private CachedStaticLayout animateReplyTextLayout;
        public float animateReplyTextOffset;
        public boolean animateRoundVideoDotY;
        private boolean animateShouldDrawMenuDrawable;
        private boolean animateShouldDrawTimeOnMedia;
        private boolean animateSign;
        public boolean animateSmallImage;
        public boolean animateText;
        private CachedStaticLayout animateTimeLayout;
        private int animateTimeWidth;
        public float animateToImageH;
        public float animateToImageW;
        public float animateToImageX;
        public float animateToImageY;
        public int[] animateToRadius;
        private int animateTotalCommentWidth;
        public boolean animateUseTranscribeButton;
        private CachedStaticLayout animateViewsLayout;
        public float captionFromX;
        public float captionFromY;
        public float deltaBottom;
        public float deltaLeft;
        public float deltaRight;
        public float deltaTop;
        public boolean drawPinnedBottomBackground;
        public boolean ignoreAlpha;
        public boolean imageChangeBoundsTransition;
        public int lastBackgroundLeft;
        public int lastBackgroundRight;
        private float lastButtonX;
        private float lastButtonY;
        private int lastCommentArrowX;
        private boolean lastCommentDrawUnread;
        private CachedStaticLayout lastCommentLayout;
        private int lastCommentUnreadX;
        private float lastCommentX;
        private int lastCommentsCount;
        public boolean lastDrawBackground;
        private boolean lastDrawCommentNumber;
        public CachedStaticLayout lastDrawDocTitleLayout;
        public CachedStaticLayout lastDrawInfoLayout;
        public float lastDrawLocationExpireProgress;
        public String lastDrawLocationExpireText;
        public boolean lastDrawNameLayout;
        public float lastDrawReplyY;
        public float lastDrawRoundVideoDotY;
        public boolean lastDrawTime;
        private MessageObject.TextLayoutBlocks lastDrawingCaptionLayout;
        public float lastDrawingCaptionX;
        public float lastDrawingCaptionY;
        private boolean lastDrawingEdited;
        public float lastDrawingImageH;
        public float lastDrawingImageW;
        public float lastDrawingImageX;
        public float lastDrawingImageY;
        public boolean lastDrawingLinkAbove;
        public int lastDrawingLinkPreviewHeight;
        public int lastDrawingLinkPreviewY;
        public boolean lastDrawingRecommendationsExpanded;
        private float lastDrawingReplyTextHeight;
        public boolean lastDrawingSmallImage;
        private ArrayList<MessageObject.TextLayoutBlock> lastDrawingTextBlocks;
        public float lastDrawingTextY;
        public boolean lastDrawnForwardedName;
        public CachedStaticLayout lastDrawnReplyTextLayout;
        int lastForwardNameWidth;
        float lastForwardNameX;
        public int lastForwardedNamesOffset;
        private boolean lastIsPinned;
        private boolean lastIsPlayingRound;
        public boolean lastLocatinIsExpired;
        private int lastMediaOffsetY;
        private int lastRepliesCount;
        private CachedStaticLayout lastRepliesLayout;
        public int lastReplyTextXOffset;
        private boolean lastShouldDrawMenuDrawable;
        private boolean lastShouldDrawTimeOnMedia;
        private String lastSignMessage;
        public float lastTextXOffset;
        private CachedStaticLayout lastTimeLayout;
        private int lastTimeWidth;
        public int lastTimeX;
        public float lastTimeXPinned;
        private float lastTimeXReplies;
        private float lastTimeXViews;
        public int lastTopOffset;
        private int lastTotalCommentWidth;
        public boolean lastUseTranscribeButton;
        private int lastViewsCount;
        private CachedStaticLayout lastViewsLayout;
        public boolean messageEntering;
        private boolean moveCaption;
        public float photoImageFromCenterX;
        public float photoImageFromCenterY;
        public float photoImageFromHeight;
        public float photoImageFromWidth;
        public boolean shouldAnimateTimeX;
        public float toDeltaLeft;
        public float toDeltaRight;
        public boolean transformGroupToSingleMessage;
        public boolean updatePhotoImageX;
        public boolean wasDraw;
        public int[] imageRoundRadius = new int[4];
        public float captionEnterProgress = 1.0f;
        public float changePinnedBottomProgress = 1.0f;
        public Rect lastDrawingBackgroundRect = new Rect();
        public float animateChangeProgress = 1.0f;
        private ArrayList<BotButton> lastDrawBotButtons = new ArrayList<>();
        private ArrayList<BotButton> transitionBotButtons = new ArrayList<>();
        public int lastStatusDrawableParams = -1;
        public CachedStaticLayout[] lastDrawnForwardedNameLayout = new CachedStaticLayout[2];
        public CachedStaticLayout[] animatingForwardedNameLayout = new CachedStaticLayout[2];

        public boolean supportChangeAnimation() {
            return true;
        }

        public TransitionParams() {
        }

        public void recordDrawingState() {
            ChannelRecommendationsCell channelRecommendationsCell;
            boolean z = true;
            this.wasDraw = true;
            this.lastDrawingImageX = ChatMessageCell.this.photoImage.getImageX();
            this.lastDrawingImageY = ChatMessageCell.this.photoImage.getImageY();
            this.lastDrawingImageW = ChatMessageCell.this.photoImage.getImageWidth();
            this.lastDrawingImageH = ChatMessageCell.this.photoImage.getImageHeight();
            System.arraycopy(ChatMessageCell.this.photoImage.getRoundRadius(), 0, this.imageRoundRadius, 0, 4);
            Theme.MessageDrawable messageDrawable = ChatMessageCell.this.currentBackgroundDrawable;
            if (messageDrawable != null) {
                this.lastDrawingBackgroundRect.set(messageDrawable.getBounds());
            }
            this.lastDrawingTextBlocks = ChatMessageCell.this.currentMessageObject != null ? ChatMessageCell.this.currentMessageObject.textLayoutBlocks : null;
            this.lastDrawingEdited = ChatMessageCell.this.edited;
            this.lastDrawingCaptionX = ChatMessageCell.this.captionX;
            ChatMessageCell chatMessageCell = ChatMessageCell.this;
            this.lastDrawingCaptionY = chatMessageCell.captionY;
            this.lastDrawingCaptionLayout = chatMessageCell.captionLayout;
            this.lastDrawBotButtons.clear();
            if (!ChatMessageCell.this.botButtons.isEmpty()) {
                this.lastDrawBotButtons.addAll(ChatMessageCell.this.botButtons);
            }
            this.lastDrawingSmallImage = ChatMessageCell.this.isSmallImage;
            ChatMessageCell chatMessageCell2 = ChatMessageCell.this;
            this.lastDrawingLinkPreviewHeight = chatMessageCell2.linkPreviewHeight;
            this.lastDrawingLinkAbove = chatMessageCell2.linkPreviewAbove;
            this.lastDrawingRecommendationsExpanded = chatMessageCell2.currentMessageObject != null && ChatMessageCell.this.currentMessageObject.type == 27 && (channelRecommendationsCell = ChatMessageCell.this.channelRecommendationsCell) != null && channelRecommendationsCell.isExpanded();
            if (ChatMessageCell.this.commentLayout != null) {
                this.lastCommentsCount = ChatMessageCell.this.getRepliesCount();
                this.lastTotalCommentWidth = ChatMessageCell.this.totalCommentWidth;
                this.lastCommentLayout = ChatMessageCell.this.commentLayout;
                this.lastCommentArrowX = ChatMessageCell.this.commentArrowX;
                this.lastCommentUnreadX = ChatMessageCell.this.commentUnreadX;
                this.lastCommentDrawUnread = ChatMessageCell.this.commentDrawUnread;
                this.lastCommentX = ChatMessageCell.this.commentX;
                this.lastDrawCommentNumber = ChatMessageCell.this.drawCommentNumber;
            }
            this.lastRepliesCount = ChatMessageCell.this.getRepliesCount();
            this.lastViewsCount = ChatMessageCell.this.getMessageObject().messageOwner.views;
            this.lastRepliesLayout = ChatMessageCell.this.repliesLayout;
            this.lastViewsLayout = ChatMessageCell.this.viewsLayout;
            ChatMessageCell chatMessageCell3 = ChatMessageCell.this;
            this.lastIsPinned = chatMessageCell3.isPinned;
            this.lastSignMessage = chatMessageCell3.lastPostAuthor;
            this.lastDrawBackground = ChatMessageCell.this.drawBackground;
            this.lastUseTranscribeButton = ChatMessageCell.this.useTranscribeButton;
            this.lastButtonX = ChatMessageCell.this.buttonX;
            this.lastButtonY = ChatMessageCell.this.buttonY;
            this.lastMediaOffsetY = ChatMessageCell.this.mediaOffsetY;
            this.lastDrawTime = !ChatMessageCell.this.forceNotDrawTime;
            ChatMessageCell chatMessageCell4 = ChatMessageCell.this;
            this.lastTimeX = chatMessageCell4.timeX;
            this.lastTimeLayout = chatMessageCell4.timeLayout;
            this.lastTimeWidth = chatMessageCell4.timeWidth;
            this.lastShouldDrawTimeOnMedia = chatMessageCell4.shouldDrawTimeOnMedia();
            this.lastTopOffset = ChatMessageCell.this.getTopMediaOffset();
            this.lastShouldDrawMenuDrawable = ChatMessageCell.this.shouldDrawMenuDrawable();
            this.lastLocatinIsExpired = ChatMessageCell.this.locationExpired;
            this.lastIsPlayingRound = ChatMessageCell.this.isPlayingRound;
            ChatMessageCell chatMessageCell5 = ChatMessageCell.this;
            this.lastDrawingTextY = chatMessageCell5.textY;
            int i = chatMessageCell5.textX;
            this.lastDrawingLinkPreviewY = chatMessageCell5.linkPreviewY;
            this.lastDrawnForwardedNameLayout[0] = ChatMessageCell.this.forwardedNameLayout[0];
            this.lastDrawnForwardedNameLayout[1] = ChatMessageCell.this.forwardedNameLayout[1];
            this.lastDrawnForwardedName = (ChatMessageCell.this.currentMessageObject == null || !ChatMessageCell.this.currentMessageObject.needDrawForwarded()) ? false : false;
            this.lastForwardNameX = ChatMessageCell.this.forwardNameX;
            this.lastForwardedNamesOffset = ChatMessageCell.this.namesOffset;
            this.lastForwardNameWidth = ChatMessageCell.this.forwardedNameWidth;
            this.lastBackgroundLeft = ChatMessageCell.this.getCurrentBackgroundLeft();
            Theme.MessageDrawable messageDrawable2 = ChatMessageCell.this.currentBackgroundDrawable;
            if (messageDrawable2 != null) {
                this.lastBackgroundRight = messageDrawable2.getBounds().right;
            }
            this.lastTextXOffset = ChatMessageCell.this.currentMessageObject != null ? ChatMessageCell.this.currentMessageObject.textXOffset : 0.0f;
            this.lastDrawingReplyTextHeight = ChatMessageCell.this.replyTextHeight;
            ChatMessageCell chatMessageCell6 = ChatMessageCell.this;
            this.lastDrawnReplyTextLayout = chatMessageCell6.replyTextLayout;
            this.lastReplyTextXOffset = chatMessageCell6.replyTextOffset;
            chatMessageCell6.reactionsLayoutInBubble.recordDrawingState();
            ChatMessageCell chatMessageCell7 = ChatMessageCell.this;
            if (chatMessageCell7.replyNameLayout != null) {
                this.lastDrawReplyY = chatMessageCell7.replyStartY;
            } else {
                this.lastDrawReplyY = 0.0f;
            }
            this.lastDrawNameLayout = chatMessageCell7.drawNameLayout;
        }

        public void recordDrawingStatePreview() {
            this.lastDrawnForwardedNameLayout[0] = ChatMessageCell.this.forwardedNameLayout[0];
            this.lastDrawnForwardedNameLayout[1] = ChatMessageCell.this.forwardedNameLayout[1];
            this.lastDrawnForwardedName = ChatMessageCell.this.currentMessageObject.needDrawForwarded();
            this.lastForwardNameX = ChatMessageCell.this.forwardNameX;
            this.lastForwardedNamesOffset = ChatMessageCell.this.namesOffset;
            this.lastForwardNameWidth = ChatMessageCell.this.forwardedNameWidth;
        }

        /* JADX WARN: Removed duplicated region for block: B:102:0x02ab  */
        /* JADX WARN: Removed duplicated region for block: B:107:0x02c4  */
        /* JADX WARN: Removed duplicated region for block: B:110:0x02cf  */
        /* JADX WARN: Removed duplicated region for block: B:142:0x0349  */
        /* JADX WARN: Removed duplicated region for block: B:156:0x0397  */
        /* JADX WARN: Removed duplicated region for block: B:159:0x039d  */
        /* JADX WARN: Removed duplicated region for block: B:173:0x03e6  */
        /* JADX WARN: Removed duplicated region for block: B:187:0x0436  */
        /* JADX WARN: Removed duplicated region for block: B:190:0x0443  */
        /* JADX WARN: Removed duplicated region for block: B:191:0x044a  */
        /* JADX WARN: Removed duplicated region for block: B:217:0x04e1  */
        /* JADX WARN: Removed duplicated region for block: B:220:0x04f6  */
        /* JADX WARN: Removed duplicated region for block: B:222:0x04fc  */
        /* JADX WARN: Removed duplicated region for block: B:231:0x0546  */
        /* JADX WARN: Removed duplicated region for block: B:234:0x0552  */
        /* JADX WARN: Removed duplicated region for block: B:237:0x055e  */
        /* JADX WARN: Removed duplicated region for block: B:240:0x056c  */
        /* JADX WARN: Removed duplicated region for block: B:243:0x0579  */
        /* JADX WARN: Removed duplicated region for block: B:246:0x0588  */
        /* JADX WARN: Removed duplicated region for block: B:251:0x05c0  */
        /* JADX WARN: Removed duplicated region for block: B:254:0x05cd  */
        /* JADX WARN: Removed duplicated region for block: B:265:0x0600  */
        /* JADX WARN: Removed duplicated region for block: B:38:0x00cc  */
        /* JADX WARN: Removed duplicated region for block: B:39:0x00f2  */
        /* JADX WARN: Removed duplicated region for block: B:43:0x010f  */
        /* JADX WARN: Removed duplicated region for block: B:46:0x011a  */
        /* JADX WARN: Removed duplicated region for block: B:79:0x0228  */
        /* JADX WARN: Removed duplicated region for block: B:82:0x024a  */
        /* JADX WARN: Removed duplicated region for block: B:85:0x0259  */
        /* JADX WARN: Removed duplicated region for block: B:96:0x0293  */
        /* JADX WARN: Removed duplicated region for block: B:99:0x02a0  */
        /*
            Code decompiled incorrectly, please refer to instructions dump.
        */
        public boolean animateChange() {
            boolean z;
            CachedStaticLayout cachedStaticLayout;
            ChatMessageCell chatMessageCell;
            ChatMessageCell chatMessageCell2;
            MessageObject.TextLayoutBlocks textLayoutBlocks;
            MessageObject.TextLayoutBlocks textLayoutBlocks2;
            int i;
            int i2;
            boolean z2;
            ChatMessageCell chatMessageCell3;
            boolean z3;
            float f;
            ChatMessageCell chatMessageCell4;
            ChatMessageCell chatMessageCell5;
            ReactionsLayoutInBubble reactionsLayoutInBubble;
            CachedStaticLayout cachedStaticLayout2;
            ChannelRecommendationsCell channelRecommendationsCell;
            boolean z4;
            if (this.wasDraw) {
                this.animateMessageText = false;
                if (ChatMessageCell.this.currentMessageObject.textLayoutBlocks != this.lastDrawingTextBlocks) {
                    if (ChatMessageCell.this.currentMessageObject.textLayoutBlocks != null && this.lastDrawingTextBlocks != null && ChatMessageCell.this.currentMessageObject.textLayoutBlocks.size() == this.lastDrawingTextBlocks.size()) {
                        for (int i3 = 0; i3 < this.lastDrawingTextBlocks.size(); i3++) {
                            String charSequence = ChatMessageCell.this.currentMessageObject.textLayoutBlocks.get(i3).textLayout == null ? null : ChatMessageCell.this.currentMessageObject.textLayoutBlocks.get(i3).textLayout.getText().toString();
                            String charSequence2 = this.lastDrawingTextBlocks.get(i3).textLayout == null ? null : this.lastDrawingTextBlocks.get(i3).textLayout.getText().toString();
                            if ((charSequence != null || charSequence2 == null) && ((charSequence == null || charSequence2 != null) && charSequence.equals(charSequence2))) {
                                ChatMessageCell chatMessageCell6 = ChatMessageCell.this;
                                AnimatedEmojiSpan.EmojiGroupedSpans emojiGroupedSpans = chatMessageCell6.animatedEmojiStack;
                                if (emojiGroupedSpans != null) {
                                    emojiGroupedSpans.replaceLayout(chatMessageCell6.currentMessageObject.textLayoutBlocks.get(i3).textLayout.layout, this.lastDrawingTextBlocks.get(i3).textLayout.layout);
                                }
                            }
                        }
                        z4 = true;
                        if (z4) {
                            this.animateMessageText = true;
                            ArrayList<MessageObject.TextLayoutBlock> arrayList = this.lastDrawingTextBlocks;
                            this.animateOutTextBlocks = arrayList;
                            this.animateOutTextXOffset = this.lastTextXOffset;
                            this.animateOutAnimateEmoji = AnimatedEmojiSpan.update(0, (View) ChatMessageCell.this, this.animateOutAnimateEmoji, arrayList, true);
                            ChatMessageCell chatMessageCell7 = ChatMessageCell.this;
                            chatMessageCell7.animatedEmojiStack = AnimatedEmojiSpan.update(0, chatMessageCell7, chatMessageCell7.animatedEmojiStack, chatMessageCell7.currentMessageObject.textLayoutBlocks);
                            z = true;
                            this.animateDrawNameLayout = false;
                            if (ChatMessageCell.this.drawNameLayout != this.lastDrawNameLayout) {
                                this.animateDrawNameLayout = true;
                                z = true;
                            }
                            cachedStaticLayout = ChatMessageCell.this.replyTextLayout;
                            if (cachedStaticLayout != this.lastDrawnReplyTextLayout) {
                                CharSequence text = cachedStaticLayout != null ? cachedStaticLayout.getText() : null;
                                CachedStaticLayout cachedStaticLayout3 = this.lastDrawnReplyTextLayout;
                                if (!TextUtils.equals(text, cachedStaticLayout3 != null ? cachedStaticLayout3.getText() : null)) {
                                    this.animateFromReplyTextHeight = this.lastDrawingReplyTextHeight;
                                    CachedStaticLayout cachedStaticLayout4 = this.lastDrawnReplyTextLayout;
                                    this.animateReplyTextLayout = cachedStaticLayout4;
                                    this.animateReplyTextOffset = this.lastReplyTextXOffset;
                                    ChatMessageCell chatMessageCell8 = ChatMessageCell.this;
                                    AnimatedEmojiSpan.EmojiGroupedSpans emojiGroupedSpans2 = this.animateOutAnimateEmojiReply;
                                    Layout[] layoutArr = new Layout[1];
                                    layoutArr[0] = cachedStaticLayout4 == null ? null : cachedStaticLayout4.layout;
                                    this.animateOutAnimateEmojiReply = AnimatedEmojiSpan.update(0, (View) chatMessageCell8, false, emojiGroupedSpans2, true, layoutArr);
                                    z = true;
                                }
                            }
                            if (ChatMessageCell.this.edited || this.lastDrawingEdited || ChatMessageCell.this.timeLayout == null) {
                                if (!ChatMessageCell.this.edited && this.lastDrawingEdited) {
                                    chatMessageCell = ChatMessageCell.this;
                                    if (chatMessageCell.timeLayout != null) {
                                        this.animateTimeLayout = this.lastTimeLayout;
                                        int i4 = chatMessageCell.timeWidth;
                                        int i5 = this.lastTimeWidth;
                                        this.animateEditedWidthDiff = i4 - i5;
                                        this.animateEditedEnter = true;
                                        this.animateTimeWidth = i5;
                                        this.animateFromTimeX = this.lastTimeX;
                                        this.shouldAnimateTimeX = true;
                                        z = true;
                                    }
                                }
                            } else {
                                String string = LocaleController.getString("EditedMessage", R.string.EditedMessage);
                                CharSequence text2 = ChatMessageCell.this.timeLayout.getText();
                                int indexOf = text2.toString().indexOf(string);
                                if (indexOf >= 0) {
                                    if (indexOf == 0) {
                                        this.animateEditedLayout = new CachedStaticLayout(new StaticLayout(string, Theme.chat_timePaint, ChatMessageCell.this.timeTextWidth + AndroidUtilities.dp(100.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                        SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder();
                                        spannableStringBuilder.append((CharSequence) string);
                                        spannableStringBuilder.append(text2.subSequence(string.length(), text2.length()));
                                        spannableStringBuilder.setSpan(new EmptyStubSpan(), 0, string.length(), 0);
                                        this.animateTimeLayout = new CachedStaticLayout(new StaticLayout(spannableStringBuilder, Theme.chat_timePaint, ChatMessageCell.this.timeTextWidth + AndroidUtilities.dp(100.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false));
                                        this.animateEditedWidthDiff = ChatMessageCell.this.timeWidth - this.lastTimeWidth;
                                    } else {
                                        this.animateEditedWidthDiff = 0;
                                        this.animateEditedLayout = null;
                                        this.animateTimeLayout = this.lastTimeLayout;
                                    }
                                    this.animateEditedEnter = true;
                                    this.animateTimeWidth = this.lastTimeWidth;
                                    this.animateFromTimeX = this.lastTimeX;
                                    this.shouldAnimateTimeX = true;
                                    z = true;
                                }
                                ChatMessageCell.this.accessibilityText = null;
                            }
                            this.animateDrawBackground = false;
                            if (ChatMessageCell.this.drawBackground != this.lastDrawBackground) {
                                this.animateDrawBackground = true;
                                z = true;
                            }
                            this.animateSmallImage = false;
                            if (ChatMessageCell.this.isSmallImage != this.lastDrawingSmallImage) {
                                this.animateSmallImage = true;
                                float f2 = this.lastDrawingImageW;
                                this.photoImageFromWidth = f2;
                                float f3 = this.lastDrawingImageH;
                                this.photoImageFromHeight = f3;
                                this.photoImageFromCenterX = this.lastDrawingImageX + (f2 / 2.0f);
                                this.photoImageFromCenterY = this.lastDrawingImageY + (f3 / 2.0f);
                                z = true;
                            }
                            this.animateRecommendationsExpanded = false;
                            if (((ChatMessageCell.this.currentMessageObject.type == 27 || (channelRecommendationsCell = ChatMessageCell.this.channelRecommendationsCell) == null || !channelRecommendationsCell.isExpanded()) ? false : true) != this.lastDrawingRecommendationsExpanded) {
                                this.animateRecommendationsExpanded = true;
                                z = true;
                            }
                            this.animateLinkAbove = false;
                            chatMessageCell2 = ChatMessageCell.this;
                            if (chatMessageCell2.linkPreviewAbove != this.lastDrawingLinkAbove) {
                                this.animateLinkAbove = true;
                                z = true;
                            }
                            this.animateLinkPreviewHeight = false;
                            if (chatMessageCell2.hasLinkPreview) {
                                int i6 = ChatMessageCell.this.linkPreviewHeight;
                                int i7 = this.lastDrawingLinkPreviewHeight;
                                if (i6 != i7) {
                                    this.animateLinkPreviewHeight = true;
                                    this.animateFromLinkPreviewHeight = i7;
                                    z = true;
                                }
                            }
                            this.animateUseTranscribeButton = false;
                            if (ChatMessageCell.this.useTranscribeButton != this.lastUseTranscribeButton) {
                                this.animateUseTranscribeButton = true;
                                z = true;
                            }
                            ChatMessageCell chatMessageCell9 = ChatMessageCell.this;
                            textLayoutBlocks = chatMessageCell9.captionLayout;
                            textLayoutBlocks2 = this.lastDrawingCaptionLayout;
                            if (textLayoutBlocks == textLayoutBlocks2) {
                                String charSequence3 = textLayoutBlocks2 == null ? null : textLayoutBlocks2.text.toString();
                                MessageObject.TextLayoutBlocks textLayoutBlocks3 = ChatMessageCell.this.captionLayout;
                                String charSequence4 = textLayoutBlocks3 == null ? null : textLayoutBlocks3.text.toString();
                                if ((charSequence4 == null) != (charSequence3 == null) || (charSequence3 != null && !charSequence3.equals(charSequence4))) {
                                    this.animateReplaceCaptionLayout = true;
                                    MessageObject.TextLayoutBlocks textLayoutBlocks4 = this.lastDrawingCaptionLayout;
                                    this.animateOutCaptionLayout = textLayoutBlocks4;
                                    this.animateOutAnimateEmoji = AnimatedEmojiSpan.update(0, ChatMessageCell.this, (AnimatedEmojiSpan.EmojiGroupedSpans) null, textLayoutBlocks4 == null ? null : textLayoutBlocks4.textLayoutBlocks);
                                    ChatMessageCell chatMessageCell10 = ChatMessageCell.this;
                                    AnimatedEmojiSpan.EmojiGroupedSpans emojiGroupedSpans3 = chatMessageCell10.animatedEmojiStack;
                                    MessageObject.TextLayoutBlocks textLayoutBlocks5 = chatMessageCell10.captionLayout;
                                    chatMessageCell10.animatedEmojiStack = AnimatedEmojiSpan.update(0, chatMessageCell10, emojiGroupedSpans3, textLayoutBlocks5 == null ? null : textLayoutBlocks5.textLayoutBlocks);
                                } else {
                                    ChatMessageCell.this.updateCaptionLayout();
                                    if (this.lastDrawingCaptionX != ChatMessageCell.this.captionX || this.lastDrawingCaptionY != ChatMessageCell.this.captionY) {
                                        this.moveCaption = true;
                                        this.captionFromX = this.lastDrawingCaptionX;
                                        this.captionFromY = this.lastDrawingCaptionY;
                                    }
                                }
                                z = true;
                            } else if (textLayoutBlocks != null && textLayoutBlocks2 != null) {
                                chatMessageCell9.updateCaptionLayout();
                                if (this.lastDrawingCaptionX != ChatMessageCell.this.captionX || this.lastDrawingCaptionY != ChatMessageCell.this.captionY) {
                                    this.moveCaption = true;
                                    this.captionFromX = this.lastDrawingCaptionX;
                                    this.captionFromY = this.lastDrawingCaptionY;
                                    z = true;
                                }
                            }
                            if (this.lastDrawBotButtons.isEmpty() || !ChatMessageCell.this.botButtons.isEmpty()) {
                                if (this.lastDrawBotButtons.size() != ChatMessageCell.this.botButtons.size()) {
                                    this.animateBotButtonsChanged = true;
                                }
                                if (!this.animateBotButtonsChanged) {
                                    for (int i8 = 0; i8 < ChatMessageCell.this.botButtons.size(); i8++) {
                                        BotButton botButton = (BotButton) ChatMessageCell.this.botButtons.get(i8);
                                        BotButton botButton2 = this.lastDrawBotButtons.get(i8);
                                        if (botButton.x != botButton2.x || botButton.width != botButton2.width || botButton.title != botButton2.title) {
                                            this.animateBotButtonsChanged = true;
                                            break;
                                        }
                                    }
                                }
                                if (this.animateBotButtonsChanged) {
                                    this.transitionBotButtons.addAll(this.lastDrawBotButtons);
                                }
                            }
                            if ((ChatMessageCell.this.documentAttachType != 5 || ChatMessageCell.this.documentAttachType == 3 || ChatMessageCell.this.documentAttachType == 1) && (ChatMessageCell.this.buttonX != this.lastButtonX || ChatMessageCell.this.buttonY != this.lastButtonY)) {
                                this.animateFromButtonX = this.lastButtonX;
                                this.animateFromButtonY = this.lastButtonY;
                                this.animateButton = true;
                                z = true;
                            }
                            i = ChatMessageCell.this.mediaOffsetY;
                            i2 = this.lastMediaOffsetY;
                            if (i != i2) {
                                this.animateFromMediaOffsetY = i2;
                                this.animateMediaOffsetY = true;
                                z = true;
                            }
                            z2 = this.lastIsPinned;
                            chatMessageCell3 = ChatMessageCell.this;
                            if (z2 == chatMessageCell3.isPinned) {
                                this.animatePinned = true;
                                chatMessageCell3.accessibilityText = null;
                                z = true;
                                z3 = true;
                            } else {
                                z3 = false;
                            }
                            if ((this.lastRepliesLayout == null || chatMessageCell3.repliesLayout != null) && this.lastRepliesCount != ChatMessageCell.this.getRepliesCount()) {
                                this.animateRepliesLayout = this.lastRepliesLayout;
                                this.animateReplies = true;
                                ChatMessageCell.this.accessibilityText = null;
                                z = true;
                                z3 = true;
                            }
                            if (this.lastViewsLayout != null && this.lastViewsCount != ChatMessageCell.this.getMessageObject().messageOwner.views) {
                                this.animateViewsLayout = this.lastViewsLayout;
                                ChatMessageCell.this.accessibilityText = null;
                                z = true;
                                z3 = true;
                            }
                            if (ChatMessageCell.this.commentLayout != null && this.lastCommentsCount != ChatMessageCell.this.getRepliesCount()) {
                                cachedStaticLayout2 = this.lastCommentLayout;
                                if (cachedStaticLayout2 == null && !TextUtils.equals(cachedStaticLayout2.getText(), ChatMessageCell.this.commentLayout.getText())) {
                                    this.animateCommentsLayout = this.lastCommentLayout;
                                } else {
                                    this.animateCommentsLayout = null;
                                }
                                this.animateTotalCommentWidth = this.lastTotalCommentWidth;
                                this.animateCommentX = this.lastCommentX;
                                this.animateCommentArrowX = this.lastCommentArrowX;
                                this.animateCommentUnreadX = this.lastCommentUnreadX;
                                this.animateCommentDrawUnread = this.lastCommentDrawUnread;
                                this.animateDrawCommentNumber = this.lastDrawCommentNumber;
                                this.animateComments = true;
                                z = true;
                            }
                            if (!TextUtils.equals(this.lastSignMessage, ChatMessageCell.this.lastPostAuthor)) {
                                this.animateSign = true;
                                this.animateNameX = ChatMessageCell.this.nameX;
                                z = true;
                            }
                            if (this.lastDrawTime != ChatMessageCell.this.forceNotDrawTime) {
                                this.animateDrawingTimeAlpha = true;
                                this.animateViewsLayout = null;
                            } else if (this.lastShouldDrawTimeOnMedia != ChatMessageCell.this.shouldDrawTimeOnMedia()) {
                                this.animateEditedEnter = false;
                                this.animateShouldDrawTimeOnMedia = true;
                                this.animateFromTimeX = this.lastTimeX;
                                this.animateTimeLayout = this.lastTimeLayout;
                                this.animateTimeWidth = this.lastTimeWidth;
                            } else {
                                if (z3 || Math.abs(ChatMessageCell.this.timeX - this.lastTimeX) > 1) {
                                    this.shouldAnimateTimeX = true;
                                    this.animateTimeWidth = this.lastTimeWidth;
                                    this.animateFromTimeX = this.lastTimeX;
                                    this.animateFromTimeXViews = this.lastTimeXViews;
                                    this.animateFromTimeXReplies = this.lastTimeXReplies;
                                    this.animateFromTimeXPinned = this.lastTimeXPinned;
                                }
                                if (this.lastShouldDrawMenuDrawable != ChatMessageCell.this.shouldDrawMenuDrawable()) {
                                    this.animateShouldDrawMenuDrawable = true;
                                }
                                if (this.lastLocatinIsExpired != ChatMessageCell.this.locationExpired) {
                                    this.animateLocationIsExpired = true;
                                }
                                if (this.lastIsPlayingRound != ChatMessageCell.this.isPlayingRound) {
                                    this.animatePlayingRound = true;
                                    z = true;
                                }
                                f = this.lastDrawingTextY;
                                chatMessageCell4 = ChatMessageCell.this;
                                if (f != chatMessageCell4.textY) {
                                    this.animateText = true;
                                    this.animateFromTextY = f;
                                    z = true;
                                }
                                if (this.lastDrawingLinkPreviewY != chatMessageCell4.linkPreviewY) {
                                    this.animateLinkPreviewY = true;
                                    this.animateFromLinkPreviewY = this.lastDrawingLinkPreviewY;
                                    z = true;
                                }
                                if (ChatMessageCell.this.currentMessageObject != null && this.lastDrawnForwardedName != ChatMessageCell.this.currentMessageObject.needDrawForwarded()) {
                                    this.animateForwardedLayout = true;
                                    CachedStaticLayout[] cachedStaticLayoutArr = this.animatingForwardedNameLayout;
                                    CachedStaticLayout[] cachedStaticLayoutArr2 = this.lastDrawnForwardedNameLayout;
                                    cachedStaticLayoutArr[0] = cachedStaticLayoutArr2[0];
                                    cachedStaticLayoutArr[1] = cachedStaticLayoutArr2[1];
                                    this.animateForwardNameX = this.lastForwardNameX;
                                    this.animateForwardedNamesOffset = this.lastForwardedNamesOffset;
                                    this.animateForwardNameWidth = this.lastForwardNameWidth;
                                    z = true;
                                }
                                ChatMessageCell.this.updateReactionLayoutPosition();
                                if (ChatMessageCell.this.reactionsLayoutInBubble.animateChange()) {
                                    z = true;
                                }
                                if (ChatMessageCell.this.currentMessageObject.isRoundVideo()) {
                                    float dp = ChatMessageCell.this.layoutHeight - AndroidUtilities.dp(28 - (ChatMessageCell.this.drawPinnedBottom ? 2 : 0));
                                    if (!ChatMessageCell.this.reactionsLayoutInBubble.isEmpty) {
                                        dp -= reactionsLayoutInBubble.totalHeight;
                                    }
                                    float f4 = this.lastDrawRoundVideoDotY;
                                    if (dp != f4) {
                                        this.animateRoundVideoDotY = true;
                                        this.animateFromRoundVideoDotY = f4;
                                        z = true;
                                    }
                                }
                                if (ChatMessageCell.this.replyNameLayout != null) {
                                    float f5 = this.lastDrawReplyY;
                                    if (chatMessageCell5.replyStartX != f5 && f5 != 0.0f) {
                                        this.animateFromReplyY = f5;
                                        return true;
                                    }
                                }
                                return z;
                            }
                            z = true;
                            if (this.lastShouldDrawMenuDrawable != ChatMessageCell.this.shouldDrawMenuDrawable()) {
                            }
                            if (this.lastLocatinIsExpired != ChatMessageCell.this.locationExpired) {
                            }
                            if (this.lastIsPlayingRound != ChatMessageCell.this.isPlayingRound) {
                            }
                            f = this.lastDrawingTextY;
                            chatMessageCell4 = ChatMessageCell.this;
                            if (f != chatMessageCell4.textY) {
                            }
                            if (this.lastDrawingLinkPreviewY != chatMessageCell4.linkPreviewY) {
                            }
                            if (ChatMessageCell.this.currentMessageObject != null) {
                                this.animateForwardedLayout = true;
                                CachedStaticLayout[] cachedStaticLayoutArr3 = this.animatingForwardedNameLayout;
                                CachedStaticLayout[] cachedStaticLayoutArr22 = this.lastDrawnForwardedNameLayout;
                                cachedStaticLayoutArr3[0] = cachedStaticLayoutArr22[0];
                                cachedStaticLayoutArr3[1] = cachedStaticLayoutArr22[1];
                                this.animateForwardNameX = this.lastForwardNameX;
                                this.animateForwardedNamesOffset = this.lastForwardedNamesOffset;
                                this.animateForwardNameWidth = this.lastForwardNameWidth;
                                z = true;
                            }
                            ChatMessageCell.this.updateReactionLayoutPosition();
                            if (ChatMessageCell.this.reactionsLayoutInBubble.animateChange()) {
                            }
                            if (ChatMessageCell.this.currentMessageObject.isRoundVideo()) {
                            }
                            if (ChatMessageCell.this.replyNameLayout != null) {
                            }
                            return z;
                        }
                        ChatMessageCell chatMessageCell11 = ChatMessageCell.this;
                        chatMessageCell11.animatedEmojiStack = AnimatedEmojiSpan.update(0, chatMessageCell11, chatMessageCell11.animatedEmojiStack, chatMessageCell11.currentMessageObject.textLayoutBlocks);
                    }
                    z4 = false;
                    if (z4) {
                    }
                }
                z = false;
                this.animateDrawNameLayout = false;
                if (ChatMessageCell.this.drawNameLayout != this.lastDrawNameLayout) {
                }
                cachedStaticLayout = ChatMessageCell.this.replyTextLayout;
                if (cachedStaticLayout != this.lastDrawnReplyTextLayout) {
                }
                if (ChatMessageCell.this.edited) {
                }
                if (!ChatMessageCell.this.edited) {
                    chatMessageCell = ChatMessageCell.this;
                    if (chatMessageCell.timeLayout != null) {
                    }
                }
                this.animateDrawBackground = false;
                if (ChatMessageCell.this.drawBackground != this.lastDrawBackground) {
                }
                this.animateSmallImage = false;
                if (ChatMessageCell.this.isSmallImage != this.lastDrawingSmallImage) {
                }
                this.animateRecommendationsExpanded = false;
                if (((ChatMessageCell.this.currentMessageObject.type == 27 || (channelRecommendationsCell = ChatMessageCell.this.channelRecommendationsCell) == null || !channelRecommendationsCell.isExpanded()) ? false : true) != this.lastDrawingRecommendationsExpanded) {
                }
                this.animateLinkAbove = false;
                chatMessageCell2 = ChatMessageCell.this;
                if (chatMessageCell2.linkPreviewAbove != this.lastDrawingLinkAbove) {
                }
                this.animateLinkPreviewHeight = false;
                if (chatMessageCell2.hasLinkPreview) {
                }
                this.animateUseTranscribeButton = false;
                if (ChatMessageCell.this.useTranscribeButton != this.lastUseTranscribeButton) {
                }
                ChatMessageCell chatMessageCell92 = ChatMessageCell.this;
                textLayoutBlocks = chatMessageCell92.captionLayout;
                textLayoutBlocks2 = this.lastDrawingCaptionLayout;
                if (textLayoutBlocks == textLayoutBlocks2) {
                }
                if (this.lastDrawBotButtons.isEmpty()) {
                }
                if (this.lastDrawBotButtons.size() != ChatMessageCell.this.botButtons.size()) {
                }
                if (!this.animateBotButtonsChanged) {
                }
                if (this.animateBotButtonsChanged) {
                }
                if (ChatMessageCell.this.documentAttachType != 5) {
                }
                this.animateFromButtonX = this.lastButtonX;
                this.animateFromButtonY = this.lastButtonY;
                this.animateButton = true;
                z = true;
                i = ChatMessageCell.this.mediaOffsetY;
                i2 = this.lastMediaOffsetY;
                if (i != i2) {
                }
                z2 = this.lastIsPinned;
                chatMessageCell3 = ChatMessageCell.this;
                if (z2 == chatMessageCell3.isPinned) {
                }
                if (this.lastRepliesLayout == null) {
                }
                this.animateRepliesLayout = this.lastRepliesLayout;
                this.animateReplies = true;
                ChatMessageCell.this.accessibilityText = null;
                z = true;
                z3 = true;
                if (this.lastViewsLayout != null) {
                    this.animateViewsLayout = this.lastViewsLayout;
                    ChatMessageCell.this.accessibilityText = null;
                    z = true;
                    z3 = true;
                }
                if (ChatMessageCell.this.commentLayout != null) {
                    cachedStaticLayout2 = this.lastCommentLayout;
                    if (cachedStaticLayout2 == null) {
                    }
                    this.animateCommentsLayout = null;
                    this.animateTotalCommentWidth = this.lastTotalCommentWidth;
                    this.animateCommentX = this.lastCommentX;
                    this.animateCommentArrowX = this.lastCommentArrowX;
                    this.animateCommentUnreadX = this.lastCommentUnreadX;
                    this.animateCommentDrawUnread = this.lastCommentDrawUnread;
                    this.animateDrawCommentNumber = this.lastDrawCommentNumber;
                    this.animateComments = true;
                    z = true;
                }
                if (!TextUtils.equals(this.lastSignMessage, ChatMessageCell.this.lastPostAuthor)) {
                }
                if (this.lastDrawTime != ChatMessageCell.this.forceNotDrawTime) {
                }
                z = true;
                if (this.lastShouldDrawMenuDrawable != ChatMessageCell.this.shouldDrawMenuDrawable()) {
                }
                if (this.lastLocatinIsExpired != ChatMessageCell.this.locationExpired) {
                }
                if (this.lastIsPlayingRound != ChatMessageCell.this.isPlayingRound) {
                }
                f = this.lastDrawingTextY;
                chatMessageCell4 = ChatMessageCell.this;
                if (f != chatMessageCell4.textY) {
                }
                if (this.lastDrawingLinkPreviewY != chatMessageCell4.linkPreviewY) {
                }
                if (ChatMessageCell.this.currentMessageObject != null) {
                }
                ChatMessageCell.this.updateReactionLayoutPosition();
                if (ChatMessageCell.this.reactionsLayoutInBubble.animateChange()) {
                }
                if (ChatMessageCell.this.currentMessageObject.isRoundVideo()) {
                }
                if (ChatMessageCell.this.replyNameLayout != null) {
                }
                return z;
            }
            return false;
        }

        public void onDetach() {
            this.wasDraw = false;
        }

        public void resetAnimation() {
            this.animateChange = false;
            this.animatePinned = false;
            this.animateBackgroundBoundsInner = false;
            this.deltaLeft = 0.0f;
            this.deltaRight = 0.0f;
            this.deltaBottom = 0.0f;
            this.deltaTop = 0.0f;
            this.toDeltaLeft = 0.0f;
            this.toDeltaRight = 0.0f;
            if (this.imageChangeBoundsTransition && this.animateToImageW != 0.0f && this.animateToImageH != 0.0f) {
                ChatMessageCell.this.photoImage.setImageCoords(this.animateToImageX, this.animateToImageY, this.animateToImageW, this.animateToImageH);
            }
            if (this.animateRadius) {
                ChatMessageCell.this.photoImage.setRoundRadius(this.animateToRadius);
            }
            this.animateToImageX = 0.0f;
            this.animateToImageY = 0.0f;
            this.animateToImageW = 0.0f;
            this.animateToImageH = 0.0f;
            this.imageChangeBoundsTransition = false;
            this.changePinnedBottomProgress = 1.0f;
            this.captionEnterProgress = 1.0f;
            this.animateRadius = false;
            this.animateChangeProgress = 1.0f;
            this.animateMessageText = false;
            this.animateDrawNameLayout = false;
            this.animateOutTextBlocks = null;
            this.animateEditedLayout = null;
            this.animateTimeLayout = null;
            this.animateEditedEnter = false;
            this.animateReplaceCaptionLayout = false;
            this.transformGroupToSingleMessage = false;
            this.animateOutCaptionLayout = null;
            AnimatedEmojiSpan.release(ChatMessageCell.this, this.animateOutAnimateEmoji);
            this.animateOutAnimateEmoji = null;
            this.moveCaption = false;
            this.animateDrawingTimeAlpha = false;
            this.transitionBotButtons.clear();
            this.animateButton = false;
            this.animateMediaOffsetY = false;
            this.animateReplyTextLayout = null;
            this.animateReplies = false;
            this.animateRepliesLayout = null;
            this.animateComments = false;
            this.animateCommentsLayout = null;
            this.animateViewsLayout = null;
            this.animateShouldDrawTimeOnMedia = false;
            this.animateShouldDrawMenuDrawable = false;
            this.shouldAnimateTimeX = false;
            this.animateDrawBackground = false;
            this.animateSign = false;
            this.animateSmallImage = false;
            this.animateLinkAbove = false;
            this.animateRecommendationsExpanded = false;
            this.animateDrawingTimeAlpha = false;
            this.animateLocationIsExpired = false;
            this.animatePlayingRound = false;
            this.animateText = false;
            this.animateLinkPreviewY = false;
            this.animateForwardedLayout = false;
            CachedStaticLayout[] cachedStaticLayoutArr = this.animatingForwardedNameLayout;
            cachedStaticLayoutArr[0] = null;
            cachedStaticLayoutArr[1] = null;
            this.animateRoundVideoDotY = false;
            ChatMessageCell.this.reactionsLayoutInBubble.resetAnimation();
        }

        /* JADX WARN: Removed duplicated region for block: B:26:0x0075  */
        /* JADX WARN: Removed duplicated region for block: B:28:0x007a  */
        /* JADX WARN: Removed duplicated region for block: B:29:0x007c  */
        /* JADX WARN: Removed duplicated region for block: B:33:0x0081  */
        /* JADX WARN: Removed duplicated region for block: B:37:0x0086  */
        /*
            Code decompiled incorrectly, please refer to instructions dump.
        */
        public int createStatusDrawableParams() {
            int i;
            boolean z;
            boolean z2;
            boolean z3 = true;
            if (ChatMessageCell.this.currentMessageObject.isOutOwner()) {
                if (ChatMessageCell.this.currentMessageObject.isSending() || ChatMessageCell.this.currentMessageObject.isEditing()) {
                    i = 0;
                    z3 = false;
                    z = true;
                } else if (ChatMessageCell.this.currentMessageObject.isSendError()) {
                    i = 0;
                    z3 = false;
                    z = false;
                    z2 = true;
                    if (ChatMessageCell.this.currentMessageObject.isQuickReply()) {
                        i = 0;
                        z3 = false;
                        z = false;
                    }
                    return i | (!z3 ? 2 : 0) | (z ? 4 : 0) | (z2 ? 8 : 0);
                } else {
                    if (ChatMessageCell.this.currentMessageObject.isSent()) {
                        i = (ChatMessageCell.this.currentMessageObject.scheduled || ChatMessageCell.this.currentMessageObject.isUnread()) ? 0 : 1;
                    } else {
                        i = 0;
                        z3 = false;
                    }
                    z = false;
                }
                z2 = false;
                if (ChatMessageCell.this.currentMessageObject.isQuickReply()) {
                }
                return i | (!z3 ? 2 : 0) | (z ? 4 : 0) | (z2 ? 8 : 0);
            }
            if (!ChatMessageCell.this.currentMessageObject.isSending() && !ChatMessageCell.this.currentMessageObject.isEditing()) {
                z3 = false;
            }
            return (z3 ? 4 : 0) | (ChatMessageCell.this.currentMessageObject.isSendError() ? 8 : 0);
        }
    }

    public int getThemedColor(int i) {
        return Theme.getColor(i, this.resourcesProvider);
    }

    private Drawable getThemedDrawable(String str) {
        Theme.ResourcesProvider resourcesProvider = this.resourcesProvider;
        Drawable drawable = resourcesProvider != null ? resourcesProvider.getDrawable(str) : null;
        return drawable != null ? drawable : Theme.getThemeDrawable(str);
    }

    public Paint getThemedPaint(String str) {
        Theme.ResourcesProvider resourcesProvider = this.resourcesProvider;
        Paint paint = resourcesProvider != null ? resourcesProvider.getPaint(str) : null;
        return paint != null ? paint : Theme.getThemePaint(str);
    }

    public boolean hasGradientService() {
        Theme.ResourcesProvider resourcesProvider = this.resourcesProvider;
        return resourcesProvider != null ? resourcesProvider.hasGradientService() : Theme.hasGradientService();
    }

    private ColorMatrixColorFilter getFancyBlurFilter() {
        if (this.fancyBlurFilter == null) {
            ColorMatrix colorMatrix = new ColorMatrix();
            AndroidUtilities.multiplyBrightnessColorMatrix(colorMatrix, 0.9f);
            AndroidUtilities.adjustSaturationColorMatrix(colorMatrix, 0.6f);
            this.fancyBlurFilter = new ColorMatrixColorFilter(colorMatrix);
        }
        return this.fancyBlurFilter;
    }

    public int getNameStatusX() {
        float f = this.nameX + this.nameOffsetX;
        int i = this.viaNameWidth;
        return (int) (f + (i > 0 ? i - AndroidUtilities.dp(32.0f) : this.nameLayoutWidth) + AndroidUtilities.dp(2.0f) + (AndroidUtilities.dp(20.0f) / 2));
    }

    public int getNameStatusY() {
        float f = this.nameY;
        CachedStaticLayout cachedStaticLayout = this.nameLayout;
        return (int) (f + ((cachedStaticLayout == null ? 0 : cachedStaticLayout.layout.getHeight()) / 2));
    }

    @Override // android.view.View
    public void computeScroll() {
        super.computeScroll();
        ChannelRecommendationsCell channelRecommendationsCell = this.channelRecommendationsCell;
        if (channelRecommendationsCell != null) {
            channelRecommendationsCell.computeScroll();
        }
    }

    private ColorFilter getAdaptiveEmojiColorFilter(int i, int i2) {
        if (this.adaptiveEmojiColorFilter == null) {
            this.adaptiveEmojiColor = new int[3];
            this.adaptiveEmojiColorFilter = new ColorFilter[3];
        }
        if (i2 != this.adaptiveEmojiColor[i] || this.adaptiveEmojiColorFilter[i] == null) {
            ColorFilter[] colorFilterArr = this.adaptiveEmojiColorFilter;
            this.adaptiveEmojiColor[i] = i2;
            colorFilterArr[i] = new PorterDuffColorFilter(i2, PorterDuff.Mode.SRC_IN);
        }
        return this.adaptiveEmojiColorFilter[i];
    }

    public boolean needDrawAvatar() {
        MessageObject messageObject;
        MessageObject messageObject2;
        return !(!this.isChat || this.isSavedPreviewChat || this.isThreadPost || (messageObject2 = this.currentMessageObject) == null || messageObject2.isOutOwner() || !this.currentMessageObject.needDrawAvatar()) || ((messageObject = this.currentMessageObject) != null && messageObject.forceAvatar);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public boolean drawPhotoImage(Canvas canvas) {
        return this.photoImage.draw(canvas);
    }

    public boolean areTags() {
        TLRPC$Message tLRPC$Message;
        TLRPC$TL_messageReactions tLRPC$TL_messageReactions;
        MessageObject primaryMessageObject = getPrimaryMessageObject();
        if (primaryMessageObject == null || (tLRPC$Message = primaryMessageObject.messageOwner) == null || (tLRPC$TL_messageReactions = tLRPC$Message.reactions) == null) {
            return false;
        }
        return tLRPC$TL_messageReactions.reactions_as_tags;
    }

    public String getFilename() {
        int i;
        int i2;
        MessageObject messageObject = this.currentMessageObject;
        int i3 = messageObject.type;
        if (i3 == 1) {
            TLRPC$PhotoSize tLRPC$PhotoSize = this.currentPhotoObject;
            if (tLRPC$PhotoSize == null) {
                return null;
            }
            return FileLoader.getAttachFileName(tLRPC$PhotoSize);
        }
        if (i3 == 8 || (i2 = this.documentAttachType) == 7 || i2 == 4 || i2 == 8 || i3 == 9 || i2 == 3 || i2 == 5) {
            if (messageObject.useCustomPhoto) {
                return null;
            }
            if (messageObject.attachPathExists && !TextUtils.isEmpty(messageObject.messageOwner.attachPath)) {
                return this.currentMessageObject.messageOwner.attachPath;
            }
            if (!this.currentMessageObject.isSendError() || (i = this.documentAttachType) == 3 || i == 5) {
                return this.currentMessageObject.getFileName();
            }
        } else if (i2 != 0) {
            return FileLoader.getAttachFileName(this.documentAttach);
        } else {
            TLRPC$PhotoSize tLRPC$PhotoSize2 = this.currentPhotoObject;
            if (tLRPC$PhotoSize2 != null) {
                return FileLoader.getAttachFileName(tLRPC$PhotoSize2);
            }
        }
        return null;
    }

    public boolean checkLoadCaughtPremiumFloodWait() {
        return FileLoader.getInstance(this.currentAccount).checkLoadCaughtPremiumFloodWait(getFilename());
    }

    public boolean checkUploadCaughtPremiumFloodWait() {
        return FileLoader.getInstance(this.currentAccount).checkUploadCaughtPremiumFloodWait(getFilename());
    }
}
