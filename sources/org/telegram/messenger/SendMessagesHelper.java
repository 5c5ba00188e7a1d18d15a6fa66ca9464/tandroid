package org.telegram.messenger;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.AssetFileDescriptor;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.drawable.BitmapDrawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.media.MediaMetadataRetriever;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.Spannable;
import android.text.TextUtils;
import android.util.Base64;
import android.util.SparseArray;
import android.webkit.MimeTypeMap;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.collection.LongSparseArray;
import androidx.core.view.inputmethod.InputContentInfoCompat;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import org.json.JSONObject;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.Utilities;
import org.telegram.messenger.audioinfo.AudioInfo;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.QuickAckDelegate;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.SerializedData;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC$BotInlineMessage;
import org.telegram.tgnet.TLRPC$BotInlineResult;
import org.telegram.tgnet.TLRPC$Chat;
import org.telegram.tgnet.TLRPC$ChatFull;
import org.telegram.tgnet.TLRPC$DecryptedMessage;
import org.telegram.tgnet.TLRPC$DecryptedMessageAction;
import org.telegram.tgnet.TLRPC$DecryptedMessageMedia;
import org.telegram.tgnet.TLRPC$Document;
import org.telegram.tgnet.TLRPC$DocumentAttribute;
import org.telegram.tgnet.TLRPC$EncryptedChat;
import org.telegram.tgnet.TLRPC$FileLocation;
import org.telegram.tgnet.TLRPC$GeoPoint;
import org.telegram.tgnet.TLRPC$InputCheckPasswordSRP;
import org.telegram.tgnet.TLRPC$InputDocument;
import org.telegram.tgnet.TLRPC$InputEncryptedFile;
import org.telegram.tgnet.TLRPC$InputFile;
import org.telegram.tgnet.TLRPC$InputMedia;
import org.telegram.tgnet.TLRPC$InputPeer;
import org.telegram.tgnet.TLRPC$InputQuickReplyShortcut;
import org.telegram.tgnet.TLRPC$InputReplyTo;
import org.telegram.tgnet.TLRPC$InputStickerSet;
import org.telegram.tgnet.TLRPC$KeyboardButton;
import org.telegram.tgnet.TLRPC$Message;
import org.telegram.tgnet.TLRPC$MessageAction;
import org.telegram.tgnet.TLRPC$MessageEntity;
import org.telegram.tgnet.TLRPC$MessageExtendedMedia;
import org.telegram.tgnet.TLRPC$MessageFwdHeader;
import org.telegram.tgnet.TLRPC$MessageMedia;
import org.telegram.tgnet.TLRPC$MessageReplies;
import org.telegram.tgnet.TLRPC$MessageReplyHeader;
import org.telegram.tgnet.TLRPC$PaymentForm;
import org.telegram.tgnet.TLRPC$PaymentReceipt;
import org.telegram.tgnet.TLRPC$Peer;
import org.telegram.tgnet.TLRPC$Photo;
import org.telegram.tgnet.TLRPC$PhotoSize;
import org.telegram.tgnet.TLRPC$PollAnswer;
import org.telegram.tgnet.TLRPC$PollResults;
import org.telegram.tgnet.TLRPC$ReplyMarkup;
import org.telegram.tgnet.TLRPC$RestrictionReason;
import org.telegram.tgnet.TLRPC$TL_account_getPassword;
import org.telegram.tgnet.TLRPC$TL_botInlineMediaResult;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaAuto;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaContact;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaGeo;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageText;
import org.telegram.tgnet.TLRPC$TL_dataJSON;
import org.telegram.tgnet.TLRPC$TL_decryptedMessage;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionAbortKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionAcceptKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionCommitKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionDeleteMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionFlushHistory;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionNoop;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionNotifyLayer;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionReadMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionRequestKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionResend;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionScreenshotMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionTyping;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaContact;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaGeoPoint;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_decryptedMessage_layer45;
import org.telegram.tgnet.TLRPC$TL_document;
import org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated;
import org.telegram.tgnet.TLRPC$TL_documentAttributeAudio;
import org.telegram.tgnet.TLRPC$TL_documentAttributeFilename;
import org.telegram.tgnet.TLRPC$TL_documentAttributeHasStickers;
import org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize;
import org.telegram.tgnet.TLRPC$TL_documentAttributeSticker;
import org.telegram.tgnet.TLRPC$TL_documentAttributeSticker_layer55;
import org.telegram.tgnet.TLRPC$TL_documentAttributeVideo;
import org.telegram.tgnet.TLRPC$TL_documentAttributeVideo_layer159;
import org.telegram.tgnet.TLRPC$TL_document_layer82;
import org.telegram.tgnet.TLRPC$TL_error;
import org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC$TL_fileLocation_layer82;
import org.telegram.tgnet.TLRPC$TL_forumTopic;
import org.telegram.tgnet.TLRPC$TL_game;
import org.telegram.tgnet.TLRPC$TL_geoPoint;
import org.telegram.tgnet.TLRPC$TL_inputCheckPasswordEmpty;
import org.telegram.tgnet.TLRPC$TL_inputDocument;
import org.telegram.tgnet.TLRPC$TL_inputEncryptedFile;
import org.telegram.tgnet.TLRPC$TL_inputGeoPoint;
import org.telegram.tgnet.TLRPC$TL_inputInvoiceMessage;
import org.telegram.tgnet.TLRPC$TL_inputMediaContact;
import org.telegram.tgnet.TLRPC$TL_inputMediaDice;
import org.telegram.tgnet.TLRPC$TL_inputMediaDocument;
import org.telegram.tgnet.TLRPC$TL_inputMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_inputMediaGame;
import org.telegram.tgnet.TLRPC$TL_inputMediaGeoLive;
import org.telegram.tgnet.TLRPC$TL_inputMediaGeoPoint;
import org.telegram.tgnet.TLRPC$TL_inputMediaPaidMedia;
import org.telegram.tgnet.TLRPC$TL_inputMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_inputMediaPoll;
import org.telegram.tgnet.TLRPC$TL_inputMediaStory;
import org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument;
import org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto;
import org.telegram.tgnet.TLRPC$TL_inputMediaVenue;
import org.telegram.tgnet.TLRPC$TL_inputMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_inputPeerChannel;
import org.telegram.tgnet.TLRPC$TL_inputPeerChat;
import org.telegram.tgnet.TLRPC$TL_inputPeerEmpty;
import org.telegram.tgnet.TLRPC$TL_inputPeerSelf;
import org.telegram.tgnet.TLRPC$TL_inputPeerUser;
import org.telegram.tgnet.TLRPC$TL_inputPhoto;
import org.telegram.tgnet.TLRPC$TL_inputQuickReplyShortcut;
import org.telegram.tgnet.TLRPC$TL_inputReplyToMessage;
import org.telegram.tgnet.TLRPC$TL_inputReplyToStory;
import org.telegram.tgnet.TLRPC$TL_inputSingleMedia;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetID;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetItem;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC$TL_inputUserSelf;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonRow;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonSwitchInline;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonUrl;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonUrlAuth;
import org.telegram.tgnet.TLRPC$TL_message;
import org.telegram.tgnet.TLRPC$TL_messageActionScreenshotTaken;
import org.telegram.tgnet.TLRPC$TL_messageEncryptedAction;
import org.telegram.tgnet.TLRPC$TL_messageEntityBold;
import org.telegram.tgnet.TLRPC$TL_messageEntityCode;
import org.telegram.tgnet.TLRPC$TL_messageEntityCustomEmoji;
import org.telegram.tgnet.TLRPC$TL_messageEntityItalic;
import org.telegram.tgnet.TLRPC$TL_messageEntityPre;
import org.telegram.tgnet.TLRPC$TL_messageEntitySpoiler;
import org.telegram.tgnet.TLRPC$TL_messageEntityTextUrl;
import org.telegram.tgnet.TLRPC$TL_messageEntityUrl;
import org.telegram.tgnet.TLRPC$TL_messageExtendedMedia;
import org.telegram.tgnet.TLRPC$TL_messageFwdHeader;
import org.telegram.tgnet.TLRPC$TL_messageMediaContact;
import org.telegram.tgnet.TLRPC$TL_messageMediaDice;
import org.telegram.tgnet.TLRPC$TL_messageMediaDocument;
import org.telegram.tgnet.TLRPC$TL_messageMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_messageMediaGame;
import org.telegram.tgnet.TLRPC$TL_messageMediaGeo;
import org.telegram.tgnet.TLRPC$TL_messageMediaGeoLive;
import org.telegram.tgnet.TLRPC$TL_messageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_messageMediaPaidMedia;
import org.telegram.tgnet.TLRPC$TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_messageMediaPoll;
import org.telegram.tgnet.TLRPC$TL_messageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_messageReplies;
import org.telegram.tgnet.TLRPC$TL_messageReplyHeader;
import org.telegram.tgnet.TLRPC$TL_messageReplyStoryHeader;
import org.telegram.tgnet.TLRPC$TL_messageService;
import org.telegram.tgnet.TLRPC$TL_message_secret;
import org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer;
import org.telegram.tgnet.TLRPC$TL_messages_editMessage;
import org.telegram.tgnet.TLRPC$TL_messages_forwardMessages;
import org.telegram.tgnet.TLRPC$TL_messages_getBotCallbackAnswer;
import org.telegram.tgnet.TLRPC$TL_messages_getStickerSet;
import org.telegram.tgnet.TLRPC$TL_messages_historyImport;
import org.telegram.tgnet.TLRPC$TL_messages_initHistoryImport;
import org.telegram.tgnet.TLRPC$TL_messages_messages;
import org.telegram.tgnet.TLRPC$TL_messages_requestUrlAuth;
import org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendInlineBotResult;
import org.telegram.tgnet.TLRPC$TL_messages_sendMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendMessage;
import org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendReaction;
import org.telegram.tgnet.TLRPC$TL_messages_sendScreenshotNotification;
import org.telegram.tgnet.TLRPC$TL_messages_sendVote;
import org.telegram.tgnet.TLRPC$TL_messages_startHistoryImport;
import org.telegram.tgnet.TLRPC$TL_messages_stickerSet;
import org.telegram.tgnet.TLRPC$TL_messages_uploadImportedMedia;
import org.telegram.tgnet.TLRPC$TL_messages_uploadMedia;
import org.telegram.tgnet.TLRPC$TL_payments_getPaymentForm;
import org.telegram.tgnet.TLRPC$TL_payments_getPaymentReceipt;
import org.telegram.tgnet.TLRPC$TL_payments_paymentFormStars;
import org.telegram.tgnet.TLRPC$TL_payments_paymentReceiptStars;
import org.telegram.tgnet.TLRPC$TL_peerChannel;
import org.telegram.tgnet.TLRPC$TL_peerUser;
import org.telegram.tgnet.TLRPC$TL_photo;
import org.telegram.tgnet.TLRPC$TL_photoCachedSize;
import org.telegram.tgnet.TLRPC$TL_photoEmpty;
import org.telegram.tgnet.TLRPC$TL_photoPathSize;
import org.telegram.tgnet.TLRPC$TL_photoSize;
import org.telegram.tgnet.TLRPC$TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC$TL_photoSizeProgressive;
import org.telegram.tgnet.TLRPC$TL_photoSize_layer127;
import org.telegram.tgnet.TLRPC$TL_photoStrippedSize;
import org.telegram.tgnet.TLRPC$TL_reactionCustomEmoji;
import org.telegram.tgnet.TLRPC$TL_reactionEmoji;
import org.telegram.tgnet.TLRPC$TL_replyInlineMarkup;
import org.telegram.tgnet.TLRPC$TL_stickers_createStickerSet;
import org.telegram.tgnet.TLRPC$TL_updateEditChannelMessage;
import org.telegram.tgnet.TLRPC$TL_updateEditMessage;
import org.telegram.tgnet.TLRPC$TL_updateMessageID;
import org.telegram.tgnet.TLRPC$TL_updateNewChannelMessage;
import org.telegram.tgnet.TLRPC$TL_updateNewMessage;
import org.telegram.tgnet.TLRPC$TL_updateNewScheduledMessage;
import org.telegram.tgnet.TLRPC$TL_updateQuickReplyMessage;
import org.telegram.tgnet.TLRPC$TL_updateShortSentMessage;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultAccepted;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultDefault;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultRequest;
import org.telegram.tgnet.TLRPC$TL_user;
import org.telegram.tgnet.TLRPC$TL_userContact_old2;
import org.telegram.tgnet.TLRPC$TL_userRequest_old2;
import org.telegram.tgnet.TLRPC$TL_webDocument;
import org.telegram.tgnet.TLRPC$TL_webPageEmpty;
import org.telegram.tgnet.TLRPC$TL_webPagePending;
import org.telegram.tgnet.TLRPC$TL_webPageUrlPending;
import org.telegram.tgnet.TLRPC$Update;
import org.telegram.tgnet.TLRPC$Updates;
import org.telegram.tgnet.TLRPC$User;
import org.telegram.tgnet.TLRPC$UserFull;
import org.telegram.tgnet.TLRPC$VideoSize;
import org.telegram.tgnet.TLRPC$WebDocument;
import org.telegram.tgnet.TLRPC$WebPage;
import org.telegram.tgnet.TLRPC$account_Password;
import org.telegram.tgnet.TLRPC$messages_Messages;
import org.telegram.tgnet.tl.TL_stories$StoryItem;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Business.QuickRepliesController;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.ChatActivity;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedEmojiSpan;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.Point;
import org.telegram.ui.Components.Reactions.ReactionsLayoutInBubble;
import org.telegram.ui.Components.Reactions.ReactionsUtils;
import org.telegram.ui.LaunchActivity;
import org.telegram.ui.PaymentFormActivity;
import org.telegram.ui.Stars.StarsController;
import org.telegram.ui.Stars.StarsIntroActivity;
import org.telegram.ui.Stories.MessageMediaStoryFull;
import org.telegram.ui.TwoStepVerificationActivity;
import org.telegram.ui.TwoStepVerificationSetupActivity;
import org.telegram.ui.bots.BotWebViewSheet;
import org.webrtc.MediaStreamTrack;
/* loaded from: classes.dex */
public class SendMessagesHelper extends BaseController implements NotificationCenter.NotificationCenterDelegate {
    private static final int ERROR_TYPE_FILE_TOO_LARGE = 2;
    private static final int ERROR_TYPE_UNSUPPORTED = 1;
    private static volatile SendMessagesHelper[] Instance = null;
    public static final int MEDIA_TYPE_DICE = 11;
    public static final int MEDIA_TYPE_STORY = 12;
    private static DispatchQueue mediaSendQueue = new DispatchQueue("mediaSendQueue");
    private static ThreadPoolExecutor mediaSendThreadPool;
    private HashMap<String, ArrayList<DelayedMessage>> delayedMessages;
    private SparseArray<TLRPC$Message> editingMessages;
    private HashMap<String, ImportingHistory> importingHistoryFiles;
    private LongSparseArray<ImportingHistory> importingHistoryMap;
    private HashMap<String, ImportingStickers> importingStickersFiles;
    private HashMap<String, ImportingStickers> importingStickersMap;
    private LocationProvider locationProvider;
    private SparseArray<TLRPC$Message> sendingMessages;
    private LongSparseArray<Integer> sendingMessagesIdDialogs;
    private SparseArray<MessageObject> unsentMessages;
    private SparseArray<TLRPC$Message> uploadMessages;
    private LongSparseArray<Integer> uploadingMessagesIdDialogs;
    private LongSparseArray<Long> voteSendTime;
    private HashMap<String, Boolean> waitingForCallback;
    private HashMap<String, List<String>> waitingForCallbackMap;
    private HashMap<String, MessageObject> waitingForLocation;
    private HashMap<String, byte[]> waitingForVote;

    /* loaded from: classes3.dex */
    public static class SendingMediaInfo {
        public boolean canDeleteAfter;
        public String caption;
        public TLRPC$VideoSize emojiMarkup;
        public ArrayList<TLRPC$MessageEntity> entities;
        public boolean forceImage;
        public boolean hasMediaSpoilers;
        public TLRPC$BotInlineResult inlineResult;
        public boolean isVideo;
        public ArrayList<TLRPC$InputDocument> masks;
        public String paintPath;
        public HashMap<String, String> params;
        public String path;
        public MediaController.SearchImage searchImage;
        public long stars;
        public String thumbPath;
        public int ttl;
        public boolean updateStickersOrder;
        public Uri uri;
        public VideoEditedInfo videoEditedInfo;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$sendCallback$26(String str) {
    }

    public static boolean checkUpdateStickersOrder(CharSequence charSequence) {
        if (charSequence instanceof Spannable) {
            for (AnimatedEmojiSpan animatedEmojiSpan : (AnimatedEmojiSpan[]) ((Spannable) charSequence).getSpans(0, charSequence.length(), AnimatedEmojiSpan.class)) {
                if (animatedEmojiSpan.fromEmojiKeyboard) {
                    return true;
                }
            }
        }
        return false;
    }

    public TLRPC$InputReplyTo createReplyInput(TL_stories$StoryItem tL_stories$StoryItem) {
        TLRPC$TL_inputReplyToStory tLRPC$TL_inputReplyToStory = new TLRPC$TL_inputReplyToStory();
        tLRPC$TL_inputReplyToStory.story_id = tL_stories$StoryItem.id;
        tLRPC$TL_inputReplyToStory.peer = getMessagesController().getInputPeer(tL_stories$StoryItem.dialogId);
        return tLRPC$TL_inputReplyToStory;
    }

    public TLRPC$InputReplyTo createReplyInput(int i) {
        return createReplyInput(null, i, 0, null);
    }

    public TLRPC$InputReplyTo createReplyInput(TLRPC$InputPeer tLRPC$InputPeer, int i, int i2, ChatActivity.ReplyQuote replyQuote) {
        MessageObject messageObject;
        TLRPC$TL_inputReplyToMessage tLRPC$TL_inputReplyToMessage = new TLRPC$TL_inputReplyToMessage();
        tLRPC$TL_inputReplyToMessage.reply_to_msg_id = i;
        if (i2 != 0) {
            tLRPC$TL_inputReplyToMessage.flags |= 1;
            tLRPC$TL_inputReplyToMessage.top_msg_id = i2;
        }
        if (replyQuote != null) {
            String text = replyQuote.getText();
            tLRPC$TL_inputReplyToMessage.quote_text = text;
            if (!TextUtils.isEmpty(text)) {
                tLRPC$TL_inputReplyToMessage.flags |= 4;
                ArrayList<TLRPC$MessageEntity> entities = replyQuote.getEntities();
                tLRPC$TL_inputReplyToMessage.quote_entities = entities;
                if (entities != null && !entities.isEmpty()) {
                    tLRPC$TL_inputReplyToMessage.quote_entities = new ArrayList<>(tLRPC$TL_inputReplyToMessage.quote_entities);
                    tLRPC$TL_inputReplyToMessage.flags |= 8;
                }
                tLRPC$TL_inputReplyToMessage.flags |= 16;
                tLRPC$TL_inputReplyToMessage.quote_offset = replyQuote.start;
            }
        }
        if (replyQuote != null && (messageObject = replyQuote.message) != null) {
            TLRPC$InputPeer inputPeer = getMessagesController().getInputPeer(messageObject.getDialogId());
            if (inputPeer != null && !MessageObject.peersEqual(inputPeer, tLRPC$InputPeer)) {
                tLRPC$TL_inputReplyToMessage.flags |= 2;
                tLRPC$TL_inputReplyToMessage.reply_to_peer_id = inputPeer;
            }
        }
        return tLRPC$TL_inputReplyToMessage;
    }

    public TLRPC$InputReplyTo createReplyInput(TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader) {
        TLRPC$TL_inputReplyToMessage tLRPC$TL_inputReplyToMessage = new TLRPC$TL_inputReplyToMessage();
        tLRPC$TL_inputReplyToMessage.reply_to_msg_id = tLRPC$TL_messageReplyHeader.reply_to_msg_id;
        int i = tLRPC$TL_messageReplyHeader.flags;
        if ((i & 2) != 0) {
            tLRPC$TL_inputReplyToMessage.flags |= 1;
            tLRPC$TL_inputReplyToMessage.top_msg_id = tLRPC$TL_messageReplyHeader.reply_to_top_id;
        }
        if ((i & 1) != 0) {
            tLRPC$TL_inputReplyToMessage.flags |= 2;
            tLRPC$TL_inputReplyToMessage.reply_to_peer_id = MessagesController.getInstance(this.currentAccount).getInputPeer(tLRPC$TL_messageReplyHeader.reply_to_peer_id);
        }
        if (tLRPC$TL_messageReplyHeader.quote) {
            int i2 = tLRPC$TL_messageReplyHeader.flags;
            if ((i2 & 64) != 0) {
                tLRPC$TL_inputReplyToMessage.flags |= 4;
                tLRPC$TL_inputReplyToMessage.quote_text = tLRPC$TL_messageReplyHeader.quote_text;
            }
            if ((i2 & 128) != 0) {
                tLRPC$TL_inputReplyToMessage.flags |= 8;
                tLRPC$TL_inputReplyToMessage.quote_entities = tLRPC$TL_messageReplyHeader.quote_entities;
            }
            if ((i2 & 1024) != 0) {
                tLRPC$TL_inputReplyToMessage.flags |= 16;
                tLRPC$TL_inputReplyToMessage.quote_offset = tLRPC$TL_messageReplyHeader.quote_offset;
            }
        }
        return tLRPC$TL_inputReplyToMessage;
    }

    /* loaded from: classes3.dex */
    public class ImportingHistory {
        public long dialogId;
        public double estimatedUploadSpeed;
        public String historyPath;
        public long importId;
        private long lastUploadSize;
        private long lastUploadTime;
        public TLRPC$InputPeer peer;
        public long totalSize;
        public int uploadProgress;
        public long uploadedSize;
        public ArrayList<Uri> mediaPaths = new ArrayList<>();
        public HashSet<String> uploadSet = new HashSet<>();
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public ArrayList<String> uploadMedia = new ArrayList<>();
        public int timeUntilFinish = ConnectionsManager.DEFAULT_DATACENTER_ID;

        public ImportingHistory() {
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void initImport(TLRPC$InputFile tLRPC$InputFile) {
            TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport = new TLRPC$TL_messages_initHistoryImport();
            tLRPC$TL_messages_initHistoryImport.file = tLRPC$InputFile;
            tLRPC$TL_messages_initHistoryImport.media_count = this.mediaPaths.size();
            tLRPC$TL_messages_initHistoryImport.peer = this.peer;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_initHistoryImport, new 1(tLRPC$TL_messages_initHistoryImport), 2);
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 1 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_messages_initHistoryImport val$req;

            1(TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport) {
                this.val$req = tLRPC$TL_messages_initHistoryImport;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
                final TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport = this.val$req;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingHistory$1$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingHistory.1.this.lambda$run$0(tLObject, tLRPC$TL_messages_initHistoryImport, tLRPC$TL_error);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLObject tLObject, TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport, TLRPC$TL_error tLRPC$TL_error) {
                if (!(tLObject instanceof TLRPC$TL_messages_historyImport)) {
                    SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), tLRPC$TL_messages_initHistoryImport, tLRPC$TL_error);
                    return;
                }
                ImportingHistory importingHistory = ImportingHistory.this;
                importingHistory.importId = ((TLRPC$TL_messages_historyImport) tLObject).id;
                importingHistory.uploadSet.remove(importingHistory.historyPath);
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                if (ImportingHistory.this.uploadSet.isEmpty()) {
                    ImportingHistory.this.startImport();
                }
                ImportingHistory.this.lastUploadTime = SystemClock.elapsedRealtime();
                int size = ImportingHistory.this.uploadMedia.size();
                for (int i = 0; i < size; i++) {
                    SendMessagesHelper.this.getFileLoader().uploadFile(ImportingHistory.this.uploadMedia.get(i), false, true, ConnectionsManager.FileTypeFile);
                }
            }
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onFileFailedToUpload(String str) {
            if (str.equals(this.historyPath)) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
                TLRPC$TL_error tLRPC$TL_error = new TLRPC$TL_error();
                tLRPC$TL_error.code = 400;
                tLRPC$TL_error.text = "IMPORT_UPLOAD_FAILED";
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId), new TLRPC$TL_messages_initHistoryImport(), tLRPC$TL_error);
                return;
            }
            this.uploadSet.remove(str);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void addUploadProgress(String str, long j, float f) {
            this.uploadProgresses.put(str, Float.valueOf(f));
            this.uploadSize.put(str, Long.valueOf(j));
            this.uploadedSize = 0L;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long elapsedRealtime = SystemClock.elapsedRealtime();
            if (!str.equals(this.historyPath)) {
                long j2 = this.uploadedSize;
                long j3 = this.lastUploadSize;
                if (j2 != j3) {
                    long j4 = this.lastUploadTime;
                    if (elapsedRealtime != j4) {
                        double d = elapsedRealtime - j4;
                        Double.isNaN(d);
                        double d2 = j2 - j3;
                        Double.isNaN(d2);
                        double d3 = d2 / (d / 1000.0d);
                        double d4 = this.estimatedUploadSpeed;
                        if (d4 == 0.0d) {
                            this.estimatedUploadSpeed = d3;
                        } else {
                            this.estimatedUploadSpeed = (d3 * 0.01d) + (d4 * 0.99d);
                        }
                        double d5 = (this.totalSize - j2) * 1000;
                        double d6 = this.estimatedUploadSpeed;
                        Double.isNaN(d5);
                        this.timeUntilFinish = (int) (d5 / d6);
                        this.lastUploadSize = j2;
                        this.lastUploadTime = elapsedRealtime;
                    }
                }
            }
            int uploadedCount = (int) ((((float) getUploadedCount()) / ((float) getTotalCount())) * 100.0f);
            if (this.uploadProgress != uploadedCount) {
                this.uploadProgress = uploadedCount;
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onMediaImport(String str, long j, TLRPC$InputFile tLRPC$InputFile) {
            String str2;
            addUploadProgress(str, j, 1.0f);
            TLRPC$TL_messages_uploadImportedMedia tLRPC$TL_messages_uploadImportedMedia = new TLRPC$TL_messages_uploadImportedMedia();
            tLRPC$TL_messages_uploadImportedMedia.peer = this.peer;
            tLRPC$TL_messages_uploadImportedMedia.import_id = this.importId;
            tLRPC$TL_messages_uploadImportedMedia.file_name = new File(str).getName();
            MimeTypeMap singleton = MimeTypeMap.getSingleton();
            int lastIndexOf = tLRPC$TL_messages_uploadImportedMedia.file_name.lastIndexOf(46);
            if (lastIndexOf == -1) {
                str2 = "txt";
            } else {
                str2 = tLRPC$TL_messages_uploadImportedMedia.file_name.substring(lastIndexOf + 1).toLowerCase();
            }
            String mimeTypeFromExtension = singleton.getMimeTypeFromExtension(str2);
            if (mimeTypeFromExtension == null) {
                if ("opus".equals(str2)) {
                    mimeTypeFromExtension = "audio/opus";
                } else if ("webp".equals(str2)) {
                    mimeTypeFromExtension = "image/webp";
                } else {
                    mimeTypeFromExtension = "text/plain";
                }
            }
            if (mimeTypeFromExtension.equals("image/jpg") || mimeTypeFromExtension.equals("image/jpeg")) {
                TLRPC$TL_inputMediaUploadedPhoto tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                tLRPC$TL_inputMediaUploadedPhoto.file = tLRPC$InputFile;
                tLRPC$TL_messages_uploadImportedMedia.media = tLRPC$TL_inputMediaUploadedPhoto;
            } else {
                TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                tLRPC$TL_inputMediaUploadedDocument.file = tLRPC$InputFile;
                tLRPC$TL_inputMediaUploadedDocument.mime_type = mimeTypeFromExtension;
                tLRPC$TL_messages_uploadImportedMedia.media = tLRPC$TL_inputMediaUploadedDocument;
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_uploadImportedMedia, new 2(str), 2);
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 2 implements RequestDelegate {
            final /* synthetic */ String val$path;

            2(String str) {
                this.val$path = str;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                final String str = this.val$path;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingHistory$2$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingHistory.2.this.lambda$run$0(str);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(String str) {
                ImportingHistory.this.uploadSet.remove(str);
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                if (ImportingHistory.this.uploadSet.isEmpty()) {
                    ImportingHistory.this.startImport();
                }
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void startImport() {
            TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport = new TLRPC$TL_messages_startHistoryImport();
            tLRPC$TL_messages_startHistoryImport.peer = this.peer;
            tLRPC$TL_messages_startHistoryImport.import_id = this.importId;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_startHistoryImport, new 3(tLRPC$TL_messages_startHistoryImport));
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 3 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_messages_startHistoryImport val$req;

            3(TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport) {
                this.val$req = tLRPC$TL_messages_startHistoryImport;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
                final TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport = this.val$req;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingHistory$3$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingHistory.3.this.lambda$run$0(tLRPC$TL_error, tLRPC$TL_messages_startHistoryImport);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport) {
                SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                if (tLRPC$TL_error == null) {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                } else {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), tLRPC$TL_messages_startHistoryImport, tLRPC$TL_error);
                }
            }
        }

        public void setImportProgress(int i) {
            if (i == 100) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
            }
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
        }
    }

    /* loaded from: classes3.dex */
    public static class ImportingSticker {
        public boolean animated;
        public String emoji;
        public TLRPC$TL_inputStickerSetItem item;
        public String mimeType;
        public String path;
        public boolean validated;
        public VideoEditedInfo videoEditedInfo;

        public void uploadMedia(int i, TLRPC$InputFile tLRPC$InputFile, Runnable runnable) {
            TLRPC$TL_messages_uploadMedia tLRPC$TL_messages_uploadMedia = new TLRPC$TL_messages_uploadMedia();
            tLRPC$TL_messages_uploadMedia.peer = new TLRPC$TL_inputPeerSelf();
            TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
            tLRPC$TL_messages_uploadMedia.media = tLRPC$TL_inputMediaUploadedDocument;
            tLRPC$TL_inputMediaUploadedDocument.file = tLRPC$InputFile;
            tLRPC$TL_inputMediaUploadedDocument.mime_type = this.mimeType;
            ConnectionsManager.getInstance(i).sendRequest(tLRPC$TL_messages_uploadMedia, new 1(runnable), 2);
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 1 implements RequestDelegate {
            final /* synthetic */ Runnable val$onFinish;

            1(Runnable runnable) {
                this.val$onFinish = runnable;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(final TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                final Runnable runnable = this.val$onFinish;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingSticker$1$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingSticker.1.this.lambda$run$0(tLObject, runnable);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLObject tLObject, Runnable runnable) {
                if (tLObject instanceof TLRPC$TL_messageMediaDocument) {
                    ImportingSticker.this.item = new TLRPC$TL_inputStickerSetItem();
                    ImportingSticker.this.item.document = new TLRPC$TL_inputDocument();
                    ImportingSticker importingSticker = ImportingSticker.this;
                    TLRPC$TL_inputStickerSetItem tLRPC$TL_inputStickerSetItem = importingSticker.item;
                    TLRPC$InputDocument tLRPC$InputDocument = tLRPC$TL_inputStickerSetItem.document;
                    TLRPC$Document tLRPC$Document = ((TLRPC$TL_messageMediaDocument) tLObject).document;
                    tLRPC$InputDocument.id = tLRPC$Document.id;
                    tLRPC$InputDocument.access_hash = tLRPC$Document.access_hash;
                    tLRPC$InputDocument.file_reference = tLRPC$Document.file_reference;
                    String str = importingSticker.emoji;
                    if (str == null) {
                        str = "";
                    }
                    tLRPC$TL_inputStickerSetItem.emoji = str;
                    importingSticker.mimeType = tLRPC$Document.mime_type;
                } else {
                    ImportingSticker importingSticker2 = ImportingSticker.this;
                    if (importingSticker2.animated) {
                        importingSticker2.mimeType = "application/x-bad-tgsticker";
                    }
                }
                runnable.run();
            }
        }
    }

    /* loaded from: classes3.dex */
    public class ImportingStickers {
        public double estimatedUploadSpeed;
        private long lastUploadSize;
        private long lastUploadTime;
        public String shortName;
        public String software;
        public String title;
        public long totalSize;
        public int uploadProgress;
        public long uploadedSize;
        public HashMap<String, ImportingSticker> uploadSet = new HashMap<>();
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public ArrayList<ImportingSticker> uploadMedia = new ArrayList<>();
        public int timeUntilFinish = ConnectionsManager.DEFAULT_DATACENTER_ID;

        public ImportingStickers() {
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void initImport() {
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
            this.lastUploadTime = SystemClock.elapsedRealtime();
            int size = this.uploadMedia.size();
            for (int i = 0; i < size; i++) {
                SendMessagesHelper.this.getFileLoader().uploadFile(this.uploadMedia.get(i).path, false, true, ConnectionsManager.FileTypeFile);
            }
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onFileFailedToUpload(String str) {
            ImportingSticker remove = this.uploadSet.remove(str);
            if (remove != null) {
                this.uploadMedia.remove(remove);
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void addUploadProgress(String str, long j, float f) {
            this.uploadProgresses.put(str, Float.valueOf(f));
            this.uploadSize.put(str, Long.valueOf(j));
            this.uploadedSize = 0L;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long elapsedRealtime = SystemClock.elapsedRealtime();
            long j2 = this.uploadedSize;
            long j3 = this.lastUploadSize;
            if (j2 != j3) {
                long j4 = this.lastUploadTime;
                if (elapsedRealtime != j4) {
                    double d = elapsedRealtime - j4;
                    Double.isNaN(d);
                    double d2 = j2 - j3;
                    Double.isNaN(d2);
                    double d3 = d2 / (d / 1000.0d);
                    double d4 = this.estimatedUploadSpeed;
                    if (d4 == 0.0d) {
                        this.estimatedUploadSpeed = d3;
                    } else {
                        this.estimatedUploadSpeed = (d3 * 0.01d) + (d4 * 0.99d);
                    }
                    double d5 = (this.totalSize - j2) * 1000;
                    double d6 = this.estimatedUploadSpeed;
                    Double.isNaN(d5);
                    this.timeUntilFinish = (int) (d5 / d6);
                    this.lastUploadSize = j2;
                    this.lastUploadTime = elapsedRealtime;
                }
            }
            int uploadedCount = (int) ((((float) getUploadedCount()) / ((float) getTotalCount())) * 100.0f);
            if (this.uploadProgress != uploadedCount) {
                this.uploadProgress = uploadedCount;
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onMediaImport(final String str, long j, TLRPC$InputFile tLRPC$InputFile) {
            addUploadProgress(str, j, 1.0f);
            ImportingSticker importingSticker = this.uploadSet.get(str);
            if (importingSticker == null) {
                return;
            }
            importingSticker.uploadMedia(SendMessagesHelper.this.currentAccount, tLRPC$InputFile, new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingStickers$$ExternalSyntheticLambda0
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.ImportingStickers.this.lambda$onMediaImport$0(str);
                }
            });
        }

        /* JADX INFO: Access modifiers changed from: private */
        public /* synthetic */ void lambda$onMediaImport$0(String str) {
            this.uploadSet.remove(str);
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
            if (this.uploadSet.isEmpty()) {
                startImport();
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void startImport() {
            TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet = new TLRPC$TL_stickers_createStickerSet();
            tLRPC$TL_stickers_createStickerSet.user_id = new TLRPC$TL_inputUserSelf();
            tLRPC$TL_stickers_createStickerSet.title = this.title;
            tLRPC$TL_stickers_createStickerSet.short_name = this.shortName;
            String str = this.software;
            if (str != null) {
                tLRPC$TL_stickers_createStickerSet.software = str;
                tLRPC$TL_stickers_createStickerSet.flags |= 8;
            }
            int size = this.uploadMedia.size();
            for (int i = 0; i < size; i++) {
                TLRPC$TL_inputStickerSetItem tLRPC$TL_inputStickerSetItem = this.uploadMedia.get(i).item;
                if (tLRPC$TL_inputStickerSetItem != null) {
                    tLRPC$TL_stickers_createStickerSet.stickers.add(tLRPC$TL_inputStickerSetItem);
                }
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_stickers_createStickerSet, new 1(tLRPC$TL_stickers_createStickerSet));
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 1 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_stickers_createStickerSet val$req;

            1(TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet) {
                this.val$req = tLRPC$TL_stickers_createStickerSet;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
                final TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet = this.val$req;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingStickers$1$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingStickers.1.this.lambda$run$0(tLRPC$TL_error, tLRPC$TL_stickers_createStickerSet, tLObject);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet, TLObject tLObject) {
                SendMessagesHelper.this.importingStickersMap.remove(ImportingStickers.this.shortName);
                if (tLRPC$TL_error == null) {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName);
                } else {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName, tLRPC$TL_stickers_createStickerSet, tLRPC$TL_error);
                }
                if (tLObject instanceof TLRPC$TL_messages_stickerSet) {
                    NotificationCenter notificationCenter = SendMessagesHelper.this.getNotificationCenter();
                    int i = NotificationCenter.stickersImportComplete;
                    if (notificationCenter.hasObservers(i)) {
                        SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(i, tLObject);
                    } else {
                        SendMessagesHelper.this.getMediaDataController().toggleStickerSet(null, tLObject, 2, null, false, false);
                    }
                }
            }
        }

        public void setImportProgress(int i) {
            if (i == 100) {
                SendMessagesHelper.this.importingStickersMap.remove(this.shortName);
            }
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
        }
    }

    static {
        int availableProcessors = Runtime.getRuntime().availableProcessors();
        mediaSendThreadPool = new ThreadPoolExecutor(availableProcessors, availableProcessors, 60L, TimeUnit.SECONDS, new LinkedBlockingQueue());
        Instance = new SendMessagesHelper[4];
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* loaded from: classes3.dex */
    public static class MediaSendPrepareWorker {
        public volatile String parentObject;
        public volatile TLRPC$TL_photo photo;
        public CountDownLatch sync;

        private MediaSendPrepareWorker() {
        }
    }

    @SuppressLint({"MissingPermission"})
    /* loaded from: classes3.dex */
    public static class LocationProvider {
        private LocationProviderDelegate delegate;
        private Location lastKnownLocation;
        private LocationManager locationManager;
        private Runnable locationQueryCancelRunnable;
        private GpsLocationListener gpsLocationListener = new GpsLocationListener();
        private GpsLocationListener networkLocationListener = new GpsLocationListener();

        /* loaded from: classes3.dex */
        public interface LocationProviderDelegate {
            void onLocationAcquired(Location location);

            void onUnableLocationAcquire();
        }

        /* JADX INFO: Access modifiers changed from: private */
        /* loaded from: classes3.dex */
        public class GpsLocationListener implements LocationListener {
            @Override // android.location.LocationListener
            public void onProviderDisabled(String str) {
            }

            @Override // android.location.LocationListener
            public void onProviderEnabled(String str) {
            }

            @Override // android.location.LocationListener
            public void onStatusChanged(String str, int i, Bundle bundle) {
            }

            private GpsLocationListener() {
            }

            @Override // android.location.LocationListener
            public void onLocationChanged(Location location) {
                if (location == null || LocationProvider.this.locationQueryCancelRunnable == null) {
                    return;
                }
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("found location " + location);
                }
                LocationProvider.this.lastKnownLocation = location;
                if (location.getAccuracy() < 100.0f) {
                    if (LocationProvider.this.delegate != null) {
                        LocationProvider.this.delegate.onLocationAcquired(location);
                    }
                    if (LocationProvider.this.locationQueryCancelRunnable != null) {
                        AndroidUtilities.cancelRunOnUIThread(LocationProvider.this.locationQueryCancelRunnable);
                    }
                    LocationProvider.this.cleanup();
                }
            }
        }

        public LocationProvider() {
        }

        public LocationProvider(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        public void setDelegate(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void cleanup() {
            this.locationManager.removeUpdates(this.gpsLocationListener);
            this.locationManager.removeUpdates(this.networkLocationListener);
            this.lastKnownLocation = null;
            this.locationQueryCancelRunnable = null;
        }

        public void start() {
            if (this.locationManager == null) {
                this.locationManager = (LocationManager) ApplicationLoader.applicationContext.getSystemService("location");
            }
            try {
                this.locationManager.requestLocationUpdates("gps", 1L, 0.0f, this.gpsLocationListener);
            } catch (Exception e) {
                FileLog.e(e);
            }
            try {
                this.locationManager.requestLocationUpdates("network", 1L, 0.0f, this.networkLocationListener);
            } catch (Exception e2) {
                FileLog.e(e2);
            }
            try {
                Location lastKnownLocation = this.locationManager.getLastKnownLocation("gps");
                this.lastKnownLocation = lastKnownLocation;
                if (lastKnownLocation == null) {
                    this.lastKnownLocation = this.locationManager.getLastKnownLocation("network");
                }
            } catch (Exception e3) {
                FileLog.e(e3);
            }
            Runnable runnable = this.locationQueryCancelRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            Runnable runnable2 = new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.LocationProvider.this.lambda$start$0();
                }
            };
            this.locationQueryCancelRunnable = runnable2;
            AndroidUtilities.runOnUIThread(runnable2, 5000L);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public /* synthetic */ void lambda$start$0() {
            LocationProviderDelegate locationProviderDelegate = this.delegate;
            if (locationProviderDelegate != null) {
                Location location = this.lastKnownLocation;
                if (location != null) {
                    locationProviderDelegate.onLocationAcquired(location);
                } else {
                    locationProviderDelegate.onUnableLocationAcquire();
                }
            }
            cleanup();
        }

        public void stop() {
            if (this.locationManager == null) {
                return;
            }
            Runnable runnable = this.locationQueryCancelRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            cleanup();
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    /* loaded from: classes3.dex */
    public class DelayedMessageSendAfterRequest {
        public DelayedMessage delayedMessage;
        public MessageObject msgObj;
        public ArrayList<MessageObject> msgObjs;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public TLObject request;
        public boolean scheduled;

        protected DelayedMessageSendAfterRequest() {
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    /* loaded from: classes3.dex */
    public class DelayedMessage {
        public TLRPC$EncryptedChat encryptedChat;
        public HashMap<Object, Object> extraHashMap;
        public int finalGroupMessage;
        public long groupId;
        public String httpLocation;
        public ArrayList<String> httpLocations;
        public ArrayList<TLRPC$InputMedia> inputMedias;
        public TLRPC$InputMedia inputUploadMedia;
        public TLObject locationParent;
        public ArrayList<TLRPC$PhotoSize> locations;
        public ArrayList<MessageObject> messageObjects;
        public ArrayList<TLRPC$Message> messages;
        public MessageObject obj;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public boolean paidMedia;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public long peer;
        public boolean performMediaUpload;
        public TLRPC$PhotoSize photoSize;
        ArrayList<DelayedMessageSendAfterRequest> requests;
        private boolean retriedToSend;
        public boolean[] retriedToSendArray;
        public boolean scheduled;
        public TLObject sendEncryptedRequest;
        public TLObject sendRequest;
        public int topMessageId;
        public int type;
        public VideoEditedInfo videoEditedInfo;
        public ArrayList<VideoEditedInfo> videoEditedInfos;

        public boolean getRetriedToSend(int i) {
            boolean[] zArr;
            if (i < 0 || (zArr = this.retriedToSendArray) == null || i >= zArr.length) {
                return this.retriedToSend;
            }
            return zArr[i];
        }

        public void setRetriedToSend(int i, boolean z) {
            if (i < 0) {
                this.retriedToSend = z;
                return;
            }
            if (this.retriedToSendArray == null) {
                this.retriedToSendArray = new boolean[this.messageObjects.size()];
            }
            this.retriedToSendArray[i] = z;
        }

        public DelayedMessage(long j) {
            this.peer = j;
        }

        public void initForGroup(long j) {
            this.type = 4;
            this.groupId = j;
            this.messageObjects = new ArrayList<>();
            this.messages = new ArrayList<>();
            this.inputMedias = new ArrayList<>();
            this.originalPaths = new ArrayList<>();
            this.parentObjects = new ArrayList<>();
            this.extraHashMap = new HashMap<>();
            this.locations = new ArrayList<>();
            this.httpLocations = new ArrayList<>();
            this.videoEditedInfos = new ArrayList<>();
        }

        public void addDelayedRequest(TLObject tLObject, MessageObject messageObject, String str, Object obj, DelayedMessage delayedMessage, boolean z) {
            DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = new DelayedMessageSendAfterRequest();
            delayedMessageSendAfterRequest.request = tLObject;
            delayedMessageSendAfterRequest.msgObj = messageObject;
            delayedMessageSendAfterRequest.originalPath = str;
            delayedMessageSendAfterRequest.delayedMessage = delayedMessage;
            delayedMessageSendAfterRequest.parentObject = obj;
            delayedMessageSendAfterRequest.scheduled = z;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(delayedMessageSendAfterRequest);
        }

        public void addDelayedRequest(TLObject tLObject, ArrayList<MessageObject> arrayList, ArrayList<String> arrayList2, ArrayList<Object> arrayList3, DelayedMessage delayedMessage, boolean z) {
            DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = new DelayedMessageSendAfterRequest();
            delayedMessageSendAfterRequest.request = tLObject;
            delayedMessageSendAfterRequest.msgObjs = arrayList;
            delayedMessageSendAfterRequest.originalPaths = arrayList2;
            delayedMessageSendAfterRequest.delayedMessage = delayedMessage;
            delayedMessageSendAfterRequest.parentObjects = arrayList3;
            delayedMessageSendAfterRequest.scheduled = z;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(delayedMessageSendAfterRequest);
        }

        public void sendDelayedRequests() {
            ArrayList<DelayedMessageSendAfterRequest> arrayList = this.requests;
            if (arrayList != null) {
                int i = this.type;
                if (i == 4 || i == 0) {
                    int size = arrayList.size();
                    for (int i2 = 0; i2 < size; i2++) {
                        DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = this.requests.get(i2);
                        TLObject tLObject = delayedMessageSendAfterRequest.request;
                        if (tLObject instanceof TLRPC$TL_messages_sendEncryptedMultiMedia) {
                            SendMessagesHelper.this.getSecretChatHelper().performSendEncryptedRequest((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessageSendAfterRequest.request, this);
                        } else if (tLObject instanceof TLRPC$TL_messages_sendMultiMedia) {
                            SendMessagesHelper.this.performSendMessageRequestMulti((TLRPC$TL_messages_sendMultiMedia) tLObject, delayedMessageSendAfterRequest.msgObjs, delayedMessageSendAfterRequest.originalPaths, delayedMessageSendAfterRequest.parentObjects, delayedMessageSendAfterRequest.delayedMessage, delayedMessageSendAfterRequest.scheduled);
                        } else {
                            if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
                                TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = (TLRPC$TL_messages_sendMedia) tLObject;
                                if (tLRPC$TL_messages_sendMedia.media instanceof TLRPC$TL_inputMediaPaidMedia) {
                                    SendMessagesHelper.this.performSendMessageRequestMulti(tLRPC$TL_messages_sendMedia, delayedMessageSendAfterRequest.msgObjs, delayedMessageSendAfterRequest.originalPaths, delayedMessageSendAfterRequest.parentObjects, delayedMessageSendAfterRequest.delayedMessage, delayedMessageSendAfterRequest.scheduled);
                                }
                            }
                            SendMessagesHelper.this.performSendMessageRequest(tLObject, delayedMessageSendAfterRequest.msgObj, delayedMessageSendAfterRequest.originalPath, delayedMessageSendAfterRequest.delayedMessage, delayedMessageSendAfterRequest.parentObject, null, delayedMessageSendAfterRequest.scheduled);
                        }
                    }
                    this.requests = null;
                }
            }
        }

        public void markAsError() {
            if (this.type == 4) {
                for (int i = 0; i < this.messageObjects.size(); i++) {
                    MessageObject messageObject = this.messageObjects.get(i);
                    SendMessagesHelper.this.getMessagesStorage().markMessageAsSendError(messageObject.messageOwner, messageObject.scheduled ? 1 : 0);
                    messageObject.messageOwner.send_state = 2;
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                    SendMessagesHelper.this.processSentMessage(messageObject.getId());
                    SendMessagesHelper.this.removeFromUploadingMessages(messageObject.getId(), this.scheduled);
                }
                HashMap hashMap = SendMessagesHelper.this.delayedMessages;
                hashMap.remove("group_" + this.groupId);
            } else {
                MessagesStorage messagesStorage = SendMessagesHelper.this.getMessagesStorage();
                MessageObject messageObject2 = this.obj;
                messagesStorage.markMessageAsSendError(messageObject2.messageOwner, messageObject2.scheduled ? 1 : 0);
                this.obj.messageOwner.send_state = 2;
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(this.obj.getId()));
                SendMessagesHelper.this.processSentMessage(this.obj.getId());
                SendMessagesHelper.this.removeFromUploadingMessages(this.obj.getId(), this.scheduled);
            }
            sendDelayedRequests();
        }
    }

    public static SendMessagesHelper getInstance(int i) {
        SendMessagesHelper sendMessagesHelper = Instance[i];
        if (sendMessagesHelper == null) {
            synchronized (SendMessagesHelper.class) {
                try {
                    sendMessagesHelper = Instance[i];
                    if (sendMessagesHelper == null) {
                        SendMessagesHelper[] sendMessagesHelperArr = Instance;
                        SendMessagesHelper sendMessagesHelper2 = new SendMessagesHelper(i);
                        sendMessagesHelperArr[i] = sendMessagesHelper2;
                        sendMessagesHelper = sendMessagesHelper2;
                    }
                } finally {
                }
            }
        }
        return sendMessagesHelper;
    }

    public SendMessagesHelper(int i) {
        super(i);
        this.delayedMessages = new HashMap<>();
        this.unsentMessages = new SparseArray<>();
        this.sendingMessages = new SparseArray<>();
        this.editingMessages = new SparseArray<>();
        this.uploadMessages = new SparseArray<>();
        this.sendingMessagesIdDialogs = new LongSparseArray<>();
        this.uploadingMessagesIdDialogs = new LongSparseArray<>();
        this.waitingForLocation = new HashMap<>();
        this.waitingForCallback = new HashMap<>();
        this.waitingForCallbackMap = new HashMap<>();
        this.waitingForVote = new HashMap<>();
        this.voteSendTime = new LongSparseArray<>();
        this.importingHistoryFiles = new HashMap<>();
        this.importingHistoryMap = new LongSparseArray<>();
        this.importingStickersFiles = new HashMap<>();
        this.importingStickersMap = new HashMap<>();
        this.locationProvider = new LocationProvider(new LocationProvider.LocationProviderDelegate() { // from class: org.telegram.messenger.SendMessagesHelper.1
            @Override // org.telegram.messenger.SendMessagesHelper.LocationProvider.LocationProviderDelegate
            public void onLocationAcquired(Location location) {
                SendMessagesHelper.this.sendLocation(location);
                SendMessagesHelper.this.waitingForLocation.clear();
            }

            @Override // org.telegram.messenger.SendMessagesHelper.LocationProvider.LocationProviderDelegate
            public void onUnableLocationAcquire() {
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.wasUnableToFindCurrentLocation, new HashMap(SendMessagesHelper.this.waitingForLocation));
                SendMessagesHelper.this.waitingForLocation.clear();
            }
        });
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda15
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$new$0();
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$new$0() {
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadProgressChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingStarted);
        getNotificationCenter().addObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidFailedLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoadFailed);
    }

    public void cleanup() {
        this.delayedMessages.clear();
        this.unsentMessages.clear();
        this.sendingMessages.clear();
        this.editingMessages.clear();
        this.sendingMessagesIdDialogs.clear();
        this.uploadMessages.clear();
        this.uploadingMessagesIdDialogs.clear();
        this.waitingForLocation.clear();
        this.waitingForCallback.clear();
        this.waitingForVote.clear();
        this.importingHistoryFiles.clear();
        this.importingHistoryMap.clear();
        this.importingStickersFiles.clear();
        this.importingStickersMap.clear();
        this.locationProvider.stop();
    }

    @Override // org.telegram.messenger.NotificationCenter.NotificationCenterDelegate
    public void didReceivedNotification(int i, int i2, Object... objArr) {
        String str;
        ArrayList<DelayedMessage> arrayList;
        char c;
        final MessageObject messageObject;
        String str2;
        ArrayList<DelayedMessage> arrayList2;
        ArrayList<DelayedMessage> arrayList3;
        int i3;
        int i4;
        int i5;
        int i6;
        TLRPC$InputMedia tLRPC$InputMedia;
        ArrayList<DelayedMessage> arrayList4;
        TLRPC$InputFile tLRPC$InputFile;
        String str3;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile;
        int i7;
        TLObject tLObject;
        TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage;
        int i8;
        ArrayList<DelayedMessage> arrayList5;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile2;
        String str4;
        int i9;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$PhotoSize tLRPC$PhotoSize2;
        MessageObject messageObject2;
        VideoEditedInfo videoEditedInfo;
        int i10 = 0;
        if (i == NotificationCenter.fileUploadProgressChanged) {
            String str5 = (String) objArr[0];
            ImportingHistory importingHistory = this.importingHistoryFiles.get(str5);
            if (importingHistory != null) {
                Long l = (Long) objArr[1];
                importingHistory.addUploadProgress(str5, l.longValue(), ((float) l.longValue()) / ((float) ((Long) objArr[2]).longValue()));
            }
            ImportingStickers importingStickers = this.importingStickersFiles.get(str5);
            if (importingStickers != null) {
                Long l2 = (Long) objArr[1];
                importingStickers.addUploadProgress(str5, l2.longValue(), ((float) l2.longValue()) / ((float) ((Long) objArr[2]).longValue()));
            }
        } else if (i == NotificationCenter.fileUploaded) {
            String str6 = (String) objArr[0];
            TLRPC$InputFile tLRPC$InputFile2 = (TLRPC$InputFile) objArr[1];
            TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile3 = (TLRPC$InputEncryptedFile) objArr[2];
            ImportingHistory importingHistory2 = this.importingHistoryFiles.get(str6);
            if (importingHistory2 != null) {
                if (str6.equals(importingHistory2.historyPath)) {
                    importingHistory2.initImport(tLRPC$InputFile2);
                } else {
                    importingHistory2.onMediaImport(str6, ((Long) objArr[5]).longValue(), tLRPC$InputFile2);
                }
            }
            ImportingStickers importingStickers2 = this.importingStickersFiles.get(str6);
            if (importingStickers2 != null) {
                importingStickers2.onMediaImport(str6, ((Long) objArr[5]).longValue(), tLRPC$InputFile2);
            }
            ArrayList<DelayedMessage> arrayList6 = this.delayedMessages.get(str6);
            if (arrayList6 != null) {
                int i11 = 0;
                while (i11 < arrayList6.size()) {
                    DelayedMessage delayedMessage = arrayList6.get(i11);
                    TLObject tLObject2 = delayedMessage.sendRequest;
                    if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
                        tLRPC$InputMedia = ((TLRPC$TL_messages_sendMedia) tLObject2).media;
                        if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPaidMedia) {
                            HashMap<Object, Object> hashMap = delayedMessage.extraHashMap;
                            if (hashMap == null) {
                                tLRPC$InputMedia = ((TLRPC$TL_inputMediaPaidMedia) tLRPC$InputMedia).extended_media.get(i10);
                            } else {
                                tLRPC$InputMedia = (TLRPC$InputMedia) hashMap.get(str6);
                            }
                        }
                    } else if (tLObject2 instanceof TLRPC$TL_messages_editMessage) {
                        tLRPC$InputMedia = ((TLRPC$TL_messages_editMessage) tLObject2).media;
                    } else {
                        tLRPC$InputMedia = tLObject2 instanceof TLRPC$TL_messages_sendMultiMedia ? (TLRPC$InputMedia) delayedMessage.extraHashMap.get(str6) : null;
                    }
                    if (tLRPC$InputFile2 == null || tLRPC$InputMedia == null) {
                        int i12 = i11;
                        arrayList4 = arrayList6;
                        tLRPC$InputFile = tLRPC$InputFile2;
                        str3 = str6;
                        tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile3;
                        if (tLRPC$InputEncryptedFile == null || (tLObject = delayedMessage.sendEncryptedRequest) == null) {
                            i7 = i12;
                        } else {
                            if (delayedMessage.type == 4) {
                                TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) tLObject;
                                TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile4 = (TLRPC$InputEncryptedFile) delayedMessage.extraHashMap.get(str3);
                                int indexOf = tLRPC$TL_messages_sendEncryptedMultiMedia.files.indexOf(tLRPC$InputEncryptedFile4);
                                if (indexOf >= 0) {
                                    tLRPC$TL_messages_sendEncryptedMultiMedia.files.set(indexOf, tLRPC$InputEncryptedFile);
                                    if (tLRPC$InputEncryptedFile4.id == 1) {
                                        delayedMessage.photoSize = (TLRPC$PhotoSize) delayedMessage.extraHashMap.get(str3 + "_t");
                                    }
                                    tLRPC$TL_decryptedMessage = tLRPC$TL_messages_sendEncryptedMultiMedia.messages.get(indexOf);
                                } else {
                                    tLRPC$TL_decryptedMessage = null;
                                }
                            } else {
                                tLRPC$TL_decryptedMessage = (TLRPC$TL_decryptedMessage) tLObject;
                            }
                            if (tLRPC$TL_decryptedMessage != null) {
                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                                if ((tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaVideo) || (tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaPhoto) || (tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaDocument)) {
                                    tLRPC$TL_decryptedMessage.media.size = ((Long) objArr[5]).longValue();
                                }
                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia2 = tLRPC$TL_decryptedMessage.media;
                                tLRPC$DecryptedMessageMedia2.key = (byte[]) objArr[3];
                                tLRPC$DecryptedMessageMedia2.iv = (byte[]) objArr[4];
                                if (delayedMessage.type == 4) {
                                    uploadMultiMedia(delayedMessage, null, tLRPC$InputEncryptedFile, str3);
                                } else {
                                    SecretChatHelper secretChatHelper = getSecretChatHelper();
                                    MessageObject messageObject3 = delayedMessage.obj;
                                    secretChatHelper.performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject3.messageOwner, delayedMessage.encryptedChat, tLRPC$InputEncryptedFile, delayedMessage.originalPath, messageObject3);
                                }
                            }
                            arrayList4.remove(i12);
                            i7 = i12 - 1;
                        }
                    } else {
                        int i13 = delayedMessage.type;
                        if (i13 == 0) {
                            tLRPC$InputMedia.file = tLRPC$InputFile2;
                            i8 = i11;
                            tLRPC$InputEncryptedFile2 = tLRPC$InputEncryptedFile3;
                            tLRPC$InputFile = tLRPC$InputFile2;
                            str4 = str6;
                            arrayList5 = arrayList6;
                            performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, delayedMessage, true, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                        } else {
                            i8 = i11;
                            arrayList5 = arrayList6;
                            tLRPC$InputEncryptedFile2 = tLRPC$InputEncryptedFile3;
                            tLRPC$InputFile = tLRPC$InputFile2;
                            str4 = str6;
                            if (i13 == 1) {
                                if (tLRPC$InputMedia.file == null) {
                                    tLRPC$InputMedia.file = tLRPC$InputFile;
                                    if (tLRPC$InputMedia.thumb == null && (tLRPC$PhotoSize2 = delayedMessage.photoSize) != null && tLRPC$PhotoSize2.location != null && ((messageObject2 = delayedMessage.obj) == null || (videoEditedInfo = messageObject2.videoEditedInfo) == null || !videoEditedInfo.isSticker)) {
                                        performSendDelayedMessage(delayedMessage);
                                    } else {
                                        performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                    }
                                } else {
                                    tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                    tLRPC$InputMedia.flags |= 4;
                                    performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                }
                            } else if (i13 == 2) {
                                if (tLRPC$InputMedia.file == null) {
                                    tLRPC$InputMedia.file = tLRPC$InputFile;
                                    if (tLRPC$InputMedia.thumb == null && (tLRPC$PhotoSize = delayedMessage.photoSize) != null && tLRPC$PhotoSize.location != null) {
                                        performSendDelayedMessage(delayedMessage);
                                    } else {
                                        performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                    }
                                } else {
                                    tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                    tLRPC$InputMedia.flags |= 4;
                                    performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                }
                            } else if (i13 == 3) {
                                tLRPC$InputMedia.file = tLRPC$InputFile;
                                performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                            } else {
                                if (i13 != 4) {
                                    str3 = str4;
                                } else if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument) {
                                    if (tLRPC$InputMedia.file == null) {
                                        tLRPC$InputMedia.file = tLRPC$InputFile;
                                        HashMap<Object, Object> hashMap2 = delayedMessage.extraHashMap;
                                        StringBuilder sb = new StringBuilder();
                                        str3 = str4;
                                        sb.append(str3);
                                        sb.append("_i");
                                        int indexOf2 = delayedMessage.messageObjects.indexOf((MessageObject) hashMap2.get(sb.toString()));
                                        TLRPC$PhotoSize tLRPC$PhotoSize3 = (TLRPC$PhotoSize) delayedMessage.extraHashMap.get(str3 + "_t");
                                        delayedMessage.photoSize = tLRPC$PhotoSize3;
                                        if (tLRPC$InputMedia.thumb == null && tLRPC$PhotoSize3 != null && tLRPC$PhotoSize3.location != null) {
                                            delayedMessage.performMediaUpload = true;
                                            performSendDelayedMessage(delayedMessage, indexOf2);
                                            i9 = i8;
                                            arrayList4 = arrayList5;
                                            arrayList4.remove(i9);
                                            i7 = i9 - 1;
                                            tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                                        } else {
                                            uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, str3);
                                        }
                                    } else {
                                        str3 = str4;
                                        tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                        tLRPC$InputMedia.flags |= 4;
                                        uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, (String) delayedMessage.extraHashMap.get(str3 + "_o"));
                                    }
                                } else {
                                    str3 = str4;
                                    tLRPC$InputMedia.file = tLRPC$InputFile;
                                    uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, str3);
                                }
                                i9 = i8;
                                arrayList4 = arrayList5;
                                arrayList4.remove(i9);
                                i7 = i9 - 1;
                                tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                            }
                        }
                        i9 = i8;
                        str3 = str4;
                        arrayList4 = arrayList5;
                        arrayList4.remove(i9);
                        i7 = i9 - 1;
                        tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                    }
                    i11 = i7 + 1;
                    tLRPC$InputEncryptedFile3 = tLRPC$InputEncryptedFile;
                    str6 = str3;
                    tLRPC$InputFile2 = tLRPC$InputFile;
                    i10 = 0;
                    arrayList6 = arrayList4;
                }
                ArrayList<DelayedMessage> arrayList7 = arrayList6;
                String str7 = str6;
                if (arrayList7.isEmpty()) {
                    this.delayedMessages.remove(str7);
                }
            }
        } else if (i == NotificationCenter.fileUploadFailed) {
            String str8 = (String) objArr[0];
            boolean booleanValue = ((Boolean) objArr[1]).booleanValue();
            ImportingHistory importingHistory3 = this.importingHistoryFiles.get(str8);
            if (importingHistory3 != null) {
                importingHistory3.onFileFailedToUpload(str8);
            }
            ImportingStickers importingStickers3 = this.importingStickersFiles.get(str8);
            if (importingStickers3 != null) {
                importingStickers3.onFileFailedToUpload(str8);
            }
            ArrayList<DelayedMessage> arrayList8 = this.delayedMessages.get(str8);
            if (arrayList8 != null) {
                int i14 = 0;
                while (i14 < arrayList8.size()) {
                    DelayedMessage delayedMessage2 = arrayList8.get(i14);
                    if ((booleanValue && delayedMessage2.sendEncryptedRequest != null) || (!booleanValue && delayedMessage2.sendRequest != null)) {
                        delayedMessage2.markAsError();
                        arrayList8.remove(i14);
                        i14--;
                    }
                    i14++;
                }
                if (arrayList8.isEmpty()) {
                    this.delayedMessages.remove(str8);
                }
            }
        } else if (i == NotificationCenter.filePreparingStarted) {
            MessageObject messageObject4 = (MessageObject) objArr[0];
            if (messageObject4.getId() == 0) {
                return;
            }
            String str9 = (String) objArr[1];
            ArrayList<DelayedMessage> arrayList9 = this.delayedMessages.get(messageObject4.messageOwner.attachPath);
            if (arrayList9 != null) {
                int i15 = 0;
                while (true) {
                    if (i15 >= arrayList9.size()) {
                        break;
                    }
                    DelayedMessage delayedMessage3 = arrayList9.get(i15);
                    if (delayedMessage3.type == 4) {
                        int indexOf3 = delayedMessage3.messageObjects.indexOf(messageObject4);
                        delayedMessage3.photoSize = (TLRPC$PhotoSize) delayedMessage3.extraHashMap.get(messageObject4.messageOwner.attachPath + "_t");
                        delayedMessage3.performMediaUpload = true;
                        performSendDelayedMessage(delayedMessage3, indexOf3);
                        arrayList9.remove(i15);
                        break;
                    } else if (delayedMessage3.obj == messageObject4) {
                        delayedMessage3.videoEditedInfo = null;
                        performSendDelayedMessage(delayedMessage3);
                        arrayList9.remove(i15);
                        break;
                    } else {
                        i15++;
                    }
                }
                if (arrayList9.isEmpty()) {
                    this.delayedMessages.remove(messageObject4.messageOwner.attachPath);
                }
            }
        } else if (i == NotificationCenter.fileNewChunkAvailable) {
            MessageObject messageObject5 = (MessageObject) objArr[0];
            if (messageObject5.getId() == 0) {
                return;
            }
            String str10 = (String) objArr[1];
            long longValue = ((Long) objArr[2]).longValue();
            long longValue2 = ((Long) objArr[3]).longValue();
            getFileLoader().checkUploadNewDataAvailable(str10, DialogObject.isEncryptedDialog(messageObject5.getDialogId()), longValue, longValue2, (Float) objArr[4]);
            if (longValue2 == 0 || (arrayList3 = this.delayedMessages.get(messageObject5.messageOwner.attachPath)) == null) {
                return;
            }
            for (int i16 = 0; i16 < arrayList3.size(); i16++) {
                DelayedMessage delayedMessage4 = arrayList3.get(i16);
                if (delayedMessage4.type == 4) {
                    int i17 = 0;
                    while (true) {
                        if (i17 >= delayedMessage4.messageObjects.size()) {
                            break;
                        }
                        MessageObject messageObject6 = delayedMessage4.messageObjects.get(i17);
                        if (messageObject6 == messageObject5) {
                            delayedMessage4.obj.shouldRemoveVideoEditedInfo = true;
                            messageObject6.messageOwner.params.remove("ve");
                            TLRPC$Document document = delayedMessage4.obj.getDocument();
                            if (document != null) {
                                document.size = longValue2;
                            }
                            ArrayList<TLRPC$Message> arrayList10 = new ArrayList<>();
                            arrayList10.add(messageObject6.messageOwner);
                            if (messageObject6.isQuickReply()) {
                                i5 = messageObject6.getQuickReplyId();
                                i6 = 5;
                            } else if (messageObject6.scheduled) {
                                i5 = 0;
                                i6 = 1;
                            } else {
                                i5 = 0;
                                i6 = 0;
                            }
                            if (!delayedMessage4.paidMedia || i17 == 0) {
                                getMessagesStorage().putMessages(arrayList10, false, true, false, 0, i6, i5);
                            }
                        } else {
                            i17++;
                        }
                    }
                } else {
                    MessageObject messageObject7 = delayedMessage4.obj;
                    if (messageObject7 == messageObject5) {
                        messageObject7.shouldRemoveVideoEditedInfo = true;
                        messageObject7.messageOwner.params.remove("ve");
                        TLRPC$Document document2 = delayedMessage4.obj.getDocument();
                        if (document2 != null) {
                            document2.size = longValue2;
                        }
                        ArrayList<TLRPC$Message> arrayList11 = new ArrayList<>();
                        arrayList11.add(delayedMessage4.obj.messageOwner);
                        if (delayedMessage4.obj.isQuickReply()) {
                            i3 = delayedMessage4.obj.getQuickReplyId();
                            i4 = 5;
                        } else {
                            i3 = 0;
                            i4 = delayedMessage4.obj.scheduled ? 1 : 0;
                        }
                        getMessagesStorage().putMessages(arrayList11, false, true, false, 0, i4, i3);
                        return;
                    }
                }
            }
        } else if (i == NotificationCenter.filePreparingFailed) {
            MessageObject messageObject8 = (MessageObject) objArr[0];
            if (messageObject8.getId() == 0 || (arrayList2 = this.delayedMessages.get((str2 = (String) objArr[1]))) == null) {
                return;
            }
            int i18 = 0;
            while (i18 < arrayList2.size()) {
                DelayedMessage delayedMessage5 = arrayList2.get(i18);
                if (delayedMessage5.type == 4) {
                    for (int i19 = 0; i19 < delayedMessage5.messages.size(); i19++) {
                        if (delayedMessage5.messageObjects.get(i19) == messageObject8) {
                            delayedMessage5.markAsError();
                            arrayList2.remove(i18);
                            i18--;
                            break;
                        }
                    }
                    i18++;
                } else if (delayedMessage5.obj == messageObject8) {
                    delayedMessage5.markAsError();
                    arrayList2.remove(i18);
                    i18--;
                    break;
                    i18++;
                } else {
                    i18++;
                }
            }
            if (arrayList2.isEmpty()) {
                this.delayedMessages.remove(str2);
            }
        } else if (i == NotificationCenter.httpFileDidLoad) {
            final String str11 = (String) objArr[0];
            ArrayList<DelayedMessage> arrayList12 = this.delayedMessages.get(str11);
            if (arrayList12 != null) {
                for (int i20 = 0; i20 < arrayList12.size(); i20++) {
                    final DelayedMessage delayedMessage6 = arrayList12.get(i20);
                    int i21 = delayedMessage6.type;
                    if (i21 == 0) {
                        messageObject = delayedMessage6.obj;
                        c = 0;
                    } else {
                        if (i21 == 2) {
                            messageObject = delayedMessage6.obj;
                        } else if (i21 == 4) {
                            MessageObject messageObject9 = (MessageObject) delayedMessage6.extraHashMap.get(str11);
                            messageObject = messageObject9;
                            if (messageObject9.getDocument() == null) {
                                c = 0;
                            }
                        } else {
                            c = 65535;
                            messageObject = null;
                        }
                        c = 1;
                    }
                    if (c == 0) {
                        final File file = new File(FileLoader.getDirectory(4), Utilities.MD5(str11) + "." + ImageLoader.getHttpUrlExtension(str11, "file"));
                        Utilities.globalQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda57
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$didReceivedNotification$2(file, messageObject, delayedMessage6, str11);
                            }
                        });
                    } else if (c == 1) {
                        final File file2 = new File(FileLoader.getDirectory(4), Utilities.MD5(str11) + ".gif");
                        Utilities.globalQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda58
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$didReceivedNotification$4(delayedMessage6, file2, messageObject);
                            }
                        });
                    }
                }
                this.delayedMessages.remove(str11);
            }
        } else if (i == NotificationCenter.fileLoaded) {
            String str12 = (String) objArr[0];
            ArrayList<DelayedMessage> arrayList13 = this.delayedMessages.get(str12);
            if (arrayList13 != null) {
                for (int i22 = 0; i22 < arrayList13.size(); i22++) {
                    performSendDelayedMessage(arrayList13.get(i22));
                }
                this.delayedMessages.remove(str12);
            }
        } else if ((i == NotificationCenter.httpFileDidFailedLoad || i == NotificationCenter.fileLoadFailed) && (arrayList = this.delayedMessages.get((str = (String) objArr[0]))) != null) {
            for (int i23 = 0; i23 < arrayList.size(); i23++) {
                arrayList.get(i23).markAsError();
            }
            this.delayedMessages.remove(str);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$2(final File file, final MessageObject messageObject, final DelayedMessage delayedMessage, final String str) {
        final TLRPC$TL_photo generatePhotoSizes = generatePhotoSizes(file.toString(), null);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda54
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$didReceivedNotification$1(generatePhotoSizes, messageObject, file, delayedMessage, str);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$1(TLRPC$TL_photo tLRPC$TL_photo, MessageObject messageObject, File file, DelayedMessage delayedMessage, String str) {
        if (tLRPC$TL_photo != null) {
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            tLRPC$Message.media.photo = tLRPC$TL_photo;
            tLRPC$Message.attachPath = file.toString();
            ArrayList<TLRPC$Message> arrayList = new ArrayList<>();
            arrayList.add(messageObject.messageOwner);
            getMessagesStorage().putMessages(arrayList, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.updateMessageMedia, messageObject.messageOwner);
            ArrayList<TLRPC$PhotoSize> arrayList2 = tLRPC$TL_photo.sizes;
            delayedMessage.photoSize = arrayList2.get(arrayList2.size() - 1);
            delayedMessage.locationParent = tLRPC$TL_photo;
            delayedMessage.httpLocation = null;
            if (delayedMessage.type == 4) {
                delayedMessage.performMediaUpload = true;
                performSendDelayedMessage(delayedMessage, delayedMessage.messageObjects.indexOf(messageObject));
                return;
            }
            performSendDelayedMessage(delayedMessage);
            return;
        }
        if (BuildVars.LOGS_ENABLED) {
            FileLog.e("can't load image " + str + " to file " + file.toString());
        }
        delayedMessage.markAsError();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$4(final DelayedMessage delayedMessage, final File file, final MessageObject messageObject) {
        final TLRPC$Document document = delayedMessage.obj.getDocument();
        if (document.thumbs.isEmpty() || (document.thumbs.get(0).location instanceof TLRPC$TL_fileLocationUnavailable)) {
            try {
                Bitmap loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                if (loadBitmap != null) {
                    document.thumbs.clear();
                    document.thumbs.add(ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, delayedMessage.sendEncryptedRequest != null));
                    loadBitmap.recycle();
                }
            } catch (Exception e) {
                document.thumbs.clear();
                FileLog.e(e);
            }
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda69
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$didReceivedNotification$3(delayedMessage, file, document, messageObject);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$3(DelayedMessage delayedMessage, File file, TLRPC$Document tLRPC$Document, MessageObject messageObject) {
        delayedMessage.httpLocation = null;
        delayedMessage.obj.messageOwner.attachPath = file.toString();
        if (!tLRPC$Document.thumbs.isEmpty()) {
            TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$Document.thumbs.get(0);
            if (!(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                delayedMessage.photoSize = tLRPC$PhotoSize;
                delayedMessage.locationParent = tLRPC$Document;
            }
        }
        ArrayList<TLRPC$Message> arrayList = new ArrayList<>();
        arrayList.add(messageObject.messageOwner);
        getMessagesStorage().putMessages(arrayList, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
        delayedMessage.performMediaUpload = true;
        performSendDelayedMessage(delayedMessage);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.updateMessageMedia, delayedMessage.obj.messageOwner);
    }

    private void revertEditingMessageObject(MessageObject messageObject) {
        messageObject.cancelEditing = true;
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        tLRPC$Message.media = messageObject.previousMedia;
        tLRPC$Message.message = messageObject.previousMessage;
        ArrayList<TLRPC$MessageEntity> arrayList = messageObject.previousMessageEntities;
        tLRPC$Message.entities = arrayList;
        tLRPC$Message.attachPath = messageObject.previousAttachPath;
        tLRPC$Message.send_state = 0;
        if (arrayList != null) {
            tLRPC$Message.flags |= 128;
        } else {
            tLRPC$Message.flags &= -129;
        }
        messageObject.previousMedia = null;
        messageObject.previousMessage = null;
        messageObject.previousMessageEntities = null;
        messageObject.previousAttachPath = null;
        messageObject.videoEditedInfo = null;
        messageObject.type = -1;
        messageObject.setType();
        messageObject.caption = null;
        if (messageObject.type != 0) {
            messageObject.generateCaption();
        } else {
            messageObject.resetLayout();
        }
        ArrayList<TLRPC$Message> arrayList2 = new ArrayList<>();
        arrayList2.add(messageObject.messageOwner);
        getMessagesStorage().putMessages(arrayList2, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(messageObject);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.replaceMessagesObjects, Long.valueOf(messageObject.getDialogId()), arrayList3);
    }

    public void cancelSendingMessage(MessageObject messageObject) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(messageObject);
        if (messageObject != null && messageObject.type == 29) {
            DelayedMessage delayedMessage = null;
            for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
                ArrayList<DelayedMessage> value = entry.getValue();
                for (int i = 0; i < value.size(); i++) {
                    DelayedMessage delayedMessage2 = value.get(i);
                    if (delayedMessage2.type == 4) {
                        int i2 = 0;
                        while (true) {
                            if (i2 >= delayedMessage2.messageObjects.size()) {
                                break;
                            } else if (delayedMessage2.messageObjects.get(i2).getId() == messageObject.getId()) {
                                delayedMessage = delayedMessage2;
                                break;
                            } else {
                                i2++;
                            }
                        }
                    }
                    if (delayedMessage != null) {
                        break;
                    }
                }
            }
            if (delayedMessage != null) {
                arrayList.clear();
                arrayList.addAll(delayedMessage.messageObjects);
            }
        }
        cancelSendingMessage(arrayList);
    }

    public void cancelSendingMessage(ArrayList<MessageObject> arrayList) {
        boolean z;
        ArrayList arrayList2 = new ArrayList();
        ArrayList arrayList3 = new ArrayList();
        ArrayList<Integer> arrayList4 = new ArrayList<>();
        long j = 0;
        int i = 0;
        boolean z2 = false;
        int i2 = 0;
        int i3 = 0;
        while (i < arrayList.size()) {
            MessageObject messageObject = arrayList.get(i);
            if (messageObject.scheduled) {
                i3 = 1;
            }
            long dialogId = messageObject.getDialogId();
            arrayList4.add(Integer.valueOf(messageObject.getId()));
            if (messageObject.isQuickReply()) {
                i2 = messageObject.getQuickReplyId();
            }
            TLRPC$Message removeFromSendingMessages = removeFromSendingMessages(messageObject.getId(), messageObject.scheduled);
            if (removeFromSendingMessages != null) {
                getConnectionsManager().cancelRequest(removeFromSendingMessages.reqId, true);
            }
            for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
                ArrayList<DelayedMessage> value = entry.getValue();
                int i4 = 0;
                while (true) {
                    if (i4 >= value.size()) {
                        z = z2;
                        break;
                    }
                    DelayedMessage delayedMessage = value.get(i4);
                    z = z2;
                    if (delayedMessage.type == 4) {
                        MessageObject messageObject2 = null;
                        int i5 = 0;
                        while (true) {
                            if (i5 >= delayedMessage.messageObjects.size()) {
                                i5 = -1;
                                break;
                            }
                            messageObject2 = delayedMessage.messageObjects.get(i5);
                            if (messageObject2.getId() == messageObject.getId()) {
                                removeFromUploadingMessages(messageObject.getId(), messageObject.scheduled);
                                break;
                            }
                            i5++;
                        }
                        if (i5 >= 0) {
                            delayedMessage.messageObjects.remove(i5);
                            delayedMessage.messages.remove(i5);
                            delayedMessage.originalPaths.remove(i5);
                            if (!delayedMessage.parentObjects.isEmpty()) {
                                delayedMessage.parentObjects.remove(i5);
                            }
                            TLObject tLObject = delayedMessage.sendRequest;
                            if (tLObject instanceof TLRPC$TL_messages_sendMultiMedia) {
                                ((TLRPC$TL_messages_sendMultiMedia) tLObject).multi_media.remove(i5);
                            } else {
                                if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
                                    TLRPC$InputMedia tLRPC$InputMedia = ((TLRPC$TL_messages_sendMedia) tLObject).media;
                                    if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPaidMedia) {
                                        ((TLRPC$TL_inputMediaPaidMedia) tLRPC$InputMedia).extended_media.remove(i5);
                                    }
                                }
                                TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                                tLRPC$TL_messages_sendEncryptedMultiMedia.messages.remove(i5);
                                tLRPC$TL_messages_sendEncryptedMultiMedia.files.remove(i5);
                            }
                            MediaController.getInstance().cancelVideoConvert(messageObject);
                            String str = (String) delayedMessage.extraHashMap.get(messageObject2);
                            if (str != null) {
                                arrayList2.add(str);
                            }
                            if (delayedMessage.messageObjects.isEmpty()) {
                                delayedMessage.sendDelayedRequests();
                            } else {
                                if (delayedMessage.finalGroupMessage == messageObject.getId()) {
                                    ArrayList<MessageObject> arrayList5 = delayedMessage.messageObjects;
                                    MessageObject messageObject3 = arrayList5.get(arrayList5.size() - 1);
                                    delayedMessage.finalGroupMessage = messageObject3.getId();
                                    messageObject3.messageOwner.params.put("final", "1");
                                    TLRPC$TL_messages_messages tLRPC$TL_messages_messages = new TLRPC$TL_messages_messages();
                                    tLRPC$TL_messages_messages.messages.add(messageObject3.messageOwner);
                                    getMessagesStorage().putMessages((TLRPC$messages_Messages) tLRPC$TL_messages_messages, delayedMessage.peer, -2, 0, false, i3, 0L);
                                }
                                if (!arrayList3.contains(delayedMessage)) {
                                    arrayList3.add(delayedMessage);
                                }
                            }
                        }
                    } else if (delayedMessage.obj.getId() == messageObject.getId()) {
                        removeFromUploadingMessages(messageObject.getId(), messageObject.scheduled);
                        value.remove(i4);
                        delayedMessage.sendDelayedRequests();
                        MediaController.getInstance().cancelVideoConvert(delayedMessage.obj);
                        if (value.size() == 0) {
                            arrayList2.add(entry.getKey());
                            if (delayedMessage.sendEncryptedRequest != null) {
                                z2 = true;
                            }
                        }
                    } else {
                        i4++;
                        z2 = z;
                    }
                }
                z2 = z;
            }
            i++;
            j = dialogId;
        }
        for (int i6 = 0; i6 < arrayList2.size(); i6++) {
            String str2 = (String) arrayList2.get(i6);
            if (str2.startsWith("http")) {
                ImageLoader.getInstance().cancelLoadHttpFile(str2);
            } else {
                getFileLoader().cancelFileUpload(str2, z2);
            }
            this.delayedMessages.remove(str2);
        }
        int size = arrayList3.size();
        for (int i7 = 0; i7 < size; i7++) {
            sendReadyToSendGroup((DelayedMessage) arrayList3.get(i7), false, true);
        }
        int i8 = 1;
        if (arrayList.size() == 1 && arrayList.get(0).isEditing() && arrayList.get(0).previousMedia != null) {
            revertEditingMessageObject(arrayList.get(0));
            return;
        }
        if (!arrayList.isEmpty() && arrayList.get(0).isQuickReply()) {
            i8 = 5;
        } else if (i3 == 0) {
            i8 = 0;
        }
        getMessagesController().deleteMessages(arrayList4, null, null, j, i2, false, i8);
    }

    public boolean retrySendMessage(MessageObject messageObject, boolean z) {
        if (messageObject.getId() >= 0) {
            if (messageObject.isEditing()) {
                editMessage(messageObject, null, null, null, null, null, true, messageObject.hasMediaSpoilers(), messageObject);
            }
            return false;
        }
        TLRPC$MessageAction tLRPC$MessageAction = messageObject.messageOwner.action;
        if (tLRPC$MessageAction instanceof TLRPC$TL_messageEncryptedAction) {
            TLRPC$EncryptedChat encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(messageObject.getDialogId())));
            if (encryptedChat == null) {
                getMessagesStorage().markMessageAsSendError(messageObject.messageOwner, messageObject.scheduled ? 1 : 0);
                messageObject.messageOwner.send_state = 2;
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                processSentMessage(messageObject.getId());
                return false;
            }
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            if (tLRPC$Message.random_id == 0) {
                tLRPC$Message.random_id = getNextRandomId();
            }
            TLRPC$DecryptedMessageAction tLRPC$DecryptedMessageAction = messageObject.messageOwner.action.encryptedAction;
            if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionSetMessageTTL) {
                getSecretChatHelper().sendTTLMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionDeleteMessages) {
                getSecretChatHelper().sendMessagesDeleteMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionFlushHistory) {
                getSecretChatHelper().sendClearHistoryMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionNotifyLayer) {
                getSecretChatHelper().sendNotifyLayerMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionReadMessages) {
                getSecretChatHelper().sendMessagesReadMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionScreenshotMessages) {
                getSecretChatHelper().sendScreenshotMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (!(tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionTyping)) {
                if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionResend) {
                    getSecretChatHelper().sendResendMessage(encryptedChat, 0, 0, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionCommitKey) {
                    getSecretChatHelper().sendCommitKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionAbortKey) {
                    getSecretChatHelper().sendAbortKeyMessage(encryptedChat, messageObject.messageOwner, 0L);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionRequestKey) {
                    getSecretChatHelper().sendRequestKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionAcceptKey) {
                    getSecretChatHelper().sendAcceptKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionNoop) {
                    getSecretChatHelper().sendNoopMessage(encryptedChat, messageObject.messageOwner);
                }
            }
            return true;
        }
        if (tLRPC$MessageAction instanceof TLRPC$TL_messageActionScreenshotTaken) {
            sendScreenshotMessage(getMessagesController().getUser(Long.valueOf(messageObject.getDialogId())), messageObject.getReplyMsgId(), messageObject.messageOwner);
        }
        if (z) {
            this.unsentMessages.put(messageObject.getId(), messageObject);
        }
        sendMessage(SendMessageParams.of(messageObject));
        return true;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void processSentMessage(int i) {
        int size = this.unsentMessages.size();
        this.unsentMessages.remove(i);
        if (size == 0 || this.unsentMessages.size() != 0) {
            return;
        }
        checkUnsentMessages();
    }

    /* JADX WARN: Removed duplicated region for block: B:27:0x0090  */
    /* JADX WARN: Removed duplicated region for block: B:28:0x00b9  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void processForwardFromMyName(MessageObject messageObject, long j) {
        HashMap hashMap;
        TLRPC$Photo tLRPC$Photo;
        if (messageObject == null) {
            return;
        }
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
        ArrayList arrayList = null;
        if (tLRPC$MessageMedia != null && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaEmpty) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGame) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaInvoice)) {
            if (DialogObject.isEncryptedDialog(j)) {
                TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
                if (tLRPC$Message2.peer_id != null) {
                    TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$Message2.media;
                    if ((tLRPC$MessageMedia2.photo instanceof TLRPC$TL_photo) || (tLRPC$MessageMedia2.document instanceof TLRPC$TL_document)) {
                        HashMap hashMap2 = new HashMap();
                        hashMap2.put("parentObject", "sent_" + messageObject.messageOwner.peer_id.channel_id + "_" + messageObject.getId() + "_" + messageObject.getDialogId() + "_" + messageObject.type + "_" + messageObject.getSize());
                        hashMap = hashMap2;
                        TLRPC$Message tLRPC$Message3 = messageObject.messageOwner;
                        TLRPC$MessageMedia tLRPC$MessageMedia3 = tLRPC$Message3.media;
                        tLRPC$Photo = tLRPC$MessageMedia3.photo;
                        if (!(tLRPC$Photo instanceof TLRPC$TL_photo)) {
                            sendMessage(SendMessageParams.of((TLRPC$TL_photo) tLRPC$Photo, null, j, messageObject.replyMessageObject, null, tLRPC$Message3.message, tLRPC$Message3.entities, null, hashMap, true, 0, tLRPC$MessageMedia3.ttl_seconds, messageObject, false));
                            return;
                        }
                        TLRPC$Document tLRPC$Document = tLRPC$MessageMedia3.document;
                        if (tLRPC$Document instanceof TLRPC$TL_document) {
                            sendMessage(SendMessageParams.of((TLRPC$TL_document) tLRPC$Document, null, tLRPC$Message3.attachPath, j, messageObject.replyMessageObject, null, tLRPC$Message3.message, tLRPC$Message3.entities, null, hashMap, true, 0, tLRPC$MessageMedia3.ttl_seconds, messageObject, null, false));
                            return;
                        } else if ((tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaVenue) || (tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaGeo)) {
                            sendMessage(SendMessageParams.of(tLRPC$MessageMedia3, j, messageObject.replyMessageObject, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0));
                            return;
                        } else if (tLRPC$MessageMedia3.phone_number != null) {
                            TLRPC$TL_userContact_old2 tLRPC$TL_userContact_old2 = new TLRPC$TL_userContact_old2();
                            TLRPC$MessageMedia tLRPC$MessageMedia4 = messageObject.messageOwner.media;
                            tLRPC$TL_userContact_old2.phone = tLRPC$MessageMedia4.phone_number;
                            tLRPC$TL_userContact_old2.first_name = tLRPC$MessageMedia4.first_name;
                            tLRPC$TL_userContact_old2.last_name = tLRPC$MessageMedia4.last_name;
                            tLRPC$TL_userContact_old2.id = tLRPC$MessageMedia4.user_id;
                            sendMessage(SendMessageParams.of((TLRPC$User) tLRPC$TL_userContact_old2, j, messageObject.replyMessageObject, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0));
                            return;
                        } else if (DialogObject.isEncryptedDialog(j)) {
                            return;
                        } else {
                            ArrayList<MessageObject> arrayList2 = new ArrayList<>();
                            arrayList2.add(messageObject);
                            sendMessage(arrayList2, j, true, false, true, 0);
                            return;
                        }
                    }
                }
            }
            hashMap = null;
            TLRPC$Message tLRPC$Message32 = messageObject.messageOwner;
            TLRPC$MessageMedia tLRPC$MessageMedia32 = tLRPC$Message32.media;
            tLRPC$Photo = tLRPC$MessageMedia32.photo;
            if (!(tLRPC$Photo instanceof TLRPC$TL_photo)) {
            }
        } else if (tLRPC$Message.message != null) {
            TLRPC$WebPage tLRPC$WebPage = tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage ? tLRPC$MessageMedia.webpage : null;
            ArrayList<TLRPC$MessageEntity> arrayList3 = tLRPC$Message.entities;
            if (arrayList3 != null && !arrayList3.isEmpty()) {
                arrayList = new ArrayList();
                for (int i = 0; i < messageObject.messageOwner.entities.size(); i++) {
                    TLRPC$MessageEntity tLRPC$MessageEntity = messageObject.messageOwner.entities.get(i);
                    if ((tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityBold) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityItalic) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityPre) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityCode) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityTextUrl) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntitySpoiler) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityCustomEmoji)) {
                        arrayList.add(tLRPC$MessageEntity);
                    }
                }
            }
            sendMessage(SendMessageParams.of(messageObject.messageOwner.message, j, messageObject.replyMessageObject, null, tLRPC$WebPage, true, arrayList, null, null, true, 0, null, false));
        } else if (DialogObject.isEncryptedDialog(j)) {
            ArrayList<MessageObject> arrayList4 = new ArrayList<>();
            arrayList4.add(messageObject);
            sendMessage(arrayList4, j, true, false, true, 0);
        }
    }

    public void sendScreenshotMessage(TLRPC$User tLRPC$User, int i, TLRPC$Message tLRPC$Message) {
        TLRPC$Message tLRPC$Message2 = tLRPC$Message;
        if (tLRPC$User == null || i == 0 || tLRPC$User.id == getUserConfig().getClientUserId()) {
            return;
        }
        TLRPC$TL_messages_sendScreenshotNotification tLRPC$TL_messages_sendScreenshotNotification = new TLRPC$TL_messages_sendScreenshotNotification();
        TLRPC$TL_inputPeerUser tLRPC$TL_inputPeerUser = new TLRPC$TL_inputPeerUser();
        tLRPC$TL_messages_sendScreenshotNotification.peer = tLRPC$TL_inputPeerUser;
        tLRPC$TL_inputPeerUser.access_hash = tLRPC$User.access_hash;
        tLRPC$TL_inputPeerUser.user_id = tLRPC$User.id;
        if (tLRPC$Message2 != null) {
            tLRPC$TL_messages_sendScreenshotNotification.reply_to = createReplyInput(i);
            tLRPC$TL_messages_sendScreenshotNotification.random_id = tLRPC$Message2.random_id;
        } else {
            tLRPC$Message2 = new TLRPC$TL_messageService();
            tLRPC$Message2.random_id = getNextRandomId();
            tLRPC$Message2.dialog_id = tLRPC$User.id;
            tLRPC$Message2.unread = true;
            tLRPC$Message2.out = true;
            int newMessageId = getUserConfig().getNewMessageId();
            tLRPC$Message2.id = newMessageId;
            tLRPC$Message2.local_id = newMessageId;
            TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
            tLRPC$Message2.from_id = tLRPC$TL_peerUser;
            tLRPC$TL_peerUser.user_id = getUserConfig().getClientUserId();
            tLRPC$Message2.flags |= NotificationCenter.attachMenuBotsDidLoad;
            TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
            tLRPC$Message2.reply_to = tLRPC$TL_messageReplyHeader;
            tLRPC$TL_messageReplyHeader.flags |= 16;
            tLRPC$TL_messageReplyHeader.reply_to_msg_id = i;
            TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
            tLRPC$Message2.peer_id = tLRPC$TL_peerUser2;
            tLRPC$TL_peerUser2.user_id = tLRPC$User.id;
            tLRPC$Message2.date = getConnectionsManager().getCurrentTime();
            tLRPC$Message2.action = new TLRPC$TL_messageActionScreenshotTaken();
            getUserConfig().saveConfig(false);
        }
        tLRPC$TL_messages_sendScreenshotNotification.random_id = tLRPC$Message2.random_id;
        MessageObject messageObject = new MessageObject(this.currentAccount, tLRPC$Message2, false, true);
        messageObject.messageOwner.send_state = 1;
        messageObject.wasJustSent = true;
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(messageObject);
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message2.dialog_id, arrayList, 0);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
        ArrayList<TLRPC$Message> arrayList2 = new ArrayList<>();
        arrayList2.add(tLRPC$Message2);
        getMessagesStorage().putMessages(arrayList2, false, true, false, 0, false, 0, 0L);
        performSendMessageRequest(tLRPC$TL_messages_sendScreenshotNotification, messageObject, null, null, null, null, false);
    }

    public void sendSticker(TLRPC$Document tLRPC$Document, String str, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final MessageObject.SendAnimationData sendAnimationData, final boolean z, final int i, boolean z2, final Object obj, final String str2, final int i2) {
        final TLRPC$TL_document_layer82 tLRPC$TL_document_layer82;
        HashMap hashMap;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        byte[] bArr;
        if (tLRPC$Document == null) {
            return;
        }
        if (DialogObject.isEncryptedDialog(j)) {
            if (getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                return;
            }
            TLRPC$TL_document_layer82 tLRPC$TL_document_layer822 = new TLRPC$TL_document_layer82();
            tLRPC$TL_document_layer822.id = tLRPC$Document.id;
            tLRPC$TL_document_layer822.access_hash = tLRPC$Document.access_hash;
            tLRPC$TL_document_layer822.date = tLRPC$Document.date;
            tLRPC$TL_document_layer822.mime_type = tLRPC$Document.mime_type;
            byte[] bArr2 = tLRPC$Document.file_reference;
            tLRPC$TL_document_layer822.file_reference = bArr2;
            if (bArr2 == null) {
                tLRPC$TL_document_layer822.file_reference = new byte[0];
            }
            tLRPC$TL_document_layer822.size = tLRPC$Document.size;
            tLRPC$TL_document_layer822.dc_id = tLRPC$Document.dc_id;
            tLRPC$TL_document_layer822.attributes = new ArrayList<>();
            for (int i3 = 0; i3 < tLRPC$Document.attributes.size(); i3++) {
                TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$Document.attributes.get(i3);
                if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeVideo) {
                    TLRPC$TL_documentAttributeVideo_layer159 tLRPC$TL_documentAttributeVideo_layer159 = new TLRPC$TL_documentAttributeVideo_layer159();
                    tLRPC$TL_documentAttributeVideo_layer159.flags = tLRPC$DocumentAttribute.flags;
                    tLRPC$TL_documentAttributeVideo_layer159.round_message = tLRPC$DocumentAttribute.round_message;
                    tLRPC$TL_documentAttributeVideo_layer159.supports_streaming = tLRPC$DocumentAttribute.supports_streaming;
                    tLRPC$TL_documentAttributeVideo_layer159.duration = tLRPC$DocumentAttribute.duration;
                    tLRPC$TL_documentAttributeVideo_layer159.w = tLRPC$DocumentAttribute.w;
                    tLRPC$TL_documentAttributeVideo_layer159.h = tLRPC$DocumentAttribute.h;
                    tLRPC$TL_document_layer822.attributes.add(tLRPC$TL_documentAttributeVideo_layer159);
                } else {
                    tLRPC$TL_document_layer822.attributes.add(tLRPC$DocumentAttribute);
                }
            }
            if (tLRPC$TL_document_layer822.mime_type == null) {
                tLRPC$TL_document_layer822.mime_type = "";
            }
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 10);
            if ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoSize) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoSizeProgressive) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize)) {
                File pathToAttach = FileLoader.getInstance(this.currentAccount).getPathToAttach(closestPhotoSizeWithSize, true);
                if ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize) || pathToAttach.exists()) {
                    try {
                        if (closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize) {
                            tLRPC$PhotoSize = new TLRPC$TL_photoStrippedSize();
                            bArr = closestPhotoSizeWithSize.bytes;
                        } else {
                            TLRPC$TL_photoCachedSize tLRPC$TL_photoCachedSize = new TLRPC$TL_photoCachedSize();
                            pathToAttach.length();
                            byte[] bArr3 = new byte[(int) pathToAttach.length()];
                            new RandomAccessFile(pathToAttach, "r").readFully(bArr3);
                            tLRPC$PhotoSize = tLRPC$TL_photoCachedSize;
                            bArr = bArr3;
                        }
                        TLRPC$TL_fileLocation_layer82 tLRPC$TL_fileLocation_layer82 = new TLRPC$TL_fileLocation_layer82();
                        TLRPC$FileLocation tLRPC$FileLocation = closestPhotoSizeWithSize.location;
                        tLRPC$TL_fileLocation_layer82.dc_id = tLRPC$FileLocation.dc_id;
                        tLRPC$TL_fileLocation_layer82.volume_id = tLRPC$FileLocation.volume_id;
                        tLRPC$TL_fileLocation_layer82.local_id = tLRPC$FileLocation.local_id;
                        tLRPC$TL_fileLocation_layer82.secret = tLRPC$FileLocation.secret;
                        tLRPC$PhotoSize.location = tLRPC$TL_fileLocation_layer82;
                        tLRPC$PhotoSize.size = closestPhotoSizeWithSize.size;
                        tLRPC$PhotoSize.w = closestPhotoSizeWithSize.w;
                        tLRPC$PhotoSize.h = closestPhotoSizeWithSize.h;
                        tLRPC$PhotoSize.type = closestPhotoSizeWithSize.type;
                        tLRPC$PhotoSize.bytes = bArr;
                        tLRPC$TL_document_layer822.thumbs.add(tLRPC$PhotoSize);
                        tLRPC$TL_document_layer822.flags |= 1;
                    } catch (Exception e) {
                        FileLog.e(e);
                    }
                }
            }
            if (tLRPC$TL_document_layer822.thumbs.isEmpty()) {
                TLRPC$TL_photoSizeEmpty tLRPC$TL_photoSizeEmpty = new TLRPC$TL_photoSizeEmpty();
                tLRPC$TL_photoSizeEmpty.type = "s";
                tLRPC$TL_document_layer822.thumbs.add(tLRPC$TL_photoSizeEmpty);
            }
            tLRPC$TL_document_layer82 = tLRPC$TL_document_layer822;
        } else {
            tLRPC$TL_document_layer82 = tLRPC$Document;
        }
        if (MessageObject.isGifDocument(tLRPC$TL_document_layer82)) {
            mediaSendQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda86
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$sendSticker$6(tLRPC$TL_document_layer82, j, messageObject, messageObject2, z, i, obj, sendAnimationData, tL_stories$StoryItem, replyQuote, str2, i2);
                }
            });
            return;
        }
        if (TextUtils.isEmpty(str)) {
            hashMap = null;
        } else {
            hashMap = new HashMap();
            hashMap.put("query", str);
        }
        SendMessageParams of = SendMessageParams.of((TLRPC$TL_document) tLRPC$TL_document_layer82, null, null, j, messageObject, messageObject2, null, null, null, hashMap, z, i, 0, obj, sendAnimationData, z2);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str2;
        of.quick_reply_shortcut_id = i2;
        sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendSticker$6(final TLRPC$Document tLRPC$Document, final long j, final MessageObject messageObject, final MessageObject messageObject2, final boolean z, final int i, final Object obj, final MessageObject.SendAnimationData sendAnimationData, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final String str, final int i2) {
        String str2;
        final Bitmap[] bitmapArr = new Bitmap[1];
        String key = ImageLocation.getForDocument(tLRPC$Document).getKey(null, null, false);
        if ("video/mp4".equals(tLRPC$Document.mime_type)) {
            str2 = ".mp4";
        } else if ("video/x-matroska".equals(tLRPC$Document.mime_type)) {
            str2 = ".mkv";
        } else {
            str2 = "";
        }
        File directory = FileLoader.getDirectory(3);
        File file = new File(directory, key + str2);
        if (!file.exists()) {
            File directory2 = FileLoader.getDirectory(2);
            file = new File(directory2, key + str2);
        }
        ensureMediaThumbExists(getAccountInstance(), false, tLRPC$Document, file.getAbsolutePath(), null, 0L);
        final String[] strArr = {getKeyForPhotoSize(getAccountInstance(), FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 320), bitmapArr, true, true)};
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda55
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendSticker$5(bitmapArr, strArr, tLRPC$Document, j, messageObject, messageObject2, z, i, obj, sendAnimationData, tL_stories$StoryItem, replyQuote, str, i2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendSticker$5(Bitmap[] bitmapArr, String[] strArr, TLRPC$Document tLRPC$Document, long j, MessageObject messageObject, MessageObject messageObject2, boolean z, int i, Object obj, MessageObject.SendAnimationData sendAnimationData, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str, int i2) {
        if (bitmapArr[0] != null && strArr[0] != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
        }
        SendMessageParams of = SendMessageParams.of((TLRPC$TL_document) tLRPC$Document, null, null, j, messageObject, messageObject2, null, null, null, null, z, i, 0, obj, sendAnimationData, false);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str;
        of.quick_reply_shortcut_id = i2;
        sendMessage(of);
    }

    public int sendMessage(ArrayList<MessageObject> arrayList, long j, boolean z, boolean z2, boolean z3, int i) {
        return sendMessage(arrayList, j, z, z2, z3, i, null);
    }

    /* JADX WARN: Code restructure failed: missing block: B:335:0x077b, code lost:
        if (r15.contains(java.lang.Integer.valueOf(r0.reply_to_msg_id)) != false) goto L245;
     */
    /* JADX WARN: Removed duplicated region for block: B:205:0x046c  */
    /* JADX WARN: Removed duplicated region for block: B:271:0x060e  */
    /* JADX WARN: Removed duplicated region for block: B:274:0x0618  */
    /* JADX WARN: Removed duplicated region for block: B:277:0x0631  */
    /* JADX WARN: Removed duplicated region for block: B:291:0x068c  */
    /* JADX WARN: Removed duplicated region for block: B:292:0x069e  */
    /* JADX WARN: Removed duplicated region for block: B:297:0x06bb  */
    /* JADX WARN: Removed duplicated region for block: B:300:0x06e6  */
    /* JADX WARN: Removed duplicated region for block: B:301:0x06e8  */
    /* JADX WARN: Removed duplicated region for block: B:334:0x0771  */
    /* JADX WARN: Removed duplicated region for block: B:339:0x0799  */
    /* JADX WARN: Removed duplicated region for block: B:340:0x079b  */
    /* JADX WARN: Removed duplicated region for block: B:343:0x07b4  */
    /* JADX WARN: Removed duplicated region for block: B:352:0x07ed  */
    /* JADX WARN: Removed duplicated region for block: B:353:0x07ef  */
    /* JADX WARN: Removed duplicated region for block: B:356:0x07f7  */
    /* JADX WARN: Removed duplicated region for block: B:358:0x082d  */
    /* JADX WARN: Removed duplicated region for block: B:364:0x085d  */
    /* JADX WARN: Removed duplicated region for block: B:374:0x08ad  */
    /* JADX WARN: Removed duplicated region for block: B:375:0x08b0  */
    /* JADX WARN: Removed duplicated region for block: B:378:0x08c7  */
    /* JADX WARN: Removed duplicated region for block: B:379:0x08c9  */
    /* JADX WARN: Removed duplicated region for block: B:382:0x08e9  */
    /* JADX WARN: Removed duplicated region for block: B:389:0x090f  */
    /* JADX WARN: Removed duplicated region for block: B:391:0x091d  */
    /* JADX WARN: Removed duplicated region for block: B:394:0x092d  */
    /* JADX WARN: Removed duplicated region for block: B:398:0x0959  */
    /* JADX WARN: Removed duplicated region for block: B:401:0x097a  */
    /* JADX WARN: Removed duplicated region for block: B:404:0x098b A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:408:0x0999  */
    /* JADX WARN: Removed duplicated region for block: B:409:0x099c  */
    /* JADX WARN: Removed duplicated region for block: B:412:0x09f8  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public int sendMessage(ArrayList<MessageObject> arrayList, final long j, boolean z, boolean z2, boolean z3, final int i, MessageObject messageObject) {
        TLRPC$UserFull userFull;
        TLRPC$Peer tLRPC$Peer;
        long j2;
        boolean z4;
        boolean z5;
        long j3;
        boolean z6;
        String str;
        boolean z7;
        boolean z8;
        boolean z9;
        boolean z10;
        long j4;
        boolean z11;
        boolean z12;
        boolean canSendEmbed;
        boolean canSendPolls;
        boolean canSendRoundVideo;
        boolean canSendVoice;
        boolean canSendMusic;
        TLRPC$Chat tLRPC$Chat;
        String str2;
        LongSparseArray longSparseArray;
        long j5;
        final LongSparseArray longSparseArray2;
        long j6;
        String str3;
        TLRPC$Chat tLRPC$Chat2;
        int i2;
        final TLRPC$Peer tLRPC$Peer2;
        ArrayList<MessageObject> arrayList2;
        TLRPC$InputPeer tLRPC$InputPeer;
        ArrayList<Integer> arrayList3;
        final ArrayList arrayList4;
        ArrayList<Long> arrayList5;
        int i3;
        boolean z13;
        ArrayList<Long> arrayList6;
        long j7;
        LongSparseArray longSparseArray3;
        String str4;
        TLRPC$Chat tLRPC$Chat3;
        LongSparseArray longSparseArray4;
        long j8;
        long j9;
        long j10;
        TLRPC$Peer tLRPC$Peer3;
        TLRPC$Chat tLRPC$Chat4;
        long sendAsPeerId;
        String str5;
        boolean z14;
        LongSparseArray longSparseArray5;
        TLRPC$Message tLRPC$Message;
        long j11;
        ArrayList arrayList7;
        ArrayList<MessageObject> arrayList8;
        ArrayList<Long> arrayList9;
        ArrayList<Integer> arrayList10;
        int i4;
        boolean z15;
        int i5;
        boolean z16;
        TLRPC$Message tLRPC$Message2;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        TLRPC$Peer tLRPC$Peer4;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2;
        TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow;
        TLRPC$User user;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        TLRPC$Peer tLRPC$Peer5;
        int i6;
        ArrayList<MessageObject> arrayList11 = arrayList;
        long j12 = j;
        boolean z17 = z;
        boolean z18 = z2;
        if (arrayList11 == null || arrayList.isEmpty()) {
            return 0;
        }
        long clientUserId = getUserConfig().getClientUserId();
        if (!DialogObject.isEncryptedDialog(j)) {
            TLRPC$Peer peer = getMessagesController().getPeer(j12);
            if (DialogObject.isUserDialog(j)) {
                if (getMessagesController().getUser(Long.valueOf(j)) == null) {
                    return 0;
                }
                TLRPC$UserFull userFull2 = getMessagesController().getUserFull(j12);
                if (userFull2 != null) {
                    canSendVoice = !userFull2.voice_messages_forbidden;
                    canSendRoundVideo = canSendVoice;
                    tLRPC$Peer = peer;
                    j4 = 0;
                    str2 = null;
                    tLRPC$Chat = null;
                } else {
                    tLRPC$Peer = peer;
                    j4 = 0;
                    str2 = null;
                    tLRPC$Chat = null;
                    canSendVoice = true;
                    canSendRoundVideo = true;
                }
                z8 = false;
                z7 = true;
                z9 = false;
                z10 = true;
                z11 = true;
                z12 = true;
                canSendEmbed = true;
                canSendPolls = true;
                canSendMusic = true;
            } else {
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(-j12));
                if (ChatObject.isChannel(chat)) {
                    z4 = chat.signatures;
                    z5 = !chat.megagroup;
                    if (z5 && chat.has_link) {
                        tLRPC$Peer = peer;
                        TLRPC$ChatFull chatFull = getMessagesController().getChatFull(chat.id);
                        if (chatFull != null) {
                            j2 = chatFull.linked_chat_id;
                        }
                    } else {
                        tLRPC$Peer = peer;
                    }
                    j2 = 0;
                } else {
                    tLRPC$Peer = peer;
                    j2 = 0;
                    z4 = false;
                    z5 = false;
                }
                if (chat != null) {
                    j3 = j2;
                    z6 = z4;
                    str = getMessagesController().getAdminRank(chat.id, clientUserId);
                } else {
                    j3 = j2;
                    z6 = z4;
                    str = null;
                }
                boolean canSendStickers = ChatObject.canSendStickers(chat);
                boolean canSendPhoto = ChatObject.canSendPhoto(chat);
                boolean canSendVideo = ChatObject.canSendVideo(chat);
                boolean canSendDocument = ChatObject.canSendDocument(chat);
                z7 = canSendStickers;
                z8 = z6;
                z9 = z5;
                z10 = canSendPhoto;
                j4 = j3;
                z11 = canSendVideo;
                z12 = canSendDocument;
                canSendEmbed = ChatObject.canSendEmbed(chat);
                canSendPolls = ChatObject.canSendPolls(chat);
                canSendRoundVideo = ChatObject.canSendRoundVideo(chat);
                canSendVoice = ChatObject.canSendVoice(chat);
                canSendMusic = ChatObject.canSendMusic(chat);
                tLRPC$Chat = chat;
                str2 = str;
            }
            LongSparseArray longSparseArray6 = new LongSparseArray();
            ArrayList<MessageObject> arrayList12 = new ArrayList<>();
            ArrayList arrayList13 = new ArrayList();
            ArrayList<Long> arrayList14 = new ArrayList<>();
            ArrayList<Integer> arrayList15 = new ArrayList<>();
            LongSparseArray longSparseArray7 = new LongSparseArray();
            TLRPC$InputPeer inputPeer = getMessagesController().getInputPeer(j12);
            boolean z19 = j12 == clientUserId;
            ArrayList arrayList16 = arrayList13;
            int i7 = 0;
            int i8 = 0;
            ArrayList<MessageObject> arrayList17 = arrayList12;
            ArrayList<Long> arrayList18 = arrayList14;
            TLRPC$InputPeer tLRPC$InputPeer2 = inputPeer;
            LongSparseArray longSparseArray8 = longSparseArray7;
            while (i7 < arrayList.size()) {
                final MessageObject messageObject2 = arrayList11.get(i7);
                if (messageObject2.getId() <= 0 || messageObject2.needDrawBluredPreview()) {
                    longSparseArray = longSparseArray6;
                    j5 = j4;
                    longSparseArray2 = longSparseArray8;
                    j6 = clientUserId;
                    str3 = str2;
                    tLRPC$Chat2 = tLRPC$Chat;
                    i2 = i7;
                    tLRPC$Peer2 = tLRPC$Peer;
                    arrayList2 = arrayList17;
                    tLRPC$InputPeer = tLRPC$InputPeer2;
                    arrayList3 = arrayList15;
                    arrayList4 = arrayList16;
                    arrayList5 = arrayList18;
                    if (messageObject2.type == 0 && !TextUtils.isEmpty(messageObject2.messageText)) {
                        TLRPC$MessageMedia tLRPC$MessageMedia = messageObject2.messageOwner.media;
                        TLRPC$WebPage tLRPC$WebPage = tLRPC$MessageMedia != null ? tLRPC$MessageMedia.webpage : null;
                        SendMessageParams of = SendMessageParams.of(messageObject2.messageText.toString(), j, null, messageObject, tLRPC$WebPage, tLRPC$WebPage != null, messageObject2.messageOwner.entities, null, null, z3, i, null, false);
                        of.quick_reply_shortcut = messageObject2.getQuickReplyName();
                        of.quick_reply_shortcut_id = messageObject2.getQuickReplyId();
                        sendMessage(of);
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    }
                    arrayList18 = arrayList5;
                    arrayList17 = arrayList2;
                    arrayList16 = arrayList4;
                    longSparseArray8 = longSparseArray2;
                    arrayList15 = arrayList3;
                } else {
                    if (messageObject2.isSticker() || messageObject2.isAnimatedSticker() || messageObject2.isGif() || messageObject2.isGame()) {
                        i3 = i7;
                        z13 = true;
                    } else {
                        i3 = i7;
                        z13 = false;
                    }
                    if (!z7 && z13) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 8) ? 4 : 1;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!z10 && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) && !messageObject2.isVideo() && !z13) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 16) ? 10 : 12;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!canSendMusic && messageObject2.isMusic()) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 18) ? 19 : 20;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!z11 && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) && messageObject2.isVideo() && !z13) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 17) ? 9 : 11;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!canSendPolls && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPoll)) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 10) ? 6 : 3;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (canSendVoice || !MessageObject.isVoiceMessage(messageObject2.messageOwner)) {
                        if (canSendRoundVideo || !MessageObject.isRoundVideoMessage(messageObject2.messageOwner)) {
                            if (z12 || !(messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaDocument) || z13) {
                                TLRPC$TL_message tLRPC$TL_message = new TLRPC$TL_message();
                                if (z17) {
                                    arrayList6 = arrayList18;
                                    j7 = j4;
                                    longSparseArray3 = longSparseArray8;
                                    str4 = str2;
                                    tLRPC$Chat3 = tLRPC$Chat;
                                    longSparseArray4 = longSparseArray6;
                                } else {
                                    boolean z20 = messageObject2.getDialogId() == clientUserId && messageObject2.isFromUser() && messageObject2.messageOwner.from_id.user_id == clientUserId;
                                    if (messageObject2.isForwarded()) {
                                        TLRPC$TL_messageFwdHeader tLRPC$TL_messageFwdHeader = new TLRPC$TL_messageFwdHeader();
                                        tLRPC$TL_message.fwd_from = tLRPC$TL_messageFwdHeader;
                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2 = messageObject2.messageOwner.fwd_from;
                                        longSparseArray3 = longSparseArray8;
                                        if ((tLRPC$MessageFwdHeader2.flags & 1) != 0) {
                                            tLRPC$TL_messageFwdHeader.flags |= 1;
                                            tLRPC$TL_messageFwdHeader.from_id = tLRPC$MessageFwdHeader2.from_id;
                                        }
                                        if ((tLRPC$MessageFwdHeader2.flags & 32) != 0) {
                                            tLRPC$TL_messageFwdHeader.flags |= 32;
                                            tLRPC$TL_messageFwdHeader.from_name = tLRPC$MessageFwdHeader2.from_name;
                                        }
                                        if ((tLRPC$MessageFwdHeader2.flags & 4) != 0) {
                                            tLRPC$TL_messageFwdHeader.flags |= 4;
                                            tLRPC$TL_messageFwdHeader.channel_post = tLRPC$MessageFwdHeader2.channel_post;
                                        }
                                        if ((tLRPC$MessageFwdHeader2.flags & 8) != 0) {
                                            tLRPC$TL_messageFwdHeader.flags |= 8;
                                            tLRPC$TL_messageFwdHeader.post_author = tLRPC$MessageFwdHeader2.post_author;
                                        }
                                        if ((j12 == clientUserId || z9) && (tLRPC$MessageFwdHeader2.flags & 16) != 0 && !UserObject.isReplyUser(messageObject2.getDialogId())) {
                                            TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader3 = tLRPC$TL_message.fwd_from;
                                            tLRPC$MessageFwdHeader3.flags |= 16;
                                            TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader4 = messageObject2.messageOwner.fwd_from;
                                            tLRPC$MessageFwdHeader3.saved_from_peer = tLRPC$MessageFwdHeader4.saved_from_peer;
                                            tLRPC$MessageFwdHeader3.saved_from_msg_id = tLRPC$MessageFwdHeader4.saved_from_msg_id;
                                        }
                                        tLRPC$TL_message.fwd_from.date = messageObject2.messageOwner.fwd_from.date;
                                        tLRPC$TL_message.flags = 4;
                                    } else {
                                        longSparseArray3 = longSparseArray8;
                                        if (!z20) {
                                            long fromChatId = messageObject2.getFromChatId();
                                            TLRPC$TL_messageFwdHeader tLRPC$TL_messageFwdHeader2 = new TLRPC$TL_messageFwdHeader();
                                            tLRPC$TL_message.fwd_from = tLRPC$TL_messageFwdHeader2;
                                            arrayList6 = arrayList18;
                                            tLRPC$TL_messageFwdHeader2.channel_post = messageObject2.getId();
                                            tLRPC$TL_message.fwd_from.flags |= 4;
                                            if (messageObject2.isFromUser()) {
                                                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader5 = tLRPC$TL_message.fwd_from;
                                                tLRPC$MessageFwdHeader5.from_id = messageObject2.messageOwner.from_id;
                                                tLRPC$MessageFwdHeader5.flags |= 1;
                                                j7 = j4;
                                                str4 = str2;
                                                tLRPC$Chat3 = tLRPC$Chat;
                                                longSparseArray4 = longSparseArray6;
                                            } else {
                                                tLRPC$TL_message.fwd_from.from_id = new TLRPC$TL_peerChannel();
                                                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader6 = tLRPC$TL_message.fwd_from;
                                                TLRPC$Peer tLRPC$Peer6 = tLRPC$MessageFwdHeader6.from_id;
                                                str4 = str2;
                                                TLRPC$Message tLRPC$Message3 = messageObject2.messageOwner;
                                                tLRPC$Chat3 = tLRPC$Chat;
                                                TLRPC$Peer tLRPC$Peer7 = tLRPC$Message3.peer_id;
                                                j7 = j4;
                                                longSparseArray4 = longSparseArray6;
                                                tLRPC$Peer6.channel_id = tLRPC$Peer7.channel_id;
                                                tLRPC$MessageFwdHeader6.flags |= 1;
                                                if (tLRPC$Message3.post && fromChatId > 0) {
                                                    TLRPC$Peer tLRPC$Peer8 = tLRPC$Message3.from_id;
                                                    if (tLRPC$Peer8 != null) {
                                                        tLRPC$Peer7 = tLRPC$Peer8;
                                                    }
                                                    tLRPC$MessageFwdHeader6.from_id = tLRPC$Peer7;
                                                }
                                            }
                                            if (messageObject2.messageOwner.post_author == null && !messageObject2.isOutOwner() && fromChatId > 0 && messageObject2.messageOwner.post && (user = getMessagesController().getUser(Long.valueOf(fromChatId))) != null) {
                                                tLRPC$TL_message.fwd_from.post_author = ContactsController.formatName(user.first_name, user.last_name);
                                                tLRPC$TL_message.fwd_from.flags |= 8;
                                            }
                                            tLRPC$TL_message.date = messageObject2.messageOwner.date;
                                            tLRPC$TL_message.flags = 4;
                                            if (j12 == clientUserId && (tLRPC$MessageFwdHeader = tLRPC$TL_message.fwd_from) != null) {
                                                tLRPC$MessageFwdHeader.flags |= 16;
                                                tLRPC$MessageFwdHeader.saved_from_msg_id = messageObject2.getId();
                                                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader7 = tLRPC$TL_message.fwd_from;
                                                tLRPC$Peer5 = messageObject2.messageOwner.peer_id;
                                                tLRPC$MessageFwdHeader7.saved_from_peer = tLRPC$Peer5;
                                                if (tLRPC$Peer5.user_id == clientUserId) {
                                                    tLRPC$Peer5.user_id = messageObject2.getDialogId();
                                                }
                                            }
                                        }
                                    }
                                    arrayList6 = arrayList18;
                                    j7 = j4;
                                    str4 = str2;
                                    tLRPC$Chat3 = tLRPC$Chat;
                                    longSparseArray4 = longSparseArray6;
                                    if (j12 == clientUserId) {
                                        tLRPC$MessageFwdHeader.flags |= 16;
                                        tLRPC$MessageFwdHeader.saved_from_msg_id = messageObject2.getId();
                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader72 = tLRPC$TL_message.fwd_from;
                                        tLRPC$Peer5 = messageObject2.messageOwner.peer_id;
                                        tLRPC$MessageFwdHeader72.saved_from_peer = tLRPC$Peer5;
                                        if (tLRPC$Peer5.user_id == clientUserId) {
                                        }
                                    }
                                }
                                HashMap<String, String> hashMap = new HashMap<>();
                                tLRPC$TL_message.params = hashMap;
                                hashMap.put("fwd_id", "" + messageObject2.getId());
                                tLRPC$TL_message.params.put("fwd_peer", "" + messageObject2.getDialogId());
                                if (!messageObject2.messageOwner.restriction_reason.isEmpty()) {
                                    tLRPC$TL_message.restriction_reason = messageObject2.messageOwner.restriction_reason;
                                    tLRPC$TL_message.flags |= 4194304;
                                }
                                if (!canSendEmbed && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaWebPage)) {
                                    tLRPC$TL_message.media = new TLRPC$TL_messageMediaEmpty();
                                } else {
                                    tLRPC$TL_message.media = messageObject2.messageOwner.media;
                                }
                                TLRPC$Message tLRPC$Message4 = messageObject2.messageOwner;
                                tLRPC$TL_message.invert_media = tLRPC$Message4.invert_media;
                                if (tLRPC$TL_message.media != null) {
                                    tLRPC$TL_message.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                }
                                long j13 = tLRPC$Message4.via_bot_id;
                                if (j13 != 0) {
                                    tLRPC$TL_message.via_bot_id = j13;
                                    tLRPC$TL_message.flags |= 2048;
                                }
                                if (j7 != 0) {
                                    TLRPC$TL_messageReplies tLRPC$TL_messageReplies = new TLRPC$TL_messageReplies();
                                    tLRPC$TL_message.replies = tLRPC$TL_messageReplies;
                                    tLRPC$TL_messageReplies.comments = true;
                                    j8 = j7;
                                    tLRPC$TL_messageReplies.channel_id = j8;
                                    tLRPC$TL_messageReplies.flags |= 1;
                                    tLRPC$TL_message.flags |= 8388608;
                                } else {
                                    j8 = j7;
                                }
                                if (!z18 || tLRPC$TL_message.media == null) {
                                    tLRPC$TL_message.message = messageObject2.messageOwner.message;
                                }
                                if (tLRPC$TL_message.message == null) {
                                    tLRPC$TL_message.message = "";
                                }
                                tLRPC$TL_message.fwd_msg_id = messageObject2.getId();
                                TLRPC$Message tLRPC$Message5 = messageObject2.messageOwner;
                                tLRPC$TL_message.attachPath = tLRPC$Message5.attachPath;
                                tLRPC$TL_message.entities = tLRPC$Message5.entities;
                                if (tLRPC$Message5.reply_markup instanceof TLRPC$TL_replyInlineMarkup) {
                                    tLRPC$TL_message.reply_markup = new TLRPC$TL_replyInlineMarkup();
                                    int size = messageObject2.messageOwner.reply_markup.rows.size();
                                    int i9 = 0;
                                    boolean z21 = false;
                                    while (true) {
                                        if (i9 >= size) {
                                            j9 = j8;
                                            break;
                                        }
                                        TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow2 = messageObject2.messageOwner.reply_markup.rows.get(i9);
                                        int size2 = tLRPC$TL_keyboardButtonRow2.buttons.size();
                                        int i10 = size;
                                        int i11 = 0;
                                        TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow3 = null;
                                        while (true) {
                                            boolean z22 = z21;
                                            if (i11 >= size2) {
                                                j9 = j8;
                                                break;
                                            }
                                            TLRPC$KeyboardButton tLRPC$KeyboardButton = tLRPC$TL_keyboardButtonRow2.buttons.get(i11);
                                            j9 = j8;
                                            boolean z23 = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth;
                                            if (!z23 && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrl) && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonSwitchInline) && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy)) {
                                                z21 = true;
                                                break;
                                            }
                                            if (z23) {
                                                TLRPC$TL_keyboardButtonUrlAuth tLRPC$TL_keyboardButtonUrlAuth = new TLRPC$TL_keyboardButtonUrlAuth();
                                                tLRPC$TL_keyboardButtonUrlAuth.flags = tLRPC$KeyboardButton.flags;
                                                String str6 = tLRPC$KeyboardButton.fwd_text;
                                                if (str6 != null) {
                                                    tLRPC$TL_keyboardButtonUrlAuth.fwd_text = str6;
                                                    tLRPC$TL_keyboardButtonUrlAuth.text = str6;
                                                } else {
                                                    tLRPC$TL_keyboardButtonUrlAuth.text = tLRPC$KeyboardButton.text;
                                                }
                                                tLRPC$TL_keyboardButtonUrlAuth.url = tLRPC$KeyboardButton.url;
                                                tLRPC$TL_keyboardButtonUrlAuth.button_id = tLRPC$KeyboardButton.button_id;
                                                tLRPC$KeyboardButton = tLRPC$TL_keyboardButtonUrlAuth;
                                            }
                                            if (tLRPC$TL_keyboardButtonRow3 == null) {
                                                tLRPC$TL_keyboardButtonRow = new TLRPC$TL_keyboardButtonRow();
                                                tLRPC$TL_message.reply_markup.rows.add(tLRPC$TL_keyboardButtonRow);
                                            } else {
                                                tLRPC$TL_keyboardButtonRow = tLRPC$TL_keyboardButtonRow3;
                                            }
                                            tLRPC$TL_keyboardButtonRow.buttons.add(tLRPC$KeyboardButton);
                                            i11++;
                                            tLRPC$TL_keyboardButtonRow3 = tLRPC$TL_keyboardButtonRow;
                                            z21 = z22;
                                            j8 = j9;
                                        }
                                        if (z21) {
                                            break;
                                        }
                                        i9++;
                                        size = i10;
                                        j8 = j9;
                                    }
                                    if (z21) {
                                        messageObject2.messageOwner.reply_markup = null;
                                        tLRPC$TL_message.flags &= -65;
                                        if (!tLRPC$TL_message.entities.isEmpty()) {
                                            tLRPC$TL_message.flags |= 128;
                                        }
                                        if (tLRPC$TL_message.attachPath == null) {
                                            tLRPC$TL_message.attachPath = "";
                                        }
                                        int newMessageId = getUserConfig().getNewMessageId();
                                        tLRPC$TL_message.id = newMessageId;
                                        tLRPC$TL_message.local_id = newMessageId;
                                        tLRPC$TL_message.out = true;
                                        j10 = messageObject2.messageOwner.grouped_id;
                                        if (j10 != 0) {
                                            Long l = (Long) longSparseArray4.get(j10);
                                            if (l == null) {
                                                l = Long.valueOf(Utilities.random.nextLong());
                                                longSparseArray4.put(messageObject2.messageOwner.grouped_id, l);
                                            }
                                            tLRPC$TL_message.grouped_id = l.longValue();
                                            tLRPC$TL_message.flags |= 131072;
                                        }
                                        tLRPC$Peer3 = tLRPC$Peer;
                                        if (tLRPC$Peer3.channel_id == 0 && z9) {
                                            if (z8) {
                                                TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
                                                tLRPC$TL_message.from_id = tLRPC$TL_peerUser;
                                                tLRPC$TL_peerUser.user_id = clientUserId;
                                            } else {
                                                tLRPC$TL_message.from_id = tLRPC$Peer3;
                                            }
                                            tLRPC$TL_message.post = true;
                                            str5 = str4;
                                            tLRPC$Chat4 = tLRPC$Chat3;
                                        } else {
                                            tLRPC$Chat4 = tLRPC$Chat3;
                                            sendAsPeerId = ChatObject.getSendAsPeerId(tLRPC$Chat4, getMessagesController().getChatFull(-j12), true);
                                            if (sendAsPeerId != clientUserId) {
                                                TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
                                                tLRPC$TL_message.from_id = tLRPC$TL_peerUser2;
                                                tLRPC$TL_peerUser2.user_id = clientUserId;
                                                tLRPC$TL_message.flags |= 256;
                                                str5 = str4;
                                            } else {
                                                tLRPC$TL_message.from_id = getMessagesController().getPeer(sendAsPeerId);
                                                str5 = str4;
                                                if (str4 != null) {
                                                    tLRPC$TL_message.post_author = str5;
                                                    tLRPC$TL_message.flags |= 65536;
                                                }
                                            }
                                        }
                                        if (tLRPC$TL_message.random_id == 0) {
                                            tLRPC$TL_message.random_id = getNextRandomId();
                                        }
                                        ArrayList<Long> arrayList19 = arrayList6;
                                        arrayList19.add(Long.valueOf(tLRPC$TL_message.random_id));
                                        LongSparseArray longSparseArray9 = longSparseArray3;
                                        longSparseArray9.put(tLRPC$TL_message.random_id, tLRPC$TL_message);
                                        ArrayList<Integer> arrayList20 = arrayList15;
                                        arrayList20.add(Integer.valueOf(tLRPC$TL_message.fwd_msg_id));
                                        tLRPC$Chat2 = tLRPC$Chat4;
                                        int i12 = i3;
                                        tLRPC$TL_message.date = i == 0 ? i : getConnectionsManager().getCurrentTime();
                                        TLRPC$InputPeer tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                        z14 = tLRPC$InputPeer3 instanceof TLRPC$TL_inputPeerChannel;
                                        if (z14 || !z9) {
                                            longSparseArray5 = longSparseArray4;
                                            tLRPC$Message = messageObject2.messageOwner;
                                            j11 = clientUserId;
                                            if ((tLRPC$Message.flags & 1024) != 0 && i == 0) {
                                                tLRPC$TL_message.views = tLRPC$Message.views;
                                                tLRPC$TL_message.flags |= 1024;
                                            }
                                            tLRPC$TL_message.unread = true;
                                        } else {
                                            longSparseArray5 = longSparseArray4;
                                            if (i == 0) {
                                                tLRPC$TL_message.views = 1;
                                                tLRPC$TL_message.flags |= 1024;
                                            }
                                            j11 = clientUserId;
                                        }
                                        tLRPC$TL_message.dialog_id = j12;
                                        tLRPC$TL_message.peer_id = tLRPC$Peer3;
                                        if (!MessageObject.isVoiceMessage(tLRPC$TL_message) || MessageObject.isRoundVideoMessage(tLRPC$TL_message)) {
                                            if (!z14 && messageObject2.getChannelId() != 0) {
                                                tLRPC$TL_message.media_unread = messageObject2.isContentUnread();
                                            } else {
                                                tLRPC$TL_message.media_unread = true;
                                            }
                                        }
                                        if (messageObject == null && (tLRPC$MessageReplyHeader = (tLRPC$Message2 = messageObject2.messageOwner).reply_to) != null) {
                                            tLRPC$Peer4 = tLRPC$MessageReplyHeader.reply_to_peer_id;
                                            if (tLRPC$Peer4 != null || MessageObject.peersEqual(tLRPC$Peer4, tLRPC$Message2.peer_id)) {
                                                tLRPC$MessageReplyHeader2 = messageObject2.messageOwner.reply_to;
                                                if ((tLRPC$MessageReplyHeader2.flags & 16) != 0) {
                                                }
                                            }
                                            tLRPC$TL_message.flags |= 8;
                                            tLRPC$TL_message.reply_to = messageObject2.messageOwner.reply_to;
                                        }
                                        ArrayList<Integer> arrayList21 = arrayList20;
                                        MessageObject messageObject3 = new MessageObject(this.currentAccount, tLRPC$TL_message, true, true);
                                        messageObject3.scheduled = i == 0;
                                        messageObject3.messageOwner.send_state = 1;
                                        messageObject3.wasJustSent = true;
                                        ArrayList<MessageObject> arrayList22 = arrayList17;
                                        arrayList22.add(messageObject3);
                                        arrayList7 = arrayList16;
                                        arrayList7.add(tLRPC$TL_message);
                                        String str7 = str5;
                                        if (messageObject2.replyMessageObject != null) {
                                            int i13 = 0;
                                            while (i13 < arrayList.size()) {
                                                arrayList8 = arrayList;
                                                arrayList10 = arrayList21;
                                                arrayList9 = arrayList19;
                                                if (arrayList8.get(i13).getId() == messageObject2.replyMessageObject.getId()) {
                                                    TLRPC$Message tLRPC$Message6 = messageObject3.messageOwner;
                                                    MessageObject messageObject4 = messageObject2.replyMessageObject;
                                                    tLRPC$Message6.replyMessage = messageObject4.messageOwner;
                                                    messageObject3.replyMessageObject = messageObject4;
                                                    break;
                                                }
                                                i13++;
                                                arrayList21 = arrayList10;
                                                arrayList19 = arrayList9;
                                            }
                                        }
                                        arrayList8 = arrayList;
                                        arrayList9 = arrayList19;
                                        arrayList10 = arrayList21;
                                        putToSendingMessages(tLRPC$TL_message, i == 0);
                                        if (BuildVars.LOGS_ENABLED) {
                                            FileLog.d("forward message user_id = " + tLRPC$InputPeer3.user_id + " chat_id = " + tLRPC$InputPeer3.chat_id + " channel_id = " + tLRPC$InputPeer3.channel_id + " access_hash = " + tLRPC$InputPeer3.access_hash);
                                        }
                                        if (messageObject != null) {
                                            TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
                                            tLRPC$TL_message.reply_to = tLRPC$TL_messageReplyHeader;
                                            tLRPC$TL_messageReplyHeader.flags |= 16;
                                            tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject.getId();
                                            if (messageObject.isTopicMainMessage) {
                                                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader3 = tLRPC$TL_message.reply_to;
                                                i4 = 1;
                                                tLRPC$MessageReplyHeader3.forum_topic = true;
                                                tLRPC$MessageReplyHeader3.flags |= 8;
                                                if (arrayList7.size() == 100 && i12 != arrayList.size() - i4 && (i12 == arrayList.size() - i4 || arrayList8.get(i12 + 1).getDialogId() == messageObject2.getDialogId())) {
                                                    tLRPC$InputPeer = tLRPC$InputPeer3;
                                                    arrayList2 = arrayList22;
                                                    arrayList4 = arrayList7;
                                                    i2 = i12;
                                                    longSparseArray = longSparseArray5;
                                                    j6 = j11;
                                                    longSparseArray2 = longSparseArray9;
                                                    arrayList3 = arrayList10;
                                                    arrayList5 = arrayList9;
                                                    str3 = str7;
                                                    j5 = j9;
                                                    tLRPC$Peer2 = tLRPC$Peer3;
                                                    arrayList18 = arrayList5;
                                                    arrayList17 = arrayList2;
                                                    arrayList16 = arrayList4;
                                                    longSparseArray8 = longSparseArray2;
                                                    arrayList15 = arrayList3;
                                                } else {
                                                    getMessagesStorage().putMessages(new ArrayList<>(arrayList7), false, true, false, 0, i != 0 ? 1 : 0, 0L);
                                                    getMessagesController().updateInterfaceWithMessages(j12, arrayList22, i != 0 ? 1 : 0);
                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                    getUserConfig().saveConfig(false);
                                                    final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages = new TLRPC$TL_messages_forwardMessages();
                                                    tLRPC$TL_messages_forwardMessages.to_peer = tLRPC$InputPeer3;
                                                    if (z3) {
                                                        if (!MessagesController.getNotificationsSettings(this.currentAccount).getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + j12, false)) {
                                                            z15 = false;
                                                            tLRPC$TL_messages_forwardMessages.silent = z15;
                                                            if (messageObject != null) {
                                                                tLRPC$TL_messages_forwardMessages.top_msg_id = messageObject.getId();
                                                                tLRPC$TL_messages_forwardMessages.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                            }
                                                            if (i != 0) {
                                                                tLRPC$TL_messages_forwardMessages.schedule_date = i;
                                                                tLRPC$TL_messages_forwardMessages.flags |= 1024;
                                                            }
                                                            if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                                                TLRPC$Chat chat2 = getMessagesController().getChat(Long.valueOf(messageObject2.messageOwner.peer_id.channel_id));
                                                                TLRPC$TL_inputPeerChannel tLRPC$TL_inputPeerChannel = new TLRPC$TL_inputPeerChannel();
                                                                tLRPC$TL_messages_forwardMessages.from_peer = tLRPC$TL_inputPeerChannel;
                                                                i5 = i12;
                                                                tLRPC$TL_inputPeerChannel.channel_id = messageObject2.messageOwner.peer_id.channel_id;
                                                                if (chat2 != null) {
                                                                    tLRPC$TL_inputPeerChannel.access_hash = chat2.access_hash;
                                                                }
                                                            } else {
                                                                i5 = i12;
                                                                tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                            }
                                                            ArrayList<Long> arrayList23 = arrayList9;
                                                            tLRPC$TL_messages_forwardMessages.random_id = arrayList23;
                                                            ArrayList<Integer> arrayList24 = arrayList10;
                                                            tLRPC$TL_messages_forwardMessages.id = arrayList24;
                                                            tLRPC$TL_messages_forwardMessages.drop_author = z;
                                                            tLRPC$TL_messages_forwardMessages.drop_media_captions = z2;
                                                            if (arrayList.size() == 1 && arrayList8.get(0).messageOwner.with_my_score) {
                                                                z16 = true;
                                                                tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                                                final ArrayList arrayList25 = new ArrayList(arrayList22);
                                                                arrayList5 = arrayList23;
                                                                arrayList2 = arrayList22;
                                                                longSparseArray = longSparseArray5;
                                                                arrayList4 = arrayList7;
                                                                j5 = j9;
                                                                tLRPC$Peer2 = tLRPC$Peer3;
                                                                tLRPC$InputPeer = tLRPC$InputPeer3;
                                                                longSparseArray2 = longSparseArray9;
                                                                arrayList3 = arrayList24;
                                                                j6 = j11;
                                                                final boolean z24 = i != 2147483646;
                                                                final boolean z25 = z19;
                                                                str3 = str7;
                                                                getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda3
                                                                    @Override // org.telegram.tgnet.RequestDelegate
                                                                    public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                                        SendMessagesHelper.this.lambda$sendMessage$14(j, i, z24, z25, longSparseArray2, arrayList4, arrayList25, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                                    }
                                                                }, 68);
                                                                i2 = i5;
                                                                if (i2 != arrayList.size() - 1) {
                                                                    arrayList17 = new ArrayList<>();
                                                                    arrayList16 = new ArrayList();
                                                                    arrayList18 = new ArrayList<>();
                                                                    arrayList15 = new ArrayList<>();
                                                                    longSparseArray8 = new LongSparseArray();
                                                                }
                                                                arrayList18 = arrayList5;
                                                                arrayList17 = arrayList2;
                                                                arrayList16 = arrayList4;
                                                                longSparseArray8 = longSparseArray2;
                                                                arrayList15 = arrayList3;
                                                            }
                                                            z16 = false;
                                                            tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                                            final ArrayList arrayList252 = new ArrayList(arrayList22);
                                                            arrayList5 = arrayList23;
                                                            arrayList2 = arrayList22;
                                                            longSparseArray = longSparseArray5;
                                                            arrayList4 = arrayList7;
                                                            j5 = j9;
                                                            tLRPC$Peer2 = tLRPC$Peer3;
                                                            tLRPC$InputPeer = tLRPC$InputPeer3;
                                                            longSparseArray2 = longSparseArray9;
                                                            arrayList3 = arrayList24;
                                                            j6 = j11;
                                                            final boolean z242 = i != 2147483646;
                                                            final boolean z252 = z19;
                                                            str3 = str7;
                                                            getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda3
                                                                @Override // org.telegram.tgnet.RequestDelegate
                                                                public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                                    SendMessagesHelper.this.lambda$sendMessage$14(j, i, z242, z252, longSparseArray2, arrayList4, arrayList252, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                                }
                                                            }, 68);
                                                            i2 = i5;
                                                            if (i2 != arrayList.size() - 1) {
                                                            }
                                                            arrayList18 = arrayList5;
                                                            arrayList17 = arrayList2;
                                                            arrayList16 = arrayList4;
                                                            longSparseArray8 = longSparseArray2;
                                                            arrayList15 = arrayList3;
                                                        }
                                                    }
                                                    z15 = true;
                                                    tLRPC$TL_messages_forwardMessages.silent = z15;
                                                    if (messageObject != null) {
                                                    }
                                                    if (i != 0) {
                                                    }
                                                    if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                                    }
                                                    ArrayList<Long> arrayList232 = arrayList9;
                                                    tLRPC$TL_messages_forwardMessages.random_id = arrayList232;
                                                    ArrayList<Integer> arrayList242 = arrayList10;
                                                    tLRPC$TL_messages_forwardMessages.id = arrayList242;
                                                    tLRPC$TL_messages_forwardMessages.drop_author = z;
                                                    tLRPC$TL_messages_forwardMessages.drop_media_captions = z2;
                                                    if (arrayList.size() == 1) {
                                                        z16 = true;
                                                        tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                                        final ArrayList arrayList2522 = new ArrayList(arrayList22);
                                                        arrayList5 = arrayList232;
                                                        arrayList2 = arrayList22;
                                                        longSparseArray = longSparseArray5;
                                                        arrayList4 = arrayList7;
                                                        j5 = j9;
                                                        tLRPC$Peer2 = tLRPC$Peer3;
                                                        tLRPC$InputPeer = tLRPC$InputPeer3;
                                                        longSparseArray2 = longSparseArray9;
                                                        arrayList3 = arrayList242;
                                                        j6 = j11;
                                                        final boolean z2422 = i != 2147483646;
                                                        final boolean z2522 = z19;
                                                        str3 = str7;
                                                        getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda3
                                                            @Override // org.telegram.tgnet.RequestDelegate
                                                            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                                SendMessagesHelper.this.lambda$sendMessage$14(j, i, z2422, z2522, longSparseArray2, arrayList4, arrayList2522, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                            }
                                                        }, 68);
                                                        i2 = i5;
                                                        if (i2 != arrayList.size() - 1) {
                                                        }
                                                        arrayList18 = arrayList5;
                                                        arrayList17 = arrayList2;
                                                        arrayList16 = arrayList4;
                                                        longSparseArray8 = longSparseArray2;
                                                        arrayList15 = arrayList3;
                                                    }
                                                    z16 = false;
                                                    tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                                    final ArrayList arrayList25222 = new ArrayList(arrayList22);
                                                    arrayList5 = arrayList232;
                                                    arrayList2 = arrayList22;
                                                    longSparseArray = longSparseArray5;
                                                    arrayList4 = arrayList7;
                                                    j5 = j9;
                                                    tLRPC$Peer2 = tLRPC$Peer3;
                                                    tLRPC$InputPeer = tLRPC$InputPeer3;
                                                    longSparseArray2 = longSparseArray9;
                                                    arrayList3 = arrayList242;
                                                    j6 = j11;
                                                    final boolean z24222 = i != 2147483646;
                                                    final boolean z25222 = z19;
                                                    str3 = str7;
                                                    getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda3
                                                        @Override // org.telegram.tgnet.RequestDelegate
                                                        public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                            SendMessagesHelper.this.lambda$sendMessage$14(j, i, z24222, z25222, longSparseArray2, arrayList4, arrayList25222, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                        }
                                                    }, 68);
                                                    i2 = i5;
                                                    if (i2 != arrayList.size() - 1) {
                                                    }
                                                    arrayList18 = arrayList5;
                                                    arrayList17 = arrayList2;
                                                    arrayList16 = arrayList4;
                                                    longSparseArray8 = longSparseArray2;
                                                    arrayList15 = arrayList3;
                                                }
                                            }
                                        }
                                        i4 = 1;
                                        if (arrayList7.size() == 100) {
                                        }
                                        getMessagesStorage().putMessages(new ArrayList<>(arrayList7), false, true, false, 0, i != 0 ? 1 : 0, 0L);
                                        getMessagesController().updateInterfaceWithMessages(j12, arrayList22, i != 0 ? 1 : 0);
                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        getUserConfig().saveConfig(false);
                                        final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages2 = new TLRPC$TL_messages_forwardMessages();
                                        tLRPC$TL_messages_forwardMessages2.to_peer = tLRPC$InputPeer3;
                                        if (z3) {
                                        }
                                        z15 = true;
                                        tLRPC$TL_messages_forwardMessages2.silent = z15;
                                        if (messageObject != null) {
                                        }
                                        if (i != 0) {
                                        }
                                        if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                        }
                                        ArrayList<Long> arrayList2322 = arrayList9;
                                        tLRPC$TL_messages_forwardMessages2.random_id = arrayList2322;
                                        ArrayList<Integer> arrayList2422 = arrayList10;
                                        tLRPC$TL_messages_forwardMessages2.id = arrayList2422;
                                        tLRPC$TL_messages_forwardMessages2.drop_author = z;
                                        tLRPC$TL_messages_forwardMessages2.drop_media_captions = z2;
                                        if (arrayList.size() == 1) {
                                        }
                                        z16 = false;
                                        tLRPC$TL_messages_forwardMessages2.with_my_score = z16;
                                        final ArrayList arrayList252222 = new ArrayList(arrayList22);
                                        arrayList5 = arrayList2322;
                                        arrayList2 = arrayList22;
                                        longSparseArray = longSparseArray5;
                                        arrayList4 = arrayList7;
                                        j5 = j9;
                                        tLRPC$Peer2 = tLRPC$Peer3;
                                        tLRPC$InputPeer = tLRPC$InputPeer3;
                                        longSparseArray2 = longSparseArray9;
                                        arrayList3 = arrayList2422;
                                        j6 = j11;
                                        final boolean z242222 = i != 2147483646;
                                        final boolean z252222 = z19;
                                        str3 = str7;
                                        getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages2, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda3
                                            @Override // org.telegram.tgnet.RequestDelegate
                                            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                SendMessagesHelper.this.lambda$sendMessage$14(j, i, z242222, z252222, longSparseArray2, arrayList4, arrayList252222, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages2, tLObject, tLRPC$TL_error);
                                            }
                                        }, 68);
                                        i2 = i5;
                                        if (i2 != arrayList.size() - 1) {
                                        }
                                        arrayList18 = arrayList5;
                                        arrayList17 = arrayList2;
                                        arrayList16 = arrayList4;
                                        longSparseArray8 = longSparseArray2;
                                        arrayList15 = arrayList3;
                                    } else {
                                        tLRPC$TL_message.flags |= 64;
                                    }
                                } else {
                                    j9 = j8;
                                }
                                if (!tLRPC$TL_message.entities.isEmpty()) {
                                }
                                if (tLRPC$TL_message.attachPath == null) {
                                }
                                int newMessageId2 = getUserConfig().getNewMessageId();
                                tLRPC$TL_message.id = newMessageId2;
                                tLRPC$TL_message.local_id = newMessageId2;
                                tLRPC$TL_message.out = true;
                                j10 = messageObject2.messageOwner.grouped_id;
                                if (j10 != 0) {
                                }
                                tLRPC$Peer3 = tLRPC$Peer;
                                if (tLRPC$Peer3.channel_id == 0) {
                                }
                                tLRPC$Chat4 = tLRPC$Chat3;
                                sendAsPeerId = ChatObject.getSendAsPeerId(tLRPC$Chat4, getMessagesController().getChatFull(-j12), true);
                                if (sendAsPeerId != clientUserId) {
                                }
                                if (tLRPC$TL_message.random_id == 0) {
                                }
                                ArrayList<Long> arrayList192 = arrayList6;
                                arrayList192.add(Long.valueOf(tLRPC$TL_message.random_id));
                                LongSparseArray longSparseArray92 = longSparseArray3;
                                longSparseArray92.put(tLRPC$TL_message.random_id, tLRPC$TL_message);
                                ArrayList<Integer> arrayList202 = arrayList15;
                                arrayList202.add(Integer.valueOf(tLRPC$TL_message.fwd_msg_id));
                                tLRPC$Chat2 = tLRPC$Chat4;
                                int i122 = i3;
                                tLRPC$TL_message.date = i == 0 ? i : getConnectionsManager().getCurrentTime();
                                TLRPC$InputPeer tLRPC$InputPeer32 = tLRPC$InputPeer2;
                                z14 = tLRPC$InputPeer32 instanceof TLRPC$TL_inputPeerChannel;
                                if (z14) {
                                }
                                longSparseArray5 = longSparseArray4;
                                tLRPC$Message = messageObject2.messageOwner;
                                j11 = clientUserId;
                                if ((tLRPC$Message.flags & 1024) != 0) {
                                    tLRPC$TL_message.views = tLRPC$Message.views;
                                    tLRPC$TL_message.flags |= 1024;
                                }
                                tLRPC$TL_message.unread = true;
                                tLRPC$TL_message.dialog_id = j12;
                                tLRPC$TL_message.peer_id = tLRPC$Peer3;
                                if (!MessageObject.isVoiceMessage(tLRPC$TL_message)) {
                                }
                                if (!z14) {
                                }
                                tLRPC$TL_message.media_unread = true;
                                if (messageObject == null) {
                                    tLRPC$Peer4 = tLRPC$MessageReplyHeader.reply_to_peer_id;
                                    if (tLRPC$Peer4 != null) {
                                    }
                                    tLRPC$MessageReplyHeader2 = messageObject2.messageOwner.reply_to;
                                    if ((tLRPC$MessageReplyHeader2.flags & 16) != 0) {
                                    }
                                }
                                ArrayList<Integer> arrayList212 = arrayList202;
                                MessageObject messageObject32 = new MessageObject(this.currentAccount, tLRPC$TL_message, true, true);
                                messageObject32.scheduled = i == 0;
                                messageObject32.messageOwner.send_state = 1;
                                messageObject32.wasJustSent = true;
                                ArrayList<MessageObject> arrayList222 = arrayList17;
                                arrayList222.add(messageObject32);
                                arrayList7 = arrayList16;
                                arrayList7.add(tLRPC$TL_message);
                                String str72 = str5;
                                if (messageObject2.replyMessageObject != null) {
                                }
                                arrayList8 = arrayList;
                                arrayList9 = arrayList192;
                                arrayList10 = arrayList212;
                                putToSendingMessages(tLRPC$TL_message, i == 0);
                                if (BuildVars.LOGS_ENABLED) {
                                }
                                if (messageObject != null) {
                                }
                                i4 = 1;
                                if (arrayList7.size() == 100) {
                                }
                                getMessagesStorage().putMessages(new ArrayList<>(arrayList7), false, true, false, 0, i != 0 ? 1 : 0, 0L);
                                getMessagesController().updateInterfaceWithMessages(j12, arrayList222, i != 0 ? 1 : 0);
                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                                getUserConfig().saveConfig(false);
                                final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages22 = new TLRPC$TL_messages_forwardMessages();
                                tLRPC$TL_messages_forwardMessages22.to_peer = tLRPC$InputPeer32;
                                if (z3) {
                                }
                                z15 = true;
                                tLRPC$TL_messages_forwardMessages22.silent = z15;
                                if (messageObject != null) {
                                }
                                if (i != 0) {
                                }
                                if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                }
                                ArrayList<Long> arrayList23222 = arrayList9;
                                tLRPC$TL_messages_forwardMessages22.random_id = arrayList23222;
                                ArrayList<Integer> arrayList24222 = arrayList10;
                                tLRPC$TL_messages_forwardMessages22.id = arrayList24222;
                                tLRPC$TL_messages_forwardMessages22.drop_author = z;
                                tLRPC$TL_messages_forwardMessages22.drop_media_captions = z2;
                                if (arrayList.size() == 1) {
                                }
                                z16 = false;
                                tLRPC$TL_messages_forwardMessages22.with_my_score = z16;
                                final ArrayList arrayList2522222 = new ArrayList(arrayList222);
                                arrayList5 = arrayList23222;
                                arrayList2 = arrayList222;
                                longSparseArray = longSparseArray5;
                                arrayList4 = arrayList7;
                                j5 = j9;
                                tLRPC$Peer2 = tLRPC$Peer3;
                                tLRPC$InputPeer = tLRPC$InputPeer32;
                                longSparseArray2 = longSparseArray92;
                                arrayList3 = arrayList24222;
                                j6 = j11;
                                final boolean z2422222 = i != 2147483646;
                                final boolean z2522222 = z19;
                                str3 = str72;
                                getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages22, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda3
                                    @Override // org.telegram.tgnet.RequestDelegate
                                    public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                        SendMessagesHelper.this.lambda$sendMessage$14(j, i, z2422222, z2522222, longSparseArray2, arrayList4, arrayList2522222, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages22, tLObject, tLRPC$TL_error);
                                    }
                                }, 68);
                                i2 = i5;
                                if (i2 != arrayList.size() - 1) {
                                }
                                arrayList18 = arrayList5;
                                arrayList17 = arrayList2;
                                arrayList16 = arrayList4;
                                longSparseArray8 = longSparseArray2;
                                arrayList15 = arrayList3;
                            } else {
                                if (i8 == 0) {
                                    i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 19) ? 17 : 18;
                                    longSparseArray = longSparseArray6;
                                    j5 = j4;
                                    j6 = clientUserId;
                                    str3 = str2;
                                    tLRPC$Chat2 = tLRPC$Chat;
                                    i8 = i6;
                                    tLRPC$Peer2 = tLRPC$Peer;
                                    tLRPC$InputPeer = tLRPC$InputPeer2;
                                    i2 = i3;
                                }
                                longSparseArray = longSparseArray6;
                                j5 = j4;
                                longSparseArray2 = longSparseArray8;
                                j6 = clientUserId;
                                str3 = str2;
                                tLRPC$Chat2 = tLRPC$Chat;
                                tLRPC$Peer2 = tLRPC$Peer;
                                arrayList2 = arrayList17;
                                tLRPC$InputPeer = tLRPC$InputPeer2;
                                arrayList3 = arrayList15;
                                i2 = i3;
                                arrayList4 = arrayList16;
                                arrayList5 = arrayList18;
                                arrayList18 = arrayList5;
                                arrayList17 = arrayList2;
                                arrayList16 = arrayList4;
                                longSparseArray8 = longSparseArray2;
                                arrayList15 = arrayList3;
                            }
                        } else if (tLRPC$Chat != null) {
                            if (i8 == 0) {
                                i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 21) ? 15 : 16;
                                longSparseArray = longSparseArray6;
                                j5 = j4;
                                j6 = clientUserId;
                                str3 = str2;
                                tLRPC$Chat2 = tLRPC$Chat;
                                i8 = i6;
                                tLRPC$Peer2 = tLRPC$Peer;
                                tLRPC$InputPeer = tLRPC$InputPeer2;
                                i2 = i3;
                            }
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            longSparseArray2 = longSparseArray8;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            tLRPC$Peer2 = tLRPC$Peer;
                            arrayList2 = arrayList17;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            arrayList3 = arrayList15;
                            i2 = i3;
                            arrayList4 = arrayList16;
                            arrayList5 = arrayList18;
                            arrayList18 = arrayList5;
                            arrayList17 = arrayList2;
                            arrayList16 = arrayList4;
                            longSparseArray8 = longSparseArray2;
                            arrayList15 = arrayList3;
                        } else {
                            if (i8 == 0) {
                                i6 = 8;
                                longSparseArray = longSparseArray6;
                                j5 = j4;
                                j6 = clientUserId;
                                str3 = str2;
                                tLRPC$Chat2 = tLRPC$Chat;
                                i8 = i6;
                                tLRPC$Peer2 = tLRPC$Peer;
                                tLRPC$InputPeer = tLRPC$InputPeer2;
                                i2 = i3;
                            }
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            longSparseArray2 = longSparseArray8;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            tLRPC$Peer2 = tLRPC$Peer;
                            arrayList2 = arrayList17;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            arrayList3 = arrayList15;
                            i2 = i3;
                            arrayList4 = arrayList16;
                            arrayList5 = arrayList18;
                            arrayList18 = arrayList5;
                            arrayList17 = arrayList2;
                            arrayList16 = arrayList4;
                            longSparseArray8 = longSparseArray2;
                            arrayList15 = arrayList3;
                        }
                    } else if (tLRPC$Chat != null) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 20) ? 13 : 14;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else {
                        if (i8 == 0) {
                            i6 = 7;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    }
                }
                i7 = i2 + 1;
                arrayList11 = arrayList;
                j12 = j;
                z17 = z;
                z18 = z2;
                tLRPC$Chat = tLRPC$Chat2;
                tLRPC$Peer = tLRPC$Peer2;
                longSparseArray6 = longSparseArray;
                j4 = j5;
                tLRPC$InputPeer2 = tLRPC$InputPeer;
                clientUserId = j6;
                str2 = str3;
            }
            return i8;
        }
        long j14 = getMessagesController().getEncryptedChat(Integer.valueOf((int) j)).user_id;
        boolean z26 = (!DialogObject.isUserDialog(j14) || getMessagesController().getUser(Long.valueOf(j14)) == null || (userFull = getMessagesController().getUserFull(j14)) == null) ? true : !userFull.voice_messages_forbidden;
        int i14 = 0;
        for (int i15 = 0; i15 < arrayList.size(); i15++) {
            MessageObject messageObject5 = arrayList.get(i15);
            if (z26 || !MessageObject.isVoiceMessage(messageObject5.messageOwner)) {
                if (!z26 && MessageObject.isRoundVideoMessage(messageObject5.messageOwner) && i14 == 0) {
                    i14 = 8;
                }
            } else if (i14 == 0) {
                i14 = 7;
            }
        }
        if (i14 == 0) {
            for (int i16 = 0; i16 < arrayList.size(); i16++) {
                processForwardFromMyName(arrayList.get(i16), j);
            }
        }
        return i14;
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:50:0x010d  */
    /* JADX WARN: Removed duplicated region for block: B:56:0x011c  */
    /* JADX WARN: Removed duplicated region for block: B:57:0x0125  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$sendMessage$14(final long j, final int i, boolean z, boolean z2, LongSparseArray longSparseArray, ArrayList arrayList, ArrayList arrayList2, final MessageObject messageObject, final TLRPC$Peer tLRPC$Peer, final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages, TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        SparseLongArray sparseLongArray;
        TLRPC$Message tLRPC$Message;
        TLRPC$Message tLRPC$Message2;
        boolean z3;
        SparseLongArray sparseLongArray2;
        long j2;
        TLRPC$Updates tLRPC$Updates;
        SparseLongArray sparseLongArray3;
        int i2;
        final TLRPC$Message tLRPC$Message3;
        int indexOf;
        int i3 = i;
        ArrayList arrayList3 = arrayList;
        ArrayList arrayList4 = arrayList2;
        int i4 = -1;
        int i5 = 0;
        if (tLRPC$TL_error == null) {
            SparseLongArray sparseLongArray4 = new SparseLongArray();
            TLRPC$Updates tLRPC$Updates2 = (TLRPC$Updates) tLObject;
            int i6 = 0;
            while (i6 < tLRPC$Updates2.updates.size()) {
                TLRPC$Update tLRPC$Update = tLRPC$Updates2.updates.get(i6);
                if (tLRPC$Update instanceof TLRPC$TL_updateMessageID) {
                    TLRPC$TL_updateMessageID tLRPC$TL_updateMessageID = (TLRPC$TL_updateMessageID) tLRPC$Update;
                    sparseLongArray4.put(tLRPC$TL_updateMessageID.id, tLRPC$TL_updateMessageID.random_id);
                    tLRPC$Updates2.updates.remove(i6);
                    i6--;
                }
                i6++;
            }
            getNotificationCenter().postNotificationNameOnUIThread(NotificationCenter.savedMessagesForwarded, sparseLongArray4);
            Integer num = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(j));
            if (num == null) {
                num = Integer.valueOf(getMessagesStorage().getDialogReadMax(true, j));
                getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(j), num);
            }
            Integer num2 = num;
            int i7 = 0;
            int i8 = 0;
            while (i7 < tLRPC$Updates2.updates.size()) {
                TLRPC$Update tLRPC$Update2 = tLRPC$Updates2.updates.get(i7);
                boolean z4 = tLRPC$Update2 instanceof TLRPC$TL_updateNewMessage;
                if (z4 || (tLRPC$Update2 instanceof TLRPC$TL_updateNewChannelMessage) || (tLRPC$Update2 instanceof TLRPC$TL_updateNewScheduledMessage) || (tLRPC$Update2 instanceof TLRPC$TL_updateQuickReplyMessage)) {
                    boolean z5 = i3 != 0;
                    tLRPC$Updates2.updates.remove(i7);
                    int i9 = i7 - 1;
                    if (z4) {
                        TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update2;
                        tLRPC$Message2 = tLRPC$TL_updateNewMessage.message;
                        getMessagesController().processNewDifferenceParams(i4, tLRPC$TL_updateNewMessage.pts, i4, tLRPC$TL_updateNewMessage.pts_count);
                    } else if (tLRPC$Update2 instanceof TLRPC$TL_updateNewScheduledMessage) {
                        tLRPC$Message2 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update2).message;
                    } else if (tLRPC$Update2 instanceof TLRPC$TL_updateQuickReplyMessage) {
                        QuickRepliesController.getInstance(this.currentAccount).processUpdate(tLRPC$Update2, null, i5);
                        tLRPC$Message2 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update2).message;
                    } else {
                        TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update2;
                        TLRPC$Message tLRPC$Message4 = tLRPC$TL_updateNewChannelMessage.message;
                        sparseLongArray = sparseLongArray4;
                        getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$Message4.peer_id.channel_id);
                        tLRPC$Message = tLRPC$Message4;
                        z3 = (z || tLRPC$Message.date == 2147483646) ? z5 : false;
                        ImageLoader.saveMessageThumbs(tLRPC$Message);
                        if (!z3) {
                            tLRPC$Message.unread = num2.intValue() < tLRPC$Message.id;
                        }
                        if (!z2) {
                            tLRPC$Message.out = true;
                            tLRPC$Message.unread = false;
                            tLRPC$Message.media_unread = false;
                        }
                        sparseLongArray2 = sparseLongArray;
                        j2 = sparseLongArray2.get(tLRPC$Message.id);
                        if (j2 != 0 || (tLRPC$Message3 = (TLRPC$Message) longSparseArray.get(j2)) == null || (indexOf = arrayList3.indexOf(tLRPC$Message3)) == -1) {
                            tLRPC$Updates = tLRPC$Updates2;
                            sparseLongArray3 = sparseLongArray2;
                            i2 = 1;
                            i8 = i8;
                            i7 = i9;
                        } else {
                            MessageObject messageObject2 = (MessageObject) arrayList4.get(indexOf);
                            arrayList3.remove(indexOf);
                            arrayList4.remove(indexOf);
                            final int i10 = tLRPC$Message3.id;
                            final ArrayList arrayList5 = new ArrayList();
                            arrayList5.add(tLRPC$Message);
                            TLRPC$Message tLRPC$Message5 = messageObject2.messageOwner;
                            tLRPC$Message5.post_author = tLRPC$Message.post_author;
                            if ((tLRPC$Message.flags & ConnectionsManager.FileTypeVideo) != 0) {
                                tLRPC$Message5.ttl_period = tLRPC$Message.ttl_period;
                                tLRPC$Message5.flags |= ConnectionsManager.FileTypeVideo;
                            }
                            updateMediaPaths(messageObject2, tLRPC$Message, tLRPC$Message.id, null, true);
                            final int mediaExistanceFlags = messageObject2.getMediaExistanceFlags();
                            tLRPC$Message3.id = tLRPC$Message.id;
                            int i11 = i8 + 1;
                            if (i3 != 0 && !z3) {
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda49
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.this.lambda$sendMessage$9(i10, tLRPC$Message3, arrayList5, messageObject, i);
                                    }
                                });
                                tLRPC$Updates = tLRPC$Updates2;
                                sparseLongArray3 = sparseLongArray2;
                                i2 = 1;
                            } else {
                                final TLRPC$Message tLRPC$Message6 = tLRPC$Message;
                                tLRPC$Updates = tLRPC$Updates2;
                                sparseLongArray3 = sparseLongArray2;
                                i2 = 1;
                                getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda50
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.this.lambda$sendMessage$11(i, tLRPC$Message6, tLRPC$Message3, tLRPC$Peer, i10, arrayList5, j, mediaExistanceFlags);
                                    }
                                });
                            }
                            i7 = i9;
                            i8 = i11;
                        }
                    }
                    tLRPC$Message = tLRPC$Message2;
                    sparseLongArray = sparseLongArray4;
                    if (z) {
                    }
                    ImageLoader.saveMessageThumbs(tLRPC$Message);
                    if (!z3) {
                    }
                    if (!z2) {
                    }
                    sparseLongArray2 = sparseLongArray;
                    j2 = sparseLongArray2.get(tLRPC$Message.id);
                    if (j2 != 0) {
                    }
                    tLRPC$Updates = tLRPC$Updates2;
                    sparseLongArray3 = sparseLongArray2;
                    i2 = 1;
                    i8 = i8;
                    i7 = i9;
                } else {
                    tLRPC$Updates = tLRPC$Updates2;
                    sparseLongArray3 = sparseLongArray4;
                    i2 = 1;
                }
                i7 += i2;
                i3 = i;
                arrayList3 = arrayList;
                tLRPC$Updates2 = tLRPC$Updates;
                sparseLongArray4 = sparseLongArray3;
                i5 = 0;
                i4 = -1;
                arrayList4 = arrayList2;
            }
            int i12 = i8;
            TLRPC$Updates tLRPC$Updates3 = tLRPC$Updates2;
            if (!tLRPC$Updates3.updates.isEmpty()) {
                getMessagesController().processUpdates(tLRPC$Updates3, false);
            }
            getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, i12);
        } else {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda51
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$sendMessage$12(tLRPC$TL_error, tLRPC$TL_messages_forwardMessages);
                }
            });
        }
        for (int i13 = 0; i13 < arrayList.size(); i13++) {
            final TLRPC$Message tLRPC$Message7 = (TLRPC$Message) arrayList.get(i13);
            getMessagesStorage().markMessageAsSendError(tLRPC$Message7, i != 0 ? 1 : 0);
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda52
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$sendMessage$13(tLRPC$Message7, i);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$9(final int i, final TLRPC$Message tLRPC$Message, final ArrayList arrayList, final MessageObject messageObject, final int i2) {
        ArrayList<Integer> arrayList2 = new ArrayList<>();
        arrayList2.add(Integer.valueOf(i));
        getMessagesController().deleteMessages(arrayList2, null, null, tLRPC$Message.dialog_id, tLRPC$Message.quick_reply_shortcut_id, false, 1);
        getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda87
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendMessage$8(arrayList, messageObject, tLRPC$Message, i, i2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$8(ArrayList arrayList, final MessageObject messageObject, final TLRPC$Message tLRPC$Message, final int i, final int i2) {
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, 0, 0L);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda5
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendMessage$7(messageObject, tLRPC$Message, i, i2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$7(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, int i2) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(new MessageObject(messageObject.currentAccount, messageObject.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message.dialog_id, arrayList, 0);
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        processSentMessage(i);
        removeFromSendingMessages(i, i2 != 0);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$11(final int i, final TLRPC$Message tLRPC$Message, final TLRPC$Message tLRPC$Message2, TLRPC$Peer tLRPC$Peer, final int i2, ArrayList arrayList, final long j, final int i3) {
        int i4 = (tLRPC$Message.quick_reply_shortcut_id == 0 && tLRPC$Message.quick_reply_shortcut == null) ? i != 0 ? 1 : 0 : 5;
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message2.random_id, MessageObject.getPeerId(tLRPC$Peer), Integer.valueOf(i2), tLRPC$Message2.id, 0, false, i != 0 ? 1 : 0, tLRPC$Message.quick_reply_shortcut_id);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, i4, tLRPC$Message.quick_reply_shortcut_id);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda2
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendMessage$10(tLRPC$Message2, j, i2, tLRPC$Message, i3, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$10(TLRPC$Message tLRPC$Message, long j, int i, TLRPC$Message tLRPC$Message2, int i2, int i3) {
        tLRPC$Message.send_state = 0;
        getMediaDataController().increasePeerRaiting(j);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i), Integer.valueOf(tLRPC$Message2.id), tLRPC$Message2, Long.valueOf(j), 0L, Integer.valueOf(i2), Boolean.valueOf(i3 != 0));
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer2, Integer.valueOf(i), Integer.valueOf(tLRPC$Message2.id), tLRPC$Message2, Long.valueOf(j), 0L, Integer.valueOf(i2), Boolean.valueOf(i3 != 0));
        processSentMessage(i);
        removeFromSendingMessages(i, i3 != 0);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$12(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages) {
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLRPC$TL_messages_forwardMessages, new Object[0]);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$13(TLRPC$Message tLRPC$Message, int i) {
        tLRPC$Message.send_state = 2;
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
        processSentMessage(tLRPC$Message.id);
        removeFromSendingMessages(tLRPC$Message.id, i != 0);
    }

    public static int canSendMessageToChat(TLRPC$Chat tLRPC$Chat, MessageObject messageObject) {
        boolean canSendStickers = ChatObject.canSendStickers(tLRPC$Chat);
        boolean canSendPhoto = ChatObject.canSendPhoto(tLRPC$Chat);
        boolean canSendVideo = ChatObject.canSendVideo(tLRPC$Chat);
        boolean canSendDocument = ChatObject.canSendDocument(tLRPC$Chat);
        ChatObject.canSendEmbed(tLRPC$Chat);
        boolean canSendPolls = ChatObject.canSendPolls(tLRPC$Chat);
        boolean canSendRoundVideo = ChatObject.canSendRoundVideo(tLRPC$Chat);
        boolean canSendVoice = ChatObject.canSendVoice(tLRPC$Chat);
        boolean canSendMusic = ChatObject.canSendMusic(tLRPC$Chat);
        boolean z = messageObject.isSticker() || messageObject.isAnimatedSticker() || messageObject.isGif() || messageObject.isGame();
        if (!canSendStickers && z) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 8) ? 4 : 1;
        } else if (!canSendPhoto && (messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) && !messageObject.isVideo() && !z) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 16) ? 10 : 12;
        } else if (!canSendMusic && messageObject.isMusic()) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 18) ? 19 : 20;
        } else if (!canSendVideo && messageObject.isVideo() && !z) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 17) ? 9 : 11;
        } else if (!canSendPolls && (messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaPoll)) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 10) ? 6 : 3;
        } else if (!canSendVoice && MessageObject.isVoiceMessage(messageObject.messageOwner)) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 20) ? 13 : 14;
        } else if (!canSendRoundVideo && MessageObject.isRoundVideoMessage(messageObject.messageOwner)) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 21) ? 15 : 16;
        } else if (canSendDocument || !(messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaDocument) || z) {
            return 0;
        } else {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 19) ? 17 : 18;
        }
    }

    private void writePreviousMessageData(TLRPC$Message tLRPC$Message, SerializedData serializedData) {
        TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
        if (tLRPC$MessageMedia == null) {
            new TLRPC$TL_messageMediaEmpty().serializeToStream(serializedData);
        } else {
            tLRPC$MessageMedia.serializeToStream(serializedData);
        }
        String str = tLRPC$Message.message;
        if (str == null) {
            str = "";
        }
        serializedData.writeString(str);
        String str2 = tLRPC$Message.attachPath;
        serializedData.writeString(str2 != null ? str2 : "");
        int size = tLRPC$Message.entities.size();
        serializedData.writeInt32(size);
        for (int i = 0; i < size; i++) {
            tLRPC$Message.entities.get(i).serializeToStream(serializedData);
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:202:0x03fc, code lost:
        if (r9.muted == false) goto L199;
     */
    /* JADX WARN: Removed duplicated region for block: B:124:0x0251 A[Catch: Exception -> 0x0049, TryCatch #0 {Exception -> 0x0049, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:23:0x0053, B:26:0x005d, B:29:0x0062, B:31:0x0066, B:43:0x008c, B:46:0x0092, B:48:0x0098, B:50:0x009f, B:77:0x016f, B:79:0x0173, B:80:0x0177, B:88:0x0191, B:93:0x019a, B:95:0x019e, B:97:0x01ae, B:99:0x01b2, B:103:0x01c7, B:105:0x01cb, B:107:0x01d1, B:122:0x021e, B:124:0x0251, B:126:0x0259, B:129:0x025e, B:130:0x0265, B:131:0x0268, B:134:0x0298, B:136:0x02a0, B:146:0x02b8, B:148:0x02bc, B:150:0x02c0, B:157:0x02d7, B:159:0x02db, B:243:0x04fd, B:245:0x051a, B:246:0x0522, B:248:0x0526, B:249:0x0532, B:251:0x0539, B:252:0x0544, B:254:0x0548, B:256:0x055e, B:263:0x058a, B:258:0x0566, B:260:0x057a, B:262:0x0580, B:265:0x0590, B:268:0x0595, B:272:0x05b2, B:273:0x05b7, B:277:0x05cf, B:278:0x05d4, B:281:0x05ee, B:285:0x0609, B:286:0x060d, B:290:0x0629, B:291:0x062d, B:152:0x02c6, B:154:0x02ca, B:164:0x02fa, B:166:0x0303, B:168:0x030b, B:170:0x031c, B:171:0x0331, B:172:0x033a, B:179:0x0368, B:181:0x037c, B:183:0x0382, B:185:0x038c, B:186:0x038f, B:175:0x0345, B:177:0x035f, B:178:0x0364, B:190:0x03aa, B:192:0x03b3, B:194:0x03bb, B:196:0x03cc, B:197:0x03dd, B:198:0x03e6, B:201:0x03f8, B:205:0x0403, B:207:0x0409, B:209:0x0411, B:216:0x0443, B:218:0x045d, B:220:0x046a, B:221:0x046e, B:212:0x041e, B:214:0x043a, B:215:0x043f, B:224:0x047f, B:231:0x04c2, B:234:0x04d8, B:238:0x04df, B:240:0x04ec, B:241:0x04f1, B:227:0x049c, B:229:0x04b9, B:230:0x04be, B:100:0x01bb, B:102:0x01c1, B:109:0x01d7, B:111:0x01db, B:120:0x0217, B:112:0x01e6, B:114:0x01fa, B:116:0x0200, B:117:0x0209, B:119:0x0211, B:85:0x0186, B:87:0x018e, B:32:0x006e, B:34:0x0072, B:40:0x0082, B:51:0x00ae, B:53:0x00c0, B:54:0x00c5, B:56:0x00ef, B:58:0x0102, B:60:0x0108, B:62:0x010e, B:76:0x0163, B:63:0x0111, B:66:0x0136, B:73:0x0155, B:74:0x015f), top: B:295:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:73:0x0155 A[Catch: Exception -> 0x0049, TryCatch #0 {Exception -> 0x0049, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:23:0x0053, B:26:0x005d, B:29:0x0062, B:31:0x0066, B:43:0x008c, B:46:0x0092, B:48:0x0098, B:50:0x009f, B:77:0x016f, B:79:0x0173, B:80:0x0177, B:88:0x0191, B:93:0x019a, B:95:0x019e, B:97:0x01ae, B:99:0x01b2, B:103:0x01c7, B:105:0x01cb, B:107:0x01d1, B:122:0x021e, B:124:0x0251, B:126:0x0259, B:129:0x025e, B:130:0x0265, B:131:0x0268, B:134:0x0298, B:136:0x02a0, B:146:0x02b8, B:148:0x02bc, B:150:0x02c0, B:157:0x02d7, B:159:0x02db, B:243:0x04fd, B:245:0x051a, B:246:0x0522, B:248:0x0526, B:249:0x0532, B:251:0x0539, B:252:0x0544, B:254:0x0548, B:256:0x055e, B:263:0x058a, B:258:0x0566, B:260:0x057a, B:262:0x0580, B:265:0x0590, B:268:0x0595, B:272:0x05b2, B:273:0x05b7, B:277:0x05cf, B:278:0x05d4, B:281:0x05ee, B:285:0x0609, B:286:0x060d, B:290:0x0629, B:291:0x062d, B:152:0x02c6, B:154:0x02ca, B:164:0x02fa, B:166:0x0303, B:168:0x030b, B:170:0x031c, B:171:0x0331, B:172:0x033a, B:179:0x0368, B:181:0x037c, B:183:0x0382, B:185:0x038c, B:186:0x038f, B:175:0x0345, B:177:0x035f, B:178:0x0364, B:190:0x03aa, B:192:0x03b3, B:194:0x03bb, B:196:0x03cc, B:197:0x03dd, B:198:0x03e6, B:201:0x03f8, B:205:0x0403, B:207:0x0409, B:209:0x0411, B:216:0x0443, B:218:0x045d, B:220:0x046a, B:221:0x046e, B:212:0x041e, B:214:0x043a, B:215:0x043f, B:224:0x047f, B:231:0x04c2, B:234:0x04d8, B:238:0x04df, B:240:0x04ec, B:241:0x04f1, B:227:0x049c, B:229:0x04b9, B:230:0x04be, B:100:0x01bb, B:102:0x01c1, B:109:0x01d7, B:111:0x01db, B:120:0x0217, B:112:0x01e6, B:114:0x01fa, B:116:0x0200, B:117:0x0209, B:119:0x0211, B:85:0x0186, B:87:0x018e, B:32:0x006e, B:34:0x0072, B:40:0x0082, B:51:0x00ae, B:53:0x00c0, B:54:0x00c5, B:56:0x00ef, B:58:0x0102, B:60:0x0108, B:62:0x010e, B:76:0x0163, B:63:0x0111, B:66:0x0136, B:73:0x0155, B:74:0x015f), top: B:295:0x0022 }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void editMessage(MessageObject messageObject, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str, HashMap<String, String> hashMap, boolean z, boolean z2, Object obj) {
        Object obj2;
        char c;
        Object obj3;
        String str2;
        char c2;
        HashMap<String, String> hashMap2;
        VideoEditedInfo videoEditedInfo2;
        boolean z3;
        String str3;
        VideoEditedInfo videoEditedInfo3;
        String str4;
        String str5;
        HashMap<String, String> hashMap3;
        Object obj4;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument;
        boolean z4;
        boolean z5;
        DelayedMessage delayedMessage;
        VideoEditedInfo videoEditedInfo4;
        VideoEditedInfo videoEditedInfo5;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument2;
        boolean z6;
        String str6;
        TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto;
        boolean z7;
        String str7;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$TL_inputMediaWebPage tLRPC$TL_inputMediaWebPage;
        TLRPC$EncryptedChat encryptedChat;
        TLRPC$TL_photo tLRPC$TL_photo2 = tLRPC$TL_photo;
        TLRPC$TL_document tLRPC$TL_document2 = tLRPC$TL_document;
        if (messageObject == null) {
            return;
        }
        HashMap<String, String> hashMap4 = hashMap == null ? new HashMap<>() : hashMap;
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        messageObject.cancelEditing = false;
        try {
            long dialogId = messageObject.getDialogId();
            boolean z8 = !DialogObject.isEncryptedDialog(dialogId) || ((encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(dialogId)))) != null && AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 101);
            if (z) {
                TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
                if (!(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) && tLRPC$MessageMedia != null && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaEmpty)) {
                    if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto) {
                        tLRPC$TL_photo2 = (TLRPC$TL_photo) tLRPC$MessageMedia.photo;
                        videoEditedInfo2 = videoEditedInfo;
                        c2 = 2;
                    } else if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument) {
                        tLRPC$TL_document2 = (TLRPC$TL_document) tLRPC$MessageMedia.document;
                        if (!MessageObject.isVideoDocument(tLRPC$TL_document2) && videoEditedInfo == null) {
                            c2 = 7;
                            videoEditedInfo2 = messageObject.videoEditedInfo;
                        }
                        c2 = 3;
                        videoEditedInfo2 = messageObject.videoEditedInfo;
                    } else {
                        videoEditedInfo2 = videoEditedInfo;
                        c2 = 65535;
                    }
                    HashMap<String, String> hashMap5 = tLRPC$Message.params;
                    obj3 = (obj == null || hashMap5 == null || !hashMap5.containsKey("parentObject")) ? obj : hashMap5.get("parentObject");
                    messageObject.editingMessage = tLRPC$Message.message;
                    messageObject.editingMessageEntities = tLRPC$Message.entities;
                    str2 = tLRPC$Message.attachPath;
                    obj2 = "originalPath";
                    hashMap2 = hashMap5;
                }
                videoEditedInfo2 = videoEditedInfo;
                c2 = 1;
                HashMap<String, String> hashMap52 = tLRPC$Message.params;
                if (obj == null) {
                }
                messageObject.editingMessage = tLRPC$Message.message;
                messageObject.editingMessageEntities = tLRPC$Message.entities;
                str2 = tLRPC$Message.attachPath;
                obj2 = "originalPath";
                hashMap2 = hashMap52;
            } else {
                TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$Message.media;
                messageObject.previousMedia = tLRPC$MessageMedia2;
                messageObject.previousMessage = tLRPC$Message.message;
                messageObject.previousMessageEntities = tLRPC$Message.entities;
                messageObject.previousAttachPath = tLRPC$Message.attachPath;
                if (tLRPC$MessageMedia2 == null) {
                    new TLRPC$TL_messageMediaEmpty();
                }
                SerializedData serializedData = new SerializedData(true);
                writePreviousMessageData(tLRPC$Message, serializedData);
                SerializedData serializedData2 = new SerializedData(serializedData.length());
                writePreviousMessageData(tLRPC$Message, serializedData2);
                obj2 = "originalPath";
                hashMap4.put("prevMedia", Base64.encodeToString(serializedData2.toByteArray(), 0));
                serializedData2.cleanup();
                if (tLRPC$TL_photo2 != null) {
                    TLRPC$TL_messageMediaPhoto tLRPC$TL_messageMediaPhoto = new TLRPC$TL_messageMediaPhoto();
                    tLRPC$Message.media = tLRPC$TL_messageMediaPhoto;
                    tLRPC$TL_messageMediaPhoto.flags |= 3;
                    tLRPC$TL_messageMediaPhoto.photo = tLRPC$TL_photo2;
                    tLRPC$TL_messageMediaPhoto.spoiler = z2;
                    if (str != null && str.length() > 0 && str.startsWith("http")) {
                        tLRPC$Message.attachPath = str;
                    } else {
                        ArrayList<TLRPC$PhotoSize> arrayList = tLRPC$TL_photo2.sizes;
                        tLRPC$Message.attachPath = FileLoader.getInstance(this.currentAccount).getPathToAttach(arrayList.get(arrayList.size() - 1).location, true).toString();
                    }
                    c = 2;
                } else if (tLRPC$TL_document2 != null) {
                    TLRPC$TL_messageMediaDocument tLRPC$TL_messageMediaDocument = new TLRPC$TL_messageMediaDocument();
                    tLRPC$Message.media = tLRPC$TL_messageMediaDocument;
                    tLRPC$TL_messageMediaDocument.flags |= 3;
                    tLRPC$TL_messageMediaDocument.document = tLRPC$TL_document2;
                    tLRPC$TL_messageMediaDocument.spoiler = z2;
                    if (!MessageObject.isVideoDocument(tLRPC$TL_document) && videoEditedInfo == null) {
                        c = 7;
                        if (videoEditedInfo != null) {
                            hashMap4.put("ve", videoEditedInfo.getString());
                        }
                        tLRPC$Message.attachPath = str;
                    }
                    c = 3;
                    if (videoEditedInfo != null) {
                    }
                    tLRPC$Message.attachPath = str;
                } else {
                    c = 1;
                }
                tLRPC$Message.params = hashMap4;
                tLRPC$Message.send_state = 3;
                obj3 = obj;
                str2 = str;
                c2 = c;
                hashMap2 = hashMap4;
                videoEditedInfo2 = videoEditedInfo;
            }
            if (tLRPC$Message.attachPath == null) {
                tLRPC$Message.attachPath = "";
            }
            tLRPC$Message.local_id = 0;
            int i = messageObject.type;
            TLRPC$TL_document tLRPC$TL_document3 = tLRPC$TL_document2;
            if ((i == 3 || videoEditedInfo2 != null || i == 2) && !TextUtils.isEmpty(tLRPC$Message.attachPath)) {
                messageObject.attachPathExists = true;
            }
            VideoEditedInfo videoEditedInfo6 = messageObject.videoEditedInfo;
            if (videoEditedInfo6 != null && videoEditedInfo2 == null) {
                videoEditedInfo2 = videoEditedInfo6;
            }
            if (z) {
                z3 = z8;
                str3 = str2;
                videoEditedInfo3 = videoEditedInfo2;
                str4 = "http";
            } else {
                CharSequence charSequence = messageObject.editingMessage;
                if (charSequence != null) {
                    String str8 = tLRPC$Message.message;
                    String charSequence2 = charSequence.toString();
                    tLRPC$Message.message = charSequence2;
                    videoEditedInfo3 = videoEditedInfo2;
                    messageObject.caption = null;
                    if (c2 == 1) {
                        ArrayList<TLRPC$MessageEntity> arrayList2 = messageObject.editingMessageEntities;
                        if (arrayList2 != null) {
                            tLRPC$Message.entities = arrayList2;
                            tLRPC$Message.flags |= 128;
                        } else if (!TextUtils.equals(str8, charSequence2)) {
                            tLRPC$Message.flags &= -129;
                        }
                        TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
                        if (tLRPC$Message2 != null && (tLRPC$Message2.media instanceof TLRPC$TL_messageMediaPaidMedia)) {
                            messageObject.generateCaption();
                        }
                    } else {
                        ArrayList<TLRPC$MessageEntity> arrayList3 = messageObject.editingMessageEntities;
                        if (arrayList3 != null) {
                            tLRPC$Message.entities = arrayList3;
                            tLRPC$Message.flags |= 128;
                            str4 = "http";
                        } else {
                            str4 = "http";
                            ArrayList<TLRPC$MessageEntity> entities = getMediaDataController().getEntities(new CharSequence[]{messageObject.editingMessage}, z8);
                            if (entities != null && !entities.isEmpty()) {
                                tLRPC$Message.entities = entities;
                                tLRPC$Message.flags |= 128;
                            } else if (!TextUtils.equals(str8, tLRPC$Message.message)) {
                                tLRPC$Message.flags &= -129;
                            }
                        }
                        messageObject.generateCaption();
                        ArrayList<TLRPC$Message> arrayList4 = new ArrayList<>();
                        arrayList4.add(tLRPC$Message);
                        getMessagesStorage().putMessages(arrayList4, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
                        getMessagesController().getTopicsController().processEditedMessage(tLRPC$Message);
                        messageObject.type = -1;
                        messageObject.setType();
                        if (c2 == 1) {
                            TLRPC$MessageMedia tLRPC$MessageMedia3 = messageObject.messageOwner.media;
                            if (!(tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaPhoto) && !(tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaDocument)) {
                                messageObject.resetLayout();
                                messageObject.checkLayout();
                            }
                            messageObject.generateCaption();
                        }
                        messageObject.createMessageSendInfo();
                        ArrayList arrayList5 = new ArrayList();
                        arrayList5.add(messageObject);
                        z3 = z8;
                        str3 = str2;
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.replaceMessagesObjects, Long.valueOf(dialogId), arrayList5);
                    }
                } else {
                    videoEditedInfo3 = videoEditedInfo2;
                }
                str4 = "http";
                ArrayList<TLRPC$Message> arrayList42 = new ArrayList<>();
                arrayList42.add(tLRPC$Message);
                getMessagesStorage().putMessages(arrayList42, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
                getMessagesController().getTopicsController().processEditedMessage(tLRPC$Message);
                messageObject.type = -1;
                messageObject.setType();
                if (c2 == 1) {
                }
                messageObject.createMessageSendInfo();
                ArrayList arrayList52 = new ArrayList();
                arrayList52.add(messageObject);
                z3 = z8;
                str3 = str2;
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.replaceMessagesObjects, Long.valueOf(dialogId), arrayList52);
            }
            if (hashMap2 != null) {
                Object obj5 = obj2;
                if (hashMap2.containsKey(obj5)) {
                    str5 = hashMap2.get(obj5);
                    if ((c2 >= 1 || c2 > 3) && (c2 < 5 || c2 > '\b')) {
                        return;
                    }
                    if (c2 == 1) {
                        TLRPC$MessageMedia tLRPC$MessageMedia4 = tLRPC$Message.media;
                        if ((tLRPC$MessageMedia4 == null || (tLRPC$MessageMedia4 instanceof TLRPC$TL_messageMediaEmpty) || (tLRPC$MessageMedia4.webpage instanceof TLRPC$TL_webPageEmpty)) && !messageObject.editingMessageSearchWebPage) {
                            tLRPC$TL_inputMediaWebPage = new TLRPC$TL_inputMediaEmpty();
                        } else {
                            if (tLRPC$MessageMedia4 != null && tLRPC$MessageMedia4.webpage != null) {
                                TLRPC$TL_inputMediaWebPage tLRPC$TL_inputMediaWebPage2 = new TLRPC$TL_inputMediaWebPage();
                                TLRPC$MessageMedia tLRPC$MessageMedia5 = tLRPC$Message.media;
                                tLRPC$TL_inputMediaWebPage2.url = tLRPC$MessageMedia5.webpage.url;
                                tLRPC$TL_inputMediaWebPage2.force_small_media = tLRPC$MessageMedia5.force_small_media;
                                tLRPC$TL_inputMediaWebPage2.force_large_media = tLRPC$MessageMedia5.force_large_media;
                                tLRPC$TL_inputMediaWebPage = tLRPC$TL_inputMediaWebPage2;
                            }
                            hashMap3 = hashMap2;
                            delayedMessage = null;
                            z5 = false;
                            tLRPC$InputMedia = null;
                        }
                        hashMap3 = hashMap2;
                        delayedMessage = null;
                        z5 = false;
                        tLRPC$InputMedia = tLRPC$TL_inputMediaWebPage;
                    } else if (c2 == 2) {
                        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                        tLRPC$TL_inputMediaUploadedPhoto.spoiler = z2;
                        if (hashMap2 != null && (str7 = hashMap2.get("masks")) != null) {
                            SerializedData serializedData3 = new SerializedData(Utilities.hexToBytes(str7));
                            boolean z9 = false;
                            int readInt32 = serializedData3.readInt32(false);
                            int i2 = 0;
                            while (i2 < readInt32) {
                                tLRPC$TL_inputMediaUploadedPhoto.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData3, serializedData3.readInt32(z9), z9));
                                i2++;
                                readInt32 = readInt32;
                                z9 = false;
                            }
                            tLRPC$TL_inputMediaUploadedPhoto.flags |= 1;
                            serializedData3.cleanup();
                        }
                        if (tLRPC$TL_photo2.access_hash == 0) {
                            tLRPC$TL_inputMediaPhoto = tLRPC$TL_inputMediaUploadedPhoto;
                            z7 = true;
                        } else {
                            TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto2 = new TLRPC$TL_inputMediaPhoto();
                            TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                            tLRPC$TL_inputMediaPhoto2.id = tLRPC$TL_inputPhoto;
                            tLRPC$TL_inputPhoto.id = tLRPC$TL_photo2.id;
                            tLRPC$TL_inputPhoto.access_hash = tLRPC$TL_photo2.access_hash;
                            byte[] bArr = tLRPC$TL_photo2.file_reference;
                            tLRPC$TL_inputPhoto.file_reference = bArr;
                            if (bArr == null) {
                                tLRPC$TL_inputPhoto.file_reference = new byte[0];
                            }
                            tLRPC$TL_inputMediaPhoto2.spoiler = z2;
                            tLRPC$TL_inputMediaPhoto = tLRPC$TL_inputMediaPhoto2;
                            z7 = false;
                        }
                        DelayedMessage delayedMessage2 = new DelayedMessage(dialogId);
                        delayedMessage2.type = 0;
                        delayedMessage2.obj = messageObject;
                        delayedMessage2.originalPath = str5;
                        delayedMessage2.parentObject = obj3;
                        delayedMessage2.inputUploadMedia = tLRPC$TL_inputMediaUploadedPhoto;
                        delayedMessage2.performMediaUpload = z7;
                        if (str3 != null && str3.length() > 0) {
                            String str9 = str3;
                            if (str9.startsWith(str4)) {
                                delayedMessage2.httpLocation = str9;
                                delayedMessage = delayedMessage2;
                                hashMap3 = hashMap2;
                                z5 = z7;
                                tLRPC$InputMedia = tLRPC$TL_inputMediaPhoto;
                            }
                        }
                        ArrayList<TLRPC$PhotoSize> arrayList6 = tLRPC$TL_photo2.sizes;
                        delayedMessage2.photoSize = arrayList6.get(arrayList6.size() - 1);
                        delayedMessage2.locationParent = tLRPC$TL_photo2;
                        delayedMessage = delayedMessage2;
                        hashMap3 = hashMap2;
                        z5 = z7;
                        tLRPC$InputMedia = tLRPC$TL_inputMediaPhoto;
                    } else if (c2 == 3) {
                        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                        tLRPC$TL_inputMediaUploadedDocument.spoiler = z2;
                        if (hashMap2 != null && (str6 = hashMap2.get("masks")) != null) {
                            SerializedData serializedData4 = new SerializedData(Utilities.hexToBytes(str6));
                            boolean z10 = false;
                            int readInt322 = serializedData4.readInt32(false);
                            int i3 = 0;
                            while (i3 < readInt322) {
                                tLRPC$TL_inputMediaUploadedDocument.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData4, serializedData4.readInt32(z10), z10));
                                i3++;
                                z10 = false;
                            }
                            tLRPC$TL_inputMediaUploadedDocument.flags |= 1;
                            serializedData4.cleanup();
                        }
                        tLRPC$TL_inputMediaUploadedDocument.mime_type = tLRPC$TL_document3.mime_type;
                        tLRPC$TL_inputMediaUploadedDocument.attributes = tLRPC$TL_document3.attributes;
                        if (messageObject.isGif()) {
                            videoEditedInfo4 = videoEditedInfo3;
                        } else {
                            if (videoEditedInfo3 != null) {
                                videoEditedInfo4 = videoEditedInfo3;
                            } else {
                                videoEditedInfo4 = videoEditedInfo3;
                            }
                            tLRPC$TL_inputMediaUploadedDocument.nosound_video = true;
                            if (BuildVars.DEBUG_VERSION) {
                                FileLog.d("nosound_video = true");
                            }
                        }
                        if (tLRPC$TL_document3.access_hash == 0) {
                            videoEditedInfo5 = videoEditedInfo4;
                            z6 = true;
                            tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaUploadedDocument;
                        } else {
                            TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument3 = new TLRPC$TL_inputMediaDocument();
                            TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                            tLRPC$TL_inputMediaDocument3.id = tLRPC$TL_inputDocument;
                            videoEditedInfo5 = videoEditedInfo4;
                            tLRPC$TL_inputDocument.id = tLRPC$TL_document3.id;
                            tLRPC$TL_inputDocument.access_hash = tLRPC$TL_document3.access_hash;
                            byte[] bArr2 = tLRPC$TL_document3.file_reference;
                            tLRPC$TL_inputDocument.file_reference = bArr2;
                            if (bArr2 == null) {
                                tLRPC$TL_inputDocument.file_reference = new byte[0];
                            }
                            tLRPC$TL_inputMediaDocument3.spoiler = z2;
                            tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaDocument3;
                            z6 = false;
                        }
                        DelayedMessage delayedMessage3 = new DelayedMessage(dialogId);
                        delayedMessage3.type = 1;
                        delayedMessage3.obj = messageObject;
                        delayedMessage3.originalPath = str5;
                        delayedMessage3.parentObject = obj3;
                        delayedMessage3.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument;
                        delayedMessage3.performMediaUpload = z6;
                        if (!tLRPC$TL_document3.thumbs.isEmpty()) {
                            TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$TL_document3.thumbs.get(0);
                            if (!(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                                delayedMessage3.photoSize = tLRPC$PhotoSize;
                                delayedMessage3.locationParent = tLRPC$TL_document3;
                            }
                        }
                        delayedMessage3.videoEditedInfo = videoEditedInfo5;
                        delayedMessage = delayedMessage3;
                        hashMap3 = hashMap2;
                        z5 = z6;
                        tLRPC$InputMedia = tLRPC$TL_inputMediaDocument2;
                    } else {
                        VideoEditedInfo videoEditedInfo7 = videoEditedInfo3;
                        if (c2 == 7) {
                            TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument2 = new TLRPC$TL_inputMediaUploadedDocument();
                            tLRPC$TL_inputMediaUploadedDocument2.mime_type = tLRPC$TL_document3.mime_type;
                            tLRPC$TL_inputMediaUploadedDocument2.attributes = tLRPC$TL_document3.attributes;
                            tLRPC$TL_inputMediaUploadedDocument2.spoiler = z2;
                            if (tLRPC$TL_document3.access_hash == 0) {
                                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaUploadedDocument2;
                                hashMap3 = hashMap2;
                                obj4 = obj3;
                                z4 = true;
                            } else {
                                TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument4 = new TLRPC$TL_inputMediaDocument();
                                TLRPC$TL_inputDocument tLRPC$TL_inputDocument2 = new TLRPC$TL_inputDocument();
                                tLRPC$TL_inputMediaDocument4.id = tLRPC$TL_inputDocument2;
                                hashMap3 = hashMap2;
                                obj4 = obj3;
                                tLRPC$TL_inputDocument2.id = tLRPC$TL_document3.id;
                                tLRPC$TL_inputDocument2.access_hash = tLRPC$TL_document3.access_hash;
                                byte[] bArr3 = tLRPC$TL_document3.file_reference;
                                tLRPC$TL_inputDocument2.file_reference = bArr3;
                                if (bArr3 == null) {
                                    tLRPC$TL_inputDocument2.file_reference = new byte[0];
                                }
                                tLRPC$TL_inputMediaDocument4.spoiler = z2;
                                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument4;
                                z4 = false;
                            }
                            DelayedMessage delayedMessage4 = new DelayedMessage(dialogId);
                            delayedMessage4.originalPath = str5;
                            delayedMessage4.type = 2;
                            delayedMessage4.obj = messageObject;
                            if (!tLRPC$TL_document3.thumbs.isEmpty()) {
                                if (videoEditedInfo7 != null) {
                                    if (!videoEditedInfo7.isSticker) {
                                    }
                                }
                                TLRPC$PhotoSize tLRPC$PhotoSize2 = tLRPC$TL_document3.thumbs.get(0);
                                if (!(tLRPC$PhotoSize2 instanceof TLRPC$TL_photoStrippedSize)) {
                                    delayedMessage4.photoSize = tLRPC$PhotoSize2;
                                    delayedMessage4.locationParent = tLRPC$TL_document3;
                                }
                            }
                            obj3 = obj4;
                            delayedMessage4.parentObject = obj3;
                            delayedMessage4.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument2;
                            delayedMessage4.performMediaUpload = z4;
                            z5 = z4;
                            delayedMessage = delayedMessage4;
                            tLRPC$InputMedia = tLRPC$TL_inputMediaDocument;
                        }
                        hashMap3 = hashMap2;
                        delayedMessage = null;
                        z5 = false;
                        tLRPC$InputMedia = null;
                    }
                    TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = new TLRPC$TL_messages_editMessage();
                    tLRPC$TL_messages_editMessage.id = messageObject.getId();
                    tLRPC$TL_messages_editMessage.peer = getMessagesController().getInputPeer(dialogId);
                    TLRPC$Message tLRPC$Message3 = messageObject.messageOwner;
                    tLRPC$TL_messages_editMessage.invert_media = tLRPC$Message3.invert_media;
                    if (tLRPC$InputMedia != null) {
                        tLRPC$TL_messages_editMessage.flags |= LiteMode.FLAG_ANIMATED_EMOJI_KEYBOARD_NOT_PREMIUM;
                        tLRPC$TL_messages_editMessage.media = tLRPC$InputMedia;
                    }
                    if (messageObject.scheduled) {
                        tLRPC$TL_messages_editMessage.schedule_date = tLRPC$Message3.date;
                        tLRPC$TL_messages_editMessage.flags |= LiteMode.FLAG_CHAT_SCALE;
                    }
                    if ((tLRPC$Message3.flags & 1073741824) != 0) {
                        tLRPC$TL_messages_editMessage.quick_reply_shortcut_id = tLRPC$Message3.quick_reply_shortcut_id;
                        tLRPC$TL_messages_editMessage.flags |= 131072;
                    }
                    CharSequence charSequence3 = messageObject.editingMessage;
                    if (charSequence3 != null) {
                        tLRPC$TL_messages_editMessage.message = charSequence3.toString();
                        int i4 = tLRPC$TL_messages_editMessage.flags;
                        tLRPC$TL_messages_editMessage.flags = i4 | 2048;
                        tLRPC$TL_messages_editMessage.no_webpage = !messageObject.editingMessageSearchWebPage;
                        ArrayList<TLRPC$MessageEntity> arrayList7 = messageObject.editingMessageEntities;
                        if (arrayList7 != null) {
                            tLRPC$TL_messages_editMessage.entities = arrayList7;
                            tLRPC$TL_messages_editMessage.flags = i4 | 2056;
                        } else {
                            ArrayList<TLRPC$MessageEntity> entities2 = getMediaDataController().getEntities(new CharSequence[]{messageObject.editingMessage}, z3);
                            if (entities2 != null && !entities2.isEmpty()) {
                                tLRPC$TL_messages_editMessage.entities = entities2;
                                tLRPC$TL_messages_editMessage.flags |= 8;
                            }
                        }
                        messageObject.editingMessage = null;
                        messageObject.editingMessageEntities = null;
                    }
                    if (delayedMessage != null) {
                        delayedMessage.sendRequest = tLRPC$TL_messages_editMessage;
                    }
                    if (c2 == 1) {
                        performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, null, delayedMessage, obj3, hashMap3, messageObject.scheduled);
                        return;
                    } else if (c2 == 2) {
                        if (z5) {
                            performSendDelayedMessage(delayedMessage);
                            return;
                        } else {
                            performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str5, null, true, delayedMessage, obj3, hashMap3, messageObject.scheduled);
                            return;
                        }
                    } else {
                        HashMap<String, String> hashMap6 = hashMap3;
                        if (c2 == 3) {
                            if (z5) {
                                performSendDelayedMessage(delayedMessage);
                                return;
                            } else {
                                performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str5, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                return;
                            }
                        } else if (c2 == 6) {
                            performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str5, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                            return;
                        } else if (c2 == 7) {
                            if (z5) {
                                performSendDelayedMessage(delayedMessage);
                                return;
                            } else {
                                performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str5, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                return;
                            }
                        } else if (c2 == '\b') {
                            if (z5) {
                                performSendDelayedMessage(delayedMessage);
                                return;
                            } else {
                                performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str5, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                return;
                            }
                        } else {
                            return;
                        }
                    }
                }
            }
            str5 = null;
            if (c2 >= 1) {
            }
        } catch (Exception e) {
            FileLog.e(e);
            revertEditingMessageObject(messageObject);
        }
    }

    public int editMessage(MessageObject messageObject, String str, boolean z, final BaseFragment baseFragment, ArrayList<TLRPC$MessageEntity> arrayList, int i) {
        if (baseFragment == null || baseFragment.getParentActivity() == null) {
            return 0;
        }
        final TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = new TLRPC$TL_messages_editMessage();
        tLRPC$TL_messages_editMessage.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (str != null) {
            tLRPC$TL_messages_editMessage.message = str;
            tLRPC$TL_messages_editMessage.flags |= 2048;
            tLRPC$TL_messages_editMessage.no_webpage = !z;
        }
        tLRPC$TL_messages_editMessage.id = messageObject.getId();
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        if (tLRPC$Message != null && (tLRPC$Message.flags & 1073741824) != 0) {
            tLRPC$TL_messages_editMessage.quick_reply_shortcut_id = tLRPC$Message.quick_reply_shortcut_id;
            tLRPC$TL_messages_editMessage.flags |= 131072;
        }
        if (arrayList != null) {
            tLRPC$TL_messages_editMessage.entities = arrayList;
            tLRPC$TL_messages_editMessage.flags |= 8;
        }
        if (i != 0) {
            tLRPC$TL_messages_editMessage.schedule_date = i;
            tLRPC$TL_messages_editMessage.flags |= LiteMode.FLAG_CHAT_SCALE;
        }
        return getConnectionsManager().sendRequest(tLRPC$TL_messages_editMessage, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda83
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$editMessage$16(baseFragment, tLRPC$TL_messages_editMessage, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$editMessage$16(final BaseFragment baseFragment, final TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage, TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
        } else {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda76
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$editMessage$15(tLRPC$TL_error, baseFragment, tLRPC$TL_messages_editMessage);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$editMessage$15(TLRPC$TL_error tLRPC$TL_error, BaseFragment baseFragment, TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage) {
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, baseFragment, tLRPC$TL_messages_editMessage, new Object[0]);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void sendLocation(Location location) {
        TLRPC$TL_messageMediaGeo tLRPC$TL_messageMediaGeo = new TLRPC$TL_messageMediaGeo();
        TLRPC$TL_geoPoint tLRPC$TL_geoPoint = new TLRPC$TL_geoPoint();
        tLRPC$TL_messageMediaGeo.geo = tLRPC$TL_geoPoint;
        tLRPC$TL_geoPoint.lat = AndroidUtilities.fixLocationCoord(location.getLatitude());
        tLRPC$TL_messageMediaGeo.geo._long = AndroidUtilities.fixLocationCoord(location.getLongitude());
        for (Map.Entry<String, MessageObject> entry : this.waitingForLocation.entrySet()) {
            MessageObject value = entry.getValue();
            sendMessage(SendMessageParams.of((TLRPC$MessageMedia) tLRPC$TL_messageMediaGeo, value.getDialogId(), value, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0));
        }
    }

    public void sendCurrentLocation(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(messageObject.getDialogId());
        sb.append("_");
        sb.append(messageObject.getId());
        sb.append("_");
        sb.append(Utilities.bytesToHex(tLRPC$KeyboardButton.data));
        sb.append("_");
        sb.append(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame ? "1" : "0");
        this.waitingForLocation.put(sb.toString(), messageObject);
        this.locationProvider.start();
    }

    public boolean isSendingCurrentLocation(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return false;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(messageObject.getDialogId());
        sb.append("_");
        sb.append(messageObject.getId());
        sb.append("_");
        sb.append(Utilities.bytesToHex(tLRPC$KeyboardButton.data));
        sb.append("_");
        sb.append(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame ? "1" : "0");
        return this.waitingForLocation.containsKey(sb.toString());
    }

    public void sendNotificationCallback(final long j, final int i, final byte[] bArr) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda37
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendNotificationCallback$19(j, i, bArr);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendNotificationCallback$19(long j, int i, byte[] bArr) {
        TLRPC$Chat chatSync;
        TLRPC$User userSync;
        final String str = j + "_" + i + "_" + Utilities.bytesToHex(bArr) + "_0";
        this.waitingForCallback.put(str, Boolean.TRUE);
        final List<String> list = this.waitingForCallbackMap.get(j + "_" + i);
        if (list == null) {
            ArrayList arrayList = new ArrayList();
            this.waitingForCallbackMap.put(j + "_" + i, arrayList);
            list = arrayList;
        }
        list.add(str);
        if (DialogObject.isUserDialog(j)) {
            if (getMessagesController().getUser(Long.valueOf(j)) == null && (userSync = getMessagesStorage().getUserSync(j)) != null) {
                getMessagesController().putUser(userSync, true);
            }
        } else {
            long j2 = -j;
            if (getMessagesController().getChat(Long.valueOf(j2)) == null && (chatSync = getMessagesStorage().getChatSync(j2)) != null) {
                getMessagesController().putChat(chatSync, true);
            }
        }
        TLRPC$TL_messages_getBotCallbackAnswer tLRPC$TL_messages_getBotCallbackAnswer = new TLRPC$TL_messages_getBotCallbackAnswer();
        tLRPC$TL_messages_getBotCallbackAnswer.peer = getMessagesController().getInputPeer(j);
        tLRPC$TL_messages_getBotCallbackAnswer.msg_id = i;
        tLRPC$TL_messages_getBotCallbackAnswer.game = false;
        if (bArr != null) {
            tLRPC$TL_messages_getBotCallbackAnswer.flags |= 1;
            tLRPC$TL_messages_getBotCallbackAnswer.data = bArr;
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_getBotCallbackAnswer, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda90
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendNotificationCallback$18(str, list, tLObject, tLRPC$TL_error);
            }
        }, 2);
        getMessagesController().markDialogAsRead(j, i, i, 0, false, 0L, 0, true, 0);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendNotificationCallback$18(final String str, final List list, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda8
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendNotificationCallback$17(str, list);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendNotificationCallback$17(String str, List list) {
        this.waitingForCallback.remove(str);
        list.remove(str);
    }

    public void onMessageEdited(TLRPC$Message tLRPC$Message) {
        if (tLRPC$Message == null || tLRPC$Message.reply_markup == null) {
            return;
        }
        HashMap<String, List<String>> hashMap = this.waitingForCallbackMap;
        List<String> remove = hashMap.remove(tLRPC$Message.dialog_id + "_" + tLRPC$Message.id);
        if (remove != null) {
            for (String str : remove) {
                this.waitingForCallback.remove(str);
            }
        }
    }

    public byte[] isSendingVote(MessageObject messageObject) {
        if (messageObject == null) {
            return null;
        }
        return this.waitingForVote.get("poll_" + messageObject.getPollId());
    }

    public int sendVote(final MessageObject messageObject, ArrayList<TLRPC$PollAnswer> arrayList, final Runnable runnable) {
        byte[] bArr;
        if (messageObject == null) {
            return 0;
        }
        final String str = "poll_" + messageObject.getPollId();
        if (this.waitingForCallback.containsKey(str)) {
            return 0;
        }
        TLRPC$TL_messages_sendVote tLRPC$TL_messages_sendVote = new TLRPC$TL_messages_sendVote();
        tLRPC$TL_messages_sendVote.msg_id = messageObject.getId();
        tLRPC$TL_messages_sendVote.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (arrayList != null) {
            bArr = new byte[arrayList.size()];
            for (int i = 0; i < arrayList.size(); i++) {
                TLRPC$PollAnswer tLRPC$PollAnswer = arrayList.get(i);
                tLRPC$TL_messages_sendVote.options.add(tLRPC$PollAnswer.option);
                bArr[i] = tLRPC$PollAnswer.option[0];
            }
        } else {
            bArr = new byte[0];
        }
        this.waitingForVote.put(str, bArr);
        return getConnectionsManager().sendRequest(tLRPC$TL_messages_sendVote, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda6
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendVote$21(messageObject, str, runnable, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendVote$21(MessageObject messageObject, final String str, final Runnable runnable, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            this.voteSendTime.put(messageObject.getPollId(), 0L);
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
            this.voteSendTime.put(messageObject.getPollId(), Long.valueOf(SystemClock.elapsedRealtime()));
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda70
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendVote$20(str, runnable);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendVote$20(String str, Runnable runnable) {
        this.waitingForVote.remove(str);
        if (runnable != null) {
            runnable.run();
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public long getVoteSendTime(long j) {
        return this.voteSendTime.get(j, 0L).longValue();
    }

    public void sendReaction(MessageObject messageObject, ArrayList<ReactionsLayoutInBubble.VisibleReaction> arrayList, ReactionsLayoutInBubble.VisibleReaction visibleReaction, boolean z, boolean z2, BaseFragment baseFragment, final Runnable runnable) {
        if (messageObject == null || baseFragment == null) {
            return;
        }
        TLRPC$TL_messages_sendReaction tLRPC$TL_messages_sendReaction = new TLRPC$TL_messages_sendReaction();
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        if (tLRPC$Message.isThreadMessage && tLRPC$Message.fwd_from != null) {
            tLRPC$TL_messages_sendReaction.peer = getMessagesController().getInputPeer(messageObject.getFromChatId());
            tLRPC$TL_messages_sendReaction.msg_id = messageObject.messageOwner.fwd_from.saved_from_msg_id;
        } else {
            tLRPC$TL_messages_sendReaction.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
            tLRPC$TL_messages_sendReaction.msg_id = messageObject.getId();
        }
        tLRPC$TL_messages_sendReaction.add_to_recent = z2;
        if (z2 && visibleReaction != null) {
            MediaDataController.getInstance(this.currentAccount).recentReactions.add(0, ReactionsUtils.toTLReaction(visibleReaction));
        }
        if (arrayList != null && !arrayList.isEmpty()) {
            for (int i = 0; i < arrayList.size(); i++) {
                ReactionsLayoutInBubble.VisibleReaction visibleReaction2 = arrayList.get(i);
                if (visibleReaction2.documentId != 0) {
                    TLRPC$TL_reactionCustomEmoji tLRPC$TL_reactionCustomEmoji = new TLRPC$TL_reactionCustomEmoji();
                    tLRPC$TL_reactionCustomEmoji.document_id = visibleReaction2.documentId;
                    tLRPC$TL_messages_sendReaction.reaction.add(tLRPC$TL_reactionCustomEmoji);
                    tLRPC$TL_messages_sendReaction.flags |= 1;
                } else if (visibleReaction2.emojicon != null) {
                    TLRPC$TL_reactionEmoji tLRPC$TL_reactionEmoji = new TLRPC$TL_reactionEmoji();
                    tLRPC$TL_reactionEmoji.emoticon = visibleReaction2.emojicon;
                    tLRPC$TL_messages_sendReaction.reaction.add(tLRPC$TL_reactionEmoji);
                    tLRPC$TL_messages_sendReaction.flags |= 1;
                }
            }
        }
        if (z) {
            tLRPC$TL_messages_sendReaction.flags |= 2;
            tLRPC$TL_messages_sendReaction.big = true;
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendReaction, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda91
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendReaction$22(runnable, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendReaction$22(Runnable runnable, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLObject != null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
            if (runnable != null) {
                AndroidUtilities.runOnUIThread(runnable);
            }
        }
    }

    public void requestUrlAuth(final String str, final ChatActivity chatActivity, final boolean z) {
        final TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth = new TLRPC$TL_messages_requestUrlAuth();
        tLRPC$TL_messages_requestUrlAuth.url = str;
        tLRPC$TL_messages_requestUrlAuth.flags |= 4;
        getConnectionsManager().sendRequest(tLRPC$TL_messages_requestUrlAuth, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda85
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.lambda$requestUrlAuth$24(ChatActivity.this, tLRPC$TL_messages_requestUrlAuth, str, z, tLObject, tLRPC$TL_error);
            }
        }, 2);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$requestUrlAuth$24(final ChatActivity chatActivity, final TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth, final String str, final boolean z, final TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda82
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$requestUrlAuth$23(TLObject.this, chatActivity, tLRPC$TL_messages_requestUrlAuth, str, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$requestUrlAuth$23(TLObject tLObject, ChatActivity chatActivity, TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth, String str, boolean z) {
        if (tLObject != null) {
            if (tLObject instanceof TLRPC$TL_urlAuthResultRequest) {
                chatActivity.showRequestUrlAlert((TLRPC$TL_urlAuthResultRequest) tLObject, tLRPC$TL_messages_requestUrlAuth, str, z);
                return;
            } else if (tLObject instanceof TLRPC$TL_urlAuthResultAccepted) {
                AlertsCreator.showOpenUrlAlert(chatActivity, ((TLRPC$TL_urlAuthResultAccepted) tLObject).url, false, false);
                return;
            } else if (tLObject instanceof TLRPC$TL_urlAuthResultDefault) {
                AlertsCreator.showOpenUrlAlert(chatActivity, str, false, z);
                return;
            } else {
                return;
            }
        }
        AlertsCreator.showOpenUrlAlert(chatActivity, str, false, z);
    }

    public void sendCallback(boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity) {
        lambda$sendCallback$27(z, messageObject, tLRPC$KeyboardButton, null, null, chatActivity);
    }

    /* JADX WARN: Removed duplicated region for block: B:20:0x0082  */
    /* JADX WARN: Removed duplicated region for block: B:21:0x00a8  */
    /* JADX WARN: Removed duplicated region for block: B:24:0x00cf  */
    /* JADX WARN: Removed duplicated region for block: B:25:0x00d8  */
    /* renamed from: sendCallback */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void lambda$sendCallback$27(final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, final TwoStepVerificationActivity twoStepVerificationActivity, final ChatActivity chatActivity) {
        boolean z2;
        int i;
        List<String> list;
        final ArrayList arrayList;
        if (messageObject == null || tLRPC$KeyboardButton == null || chatActivity == null) {
            return;
        }
        boolean z3 = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth;
        if (z3) {
            i = 3;
        } else if (!(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame)) {
            z2 = z;
            i = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy ? 2 : 0;
            final String str = messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i;
            this.waitingForCallback.put(str, Boolean.TRUE);
            list = this.waitingForCallbackMap.get(messageObject.getDialogId() + "_" + messageObject.getId());
            if (list != null) {
                ArrayList arrayList2 = new ArrayList();
                this.waitingForCallbackMap.put(messageObject.getDialogId() + "_" + messageObject.getId(), arrayList2);
                arrayList = arrayList2;
            } else {
                arrayList = list;
            }
            arrayList.add(str);
            final TLObject[] tLObjectArr = new TLObject[1];
            final boolean z4 = z2;
            RequestDelegate requestDelegate = new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda94
                @Override // org.telegram.tgnet.RequestDelegate
                public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                    SendMessagesHelper.this.lambda$sendCallback$33(str, arrayList, z4, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr, tLRPC$InputCheckPasswordSRP, z, tLObject, tLRPC$TL_error);
                }
            };
            if (!z2) {
                getMessagesStorage().getBotCache(str, requestDelegate);
                return;
            } else if (z3) {
                TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth = new TLRPC$TL_messages_requestUrlAuth();
                tLRPC$TL_messages_requestUrlAuth.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                tLRPC$TL_messages_requestUrlAuth.msg_id = messageObject.getId();
                tLRPC$TL_messages_requestUrlAuth.button_id = tLRPC$KeyboardButton.button_id;
                tLRPC$TL_messages_requestUrlAuth.flags |= 2;
                tLObjectArr[0] = tLRPC$TL_messages_requestUrlAuth;
                getConnectionsManager().sendRequest(tLRPC$TL_messages_requestUrlAuth, requestDelegate, 2);
                return;
            } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                if ((messageObject.messageOwner.media.flags & 4) == 0) {
                    TLRPC$TL_payments_getPaymentForm tLRPC$TL_payments_getPaymentForm = new TLRPC$TL_payments_getPaymentForm();
                    TLRPC$TL_inputInvoiceMessage tLRPC$TL_inputInvoiceMessage = new TLRPC$TL_inputInvoiceMessage();
                    tLRPC$TL_inputInvoiceMessage.msg_id = messageObject.getId();
                    tLRPC$TL_inputInvoiceMessage.peer = getMessagesController().getInputPeer(messageObject.messageOwner.peer_id);
                    tLRPC$TL_payments_getPaymentForm.invoice = tLRPC$TL_inputInvoiceMessage;
                    JSONObject makeThemeParams = BotWebViewSheet.makeThemeParams(null);
                    if (makeThemeParams != null) {
                        TLRPC$TL_dataJSON tLRPC$TL_dataJSON = new TLRPC$TL_dataJSON();
                        tLRPC$TL_payments_getPaymentForm.theme_params = tLRPC$TL_dataJSON;
                        tLRPC$TL_dataJSON.data = makeThemeParams.toString();
                        tLRPC$TL_payments_getPaymentForm.flags |= 1;
                    }
                    tLObjectArr[0] = tLRPC$TL_payments_getPaymentForm;
                    getConnectionsManager().sendRequest(tLRPC$TL_payments_getPaymentForm, requestDelegate, 2);
                    return;
                }
                TLRPC$TL_payments_getPaymentReceipt tLRPC$TL_payments_getPaymentReceipt = new TLRPC$TL_payments_getPaymentReceipt();
                tLRPC$TL_payments_getPaymentReceipt.msg_id = messageObject.messageOwner.media.receipt_msg_id;
                tLRPC$TL_payments_getPaymentReceipt.peer = getMessagesController().getInputPeer(messageObject.messageOwner.peer_id);
                tLObjectArr[0] = tLRPC$TL_payments_getPaymentReceipt;
                getConnectionsManager().sendRequest(tLRPC$TL_payments_getPaymentReceipt, requestDelegate, 2);
                return;
            } else {
                TLRPC$TL_messages_getBotCallbackAnswer tLRPC$TL_messages_getBotCallbackAnswer = new TLRPC$TL_messages_getBotCallbackAnswer();
                tLRPC$TL_messages_getBotCallbackAnswer.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                tLRPC$TL_messages_getBotCallbackAnswer.msg_id = messageObject.getId();
                tLRPC$TL_messages_getBotCallbackAnswer.game = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame;
                if (tLRPC$KeyboardButton.requires_password) {
                    tLRPC$TL_messages_getBotCallbackAnswer.password = tLRPC$InputCheckPasswordSRP != null ? tLRPC$InputCheckPasswordSRP : new TLRPC$TL_inputCheckPasswordEmpty();
                    tLRPC$TL_messages_getBotCallbackAnswer.flags |= 4;
                }
                byte[] bArr = tLRPC$KeyboardButton.data;
                if (bArr != null) {
                    tLRPC$TL_messages_getBotCallbackAnswer.flags |= 1;
                    tLRPC$TL_messages_getBotCallbackAnswer.data = bArr;
                }
                getConnectionsManager().sendRequest(tLRPC$TL_messages_getBotCallbackAnswer, requestDelegate, 2);
                return;
            }
        } else {
            i = 1;
        }
        z2 = false;
        final String str2 = messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i;
        this.waitingForCallback.put(str2, Boolean.TRUE);
        list = this.waitingForCallbackMap.get(messageObject.getDialogId() + "_" + messageObject.getId());
        if (list != null) {
        }
        arrayList.add(str2);
        final TLObject[] tLObjectArr2 = new TLObject[1];
        final boolean z42 = z2;
        RequestDelegate requestDelegate2 = new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda94
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendCallback$33(str2, arrayList, z42, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr2, tLRPC$InputCheckPasswordSRP, z, tLObject, tLRPC$TL_error);
            }
        };
        if (!z2) {
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$33(final String str, final List list, final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, final TwoStepVerificationActivity twoStepVerificationActivity, final TLObject[] tLObjectArr, final TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, final boolean z2, final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda0
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendCallback$32(str, list, z, tLObject, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr, tLRPC$TL_error, tLRPC$InputCheckPasswordSRP, z2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$32(final String str, final List list, boolean z, TLObject tLObject, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, final TwoStepVerificationActivity twoStepVerificationActivity, TLObject[] tLObjectArr, TLRPC$TL_error tLRPC$TL_error, TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, final boolean z2) {
        String str2;
        this.waitingForCallback.remove(str);
        list.remove(str);
        boolean z3 = false;
        if (z && tLObject == null) {
            sendCallback(false, messageObject, tLRPC$KeyboardButton, chatActivity);
            return;
        }
        if (tLObject != null) {
            if (twoStepVerificationActivity != null) {
                twoStepVerificationActivity.needHideProgress();
                twoStepVerificationActivity.finishFragment();
            }
            long fromChatId = messageObject.getFromChatId();
            long j = messageObject.messageOwner.via_bot_id;
            if (j != 0) {
                fromChatId = j;
            }
            if (fromChatId > 0) {
                TLRPC$User user = getMessagesController().getUser(Long.valueOf(fromChatId));
                if (user != null) {
                    str2 = ContactsController.formatName(user.first_name, user.last_name);
                }
                str2 = null;
            } else {
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(-fromChatId));
                if (chat != null) {
                    str2 = chat.title;
                }
                str2 = null;
            }
            if (str2 == null) {
                str2 = "bot";
            }
            if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth) {
                if (tLObject instanceof TLRPC$TL_urlAuthResultRequest) {
                    chatActivity.showRequestUrlAlert((TLRPC$TL_urlAuthResultRequest) tLObject, (TLRPC$TL_messages_requestUrlAuth) tLObjectArr[0], tLRPC$KeyboardButton.url, false);
                } else if (tLObject instanceof TLRPC$TL_urlAuthResultAccepted) {
                    AlertsCreator.showOpenUrlAlert(chatActivity, ((TLRPC$TL_urlAuthResultAccepted) tLObject).url, false, false);
                } else if (tLObject instanceof TLRPC$TL_urlAuthResultDefault) {
                    TLRPC$TL_urlAuthResultDefault tLRPC$TL_urlAuthResultDefault = (TLRPC$TL_urlAuthResultDefault) tLObject;
                    AlertsCreator.showOpenUrlAlert(chatActivity, tLRPC$KeyboardButton.url, false, true);
                }
            } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                if (tLObject instanceof TLRPC$TL_payments_paymentFormStars) {
                    StarsController.getInstance(this.currentAccount).openPaymentForm(messageObject, ((TLRPC$TL_payments_getPaymentForm) tLObjectArr[0]).invoice, (TLRPC$TL_payments_paymentFormStars) tLObject, new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda64
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.this.lambda$sendCallback$25(str, list);
                        }
                    }, new Utilities.Callback() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda65
                        @Override // org.telegram.messenger.Utilities.Callback
                        public final void run(Object obj) {
                            SendMessagesHelper.lambda$sendCallback$26((String) obj);
                        }
                    });
                } else if (tLObject instanceof TLRPC$PaymentForm) {
                    TLRPC$PaymentForm tLRPC$PaymentForm = (TLRPC$PaymentForm) tLObject;
                    getMessagesController().putUsers(tLRPC$PaymentForm.users, false);
                    chatActivity.presentFragment(new PaymentFormActivity(tLRPC$PaymentForm, messageObject, chatActivity));
                } else if (tLObject instanceof TLRPC$TL_payments_paymentReceiptStars) {
                    Context context = LaunchActivity.instance;
                    if (context == null) {
                        context = ApplicationLoader.applicationContext;
                    }
                    StarsIntroActivity.showTransactionSheet(context, false, this.currentAccount, (TLRPC$TL_payments_paymentReceiptStars) tLObject, (Theme.ResourcesProvider) null);
                } else if (tLObject instanceof TLRPC$PaymentReceipt) {
                    chatActivity.presentFragment(new PaymentFormActivity((TLRPC$PaymentReceipt) tLObject));
                }
            } else {
                TLRPC$TL_messages_botCallbackAnswer tLRPC$TL_messages_botCallbackAnswer = (TLRPC$TL_messages_botCallbackAnswer) tLObject;
                if (!z && tLRPC$TL_messages_botCallbackAnswer.cache_time != 0 && !tLRPC$KeyboardButton.requires_password) {
                    getMessagesStorage().saveBotCache(str, tLRPC$TL_messages_botCallbackAnswer);
                }
                String str3 = tLRPC$TL_messages_botCallbackAnswer.message;
                if (str3 != null) {
                    if (tLRPC$TL_messages_botCallbackAnswer.alert) {
                        if (chatActivity.getParentActivity() == null) {
                            return;
                        }
                        AlertDialog.Builder builder = new AlertDialog.Builder(chatActivity.getParentActivity());
                        builder.setTitle(str2);
                        builder.setPositiveButton(LocaleController.getString(R.string.OK), null);
                        builder.setMessage(tLRPC$TL_messages_botCallbackAnswer.message);
                        chatActivity.showDialog(builder.create());
                        return;
                    }
                    chatActivity.showAlert(str2, str3);
                } else if (tLRPC$TL_messages_botCallbackAnswer.url == null || chatActivity.getParentActivity() == null) {
                } else {
                    TLRPC$User user2 = getMessagesController().getUser(Long.valueOf(fromChatId));
                    boolean z4 = user2 != null && user2.verified;
                    if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame) {
                        TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
                        TLRPC$TL_game tLRPC$TL_game = tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGame ? tLRPC$MessageMedia.game : null;
                        if (tLRPC$TL_game == null) {
                            return;
                        }
                        String str4 = tLRPC$TL_messages_botCallbackAnswer.url;
                        if (!z4) {
                            if (MessagesController.getNotificationsSettings(this.currentAccount).getBoolean("askgame_" + fromChatId, true)) {
                                z3 = true;
                            }
                        }
                        chatActivity.showOpenGameAlert(tLRPC$TL_game, messageObject, str4, z3, fromChatId);
                        return;
                    }
                    AlertsCreator.showOpenUrlAlert(chatActivity, tLRPC$TL_messages_botCallbackAnswer.url, false, false);
                }
            }
        } else if (tLRPC$TL_error == null || chatActivity.getParentActivity() == null) {
        } else {
            if ("PASSWORD_HASH_INVALID".equals(tLRPC$TL_error.text)) {
                if (tLRPC$InputCheckPasswordSRP == null) {
                    AlertDialog.Builder builder2 = new AlertDialog.Builder(chatActivity.getParentActivity());
                    builder2.setTitle(LocaleController.getString(R.string.BotOwnershipTransfer));
                    builder2.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferReadyAlertText", R.string.BotOwnershipTransferReadyAlertText, new Object[0])));
                    builder2.setPositiveButton(LocaleController.getString(R.string.BotOwnershipTransferChangeOwner), new DialogInterface.OnClickListener() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda66
                        @Override // android.content.DialogInterface.OnClickListener
                        public final void onClick(DialogInterface dialogInterface, int i) {
                            SendMessagesHelper.this.lambda$sendCallback$28(z2, messageObject, tLRPC$KeyboardButton, chatActivity, dialogInterface, i);
                        }
                    });
                    builder2.setNegativeButton(LocaleController.getString(R.string.Cancel), null);
                    chatActivity.showDialog(builder2.create());
                }
            } else if ("PASSWORD_MISSING".equals(tLRPC$TL_error.text) || tLRPC$TL_error.text.startsWith("PASSWORD_TOO_FRESH_") || tLRPC$TL_error.text.startsWith("SESSION_TOO_FRESH_")) {
                if (twoStepVerificationActivity != null) {
                    twoStepVerificationActivity.needHideProgress();
                }
                AlertDialog.Builder builder3 = new AlertDialog.Builder(chatActivity.getParentActivity());
                builder3.setTitle(LocaleController.getString(R.string.EditAdminTransferAlertTitle));
                LinearLayout linearLayout = new LinearLayout(chatActivity.getParentActivity());
                linearLayout.setPadding(AndroidUtilities.dp(24.0f), AndroidUtilities.dp(2.0f), AndroidUtilities.dp(24.0f), 0);
                linearLayout.setOrientation(1);
                builder3.setView(linearLayout);
                TextView textView = new TextView(chatActivity.getParentActivity());
                int i = Theme.key_dialogTextBlack;
                textView.setTextColor(Theme.getColor(i));
                textView.setTextSize(1, 16.0f);
                textView.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView.setText(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferAlertText", R.string.BotOwnershipTransferAlertText, new Object[0])));
                linearLayout.addView(textView, LayoutHelper.createLinear(-1, -2));
                LinearLayout linearLayout2 = new LinearLayout(chatActivity.getParentActivity());
                linearLayout2.setOrientation(0);
                linearLayout.addView(linearLayout2, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView imageView = new ImageView(chatActivity.getParentActivity());
                int i2 = R.drawable.list_circle;
                imageView.setImageResource(i2);
                imageView.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                int color = Theme.getColor(i);
                PorterDuff.Mode mode = PorterDuff.Mode.MULTIPLY;
                imageView.setColorFilter(new PorterDuffColorFilter(color, mode));
                TextView textView2 = new TextView(chatActivity.getParentActivity());
                textView2.setTextColor(Theme.getColor(i));
                textView2.setTextSize(1, 16.0f);
                textView2.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView2.setText(AndroidUtilities.replaceTags(LocaleController.getString(R.string.EditAdminTransferAlertText1)));
                if (LocaleController.isRTL) {
                    linearLayout2.addView(textView2, LayoutHelper.createLinear(-1, -2));
                    linearLayout2.addView(imageView, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout2.addView(imageView, LayoutHelper.createLinear(-2, -2));
                    linearLayout2.addView(textView2, LayoutHelper.createLinear(-1, -2));
                }
                LinearLayout linearLayout3 = new LinearLayout(chatActivity.getParentActivity());
                linearLayout3.setOrientation(0);
                linearLayout.addView(linearLayout3, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView imageView2 = new ImageView(chatActivity.getParentActivity());
                imageView2.setImageResource(i2);
                imageView2.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                imageView2.setColorFilter(new PorterDuffColorFilter(Theme.getColor(i), mode));
                TextView textView3 = new TextView(chatActivity.getParentActivity());
                textView3.setTextColor(Theme.getColor(i));
                textView3.setTextSize(1, 16.0f);
                textView3.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView3.setText(AndroidUtilities.replaceTags(LocaleController.getString(R.string.EditAdminTransferAlertText2)));
                if (LocaleController.isRTL) {
                    linearLayout3.addView(textView3, LayoutHelper.createLinear(-1, -2));
                    linearLayout3.addView(imageView2, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout3.addView(imageView2, LayoutHelper.createLinear(-2, -2));
                    linearLayout3.addView(textView3, LayoutHelper.createLinear(-1, -2));
                }
                if ("PASSWORD_MISSING".equals(tLRPC$TL_error.text)) {
                    builder3.setPositiveButton(LocaleController.getString(R.string.EditAdminTransferSetPassword), new DialogInterface.OnClickListener() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda68
                        @Override // android.content.DialogInterface.OnClickListener
                        public final void onClick(DialogInterface dialogInterface, int i3) {
                            SendMessagesHelper.lambda$sendCallback$29(ChatActivity.this, dialogInterface, i3);
                        }
                    });
                    builder3.setNegativeButton(LocaleController.getString(R.string.Cancel), null);
                } else {
                    TextView textView4 = new TextView(chatActivity.getParentActivity());
                    textView4.setTextColor(Theme.getColor(i));
                    textView4.setTextSize(1, 16.0f);
                    textView4.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                    textView4.setText(LocaleController.getString(R.string.EditAdminTransferAlertText3));
                    linearLayout.addView(textView4, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                    builder3.setNegativeButton(LocaleController.getString(R.string.OK), null);
                }
                chatActivity.showDialog(builder3.create());
            } else if ("SRP_ID_INVALID".equals(tLRPC$TL_error.text)) {
                ConnectionsManager.getInstance(this.currentAccount).sendRequest(new TLRPC$TL_account_getPassword(), new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda67
                    @Override // org.telegram.tgnet.RequestDelegate
                    public final void run(TLObject tLObject2, TLRPC$TL_error tLRPC$TL_error2) {
                        SendMessagesHelper.this.lambda$sendCallback$31(twoStepVerificationActivity, z2, messageObject, tLRPC$KeyboardButton, chatActivity, tLObject2, tLRPC$TL_error2);
                    }
                }, 8);
            } else if (twoStepVerificationActivity != null) {
                twoStepVerificationActivity.needHideProgress();
                twoStepVerificationActivity.finishFragment();
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$25(String str, List list) {
        this.waitingForCallback.remove(str);
        list.remove(str);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$28(final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, DialogInterface dialogInterface, int i) {
        final TwoStepVerificationActivity twoStepVerificationActivity = new TwoStepVerificationActivity();
        twoStepVerificationActivity.setDelegate(0, new TwoStepVerificationActivity.TwoStepVerificationActivityDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda45
            @Override // org.telegram.ui.TwoStepVerificationActivity.TwoStepVerificationActivityDelegate
            public final void didEnterPassword(TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP) {
                SendMessagesHelper.this.lambda$sendCallback$27(z, messageObject, tLRPC$KeyboardButton, twoStepVerificationActivity, chatActivity, tLRPC$InputCheckPasswordSRP);
            }
        });
        chatActivity.presentFragment(twoStepVerificationActivity);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$sendCallback$29(ChatActivity chatActivity, DialogInterface dialogInterface, int i) {
        chatActivity.presentFragment(new TwoStepVerificationSetupActivity(6, null));
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$31(final TwoStepVerificationActivity twoStepVerificationActivity, final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda19
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendCallback$30(tLRPC$TL_error, tLObject, twoStepVerificationActivity, z, messageObject, tLRPC$KeyboardButton, chatActivity);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$30(TLRPC$TL_error tLRPC$TL_error, TLObject tLObject, TwoStepVerificationActivity twoStepVerificationActivity, boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity) {
        if (tLRPC$TL_error == null) {
            TLRPC$account_Password tLRPC$account_Password = (TLRPC$account_Password) tLObject;
            twoStepVerificationActivity.setCurrentPasswordInfo(null, tLRPC$account_Password);
            TwoStepVerificationActivity.initPasswordNewAlgo(tLRPC$account_Password);
            lambda$sendCallback$27(z, messageObject, tLRPC$KeyboardButton, twoStepVerificationActivity.getNewSrpPassword(), twoStepVerificationActivity, chatActivity);
        }
    }

    public boolean isSendingCallback(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        int i = 0;
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return false;
        }
        if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth) {
            i = 3;
        } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame) {
            i = 1;
        } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
            i = 2;
        }
        return this.waitingForCallback.containsKey(messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i);
    }

    public void sendGame(TLRPC$InputPeer tLRPC$InputPeer, TLRPC$TL_inputMediaGame tLRPC$TL_inputMediaGame, long j, final long j2) {
        NativeByteBuffer nativeByteBuffer;
        if (tLRPC$InputPeer == null || tLRPC$TL_inputMediaGame == null) {
            return;
        }
        TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = new TLRPC$TL_messages_sendMedia();
        tLRPC$TL_messages_sendMedia.peer = tLRPC$InputPeer;
        if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChannel) {
            SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings.getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + (-tLRPC$InputPeer.channel_id), false);
        } else if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChat) {
            SharedPreferences notificationsSettings2 = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings2.getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + (-tLRPC$InputPeer.chat_id), false);
        } else {
            SharedPreferences notificationsSettings3 = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings3.getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + tLRPC$InputPeer.user_id, false);
        }
        tLRPC$TL_messages_sendMedia.random_id = j != 0 ? j : getNextRandomId();
        tLRPC$TL_messages_sendMedia.message = "";
        tLRPC$TL_messages_sendMedia.media = tLRPC$TL_inputMediaGame;
        long sendAsPeerId = ChatObject.getSendAsPeerId(getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer.chat_id)), getMessagesController().getChatFull(tLRPC$InputPeer.chat_id));
        if (sendAsPeerId != UserConfig.getInstance(this.currentAccount).getClientUserId()) {
            tLRPC$TL_messages_sendMedia.send_as = getMessagesController().getInputPeer(sendAsPeerId);
        }
        if (j2 == 0) {
            try {
                nativeByteBuffer = new NativeByteBuffer(tLRPC$InputPeer.getObjectSize() + tLRPC$TL_inputMediaGame.getObjectSize() + 12);
            } catch (Exception e) {
                e = e;
                nativeByteBuffer = null;
            }
            try {
                nativeByteBuffer.writeInt32(3);
                nativeByteBuffer.writeInt64(j);
                tLRPC$InputPeer.serializeToStream(nativeByteBuffer);
                tLRPC$TL_inputMediaGame.serializeToStream(nativeByteBuffer);
            } catch (Exception e2) {
                e = e2;
                FileLog.e(e);
                j2 = getMessagesStorage().createPendingTask(nativeByteBuffer);
                getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda92
                    @Override // org.telegram.tgnet.RequestDelegate
                    public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                        SendMessagesHelper.this.lambda$sendGame$34(j2, tLObject, tLRPC$TL_error);
                    }
                });
            }
            j2 = getMessagesStorage().createPendingTask(nativeByteBuffer);
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda92
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendGame$34(j2, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendGame$34(long j, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
        }
        if (j != 0) {
            getMessagesStorage().removePendingTask(j);
        }
    }

    /* JADX WARN: Can't wrap try/catch for region: R(81:10|(1:13)|(1:18)|(1:1840)(1:22)|23|(1:25)(1:1839)|26|(2:28|(1:(2:31|32)(2:33|34))(1:35))(2:1828|(3:1830|(1:1837)(1:1835)|1836)(1:1838))|36|(2:37|(4:39|(1:44)|45|(2:1521|1522)(7:50|(1:52)(2:1461|(4:1515|1516|(1:1518)(1:1520)|1519)(2:1465|(1:1467)(2:1468|(3:1470|(1:1472)(1:1474)|1473)(2:1475|(3:1510|1511|(2:1513|1500)(1:1514))(2:1481|(1:1483)(4:1484|(2:1495|(2:1497|(2:1499|1500)(1:1501))(2:1502|(1:1504)(1:1505)))|1506|(2:1508|1500)(1:1509)))))))|(1:56)|57|58|(1:1460)|60))(16:1523|1524|1525|(1:1527)(1:1819)|(3:(1:1530)(1:1604)|(4:1532|1533|1534|(2:1536|(1:1538)(1:1539)))(1:1603)|(4:(1:1589)(2:1597|(1:1599)(1:1600))|(1:1596)(1:1593)|1594|1595)(1:1551))(4:1605|1606|(4:(1:1609)(1:1614)|1610|1611|1612)(7:1615|(4:(1:1618)(1:1635)|1619|1620|(1:1634)(1:1624))(1:(13:(1:1638)(1:1668)|1639|(1:1641)(1:1667)|(1:1643)(1:1666)|1644|1645|(1:1665)(1:1649)|(1:1664)(2:1653|(4:1655|(1:1657)(2:1659|(1:1661))|1658|1629))|1662|1663|(0)(0)|1658|1629)(3:1669|1670|(7:1672|1673|(1:1675)|1678|1627|1628|1629)(1:(8:1680|1681|1682|(1:1684)|1678|1627|1628|1629)(1:(14:(1:1688)(1:1708)|1689|(2:1691|(6:1693|1694|(1:1696)|1697|(1:1699)|(4:1704|1627|1628|1629)(1:1703)))(1:1707)|1705|1706|1694|(0)|1697|(0)|(1:1701)|1704|1627|1628|1629)(2:1709|(17:(1:1712)(1:1809)|1713|1714|(1:1806)(4:1717|1718|(2:1720|(3:1723|1724|1725)(1:1722))|1803)|1804|1805|1726|(1:1728)|1729|(3:1789|(2:1792|(1:1794)(1:1795))|1802)(1:1733)|(3:1735|(1:1737)|1738)|(2:1787|1788)(2:1748|1749)|(2:1751|(6:1756|(4:1760|(5:1763|1764|(4:1766|(1:1768)(1:1779)|1769|(1:1771)(4:1774|(1:1776)(1:1778)|1777|1773))(1:1780)|1772|1773)(1:1762)|1757|1758)|1781|1782|1772|1773))|1786|1782|1772|1773)(2:1810|(2:(1:1813)(1:1815)|1814)(1:1816)))))))|1625|1626|1627|1628|1629)|1613)|(1:1587)(1:1555)|(1:1557)(3:1583|1584|(1:1586))|1558|(1:1560)|1561|(1:1563)(1:1582)|(2:1578|(4:1580|1571|1572|1573)(3:1581|1572|1573))|1570|1571|1572|1573))|(4:62|63|64|(70:66|67|68|69|(1:71)|(60:75|76|77|(1:79)|(2:81|(2:(3:84|(1:86)|87)(1:89)|88))(1:1443)|90|(3:92|93|(1:95)(50:1440|130|(1:132)(2:1386|(56:1388|(37:1394|134|135|136|(1:138)(1:1385)|(2:141|(1:143))|144|(3:146|(2:148|(2:150|151)(2:152|(1:154)))|155)(6:1339|1340|(1:1342)(1:1384)|(2:1344|1345)(3:1378|1379|(1:1383))|1346|(2:1350|(3:1352|(2:1353|(2:1355|(2:1358|1359)(1:1357))(2:1361|1362))|1360)(2:1363|(3:1367|(2:1368|(2:1370|(2:1373|1374)(1:1372))(2:1376|1377))|1375))))|(1:1338)(16:162|(1:164)(1:1337)|165|166|(2:168|(11:170|(2:176|(10:180|(4:182|183|(1:1332)(1:189)|(3:1316|(1:1318)(1:1331)|(6:1320|(1:1324)|1325|(1:1327)|1328|(1:1330))))|1333|183|(1:185)|1332|(0)|1316|(0)(0)|(0)))|1334|1333|183|(0)|1332|(0)|1316|(0)(0)|(0)))(1:1336)|1335|(4:172|174|176|(11:178|180|(0)|1333|183|(0)|1332|(0)|1316|(0)(0)|(0)))|1334|1333|183|(0)|1332|(0)|1316|(0)(0)|(0))|192|(2:1314|1315)|196|(1:198)|199|200|201|(4:203|(1:205)(1:1312)|206|(1:208)(1:1311))(1:1313)|209|210|(1:212)(1:1310)|(1:1309)(1:218)|219|220|221|222|(1:224)(1:1301)|225|(3:1290|1291|(1:1298))|227|(2:(3:1284|1285|(1:1287))(1:1289)|1288)|230|231|(6:233|(1:235)(1:(4:1265|237|(1:239)(1:1263)|240)(1:1266))|236|237|(0)(0)|240)(7:1267|1268|(2:1270|1271)|(3:1273|(1:1275)(1:1281)|1276)(1:1282)|1277|1278|(1:1280))|241|(1:1261)(2:244|245)|246|(3:1131|1132|(1:(18:1179|1180|(1:1182)(1:1224)|1183|(1:1185)(2:1221|(1:1223))|(1:1189)|1190|(1:1192)|(1:1196)|(2:1198|1199)(1:1219)|1200|(1:1202)|1203|(1:1205)|1206|(1:1208)(1:1218)|1209|(4:1211|(1:1213)(1:1216)|1214|1215)(1:1217))(18:1135|(1:1137)(1:1178)|1138|(1:1140)(2:1175|(1:1177))|1141|(1:1143)|(1:1147)|1148|(1:1150)|(1:1152)|(1:1156)|(1:1158)|1159|(1:1161)|1162|(1:1164)(1:1174)|1165|(4:1167|(1:1169)(1:1172)|1170|1171)(1:1173)))(9:1228|(1:1232)|1233|(2:1235|(1:1237))(1:1257)|(1:1241)|1242|(1:1256)(1:1246)|1247|(4:1249|(1:1251)(1:1254)|1252|1253)(1:1255)))(10:252|253|(2:1034|(17:1066|1067|(1:1069)|(4:1071|1072|1073|(16:1075|1076|1077|(2:1079|(1:1081)(1:1118))(1:1119)|1082|1083|(3:1085|1086|1087)(1:1115)|1088|1089|(1:1091)(2:1104|(1:1106)(2:1107|(1:1109)))|(1:1093)(1:1103)|1094|1095|1096|1097|1098))|1125|1126|1083|(0)(0)|1088|1089|(0)(0)|(0)(0)|1094|1095|1096|1097|1098)(2:1036|(13:1038|(1:1040)|1041|(1:1043)|1044|(1:1046)(2:1062|(1:1064))|1047|(1:1049)|1050|(3:1052|(1:1054)(1:1056)|1055)|(1:1058)(1:1061)|1059|1060)(1:1065)))(4:257|258|(12:(4:261|(1:263)(2:474|(4:476|(1:478)|479|(1:481))(1:482))|264|265)(11:483|(14:699|700|701|(5:742|743|744|745|746)(1:703)|(1:741)(4:707|(1:709)|710|711)|712|713|714|(1:716)(4:732|(2:734|735)|736|737)|(3:718|(1:720)(1:722)|721)|723|(2:727|(2:729|498))|730|498)(4:488|(16:637|638|(11:640|(1:(2:643|(1:645)))(1:695)|(1:652)|(3:654|655|(12:657|658|659|(3:661|662|663)|665|666|667|(1:669)(4:683|(1:685)|(1:689)|690)|(3:671|(1:673)(1:681)|674)(1:682)|675|(2:677|(1:679))|680))|694|667|(0)(0)|(0)(0)|675|(0)|680)|696|647|648|(1:650)|(0)|(0)|694|667|(0)(0)|(0)(0)|675|(0)|680)(4:490|(2:492|(1:499)(1:496))(17:500|501|(3:506|(7:508|(4:510|511|512|513)(1:531)|514|(1:516)(4:523|(1:525)|(1:529)|530)|517|(1:519)(1:522)|520)(2:532|(4:534|(2:538|(4:540|(6:543|544|545|546|547|541)|553|554))|555|(2:557|(1:559)))(2:560|(1:562)(2:563|(1:565)(1:566))))|521)|600|(3:602|603|604)(1:632)|(9:606|(2:608|(1:(1:611)))(1:630)|629|(1:627)(1:623)|624|625|573|(1:575)(4:592|(1:594)|(1:598)|599)|(4:(3:578|(1:580)(1:589)|581)(1:590)|582|(2:584|(1:586))|587)(1:591))(1:631)|628|613|614|615|(1:621)|627|624|625|573|(0)(0)|(0)(0))|497|498)|588|521)|267|(1:473)(2:272|273)|274|275|276|(8:395|396|(1:398)(2:428|(10:430|(1:453)(1:434)|435|(1:437)(2:449|(1:451))|(2:439|440)(1:448)|441|(1:443)|444|(1:446)|447)(8:454|(1:456)(2:466|(1:468))|(1:458)|459|(1:461)|462|(1:464)|465))|399|(3:403|(1:409)|(1:413))|414|(3:416|(1:420)|421)(2:423|(1:427))|422)(20:278|279|280|(1:282)|(1:284)(2:390|(1:392))|285|286|(1:288)|289|(1:293)|(1:295)|(1:299)|300|(1:302)|303|304|(1:306)|307|(1:309)|310)|311|312|(2:314|316)(5:317|318|(3:(1:321)(1:327)|322|323)(2:328|(1:(1:331)(6:(1:333)(1:344)|334|335|336|337|338))(2:345|(1:(1:348)(2:(1:350)(1:352)|351))(2:353|(2:(1:356)(1:358)|357)(2:359|(1:(2:(1:365)(1:367)|366)(1:363))(2:368|(1:(1:371)(2:(1:373)(1:375)|374))(2:376|(2:(1:384)(1:386)|385)(1:382)))))))|324|325))|266|267|(1:269)|473|274|275|276|(0)(0)|311|312|(0)(0))(19:755|756|757|758|(3:1013|1014|(1:1016)(1:1017))(3:760|761|762)|763|(1:767)|768|(2:770|(1:772))|773|(3:775|776|(1:778))|779|780|(4:782|(1:784)(1:822)|785|786)(7:823|(2:825|(5:867|(16:942|943|944|945|946|(3:996|997|(1:1002)(1:1001))(4:950|(3:988|989|(2:991|992))|952|953)|954|(2:955|(2:957|(2:960|961)(1:959))(1:987))|962|(2:967|903)|986|979|980|(1:982)|983|788)(3:869|(1:871)(3:873|(4:889|890|(8:906|(2:908|(1:910)(1:940))(1:941)|911|(1:916)|939|(1:933)|934|(1:936))(3:896|(1:898)(1:905)|(1:904)(1:902))|903)(2:878|(5:880|(1:882)(1:888)|883|(1:885)(1:887)|886))|788)|872)|789|(1:817)(8:791|(1:793)(1:816)|794|795|796|(2:801|802)|811|802)|(4:804|(1:806)(1:809)|807|808)(1:810))(1:828))(1:1008)|829|830|(2:832|833)(2:865|866)|834|(9:(7:840|(2:842|(5:844|845|846|(1:848)(1:862)|849))|863|845|846|(0)(0)|849)(1:864)|850|(2:860|861)(1:855)|856|857|(1:859)|789|(0)(0)|(0)(0))(1:838))|787|788|789|(0)(0)|(0)(0))|619)|343|111|(1:113)(1:119)|114|(1:116)|117|118))|1395|(2:1397|(50:1399|1400|(2:1416|(1:1418))(2:1405|(1:1407))|(2:1409|(47:1411|(1:1415)|135|136|(0)(0)|(2:141|(0))|144|(0)(0)|(0)|1338|192|(1:194)|1314|1315|196|(0)|199|200|201|(0)(0)|209|210|(0)(0)|(0)|1309|219|220|221|222|(0)(0)|225|(0)|227|(0)|(0)(0)|1288|230|231|(0)(0)|241|(0)|1261|246|(1:248)|1131|1132|(0)(0)))|134|135|136|(0)(0)|(0)|144|(0)(0)|(0)|1338|192|(0)|1314|1315|196|(0)|199|200|201|(0)(0)|209|210|(0)(0)|(0)|1309|219|220|221|222|(0)(0)|225|(0)|227|(0)|(0)(0)|1288|230|231|(0)(0)|241|(0)|1261|246|(0)|1131|1132|(0)(0)))(1:1420)|1419|1400|(0)|1416|(0)|(0)|134|135|136|(0)(0)|(0)|144|(0)(0)|(0)|1338|192|(0)|1314|1315|196|(0)|199|200|201|(0)(0)|209|210|(0)(0)|(0)|1309|219|220|221|222|(0)(0)|225|(0)|227|(0)|(0)(0)|1288|230|231|(0)(0)|241|(0)|1261|246|(0)|1131|1132|(0)(0)))|133|134|135|136|(0)(0)|(0)|144|(0)(0)|(0)|1338|192|(0)|1314|1315|196|(0)|199|200|201|(0)(0)|209|210|(0)(0)|(0)|1309|219|220|221|222|(0)(0)|225|(0)|227|(0)|(0)(0)|1288|230|231|(0)(0)|241|(0)|1261|246|(0)|1131|1132|(0)(0)))(1:1441)|(2:97|98)(1:(3:1434|1435|1436)(54:1437|1438|1439|100|(7:(2:104|105)|120|121|122|123|124|(2:126|(1:128)(1:129)))(3:1426|1427|1428)|130|(0)(0)|133|134|135|136|(0)(0)|(0)|144|(0)(0)|(0)|1338|192|(0)|1314|1315|196|(0)|199|200|201|(0)(0)|209|210|(0)(0)|(0)|1309|219|220|221|222|(0)(0)|225|(0)|227|(0)|(0)(0)|1288|230|231|(0)(0)|241|(0)|1261|246|(0)|1131|1132|(0)(0)))|99|100|(0)(0)|130|(0)(0)|133|134|135|136|(0)(0)|(0)|144|(0)(0)|(0)|1338|192|(0)|1314|1315|196|(0)|199|200|201|(0)(0)|209|210|(0)(0)|(0)|1309|219|220|221|222|(0)(0)|225|(0)|227|(0)|(0)(0)|1288|230|231|(0)(0)|241|(0)|1261|246|(0)|1131|1132|(0)(0))|1451|1452|1447|(1:1449)|1450|76|77|(0)|(0)(0)|90|(0)(0)|(0)(0)|99|100|(0)(0)|130|(0)(0)|133|134|135|136|(0)(0)|(0)|144|(0)(0)|(0)|1338|192|(0)|1314|1315|196|(0)|199|200|201|(0)(0)|209|210|(0)(0)|(0)|1309|219|220|221|222|(0)(0)|225|(0)|227|(0)|(0)(0)|1288|230|231|(0)(0)|241|(0)|1261|246|(0)|1131|1132|(0)(0)))(1:1459)|1455|67|68|69|(0)|(60:75|76|77|(0)|(0)(0)|90|(0)(0)|(0)(0)|99|100|(0)(0)|130|(0)(0)|133|134|135|136|(0)(0)|(0)|144|(0)(0)|(0)|1338|192|(0)|1314|1315|196|(0)|199|200|201|(0)(0)|209|210|(0)(0)|(0)|1309|219|220|221|222|(0)(0)|225|(0)|227|(0)|(0)(0)|1288|230|231|(0)(0)|241|(0)|1261|246|(0)|1131|1132|(0)(0))|1451|1452|1447|(0)|1450|76|77|(0)|(0)(0)|90|(0)(0)|(0)(0)|99|100|(0)(0)|130|(0)(0)|133|134|135|136|(0)(0)|(0)|144|(0)(0)|(0)|1338|192|(0)|1314|1315|196|(0)|199|200|201|(0)(0)|209|210|(0)(0)|(0)|1309|219|220|221|222|(0)(0)|225|(0)|227|(0)|(0)(0)|1288|230|231|(0)(0)|241|(0)|1261|246|(0)|1131|1132|(0)(0)) */
    /* JADX WARN: Code restructure failed: missing block: B:1059:0x161a, code lost:
        if (r30 != null) goto L600;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1061:0x1622, code lost:
        if (r7.access_hash != 0) goto L572;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1063:0x1625, code lost:
        r27 = r4;
        r12 = null;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1077:0x1662, code lost:
        if (r3.containsKey(r12) != false) goto L613;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1452:0x1da6, code lost:
        r14 = r54;
        r8 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r9, r14);
        r8.encryptedChat = r12;
        r8.type = 1;
        r8.sendEncryptedRequest = r1;
        r11 = r59;
        r8.originalPath = r11;
        r8.obj = r13;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1453:0x1dba, code lost:
        if (r3 == null) goto L985;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1454:0x1dbc, code lost:
        r3 = r76;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1455:0x1dc2, code lost:
        if (r3.containsKey(r3) == false) goto L985;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1456:0x1dc4, code lost:
        r8.parentObject = r3.get(r3);
     */
    /* JADX WARN: Code restructure failed: missing block: B:1458:0x1dcc, code lost:
        r8.parentObject = r99;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1459:0x1dd1, code lost:
        r8.performMediaUpload = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1460:0x1dd3, code lost:
        if (r42 == null) goto L984;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1461:0x1dd5, code lost:
        r4 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1462:0x1dd7, code lost:
        r4 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1463:0x1dd8, code lost:
        r8.scheduled = r4;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1523:0x1fcd, code lost:
        r8 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r9, r3);
        r8.encryptedChat = r12;
        r8.type = 2;
        r8.sendEncryptedRequest = r1;
        r7 = r59;
        r8.originalPath = r7;
        r8.obj = r13;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1524:0x1fdf, code lost:
        if (r3 == null) goto L938;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1525:0x1fe1, code lost:
        r2 = r76;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1526:0x1fe9, code lost:
        if (r3.containsKey(r2) == false) goto L938;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1527:0x1feb, code lost:
        r8.parentObject = r3.get(r2);
     */
    /* JADX WARN: Code restructure failed: missing block: B:1529:0x1ff3, code lost:
        r8.parentObject = r99;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1530:0x1ff6, code lost:
        r8.performMediaUpload = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1531:0x1ff8, code lost:
        if (r42 == null) goto L937;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1532:0x1ffa, code lost:
        r2 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1533:0x1ffc, code lost:
        r2 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1534:0x1ffd, code lost:
        r8.scheduled = r2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1605:0x2172, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1649:0x222f, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1742:0x23fc, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1743:0x23fd, code lost:
        r9 = r4;
        r14 = r15;
        r15 = r25;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1750:0x2414, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1751:0x2415, code lost:
        r9 = r4;
        r14 = r15;
        r15 = r2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:252:0x0630, code lost:
        if (r5.containsKey("query_id") != false) goto L1677;
     */
    /* JADX WARN: Code restructure failed: missing block: B:253:0x0632, code lost:
        r78 = r2;
        r1 = r8;
        r30 = r2;
        r79 = "BEGIN:VCARD";
        r8 = r8;
     */
    /* JADX WARN: Code restructure failed: missing block: B:267:0x066c, code lost:
        if (r5.containsKey("query_id") != false) goto L1677;
     */
    /* JADX WARN: Code restructure failed: missing block: B:448:0x09ff, code lost:
        r3 = new org.telegram.tgnet.TLRPC$TL_inputQuickReplyShortcutId();
        r13 = r14;
        r3.shortcut_id = r13;
        r15.quick_reply_shortcut = r3;
     */
    /* JADX WARN: Code restructure failed: missing block: B:449:0x0a0a, code lost:
        r14 = r14;
     */
    /* JADX WARN: Code restructure failed: missing block: B:928:0x1353, code lost:
        if (r12.roundVideo == false) goto L647;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:1093:0x1694 A[Catch: Exception -> 0x13b9, TryCatch #45 {Exception -> 0x13b9, blocks: (B:946:0x13a5, B:952:0x13c5, B:956:0x13e2, B:968:0x1428, B:972:0x143f, B:974:0x1446, B:976:0x1452, B:978:0x145f, B:979:0x1463, B:959:0x13ed, B:961:0x1407, B:963:0x140e, B:965:0x1414, B:966:0x1422, B:984:0x1485, B:986:0x14a0, B:988:0x14b3, B:989:0x14c0, B:999:0x14dd, B:1010:0x1508, B:1021:0x1550, B:1025:0x1567, B:1013:0x1515, B:1015:0x1531, B:1017:0x1538, B:1019:0x153e, B:1020:0x154c, B:1028:0x1579, B:1030:0x1586, B:1032:0x158e, B:1035:0x159c, B:1037:0x159f, B:1040:0x15aa, B:1045:0x15ba, B:1046:0x15c0, B:1048:0x15c4, B:1050:0x15cc, B:1053:0x15e2, B:1056:0x15f1, B:1060:0x161c, B:1091:0x168c, B:1093:0x1694, B:1104:0x16d9, B:1108:0x16ee, B:1110:0x16f3, B:1112:0x16ff, B:1114:0x170c, B:1094:0x169b, B:1096:0x16b7, B:1098:0x16be, B:1100:0x16c4, B:1101:0x16d2, B:1064:0x162a, B:1592:0x2131, B:1549:0x2063, B:1558:0x2091, B:1561:0x20c4, B:1563:0x20d6, B:1565:0x20e0, B:1568:0x20ed, B:1572:0x20f4, B:1578:0x2102, B:1580:0x2108, B:1587:0x2126, B:1567:0x20e8, B:1437:0x1d26, B:1438:0x1d34, B:1440:0x1d3c, B:1442:0x1d48, B:1443:0x1d58, B:1444:0x1d5b, B:1449:0x1d70, B:1452:0x1da6, B:1454:0x1dbc, B:1456:0x1dc4, B:1459:0x1dd1, B:1463:0x1dd8, B:1466:0x1de3, B:1468:0x1deb, B:1458:0x1dcc, B:1428:0x1d03, B:1431:0x1d0d, B:1433:0x1d1a, B:1435:0x1d1e, B:1436:0x1d21, B:1475:0x1e0c, B:1485:0x1e51, B:1489:0x1e69, B:1491:0x1e80, B:1493:0x1ea3, B:1492:0x1e95, B:1494:0x1eb7, B:1496:0x1ebf, B:1498:0x1ec5, B:1500:0x1ecc, B:1502:0x1ef7, B:1505:0x1f15, B:1507:0x1f1a, B:1508:0x1f23, B:1503:0x1efe, B:1509:0x1f3a, B:1511:0x1f4f, B:1513:0x1f53, B:1516:0x1f88, B:1521:0x1f9d, B:1523:0x1fcd, B:1525:0x1fe1, B:1527:0x1feb, B:1530:0x1ff6, B:1534:0x1ffd, B:1537:0x2005, B:1539:0x200b, B:1541:0x2015, B:1544:0x201d, B:1529:0x1ff3, B:1514:0x1f65, B:1515:0x1f7a), top: B:1843:0x1286 }] */
    /* JADX WARN: Removed duplicated region for block: B:1094:0x169b A[Catch: Exception -> 0x13b9, TryCatch #45 {Exception -> 0x13b9, blocks: (B:946:0x13a5, B:952:0x13c5, B:956:0x13e2, B:968:0x1428, B:972:0x143f, B:974:0x1446, B:976:0x1452, B:978:0x145f, B:979:0x1463, B:959:0x13ed, B:961:0x1407, B:963:0x140e, B:965:0x1414, B:966:0x1422, B:984:0x1485, B:986:0x14a0, B:988:0x14b3, B:989:0x14c0, B:999:0x14dd, B:1010:0x1508, B:1021:0x1550, B:1025:0x1567, B:1013:0x1515, B:1015:0x1531, B:1017:0x1538, B:1019:0x153e, B:1020:0x154c, B:1028:0x1579, B:1030:0x1586, B:1032:0x158e, B:1035:0x159c, B:1037:0x159f, B:1040:0x15aa, B:1045:0x15ba, B:1046:0x15c0, B:1048:0x15c4, B:1050:0x15cc, B:1053:0x15e2, B:1056:0x15f1, B:1060:0x161c, B:1091:0x168c, B:1093:0x1694, B:1104:0x16d9, B:1108:0x16ee, B:1110:0x16f3, B:1112:0x16ff, B:1114:0x170c, B:1094:0x169b, B:1096:0x16b7, B:1098:0x16be, B:1100:0x16c4, B:1101:0x16d2, B:1064:0x162a, B:1592:0x2131, B:1549:0x2063, B:1558:0x2091, B:1561:0x20c4, B:1563:0x20d6, B:1565:0x20e0, B:1568:0x20ed, B:1572:0x20f4, B:1578:0x2102, B:1580:0x2108, B:1587:0x2126, B:1567:0x20e8, B:1437:0x1d26, B:1438:0x1d34, B:1440:0x1d3c, B:1442:0x1d48, B:1443:0x1d58, B:1444:0x1d5b, B:1449:0x1d70, B:1452:0x1da6, B:1454:0x1dbc, B:1456:0x1dc4, B:1459:0x1dd1, B:1463:0x1dd8, B:1466:0x1de3, B:1468:0x1deb, B:1458:0x1dcc, B:1428:0x1d03, B:1431:0x1d0d, B:1433:0x1d1a, B:1435:0x1d1e, B:1436:0x1d21, B:1475:0x1e0c, B:1485:0x1e51, B:1489:0x1e69, B:1491:0x1e80, B:1493:0x1ea3, B:1492:0x1e95, B:1494:0x1eb7, B:1496:0x1ebf, B:1498:0x1ec5, B:1500:0x1ecc, B:1502:0x1ef7, B:1505:0x1f15, B:1507:0x1f1a, B:1508:0x1f23, B:1503:0x1efe, B:1509:0x1f3a, B:1511:0x1f4f, B:1513:0x1f53, B:1516:0x1f88, B:1521:0x1f9d, B:1523:0x1fcd, B:1525:0x1fe1, B:1527:0x1feb, B:1530:0x1ff6, B:1534:0x1ffd, B:1537:0x2005, B:1539:0x200b, B:1541:0x2015, B:1544:0x201d, B:1529:0x1ff3, B:1514:0x1f65, B:1515:0x1f7a), top: B:1843:0x1286 }] */
    /* JADX WARN: Removed duplicated region for block: B:1103:0x16d7  */
    /* JADX WARN: Removed duplicated region for block: B:1116:0x1716  */
    /* JADX WARN: Removed duplicated region for block: B:1253:0x1a0c  */
    /* JADX WARN: Removed duplicated region for block: B:1291:0x1aba A[Catch: Exception -> 0x188e, TRY_LEAVE, TryCatch #11 {Exception -> 0x188e, blocks: (B:1223:0x193e, B:1225:0x1942, B:1227:0x194a, B:1229:0x1959, B:1231:0x1961, B:1233:0x196c, B:1235:0x1978, B:1237:0x197e, B:1238:0x1990, B:1240:0x19c6, B:1242:0x19d5, B:1244:0x19db, B:1245:0x19e3, B:1291:0x1aba, B:1246:0x19ec, B:1248:0x19f0, B:1250:0x19f9, B:1195:0x1885, B:1199:0x1896, B:1201:0x189a, B:1202:0x18a3, B:1204:0x18ad, B:1205:0x18b5, B:1208:0x18d3, B:1210:0x18f0, B:1215:0x1913, B:1216:0x191b, B:1218:0x191f, B:1219:0x1928, B:1221:0x1930, B:1222:0x1938, B:1211:0x18fd, B:1213:0x1903, B:1256:0x1a29, B:1258:0x1a2e, B:1266:0x1a5a, B:1269:0x1a6c, B:1271:0x1a72, B:1273:0x1a7d, B:1275:0x1a87, B:1277:0x1a8b, B:1280:0x1a92, B:1284:0x1aa3, B:1287:0x1ab1, B:1262:0x1a43), top: B:1785:0x181f }] */
    /* JADX WARN: Removed duplicated region for block: B:1293:0x1abf  */
    /* JADX WARN: Removed duplicated region for block: B:1570:0x20f1  */
    /* JADX WARN: Removed duplicated region for block: B:1571:0x20f3  */
    /* JADX WARN: Removed duplicated region for block: B:1590:0x212d A[Catch: Exception -> 0x2176, TRY_ENTER, TRY_LEAVE, TryCatch #5 {Exception -> 0x2176, blocks: (B:1590:0x212d, B:1595:0x213b, B:1594:0x2134, B:1547:0x2036, B:1553:0x206f, B:1575:0x20f8, B:1583:0x210f, B:1552:0x206b), top: B:1774:0x2036 }] */
    /* JADX WARN: Removed duplicated region for block: B:1609:0x217a  */
    /* JADX WARN: Removed duplicated region for block: B:1611:0x217e A[Catch: Exception -> 0x2172, TryCatch #6 {Exception -> 0x2172, blocks: (B:1597:0x2144, B:1604:0x2167, B:1611:0x217e, B:1613:0x2184, B:1615:0x218e, B:1630:0x21d8, B:1636:0x21fa, B:1638:0x21fe, B:1641:0x2205, B:1643:0x2213, B:1645:0x2219, B:1634:0x21ea), top: B:1776:0x105e }] */
    /* JADX WARN: Removed duplicated region for block: B:1623:0x21a0  */
    /* JADX WARN: Removed duplicated region for block: B:1713:0x2354 A[Catch: Exception -> 0x222f, TryCatch #23 {Exception -> 0x222f, blocks: (B:1648:0x2226, B:1652:0x2235, B:1654:0x2239, B:1655:0x2242, B:1657:0x224a, B:1658:0x2252, B:1662:0x225b, B:1664:0x2271, B:1666:0x2277, B:1668:0x2281, B:1671:0x228e, B:1675:0x22a0, B:1677:0x22ae, B:1681:0x22cf, B:1683:0x22d3, B:1685:0x22de, B:1687:0x22e2, B:1688:0x22e5, B:1690:0x22e9, B:1692:0x22f7, B:1694:0x22fc, B:1696:0x2302, B:1698:0x230d, B:1699:0x2315, B:1701:0x231d, B:1702:0x2325, B:1706:0x232e, B:1708:0x233b, B:1710:0x2341, B:1712:0x234b, B:1678:0x22bb, B:1680:0x22c1, B:1713:0x2354, B:1715:0x2365, B:1717:0x236b, B:1718:0x2373, B:1720:0x2377, B:1722:0x237f, B:1725:0x238d, B:1727:0x2393, B:1728:0x23a1, B:1730:0x23af, B:1732:0x23b3, B:1734:0x23cc, B:1736:0x23e3, B:1738:0x23e9, B:1740:0x23f3, B:1733:0x23c5), top: B:1805:0x219e }] */
    /* JADX WARN: Removed duplicated region for block: B:1759:0x2436  */
    /* JADX WARN: Removed duplicated region for block: B:1760:0x2438  */
    /* JADX WARN: Removed duplicated region for block: B:1763:0x243e  */
    /* JADX WARN: Removed duplicated region for block: B:1793:0x0efe A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1831:0x1821 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1873:? A[RETURN, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:240:0x05de A[Catch: Exception -> 0x04c4, TryCatch #46 {Exception -> 0x04c4, blocks: (B:193:0x049a, B:206:0x04e1, B:208:0x04e5, B:216:0x053c, B:218:0x0555, B:221:0x0562, B:224:0x0578, B:226:0x057c, B:231:0x0588, B:233:0x058e, B:235:0x059e, B:240:0x05de, B:241:0x05e3, B:243:0x05e9, B:238:0x05b5), top: B:1844:0x0488 }] */
    /* JADX WARN: Removed duplicated region for block: B:241:0x05e3 A[Catch: Exception -> 0x04c4, TryCatch #46 {Exception -> 0x04c4, blocks: (B:193:0x049a, B:206:0x04e1, B:208:0x04e5, B:216:0x053c, B:218:0x0555, B:221:0x0562, B:224:0x0578, B:226:0x057c, B:231:0x0588, B:233:0x058e, B:235:0x059e, B:240:0x05de, B:241:0x05e3, B:243:0x05e9, B:238:0x05b5), top: B:1844:0x0488 }] */
    /* JADX WARN: Removed duplicated region for block: B:283:0x06d4 A[Catch: Exception -> 0x01d1, TryCatch #41 {Exception -> 0x01d1, blocks: (B:53:0x01c6, B:55:0x01cc, B:59:0x01da, B:62:0x01e2, B:65:0x01ee, B:67:0x01f4, B:129:0x0303, B:132:0x030b, B:68:0x0201, B:70:0x0205, B:73:0x0211, B:75:0x0218, B:78:0x0226, B:87:0x0243, B:92:0x024f, B:106:0x029d, B:112:0x02b8, B:114:0x02c7, B:118:0x02dc, B:123:0x02f3, B:126:0x02fc, B:397:0x08f6, B:399:0x08fc, B:402:0x090b, B:409:0x0918, B:412:0x092b, B:417:0x094d, B:421:0x0955, B:424:0x0967, B:406:0x0912, B:273:0x067e, B:275:0x069f, B:277:0x06b2, B:281:0x06ce, B:283:0x06d4, B:284:0x06d8, B:286:0x06dc, B:288:0x06e2, B:280:0x06ca, B:302:0x0720, B:304:0x0729, B:306:0x0735, B:314:0x075d, B:317:0x0769, B:335:0x0797, B:337:0x079d, B:338:0x07a2, B:340:0x07aa, B:342:0x07ae, B:344:0x07b4, B:346:0x07bb, B:348:0x07c1, B:356:0x07e1, B:329:0x0789, B:325:0x0780, B:394:0x08bf), top: B:1766:0x01be }] */
    /* JADX WARN: Removed duplicated region for block: B:286:0x06dc A[Catch: Exception -> 0x01d1, TryCatch #41 {Exception -> 0x01d1, blocks: (B:53:0x01c6, B:55:0x01cc, B:59:0x01da, B:62:0x01e2, B:65:0x01ee, B:67:0x01f4, B:129:0x0303, B:132:0x030b, B:68:0x0201, B:70:0x0205, B:73:0x0211, B:75:0x0218, B:78:0x0226, B:87:0x0243, B:92:0x024f, B:106:0x029d, B:112:0x02b8, B:114:0x02c7, B:118:0x02dc, B:123:0x02f3, B:126:0x02fc, B:397:0x08f6, B:399:0x08fc, B:402:0x090b, B:409:0x0918, B:412:0x092b, B:417:0x094d, B:421:0x0955, B:424:0x0967, B:406:0x0912, B:273:0x067e, B:275:0x069f, B:277:0x06b2, B:281:0x06ce, B:283:0x06d4, B:284:0x06d8, B:286:0x06dc, B:288:0x06e2, B:280:0x06ca, B:302:0x0720, B:304:0x0729, B:306:0x0735, B:314:0x075d, B:317:0x0769, B:335:0x0797, B:337:0x079d, B:338:0x07a2, B:340:0x07aa, B:342:0x07ae, B:344:0x07b4, B:346:0x07bb, B:348:0x07c1, B:356:0x07e1, B:329:0x0789, B:325:0x0780, B:394:0x08bf), top: B:1766:0x01be }] */
    /* JADX WARN: Removed duplicated region for block: B:442:0x09ea A[Catch: Exception -> 0x09cd, TRY_ENTER, TryCatch #38 {Exception -> 0x09cd, blocks: (B:431:0x09a6, B:442:0x09ea, B:459:0x0a32, B:461:0x0a3e, B:464:0x0a48, B:466:0x0a54, B:469:0x0a6d, B:468:0x0a59, B:475:0x0a7c, B:481:0x0a8d, B:448:0x09ff, B:454:0x0a1e), top: B:1833:0x09a6 }] */
    /* JADX WARN: Removed duplicated region for block: B:454:0x0a1e A[Catch: Exception -> 0x09cd, TRY_ENTER, TRY_LEAVE, TryCatch #38 {Exception -> 0x09cd, blocks: (B:431:0x09a6, B:442:0x09ea, B:459:0x0a32, B:461:0x0a3e, B:464:0x0a48, B:466:0x0a54, B:469:0x0a6d, B:468:0x0a59, B:475:0x0a7c, B:481:0x0a8d, B:448:0x09ff, B:454:0x0a1e), top: B:1833:0x09a6 }] */
    /* JADX WARN: Removed duplicated region for block: B:459:0x0a32 A[Catch: Exception -> 0x09cd, TRY_ENTER, TryCatch #38 {Exception -> 0x09cd, blocks: (B:431:0x09a6, B:442:0x09ea, B:459:0x0a32, B:461:0x0a3e, B:464:0x0a48, B:466:0x0a54, B:469:0x0a6d, B:468:0x0a59, B:475:0x0a7c, B:481:0x0a8d, B:448:0x09ff, B:454:0x0a1e), top: B:1833:0x09a6 }] */
    /* JADX WARN: Removed duplicated region for block: B:461:0x0a3e A[Catch: Exception -> 0x09cd, TryCatch #38 {Exception -> 0x09cd, blocks: (B:431:0x09a6, B:442:0x09ea, B:459:0x0a32, B:461:0x0a3e, B:464:0x0a48, B:466:0x0a54, B:469:0x0a6d, B:468:0x0a59, B:475:0x0a7c, B:481:0x0a8d, B:448:0x09ff, B:454:0x0a1e), top: B:1833:0x09a6 }] */
    /* JADX WARN: Removed duplicated region for block: B:471:0x0a74  */
    /* JADX WARN: Removed duplicated region for block: B:474:0x0a7a  */
    /* JADX WARN: Removed duplicated region for block: B:479:0x0a89  */
    /* JADX WARN: Removed duplicated region for block: B:481:0x0a8d A[Catch: Exception -> 0x09cd, TRY_LEAVE, TryCatch #38 {Exception -> 0x09cd, blocks: (B:431:0x09a6, B:442:0x09ea, B:459:0x0a32, B:461:0x0a3e, B:464:0x0a48, B:466:0x0a54, B:469:0x0a6d, B:468:0x0a59, B:475:0x0a7c, B:481:0x0a8d, B:448:0x09ff, B:454:0x0a1e), top: B:1833:0x09a6 }] */
    /* JADX WARN: Removed duplicated region for block: B:484:0x0a95  */
    /* JADX WARN: Removed duplicated region for block: B:494:0x0ab6  */
    /* JADX WARN: Removed duplicated region for block: B:511:0x0af0  */
    /* JADX WARN: Removed duplicated region for block: B:515:0x0b05 A[Catch: Exception -> 0x0adf, TRY_ENTER, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:519:0x0b37  */
    /* JADX WARN: Removed duplicated region for block: B:545:0x0bb3 A[Catch: Exception -> 0x0adf, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:547:0x0bc1 A[Catch: Exception -> 0x0adf, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:556:0x0c11 A[Catch: Exception -> 0x0adf, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:557:0x0c2f  */
    /* JADX WARN: Removed duplicated region for block: B:559:0x0c33 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:562:0x0c47 A[Catch: Exception -> 0x0adf, TRY_LEAVE, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:565:0x0c53 A[Catch: Exception -> 0x0adf, TRY_ENTER, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:575:0x0c82 A[Catch: Exception -> 0x2406, TRY_ENTER, TRY_LEAVE, TryCatch #21 {Exception -> 0x2406, blocks: (B:513:0x0af7, B:563:0x0c4d, B:679:0x0e53, B:685:0x0e62, B:689:0x0e6b, B:714:0x0ed9, B:684:0x0e60, B:575:0x0c82, B:591:0x0cb1, B:586:0x0c9f, B:580:0x0c94, B:512:0x0af5), top: B:1803:0x0af5 }] */
    /* JADX WARN: Removed duplicated region for block: B:620:0x0d2e A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:648:0x0d9e A[Catch: Exception -> 0x0adf, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:653:0x0dcb A[Catch: Exception -> 0x0adf, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:660:0x0dec A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:663:0x0dfa A[Catch: Exception -> 0x0adf, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:664:0x0e02  */
    /* JADX WARN: Removed duplicated region for block: B:666:0x0e05 A[Catch: Exception -> 0x0adf, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:681:0x0e59 A[Catch: Exception -> 0x0adf, TRY_ENTER, TRY_LEAVE, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:687:0x0e66 A[Catch: Exception -> 0x0adf, TRY_ENTER, TRY_LEAVE, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:692:0x0e71 A[Catch: Exception -> 0x0adf, TRY_ENTER, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:701:0x0e9d  */
    /* JADX WARN: Removed duplicated region for block: B:704:0x0ea7 A[Catch: Exception -> 0x0adf, TryCatch #7 {Exception -> 0x0adf, blocks: (B:500:0x0acb, B:502:0x0ad7, B:504:0x0adb, B:507:0x0ae8, B:515:0x0b05, B:556:0x0c11, B:560:0x0c35, B:562:0x0c47, B:565:0x0c53, B:567:0x0c63, B:569:0x0c71, B:571:0x0c77, B:573:0x0c7b, B:621:0x0d30, B:623:0x0d34, B:625:0x0d3e, B:627:0x0d4c, B:630:0x0d5b, B:632:0x0d61, B:638:0x0d7c, B:640:0x0d82, B:642:0x0d88, B:644:0x0d90, B:646:0x0d94, B:648:0x0d9e, B:651:0x0dae, B:653:0x0dcb, B:655:0x0dd5, B:681:0x0e59, B:687:0x0e66, B:692:0x0e71, B:694:0x0e7b, B:696:0x0e8d, B:704:0x0ea7, B:708:0x0ecb, B:661:0x0dee, B:663:0x0dfa, B:666:0x0e05, B:668:0x0e09, B:670:0x0e0d, B:671:0x0e17, B:673:0x0e1d, B:674:0x0e37, B:676:0x0e3d, B:629:0x0d56, B:578:0x0c8f, B:583:0x0c9a, B:593:0x0cb5, B:595:0x0cbb, B:598:0x0cc2, B:600:0x0cce, B:602:0x0cde, B:605:0x0ce6, B:603:0x0ce2, B:606:0x0cf1, B:608:0x0cf7, B:611:0x0cfe, B:613:0x0d0a, B:615:0x0d1a, B:618:0x0d22, B:616:0x0d1e, B:588:0x0ca5, B:590:0x0ca9, B:524:0x0b47, B:528:0x0b52, B:530:0x0b5b, B:532:0x0b67, B:535:0x0b7a, B:538:0x0b8a, B:540:0x0b91, B:542:0x0ba6, B:547:0x0bc1, B:549:0x0bd3, B:551:0x0bf0, B:553:0x0bf6, B:543:0x0baf, B:545:0x0bb3, B:534:0x0b73), top: B:1777:0x0acb }] */
    /* JADX WARN: Removed duplicated region for block: B:705:0x0ec5  */
    /* JADX WARN: Removed duplicated region for block: B:707:0x0ec9 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:718:0x0ef3  */
    /* JADX WARN: Removed duplicated region for block: B:719:0x0ef5  */
    /* JADX WARN: Removed duplicated region for block: B:736:0x0f20 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:739:0x0f27  */
    /* JADX WARN: Removed duplicated region for block: B:743:0x0f30  */
    /* JADX WARN: Removed duplicated region for block: B:747:0x0f38 A[Catch: Exception -> 0x0f14, TryCatch #15 {Exception -> 0x0f14, blocks: (B:722:0x0efe, B:727:0x0f08, B:729:0x0f10, B:747:0x0f38, B:754:0x0f59, B:756:0x0f7e, B:752:0x0f50, B:764:0x0fb8, B:766:0x0fc2, B:770:0x0fd1, B:775:0x0fe3, B:740:0x0f29, B:742:0x0f2d), top: B:1793:0x0efe }] */
    /* JADX WARN: Removed duplicated region for block: B:756:0x0f7e A[Catch: Exception -> 0x0f14, TRY_LEAVE, TryCatch #15 {Exception -> 0x0f14, blocks: (B:722:0x0efe, B:727:0x0f08, B:729:0x0f10, B:747:0x0f38, B:754:0x0f59, B:756:0x0f7e, B:752:0x0f50, B:764:0x0fb8, B:766:0x0fc2, B:770:0x0fd1, B:775:0x0fe3, B:740:0x0f29, B:742:0x0f2d), top: B:1793:0x0efe }] */
    /* JADX WARN: Removed duplicated region for block: B:758:0x0f8f  */
    /* JADX WARN: Removed duplicated region for block: B:760:0x0f95  */
    /* JADX WARN: Removed duplicated region for block: B:778:0x0feb A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:785:0x1060  */
    /* JADX WARN: Removed duplicated region for block: B:835:0x1149  */
    /* JADX WARN: Removed duplicated region for block: B:840:0x115c  */
    /* JADX WARN: Removed duplicated region for block: B:843:0x116f A[Catch: Exception -> 0x1154, TRY_ENTER, TRY_LEAVE, TryCatch #39 {Exception -> 0x1154, blocks: (B:836:0x114b, B:843:0x116f, B:847:0x1183, B:851:0x1191), top: B:1835:0x114b }] */
    /* JADX WARN: Removed duplicated region for block: B:845:0x117d A[Catch: Exception -> 0x11bc, TRY_ENTER, TRY_LEAVE, TryCatch #43 {Exception -> 0x11bc, blocks: (B:841:0x115e, B:845:0x117d, B:849:0x118d), top: B:1840:0x115e }] */
    /* JADX WARN: Removed duplicated region for block: B:853:0x119e  */
    /* JADX WARN: Removed duplicated region for block: B:854:0x11a0  */
    /* JADX WARN: Removed duplicated region for block: B:936:0x136e A[Catch: Exception -> 0x11ee, TRY_LEAVE, TryCatch #1 {Exception -> 0x11ee, blocks: (B:897:0x128a, B:899:0x1290, B:909:0x12dc, B:900:0x12aa, B:902:0x12ae, B:904:0x12c3, B:905:0x12c9, B:907:0x12cd, B:908:0x12d7, B:922:0x1341, B:925:0x1349, B:927:0x1351, B:934:0x1367, B:936:0x136e, B:867:0x11d5, B:869:0x11e4, B:872:0x11f1, B:874:0x11f5, B:875:0x1201, B:877:0x120c, B:881:0x122d, B:883:0x1233, B:884:0x123b, B:886:0x1259, B:888:0x1261, B:890:0x126b, B:894:0x1277, B:878:0x121a, B:880:0x1220), top: B:1767:0x1083 }] */
    /* JADX WARN: Removed duplicated region for block: B:938:0x137e  */
    /* JADX WARN: Removed duplicated region for block: B:958:0x13ea  */
    /* JADX WARN: Removed duplicated region for block: B:959:0x13ed A[Catch: Exception -> 0x13b9, TryCatch #45 {Exception -> 0x13b9, blocks: (B:946:0x13a5, B:952:0x13c5, B:956:0x13e2, B:968:0x1428, B:972:0x143f, B:974:0x1446, B:976:0x1452, B:978:0x145f, B:979:0x1463, B:959:0x13ed, B:961:0x1407, B:963:0x140e, B:965:0x1414, B:966:0x1422, B:984:0x1485, B:986:0x14a0, B:988:0x14b3, B:989:0x14c0, B:999:0x14dd, B:1010:0x1508, B:1021:0x1550, B:1025:0x1567, B:1013:0x1515, B:1015:0x1531, B:1017:0x1538, B:1019:0x153e, B:1020:0x154c, B:1028:0x1579, B:1030:0x1586, B:1032:0x158e, B:1035:0x159c, B:1037:0x159f, B:1040:0x15aa, B:1045:0x15ba, B:1046:0x15c0, B:1048:0x15c4, B:1050:0x15cc, B:1053:0x15e2, B:1056:0x15f1, B:1060:0x161c, B:1091:0x168c, B:1093:0x1694, B:1104:0x16d9, B:1108:0x16ee, B:1110:0x16f3, B:1112:0x16ff, B:1114:0x170c, B:1094:0x169b, B:1096:0x16b7, B:1098:0x16be, B:1100:0x16c4, B:1101:0x16d2, B:1064:0x162a, B:1592:0x2131, B:1549:0x2063, B:1558:0x2091, B:1561:0x20c4, B:1563:0x20d6, B:1565:0x20e0, B:1568:0x20ed, B:1572:0x20f4, B:1578:0x2102, B:1580:0x2108, B:1587:0x2126, B:1567:0x20e8, B:1437:0x1d26, B:1438:0x1d34, B:1440:0x1d3c, B:1442:0x1d48, B:1443:0x1d58, B:1444:0x1d5b, B:1449:0x1d70, B:1452:0x1da6, B:1454:0x1dbc, B:1456:0x1dc4, B:1459:0x1dd1, B:1463:0x1dd8, B:1466:0x1de3, B:1468:0x1deb, B:1458:0x1dcc, B:1428:0x1d03, B:1431:0x1d0d, B:1433:0x1d1a, B:1435:0x1d1e, B:1436:0x1d21, B:1475:0x1e0c, B:1485:0x1e51, B:1489:0x1e69, B:1491:0x1e80, B:1493:0x1ea3, B:1492:0x1e95, B:1494:0x1eb7, B:1496:0x1ebf, B:1498:0x1ec5, B:1500:0x1ecc, B:1502:0x1ef7, B:1505:0x1f15, B:1507:0x1f1a, B:1508:0x1f23, B:1503:0x1efe, B:1509:0x1f3a, B:1511:0x1f4f, B:1513:0x1f53, B:1516:0x1f88, B:1521:0x1f9d, B:1523:0x1fcd, B:1525:0x1fe1, B:1527:0x1feb, B:1530:0x1ff6, B:1534:0x1ffd, B:1537:0x2005, B:1539:0x200b, B:1541:0x2015, B:1544:0x201d, B:1529:0x1ff3, B:1514:0x1f65, B:1515:0x1f7a), top: B:1843:0x1286 }] */
    /* JADX WARN: Removed duplicated region for block: B:968:0x1428 A[Catch: Exception -> 0x13b9, TryCatch #45 {Exception -> 0x13b9, blocks: (B:946:0x13a5, B:952:0x13c5, B:956:0x13e2, B:968:0x1428, B:972:0x143f, B:974:0x1446, B:976:0x1452, B:978:0x145f, B:979:0x1463, B:959:0x13ed, B:961:0x1407, B:963:0x140e, B:965:0x1414, B:966:0x1422, B:984:0x1485, B:986:0x14a0, B:988:0x14b3, B:989:0x14c0, B:999:0x14dd, B:1010:0x1508, B:1021:0x1550, B:1025:0x1567, B:1013:0x1515, B:1015:0x1531, B:1017:0x1538, B:1019:0x153e, B:1020:0x154c, B:1028:0x1579, B:1030:0x1586, B:1032:0x158e, B:1035:0x159c, B:1037:0x159f, B:1040:0x15aa, B:1045:0x15ba, B:1046:0x15c0, B:1048:0x15c4, B:1050:0x15cc, B:1053:0x15e2, B:1056:0x15f1, B:1060:0x161c, B:1091:0x168c, B:1093:0x1694, B:1104:0x16d9, B:1108:0x16ee, B:1110:0x16f3, B:1112:0x16ff, B:1114:0x170c, B:1094:0x169b, B:1096:0x16b7, B:1098:0x16be, B:1100:0x16c4, B:1101:0x16d2, B:1064:0x162a, B:1592:0x2131, B:1549:0x2063, B:1558:0x2091, B:1561:0x20c4, B:1563:0x20d6, B:1565:0x20e0, B:1568:0x20ed, B:1572:0x20f4, B:1578:0x2102, B:1580:0x2108, B:1587:0x2126, B:1567:0x20e8, B:1437:0x1d26, B:1438:0x1d34, B:1440:0x1d3c, B:1442:0x1d48, B:1443:0x1d58, B:1444:0x1d5b, B:1449:0x1d70, B:1452:0x1da6, B:1454:0x1dbc, B:1456:0x1dc4, B:1459:0x1dd1, B:1463:0x1dd8, B:1466:0x1de3, B:1468:0x1deb, B:1458:0x1dcc, B:1428:0x1d03, B:1431:0x1d0d, B:1433:0x1d1a, B:1435:0x1d1e, B:1436:0x1d21, B:1475:0x1e0c, B:1485:0x1e51, B:1489:0x1e69, B:1491:0x1e80, B:1493:0x1ea3, B:1492:0x1e95, B:1494:0x1eb7, B:1496:0x1ebf, B:1498:0x1ec5, B:1500:0x1ecc, B:1502:0x1ef7, B:1505:0x1f15, B:1507:0x1f1a, B:1508:0x1f23, B:1503:0x1efe, B:1509:0x1f3a, B:1511:0x1f4f, B:1513:0x1f53, B:1516:0x1f88, B:1521:0x1f9d, B:1523:0x1fcd, B:1525:0x1fe1, B:1527:0x1feb, B:1530:0x1ff6, B:1534:0x1ffd, B:1537:0x2005, B:1539:0x200b, B:1541:0x2015, B:1544:0x201d, B:1529:0x1ff3, B:1514:0x1f65, B:1515:0x1f7a), top: B:1843:0x1286 }] */
    /* JADX WARN: Removed duplicated region for block: B:973:0x1442  */
    /* JADX WARN: Removed duplicated region for block: B:976:0x1452 A[Catch: Exception -> 0x13b9, TryCatch #45 {Exception -> 0x13b9, blocks: (B:946:0x13a5, B:952:0x13c5, B:956:0x13e2, B:968:0x1428, B:972:0x143f, B:974:0x1446, B:976:0x1452, B:978:0x145f, B:979:0x1463, B:959:0x13ed, B:961:0x1407, B:963:0x140e, B:965:0x1414, B:966:0x1422, B:984:0x1485, B:986:0x14a0, B:988:0x14b3, B:989:0x14c0, B:999:0x14dd, B:1010:0x1508, B:1021:0x1550, B:1025:0x1567, B:1013:0x1515, B:1015:0x1531, B:1017:0x1538, B:1019:0x153e, B:1020:0x154c, B:1028:0x1579, B:1030:0x1586, B:1032:0x158e, B:1035:0x159c, B:1037:0x159f, B:1040:0x15aa, B:1045:0x15ba, B:1046:0x15c0, B:1048:0x15c4, B:1050:0x15cc, B:1053:0x15e2, B:1056:0x15f1, B:1060:0x161c, B:1091:0x168c, B:1093:0x1694, B:1104:0x16d9, B:1108:0x16ee, B:1110:0x16f3, B:1112:0x16ff, B:1114:0x170c, B:1094:0x169b, B:1096:0x16b7, B:1098:0x16be, B:1100:0x16c4, B:1101:0x16d2, B:1064:0x162a, B:1592:0x2131, B:1549:0x2063, B:1558:0x2091, B:1561:0x20c4, B:1563:0x20d6, B:1565:0x20e0, B:1568:0x20ed, B:1572:0x20f4, B:1578:0x2102, B:1580:0x2108, B:1587:0x2126, B:1567:0x20e8, B:1437:0x1d26, B:1438:0x1d34, B:1440:0x1d3c, B:1442:0x1d48, B:1443:0x1d58, B:1444:0x1d5b, B:1449:0x1d70, B:1452:0x1da6, B:1454:0x1dbc, B:1456:0x1dc4, B:1459:0x1dd1, B:1463:0x1dd8, B:1466:0x1de3, B:1468:0x1deb, B:1458:0x1dcc, B:1428:0x1d03, B:1431:0x1d0d, B:1433:0x1d1a, B:1435:0x1d1e, B:1436:0x1d21, B:1475:0x1e0c, B:1485:0x1e51, B:1489:0x1e69, B:1491:0x1e80, B:1493:0x1ea3, B:1492:0x1e95, B:1494:0x1eb7, B:1496:0x1ebf, B:1498:0x1ec5, B:1500:0x1ecc, B:1502:0x1ef7, B:1505:0x1f15, B:1507:0x1f1a, B:1508:0x1f23, B:1503:0x1efe, B:1509:0x1f3a, B:1511:0x1f4f, B:1513:0x1f53, B:1516:0x1f88, B:1521:0x1f9d, B:1523:0x1fcd, B:1525:0x1fe1, B:1527:0x1feb, B:1530:0x1ff6, B:1534:0x1ffd, B:1537:0x2005, B:1539:0x200b, B:1541:0x2015, B:1544:0x201d, B:1529:0x1ff3, B:1514:0x1f65, B:1515:0x1f7a), top: B:1843:0x1286 }] */
    /* JADX WARN: Type inference failed for: r10v73, types: [int] */
    /* JADX WARN: Type inference failed for: r14v107 */
    /* JADX WARN: Type inference failed for: r14v111 */
    /* JADX WARN: Type inference failed for: r14v159 */
    /* JADX WARN: Type inference failed for: r14v162 */
    /* JADX WARN: Type inference failed for: r14v163 */
    /* JADX WARN: Type inference failed for: r14v164 */
    /* JADX WARN: Type inference failed for: r14v174 */
    /* JADX WARN: Type inference failed for: r14v175, types: [int] */
    /* JADX WARN: Type inference failed for: r14v226 */
    /* JADX WARN: Type inference failed for: r14v227 */
    /* JADX WARN: Type inference failed for: r14v66 */
    /* JADX WARN: Type inference failed for: r18v23 */
    /* JADX WARN: Type inference failed for: r1v179, types: [org.telegram.tgnet.TLRPC$TL_inputMediaStory] */
    /* JADX WARN: Type inference failed for: r1v180, types: [org.telegram.tgnet.TLRPC$TL_inputMediaDice] */
    /* JADX WARN: Type inference failed for: r1v181, types: [org.telegram.tgnet.TLRPC$TL_inputMediaPoll, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r1v198, types: [org.telegram.tgnet.TLRPC$TL_messages_sendMedia, org.telegram.tgnet.TLObject] */
    /* JADX WARN: Type inference failed for: r1v210, types: [org.telegram.tgnet.TLRPC$TL_messages_sendMedia, org.telegram.tgnet.TLObject] */
    /* JADX WARN: Type inference failed for: r2v380, types: [int] */
    /* JADX WARN: Type inference failed for: r2v382 */
    /* JADX WARN: Type inference failed for: r2v383 */
    /* JADX WARN: Type inference failed for: r2v391 */
    /* JADX WARN: Type inference failed for: r2v393 */
    /* JADX WARN: Type inference failed for: r30v58 */
    /* JADX WARN: Type inference failed for: r42v4, types: [int] */
    /* JADX WARN: Type inference failed for: r4v121, types: [org.telegram.tgnet.TLRPC$TL_inputMediaDocument, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r4v63, types: [org.telegram.tgnet.TLRPC$TL_inputMediaPhoto, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r4v76, types: [org.telegram.tgnet.TLRPC$TL_inputMediaDocument, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r4v93, types: [org.telegram.tgnet.TLRPC$TL_inputMediaDocument, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r6v10 */
    /* JADX WARN: Type inference failed for: r6v11 */
    /* JADX WARN: Type inference failed for: r6v13, types: [int] */
    /* JADX WARN: Type inference failed for: r6v73 */
    /* JADX WARN: Type inference failed for: r8v241 */
    /* JADX WARN: Type inference failed for: r8v25, types: [org.telegram.tgnet.TLRPC$MessageMedia] */
    /* JADX WARN: Type inference failed for: r8v26 */
    /* JADX WARN: Type inference failed for: r8v27, types: [boolean] */
    /* JADX WARN: Type inference failed for: r8v42 */
    /* JADX WARN: Type inference failed for: r8v8 */
    /* JADX WARN: Type inference failed for: r8v9 */
    /* JADX WARN: Type inference failed for: r9v155, types: [android.content.SharedPreferences] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void sendMessage(SendMessageParams sendMessageParams) {
        ChatActivity.ReplyQuote replyQuote;
        String str;
        MessageObject messageObject;
        long j;
        SendMessagesHelper sendMessagesHelper;
        TLRPC$InputPeer tLRPC$InputPeer;
        long j2;
        String str2;
        TLRPC$Peer tLRPC$Peer;
        TLRPC$EncryptedChat tLRPC$EncryptedChat;
        long j3;
        boolean z;
        long j4;
        TLRPC$Message tLRPC$Message;
        SendMessagesHelper sendMessagesHelper2;
        int i;
        Exception exc;
        int i2;
        TLRPC$Message tLRPC$Message2;
        int i3;
        MessageObject messageObject2;
        SendMessagesHelper sendMessagesHelper3;
        TLRPC$Message tLRPC$Message3;
        int i4;
        int i5;
        Object obj;
        MessageObject messageObject3;
        Object obj2;
        TLRPC$TL_message tLRPC$TL_message;
        Object obj3;
        TLRPC$Message tLRPC$Message4;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll;
        String str3;
        TLRPC$WebPage tLRPC$WebPage;
        boolean z2;
        Object obj4;
        String str4;
        String str5;
        TLRPC$Peer tLRPC$Peer2;
        TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage;
        int i6;
        ArrayList<TLRPC$MessageEntity> arrayList;
        int i7;
        String str6;
        TLRPC$TL_document tLRPC$TL_document;
        TLRPC$User tLRPC$User;
        String str7;
        TL_stories$StoryItem tL_stories$StoryItem;
        TLRPC$Message tLRPC$Message5;
        DelayedMessage delayedMessage;
        boolean z3;
        char c;
        TLRPC$Message tLRPC$TL_message2;
        TLRPC$TL_document tLRPC$TL_document2;
        boolean z4;
        char c2;
        String str8;
        String stickerSetName;
        DelayedMessage delayedMessage2;
        String str9;
        String str10;
        ?? r8;
        TLRPC$TL_message_secret tLRPC$TL_message_secret;
        TLRPC$TL_message tLRPC$TL_message3;
        TLRPC$TL_message tLRPC$TL_message4;
        TLRPC$Message tLRPC$TL_message5;
        ArrayList<TLRPC$MessageEntity> arrayList2;
        int i8;
        char c3;
        String str11;
        String str12;
        ArrayList<TLRPC$MessageEntity> arrayList3;
        DelayedMessage delayedMessage3;
        TLRPC$InputPeer tLRPC$InputPeer2;
        TLRPC$Chat tLRPC$Chat;
        ArrayList<TLRPC$MessageEntity> arrayList4;
        long j5;
        boolean z5;
        String str13;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll2;
        TLRPC$TL_photo tLRPC$TL_photo;
        String str14;
        TLRPC$WebPage tLRPC$WebPage2;
        Object obj5;
        int i9;
        TLRPC$TL_document tLRPC$TL_document3;
        TLRPC$Message tLRPC$Message6;
        char c4;
        TLRPC$User tLRPC$User2;
        TLRPC$MessageMedia tLRPC$MessageMedia;
        boolean z6;
        TLRPC$Message tLRPC$TL_message6;
        TLRPC$WebPage tLRPC$WebPage3;
        TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage2;
        TLRPC$TL_photo tLRPC$TL_photo2;
        Object obj6;
        String str15;
        String str16;
        char c5;
        boolean z7;
        TLRPC$Message tLRPC$Message7;
        int i10;
        String str17;
        int i11;
        String str18;
        SendMessageParams sendMessageParams2;
        String str19;
        int i12;
        long j6;
        String str20;
        MessageObject messageObject4;
        int i13;
        MessageObject messageObject5;
        TLRPC$Message tLRPC$Message8;
        int i14;
        TL_stories$StoryItem tL_stories$StoryItem2;
        String str21;
        MessageObject messageObject6;
        MessageObject messageObject7;
        long j7;
        ChatActivity.ReplyQuote replyQuote2;
        TLRPC$InputPeer tLRPC$InputPeer3;
        int i15;
        TLRPC$MessageMedia tLRPC$MessageMedia2;
        int i16;
        int i17;
        int i18;
        TL_stories$StoryItem tL_stories$StoryItem3;
        long j8;
        boolean z8;
        long j9;
        boolean z9;
        long j10;
        long j11;
        MessageObject messageObject8;
        TLRPC$Message tLRPC$Message9;
        TLRPC$Message tLRPC$Message10;
        SendMessagesHelper sendMessagesHelper4;
        SendMessagesHelper sendMessagesHelper5;
        VideoEditedInfo videoEditedInfo;
        VideoEditedInfo videoEditedInfo2;
        String str22;
        VideoEditedInfo videoEditedInfo3;
        TL_stories$StoryItem tL_stories$StoryItem4;
        long j12;
        DelayedMessage delayedMessage4;
        SendMessagesHelper sendMessagesHelper6;
        String str23;
        TLRPC$InputPeer tLRPC$InputPeer4;
        String str24;
        SendMessagesHelper sendMessagesHelper7;
        TLRPC$Message tLRPC$Message11;
        TLRPC$Message tLRPC$Message12;
        SendMessagesHelper sendMessagesHelper8;
        long j13;
        int i19;
        char c6;
        String str25;
        SendMessagesHelper sendMessagesHelper9;
        SendMessagesHelper sendMessagesHelper10;
        String str26;
        ?? r6;
        TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage;
        DelayedMessage delayedMessage5;
        Exception e;
        TLRPC$Message tLRPC$Message13;
        long j14;
        String str27;
        String str28;
        Object obj7;
        TLRPC$TL_photo tLRPC$TL_photo3;
        char c7;
        HashMap<String, String> hashMap;
        long j15;
        Object obj8;
        ArrayList<TLRPC$PhotoSize> arrayList5;
        HashMap<String, String> hashMap2;
        DelayedMessage delayedMessage6;
        long j16;
        byte[] bArr;
        SendMessagesHelper sendMessagesHelper11;
        TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia;
        long j17;
        SendMessagesHelper sendMessagesHelper12;
        SendMessagesHelper sendMessagesHelper13;
        TL_stories$StoryItem tL_stories$StoryItem5;
        long j18;
        char c8;
        TLRPC$InputPeer tLRPC$InputPeer5;
        String str29;
        TLRPC$Message tLRPC$Message14;
        TLRPC$Message tLRPC$Message15;
        TLRPC$Message tLRPC$Message16;
        HashMap<String, String> hashMap3;
        Object obj9;
        TLRPC$TL_inputMediaPaidMedia tLRPC$TL_inputMediaPaidMedia;
        boolean z10;
        String str30;
        TLRPC$Message tLRPC$Message17;
        TLRPC$TL_inputMediaPaidMedia tLRPC$TL_inputMediaPaidMedia2;
        long j19;
        VideoEditedInfo videoEditedInfo4;
        TLRPC$Message tLRPC$Message18;
        VideoEditedInfo videoEditedInfo5;
        TLRPC$InputMedia tLRPC$InputMedia;
        Object obj10;
        String str31;
        TLRPC$InputMedia tLRPC$InputMedia2;
        TLRPC$Message tLRPC$Message19;
        String str32;
        TLRPC$InputMedia tLRPC$InputMedia3;
        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument;
        TLRPC$Message tLRPC$Message20;
        Object obj11;
        TLRPC$InputMedia tLRPC$InputMedia4;
        Object obj12;
        boolean z11;
        TLRPC$InputMedia tLRPC$InputMedia5;
        TLRPC$InputMedia tLRPC$InputMedia6;
        TLRPC$Message tLRPC$Message21;
        TLRPC$InputMedia tLRPC$InputMedia7;
        Object obj13;
        TLRPC$InputMedia tLRPC$InputMedia8;
        TLRPC$InputMedia tLRPC$InputMedia9;
        TLRPC$Message tLRPC$Message22;
        String str33;
        SendMessagesHelper sendMessagesHelper14;
        TLRPC$Message tLRPC$Message23;
        TLRPC$TL_inputMediaPaidMedia tLRPC$TL_inputMediaPaidMedia3;
        TLRPC$Message tLRPC$Message24;
        long j20;
        boolean z12;
        ArrayList<TLRPC$MessageEntity> arrayList6;
        TLRPC$Message tLRPC$Message25;
        TLRPC$Message tLRPC$Message26;
        TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia;
        TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia2;
        Object obj14;
        TLRPC$Message tLRPC$Message27;
        TLRPC$InputMedia tLRPC$InputMedia10;
        int i20;
        long j21;
        boolean z13;
        TLRPC$Peer tLRPC$Peer3;
        boolean z14;
        TLRPC$Peer tLRPC$Peer4;
        boolean z15;
        ChatActivity.ReplyQuote replyQuote3;
        TLRPC$MessageMedia tLRPC$MessageMedia3;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        TLRPC$Peer tLRPC$Peer5;
        String str34;
        int i21;
        String str35;
        SharedPreferences notificationsSettings;
        StringBuilder sb;
        Object obj15;
        String str36;
        char c9;
        TLRPC$TL_document tLRPC$TL_document4;
        MessageObject messageObject9;
        TLRPC$Message tLRPC$Message28 = "masks";
        String str37 = sendMessageParams.message;
        String str38 = sendMessageParams.caption;
        TLRPC$MessageMedia tLRPC$MessageMedia4 = sendMessageParams.location;
        TLRPC$TL_photo tLRPC$TL_photo4 = sendMessageParams.photo;
        VideoEditedInfo videoEditedInfo6 = sendMessageParams.videoEditedInfo;
        TLRPC$User tLRPC$User3 = sendMessageParams.user;
        Object obj16 = "bot_name";
        TLRPC$TL_document tLRPC$TL_document5 = sendMessageParams.document;
        TLRPC$TL_game tLRPC$TL_game = sendMessageParams.game;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll3 = sendMessageParams.poll;
        TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice = sendMessageParams.invoice;
        TLRPC$TL_document tLRPC$TL_document6 = tLRPC$TL_document5;
        long j22 = sendMessageParams.peer;
        String str39 = sendMessageParams.path;
        MessageObject messageObject10 = sendMessageParams.replyToMsg;
        MessageObject messageObject11 = sendMessageParams.replyToTopMsg;
        TLRPC$WebPage tLRPC$WebPage4 = sendMessageParams.webPage;
        TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage3 = sendMessageParams.mediaWebPage;
        TLRPC$TL_photo tLRPC$TL_photo5 = tLRPC$TL_photo4;
        boolean z16 = sendMessageParams.searchLinks;
        MessageObject messageObject12 = sendMessageParams.retryMessageObject;
        TLRPC$MessageMedia tLRPC$MessageMedia5 = tLRPC$MessageMedia4;
        ArrayList<TLRPC$MessageEntity> arrayList7 = sendMessageParams.entities;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll4 = tLRPC$TL_messageMediaPoll3;
        TLRPC$ReplyMarkup tLRPC$ReplyMarkup = sendMessageParams.replyMarkup;
        HashMap<String, String> hashMap4 = sendMessageParams.params;
        boolean z17 = sendMessageParams.notify;
        int i22 = sendMessageParams.scheduleDate;
        int i23 = sendMessageParams.ttl;
        Object obj17 = sendMessageParams.parentObject;
        MessageObject.SendAnimationData sendAnimationData = sendMessageParams.sendAnimationData;
        boolean z18 = sendMessageParams.updateStickersOrder;
        boolean z19 = sendMessageParams.hasMediaSpoilers;
        TL_stories$StoryItem tL_stories$StoryItem6 = sendMessageParams.replyToStoryItem;
        TL_stories$StoryItem tL_stories$StoryItem7 = sendMessageParams.sendingStory;
        ChatActivity.ReplyQuote replyQuote4 = sendMessageParams.replyQuote;
        boolean z20 = sendMessageParams.invert_media;
        String str40 = sendMessageParams.quick_reply_shortcut;
        int i24 = sendMessageParams.quick_reply_shortcut_id;
        long j23 = sendMessageParams.stars;
        if ((tLRPC$User3 != null && tLRPC$User3.phone == null) || j22 == 0) {
            return;
        }
        if (str37 == null && str38 == null) {
            str38 = "";
        }
        if (replyQuote4 != null && (messageObject9 = replyQuote4.message) != null && messageObject10 != null) {
            messageObject10 = messageObject9;
        }
        String str41 = (hashMap4 == null || !hashMap4.containsKey("originalPath")) ? null : hashMap4.get("originalPath");
        TLRPC$InputPeer inputPeer = !DialogObject.isEncryptedDialog(j22) ? getMessagesController().getInputPeer(j22) : null;
        MessageObject messageObject13 = messageObject10;
        long clientUserId = getUserConfig().getClientUserId();
        if (DialogObject.isEncryptedDialog(j22)) {
            str = str41;
            replyQuote = replyQuote4;
            TLRPC$EncryptedChat encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j22)));
            if (encryptedChat == null) {
                if (messageObject12 != null) {
                    getMessagesStorage().markMessageAsSendError(messageObject12.messageOwner, messageObject12.scheduled ? 1 : 0);
                    messageObject12.messageOwner.send_state = 2;
                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(messageObject12.getId()));
                    processSentMessage(messageObject12.getId());
                    return;
                }
                return;
            }
            messageObject = messageObject12;
            j = j23;
            sendMessagesHelper = this;
            tLRPC$InputPeer = inputPeer;
            str2 = str38;
            tLRPC$EncryptedChat = encryptedChat;
            tLRPC$Peer = null;
            z = false;
            j2 = clientUserId;
            j3 = 0;
        } else {
            replyQuote = replyQuote4;
            str = str41;
            messageObject = messageObject12;
            j = j23;
            sendMessagesHelper = this;
            if (inputPeer instanceof TLRPC$TL_inputPeerChannel) {
                j2 = clientUserId;
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(inputPeer.channel_id));
                str2 = str38;
                TLRPC$ChatFull chatFull = getMessagesController().getChatFull(chat.id);
                boolean z21 = !chat.megagroup;
                if (z21 && chat.has_link && chatFull != null) {
                    z = z21;
                    j4 = chatFull.linked_chat_id;
                } else {
                    z = z21;
                    j4 = 0;
                }
                tLRPC$InputPeer = inputPeer;
                tLRPC$Peer = getMessagesController().getPeer(ChatObject.getSendAsPeerId(chat, chatFull, true));
                j3 = j4;
                tLRPC$EncryptedChat = null;
            } else {
                tLRPC$InputPeer = inputPeer;
                j2 = clientUserId;
                str2 = str38;
                tLRPC$Peer = null;
                tLRPC$EncryptedChat = null;
                j3 = 0;
                z = false;
            }
        }
        long j24 = j3;
        try {
            try {
                if (messageObject != null) {
                    TLRPC$Message tLRPC$Message29 = messageObject.messageOwner;
                    if (obj17 == null && hashMap4 != null && hashMap4.containsKey("parentObject")) {
                        obj17 = hashMap4.get("parentObject");
                    }
                    if (messageObject.isForwarded() || (hashMap4 != null && hashMap4.containsKey("fwd_id"))) {
                        obj = "parentObject";
                        tLRPC$Message6 = tLRPC$Message29;
                        tLRPC$User2 = tLRPC$User3;
                        messageObject3 = messageObject;
                        str14 = str37;
                        str6 = "BEGIN:VCARD";
                        obj5 = obj17;
                        str7 = str39;
                        tLRPC$TL_photo = tLRPC$TL_photo5;
                        tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll4;
                        i9 = i23;
                        arrayList4 = arrayList7;
                        tLRPC$WebPage2 = tLRPC$WebPage4;
                        str13 = str2;
                        tLRPC$InputPeer2 = tLRPC$InputPeer;
                        c4 = 4;
                        delayedMessage3 = null;
                        tLRPC$TL_document3 = tLRPC$TL_document6;
                        str4 = "http";
                        tLRPC$MessageMedia = tLRPC$MessageMedia5;
                        tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                        z5 = z19;
                        z6 = false;
                        obj4 = "fwd_id";
                        j5 = j2;
                    } else {
                        if (messageObject.isDice()) {
                            str37 = messageObject.getDiceEmoji();
                            obj15 = obj17;
                            obj = "parentObject";
                            c9 = 11;
                            str36 = "";
                        } else if (messageObject.type == 0 || messageObject.isAnimatedEmoji()) {
                            obj15 = obj17;
                            obj = "parentObject";
                            if (!(messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaGame)) {
                                str37 = tLRPC$Message29.message;
                            }
                            str36 = str2;
                            c9 = 0;
                        } else {
                            int i25 = messageObject.type;
                            obj15 = obj17;
                            if (i25 == 4) {
                                tLRPC$MessageMedia5 = tLRPC$Message29.media;
                                obj = "parentObject";
                                str36 = str2;
                                c9 = 1;
                            } else if (i25 == 1) {
                                TLRPC$TL_photo tLRPC$TL_photo6 = (TLRPC$TL_photo) tLRPC$Message29.media.photo;
                                String str42 = messageObject.messageOwner.message;
                                if (str42 == null) {
                                    str42 = str2;
                                }
                                tLRPC$TL_photo5 = tLRPC$TL_photo6;
                                obj = "parentObject";
                                str36 = str42;
                                c9 = 2;
                            } else if (i25 == 3 || i25 == 5 || messageObject.videoEditedInfo != null) {
                                obj = "parentObject";
                                tLRPC$TL_document4 = (TLRPC$TL_document) tLRPC$Message29.media.document;
                                String str43 = messageObject.messageOwner.message;
                                if (str43 != null) {
                                    str36 = str43;
                                    c9 = 3;
                                    tLRPC$TL_document6 = tLRPC$TL_document4;
                                } else {
                                    tLRPC$TL_document6 = tLRPC$TL_document4;
                                    str36 = str2;
                                    c9 = 3;
                                }
                            } else if (i25 == 12) {
                                tLRPC$User3 = new TLRPC$TL_userRequest_old2();
                                TLRPC$MessageMedia tLRPC$MessageMedia6 = tLRPC$Message29.media;
                                tLRPC$User3.phone = tLRPC$MessageMedia6.phone_number;
                                tLRPC$User3.first_name = tLRPC$MessageMedia6.first_name;
                                tLRPC$User3.last_name = tLRPC$MessageMedia6.last_name;
                                TLRPC$RestrictionReason tLRPC$RestrictionReason = new TLRPC$RestrictionReason();
                                tLRPC$RestrictionReason.platform = "";
                                tLRPC$RestrictionReason.reason = "";
                                tLRPC$RestrictionReason.text = tLRPC$Message29.media.vcard;
                                tLRPC$User3.restriction_reason.add(tLRPC$RestrictionReason);
                                obj = "parentObject";
                                tLRPC$User3.id = tLRPC$Message29.media.user_id;
                                str36 = str2;
                                c9 = 6;
                            } else {
                                obj = "parentObject";
                                if (i25 != 8 && i25 != 9 && i25 != 13 && i25 != 14 && i25 != 15) {
                                    if (i25 == 2) {
                                        tLRPC$TL_document4 = (TLRPC$TL_document) tLRPC$Message29.media.document;
                                        String str44 = messageObject.messageOwner.message;
                                        if (str44 != null) {
                                            str36 = str44;
                                            c9 = '\b';
                                            tLRPC$TL_document6 = tLRPC$TL_document4;
                                        } else {
                                            tLRPC$TL_document6 = tLRPC$TL_document4;
                                            str36 = str2;
                                            c9 = '\b';
                                        }
                                    } else if (i25 == 17) {
                                        tLRPC$TL_messageMediaPoll4 = (TLRPC$TL_messageMediaPoll) tLRPC$Message29.media;
                                        str36 = str2;
                                        c9 = '\n';
                                    } else {
                                        str36 = str2;
                                        c9 = 65535;
                                    }
                                }
                                tLRPC$TL_document4 = (TLRPC$TL_document) tLRPC$Message29.media.document;
                                String str45 = messageObject.messageOwner.message;
                                if (str45 != null) {
                                    str36 = str45;
                                    c9 = 7;
                                    tLRPC$TL_document6 = tLRPC$TL_document4;
                                } else {
                                    tLRPC$TL_document6 = tLRPC$TL_document4;
                                    str36 = str2;
                                    c9 = 7;
                                }
                            }
                        }
                        if (hashMap4 != null && hashMap4.containsKey("query_id")) {
                            c9 = '\t';
                        }
                        i9 = tLRPC$Message29.media.ttl_seconds;
                        tLRPC$User2 = tLRPC$User3;
                        messageObject3 = messageObject;
                        str13 = str36;
                        str6 = "BEGIN:VCARD";
                        obj5 = obj15;
                        str7 = str39;
                        tLRPC$TL_photo = tLRPC$TL_photo5;
                        tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll4;
                        if (i9 <= 0) {
                            i9 = i23;
                        }
                        arrayList4 = arrayList7;
                        tLRPC$WebPage2 = tLRPC$WebPage4;
                        delayedMessage3 = null;
                        tLRPC$Message6 = tLRPC$Message29;
                        c4 = c9;
                        tLRPC$TL_document3 = tLRPC$TL_document6;
                        str4 = "http";
                        tLRPC$MessageMedia = tLRPC$MessageMedia5;
                        tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                        z5 = z19;
                        z6 = false;
                        obj4 = "fwd_id";
                        str14 = str37;
                        j5 = j2;
                        tLRPC$InputPeer2 = tLRPC$InputPeer;
                    }
                } else {
                    obj = "parentObject";
                    try {
                        if (DialogObject.isChatDialog(j22)) {
                            messageObject3 = messageObject;
                            obj2 = "fwd_id";
                            tLRPC$TL_message = ChatObject.canSendStickers(getMessagesController().getChat(Long.valueOf(-j22)));
                        } else {
                            messageObject3 = messageObject;
                            obj2 = "fwd_id";
                            tLRPC$TL_message = 1;
                        }
                        if (str37 != null) {
                            if (tLRPC$EncryptedChat != null) {
                                tLRPC$TL_message6 = new TLRPC$TL_message_secret();
                            } else {
                                tLRPC$TL_message6 = new TLRPC$TL_message();
                            }
                            if (tLRPC$EncryptedChat != null) {
                                tLRPC$WebPage3 = tLRPC$WebPage4;
                                obj3 = obj17;
                                try {
                                    if (tLRPC$WebPage3 instanceof TLRPC$TL_webPagePending) {
                                        if (tLRPC$WebPage3.url != null) {
                                            TLRPC$TL_webPageUrlPending tLRPC$TL_webPageUrlPending = new TLRPC$TL_webPageUrlPending();
                                            tLRPC$TL_webPageUrlPending.url = tLRPC$WebPage3.url;
                                            tLRPC$WebPage3 = tLRPC$TL_webPageUrlPending;
                                        } else {
                                            tLRPC$WebPage3 = null;
                                        }
                                    }
                                } catch (Exception e2) {
                                    exc = e2;
                                    tLRPC$Message2 = tLRPC$TL_message6;
                                    i5 = i22;
                                    sendMessagesHelper2 = sendMessagesHelper;
                                    tLRPC$Message3 = tLRPC$Message2;
                                    i4 = i5;
                                    messageObject2 = null;
                                    sendMessagesHelper3 = sendMessagesHelper2;
                                    i3 = i4;
                                    FileLog.e(exc);
                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                    if (messageObject2 != null) {
                                    }
                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                    return;
                                }
                            } else {
                                tLRPC$WebPage3 = tLRPC$WebPage4;
                                obj3 = obj17;
                            }
                            if (tLRPC$TL_message != 0 && str37.length() < 30 && tLRPC$WebPage3 == null && ((arrayList7 == null || arrayList7.isEmpty()) && getMessagesController().diceEmojies.contains(str37.replace("️", "")) && tLRPC$EncryptedChat == null && i22 == 0)) {
                                TLRPC$TL_messageMediaDice tLRPC$TL_messageMediaDice = new TLRPC$TL_messageMediaDice();
                                tLRPC$TL_messageMediaDice.emoticon = str37;
                                tLRPC$TL_messageMediaDice.value = -1;
                                tLRPC$TL_message6.media = tLRPC$TL_messageMediaDice;
                                str6 = "BEGIN:VCARD";
                                tLRPC$TL_document = tLRPC$TL_document6;
                                str7 = str39;
                                tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                i7 = i23;
                                arrayList = arrayList7;
                                delayedMessage = null;
                                z3 = false;
                                c = 11;
                                tLRPC$User = tLRPC$User3;
                                str3 = str37;
                                str4 = "http";
                                tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                tL_stories$StoryItem = tL_stories$StoryItem7;
                                tLRPC$Peer2 = tLRPC$Peer;
                                tLRPC$Message5 = tLRPC$TL_message6;
                                tLRPC$WebPage = tLRPC$WebPage3;
                                z2 = z19;
                                obj4 = obj2;
                                str5 = "";
                            } else {
                                if (tLRPC$TL_messageMediaWebPage3 != null) {
                                    tLRPC$TL_messageMediaWebPage2 = tLRPC$TL_messageMediaWebPage3;
                                    tLRPC$TL_message6.media = tLRPC$TL_messageMediaWebPage2;
                                } else {
                                    tLRPC$TL_messageMediaWebPage2 = tLRPC$TL_messageMediaWebPage3;
                                    if (tLRPC$WebPage3 == null) {
                                        tLRPC$TL_message6.media = new TLRPC$TL_messageMediaEmpty();
                                    } else {
                                        TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage4 = new TLRPC$TL_messageMediaWebPage();
                                        tLRPC$TL_message6.media = tLRPC$TL_messageMediaWebPage4;
                                        tLRPC$TL_messageMediaWebPage4.webpage = tLRPC$WebPage3;
                                    }
                                }
                                char c10 = (hashMap4 == null || !hashMap4.containsKey("query_id")) ? (char) 0 : '\t';
                                tLRPC$TL_message6.message = str37;
                                tLRPC$WebPage = tLRPC$WebPage3;
                                str6 = "BEGIN:VCARD";
                                tLRPC$TL_document = tLRPC$TL_document6;
                                str7 = str39;
                                tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                i7 = i23;
                                arrayList = arrayList7;
                                z2 = z19;
                                z3 = false;
                                tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage2;
                                tLRPC$User = tLRPC$User3;
                                str3 = str37;
                                obj4 = obj2;
                                str4 = "http";
                                tL_stories$StoryItem = tL_stories$StoryItem7;
                                str5 = str2;
                                delayedMessage = null;
                                tLRPC$Peer2 = tLRPC$Peer;
                                c = c10;
                                tLRPC$Message5 = tLRPC$TL_message6;
                            }
                        } else {
                            obj3 = obj17;
                            try {
                                if (tLRPC$TL_messageMediaPoll4 != null) {
                                    if (tLRPC$EncryptedChat != null) {
                                        tLRPC$TL_message_secret = new TLRPC$TL_message_secret();
                                    } else {
                                        tLRPC$TL_message_secret = new TLRPC$TL_message();
                                    }
                                    tLRPC$TL_message_secret.media = tLRPC$TL_messageMediaPoll4;
                                    tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                    str3 = str37;
                                    tLRPC$WebPage = tLRPC$WebPage4;
                                    str6 = "BEGIN:VCARD";
                                    tLRPC$TL_document = tLRPC$TL_document6;
                                    str7 = str39;
                                    i7 = i23;
                                    arrayList = arrayList7;
                                    z2 = z19;
                                    z3 = false;
                                    tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                    tLRPC$User = tLRPC$User3;
                                    obj4 = obj2;
                                    str4 = "http";
                                    tL_stories$StoryItem = tL_stories$StoryItem7;
                                    str5 = str2;
                                    delayedMessage = null;
                                    c = '\n';
                                } else {
                                    tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                    if (tLRPC$MessageMedia5 != null) {
                                        if (tLRPC$EncryptedChat != null) {
                                            tLRPC$TL_message_secret = new TLRPC$TL_message_secret();
                                        } else {
                                            tLRPC$TL_message_secret = new TLRPC$TL_message();
                                        }
                                        tLRPC$TL_message_secret.media = tLRPC$MessageMedia5;
                                        if (hashMap4 == null || !hashMap4.containsKey("query_id")) {
                                            tLRPC$MessageMedia5 = tLRPC$MessageMedia5;
                                            str3 = str37;
                                            tLRPC$WebPage = tLRPC$WebPage4;
                                            str6 = "BEGIN:VCARD";
                                            tLRPC$TL_document = tLRPC$TL_document6;
                                            str7 = str39;
                                            i7 = i23;
                                            arrayList = arrayList7;
                                            z2 = z19;
                                            z3 = false;
                                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                            tLRPC$User = tLRPC$User3;
                                            obj4 = obj2;
                                            str4 = "http";
                                            tL_stories$StoryItem = tL_stories$StoryItem7;
                                            str5 = str2;
                                            delayedMessage = null;
                                            c = 1;
                                        } else {
                                            tLRPC$MessageMedia5 = tLRPC$MessageMedia5;
                                            str3 = str37;
                                            tLRPC$WebPage = tLRPC$WebPage4;
                                            str9 = "BEGIN:VCARD";
                                            str7 = str39;
                                            z2 = z19;
                                            str10 = str2;
                                            obj4 = obj2;
                                            str4 = "http";
                                            tLRPC$Peer2 = tLRPC$Peer;
                                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                            i6 = i23;
                                            arrayList = arrayList7;
                                        }
                                    } else if (tLRPC$TL_photo5 != null) {
                                        if (tLRPC$EncryptedChat != null) {
                                            tLRPC$TL_message5 = new TLRPC$TL_message_secret();
                                        } else {
                                            tLRPC$TL_message5 = new TLRPC$TL_message();
                                        }
                                        TLRPC$TL_messageMediaPhoto tLRPC$TL_messageMediaPhoto = new TLRPC$TL_messageMediaPhoto();
                                        tLRPC$TL_message5.media = tLRPC$TL_messageMediaPhoto;
                                        str3 = str37;
                                        int i26 = tLRPC$TL_messageMediaPhoto.flags;
                                        tLRPC$WebPage = tLRPC$WebPage4;
                                        tLRPC$TL_messageMediaPhoto.flags = i26 | 3;
                                        z2 = z19;
                                        tLRPC$TL_messageMediaPhoto.spoiler = z2;
                                        if (arrayList7 != null) {
                                            obj4 = obj2;
                                            arrayList2 = arrayList7;
                                            tLRPC$TL_message5.entities = arrayList2;
                                        } else {
                                            obj4 = obj2;
                                            arrayList2 = arrayList7;
                                        }
                                        if (i23 != 0) {
                                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                            i8 = i23;
                                            tLRPC$TL_messageMediaPhoto.ttl_seconds = i8;
                                            tLRPC$TL_message5.ttl = i8;
                                            tLRPC$TL_messageMediaPhoto.flags = i26 | 7;
                                        } else {
                                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                            i8 = i23;
                                        }
                                        tLRPC$TL_messageMediaPhoto.photo = tLRPC$TL_photo5;
                                        char c11 = (hashMap4 == null || !hashMap4.containsKey("query_id")) ? (char) 2 : '\t';
                                        if (str39 == null || str39.length() <= 0) {
                                            c3 = c11;
                                            str11 = str39;
                                            tLRPC$Peer2 = tLRPC$Peer;
                                            str12 = "http";
                                        } else {
                                            c3 = c11;
                                            str11 = str39;
                                            tLRPC$Peer2 = tLRPC$Peer;
                                            str12 = "http";
                                            if (str11.startsWith(str12)) {
                                                tLRPC$TL_message5.attachPath = str11;
                                                str4 = str12;
                                                tLRPC$TL_photo5 = tLRPC$TL_photo5;
                                                arrayList = arrayList2;
                                                if (str2 == null) {
                                                    str5 = str2;
                                                    tLRPC$TL_message5.message = str5;
                                                } else {
                                                    str5 = str2;
                                                    if (tLRPC$TL_message5.message == null) {
                                                        tLRPC$TL_message5.message = "";
                                                    }
                                                }
                                                i7 = i8;
                                                tLRPC$Message5 = tLRPC$TL_message5;
                                                str6 = "BEGIN:VCARD";
                                                tLRPC$TL_document = tLRPC$TL_document6;
                                                c = c3;
                                                delayedMessage = null;
                                                z3 = false;
                                                tLRPC$User = tLRPC$User3;
                                                str7 = str11;
                                                tL_stories$StoryItem = tL_stories$StoryItem7;
                                            }
                                        }
                                        str4 = str12;
                                        ArrayList<TLRPC$PhotoSize> arrayList8 = tLRPC$TL_photo5.sizes;
                                        tLRPC$TL_photo5 = tLRPC$TL_photo5;
                                        arrayList = arrayList2;
                                        tLRPC$TL_message5.attachPath = FileLoader.getInstance(sendMessagesHelper.currentAccount).getPathToAttach(arrayList8.get(arrayList8.size() - 1).location, true).toString();
                                        if (str2 == null) {
                                        }
                                        i7 = i8;
                                        tLRPC$Message5 = tLRPC$TL_message5;
                                        str6 = "BEGIN:VCARD";
                                        tLRPC$TL_document = tLRPC$TL_document6;
                                        c = c3;
                                        delayedMessage = null;
                                        z3 = false;
                                        tLRPC$User = tLRPC$User3;
                                        str7 = str11;
                                        tL_stories$StoryItem = tL_stories$StoryItem7;
                                    } else {
                                        str3 = str37;
                                        tLRPC$WebPage = tLRPC$WebPage4;
                                        z2 = z19;
                                        obj4 = obj2;
                                        str4 = "http";
                                        str5 = str2;
                                        tLRPC$Peer2 = tLRPC$Peer;
                                        tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                        i6 = i23;
                                        arrayList = arrayList7;
                                        try {
                                            if (tLRPC$TL_game != null) {
                                                TLRPC$TL_message tLRPC$TL_message7 = new TLRPC$TL_message();
                                                TLRPC$TL_messageMediaGame tLRPC$TL_messageMediaGame = new TLRPC$TL_messageMediaGame();
                                                tLRPC$TL_message7.media = tLRPC$TL_messageMediaGame;
                                                tLRPC$TL_messageMediaGame.game = tLRPC$TL_game;
                                                tLRPC$TL_message3 = tLRPC$TL_message7;
                                                if (hashMap4 != null) {
                                                    tLRPC$TL_message4 = tLRPC$TL_message7;
                                                    tLRPC$TL_message3 = tLRPC$TL_message7;
                                                }
                                                i7 = i6;
                                                tLRPC$Message5 = tLRPC$TL_message3;
                                                str7 = str39;
                                                str6 = "BEGIN:VCARD";
                                                tLRPC$TL_document = tLRPC$TL_document6;
                                                delayedMessage = null;
                                                z3 = false;
                                                c = 65535;
                                                tLRPC$TL_message = tLRPC$TL_message3;
                                                tLRPC$User = tLRPC$User3;
                                                tL_stories$StoryItem = tL_stories$StoryItem7;
                                            } else if (tLRPC$TL_messageMediaInvoice != null) {
                                                TLRPC$TL_message tLRPC$TL_message8 = new TLRPC$TL_message();
                                                tLRPC$TL_message8.media = tLRPC$TL_messageMediaInvoice;
                                                tLRPC$TL_message3 = tLRPC$TL_message8;
                                                if (hashMap4 != null) {
                                                    tLRPC$TL_message4 = tLRPC$TL_message8;
                                                    tLRPC$TL_message3 = tLRPC$TL_message8;
                                                }
                                                i7 = i6;
                                                tLRPC$Message5 = tLRPC$TL_message3;
                                                str7 = str39;
                                                str6 = "BEGIN:VCARD";
                                                tLRPC$TL_document = tLRPC$TL_document6;
                                                delayedMessage = null;
                                                z3 = false;
                                                c = 65535;
                                                tLRPC$TL_message = tLRPC$TL_message3;
                                                tLRPC$User = tLRPC$User3;
                                                tL_stories$StoryItem = tL_stories$StoryItem7;
                                            } else if (tLRPC$User3 != null) {
                                                if (tLRPC$EncryptedChat != null) {
                                                    tLRPC$Message5 = new TLRPC$TL_message_secret();
                                                } else {
                                                    tLRPC$Message5 = new TLRPC$TL_message();
                                                }
                                                TLRPC$TL_messageMediaContact tLRPC$TL_messageMediaContact = new TLRPC$TL_messageMediaContact();
                                                tLRPC$Message5.media = tLRPC$TL_messageMediaContact;
                                                tLRPC$TL_messageMediaContact.phone_number = tLRPC$User3.phone;
                                                tLRPC$TL_messageMediaContact.first_name = tLRPC$User3.first_name;
                                                tLRPC$TL_messageMediaContact.last_name = tLRPC$User3.last_name;
                                                str7 = str39;
                                                tLRPC$TL_messageMediaContact.user_id = tLRPC$User3.id;
                                                if (tLRPC$User3.restriction_reason.isEmpty()) {
                                                    str9 = "BEGIN:VCARD";
                                                } else {
                                                    str9 = "BEGIN:VCARD";
                                                    if (tLRPC$User3.restriction_reason.get(0).text.startsWith(str9)) {
                                                        str10 = str5;
                                                        tLRPC$Message5.media.vcard = tLRPC$User3.restriction_reason.get(0).text;
                                                        r8 = tLRPC$Message5.media;
                                                        if (r8.first_name == null) {
                                                            r8.first_name = "";
                                                            tLRPC$User3.first_name = "";
                                                        }
                                                        if (r8.last_name == null) {
                                                            r8.last_name = "";
                                                            tLRPC$User3.last_name = "";
                                                        }
                                                        if (hashMap4 != null || (r8 = hashMap4.containsKey("query_id")) == 0) {
                                                            i7 = i6;
                                                            str6 = str9;
                                                            str5 = str10;
                                                            tLRPC$TL_document = tLRPC$TL_document6;
                                                            delayedMessage = null;
                                                            z3 = false;
                                                            c = 6;
                                                            tLRPC$TL_message = r8;
                                                            tLRPC$User = tLRPC$User3;
                                                            tL_stories$StoryItem = tL_stories$StoryItem7;
                                                        } else {
                                                            tLRPC$TL_message_secret = tLRPC$Message5;
                                                        }
                                                    }
                                                }
                                                str10 = str5;
                                                tLRPC$Message5.media.vcard = "";
                                                r8 = tLRPC$Message5.media;
                                                if (r8.first_name == null) {
                                                }
                                                if (r8.last_name == null) {
                                                }
                                                if (hashMap4 != null) {
                                                }
                                                i7 = i6;
                                                str6 = str9;
                                                str5 = str10;
                                                tLRPC$TL_document = tLRPC$TL_document6;
                                                delayedMessage = null;
                                                z3 = false;
                                                c = 6;
                                                tLRPC$TL_message = r8;
                                                tLRPC$User = tLRPC$User3;
                                                tL_stories$StoryItem = tL_stories$StoryItem7;
                                            } else if (tLRPC$TL_document6 != null) {
                                                if (tLRPC$EncryptedChat != null) {
                                                    tLRPC$TL_message2 = new TLRPC$TL_message_secret();
                                                } else {
                                                    tLRPC$TL_message2 = new TLRPC$TL_message();
                                                }
                                                try {
                                                    if (DialogObject.isChatDialog(j22) && tLRPC$TL_message == 0) {
                                                        tLRPC$TL_document2 = tLRPC$TL_document6;
                                                        int size = tLRPC$TL_document2.attributes.size();
                                                        int i27 = 0;
                                                        while (i27 < size) {
                                                            tLRPC$User = tLRPC$User3;
                                                            if (tLRPC$TL_document2.attributes.get(i27) instanceof TLRPC$TL_documentAttributeAnimated) {
                                                                tLRPC$TL_document2.attributes.remove(i27);
                                                                z4 = true;
                                                                break;
                                                            }
                                                            i27++;
                                                            tLRPC$User3 = tLRPC$User;
                                                        }
                                                    } else {
                                                        tLRPC$TL_document2 = tLRPC$TL_document6;
                                                    }
                                                    tLRPC$User = tLRPC$User3;
                                                    z4 = false;
                                                    TLRPC$TL_messageMediaDocument tLRPC$TL_messageMediaDocument = new TLRPC$TL_messageMediaDocument();
                                                    tLRPC$TL_message2.media = tLRPC$TL_messageMediaDocument;
                                                    int i28 = tLRPC$TL_messageMediaDocument.flags;
                                                    z3 = z4;
                                                    tLRPC$TL_messageMediaDocument.flags = i28 | 3;
                                                    tLRPC$TL_messageMediaDocument.spoiler = z2;
                                                    if (i6 != 0) {
                                                        tLRPC$TL_messageMediaDocument.ttl_seconds = i6;
                                                        tLRPC$TL_message2.ttl = i6;
                                                        tLRPC$TL_messageMediaDocument.flags = i28 | 7;
                                                    }
                                                    tLRPC$TL_messageMediaDocument.document = tLRPC$TL_document2;
                                                    if (hashMap4 == null || !hashMap4.containsKey("query_id")) {
                                                        if ((MessageObject.isVideoSticker(tLRPC$TL_document2) && videoEditedInfo6 == null) || (!MessageObject.isVideoDocument(tLRPC$TL_document2) && !MessageObject.isRoundVideoDocument(tLRPC$TL_document2) && videoEditedInfo6 == null)) {
                                                            c2 = MessageObject.isVoiceDocument(tLRPC$TL_document2) ? '\b' : (char) 7;
                                                        }
                                                        c2 = 3;
                                                    } else {
                                                        c2 = '\t';
                                                    }
                                                    if (videoEditedInfo6 != null) {
                                                        String string = videoEditedInfo6.getString();
                                                        if (hashMap4 == null) {
                                                            hashMap4 = new HashMap<>();
                                                        }
                                                        hashMap4.put("ve", string);
                                                    }
                                                    if (tLRPC$EncryptedChat != null && tLRPC$TL_document2.dc_id > 0 && !MessageObject.isStickerDocument(tLRPC$TL_document2) && !MessageObject.isAnimatedStickerDocument(tLRPC$TL_document2, true) && !MessageObject.isGifDocument(tLRPC$TL_document2)) {
                                                        tLRPC$TL_message2.attachPath = FileLoader.getInstance(sendMessagesHelper.currentAccount).getPathToAttach(tLRPC$TL_document2).toString();
                                                        str8 = str39;
                                                    } else {
                                                        str8 = str39;
                                                        tLRPC$TL_message2.attachPath = str8;
                                                    }
                                                    if (tLRPC$EncryptedChat != null) {
                                                        if (MessageObject.isStickerDocument(tLRPC$TL_document2) || MessageObject.isAnimatedStickerDocument(tLRPC$TL_document2, true)) {
                                                            tLRPC$Message4 = tLRPC$TL_message2;
                                                            int i29 = 0;
                                                            while (i29 < tLRPC$TL_document2.attributes.size()) {
                                                                try {
                                                                    TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$TL_document2.attributes.get(i29);
                                                                    i7 = i6;
                                                                    if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeSticker) {
                                                                        tLRPC$TL_document2.attributes.remove(i29);
                                                                        TLRPC$TL_documentAttributeSticker_layer55 tLRPC$TL_documentAttributeSticker_layer55 = new TLRPC$TL_documentAttributeSticker_layer55();
                                                                        tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeSticker_layer55);
                                                                        tLRPC$TL_documentAttributeSticker_layer55.alt = tLRPC$DocumentAttribute.alt;
                                                                        TLRPC$InputStickerSet tLRPC$InputStickerSet = tLRPC$DocumentAttribute.stickerset;
                                                                        if (tLRPC$InputStickerSet != null) {
                                                                            c = c2;
                                                                            if (tLRPC$InputStickerSet instanceof TLRPC$TL_inputStickerSetShortName) {
                                                                                stickerSetName = tLRPC$InputStickerSet.short_name;
                                                                                tLRPC$TL_document = tLRPC$TL_document2;
                                                                                str6 = "BEGIN:VCARD";
                                                                            } else {
                                                                                tLRPC$TL_document = tLRPC$TL_document2;
                                                                                str6 = "BEGIN:VCARD";
                                                                                stickerSetName = getMediaDataController().getStickerSetName(tLRPC$DocumentAttribute.stickerset.id);
                                                                            }
                                                                            if (!TextUtils.isEmpty(stickerSetName)) {
                                                                                TLRPC$TL_inputStickerSetShortName tLRPC$TL_inputStickerSetShortName = new TLRPC$TL_inputStickerSetShortName();
                                                                                tLRPC$TL_documentAttributeSticker_layer55.stickerset = tLRPC$TL_inputStickerSetShortName;
                                                                                tLRPC$TL_inputStickerSetShortName.short_name = stickerSetName;
                                                                            } else {
                                                                                if (tLRPC$DocumentAttribute.stickerset instanceof TLRPC$TL_inputStickerSetID) {
                                                                                    delayedMessage2 = new DelayedMessage(j22);
                                                                                    delayedMessage2.encryptedChat = tLRPC$EncryptedChat;
                                                                                    delayedMessage2.locationParent = tLRPC$TL_documentAttributeSticker_layer55;
                                                                                    delayedMessage2.type = 5;
                                                                                    delayedMessage2.parentObject = tLRPC$DocumentAttribute.stickerset;
                                                                                } else {
                                                                                    delayedMessage2 = null;
                                                                                }
                                                                                tLRPC$TL_documentAttributeSticker_layer55.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                                delayedMessage = delayedMessage2;
                                                                                str5 = str5;
                                                                                tLRPC$Message5 = tLRPC$Message4;
                                                                                tL_stories$StoryItem = tL_stories$StoryItem7;
                                                                                str7 = str8;
                                                                            }
                                                                        } else {
                                                                            c = c2;
                                                                            tLRPC$TL_document = tLRPC$TL_document2;
                                                                            str6 = "BEGIN:VCARD";
                                                                            tLRPC$TL_documentAttributeSticker_layer55.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                        }
                                                                        str5 = str5;
                                                                        tLRPC$Message5 = tLRPC$Message4;
                                                                        tL_stories$StoryItem = tL_stories$StoryItem7;
                                                                        delayedMessage = null;
                                                                        str7 = str8;
                                                                    } else {
                                                                        i29++;
                                                                        i6 = i7;
                                                                    }
                                                                } catch (Exception e3) {
                                                                    e = e3;
                                                                    exc = e;
                                                                    sendMessagesHelper2 = sendMessagesHelper;
                                                                    i5 = i22;
                                                                    tLRPC$Message2 = tLRPC$Message4;
                                                                    tLRPC$Message3 = tLRPC$Message2;
                                                                    i4 = i5;
                                                                    messageObject2 = null;
                                                                    sendMessagesHelper3 = sendMessagesHelper2;
                                                                    i3 = i4;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                    if (messageObject2 != null) {
                                                                    }
                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                    return;
                                                                }
                                                            }
                                                            i7 = i6;
                                                            c = c2;
                                                            tLRPC$TL_document = tLRPC$TL_document2;
                                                            str6 = "BEGIN:VCARD";
                                                            str5 = str5;
                                                            tLRPC$Message5 = tLRPC$Message4;
                                                            tL_stories$StoryItem = tL_stories$StoryItem7;
                                                            delayedMessage = null;
                                                            str7 = str8;
                                                        }
                                                    }
                                                    tLRPC$Message4 = tLRPC$TL_message2;
                                                    i7 = i6;
                                                    c = c2;
                                                    tLRPC$TL_document = tLRPC$TL_document2;
                                                    str6 = "BEGIN:VCARD";
                                                    str5 = str5;
                                                    tLRPC$Message5 = tLRPC$Message4;
                                                    tL_stories$StoryItem = tL_stories$StoryItem7;
                                                    delayedMessage = null;
                                                    str7 = str8;
                                                } catch (Exception e4) {
                                                    e = e4;
                                                    tLRPC$Message4 = tLRPC$TL_message2;
                                                }
                                            } else {
                                                i7 = i6;
                                                str6 = "BEGIN:VCARD";
                                                tLRPC$TL_document = tLRPC$TL_document6;
                                                tLRPC$User = tLRPC$User3;
                                                if (tL_stories$StoryItem7 != null) {
                                                    if (tLRPC$EncryptedChat != null) {
                                                        tLRPC$Message5 = new TLRPC$TL_message_secret();
                                                    } else {
                                                        tLRPC$Message5 = new TLRPC$TL_message();
                                                    }
                                                    MessageMediaStoryFull messageMediaStoryFull = new MessageMediaStoryFull();
                                                    tL_stories$StoryItem = tL_stories$StoryItem7;
                                                    messageMediaStoryFull.id = tL_stories$StoryItem.id;
                                                    messageMediaStoryFull.user_id = tL_stories$StoryItem.dialogId;
                                                    str7 = str39;
                                                    messageMediaStoryFull.peer = getMessagesController().getPeer(tL_stories$StoryItem.dialogId);
                                                    messageMediaStoryFull.storyItem = tL_stories$StoryItem;
                                                    tLRPC$Message5.media = messageMediaStoryFull;
                                                    str5 = str5;
                                                    delayedMessage = null;
                                                    z3 = false;
                                                    c = '\f';
                                                } else {
                                                    str7 = str39;
                                                    tL_stories$StoryItem = tL_stories$StoryItem7;
                                                    str5 = str5;
                                                    tLRPC$Message5 = null;
                                                    delayedMessage = null;
                                                    z3 = false;
                                                    c = 65535;
                                                }
                                            }
                                        } catch (Exception e5) {
                                            exc = e5;
                                            sendMessagesHelper2 = sendMessagesHelper;
                                            i4 = i22;
                                            tLRPC$Message3 = tLRPC$TL_message;
                                            messageObject2 = null;
                                            sendMessagesHelper3 = sendMessagesHelper2;
                                            i3 = i4;
                                            FileLog.e(exc);
                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                            if (messageObject2 != null) {
                                            }
                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                            sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                            return;
                                        }
                                    }
                                    i7 = i6;
                                    tLRPC$Message5 = tLRPC$TL_message_secret;
                                    str6 = str9;
                                    str5 = str10;
                                    TLRPC$TL_message tLRPC$TL_message9 = tLRPC$TL_message_secret;
                                    tLRPC$TL_document = tLRPC$TL_document6;
                                    delayedMessage = null;
                                    z3 = false;
                                    c = '\t';
                                    tLRPC$TL_message = tLRPC$TL_message9;
                                    tLRPC$User = tLRPC$User3;
                                    tL_stories$StoryItem = tL_stories$StoryItem7;
                                }
                                tLRPC$Peer2 = tLRPC$Peer;
                                tLRPC$Message5 = tLRPC$TL_message_secret;
                            } catch (Exception e6) {
                                exc = e6;
                                sendMessagesHelper2 = sendMessagesHelper;
                                tLRPC$Message4 = tLRPC$TL_message;
                            }
                        }
                        if (arrayList == null || arrayList.isEmpty()) {
                            arrayList3 = arrayList;
                        } else {
                            arrayList3 = arrayList;
                            tLRPC$Message5.entities = arrayList3;
                            tLRPC$Message5.flags |= 128;
                        }
                        if (str5 != null) {
                            tLRPC$Message5.message = str5;
                        } else {
                            try {
                                if (tLRPC$Message5.message == null) {
                                    tLRPC$Message5.message = "";
                                }
                            } catch (Exception e7) {
                                e = e7;
                                sendMessagesHelper2 = sendMessagesHelper;
                                i = i22;
                                tLRPC$Message = tLRPC$Message5;
                                exc = e;
                                i5 = i;
                                tLRPC$Message2 = tLRPC$Message;
                                tLRPC$Message3 = tLRPC$Message2;
                                i4 = i5;
                                messageObject2 = null;
                                sendMessagesHelper3 = sendMessagesHelper2;
                                i3 = i4;
                                FileLog.e(exc);
                                getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                if (messageObject2 != null) {
                                }
                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                return;
                            }
                        }
                        if (tLRPC$Message5.attachPath == null) {
                            tLRPC$Message5.attachPath = "";
                        }
                        int newMessageId = getUserConfig().getNewMessageId();
                        tLRPC$Message5.id = newMessageId;
                        tLRPC$Message5.local_id = newMessageId;
                        tLRPC$Message5.out = true;
                        if (tLRPC$InputPeer != null) {
                            delayedMessage3 = delayedMessage;
                            tL_stories$StoryItem7 = tL_stories$StoryItem;
                            tLRPC$InputPeer2 = tLRPC$InputPeer;
                            tLRPC$Chat = getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer2.channel_id));
                        } else {
                            delayedMessage3 = delayedMessage;
                            tL_stories$StoryItem7 = tL_stories$StoryItem;
                            tLRPC$InputPeer2 = tLRPC$InputPeer;
                            tLRPC$Chat = null;
                        }
                        if (!z || tLRPC$InputPeer2 == null || (tLRPC$Chat != null && tLRPC$Chat.signatures)) {
                            arrayList4 = arrayList3;
                            if (tLRPC$Peer2 != null) {
                                tLRPC$Message5.from_id = tLRPC$Peer2;
                                j5 = j2;
                                getUserConfig().saveConfig(false);
                                z5 = z2;
                                str13 = str5;
                                tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll;
                                tLRPC$TL_photo = tLRPC$TL_photo5;
                                str14 = str3;
                                tLRPC$WebPage2 = tLRPC$WebPage;
                                obj5 = obj3;
                                i9 = i7;
                                tLRPC$TL_document3 = tLRPC$TL_document;
                                tLRPC$Message6 = tLRPC$Message5;
                                c4 = c;
                                boolean z22 = z3;
                                tLRPC$User2 = tLRPC$User;
                                tLRPC$MessageMedia = tLRPC$MessageMedia5;
                                z6 = z22;
                            } else {
                                TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
                                tLRPC$Message5.from_id = tLRPC$TL_peerUser;
                                j5 = j2;
                                tLRPC$TL_peerUser.user_id = j5;
                                tLRPC$Message5.flags |= 256;
                                getUserConfig().saveConfig(false);
                                z5 = z2;
                                str13 = str5;
                                tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll;
                                tLRPC$TL_photo = tLRPC$TL_photo5;
                                str14 = str3;
                                tLRPC$WebPage2 = tLRPC$WebPage;
                                obj5 = obj3;
                                i9 = i7;
                                tLRPC$TL_document3 = tLRPC$TL_document;
                                tLRPC$Message6 = tLRPC$Message5;
                                c4 = c;
                                boolean z222 = z3;
                                tLRPC$User2 = tLRPC$User;
                                tLRPC$MessageMedia = tLRPC$MessageMedia5;
                                z6 = z222;
                            }
                        }
                        TLRPC$TL_peerChannel tLRPC$TL_peerChannel = new TLRPC$TL_peerChannel();
                        tLRPC$Message5.from_id = tLRPC$TL_peerChannel;
                        arrayList4 = arrayList3;
                        tLRPC$TL_peerChannel.channel_id = tLRPC$InputPeer2.channel_id;
                        j5 = j2;
                        getUserConfig().saveConfig(false);
                        z5 = z2;
                        str13 = str5;
                        tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll;
                        tLRPC$TL_photo = tLRPC$TL_photo5;
                        str14 = str3;
                        tLRPC$WebPage2 = tLRPC$WebPage;
                        obj5 = obj3;
                        i9 = i7;
                        tLRPC$TL_document3 = tLRPC$TL_document;
                        tLRPC$Message6 = tLRPC$Message5;
                        c4 = c;
                        boolean z2222 = z3;
                        tLRPC$User2 = tLRPC$User;
                        tLRPC$MessageMedia = tLRPC$MessageMedia5;
                        z6 = z2222;
                    } catch (Exception e8) {
                        sendMessagesHelper2 = sendMessagesHelper;
                        i2 = i22;
                        exc = e8;
                        tLRPC$Message2 = null;
                        i5 = i2;
                        tLRPC$Message3 = tLRPC$Message2;
                        i4 = i5;
                        messageObject2 = null;
                        sendMessagesHelper3 = sendMessagesHelper2;
                        i3 = i4;
                        FileLog.e(exc);
                        getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                        if (messageObject2 != null) {
                        }
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                        sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                        return;
                    }
                }
            } catch (Exception e9) {
                exc = e9;
                sendMessagesHelper2 = sendMessagesHelper;
                i2 = i22;
            }
        } catch (Exception e10) {
            e = e10;
            tLRPC$Message = tLRPC$Peer;
            sendMessagesHelper2 = sendMessagesHelper;
            i = i22;
        }
        if (z17) {
            tLRPC$TL_photo2 = tLRPC$TL_photo;
            try {
                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                obj6 = "query_id";
                sb = new StringBuilder();
                str15 = str14;
                str16 = NotificationsSettingsFacade.PROPERTY_SILENT;
                sb.append(str16);
                sb.append(j22);
                c5 = c4;
            } catch (Exception e11) {
                exc = e11;
                sendMessagesHelper2 = sendMessagesHelper;
                tLRPC$Message4 = tLRPC$Message6;
                i5 = i22;
                tLRPC$Message2 = tLRPC$Message4;
                tLRPC$Message3 = tLRPC$Message2;
                i4 = i5;
                messageObject2 = null;
                sendMessagesHelper3 = sendMessagesHelper2;
                i3 = i4;
                FileLog.e(exc);
                getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                if (messageObject2 != null) {
                }
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                return;
            }
            if (!notificationsSettings.getBoolean(sb.toString(), false)) {
                z7 = false;
                tLRPC$Message6.silent = z7;
                str17 = str16;
                if (tLRPC$Message6.random_id == 0) {
                    tLRPC$Message6.random_id = getNextRandomId();
                }
                if (str40 == null && i24 == 0) {
                    sendMessageParams2 = sendMessageParams;
                    i12 = i9;
                    str18 = str40;
                    str19 = str17;
                    j6 = sendMessageParams2.effect_id;
                    if (j6 != 0) {
                        tLRPC$Message6.flags2 |= 4;
                        tLRPC$Message6.effect = j6;
                    }
                    if (hashMap4 == null) {
                        str20 = "bot";
                        if (hashMap4.containsKey(str20)) {
                            if (tLRPC$EncryptedChat != null) {
                                String str46 = hashMap4.get(obj16);
                                tLRPC$Message6.via_bot_name = str46;
                                if (str46 == null) {
                                    tLRPC$Message6.via_bot_name = "";
                                }
                                obj16 = obj16;
                            } else {
                                obj16 = obj16;
                                tLRPC$Message6.via_bot_id = Utilities.parseLong(hashMap4.get(str20)).longValue();
                            }
                            tLRPC$Message6.flags |= 2048;
                        }
                    } else {
                        str20 = "bot";
                    }
                    tLRPC$Message6.params = hashMap4;
                    if (messageObject3 == null) {
                        messageObject4 = messageObject3;
                        if (messageObject4.resendAsIs) {
                            messageObject5 = messageObject4;
                            i13 = i22;
                            tLRPC$Message8 = "";
                            tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                            tLRPC$Message6.dialog_id = j22;
                            tLRPC$Message6.invert_media = z20;
                            if (tL_stories$StoryItem6 == null) {
                                TLRPC$TL_messageReplyStoryHeader tLRPC$TL_messageReplyStoryHeader = new TLRPC$TL_messageReplyStoryHeader();
                                tLRPC$Message6.reply_to = tLRPC$TL_messageReplyStoryHeader;
                                tL_stories$StoryItem2 = tL_stories$StoryItem6;
                                tLRPC$TL_messageReplyStoryHeader.story_id = tL_stories$StoryItem2.id;
                                i14 = i12;
                                str21 = str18;
                                tLRPC$TL_messageReplyStoryHeader.peer = getMessagesController().getPeer(tL_stories$StoryItem2.dialogId);
                                tLRPC$Message6.replyStory = tL_stories$StoryItem2;
                                tLRPC$Message6.flags |= 8;
                            } else {
                                i14 = i12;
                                tL_stories$StoryItem2 = tL_stories$StoryItem6;
                                str21 = str18;
                                if (messageObject13 != null) {
                                    messageObject6 = messageObject11;
                                    messageObject7 = messageObject13;
                                    if (messageObject11 != null && messageObject7 == messageObject6 && messageObject6.getId() == 1) {
                                        j7 = j5;
                                        replyQuote2 = replyQuote;
                                        if (j24 == 0) {
                                            TLRPC$TL_messageReplies tLRPC$TL_messageReplies = new TLRPC$TL_messageReplies();
                                            tLRPC$Message6.replies = tLRPC$TL_messageReplies;
                                            tLRPC$TL_messageReplies.comments = true;
                                            tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                            tLRPC$TL_messageReplies.channel_id = j24;
                                            tLRPC$TL_messageReplies.flags |= 1;
                                            tLRPC$Message6.flags |= 8388608;
                                        } else {
                                            tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                        }
                                        if (tLRPC$ReplyMarkup != null && tLRPC$EncryptedChat == null) {
                                            tLRPC$Message6.flags |= 64;
                                            tLRPC$Message6.reply_markup = tLRPC$ReplyMarkup;
                                            str34 = hashMap4.get(str20);
                                            if (str34 != null) {
                                                tLRPC$Message6.via_bot_id = Long.parseLong(str34);
                                            }
                                        }
                                        if (DialogObject.isEncryptedDialog(j22)) {
                                            tLRPC$Message6.peer_id = getMessagesController().getPeer(j22);
                                            if (DialogObject.isUserDialog(j22)) {
                                                TLRPC$User user = getMessagesController().getUser(Long.valueOf(j22));
                                                if (user == null) {
                                                    sendMessagesHelper.processSentMessage(tLRPC$Message6.id);
                                                    return;
                                                } else if (user.bot) {
                                                    tLRPC$Message6.unread = false;
                                                }
                                            }
                                            i15 = i14;
                                        } else {
                                            TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
                                            tLRPC$Message6.peer_id = tLRPC$TL_peerUser2;
                                            long j25 = tLRPC$EncryptedChat.participant_id;
                                            if (j25 == j7) {
                                                tLRPC$TL_peerUser2.user_id = tLRPC$EncryptedChat.admin_id;
                                            } else {
                                                tLRPC$TL_peerUser2.user_id = j25;
                                            }
                                            if (i14 != 0) {
                                                i15 = i14;
                                                tLRPC$Message6.ttl = i15;
                                            } else {
                                                i15 = i14;
                                                int i30 = tLRPC$EncryptedChat.ttl;
                                                tLRPC$Message6.ttl = i30;
                                                if (i30 != 0 && (tLRPC$MessageMedia2 = tLRPC$Message6.media) != null) {
                                                    tLRPC$MessageMedia2.ttl_seconds = i30;
                                                    tLRPC$MessageMedia2.flags |= 4;
                                                }
                                            }
                                            if (tLRPC$Message6.ttl != 0 && tLRPC$Message6.media.document != null) {
                                                if (MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                                    int i31 = 0;
                                                    while (true) {
                                                        if (i31 >= tLRPC$Message6.media.document.attributes.size()) {
                                                            i17 = 0;
                                                            break;
                                                        }
                                                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = tLRPC$Message6.media.document.attributes.get(i31);
                                                        if (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeAudio) {
                                                            i17 = (int) tLRPC$DocumentAttribute2.duration;
                                                            break;
                                                        }
                                                        i31++;
                                                    }
                                                    tLRPC$Message6.ttl = Math.max(tLRPC$Message6.ttl, i17 + 1);
                                                } else if (MessageObject.isVideoMessage(tLRPC$Message6) || MessageObject.isRoundVideoMessage(tLRPC$Message6)) {
                                                    int i32 = 0;
                                                    while (true) {
                                                        if (i32 >= tLRPC$Message6.media.document.attributes.size()) {
                                                            i16 = 0;
                                                            break;
                                                        }
                                                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute3 = tLRPC$Message6.media.document.attributes.get(i32);
                                                        if (tLRPC$DocumentAttribute3 instanceof TLRPC$TL_documentAttributeVideo) {
                                                            i16 = (int) tLRPC$DocumentAttribute3.duration;
                                                            break;
                                                        }
                                                        i32++;
                                                    }
                                                    tLRPC$Message6.ttl = Math.max(tLRPC$Message6.ttl, i16 + 1);
                                                }
                                            }
                                        }
                                        if (messageObject7 != null || tL_stories$StoryItem2 != null || tLRPC$Message6.reply_to == null || DialogObject.isEncryptedDialog(messageObject7.getDialogId())) {
                                            i18 = i15;
                                            tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                            j8 = j22;
                                            z8 = false;
                                        } else {
                                            i18 = i15;
                                            TL_stories$StoryItem tL_stories$StoryItem8 = tL_stories$StoryItem2;
                                            TLRPC$Peer peer = getMessagesController().getPeer(messageObject7.getDialogId() > 0 ? messageObject7.getSenderId() : messageObject7.getDialogId());
                                            if (peer != null) {
                                                tL_stories$StoryItem3 = tL_stories$StoryItem8;
                                                if (!MessageObject.peersEqual(getMessagesController().getPeer(messageObject7.getDialogId()), tLRPC$Message6.peer_id)) {
                                                    z13 = true;
                                                    if (z13 && messageObject7.isForwarded() && !messageObject7.isImportedForward()) {
                                                        tLRPC$MessageFwdHeader = messageObject7.messageOwner.fwd_from;
                                                        if (tLRPC$MessageFwdHeader.saved_from_peer == null && (tLRPC$Peer5 = tLRPC$MessageFwdHeader.from_id) != null) {
                                                            tLRPC$Peer3 = peer;
                                                            if ((tLRPC$MessageFwdHeader.flags & 4) != 0) {
                                                                tLRPC$Message6.reply_to.reply_to_msg_id = tLRPC$MessageFwdHeader.channel_post;
                                                                tLRPC$Peer4 = tLRPC$Peer5;
                                                                z15 = true;
                                                                z14 = true;
                                                                z8 = z15;
                                                                j8 = j22;
                                                                boolean z23 = (ChatObject.isForum(getMessagesController().getChat(Long.valueOf(-DialogObject.getPeerDialogId(tLRPC$Message6.peer_id)))) || messageObject6.getId() == messageObject7.getId() || MessageObject.getTopicId(sendMessagesHelper.currentAccount, messageObject7.messageOwner, true) == ((long) messageObject6.getId())) ? false : true;
                                                                if (!z14 || z23) {
                                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader = tLRPC$Message6.reply_to;
                                                                    tLRPC$MessageReplyHeader.flags |= 1;
                                                                    tLRPC$MessageReplyHeader.reply_to_peer_id = tLRPC$Peer4;
                                                                    if (replyQuote2 == null) {
                                                                        tLRPC$MessageReplyHeader.quote = false;
                                                                        replyQuote3 = ChatActivity.ReplyQuote.from(messageObject7);
                                                                    } else {
                                                                        replyQuote3 = replyQuote2;
                                                                    }
                                                                    if (replyQuote3 != null) {
                                                                        TLRPC$Message tLRPC$Message30 = messageObject7.messageOwner;
                                                                        if (tLRPC$Message30 != null && (tLRPC$MessageMedia3 = tLRPC$Message30.media) != null) {
                                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2 = tLRPC$Message6.reply_to;
                                                                            tLRPC$MessageReplyHeader2.flags |= 256;
                                                                            tLRPC$MessageReplyHeader2.reply_media = tLRPC$MessageMedia3;
                                                                        }
                                                                        if (replyQuote3.getText() != null) {
                                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader3 = tLRPC$Message6.reply_to;
                                                                            tLRPC$MessageReplyHeader3.flags |= 64;
                                                                            tLRPC$MessageReplyHeader3.quote_text = replyQuote3.getText();
                                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader4 = tLRPC$Message6.reply_to;
                                                                            tLRPC$MessageReplyHeader4.flags |= 1024;
                                                                            tLRPC$MessageReplyHeader4.quote_offset = replyQuote3.start;
                                                                        }
                                                                        if (replyQuote3.getEntities() != null) {
                                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader5 = tLRPC$Message6.reply_to;
                                                                            tLRPC$MessageReplyHeader5.flags |= 128;
                                                                            tLRPC$MessageReplyHeader5.quote_entities = replyQuote3.getEntities();
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            z14 = z13;
                                                            tLRPC$Peer4 = tLRPC$Peer3;
                                                            z15 = false;
                                                            z8 = z15;
                                                            j8 = j22;
                                                            if (ChatObject.isForum(getMessagesController().getChat(Long.valueOf(-DialogObject.getPeerDialogId(tLRPC$Message6.peer_id))))) {
                                                            }
                                                            if (!z14) {
                                                            }
                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader6 = tLRPC$Message6.reply_to;
                                                            tLRPC$MessageReplyHeader6.flags |= 1;
                                                            tLRPC$MessageReplyHeader6.reply_to_peer_id = tLRPC$Peer4;
                                                            if (replyQuote2 == null) {
                                                            }
                                                            if (replyQuote3 != null) {
                                                            }
                                                        }
                                                    }
                                                    tLRPC$Peer3 = peer;
                                                    z14 = z13;
                                                    tLRPC$Peer4 = tLRPC$Peer3;
                                                    z15 = false;
                                                    z8 = z15;
                                                    j8 = j22;
                                                    if (ChatObject.isForum(getMessagesController().getChat(Long.valueOf(-DialogObject.getPeerDialogId(tLRPC$Message6.peer_id))))) {
                                                    }
                                                    if (!z14) {
                                                    }
                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader62 = tLRPC$Message6.reply_to;
                                                    tLRPC$MessageReplyHeader62.flags |= 1;
                                                    tLRPC$MessageReplyHeader62.reply_to_peer_id = tLRPC$Peer4;
                                                    if (replyQuote2 == null) {
                                                    }
                                                    if (replyQuote3 != null) {
                                                    }
                                                }
                                            } else {
                                                tL_stories$StoryItem3 = tL_stories$StoryItem8;
                                            }
                                            z13 = false;
                                            if (z13) {
                                                tLRPC$MessageFwdHeader = messageObject7.messageOwner.fwd_from;
                                                if (tLRPC$MessageFwdHeader.saved_from_peer == null) {
                                                    tLRPC$Peer3 = peer;
                                                    if ((tLRPC$MessageFwdHeader.flags & 4) != 0) {
                                                    }
                                                    z14 = z13;
                                                    tLRPC$Peer4 = tLRPC$Peer3;
                                                    z15 = false;
                                                    z8 = z15;
                                                    j8 = j22;
                                                    if (ChatObject.isForum(getMessagesController().getChat(Long.valueOf(-DialogObject.getPeerDialogId(tLRPC$Message6.peer_id))))) {
                                                    }
                                                    if (!z14) {
                                                    }
                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader622 = tLRPC$Message6.reply_to;
                                                    tLRPC$MessageReplyHeader622.flags |= 1;
                                                    tLRPC$MessageReplyHeader622.reply_to_peer_id = tLRPC$Peer4;
                                                    if (replyQuote2 == null) {
                                                    }
                                                    if (replyQuote3 != null) {
                                                    }
                                                }
                                            }
                                            tLRPC$Peer3 = peer;
                                            z14 = z13;
                                            tLRPC$Peer4 = tLRPC$Peer3;
                                            z15 = false;
                                            z8 = z15;
                                            j8 = j22;
                                            if (ChatObject.isForum(getMessagesController().getChat(Long.valueOf(-DialogObject.getPeerDialogId(tLRPC$Message6.peer_id))))) {
                                            }
                                            if (!z14) {
                                            }
                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader6222 = tLRPC$Message6.reply_to;
                                            tLRPC$MessageReplyHeader6222.flags |= 1;
                                            tLRPC$MessageReplyHeader6222.reply_to_peer_id = tLRPC$Peer4;
                                            if (replyQuote2 == null) {
                                            }
                                            if (replyQuote3 != null) {
                                            }
                                        }
                                        if (!MessageObject.isVoiceMessage(tLRPC$Message6) || MessageObject.isRoundVideoMessage(tLRPC$Message6)) {
                                            tLRPC$Message6.media_unread = true;
                                        }
                                        if (tLRPC$Message6.from_id == null) {
                                            tLRPC$Message6.from_id = tLRPC$Message6.peer_id;
                                        }
                                        tLRPC$Message6.send_state = 1;
                                        if (hashMap4 == null) {
                                            String str47 = hashMap4.get("groupId");
                                            if (str47 != null) {
                                                j10 = Utilities.parseLong(str47).longValue();
                                                tLRPC$Message6.grouped_id = j10;
                                                tLRPC$Message6.flags |= 131072;
                                            } else {
                                                j10 = 0;
                                            }
                                            j9 = j;
                                            z9 = hashMap4.get("final") != null;
                                        } else {
                                            j9 = j;
                                            z9 = false;
                                            j10 = 0;
                                        }
                                        if (j9 <= 0) {
                                            TLRPC$MessageMedia tLRPC$MessageMedia7 = tLRPC$Message6.media;
                                            TLRPC$TL_messageMediaPaidMedia tLRPC$TL_messageMediaPaidMedia = new TLRPC$TL_messageMediaPaidMedia();
                                            tLRPC$TL_messageMediaPaidMedia.stars_amount = j9;
                                            j11 = j9;
                                            TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia = new TLRPC$TL_messageExtendedMedia();
                                            tLRPC$TL_messageExtendedMedia.attachPath = tLRPC$Message6.attachPath;
                                            tLRPC$TL_messageExtendedMedia.media = tLRPC$MessageMedia7;
                                            tLRPC$TL_messageMediaPaidMedia.extended_media.add(tLRPC$TL_messageExtendedMedia);
                                            tLRPC$Message6.media = tLRPC$TL_messageMediaPaidMedia;
                                        } else {
                                            j11 = j9;
                                        }
                                        messageObject8 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message6, ((messageObject6 == null && messageObject6 == messageObject7 && messageObject6.getId() == 1) || z8) ? null : messageObject7, true, true);
                                        messageObject8.sendAnimationData = sendAnimationData;
                                        messageObject8.wasJustSent = true;
                                        messageObject8.scheduled = i13 == null;
                                        if (!messageObject8.isForwarded()) {
                                            try {
                                                int i33 = messageObject8.type;
                                                if ((i33 == 3 || videoEditedInfo6 != null || i33 == 2) && !TextUtils.isEmpty(tLRPC$Message6.attachPath)) {
                                                    messageObject8.attachPathExists = true;
                                                }
                                            } catch (Exception e12) {
                                                exc = e12;
                                                sendMessagesHelper5 = sendMessagesHelper;
                                                tLRPC$Message10 = tLRPC$Message6;
                                                tLRPC$Message9 = i13;
                                                sendMessagesHelper4 = sendMessagesHelper5;
                                                messageObject2 = messageObject8;
                                                tLRPC$Message3 = tLRPC$Message10;
                                                sendMessagesHelper3 = sendMessagesHelper4;
                                                i3 = tLRPC$Message9;
                                                FileLog.e(exc);
                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                if (messageObject2 != null) {
                                                }
                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                return;
                                            }
                                        }
                                        videoEditedInfo = messageObject8.videoEditedInfo;
                                        if (videoEditedInfo != null || videoEditedInfo6 != null) {
                                            if (videoEditedInfo6 == null) {
                                                videoEditedInfo2 = videoEditedInfo6;
                                                boolean z24 = videoEditedInfo2.notReadyYet;
                                                if (z24) {
                                                    videoEditedInfo.notReadyYet = z24;
                                                }
                                            } else {
                                                videoEditedInfo2 = videoEditedInfo6;
                                            }
                                            videoEditedInfo = videoEditedInfo2;
                                        }
                                        if (j10 != 0) {
                                            ArrayList<MessageObject> arrayList9 = new ArrayList<>();
                                            arrayList9.add(messageObject8);
                                            ArrayList<TLRPC$Message> arrayList10 = new ArrayList<>();
                                            arrayList10.add(tLRPC$Message6);
                                            if (i13 != null) {
                                                i20 = 1;
                                            } else if (str21 != null) {
                                                j21 = tLRPC$Message6.quick_reply_shortcut_id;
                                                i20 = 5;
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList10, false, true, false, 0, i20, j21);
                                                str22 = str20;
                                                videoEditedInfo3 = videoEditedInfo;
                                                j12 = j8;
                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j12, arrayList9, i20);
                                                if (i13 != null) {
                                                    tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                } else {
                                                    tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                                }
                                                delayedMessage4 = delayedMessage3;
                                                sendMessagesHelper6 = null;
                                            } else {
                                                i20 = 0;
                                            }
                                            j21 = 0;
                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList10, false, true, false, 0, i20, j21);
                                            str22 = str20;
                                            videoEditedInfo3 = videoEditedInfo;
                                            j12 = j8;
                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j12, arrayList9, i20);
                                            if (i13 != null) {
                                            }
                                            delayedMessage4 = delayedMessage3;
                                            sendMessagesHelper6 = null;
                                        } else {
                                            str22 = str20;
                                            videoEditedInfo3 = videoEditedInfo;
                                            tL_stories$StoryItem4 = tL_stories$StoryItem3;
                                            j12 = j8;
                                            ArrayList<DelayedMessage> arrayList11 = sendMessagesHelper.delayedMessages.get("group_" + j10);
                                            if (arrayList11 != null) {
                                                delayedMessage3 = arrayList11.get(0);
                                            }
                                            if (delayedMessage3 == null) {
                                                delayedMessage4 = new DelayedMessage(j12);
                                                delayedMessage4.initForGroup(j10);
                                                delayedMessage4.encryptedChat = tLRPC$EncryptedChat;
                                                delayedMessage4.scheduled = i13 != null;
                                            } else {
                                                delayedMessage4 = delayedMessage3;
                                            }
                                            delayedMessage4.performMediaUpload = false;
                                            sendMessagesHelper6 = null;
                                            sendMessagesHelper6 = null;
                                            delayedMessage4.photoSize = null;
                                            delayedMessage4.videoEditedInfo = null;
                                            delayedMessage4.httpLocation = null;
                                            if (z9) {
                                                delayedMessage4.finalGroupMessage = tLRPC$Message6.id;
                                            }
                                        }
                                        if (BuildVars.LOGS_ENABLED || tLRPC$InputPeer3 == null) {
                                            str23 = str22;
                                            tLRPC$InputPeer4 = tLRPC$InputPeer3;
                                            sendMessagesHelper7 = sendMessagesHelper6;
                                            str24 = str22;
                                        } else {
                                            try {
                                                StringBuilder sb2 = new StringBuilder();
                                                sb2.append("send message user_id = ");
                                                str23 = str22;
                                                tLRPC$InputPeer4 = tLRPC$InputPeer3;
                                                sb2.append(tLRPC$InputPeer4.user_id);
                                                sb2.append(" chat_id = ");
                                                sb2.append(tLRPC$InputPeer4.chat_id);
                                                sb2.append(" channel_id = ");
                                                sb2.append(tLRPC$InputPeer4.channel_id);
                                                sb2.append(" access_hash = ");
                                                sb2.append(tLRPC$InputPeer4.access_hash);
                                                sb2.append(" notify = ");
                                                sb2.append(z17);
                                                sb2.append(" silent = ");
                                                ?? notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                str24 = null;
                                                sb2.append(notificationsSettings2.getBoolean(str19 + j12, false));
                                                FileLog.d(sb2.toString());
                                                sendMessagesHelper7 = notificationsSettings2;
                                            } catch (Exception e13) {
                                                e = e13;
                                                sendMessagesHelper5 = this;
                                                exc = e;
                                                tLRPC$Message10 = tLRPC$Message6;
                                                tLRPC$Message9 = i13;
                                                sendMessagesHelper4 = sendMessagesHelper5;
                                                messageObject2 = messageObject8;
                                                tLRPC$Message3 = tLRPC$Message10;
                                                sendMessagesHelper3 = sendMessagesHelper4;
                                                i3 = tLRPC$Message9;
                                                FileLog.e(exc);
                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                if (messageObject2 != null) {
                                                }
                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                return;
                                            }
                                        }
                                        if (c5 != 0 || ((c6 = c5) == '\t' && str15 != null && tLRPC$EncryptedChat != null)) {
                                            SendMessagesHelper sendMessagesHelper15 = this;
                                            long j26 = j12;
                                            HashMap<String, String> hashMap5 = hashMap4;
                                            MessageObject messageObject14 = messageObject6;
                                            TLRPC$InputPeer tLRPC$InputPeer6 = tLRPC$InputPeer4;
                                            TLRPC$Message tLRPC$Message31 = tLRPC$Message6;
                                            Object obj18 = obj5;
                                            Object obj19 = obj16;
                                            ?? r42 = i13;
                                            ArrayList<TLRPC$MessageEntity> arrayList12 = arrayList4;
                                            TL_stories$StoryItem tL_stories$StoryItem9 = tL_stories$StoryItem4;
                                            String str48 = str15;
                                            if (tLRPC$EncryptedChat == null) {
                                                MessageObject messageObject15 = messageObject5;
                                                TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage2 = new TLRPC$TL_decryptedMessage();
                                                tLRPC$TL_decryptedMessage2.ttl = tLRPC$Message31.ttl;
                                                if (arrayList12 != null && !arrayList12.isEmpty()) {
                                                    tLRPC$TL_decryptedMessage2.entities = arrayList12;
                                                    tLRPC$TL_decryptedMessage2.flags |= 128;
                                                }
                                                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader7 = tLRPC$Message31.reply_to;
                                                if (tLRPC$MessageReplyHeader7 != null) {
                                                    long j27 = tLRPC$MessageReplyHeader7.reply_to_random_id;
                                                    j13 = 0;
                                                    if (j27 != 0) {
                                                        tLRPC$TL_decryptedMessage2.reply_to_random_id = j27;
                                                        tLRPC$TL_decryptedMessage2.flags |= 8;
                                                    }
                                                } else {
                                                    j13 = 0;
                                                }
                                                if (hashMap5 != null && hashMap5.get(obj19) != null) {
                                                    tLRPC$TL_decryptedMessage2.via_bot_name = hashMap5.get(obj19);
                                                    tLRPC$TL_decryptedMessage2.flags |= 2048;
                                                }
                                                tLRPC$TL_decryptedMessage2.silent = tLRPC$Message31.silent;
                                                tLRPC$TL_decryptedMessage2.random_id = tLRPC$Message31.random_id;
                                                tLRPC$TL_decryptedMessage2.message = str48;
                                                TLRPC$WebPage tLRPC$WebPage5 = tLRPC$WebPage2;
                                                if (tLRPC$WebPage5 != null && tLRPC$WebPage5.url != null) {
                                                    TLRPC$TL_decryptedMessageMediaWebPage tLRPC$TL_decryptedMessageMediaWebPage = new TLRPC$TL_decryptedMessageMediaWebPage();
                                                    tLRPC$TL_decryptedMessage2.media = tLRPC$TL_decryptedMessageMediaWebPage;
                                                    tLRPC$TL_decryptedMessageMediaWebPage.url = tLRPC$WebPage5.url;
                                                    tLRPC$TL_decryptedMessage2.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                } else {
                                                    tLRPC$TL_decryptedMessage2.media = new TLRPC$TL_decryptedMessageMediaEmpty();
                                                }
                                                getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage2, messageObject8.messageOwner, tLRPC$EncryptedChat, null, null, messageObject8);
                                                if (messageObject15 == null) {
                                                    getMediaDataController().cleanDraft(j26, messageObject14 != null ? messageObject14.getId() : j13, false);
                                                    return;
                                                }
                                                return;
                                            } else if (tLRPC$TL_messageMediaWebPage != null) {
                                                try {
                                                    TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = new TLRPC$TL_messages_sendMedia();
                                                    tLRPC$TL_messages_sendMedia.message = str48;
                                                    tLRPC$TL_messages_sendMedia.clear_draft = messageObject5 == null;
                                                    tLRPC$TL_messages_sendMedia.silent = tLRPC$Message31.silent;
                                                    tLRPC$TL_messages_sendMedia.peer = tLRPC$InputPeer6;
                                                    tLRPC$TL_messages_sendMedia.random_id = tLRPC$Message31.random_id;
                                                    TLRPC$TL_inputMediaWebPage tLRPC$TL_inputMediaWebPage = new TLRPC$TL_inputMediaWebPage();
                                                    TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage5 = tLRPC$TL_messageMediaWebPage;
                                                    tLRPC$TL_inputMediaWebPage.url = tLRPC$TL_messageMediaWebPage5.webpage.url;
                                                    tLRPC$TL_inputMediaWebPage.force_large_media = tLRPC$TL_messageMediaWebPage5.force_large_media;
                                                    tLRPC$TL_inputMediaWebPage.force_small_media = tLRPC$TL_messageMediaWebPage5.force_small_media;
                                                    tLRPC$TL_inputMediaWebPage.optional = true;
                                                    tLRPC$TL_messages_sendMedia.media = tLRPC$TL_inputMediaWebPage;
                                                    if (tL_stories$StoryItem9 != null) {
                                                        tLRPC$TL_messages_sendMedia.reply_to = sendMessagesHelper15.createReplyInput(tL_stories$StoryItem9);
                                                        tLRPC$TL_messages_sendMedia.flags |= 1;
                                                    } else {
                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader8 = tLRPC$Message31.reply_to;
                                                        if (tLRPC$MessageReplyHeader8 instanceof TLRPC$TL_messageReplyHeader) {
                                                            tLRPC$TL_messages_sendMedia.reply_to = sendMessagesHelper15.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader8);
                                                            tLRPC$TL_messages_sendMedia.flags |= 1;
                                                        }
                                                    }
                                                    if (z18 && SharedConfig.updateStickersOrderOnSend) {
                                                        tLRPC$TL_messages_sendMedia.update_stickersets_order = true;
                                                    }
                                                    if (tLRPC$Message31.from_id != null) {
                                                        tLRPC$TL_messages_sendMedia.send_as = getMessagesController().getInputPeer(tLRPC$Message31.from_id);
                                                    }
                                                    if (arrayList12 != null && !arrayList12.isEmpty()) {
                                                        tLRPC$TL_messages_sendMedia.entities = arrayList12;
                                                        tLRPC$TL_messages_sendMedia.flags |= 8;
                                                    }
                                                    if (r42 != 0) {
                                                        i19 = r42;
                                                        tLRPC$TL_messages_sendMedia.schedule_date = i19;
                                                        tLRPC$TL_messages_sendMedia.flags |= 1024;
                                                    } else {
                                                        i19 = r42;
                                                    }
                                                    TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut = tLRPC$Message31.quick_reply_shortcut;
                                                    if (tLRPC$InputQuickReplyShortcut != null) {
                                                        tLRPC$TL_messages_sendMedia.flags |= 131072;
                                                        tLRPC$TL_messages_sendMedia.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut;
                                                    }
                                                    long j28 = sendMessageParams.effect_id;
                                                    if (j28 != 0) {
                                                        tLRPC$TL_messages_sendMedia.flags |= 262144;
                                                        tLRPC$TL_messages_sendMedia.effect = j28;
                                                    }
                                                    tLRPC$TL_messages_sendMedia.invert_media = tLRPC$Message31.invert_media;
                                                    MessageObject messageObject16 = messageObject5;
                                                    performSendMessageRequest(tLRPC$TL_messages_sendMedia, messageObject8, null, null, obj18, hashMap5, i19 != 0);
                                                    if (messageObject16 == null) {
                                                        getMediaDataController().cleanDraft(j26, messageObject14 != null ? messageObject14.getId() : 0L, false);
                                                        return;
                                                    }
                                                    return;
                                                } catch (Exception e14) {
                                                    e = e14;
                                                    tLRPC$Message6 = r42;
                                                    exc = e;
                                                    sendMessagesHelper4 = sendMessagesHelper15;
                                                    tLRPC$Message10 = tLRPC$Message31;
                                                    tLRPC$Message9 = tLRPC$Message6;
                                                    messageObject2 = messageObject8;
                                                    tLRPC$Message3 = tLRPC$Message10;
                                                    sendMessagesHelper3 = sendMessagesHelper4;
                                                    i3 = tLRPC$Message9;
                                                    FileLog.e(exc);
                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                    if (messageObject2 != null) {
                                                    }
                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                    return;
                                                }
                                            } else {
                                                MessageObject messageObject17 = messageObject5;
                                                TLRPC$TL_messages_sendMessage tLRPC$TL_messages_sendMessage = new TLRPC$TL_messages_sendMessage();
                                                tLRPC$TL_messages_sendMessage.message = str48;
                                                tLRPC$TL_messages_sendMessage.clear_draft = messageObject17 == null;
                                                tLRPC$TL_messages_sendMessage.silent = tLRPC$Message31.silent;
                                                tLRPC$TL_messages_sendMessage.peer = tLRPC$InputPeer6;
                                                tLRPC$TL_messages_sendMessage.random_id = tLRPC$Message31.random_id;
                                                if (tL_stories$StoryItem9 != null) {
                                                    tLRPC$TL_messages_sendMessage.reply_to = sendMessagesHelper15.createReplyInput(tL_stories$StoryItem9);
                                                    tLRPC$TL_messages_sendMessage.flags |= 1;
                                                } else {
                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader9 = tLRPC$Message31.reply_to;
                                                    if (tLRPC$MessageReplyHeader9 instanceof TLRPC$TL_messageReplyHeader) {
                                                        tLRPC$TL_messages_sendMessage.reply_to = sendMessagesHelper15.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader9);
                                                        tLRPC$TL_messages_sendMessage.flags |= 1;
                                                    }
                                                }
                                                TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut2 = tLRPC$Message31.quick_reply_shortcut;
                                                if (tLRPC$InputQuickReplyShortcut2 != null) {
                                                    tLRPC$TL_messages_sendMessage.flags |= 131072;
                                                    tLRPC$TL_messages_sendMessage.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut2;
                                                }
                                                if (z18 && SharedConfig.updateStickersOrderOnSend) {
                                                    tLRPC$TL_messages_sendMessage.update_stickersets_order = true;
                                                }
                                                if (tLRPC$Message31.from_id != null) {
                                                    tLRPC$TL_messages_sendMessage.send_as = getMessagesController().getInputPeer(tLRPC$Message31.from_id);
                                                }
                                                if (!z16) {
                                                    tLRPC$TL_messages_sendMessage.no_webpage = true;
                                                }
                                                if (arrayList12 != null && !arrayList12.isEmpty()) {
                                                    tLRPC$TL_messages_sendMessage.entities = arrayList12;
                                                    tLRPC$TL_messages_sendMessage.flags |= 8;
                                                }
                                                if (r42 != 0) {
                                                    tLRPC$TL_messages_sendMessage.schedule_date = r42;
                                                    tLRPC$TL_messages_sendMessage.flags |= 1024;
                                                }
                                                long j29 = sendMessageParams.effect_id;
                                                if (j29 != 0) {
                                                    tLRPC$TL_messages_sendMessage.flags |= 262144;
                                                    tLRPC$TL_messages_sendMessage.effect = j29;
                                                }
                                                tLRPC$TL_messages_sendMessage.invert_media = tLRPC$Message31.invert_media;
                                                performSendMessageRequest(tLRPC$TL_messages_sendMessage, messageObject8, null, null, obj18, hashMap5, r42 != 0);
                                                if (messageObject17 == null) {
                                                    getMediaDataController().cleanDraft(j26, messageObject14 != null ? messageObject14.getId() : 0L, false);
                                                    return;
                                                }
                                                return;
                                            }
                                        }
                                        try {
                                            if ((c6 >= 1 && c6 <= 3) || ((c6 >= 5 && c6 <= '\b') || ((c6 == '\t' && tLRPC$EncryptedChat != null) || c6 == '\n' || c6 == 11 || c6 == '\f'))) {
                                                sendMessagesHelper7 = this;
                                                HashMap<String, String> hashMap6 = hashMap4;
                                                MessageObject messageObject18 = messageObject6;
                                                TLRPC$Message tLRPC$Message32 = i13;
                                                TL_stories$StoryItem tL_stories$StoryItem10 = tL_stories$StoryItem4;
                                                try {
                                                    if (tLRPC$EncryptedChat == null) {
                                                        try {
                                                            if (c6 != 1) {
                                                                tL_stories$StoryItem5 = tL_stories$StoryItem10;
                                                                j18 = j10;
                                                                String str49 = tLRPC$Message8;
                                                                if (c6 == 2 || (c6 == '\t' && tLRPC$TL_photo2 != null)) {
                                                                    c8 = c6;
                                                                    TLRPC$Message tLRPC$Message33 = tLRPC$Message32;
                                                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                    boolean z25 = z5;
                                                                    int i34 = i18;
                                                                    str29 = str;
                                                                    TLRPC$Message tLRPC$Message34 = tLRPC$Message6;
                                                                    Object obj20 = obj5;
                                                                    try {
                                                                        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                                                                        tLRPC$TL_inputMediaUploadedPhoto.spoiler = z25;
                                                                        if (i34 != 0) {
                                                                            try {
                                                                                tLRPC$TL_inputMediaUploadedPhoto.ttl_seconds = i34;
                                                                                tLRPC$Message16 = tLRPC$Message34;
                                                                            } catch (Exception e15) {
                                                                                e = e15;
                                                                                tLRPC$Message16 = tLRPC$Message34;
                                                                            }
                                                                            try {
                                                                                tLRPC$Message16.ttl = i34;
                                                                                tLRPC$TL_inputMediaUploadedPhoto.flags |= 2;
                                                                            } catch (Exception e16) {
                                                                                e = e16;
                                                                                exc = e;
                                                                                tLRPC$Message12 = tLRPC$Message16;
                                                                                sendMessagesHelper8 = sendMessagesHelper7;
                                                                                tLRPC$Message11 = tLRPC$Message33;
                                                                                tLRPC$Message9 = tLRPC$Message11;
                                                                                sendMessagesHelper4 = sendMessagesHelper8;
                                                                                tLRPC$Message10 = tLRPC$Message12;
                                                                                messageObject2 = messageObject8;
                                                                                tLRPC$Message3 = tLRPC$Message10;
                                                                                sendMessagesHelper3 = sendMessagesHelper4;
                                                                                i3 = tLRPC$Message9;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                                if (messageObject2 != null) {
                                                                                }
                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                                sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                                return;
                                                                            }
                                                                        } else {
                                                                            tLRPC$Message16 = tLRPC$Message34;
                                                                        }
                                                                        if (hashMap6 == null || (str30 = hashMap6.get(tLRPC$Message28)) == null) {
                                                                            hashMap3 = hashMap6;
                                                                        } else {
                                                                            SerializedData serializedData = new SerializedData(Utilities.hexToBytes(str30));
                                                                            boolean z26 = false;
                                                                            int readInt32 = serializedData.readInt32(false);
                                                                            int i35 = 0;
                                                                            while (i35 < readInt32) {
                                                                                tLRPC$TL_inputMediaUploadedPhoto.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData, serializedData.readInt32(z26), z26));
                                                                                i35++;
                                                                                hashMap6 = hashMap6;
                                                                                readInt32 = readInt32;
                                                                                z26 = false;
                                                                            }
                                                                            hashMap3 = hashMap6;
                                                                            tLRPC$TL_inputMediaUploadedPhoto.flags |= 1;
                                                                            serializedData.cleanup();
                                                                        }
                                                                        obj9 = obj20;
                                                                        TLRPC$TL_photo tLRPC$TL_photo7 = tLRPC$TL_photo2;
                                                                        try {
                                                                            if (tLRPC$TL_photo7.access_hash == 0) {
                                                                                tLRPC$TL_inputMediaPaidMedia = tLRPC$TL_inputMediaUploadedPhoto;
                                                                                z10 = true;
                                                                            } else {
                                                                                ?? tLRPC$TL_inputMediaPhoto = new TLRPC$TL_inputMediaPhoto();
                                                                                TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                                                                                tLRPC$TL_inputMediaPhoto.id = tLRPC$TL_inputPhoto;
                                                                                tLRPC$TL_inputPhoto.id = tLRPC$TL_photo7.id;
                                                                                tLRPC$TL_inputPhoto.access_hash = tLRPC$TL_photo7.access_hash;
                                                                                byte[] bArr2 = tLRPC$TL_photo7.file_reference;
                                                                                tLRPC$TL_inputPhoto.file_reference = bArr2;
                                                                                if (bArr2 == null) {
                                                                                    tLRPC$TL_inputPhoto.file_reference = new byte[0];
                                                                                }
                                                                                tLRPC$TL_inputMediaPhoto.spoiler = z25;
                                                                                tLRPC$TL_inputMediaPaidMedia = tLRPC$TL_inputMediaPhoto;
                                                                                z10 = false;
                                                                            }
                                                                            if (delayedMessage4 == null) {
                                                                                delayedMessage4 = new DelayedMessage(j12);
                                                                                delayedMessage4.type = 0;
                                                                                delayedMessage4.obj = messageObject8;
                                                                                delayedMessage4.originalPath = str29;
                                                                                delayedMessage4.scheduled = tLRPC$Message33 != null;
                                                                            }
                                                                            delayedMessage4.inputUploadMedia = tLRPC$TL_inputMediaUploadedPhoto;
                                                                            delayedMessage4.performMediaUpload = z10;
                                                                            if (str7 != null && str7.length() > 0) {
                                                                                String str50 = str7;
                                                                                if (str50.startsWith(str4)) {
                                                                                    delayedMessage4.httpLocation = str50;
                                                                                    tLRPC$TL_inputMediaPaidMedia2 = tLRPC$TL_inputMediaPaidMedia;
                                                                                    tLRPC$Message17 = tLRPC$Message33;
                                                                                    j19 = 0;
                                                                                    tLRPC$Message24 = tLRPC$Message16;
                                                                                    tLRPC$TL_inputMediaPaidMedia3 = tLRPC$TL_inputMediaPaidMedia2;
                                                                                    tLRPC$Message23 = tLRPC$Message17;
                                                                                }
                                                                            }
                                                                            ArrayList<TLRPC$PhotoSize> arrayList13 = tLRPC$TL_photo7.sizes;
                                                                            delayedMessage4.photoSize = arrayList13.get(arrayList13.size() - 1);
                                                                            delayedMessage4.locationParent = tLRPC$TL_photo7;
                                                                            tLRPC$TL_inputMediaPaidMedia2 = tLRPC$TL_inputMediaPaidMedia;
                                                                            tLRPC$Message17 = tLRPC$Message33;
                                                                            j19 = 0;
                                                                            tLRPC$Message24 = tLRPC$Message16;
                                                                            tLRPC$TL_inputMediaPaidMedia3 = tLRPC$TL_inputMediaPaidMedia2;
                                                                            tLRPC$Message23 = tLRPC$Message17;
                                                                        } catch (Exception e17) {
                                                                            e = e17;
                                                                            tLRPC$Message14 = tLRPC$Message16;
                                                                            tLRPC$Message15 = tLRPC$Message33;
                                                                            exc = e;
                                                                            sendMessagesHelper14 = sendMessagesHelper7;
                                                                            str33 = tLRPC$Message15;
                                                                            tLRPC$Message22 = tLRPC$Message14;
                                                                            TLRPC$InputPeer tLRPC$InputPeer7 = tLRPC$Message22;
                                                                            tLRPC$Message9 = str33;
                                                                            tLRPC$Message10 = tLRPC$InputPeer7;
                                                                            sendMessagesHelper4 = sendMessagesHelper14;
                                                                            messageObject2 = messageObject8;
                                                                            tLRPC$Message3 = tLRPC$Message10;
                                                                            sendMessagesHelper3 = sendMessagesHelper4;
                                                                            i3 = tLRPC$Message9;
                                                                            FileLog.e(exc);
                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                            if (messageObject2 != null) {
                                                                            }
                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                            sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                            return;
                                                                        }
                                                                    } catch (Exception e18) {
                                                                        e = e18;
                                                                        tLRPC$Message14 = tLRPC$Message34;
                                                                    }
                                                                } else {
                                                                    if (c6 == 3) {
                                                                        try {
                                                                            TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument2 = new TLRPC$TL_inputMediaUploadedDocument();
                                                                            TLRPC$TL_document tLRPC$TL_document7 = tLRPC$TL_document3;
                                                                            tLRPC$TL_inputMediaUploadedDocument2.mime_type = tLRPC$TL_document7.mime_type;
                                                                            tLRPC$TL_inputMediaUploadedDocument2.attributes = tLRPC$TL_document7.attributes;
                                                                            boolean z27 = z5;
                                                                            tLRPC$TL_inputMediaUploadedDocument2.spoiler = z27;
                                                                            if (!z6) {
                                                                                if (MessageObject.isRoundVideoDocument(tLRPC$TL_document7)) {
                                                                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                    videoEditedInfo4 = videoEditedInfo3;
                                                                                } else if (videoEditedInfo3 != null) {
                                                                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                    videoEditedInfo4 = videoEditedInfo3;
                                                                                    if (!videoEditedInfo4.muted) {
                                                                                    }
                                                                                }
                                                                                if (i18 != 0) {
                                                                                    int i36 = i18;
                                                                                    tLRPC$TL_inputMediaUploadedDocument2.ttl_seconds = i36;
                                                                                    tLRPC$Message6.ttl = i36;
                                                                                    tLRPC$TL_inputMediaUploadedDocument2.flags |= 2;
                                                                                }
                                                                                if (hashMap6 != null) {
                                                                                    String str51 = hashMap6.get(tLRPC$Message28);
                                                                                    if (str51 != null) {
                                                                                        tLRPC$Message28 = tLRPC$Message6;
                                                                                        try {
                                                                                            SerializedData serializedData2 = new SerializedData(Utilities.hexToBytes(str51));
                                                                                            c8 = c6;
                                                                                            int i37 = 0;
                                                                                            int readInt322 = serializedData2.readInt32(false);
                                                                                            while (i37 < readInt322) {
                                                                                                int i38 = readInt322;
                                                                                                String str52 = tLRPC$Message32;
                                                                                                VideoEditedInfo videoEditedInfo7 = videoEditedInfo4;
                                                                                                tLRPC$TL_inputMediaUploadedDocument2.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData2, serializedData2.readInt32(false), false));
                                                                                                i37++;
                                                                                                readInt322 = i38;
                                                                                                videoEditedInfo4 = videoEditedInfo7;
                                                                                                tLRPC$Message32 = str52;
                                                                                            }
                                                                                            tLRPC$Message18 = tLRPC$Message32;
                                                                                            videoEditedInfo5 = videoEditedInfo4;
                                                                                            tLRPC$TL_inputMediaUploadedDocument2.flags |= 1;
                                                                                            serializedData2.cleanup();
                                                                                            if (tLRPC$TL_document7.access_hash == 0) {
                                                                                                tLRPC$InputMedia = tLRPC$TL_inputMediaUploadedDocument2;
                                                                                                z10 = true;
                                                                                            } else {
                                                                                                ?? tLRPC$TL_inputMediaDocument = new TLRPC$TL_inputMediaDocument();
                                                                                                TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                                                                                                tLRPC$TL_inputMediaDocument.id = tLRPC$TL_inputDocument;
                                                                                                tLRPC$TL_inputDocument.id = tLRPC$TL_document7.id;
                                                                                                tLRPC$TL_inputDocument.access_hash = tLRPC$TL_document7.access_hash;
                                                                                                byte[] bArr3 = tLRPC$TL_document7.file_reference;
                                                                                                tLRPC$TL_inputDocument.file_reference = bArr3;
                                                                                                if (bArr3 == null) {
                                                                                                    tLRPC$TL_inputDocument.file_reference = new byte[0];
                                                                                                }
                                                                                                if (hashMap6 != null && hashMap6.containsKey("query")) {
                                                                                                    tLRPC$TL_inputMediaDocument.query = hashMap6.get("query");
                                                                                                    tLRPC$TL_inputMediaDocument.flags |= 2;
                                                                                                }
                                                                                                tLRPC$TL_inputMediaDocument.spoiler = z27;
                                                                                                tLRPC$InputMedia = tLRPC$TL_inputMediaDocument;
                                                                                                z10 = false;
                                                                                            }
                                                                                            if (delayedMessage4 == null) {
                                                                                                delayedMessage4 = new DelayedMessage(j12);
                                                                                                delayedMessage4.type = 1;
                                                                                                delayedMessage4.obj = messageObject8;
                                                                                                str29 = str;
                                                                                                delayedMessage4.originalPath = str29;
                                                                                                obj10 = obj5;
                                                                                                delayedMessage4.parentObject = obj10;
                                                                                                delayedMessage4.scheduled = tLRPC$Message18 != null;
                                                                                            } else {
                                                                                                obj10 = obj5;
                                                                                                str29 = str;
                                                                                            }
                                                                                            delayedMessage4.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument2;
                                                                                            delayedMessage4.performMediaUpload = z10;
                                                                                            if (!tLRPC$TL_document7.thumbs.isEmpty()) {
                                                                                                TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$TL_document7.thumbs.get(0);
                                                                                                if (!(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                                                                                                    delayedMessage4.photoSize = tLRPC$PhotoSize;
                                                                                                    delayedMessage4.locationParent = tLRPC$TL_document7;
                                                                                                }
                                                                                            }
                                                                                            delayedMessage4.videoEditedInfo = videoEditedInfo5;
                                                                                            hashMap3 = hashMap6;
                                                                                            tLRPC$InputMedia2 = tLRPC$InputMedia;
                                                                                            str31 = tLRPC$Message18;
                                                                                        } catch (Exception e19) {
                                                                                            e = e19;
                                                                                            tLRPC$Message8 = tLRPC$Message32;
                                                                                            exc = e;
                                                                                            tLRPC$Message12 = tLRPC$Message28;
                                                                                            sendMessagesHelper8 = sendMessagesHelper7;
                                                                                            tLRPC$Message11 = tLRPC$Message8;
                                                                                            tLRPC$Message9 = tLRPC$Message11;
                                                                                            sendMessagesHelper4 = sendMessagesHelper8;
                                                                                            tLRPC$Message10 = tLRPC$Message12;
                                                                                            messageObject2 = messageObject8;
                                                                                            tLRPC$Message3 = tLRPC$Message10;
                                                                                            sendMessagesHelper3 = sendMessagesHelper4;
                                                                                            i3 = tLRPC$Message9;
                                                                                            FileLog.e(exc);
                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                                            if (messageObject2 != null) {
                                                                                            }
                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                                            sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                                            return;
                                                                                        }
                                                                                    }
                                                                                }
                                                                                c8 = c6;
                                                                                tLRPC$Message18 = tLRPC$Message32;
                                                                                videoEditedInfo5 = videoEditedInfo4;
                                                                                tLRPC$Message28 = tLRPC$Message6;
                                                                                if (tLRPC$TL_document7.access_hash == 0) {
                                                                                }
                                                                                if (delayedMessage4 == null) {
                                                                                }
                                                                                delayedMessage4.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument2;
                                                                                delayedMessage4.performMediaUpload = z10;
                                                                                if (!tLRPC$TL_document7.thumbs.isEmpty()) {
                                                                                }
                                                                                delayedMessage4.videoEditedInfo = videoEditedInfo5;
                                                                                hashMap3 = hashMap6;
                                                                                tLRPC$InputMedia2 = tLRPC$InputMedia;
                                                                                str31 = tLRPC$Message18;
                                                                            }
                                                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                            videoEditedInfo4 = videoEditedInfo3;
                                                                            tLRPC$TL_inputMediaUploadedDocument2.nosound_video = true;
                                                                            if (BuildVars.DEBUG_VERSION) {
                                                                                FileLog.d("nosound_video = true");
                                                                            }
                                                                            if (i18 != 0) {
                                                                            }
                                                                            if (hashMap6 != null) {
                                                                            }
                                                                            c8 = c6;
                                                                            tLRPC$Message18 = tLRPC$Message32;
                                                                            videoEditedInfo5 = videoEditedInfo4;
                                                                            tLRPC$Message28 = tLRPC$Message6;
                                                                            if (tLRPC$TL_document7.access_hash == 0) {
                                                                            }
                                                                            if (delayedMessage4 == null) {
                                                                            }
                                                                            delayedMessage4.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument2;
                                                                            delayedMessage4.performMediaUpload = z10;
                                                                            if (!tLRPC$TL_document7.thumbs.isEmpty()) {
                                                                            }
                                                                            delayedMessage4.videoEditedInfo = videoEditedInfo5;
                                                                            hashMap3 = hashMap6;
                                                                            tLRPC$InputMedia2 = tLRPC$InputMedia;
                                                                            str31 = tLRPC$Message18;
                                                                        } catch (Exception e20) {
                                                                            e = e20;
                                                                            tLRPC$Message8 = tLRPC$Message32;
                                                                            tLRPC$Message28 = tLRPC$Message6;
                                                                        }
                                                                    } else {
                                                                        tLRPC$Message8 = tLRPC$Message32;
                                                                        tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                        tLRPC$Message28 = tLRPC$Message6;
                                                                        obj10 = obj5;
                                                                        boolean z28 = z5;
                                                                        TLRPC$TL_document tLRPC$TL_document8 = tLRPC$TL_document3;
                                                                        int i39 = i18;
                                                                        str29 = str;
                                                                        if (c6 == 6) {
                                                                            TLRPC$InputMedia tLRPC$TL_inputMediaContact = new TLRPC$TL_inputMediaContact();
                                                                            TLRPC$User tLRPC$User4 = tLRPC$User2;
                                                                            tLRPC$TL_inputMediaContact.phone_number = tLRPC$User4.phone;
                                                                            tLRPC$TL_inputMediaContact.first_name = tLRPC$User4.first_name;
                                                                            tLRPC$TL_inputMediaContact.last_name = tLRPC$User4.last_name;
                                                                            if (!tLRPC$User4.restriction_reason.isEmpty() && tLRPC$User4.restriction_reason.get(0).text.startsWith(str6)) {
                                                                                tLRPC$TL_inputMediaContact.vcard = tLRPC$User4.restriction_reason.get(0).text;
                                                                                tLRPC$InputMedia9 = tLRPC$TL_inputMediaContact;
                                                                            } else {
                                                                                tLRPC$TL_inputMediaContact.vcard = str49;
                                                                                tLRPC$InputMedia9 = tLRPC$TL_inputMediaContact;
                                                                            }
                                                                        } else {
                                                                            try {
                                                                                try {
                                                                                } catch (Exception e21) {
                                                                                    e = e21;
                                                                                    exc = e;
                                                                                    tLRPC$Message12 = str49;
                                                                                    sendMessagesHelper8 = sendMessagesHelper7;
                                                                                    tLRPC$Message11 = tLRPC$Message8;
                                                                                    tLRPC$Message9 = tLRPC$Message11;
                                                                                    sendMessagesHelper4 = sendMessagesHelper8;
                                                                                    tLRPC$Message10 = tLRPC$Message12;
                                                                                    messageObject2 = messageObject8;
                                                                                    tLRPC$Message3 = tLRPC$Message10;
                                                                                    sendMessagesHelper3 = sendMessagesHelper4;
                                                                                    i3 = tLRPC$Message9;
                                                                                    FileLog.e(exc);
                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                                    if (messageObject2 != null) {
                                                                                    }
                                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                                    return;
                                                                                }
                                                                            } catch (Exception e22) {
                                                                                e = e22;
                                                                                str49 = tLRPC$Message28;
                                                                                exc = e;
                                                                                tLRPC$Message12 = str49;
                                                                                sendMessagesHelper8 = sendMessagesHelper7;
                                                                                tLRPC$Message11 = tLRPC$Message8;
                                                                                tLRPC$Message9 = tLRPC$Message11;
                                                                                sendMessagesHelper4 = sendMessagesHelper8;
                                                                                tLRPC$Message10 = tLRPC$Message12;
                                                                                messageObject2 = messageObject8;
                                                                                tLRPC$Message3 = tLRPC$Message10;
                                                                                sendMessagesHelper3 = sendMessagesHelper4;
                                                                                i3 = tLRPC$Message9;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                                if (messageObject2 != null) {
                                                                                }
                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                                sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                                return;
                                                                            }
                                                                            try {
                                                                                if (c6 != 7 && c6 != '\t') {
                                                                                    if (c6 == '\b') {
                                                                                        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument3 = new TLRPC$TL_inputMediaUploadedDocument();
                                                                                        tLRPC$TL_inputMediaUploadedDocument3.mime_type = tLRPC$TL_document8.mime_type;
                                                                                        tLRPC$TL_inputMediaUploadedDocument3.attributes = tLRPC$TL_document8.attributes;
                                                                                        tLRPC$TL_inputMediaUploadedDocument3.spoiler = z28;
                                                                                        if (i39 != 0) {
                                                                                            tLRPC$TL_inputMediaUploadedDocument3.ttl_seconds = i39;
                                                                                            tLRPC$Message28.ttl = i39;
                                                                                            tLRPC$TL_inputMediaUploadedDocument3.flags |= 2;
                                                                                            tLRPC$InputMedia7 = tLRPC$TL_inputMediaUploadedDocument3;
                                                                                            tLRPC$Message28 = tLRPC$Message28;
                                                                                        } else {
                                                                                            tLRPC$InputMedia7 = tLRPC$TL_inputMediaUploadedDocument3;
                                                                                        }
                                                                                        if (tLRPC$TL_document8.access_hash == 0) {
                                                                                            tLRPC$InputMedia8 = tLRPC$InputMedia7;
                                                                                            obj13 = obj10;
                                                                                            z10 = true;
                                                                                        } else {
                                                                                            ?? tLRPC$TL_inputMediaDocument2 = new TLRPC$TL_inputMediaDocument();
                                                                                            TLRPC$TL_inputDocument tLRPC$TL_inputDocument2 = new TLRPC$TL_inputDocument();
                                                                                            tLRPC$TL_inputMediaDocument2.id = tLRPC$TL_inputDocument2;
                                                                                            obj13 = obj10;
                                                                                            tLRPC$TL_inputDocument2.id = tLRPC$TL_document8.id;
                                                                                            tLRPC$TL_inputDocument2.access_hash = tLRPC$TL_document8.access_hash;
                                                                                            byte[] bArr4 = tLRPC$TL_document8.file_reference;
                                                                                            tLRPC$TL_inputDocument2.file_reference = bArr4;
                                                                                            if (bArr4 == null) {
                                                                                                tLRPC$TL_inputDocument2.file_reference = new byte[0];
                                                                                            }
                                                                                            if (hashMap6 != null && hashMap6.containsKey("query")) {
                                                                                                tLRPC$TL_inputMediaDocument2.query = hashMap6.get("query");
                                                                                                tLRPC$TL_inputMediaDocument2.flags |= 2;
                                                                                            }
                                                                                            tLRPC$TL_inputMediaDocument2.spoiler = z28;
                                                                                            tLRPC$InputMedia8 = tLRPC$TL_inputMediaDocument2;
                                                                                            z10 = false;
                                                                                        }
                                                                                        DelayedMessage delayedMessage7 = new DelayedMessage(j12);
                                                                                        delayedMessage7.type = 3;
                                                                                        delayedMessage7.obj = messageObject8;
                                                                                        obj10 = obj13;
                                                                                        delayedMessage7.parentObject = obj10;
                                                                                        delayedMessage7.inputUploadMedia = tLRPC$InputMedia7;
                                                                                        delayedMessage7.performMediaUpload = z10;
                                                                                        delayedMessage7.scheduled = tLRPC$Message8 != null;
                                                                                        hashMap3 = hashMap6;
                                                                                        delayedMessage4 = delayedMessage7;
                                                                                        c8 = c6;
                                                                                        tLRPC$Message19 = tLRPC$Message28;
                                                                                        j19 = 0;
                                                                                        tLRPC$InputMedia3 = tLRPC$InputMedia8;
                                                                                        str32 = tLRPC$Message8;
                                                                                    } else if (c6 == '\n') {
                                                                                        ?? tLRPC$TL_inputMediaPoll = new TLRPC$TL_inputMediaPoll();
                                                                                        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll5 = tLRPC$TL_messageMediaPoll2;
                                                                                        tLRPC$TL_inputMediaPoll.poll = tLRPC$TL_messageMediaPoll5.poll;
                                                                                        if (hashMap6 != null && hashMap6.containsKey("answers")) {
                                                                                            byte[] hexToBytes = Utilities.hexToBytes(hashMap6.get("answers"));
                                                                                            if (hexToBytes.length > 0) {
                                                                                                for (int i40 = 0; i40 < hexToBytes.length; i40++) {
                                                                                                    try {
                                                                                                        tLRPC$TL_inputMediaPoll.correct_answers.add(new byte[]{hexToBytes[i40]});
                                                                                                    } catch (Exception e23) {
                                                                                                        exc = e23;
                                                                                                        messageObject2 = messageObject8;
                                                                                                        tLRPC$Message3 = tLRPC$Message28;
                                                                                                        i3 = tLRPC$Message8;
                                                                                                        sendMessagesHelper3 = sendMessagesHelper7;
                                                                                                    }
                                                                                                }
                                                                                                tLRPC$TL_inputMediaPoll.flags |= 1;
                                                                                            }
                                                                                        }
                                                                                        TLRPC$PollResults tLRPC$PollResults = tLRPC$TL_messageMediaPoll5.results;
                                                                                        tLRPC$InputMedia9 = tLRPC$TL_inputMediaPoll;
                                                                                        if (tLRPC$PollResults != null) {
                                                                                            tLRPC$InputMedia9 = tLRPC$TL_inputMediaPoll;
                                                                                            if (!TextUtils.isEmpty(tLRPC$PollResults.solution)) {
                                                                                                TLRPC$PollResults tLRPC$PollResults2 = tLRPC$TL_messageMediaPoll5.results;
                                                                                                tLRPC$TL_inputMediaPoll.solution = tLRPC$PollResults2.solution;
                                                                                                tLRPC$TL_inputMediaPoll.solution_entities = tLRPC$PollResults2.solution_entities;
                                                                                                tLRPC$TL_inputMediaPoll.flags |= 2;
                                                                                                tLRPC$InputMedia9 = tLRPC$TL_inputMediaPoll;
                                                                                            }
                                                                                        }
                                                                                    } else if (c6 == 11) {
                                                                                        ?? tLRPC$TL_inputMediaDice = new TLRPC$TL_inputMediaDice();
                                                                                        tLRPC$TL_inputMediaDice.emoticon = str15;
                                                                                        tLRPC$InputMedia9 = tLRPC$TL_inputMediaDice;
                                                                                    } else if (c6 == '\f') {
                                                                                        ?? tLRPC$TL_inputMediaStory = new TLRPC$TL_inputMediaStory();
                                                                                        TL_stories$StoryItem tL_stories$StoryItem11 = tL_stories$StoryItem7;
                                                                                        tLRPC$TL_inputMediaStory.id = tL_stories$StoryItem11.id;
                                                                                        tLRPC$TL_inputMediaStory.peer = MessagesController.getInstance(sendMessagesHelper7.currentAccount).getInputPeer(tL_stories$StoryItem11.dialogId);
                                                                                        tLRPC$InputMedia9 = tLRPC$TL_inputMediaStory;
                                                                                    } else {
                                                                                        hashMap3 = hashMap6;
                                                                                        c8 = c6;
                                                                                        tLRPC$Message19 = tLRPC$Message28;
                                                                                        j19 = 0;
                                                                                        z10 = false;
                                                                                        tLRPC$InputMedia3 = null;
                                                                                        str32 = tLRPC$Message8;
                                                                                    }
                                                                                    obj9 = obj10;
                                                                                    tLRPC$Message24 = tLRPC$Message19;
                                                                                    tLRPC$TL_inputMediaPaidMedia3 = tLRPC$InputMedia3;
                                                                                    tLRPC$Message23 = str32;
                                                                                }
                                                                                if (z6) {
                                                                                    c8 = c6;
                                                                                } else {
                                                                                    if (TextUtils.isEmpty(str7)) {
                                                                                        c8 = c6;
                                                                                    } else {
                                                                                        c8 = c6;
                                                                                        if (str7.toLowerCase().endsWith("mp4")) {
                                                                                            if (hashMap6 != null) {
                                                                                                obj11 = "forceDocument";
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    obj11 = "forceDocument";
                                                                                    tLRPC$TL_inputMediaUploadedDocument.force_file = hashMap6 == null && hashMap6.containsKey(obj11);
                                                                                    tLRPC$TL_inputMediaUploadedDocument.mime_type = tLRPC$TL_document8.mime_type;
                                                                                    tLRPC$TL_inputMediaUploadedDocument.attributes = tLRPC$TL_document8.attributes;
                                                                                    tLRPC$InputMedia4 = tLRPC$TL_inputMediaUploadedDocument;
                                                                                    tLRPC$Message28 = tLRPC$Message20;
                                                                                    if (tLRPC$TL_document8.access_hash != 0) {
                                                                                        z11 = tLRPC$InputMedia4 instanceof TLRPC$TL_inputMediaUploadedDocument;
                                                                                        tLRPC$InputMedia5 = tLRPC$InputMedia4;
                                                                                        obj12 = obj10;
                                                                                    } else {
                                                                                        ?? tLRPC$TL_inputMediaDocument3 = new TLRPC$TL_inputMediaDocument();
                                                                                        TLRPC$TL_inputDocument tLRPC$TL_inputDocument3 = new TLRPC$TL_inputDocument();
                                                                                        tLRPC$TL_inputMediaDocument3.id = tLRPC$TL_inputDocument3;
                                                                                        obj12 = obj10;
                                                                                        tLRPC$TL_inputDocument3.id = tLRPC$TL_document8.id;
                                                                                        tLRPC$TL_inputDocument3.access_hash = tLRPC$TL_document8.access_hash;
                                                                                        byte[] bArr5 = tLRPC$TL_document8.file_reference;
                                                                                        tLRPC$TL_inputDocument3.file_reference = bArr5;
                                                                                        if (bArr5 == null) {
                                                                                            tLRPC$TL_inputDocument3.file_reference = new byte[0];
                                                                                        }
                                                                                        if (hashMap6 != null && hashMap6.containsKey("query")) {
                                                                                            tLRPC$TL_inputMediaDocument3.query = hashMap6.get("query");
                                                                                            tLRPC$TL_inputMediaDocument3.flags |= 2;
                                                                                        }
                                                                                        tLRPC$TL_inputMediaDocument3.spoiler = z28;
                                                                                        z11 = false;
                                                                                        tLRPC$InputMedia5 = tLRPC$TL_inputMediaDocument3;
                                                                                    }
                                                                                    if (tLRPC$InputMedia4 == null) {
                                                                                        if (delayedMessage4 == null) {
                                                                                            delayedMessage4 = new DelayedMessage(j12);
                                                                                            delayedMessage4.type = 2;
                                                                                            delayedMessage4.obj = messageObject8;
                                                                                            delayedMessage4.originalPath = str29;
                                                                                            obj10 = obj12;
                                                                                            delayedMessage4.parentObject = obj10;
                                                                                            delayedMessage4.scheduled = tLRPC$Message8 != null;
                                                                                        } else {
                                                                                            obj10 = obj12;
                                                                                        }
                                                                                        delayedMessage4.inputUploadMedia = tLRPC$InputMedia4;
                                                                                        delayedMessage4.performMediaUpload = z11;
                                                                                        if (!tLRPC$TL_document8.thumbs.isEmpty()) {
                                                                                            TLRPC$PhotoSize tLRPC$PhotoSize2 = tLRPC$TL_document8.thumbs.get(0);
                                                                                            if (!(tLRPC$PhotoSize2 instanceof TLRPC$TL_photoStrippedSize)) {
                                                                                                delayedMessage4.photoSize = tLRPC$PhotoSize2;
                                                                                                delayedMessage4.locationParent = tLRPC$TL_document8;
                                                                                            }
                                                                                        }
                                                                                        hashMap3 = hashMap6;
                                                                                        tLRPC$InputMedia2 = tLRPC$InputMedia5;
                                                                                        z10 = z11;
                                                                                        str31 = tLRPC$Message8;
                                                                                    } else {
                                                                                        tLRPC$InputMedia6 = tLRPC$InputMedia5;
                                                                                        z10 = z11;
                                                                                        tLRPC$Message21 = tLRPC$Message28;
                                                                                        j19 = 0;
                                                                                        obj9 = obj12;
                                                                                        tLRPC$Message27 = tLRPC$Message8;
                                                                                    }
                                                                                }
                                                                                tLRPC$TL_inputMediaUploadedDocument.nosound_video = true;
                                                                                tLRPC$TL_inputMediaUploadedDocument.force_file = hashMap6 == null && hashMap6.containsKey(obj11);
                                                                                tLRPC$TL_inputMediaUploadedDocument.mime_type = tLRPC$TL_document8.mime_type;
                                                                                tLRPC$TL_inputMediaUploadedDocument.attributes = tLRPC$TL_document8.attributes;
                                                                                tLRPC$InputMedia4 = tLRPC$TL_inputMediaUploadedDocument;
                                                                                tLRPC$Message28 = tLRPC$Message20;
                                                                                if (tLRPC$TL_document8.access_hash != 0) {
                                                                                }
                                                                                if (tLRPC$InputMedia4 == null) {
                                                                                }
                                                                            } catch (Exception e24) {
                                                                                e = e24;
                                                                                tLRPC$Message28 = tLRPC$Message20;
                                                                                exc = e;
                                                                                tLRPC$Message12 = tLRPC$Message28;
                                                                                sendMessagesHelper8 = sendMessagesHelper7;
                                                                                tLRPC$Message11 = tLRPC$Message8;
                                                                                tLRPC$Message9 = tLRPC$Message11;
                                                                                sendMessagesHelper4 = sendMessagesHelper8;
                                                                                tLRPC$Message10 = tLRPC$Message12;
                                                                                messageObject2 = messageObject8;
                                                                                tLRPC$Message3 = tLRPC$Message10;
                                                                                sendMessagesHelper3 = sendMessagesHelper4;
                                                                                i3 = tLRPC$Message9;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                                if (messageObject2 != null) {
                                                                                }
                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                                sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                                return;
                                                                            }
                                                                            tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                                                                            tLRPC$TL_inputMediaUploadedDocument.spoiler = z28;
                                                                            if (i39 != 0) {
                                                                                tLRPC$TL_inputMediaUploadedDocument.ttl_seconds = i39;
                                                                                tLRPC$Message20 = tLRPC$Message28;
                                                                                tLRPC$Message20.ttl = i39;
                                                                                tLRPC$TL_inputMediaUploadedDocument.flags |= 2;
                                                                            } else {
                                                                                tLRPC$Message20 = tLRPC$Message28;
                                                                            }
                                                                            obj11 = "forceDocument";
                                                                        }
                                                                        hashMap3 = hashMap6;
                                                                        c8 = c6;
                                                                        tLRPC$Message16 = tLRPC$Message28;
                                                                        z10 = false;
                                                                        tLRPC$TL_inputMediaPaidMedia2 = tLRPC$InputMedia9;
                                                                        obj9 = obj10;
                                                                        tLRPC$Message17 = tLRPC$Message8;
                                                                        j19 = 0;
                                                                        tLRPC$Message24 = tLRPC$Message16;
                                                                        tLRPC$TL_inputMediaPaidMedia3 = tLRPC$TL_inputMediaPaidMedia2;
                                                                        tLRPC$Message23 = tLRPC$Message17;
                                                                    }
                                                                    tLRPC$Message19 = tLRPC$Message28;
                                                                    j19 = 0;
                                                                    tLRPC$InputMedia3 = tLRPC$InputMedia2;
                                                                    str32 = str31;
                                                                    obj9 = obj10;
                                                                    tLRPC$Message24 = tLRPC$Message19;
                                                                    tLRPC$TL_inputMediaPaidMedia3 = tLRPC$InputMedia3;
                                                                    tLRPC$Message23 = str32;
                                                                }
                                                                if (j18 == j19 || j11 <= j19 || tLRPC$TL_inputMediaPaidMedia3 == null) {
                                                                    j20 = j11;
                                                                } else {
                                                                    TLRPC$TL_inputMediaPaidMedia tLRPC$TL_inputMediaPaidMedia4 = new TLRPC$TL_inputMediaPaidMedia();
                                                                    j20 = j11;
                                                                    tLRPC$TL_inputMediaPaidMedia4.stars_amount = j20;
                                                                    tLRPC$TL_inputMediaPaidMedia4.extended_media.add(tLRPC$TL_inputMediaPaidMedia3);
                                                                    tLRPC$TL_inputMediaPaidMedia3 = tLRPC$TL_inputMediaPaidMedia4;
                                                                }
                                                                tLRPC$Message15 = 0;
                                                                if (j18 == 0) {
                                                                    try {
                                                                        TLObject tLObject = delayedMessage4.sendRequest;
                                                                        if (tLObject != null) {
                                                                            z12 = z10;
                                                                            tLRPC$Message26 = tLRPC$Message23;
                                                                            arrayList6 = arrayList4;
                                                                            tLRPC$Message14 = str13;
                                                                            tLRPC$TL_messages_sendMultiMedia = tLObject;
                                                                        } else if (j20 > 0) {
                                                                            ?? tLRPC$TL_messages_sendMedia2 = new TLRPC$TL_messages_sendMedia();
                                                                            tLRPC$TL_messages_sendMedia2.peer = tLRPC$InputPeer5;
                                                                            tLRPC$TL_messages_sendMedia2.silent = tLRPC$Message24.silent;
                                                                            tLRPC$Message14 = str13;
                                                                            tLRPC$TL_messages_sendMedia2.message = tLRPC$Message14;
                                                                            if (arrayList4 == null || arrayList4.isEmpty()) {
                                                                                arrayList6 = arrayList4;
                                                                            } else {
                                                                                arrayList6 = arrayList4;
                                                                                tLRPC$TL_messages_sendMedia2.entities = arrayList6;
                                                                                tLRPC$TL_messages_sendMedia2.flags |= 8;
                                                                            }
                                                                            if (tLRPC$Message24.replyStory != null) {
                                                                                tLRPC$TL_messages_sendMedia2.flags |= 1;
                                                                                tLRPC$TL_messages_sendMedia2.reply_to = sendMessagesHelper7.createReplyInput(tL_stories$StoryItem5);
                                                                            } else {
                                                                                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader10 = tLRPC$Message24.reply_to;
                                                                                if (tLRPC$MessageReplyHeader10 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                    tLRPC$TL_messages_sendMedia2.flags |= 1;
                                                                                    tLRPC$TL_messages_sendMedia2.reply_to = sendMessagesHelper7.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader10);
                                                                                }
                                                                            }
                                                                            if (tLRPC$Message23 != null) {
                                                                                TLRPC$Message tLRPC$Message35 = tLRPC$Message23;
                                                                                tLRPC$TL_messages_sendMedia2.schedule_date = tLRPC$Message35 == 1 ? 1 : 0;
                                                                                tLRPC$TL_messages_sendMedia2.flags |= 1024;
                                                                                tLRPC$Message25 = tLRPC$Message35;
                                                                            } else {
                                                                                tLRPC$Message25 = tLRPC$Message23;
                                                                            }
                                                                            TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut3 = tLRPC$Message24.quick_reply_shortcut;
                                                                            if (tLRPC$InputQuickReplyShortcut3 != null) {
                                                                                tLRPC$TL_messages_sendMedia2.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut3;
                                                                                tLRPC$TL_messages_sendMedia2.flags |= 131072;
                                                                            }
                                                                            z12 = z10;
                                                                            long j30 = tLRPC$Message24.effect;
                                                                            if (j30 != 0) {
                                                                                tLRPC$TL_messages_sendMedia2.flags |= 262144;
                                                                                tLRPC$TL_messages_sendMedia2.effect = j30;
                                                                            }
                                                                            tLRPC$TL_messages_sendMedia2.invert_media = sendMessageParams.invert_media;
                                                                            TLRPC$TL_inputMediaPaidMedia tLRPC$TL_inputMediaPaidMedia5 = new TLRPC$TL_inputMediaPaidMedia();
                                                                            tLRPC$TL_inputMediaPaidMedia5.stars_amount = j20;
                                                                            tLRPC$TL_messages_sendMedia2.random_id = tLRPC$Message24.random_id;
                                                                            tLRPC$TL_messages_sendMedia2.media = tLRPC$TL_inputMediaPaidMedia5;
                                                                            delayedMessage4.paidMedia = true;
                                                                            delayedMessage4.sendRequest = tLRPC$TL_messages_sendMedia2;
                                                                            tLRPC$TL_messages_sendMultiMedia = tLRPC$TL_messages_sendMedia2;
                                                                            tLRPC$Message26 = tLRPC$Message25;
                                                                        } else {
                                                                            z12 = z10;
                                                                            TLRPC$Message tLRPC$Message36 = tLRPC$Message23;
                                                                            arrayList6 = arrayList4;
                                                                            TL_stories$StoryItem tL_stories$StoryItem12 = tL_stories$StoryItem5;
                                                                            tLRPC$Message14 = str13;
                                                                            TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia3 = new TLRPC$TL_messages_sendMultiMedia();
                                                                            tLRPC$TL_messages_sendMultiMedia3.peer = tLRPC$InputPeer5;
                                                                            tLRPC$TL_messages_sendMultiMedia3.silent = tLRPC$Message24.silent;
                                                                            if (tLRPC$Message24.replyStory != null) {
                                                                                tLRPC$TL_messages_sendMultiMedia3.flags |= 1;
                                                                                tLRPC$TL_messages_sendMultiMedia3.reply_to = sendMessagesHelper7.createReplyInput(tL_stories$StoryItem12);
                                                                            } else {
                                                                                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader11 = tLRPC$Message24.reply_to;
                                                                                if (tLRPC$MessageReplyHeader11 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                    tLRPC$TL_messages_sendMultiMedia3.flags |= 1;
                                                                                    tLRPC$TL_messages_sendMultiMedia3.reply_to = sendMessagesHelper7.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader11);
                                                                                }
                                                                            }
                                                                            if (tLRPC$Message36 != null) {
                                                                                tLRPC$TL_messages_sendMultiMedia3.schedule_date = tLRPC$Message36 == 1 ? 1 : 0;
                                                                                tLRPC$TL_messages_sendMultiMedia3.flags |= 1024;
                                                                            }
                                                                            TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut4 = tLRPC$Message24.quick_reply_shortcut;
                                                                            if (tLRPC$InputQuickReplyShortcut4 != null) {
                                                                                tLRPC$TL_messages_sendMultiMedia3.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut4;
                                                                                tLRPC$TL_messages_sendMultiMedia3.flags |= 131072;
                                                                            }
                                                                            long j31 = tLRPC$Message24.effect;
                                                                            if (j31 != 0) {
                                                                                tLRPC$TL_messages_sendMultiMedia3.flags |= 262144;
                                                                                tLRPC$TL_messages_sendMultiMedia3.effect = j31;
                                                                            }
                                                                            tLRPC$TL_messages_sendMultiMedia3.invert_media = sendMessageParams.invert_media;
                                                                            delayedMessage4.sendRequest = tLRPC$TL_messages_sendMultiMedia3;
                                                                            tLRPC$TL_messages_sendMultiMedia = tLRPC$TL_messages_sendMultiMedia3;
                                                                            tLRPC$Message26 = tLRPC$Message36;
                                                                        }
                                                                        if (delayedMessage4.paidMedia && !delayedMessage4.messages.isEmpty()) {
                                                                            TLRPC$Message tLRPC$Message37 = delayedMessage4.messages.get(0);
                                                                            TLRPC$MessageMedia tLRPC$MessageMedia8 = tLRPC$Message24.media;
                                                                            if ((tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaPaidMedia) && !tLRPC$MessageMedia8.extended_media.isEmpty() && (tLRPC$MessageMedia8.extended_media.get(0) instanceof TLRPC$TL_messageExtendedMedia)) {
                                                                                tLRPC$MessageMedia8 = ((TLRPC$TL_messageExtendedMedia) tLRPC$MessageMedia8.extended_media.get(0)).media;
                                                                            }
                                                                            if (tLRPC$MessageMedia8 != null && (tLRPC$Message37.media instanceof TLRPC$TL_messageMediaPaidMedia)) {
                                                                                TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia2 = new TLRPC$TL_messageExtendedMedia();
                                                                                tLRPC$TL_messageExtendedMedia2.attachPath = tLRPC$Message24.attachPath;
                                                                                tLRPC$TL_messageExtendedMedia2.media = tLRPC$MessageMedia8;
                                                                                tLRPC$Message37.media.extended_media.add(tLRPC$TL_messageExtendedMedia2);
                                                                            }
                                                                        }
                                                                        delayedMessage4.messageObjects.add(messageObject8);
                                                                        delayedMessage4.messages.add(tLRPC$Message24);
                                                                        Object obj21 = obj9;
                                                                        delayedMessage4.parentObjects.add(obj21);
                                                                        delayedMessage4.locations.add(delayedMessage4.photoSize);
                                                                        delayedMessage4.videoEditedInfos.add(delayedMessage4.videoEditedInfo);
                                                                        delayedMessage4.httpLocations.add(delayedMessage4.httpLocation);
                                                                        delayedMessage4.inputMedias.add(delayedMessage4.inputUploadMedia);
                                                                        delayedMessage4.originalPaths.add(str29);
                                                                        if (tLRPC$TL_messages_sendMultiMedia instanceof TLRPC$TL_messages_sendMultiMedia) {
                                                                            TLRPC$TL_inputSingleMedia tLRPC$TL_inputSingleMedia = new TLRPC$TL_inputSingleMedia();
                                                                            tLRPC$TL_inputSingleMedia.random_id = tLRPC$Message24.random_id;
                                                                            tLRPC$TL_inputSingleMedia.media = tLRPC$TL_inputMediaPaidMedia3;
                                                                            tLRPC$TL_inputSingleMedia.message = tLRPC$Message14;
                                                                            if (arrayList6 != null && !arrayList6.isEmpty()) {
                                                                                tLRPC$TL_inputSingleMedia.entities = arrayList6;
                                                                                tLRPC$TL_inputSingleMedia.flags |= 1;
                                                                            }
                                                                            tLRPC$TL_messages_sendMultiMedia.multi_media.add(tLRPC$TL_inputSingleMedia);
                                                                        } else if ((tLRPC$TL_messages_sendMultiMedia instanceof TLRPC$TL_messages_sendMedia) && (((TLRPC$TL_messages_sendMedia) tLRPC$TL_messages_sendMultiMedia).media instanceof TLRPC$TL_inputMediaPaidMedia)) {
                                                                            ((TLRPC$TL_inputMediaPaidMedia) ((TLRPC$TL_messages_sendMedia) tLRPC$TL_messages_sendMultiMedia).media).extended_media.add(tLRPC$TL_inputMediaPaidMedia3);
                                                                        }
                                                                        tLRPC$TL_messages_sendMultiMedia2 = tLRPC$TL_messages_sendMultiMedia;
                                                                        obj14 = obj21;
                                                                        tLRPC$Message15 = tLRPC$Message26;
                                                                    } catch (Exception e25) {
                                                                        e = e25;
                                                                        tLRPC$Message15 = tLRPC$Message23;
                                                                        exc = e;
                                                                        tLRPC$Message9 = tLRPC$Message15;
                                                                        tLRPC$Message10 = tLRPC$Message24;
                                                                        sendMessagesHelper4 = sendMessagesHelper7;
                                                                        messageObject2 = messageObject8;
                                                                        tLRPC$Message3 = tLRPC$Message10;
                                                                        sendMessagesHelper3 = sendMessagesHelper4;
                                                                        i3 = tLRPC$Message9;
                                                                        FileLog.e(exc);
                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                        if (messageObject2 != null) {
                                                                        }
                                                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                        sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                        return;
                                                                    }
                                                                } else {
                                                                    z12 = z10;
                                                                    Object obj22 = obj9;
                                                                    tLRPC$Message15 = tLRPC$Message23;
                                                                    ArrayList<TLRPC$MessageEntity> arrayList14 = arrayList4;
                                                                    TL_stories$StoryItem tL_stories$StoryItem13 = tL_stories$StoryItem5;
                                                                    TLRPC$InputPeer tLRPC$InputPeer8 = tLRPC$InputPeer5;
                                                                    tLRPC$Message14 = str13;
                                                                    try {
                                                                        ?? tLRPC$TL_messages_sendMedia3 = new TLRPC$TL_messages_sendMedia();
                                                                        tLRPC$TL_messages_sendMedia3.peer = tLRPC$InputPeer8;
                                                                        tLRPC$TL_messages_sendMedia3.silent = tLRPC$Message24.silent;
                                                                        if (messageObject18 != null) {
                                                                            messageObject18.getId();
                                                                        }
                                                                        if (tL_stories$StoryItem13 != null) {
                                                                            tLRPC$TL_messages_sendMedia3.reply_to = sendMessagesHelper7.createReplyInput(tL_stories$StoryItem13);
                                                                            tLRPC$TL_messages_sendMedia3.flags |= 1;
                                                                        } else {
                                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader12 = tLRPC$Message24.reply_to;
                                                                            if (tLRPC$MessageReplyHeader12 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                tLRPC$TL_messages_sendMedia3.flags |= 1;
                                                                                tLRPC$TL_messages_sendMedia3.reply_to = sendMessagesHelper7.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader12);
                                                                            }
                                                                        }
                                                                        obj14 = obj22;
                                                                        tLRPC$TL_messages_sendMedia3.random_id = tLRPC$Message24.random_id;
                                                                        if (tLRPC$Message24.from_id != null) {
                                                                            tLRPC$TL_messages_sendMedia3.send_as = getMessagesController().getInputPeer(tLRPC$Message24.from_id);
                                                                        }
                                                                        tLRPC$TL_messages_sendMedia3.media = tLRPC$TL_inputMediaPaidMedia3;
                                                                        tLRPC$TL_messages_sendMedia3.message = tLRPC$Message14;
                                                                        if (arrayList14 != null && !arrayList14.isEmpty()) {
                                                                            tLRPC$TL_messages_sendMedia3.entities = arrayList14;
                                                                            tLRPC$TL_messages_sendMedia3.flags |= 8;
                                                                        }
                                                                        if (tLRPC$Message15 != 0) {
                                                                            tLRPC$TL_messages_sendMedia3.schedule_date = tLRPC$Message15;
                                                                            tLRPC$TL_messages_sendMedia3.flags |= 1024;
                                                                        }
                                                                        if (z18 && SharedConfig.updateStickersOrderOnSend) {
                                                                            tLRPC$TL_messages_sendMedia3.update_stickersets_order = true;
                                                                        }
                                                                        TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut5 = tLRPC$Message24.quick_reply_shortcut;
                                                                        if (tLRPC$InputQuickReplyShortcut5 != null) {
                                                                            tLRPC$TL_messages_sendMedia3.flags |= 131072;
                                                                            tLRPC$TL_messages_sendMedia3.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut5;
                                                                        }
                                                                        long j32 = sendMessageParams.effect_id;
                                                                        if (j32 != 0) {
                                                                            tLRPC$TL_messages_sendMedia3.flags |= 262144;
                                                                            tLRPC$TL_messages_sendMedia3.effect = j32;
                                                                        }
                                                                        tLRPC$TL_messages_sendMedia3.invert_media = tLRPC$Message24.invert_media;
                                                                        if (delayedMessage4 != null) {
                                                                            delayedMessage4.sendRequest = tLRPC$TL_messages_sendMedia3;
                                                                        }
                                                                        tLRPC$TL_messages_sendMultiMedia2 = tLRPC$TL_messages_sendMedia3;
                                                                        tLRPC$Message15 = tLRPC$Message15;
                                                                    } catch (Exception e26) {
                                                                        e = e26;
                                                                        tLRPC$Message14 = tLRPC$Message24;
                                                                        exc = e;
                                                                        sendMessagesHelper14 = sendMessagesHelper7;
                                                                        str33 = tLRPC$Message15;
                                                                        tLRPC$Message22 = tLRPC$Message14;
                                                                        TLRPC$InputPeer tLRPC$InputPeer72 = tLRPC$Message22;
                                                                        tLRPC$Message9 = str33;
                                                                        tLRPC$Message10 = tLRPC$InputPeer72;
                                                                        sendMessagesHelper4 = sendMessagesHelper14;
                                                                        messageObject2 = messageObject8;
                                                                        tLRPC$Message3 = tLRPC$Message10;
                                                                        sendMessagesHelper3 = sendMessagesHelper4;
                                                                        i3 = tLRPC$Message9;
                                                                        FileLog.e(exc);
                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                        if (messageObject2 != null) {
                                                                        }
                                                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                        sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                        return;
                                                                    }
                                                                }
                                                                if (j18 == 0) {
                                                                    sendMessagesHelper7.performSendDelayedMessage(delayedMessage4);
                                                                    return;
                                                                }
                                                                char c12 = c8;
                                                                try {
                                                                    if (c12 == 1) {
                                                                        tLRPC$Message14 = tLRPC$Message24;
                                                                        performSendMessageRequest(tLRPC$TL_messages_sendMultiMedia2, messageObject8, null, delayedMessage4, obj14, hashMap3, tLRPC$Message15 != 0);
                                                                    } else {
                                                                        tLRPC$Message14 = tLRPC$Message24;
                                                                        HashMap<String, String> hashMap7 = hashMap3;
                                                                        Object obj23 = obj14;
                                                                        if (c12 == 2) {
                                                                            if (z12) {
                                                                                sendMessagesHelper7.performSendDelayedMessage(delayedMessage4);
                                                                            } else {
                                                                                try {
                                                                                    performSendMessageRequest(tLRPC$TL_messages_sendMultiMedia2, messageObject8, str29, null, true, delayedMessage4, obj23, hashMap7, tLRPC$Message15 != 0);
                                                                                    return;
                                                                                } catch (Exception e27) {
                                                                                    exc = e27;
                                                                                    sendMessagesHelper14 = sendMessagesHelper7;
                                                                                    str33 = tLRPC$Message15;
                                                                                    tLRPC$Message22 = tLRPC$Message14;
                                                                                    TLRPC$InputPeer tLRPC$InputPeer722 = tLRPC$Message22;
                                                                                    tLRPC$Message9 = str33;
                                                                                    tLRPC$Message10 = tLRPC$InputPeer722;
                                                                                    sendMessagesHelper4 = sendMessagesHelper14;
                                                                                    messageObject2 = messageObject8;
                                                                                    tLRPC$Message3 = tLRPC$Message10;
                                                                                    sendMessagesHelper3 = sendMessagesHelper4;
                                                                                    i3 = tLRPC$Message9;
                                                                                    FileLog.e(exc);
                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                                    if (messageObject2 != null) {
                                                                                    }
                                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                                    return;
                                                                                }
                                                                            }
                                                                        } else if (c12 == 3) {
                                                                            if (z12) {
                                                                                sendMessagesHelper7.performSendDelayedMessage(delayedMessage4);
                                                                            } else {
                                                                                performSendMessageRequest(tLRPC$TL_messages_sendMultiMedia2, messageObject8, str29, delayedMessage4, obj23, hashMap7, tLRPC$Message15 != 0);
                                                                            }
                                                                        } else if (c12 == 6) {
                                                                            performSendMessageRequest(tLRPC$TL_messages_sendMultiMedia2, messageObject8, str29, delayedMessage4, obj23, hashMap7, tLRPC$Message15 != 0);
                                                                        } else if (c12 == 7) {
                                                                            if (z12 && delayedMessage4 != null) {
                                                                                sendMessagesHelper7.performSendDelayedMessage(delayedMessage4);
                                                                            } else {
                                                                                performSendMessageRequest(tLRPC$TL_messages_sendMultiMedia2, messageObject8, str29, delayedMessage4, obj23, hashMap7, tLRPC$Message15 != 0);
                                                                            }
                                                                        } else if (c12 == '\b') {
                                                                            if (z12) {
                                                                                sendMessagesHelper7.performSendDelayedMessage(delayedMessage4);
                                                                            } else {
                                                                                performSendMessageRequest(tLRPC$TL_messages_sendMultiMedia2, messageObject8, str29, delayedMessage4, obj23, hashMap7, tLRPC$Message15 != 0);
                                                                            }
                                                                        } else if (c12 != '\n' && c12 != 11 && c12 != '\f') {
                                                                            return;
                                                                        } else {
                                                                            performSendMessageRequest(tLRPC$TL_messages_sendMultiMedia2, messageObject8, str29, delayedMessage4, obj23, hashMap7, tLRPC$Message15 != 0);
                                                                        }
                                                                    }
                                                                    return;
                                                                } catch (Exception e28) {
                                                                    e = e28;
                                                                    exc = e;
                                                                    sendMessagesHelper14 = sendMessagesHelper7;
                                                                    str33 = tLRPC$Message15;
                                                                    tLRPC$Message22 = tLRPC$Message14;
                                                                    TLRPC$InputPeer tLRPC$InputPeer7222 = tLRPC$Message22;
                                                                    tLRPC$Message9 = str33;
                                                                    tLRPC$Message10 = tLRPC$InputPeer7222;
                                                                    sendMessagesHelper4 = sendMessagesHelper14;
                                                                    messageObject2 = messageObject8;
                                                                    tLRPC$Message3 = tLRPC$Message10;
                                                                    sendMessagesHelper3 = sendMessagesHelper4;
                                                                    i3 = tLRPC$Message9;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                    if (messageObject2 != null) {
                                                                    }
                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                    return;
                                                                }
                                                            }
                                                            TLRPC$MessageMedia tLRPC$MessageMedia9 = tLRPC$MessageMedia;
                                                            if (tLRPC$MessageMedia9 instanceof TLRPC$TL_messageMediaVenue) {
                                                                TLRPC$InputMedia tLRPC$TL_inputMediaVenue = new TLRPC$TL_inputMediaVenue();
                                                                tLRPC$TL_inputMediaVenue.address = tLRPC$MessageMedia9.address;
                                                                tLRPC$TL_inputMediaVenue.title = tLRPC$MessageMedia9.title;
                                                                tLRPC$TL_inputMediaVenue.provider = tLRPC$MessageMedia9.provider;
                                                                tLRPC$TL_inputMediaVenue.venue_id = tLRPC$MessageMedia9.venue_id;
                                                                tLRPC$TL_inputMediaVenue.venue_type = tLRPC$Message8;
                                                                tLRPC$InputMedia10 = tLRPC$TL_inputMediaVenue;
                                                            } else if (tLRPC$MessageMedia9 instanceof TLRPC$TL_messageMediaGeoLive) {
                                                                TLRPC$InputMedia tLRPC$TL_inputMediaGeoLive = new TLRPC$TL_inputMediaGeoLive();
                                                                tLRPC$TL_inputMediaGeoLive.period = tLRPC$MessageMedia9.period;
                                                                int i41 = tLRPC$TL_inputMediaGeoLive.flags;
                                                                tLRPC$TL_inputMediaGeoLive.flags = i41 | 2;
                                                                int i42 = tLRPC$MessageMedia9.heading;
                                                                if (i42 != 0) {
                                                                    tLRPC$TL_inputMediaGeoLive.heading = i42;
                                                                    tLRPC$TL_inputMediaGeoLive.flags = i41 | 6;
                                                                }
                                                                int i43 = tLRPC$MessageMedia9.proximity_notification_radius;
                                                                tLRPC$InputMedia10 = tLRPC$TL_inputMediaGeoLive;
                                                                if (i43 != 0) {
                                                                    tLRPC$TL_inputMediaGeoLive.proximity_notification_radius = i43;
                                                                    tLRPC$TL_inputMediaGeoLive.flags |= 8;
                                                                    tLRPC$InputMedia10 = tLRPC$TL_inputMediaGeoLive;
                                                                }
                                                            } else {
                                                                tLRPC$InputMedia10 = new TLRPC$TL_inputMediaGeoPoint();
                                                            }
                                                            TLRPC$TL_inputGeoPoint tLRPC$TL_inputGeoPoint = new TLRPC$TL_inputGeoPoint();
                                                            tLRPC$InputMedia10.geo_point = tLRPC$TL_inputGeoPoint;
                                                            TLRPC$GeoPoint tLRPC$GeoPoint = tLRPC$MessageMedia9.geo;
                                                            tL_stories$StoryItem5 = tL_stories$StoryItem10;
                                                            j18 = j10;
                                                            tLRPC$TL_inputGeoPoint.lat = tLRPC$GeoPoint.lat;
                                                            tLRPC$TL_inputGeoPoint._long = tLRPC$GeoPoint._long;
                                                            tLRPC$InputMedia6 = tLRPC$InputMedia10;
                                                            c8 = c6;
                                                            tLRPC$Message27 = tLRPC$Message32;
                                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                            tLRPC$Message21 = tLRPC$Message6;
                                                            obj9 = obj5;
                                                            str29 = str;
                                                            j19 = 0;
                                                            z10 = false;
                                                            if (j18 == 0) {
                                                            }
                                                            if (j18 == 0) {
                                                            }
                                                        } catch (Exception e29) {
                                                            e = e29;
                                                        }
                                                        hashMap3 = hashMap6;
                                                        tLRPC$Message24 = tLRPC$Message21;
                                                        tLRPC$TL_inputMediaPaidMedia3 = tLRPC$InputMedia6;
                                                        tLRPC$Message23 = tLRPC$Message27;
                                                        if (j18 == j19) {
                                                        }
                                                        j20 = j11;
                                                        tLRPC$Message15 = 0;
                                                    } else {
                                                        long j33 = j12;
                                                        long j34 = j10;
                                                        TLRPC$Message tLRPC$Message38 = tLRPC$Message6;
                                                        Object obj24 = obj5;
                                                        VideoEditedInfo videoEditedInfo8 = videoEditedInfo3;
                                                        TLRPC$MessageMedia tLRPC$MessageMedia10 = tLRPC$MessageMedia;
                                                        TLRPC$User tLRPC$User5 = tLRPC$User2;
                                                        String str53 = str4;
                                                        TLRPC$TL_document tLRPC$TL_document9 = tLRPC$TL_document3;
                                                        String str54 = tLRPC$Message8;
                                                        ArrayList<TLRPC$MessageEntity> arrayList15 = arrayList4;
                                                        String str55 = str13;
                                                        tLRPC$Message8 = tLRPC$Message32;
                                                        String str56 = str7;
                                                        TLRPC$TL_photo tLRPC$TL_photo8 = tLRPC$TL_photo2;
                                                        try {
                                                            if (AndroidUtilities.getPeerLayerVersion(tLRPC$EncryptedChat.layer) >= 73) {
                                                                try {
                                                                    tLRPC$TL_decryptedMessage = new TLRPC$TL_decryptedMessage();
                                                                    if (j34 != 0) {
                                                                        delayedMessage5 = delayedMessage4;
                                                                        tLRPC$TL_decryptedMessage.grouped_id = j34;
                                                                        tLRPC$TL_decryptedMessage.flags |= 131072;
                                                                    } else {
                                                                        delayedMessage5 = delayedMessage4;
                                                                    }
                                                                } catch (Exception e30) {
                                                                    e = e30;
                                                                    sendMessagesHelper7 = this;
                                                                    exc = e;
                                                                    tLRPC$Message12 = tLRPC$Message38;
                                                                    sendMessagesHelper8 = sendMessagesHelper7;
                                                                    tLRPC$Message11 = tLRPC$Message8;
                                                                    tLRPC$Message9 = tLRPC$Message11;
                                                                    sendMessagesHelper4 = sendMessagesHelper8;
                                                                    tLRPC$Message10 = tLRPC$Message12;
                                                                    messageObject2 = messageObject8;
                                                                    tLRPC$Message3 = tLRPC$Message10;
                                                                    sendMessagesHelper3 = sendMessagesHelper4;
                                                                    i3 = tLRPC$Message9;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                    if (messageObject2 != null) {
                                                                    }
                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                    return;
                                                                }
                                                            } else {
                                                                delayedMessage5 = delayedMessage4;
                                                                try {
                                                                    tLRPC$TL_decryptedMessage = new TLRPC$TL_decryptedMessage_layer45();
                                                                } catch (Exception e31) {
                                                                    e = e31;
                                                                    sendMessagesHelper7 = this;
                                                                    tLRPC$InputPeer4 = tLRPC$Message38;
                                                                    exc = e;
                                                                    sendMessagesHelper8 = sendMessagesHelper7;
                                                                    tLRPC$Message12 = tLRPC$InputPeer4;
                                                                    tLRPC$Message11 = tLRPC$Message8;
                                                                    tLRPC$Message9 = tLRPC$Message11;
                                                                    sendMessagesHelper4 = sendMessagesHelper8;
                                                                    tLRPC$Message10 = tLRPC$Message12;
                                                                    messageObject2 = messageObject8;
                                                                    tLRPC$Message3 = tLRPC$Message10;
                                                                    sendMessagesHelper3 = sendMessagesHelper4;
                                                                    i3 = tLRPC$Message9;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                    if (messageObject2 != null) {
                                                                    }
                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                    return;
                                                                }
                                                            }
                                                            tLRPC$TL_decryptedMessage.ttl = tLRPC$Message38.ttl;
                                                            if (arrayList15 != null && !arrayList15.isEmpty()) {
                                                                tLRPC$TL_decryptedMessage.entities = arrayList15;
                                                                tLRPC$TL_decryptedMessage.flags |= 128;
                                                            }
                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader13 = tLRPC$Message38.reply_to;
                                                            if (tLRPC$MessageReplyHeader13 != null) {
                                                                long j35 = tLRPC$MessageReplyHeader13.reply_to_random_id;
                                                                if (j35 != 0) {
                                                                    tLRPC$TL_decryptedMessage.reply_to_random_id = j35;
                                                                    tLRPC$TL_decryptedMessage.flags |= 8;
                                                                }
                                                            }
                                                            tLRPC$TL_decryptedMessage.silent = tLRPC$Message38.silent;
                                                            tLRPC$TL_decryptedMessage.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                            if (hashMap6 != null) {
                                                                Object obj25 = obj16;
                                                                if (hashMap6.get(obj25) != null) {
                                                                    tLRPC$TL_decryptedMessage.via_bot_name = hashMap6.get(obj25);
                                                                    tLRPC$TL_decryptedMessage.flags |= 2048;
                                                                }
                                                            }
                                                            tLRPC$TL_decryptedMessage.random_id = tLRPC$Message38.random_id;
                                                            tLRPC$TL_decryptedMessage.message = str54;
                                                            if (c6 == 1) {
                                                                if (tLRPC$MessageMedia10 instanceof TLRPC$TL_messageMediaVenue) {
                                                                    TLRPC$TL_decryptedMessageMediaVenue tLRPC$TL_decryptedMessageMediaVenue = new TLRPC$TL_decryptedMessageMediaVenue();
                                                                    tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaVenue;
                                                                    tLRPC$TL_decryptedMessageMediaVenue.address = tLRPC$MessageMedia10.address;
                                                                    tLRPC$TL_decryptedMessageMediaVenue.title = tLRPC$MessageMedia10.title;
                                                                    tLRPC$TL_decryptedMessageMediaVenue.provider = tLRPC$MessageMedia10.provider;
                                                                    tLRPC$TL_decryptedMessageMediaVenue.venue_id = tLRPC$MessageMedia10.venue_id;
                                                                } else {
                                                                    tLRPC$TL_decryptedMessage.media = new TLRPC$TL_decryptedMessageMediaGeoPoint();
                                                                }
                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                                                                TLRPC$GeoPoint tLRPC$GeoPoint2 = tLRPC$MessageMedia10.geo;
                                                                tLRPC$DecryptedMessageMedia.lat = tLRPC$GeoPoint2.lat;
                                                                tLRPC$DecryptedMessageMedia._long = tLRPC$GeoPoint2._long;
                                                                getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject8.messageOwner, tLRPC$EncryptedChat, null, null, messageObject8);
                                                                sendMessagesHelper13 = this;
                                                                tLRPC$Message13 = tLRPC$Message38;
                                                                j14 = j34;
                                                                j15 = j33;
                                                                str28 = str;
                                                                c7 = c6;
                                                            } else {
                                                                try {
                                                                    if (c6 == 2) {
                                                                        sendMessagesHelper7 = this;
                                                                        tLRPC$Message13 = tLRPC$Message38;
                                                                        j14 = j34;
                                                                        str27 = str53;
                                                                        str28 = str;
                                                                        obj7 = obj;
                                                                        tLRPC$TL_photo3 = tLRPC$TL_photo8;
                                                                        c7 = c6;
                                                                        hashMap = hashMap6;
                                                                        j15 = j33;
                                                                        obj8 = obj24;
                                                                    } else if (c6 != '\t' || tLRPC$TL_photo8 == null) {
                                                                        if (c6 == 3) {
                                                                            try {
                                                                                sendMessagesHelper7 = this;
                                                                                j14 = j34;
                                                                            } catch (Exception e32) {
                                                                                e = e32;
                                                                                sendMessagesHelper7 = this;
                                                                            }
                                                                            try {
                                                                                TLRPC$PhotoSize thumbForSecretChat = sendMessagesHelper7.getThumbForSecretChat(tLRPC$TL_document9.thumbs);
                                                                                ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat);
                                                                                if (MessageObject.isNewGifDocument(tLRPC$TL_document9) || MessageObject.isRoundVideoDocument(tLRPC$TL_document9)) {
                                                                                    tLRPC$Message13 = tLRPC$Message38;
                                                                                    TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                    tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument;
                                                                                    tLRPC$TL_decryptedMessageMediaDocument.attributes = tLRPC$TL_document9.attributes;
                                                                                    if (thumbForSecretChat != null && (bArr = thumbForSecretChat.bytes) != null) {
                                                                                        tLRPC$TL_decryptedMessageMediaDocument.thumb = bArr;
                                                                                    } else {
                                                                                        tLRPC$TL_decryptedMessageMediaDocument.thumb = new byte[0];
                                                                                    }
                                                                                } else {
                                                                                    TLRPC$TL_decryptedMessageMediaVideo tLRPC$TL_decryptedMessageMediaVideo = new TLRPC$TL_decryptedMessageMediaVideo();
                                                                                    tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaVideo;
                                                                                    if (thumbForSecretChat != null) {
                                                                                        try {
                                                                                            byte[] bArr6 = thumbForSecretChat.bytes;
                                                                                            if (bArr6 != null) {
                                                                                                tLRPC$TL_decryptedMessageMediaVideo.thumb = bArr6;
                                                                                                tLRPC$Message13 = tLRPC$Message38;
                                                                                            }
                                                                                        } catch (Exception e33) {
                                                                                            e = e33;
                                                                                            exc = e;
                                                                                            tLRPC$Message12 = tLRPC$Message38;
                                                                                            sendMessagesHelper8 = sendMessagesHelper7;
                                                                                            tLRPC$Message11 = tLRPC$Message8;
                                                                                            tLRPC$Message9 = tLRPC$Message11;
                                                                                            sendMessagesHelper4 = sendMessagesHelper8;
                                                                                            tLRPC$Message10 = tLRPC$Message12;
                                                                                            messageObject2 = messageObject8;
                                                                                            tLRPC$Message3 = tLRPC$Message10;
                                                                                            sendMessagesHelper3 = sendMessagesHelper4;
                                                                                            i3 = tLRPC$Message9;
                                                                                            FileLog.e(exc);
                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                                            if (messageObject2 != null) {
                                                                                            }
                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                                            sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                                            return;
                                                                                        }
                                                                                    }
                                                                                    tLRPC$Message13 = tLRPC$Message38;
                                                                                    tLRPC$TL_decryptedMessageMediaVideo.thumb = new byte[0];
                                                                                }
                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia2 = tLRPC$TL_decryptedMessage.media;
                                                                                tLRPC$DecryptedMessageMedia2.caption = str55;
                                                                                tLRPC$DecryptedMessageMedia2.mime_type = "video/mp4";
                                                                                tLRPC$DecryptedMessageMedia2.size = tLRPC$TL_document9.size;
                                                                                int i44 = 0;
                                                                                while (true) {
                                                                                    if (i44 >= tLRPC$TL_document9.attributes.size()) {
                                                                                        break;
                                                                                    }
                                                                                    TLRPC$DocumentAttribute tLRPC$DocumentAttribute4 = tLRPC$TL_document9.attributes.get(i44);
                                                                                    if (tLRPC$DocumentAttribute4 instanceof TLRPC$TL_documentAttributeVideo) {
                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia3 = tLRPC$TL_decryptedMessage.media;
                                                                                        tLRPC$DecryptedMessageMedia3.w = tLRPC$DocumentAttribute4.w;
                                                                                        tLRPC$DecryptedMessageMedia3.h = tLRPC$DocumentAttribute4.h;
                                                                                        tLRPC$DecryptedMessageMedia3.duration = (int) tLRPC$DocumentAttribute4.duration;
                                                                                        break;
                                                                                    }
                                                                                    i44++;
                                                                                }
                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia4 = tLRPC$TL_decryptedMessage.media;
                                                                                tLRPC$DecryptedMessageMedia4.thumb_h = thumbForSecretChat.h;
                                                                                tLRPC$DecryptedMessageMedia4.thumb_w = thumbForSecretChat.w;
                                                                                if (tLRPC$TL_document9.key != null && j14 == 0) {
                                                                                    TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                        @Override // org.telegram.tgnet.TLObject
                                                                                        public void readParams(AbstractSerializedData abstractSerializedData, boolean z29) {
                                                                                            this.id = abstractSerializedData.readInt64(z29);
                                                                                            this.access_hash = abstractSerializedData.readInt64(z29);
                                                                                        }

                                                                                        @Override // org.telegram.tgnet.TLObject
                                                                                        public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                            abstractSerializedData.writeInt32(1511503333);
                                                                                            abstractSerializedData.writeInt64(this.id);
                                                                                            abstractSerializedData.writeInt64(this.access_hash);
                                                                                        }
                                                                                    };
                                                                                    tLRPC$InputEncryptedFile.id = tLRPC$TL_document9.id;
                                                                                    tLRPC$InputEncryptedFile.access_hash = tLRPC$TL_document9.access_hash;
                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia5 = tLRPC$TL_decryptedMessage.media;
                                                                                    tLRPC$DecryptedMessageMedia5.key = tLRPC$TL_document9.key;
                                                                                    tLRPC$DecryptedMessageMedia5.iv = tLRPC$TL_document9.iv;
                                                                                    getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject8.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile, null, messageObject8);
                                                                                    c7 = c6;
                                                                                    j15 = j33;
                                                                                    sendMessagesHelper11 = sendMessagesHelper7;
                                                                                    str28 = str;
                                                                                    sendMessagesHelper13 = sendMessagesHelper11;
                                                                                }
                                                                                long j36 = j33;
                                                                                String str57 = str;
                                                                                delayedMessage6 = delayedMessage5;
                                                                                delayedMessage6.videoEditedInfo = videoEditedInfo8;
                                                                                if (j14 == 0) {
                                                                                    sendMessagesHelper7.performSendDelayedMessage(delayedMessage6);
                                                                                }
                                                                                c7 = c6;
                                                                                str28 = str57;
                                                                                j15 = j36;
                                                                                sendMessagesHelper12 = sendMessagesHelper7;
                                                                                j16 = 0;
                                                                                sendMessagesHelper7 = sendMessagesHelper12;
                                                                            } catch (Exception e34) {
                                                                                e = e34;
                                                                                tLRPC$Message28 = tLRPC$Message38;
                                                                                exc = e;
                                                                                tLRPC$Message12 = tLRPC$Message28;
                                                                                sendMessagesHelper8 = sendMessagesHelper7;
                                                                                tLRPC$Message11 = tLRPC$Message8;
                                                                                tLRPC$Message9 = tLRPC$Message11;
                                                                                sendMessagesHelper4 = sendMessagesHelper8;
                                                                                tLRPC$Message10 = tLRPC$Message12;
                                                                                messageObject2 = messageObject8;
                                                                                tLRPC$Message3 = tLRPC$Message10;
                                                                                sendMessagesHelper3 = sendMessagesHelper4;
                                                                                i3 = tLRPC$Message9;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                                if (messageObject2 != null) {
                                                                                }
                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                                sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                                return;
                                                                            }
                                                                        } else {
                                                                            SendMessagesHelper sendMessagesHelper16 = this;
                                                                            tLRPC$Message13 = tLRPC$Message38;
                                                                            j14 = j34;
                                                                            j15 = j33;
                                                                            String str58 = str;
                                                                            if (c6 == 6) {
                                                                                TLRPC$TL_decryptedMessageMediaContact tLRPC$TL_decryptedMessageMediaContact = new TLRPC$TL_decryptedMessageMediaContact();
                                                                                tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaContact;
                                                                                tLRPC$TL_decryptedMessageMediaContact.phone_number = tLRPC$User5.phone;
                                                                                tLRPC$TL_decryptedMessageMediaContact.first_name = tLRPC$User5.first_name;
                                                                                tLRPC$TL_decryptedMessageMediaContact.last_name = tLRPC$User5.last_name;
                                                                                tLRPC$TL_decryptedMessageMediaContact.user_id = tLRPC$User5.id;
                                                                                getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject8.messageOwner, tLRPC$EncryptedChat, null, null, messageObject8);
                                                                            } else {
                                                                                if (c6 == 7 || (c6 == '\t' && tLRPC$TL_document9 != null)) {
                                                                                    c7 = c6;
                                                                                    str = str58;
                                                                                    if (tLRPC$TL_document9.access_hash != 0 && (MessageObject.isStickerDocument(tLRPC$TL_document9) || MessageObject.isAnimatedStickerDocument(tLRPC$TL_document9, true))) {
                                                                                        TLRPC$TL_decryptedMessageMediaExternalDocument tLRPC$TL_decryptedMessageMediaExternalDocument = new TLRPC$TL_decryptedMessageMediaExternalDocument();
                                                                                        tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaExternalDocument;
                                                                                        tLRPC$TL_decryptedMessageMediaExternalDocument.id = tLRPC$TL_document9.id;
                                                                                        tLRPC$TL_decryptedMessageMediaExternalDocument.date = tLRPC$TL_document9.date;
                                                                                        tLRPC$TL_decryptedMessageMediaExternalDocument.access_hash = tLRPC$TL_document9.access_hash;
                                                                                        tLRPC$TL_decryptedMessageMediaExternalDocument.mime_type = tLRPC$TL_document9.mime_type;
                                                                                        tLRPC$TL_decryptedMessageMediaExternalDocument.size = tLRPC$TL_document9.size;
                                                                                        tLRPC$TL_decryptedMessageMediaExternalDocument.dc_id = tLRPC$TL_document9.dc_id;
                                                                                        tLRPC$TL_decryptedMessageMediaExternalDocument.attributes = tLRPC$TL_document9.attributes;
                                                                                        TLRPC$PhotoSize thumbForSecretChat2 = sendMessagesHelper16.getThumbForSecretChat(tLRPC$TL_document9.thumbs);
                                                                                        if (thumbForSecretChat2 != null) {
                                                                                            ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb = thumbForSecretChat2;
                                                                                        } else {
                                                                                            ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb = new TLRPC$TL_photoSizeEmpty();
                                                                                            ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb.type = "s";
                                                                                        }
                                                                                        if (delayedMessage5 != null && delayedMessage5.type == 5) {
                                                                                            delayedMessage5.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                            delayedMessage5.obj = messageObject8;
                                                                                            sendMessagesHelper16.performSendDelayedMessage(delayedMessage5);
                                                                                            sendMessagesHelper11 = sendMessagesHelper16;
                                                                                        } else {
                                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject8.messageOwner, tLRPC$EncryptedChat, null, null, messageObject8);
                                                                                            sendMessagesHelper11 = sendMessagesHelper16;
                                                                                        }
                                                                                    } else {
                                                                                        TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument2 = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                        tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument2;
                                                                                        tLRPC$TL_decryptedMessageMediaDocument2.attributes = tLRPC$TL_document9.attributes;
                                                                                        tLRPC$TL_decryptedMessageMediaDocument2.caption = str55;
                                                                                        TLRPC$PhotoSize thumbForSecretChat3 = sendMessagesHelper16.getThumbForSecretChat(tLRPC$TL_document9.thumbs);
                                                                                        if (thumbForSecretChat3 != null) {
                                                                                            if (thumbForSecretChat3 instanceof TLRPC$TL_photoStrippedSize) {
                                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia6 = tLRPC$TL_decryptedMessage.media;
                                                                                                ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia6).thumb = thumbForSecretChat3.bytes;
                                                                                                tLRPC$DecryptedMessageMedia6.thumb_h = thumbForSecretChat3.h;
                                                                                                tLRPC$DecryptedMessageMedia6.thumb_w = thumbForSecretChat3.w;
                                                                                            } else {
                                                                                                ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat3);
                                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia7 = tLRPC$TL_decryptedMessage.media;
                                                                                                ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia7).thumb = thumbForSecretChat3.bytes;
                                                                                                tLRPC$DecryptedMessageMedia7.thumb_h = thumbForSecretChat3.h;
                                                                                                tLRPC$DecryptedMessageMedia7.thumb_w = thumbForSecretChat3.w;
                                                                                            }
                                                                                        } else {
                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia8 = tLRPC$TL_decryptedMessage.media;
                                                                                            ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia8).thumb = new byte[0];
                                                                                            tLRPC$DecryptedMessageMedia8.thumb_h = 0;
                                                                                            tLRPC$DecryptedMessageMedia8.thumb_w = 0;
                                                                                        }
                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia9 = tLRPC$TL_decryptedMessage.media;
                                                                                        tLRPC$DecryptedMessageMedia9.size = tLRPC$TL_document9.size;
                                                                                        tLRPC$DecryptedMessageMedia9.mime_type = tLRPC$TL_document9.mime_type;
                                                                                        if (tLRPC$TL_document9.key != null && j14 == 0) {
                                                                                            TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile2 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                                @Override // org.telegram.tgnet.TLObject
                                                                                                public void readParams(AbstractSerializedData abstractSerializedData, boolean z29) {
                                                                                                    this.id = abstractSerializedData.readInt64(z29);
                                                                                                    this.access_hash = abstractSerializedData.readInt64(z29);
                                                                                                }

                                                                                                @Override // org.telegram.tgnet.TLObject
                                                                                                public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                                    abstractSerializedData.writeInt32(1511503333);
                                                                                                    abstractSerializedData.writeInt64(this.id);
                                                                                                    abstractSerializedData.writeInt64(this.access_hash);
                                                                                                }
                                                                                            };
                                                                                            tLRPC$InputEncryptedFile2.id = tLRPC$TL_document9.id;
                                                                                            tLRPC$InputEncryptedFile2.access_hash = tLRPC$TL_document9.access_hash;
                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia10 = tLRPC$TL_decryptedMessage.media;
                                                                                            tLRPC$DecryptedMessageMedia10.key = tLRPC$TL_document9.key;
                                                                                            tLRPC$DecryptedMessageMedia10.iv = tLRPC$TL_document9.iv;
                                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject8.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile2, null, messageObject8);
                                                                                            sendMessagesHelper11 = sendMessagesHelper16;
                                                                                        }
                                                                                        str28 = str;
                                                                                        delayedMessage6 = delayedMessage5;
                                                                                        if (str56 != null && str56.length() > 0 && str56.startsWith(str53)) {
                                                                                            delayedMessage6.httpLocation = str56;
                                                                                        }
                                                                                        sendMessagesHelper12 = sendMessagesHelper16;
                                                                                        if (j14 == 0) {
                                                                                            sendMessagesHelper16.performSendDelayedMessage(delayedMessage6);
                                                                                            sendMessagesHelper12 = sendMessagesHelper16;
                                                                                        }
                                                                                    }
                                                                                    str28 = str;
                                                                                    sendMessagesHelper13 = sendMessagesHelper11;
                                                                                } else if (c6 == '\b') {
                                                                                    delayedMessage6 = new DelayedMessage(j15);
                                                                                    delayedMessage6.encryptedChat = tLRPC$EncryptedChat;
                                                                                    delayedMessage6.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                    delayedMessage6.obj = messageObject8;
                                                                                    delayedMessage6.type = 3;
                                                                                    delayedMessage6.parentObject = obj24;
                                                                                    delayedMessage6.performMediaUpload = true;
                                                                                    delayedMessage6.scheduled = tLRPC$Message8 != null;
                                                                                    TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument3 = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                    tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument3;
                                                                                    tLRPC$TL_decryptedMessageMediaDocument3.attributes = tLRPC$TL_document9.attributes;
                                                                                    tLRPC$TL_decryptedMessageMediaDocument3.caption = str55;
                                                                                    TLRPC$PhotoSize thumbForSecretChat4 = sendMessagesHelper16.getThumbForSecretChat(tLRPC$TL_document9.thumbs);
                                                                                    if (thumbForSecretChat4 != null) {
                                                                                        ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat4);
                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia11 = tLRPC$TL_decryptedMessage.media;
                                                                                        ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia11).thumb = thumbForSecretChat4.bytes;
                                                                                        tLRPC$DecryptedMessageMedia11.thumb_h = thumbForSecretChat4.h;
                                                                                        tLRPC$DecryptedMessageMedia11.thumb_w = thumbForSecretChat4.w;
                                                                                    } else {
                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia12 = tLRPC$TL_decryptedMessage.media;
                                                                                        ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia12).thumb = new byte[0];
                                                                                        tLRPC$DecryptedMessageMedia12.thumb_h = 0;
                                                                                        tLRPC$DecryptedMessageMedia12.thumb_w = 0;
                                                                                    }
                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia13 = tLRPC$TL_decryptedMessage.media;
                                                                                    tLRPC$DecryptedMessageMedia13.mime_type = tLRPC$TL_document9.mime_type;
                                                                                    tLRPC$DecryptedMessageMedia13.size = tLRPC$TL_document9.size;
                                                                                    delayedMessage6.originalPath = str58;
                                                                                    sendMessagesHelper16.performSendDelayedMessage(delayedMessage6);
                                                                                    c7 = c6;
                                                                                    str28 = str58;
                                                                                    sendMessagesHelper12 = sendMessagesHelper16;
                                                                                }
                                                                                j16 = 0;
                                                                                sendMessagesHelper7 = sendMessagesHelper12;
                                                                            }
                                                                            c7 = c6;
                                                                            str28 = str58;
                                                                            sendMessagesHelper13 = sendMessagesHelper16;
                                                                        }
                                                                        if (j14 != j16) {
                                                                            TLObject tLObject2 = delayedMessage6.sendEncryptedRequest;
                                                                            if (tLObject2 != null) {
                                                                                tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) tLObject2;
                                                                            } else {
                                                                                tLRPC$TL_messages_sendEncryptedMultiMedia = new TLRPC$TL_messages_sendEncryptedMultiMedia();
                                                                                delayedMessage6.sendEncryptedRequest = tLRPC$TL_messages_sendEncryptedMultiMedia;
                                                                            }
                                                                            delayedMessage6.messageObjects.add(messageObject8);
                                                                            delayedMessage6.messages.add(tLRPC$Message13);
                                                                            delayedMessage6.originalPaths.add(str28);
                                                                            delayedMessage6.performMediaUpload = true;
                                                                            tLRPC$TL_messages_sendEncryptedMultiMedia.messages.add(tLRPC$TL_decryptedMessage);
                                                                            TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile3 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                @Override // org.telegram.tgnet.TLObject
                                                                                public void readParams(AbstractSerializedData abstractSerializedData, boolean z29) {
                                                                                    this.id = abstractSerializedData.readInt64(z29);
                                                                                    this.access_hash = abstractSerializedData.readInt64(z29);
                                                                                }

                                                                                @Override // org.telegram.tgnet.TLObject
                                                                                public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                    abstractSerializedData.writeInt32(1511503333);
                                                                                    abstractSerializedData.writeInt64(this.id);
                                                                                    abstractSerializedData.writeInt64(this.access_hash);
                                                                                }
                                                                            };
                                                                            char c13 = c7;
                                                                            if (c13 != 3 && c13 != 7) {
                                                                                j17 = 0;
                                                                                tLRPC$InputEncryptedFile3.id = j17;
                                                                                tLRPC$TL_messages_sendEncryptedMultiMedia.files.add(tLRPC$InputEncryptedFile3);
                                                                                sendMessagesHelper7.performSendDelayedMessage(delayedMessage6);
                                                                            }
                                                                            j17 = 1;
                                                                            tLRPC$InputEncryptedFile3.id = j17;
                                                                            tLRPC$TL_messages_sendEncryptedMultiMedia.files.add(tLRPC$InputEncryptedFile3);
                                                                            sendMessagesHelper7.performSendDelayedMessage(delayedMessage6);
                                                                        }
                                                                        if (messageObject5 == null) {
                                                                            getMediaDataController().cleanDraft(j15, messageObject18 != null ? messageObject18.getId() : 0L, false);
                                                                            return;
                                                                        }
                                                                        return;
                                                                    } else {
                                                                        sendMessagesHelper7 = this;
                                                                        tLRPC$Message13 = tLRPC$Message38;
                                                                        j14 = j34;
                                                                        str27 = str53;
                                                                        str28 = str;
                                                                        obj7 = obj;
                                                                        obj8 = obj24;
                                                                        tLRPC$TL_photo3 = tLRPC$TL_photo8;
                                                                        c7 = c6;
                                                                        hashMap = hashMap6;
                                                                        j15 = j33;
                                                                    }
                                                                    Object obj26 = obj7;
                                                                    TLRPC$PhotoSize tLRPC$PhotoSize3 = tLRPC$TL_photo3.sizes.get(0);
                                                                    TLRPC$TL_photo tLRPC$TL_photo9 = tLRPC$TL_photo3;
                                                                    TLRPC$PhotoSize tLRPC$PhotoSize4 = tLRPC$TL_photo3.sizes.get(arrayList5.size() - 1);
                                                                    ImageLoader.fillPhotoSizeWithBytes(tLRPC$PhotoSize3);
                                                                    TLRPC$TL_decryptedMessageMediaPhoto tLRPC$TL_decryptedMessageMediaPhoto = new TLRPC$TL_decryptedMessageMediaPhoto();
                                                                    tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaPhoto;
                                                                    tLRPC$TL_decryptedMessageMediaPhoto.caption = str55;
                                                                    byte[] bArr7 = tLRPC$PhotoSize3.bytes;
                                                                    if (bArr7 != null) {
                                                                        tLRPC$TL_decryptedMessageMediaPhoto.thumb = bArr7;
                                                                        hashMap2 = hashMap;
                                                                    } else {
                                                                        hashMap2 = hashMap;
                                                                        tLRPC$TL_decryptedMessageMediaPhoto.thumb = new byte[0];
                                                                    }
                                                                    tLRPC$TL_decryptedMessageMediaPhoto.thumb_h = tLRPC$PhotoSize3.h;
                                                                    tLRPC$TL_decryptedMessageMediaPhoto.thumb_w = tLRPC$PhotoSize3.w;
                                                                    tLRPC$TL_decryptedMessageMediaPhoto.w = tLRPC$PhotoSize4.w;
                                                                    tLRPC$TL_decryptedMessageMediaPhoto.h = tLRPC$PhotoSize4.h;
                                                                    tLRPC$TL_decryptedMessageMediaPhoto.size = tLRPC$PhotoSize4.size;
                                                                    if (tLRPC$PhotoSize4.location.key == null || j14 != 0) {
                                                                        if (delayedMessage5 == null) {
                                                                            delayedMessage6 = new DelayedMessage(j15);
                                                                            delayedMessage6.encryptedChat = tLRPC$EncryptedChat;
                                                                            delayedMessage6.type = 0;
                                                                            delayedMessage6.originalPath = str28;
                                                                            delayedMessage6.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                            delayedMessage6.obj = messageObject8;
                                                                            if (hashMap2 != null) {
                                                                                HashMap<String, String> hashMap8 = hashMap2;
                                                                                if (hashMap8.containsKey(obj26)) {
                                                                                    delayedMessage6.parentObject = hashMap8.get(obj26);
                                                                                    delayedMessage6.performMediaUpload = true;
                                                                                    delayedMessage6.scheduled = tLRPC$Message8 == null;
                                                                                }
                                                                            }
                                                                            delayedMessage6.parentObject = obj8;
                                                                            delayedMessage6.performMediaUpload = true;
                                                                            delayedMessage6.scheduled = tLRPC$Message8 == null;
                                                                        } else {
                                                                            delayedMessage6 = delayedMessage5;
                                                                        }
                                                                        if (!TextUtils.isEmpty(str56) && str56.startsWith(str27)) {
                                                                            delayedMessage6.httpLocation = str56;
                                                                        } else {
                                                                            ArrayList<TLRPC$PhotoSize> arrayList16 = tLRPC$TL_photo9.sizes;
                                                                            delayedMessage6.photoSize = arrayList16.get(arrayList16.size() - 1);
                                                                            delayedMessage6.locationParent = tLRPC$TL_photo9;
                                                                        }
                                                                        j16 = 0;
                                                                        sendMessagesHelper7 = sendMessagesHelper7;
                                                                        if (j14 == 0) {
                                                                            sendMessagesHelper7.performSendDelayedMessage(delayedMessage6);
                                                                            sendMessagesHelper7 = sendMessagesHelper7;
                                                                        }
                                                                        if (j14 != j16) {
                                                                        }
                                                                        if (messageObject5 == null) {
                                                                        }
                                                                    } else {
                                                                        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile4 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                            @Override // org.telegram.tgnet.TLObject
                                                                            public void readParams(AbstractSerializedData abstractSerializedData, boolean z29) {
                                                                                this.id = abstractSerializedData.readInt64(z29);
                                                                                this.access_hash = abstractSerializedData.readInt64(z29);
                                                                            }

                                                                            @Override // org.telegram.tgnet.TLObject
                                                                            public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                abstractSerializedData.writeInt32(1511503333);
                                                                                abstractSerializedData.writeInt64(this.id);
                                                                                abstractSerializedData.writeInt64(this.access_hash);
                                                                            }
                                                                        };
                                                                        TLRPC$FileLocation tLRPC$FileLocation = tLRPC$PhotoSize4.location;
                                                                        tLRPC$InputEncryptedFile4.id = tLRPC$FileLocation.volume_id;
                                                                        tLRPC$InputEncryptedFile4.access_hash = tLRPC$FileLocation.secret;
                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia14 = tLRPC$TL_decryptedMessage.media;
                                                                        tLRPC$DecryptedMessageMedia14.key = tLRPC$FileLocation.key;
                                                                        tLRPC$DecryptedMessageMedia14.iv = tLRPC$FileLocation.iv;
                                                                        getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject8.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile4, null, messageObject8);
                                                                        sendMessagesHelper13 = sendMessagesHelper7;
                                                                    }
                                                                } catch (Exception e35) {
                                                                    e = e35;
                                                                    tLRPC$InputPeer4 = tLRPC$Message13;
                                                                    exc = e;
                                                                    sendMessagesHelper8 = sendMessagesHelper7;
                                                                    tLRPC$Message12 = tLRPC$InputPeer4;
                                                                    tLRPC$Message11 = tLRPC$Message8;
                                                                    tLRPC$Message9 = tLRPC$Message11;
                                                                    sendMessagesHelper4 = sendMessagesHelper8;
                                                                    tLRPC$Message10 = tLRPC$Message12;
                                                                    messageObject2 = messageObject8;
                                                                    tLRPC$Message3 = tLRPC$Message10;
                                                                    sendMessagesHelper3 = sendMessagesHelper4;
                                                                    i3 = tLRPC$Message9;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                    if (messageObject2 != null) {
                                                                    }
                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                    return;
                                                                }
                                                            }
                                                            delayedMessage6 = delayedMessage5;
                                                            sendMessagesHelper12 = sendMessagesHelper13;
                                                            j16 = 0;
                                                            sendMessagesHelper7 = sendMessagesHelper12;
                                                            if (j14 != j16) {
                                                            }
                                                            if (messageObject5 == null) {
                                                            }
                                                        } catch (Exception e36) {
                                                            e = e36;
                                                        }
                                                    }
                                                } catch (Exception e37) {
                                                    e = e37;
                                                }
                                                tLRPC$Message9 = tLRPC$Message11;
                                                sendMessagesHelper4 = sendMessagesHelper8;
                                                tLRPC$Message10 = tLRPC$Message12;
                                            } else if (c6 != 4) {
                                                HashMap<String, String> hashMap9 = hashMap4;
                                                ?? r10 = i13;
                                                MessageObject messageObject19 = messageObject5;
                                                if (c6 == '\t') {
                                                    TLRPC$TL_messages_sendInlineBotResult tLRPC$TL_messages_sendInlineBotResult = new TLRPC$TL_messages_sendInlineBotResult();
                                                    tLRPC$TL_messages_sendInlineBotResult.peer = tLRPC$InputPeer4;
                                                    tLRPC$TL_messages_sendInlineBotResult.random_id = tLRPC$Message6.random_id;
                                                    TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut6 = tLRPC$Message6.quick_reply_shortcut;
                                                    if (tLRPC$InputQuickReplyShortcut6 != null) {
                                                        tLRPC$TL_messages_sendInlineBotResult.flags |= 131072;
                                                        tLRPC$TL_messages_sendInlineBotResult.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut6;
                                                    }
                                                    if (tLRPC$Message6.from_id != null) {
                                                        tLRPC$TL_messages_sendInlineBotResult.send_as = getMessagesController().getInputPeer(tLRPC$Message6.from_id);
                                                    }
                                                    tLRPC$TL_messages_sendInlineBotResult.hide_via = !hashMap9.containsKey(str23);
                                                    if (tL_stories$StoryItem4 != null) {
                                                        tLRPC$TL_messages_sendInlineBotResult.reply_to = createReplyInput(tL_stories$StoryItem4);
                                                        tLRPC$TL_messages_sendInlineBotResult.flags |= 1;
                                                    } else {
                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader14 = tLRPC$Message6.reply_to;
                                                        if (tLRPC$MessageReplyHeader14 instanceof TLRPC$TL_messageReplyHeader) {
                                                            tLRPC$TL_messages_sendInlineBotResult.flags |= 1;
                                                            tLRPC$TL_messages_sendInlineBotResult.reply_to = createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader14);
                                                        }
                                                    }
                                                    tLRPC$TL_messages_sendInlineBotResult.silent = tLRPC$Message6.silent;
                                                    if (r10 != 0) {
                                                        tLRPC$TL_messages_sendInlineBotResult.schedule_date = r10;
                                                        tLRPC$TL_messages_sendInlineBotResult.flags |= 1024;
                                                    }
                                                    tLRPC$TL_messages_sendInlineBotResult.query_id = Utilities.parseLong(hashMap9.get(obj6)).longValue();
                                                    tLRPC$TL_messages_sendInlineBotResult.id = hashMap9.get("id");
                                                    if (messageObject19 == null) {
                                                        tLRPC$TL_messages_sendInlineBotResult.clear_draft = true;
                                                        getMediaDataController().cleanDraft(j12, messageObject6 != null ? messageObject6.getId() : 0L, false);
                                                    }
                                                    performSendMessageRequest(tLRPC$TL_messages_sendInlineBotResult, messageObject8, null, null, obj5, hashMap9, r10 != 0);
                                                    return;
                                                }
                                                return;
                                            } else {
                                                try {
                                                    TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages = new TLRPC$TL_messages_forwardMessages();
                                                    tLRPC$TL_messages_forwardMessages.to_peer = tLRPC$InputPeer4;
                                                    MessageObject messageObject20 = messageObject5;
                                                    tLRPC$TL_messages_forwardMessages.with_my_score = messageObject20.messageOwner.with_my_score;
                                                    if (messageObject6 != null) {
                                                        tLRPC$TL_messages_forwardMessages.top_msg_id = messageObject6.getId();
                                                        tLRPC$TL_messages_forwardMessages.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                    }
                                                    try {
                                                        try {
                                                            if (hashMap4 != null) {
                                                                Object obj27 = obj4;
                                                                try {
                                                                    if (hashMap4.containsKey(obj27)) {
                                                                        Integer parseInt = Utilities.parseInt((CharSequence) hashMap4.get(obj27));
                                                                        parseInt.intValue();
                                                                        tLRPC$TL_messages_forwardMessages.drop_author = true;
                                                                        long longValue = Utilities.parseLong(hashMap4.get("fwd_peer")).longValue();
                                                                        if (longValue < 0) {
                                                                            TLRPC$Chat chat2 = getMessagesController().getChat(Long.valueOf(-longValue));
                                                                            if (ChatObject.isChannel(chat2)) {
                                                                                TLRPC$TL_inputPeerChannel tLRPC$TL_inputPeerChannel = new TLRPC$TL_inputPeerChannel();
                                                                                tLRPC$TL_messages_forwardMessages.from_peer = tLRPC$TL_inputPeerChannel;
                                                                                tLRPC$TL_inputPeerChannel.channel_id = chat2.id;
                                                                                tLRPC$TL_inputPeerChannel.access_hash = chat2.access_hash;
                                                                            } else {
                                                                                tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                            }
                                                                        } else {
                                                                            tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                        }
                                                                        tLRPC$TL_messages_forwardMessages.id.add(parseInt);
                                                                        tLRPC$TL_messages_forwardMessages.silent = tLRPC$Message6.silent;
                                                                        if (i13 == null) {
                                                                            r6 = i13;
                                                                            try {
                                                                                tLRPC$TL_messages_forwardMessages.schedule_date = r6;
                                                                                tLRPC$TL_messages_forwardMessages.flags |= 1024;
                                                                            } catch (Exception e38) {
                                                                                sendMessagesHelper4 = this;
                                                                                exc = e38;
                                                                                tLRPC$Message10 = tLRPC$Message6;
                                                                                tLRPC$Message9 = r6;
                                                                            }
                                                                        } else {
                                                                            r6 = i13;
                                                                        }
                                                                        tLRPC$TL_messages_forwardMessages.random_id.add(Long.valueOf(tLRPC$Message6.random_id));
                                                                        if (messageObject20.getId() < 0) {
                                                                            tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(messageObject20.getId()));
                                                                        } else {
                                                                            TLRPC$Message tLRPC$Message39 = messageObject20.messageOwner;
                                                                            int i45 = tLRPC$Message39.fwd_msg_id;
                                                                            if (i45 != 0) {
                                                                                tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(i45));
                                                                            } else {
                                                                                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2 = tLRPC$Message39.fwd_from;
                                                                                if (tLRPC$MessageFwdHeader2 != null) {
                                                                                    tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(tLRPC$MessageFwdHeader2.channel_post));
                                                                                }
                                                                            }
                                                                        }
                                                                        str26 = r6;
                                                                        sendMessagesHelper10 = this;
                                                                        performSendMessageRequest(tLRPC$TL_messages_forwardMessages, messageObject8, null, null, obj5, hashMap4, r6 == 0);
                                                                        return;
                                                                    }
                                                                } catch (Exception e39) {
                                                                    e = e39;
                                                                    sendMessagesHelper5 = this;
                                                                    exc = e;
                                                                    tLRPC$Message10 = tLRPC$Message6;
                                                                    tLRPC$Message9 = i13;
                                                                    sendMessagesHelper4 = sendMessagesHelper5;
                                                                    messageObject2 = messageObject8;
                                                                    tLRPC$Message3 = tLRPC$Message10;
                                                                    sendMessagesHelper3 = sendMessagesHelper4;
                                                                    i3 = tLRPC$Message9;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                                    if (messageObject2 != null) {
                                                                    }
                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                                    return;
                                                                }
                                                            }
                                                            performSendMessageRequest(tLRPC$TL_messages_forwardMessages, messageObject8, null, null, obj5, hashMap4, r6 == 0);
                                                            return;
                                                        } catch (Exception e40) {
                                                            e = e40;
                                                            exc = e;
                                                            sendMessagesHelper9 = sendMessagesHelper10;
                                                            str25 = str26;
                                                            tLRPC$Message10 = tLRPC$Message6;
                                                            tLRPC$Message9 = str25;
                                                            sendMessagesHelper4 = sendMessagesHelper9;
                                                            messageObject2 = messageObject8;
                                                            tLRPC$Message3 = tLRPC$Message10;
                                                            sendMessagesHelper3 = sendMessagesHelper4;
                                                            i3 = tLRPC$Message9;
                                                            FileLog.e(exc);
                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                                            if (messageObject2 != null) {
                                                            }
                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                                            sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                                            return;
                                                        }
                                                        tLRPC$TL_messages_forwardMessages.random_id.add(Long.valueOf(tLRPC$Message6.random_id));
                                                        if (messageObject20.getId() < 0) {
                                                        }
                                                        str26 = r6;
                                                        sendMessagesHelper10 = this;
                                                    } catch (Exception e41) {
                                                        e = e41;
                                                        sendMessagesHelper10 = this;
                                                        str26 = r6;
                                                    }
                                                    tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                    tLRPC$TL_messages_forwardMessages.silent = tLRPC$Message6.silent;
                                                    if (i13 == null) {
                                                    }
                                                } catch (Exception e42) {
                                                    e = e42;
                                                    sendMessagesHelper10 = this;
                                                    str26 = i13;
                                                }
                                            }
                                        } catch (Exception e43) {
                                            exc = e43;
                                            sendMessagesHelper9 = sendMessagesHelper7;
                                            str25 = str24;
                                        }
                                        messageObject2 = messageObject8;
                                        tLRPC$Message3 = tLRPC$Message10;
                                        sendMessagesHelper3 = sendMessagesHelper4;
                                        i3 = tLRPC$Message9;
                                        FileLog.e(exc);
                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                        if (messageObject2 != null) {
                                            messageObject2.messageOwner.send_state = 2;
                                        }
                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                        sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                        return;
                                    }
                                    TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
                                    tLRPC$Message6.reply_to = tLRPC$TL_messageReplyHeader;
                                    if (tLRPC$EncryptedChat != null) {
                                        j7 = j5;
                                        long j37 = messageObject7.messageOwner.random_id;
                                        if (j37 != 0) {
                                            tLRPC$TL_messageReplyHeader.reply_to_random_id = j37;
                                            tLRPC$Message6.flags |= 8;
                                            tLRPC$TL_messageReplyHeader.flags |= 16;
                                            tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject7.getId();
                                            if (messageObject6 == null && messageObject6 != messageObject7 && messageObject6.getId() != 1) {
                                                tLRPC$Message6.reply_to.reply_to_top_id = messageObject6.getId();
                                                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader15 = tLRPC$Message6.reply_to;
                                                int i46 = tLRPC$MessageReplyHeader15.flags;
                                                tLRPC$MessageReplyHeader15.flags = i46 | 2;
                                                if (messageObject6.isTopicMainMessage) {
                                                    tLRPC$MessageReplyHeader15.forum_topic = true;
                                                    tLRPC$MessageReplyHeader15.flags = i46 | 10;
                                                }
                                            } else if (messageObject7.isTopicMainMessage) {
                                                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader16 = tLRPC$Message6.reply_to;
                                                tLRPC$MessageReplyHeader16.forum_topic = true;
                                                tLRPC$MessageReplyHeader16.flags |= 8;
                                            }
                                            if (replyQuote != null) {
                                                tLRPC$Message6.reply_to.quote_text = replyQuote.getText();
                                                if (!TextUtils.isEmpty(tLRPC$Message6.reply_to.quote_text)) {
                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader17 = tLRPC$Message6.reply_to;
                                                    tLRPC$MessageReplyHeader17.quote = true;
                                                    tLRPC$MessageReplyHeader17.flags |= 1088;
                                                    replyQuote2 = replyQuote;
                                                    tLRPC$MessageReplyHeader17.quote_offset = replyQuote2.start;
                                                    tLRPC$MessageReplyHeader17.quote_entities = replyQuote2.getEntities();
                                                    ArrayList<TLRPC$MessageEntity> arrayList17 = tLRPC$Message6.reply_to.quote_entities;
                                                    if (arrayList17 != null && !arrayList17.isEmpty()) {
                                                        tLRPC$Message6.reply_to.quote_entities = new ArrayList<>(tLRPC$Message6.reply_to.quote_entities);
                                                        tLRPC$Message6.reply_to.flags |= 128;
                                                    }
                                                    if (j24 == 0) {
                                                    }
                                                    if (tLRPC$ReplyMarkup != null) {
                                                        tLRPC$Message6.flags |= 64;
                                                        tLRPC$Message6.reply_markup = tLRPC$ReplyMarkup;
                                                        str34 = hashMap4.get(str20);
                                                        if (str34 != null) {
                                                        }
                                                    }
                                                    if (DialogObject.isEncryptedDialog(j22)) {
                                                    }
                                                    if (messageObject7 != null) {
                                                    }
                                                    i18 = i15;
                                                    tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                                    j8 = j22;
                                                    z8 = false;
                                                    if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                                    }
                                                    tLRPC$Message6.media_unread = true;
                                                    if (tLRPC$Message6.from_id == null) {
                                                    }
                                                    tLRPC$Message6.send_state = 1;
                                                    if (hashMap4 == null) {
                                                    }
                                                    if (j9 <= 0) {
                                                    }
                                                    messageObject8 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message6, ((messageObject6 == null && messageObject6 == messageObject7 && messageObject6.getId() == 1) || z8) ? null : messageObject7, true, true);
                                                    messageObject8.sendAnimationData = sendAnimationData;
                                                    messageObject8.wasJustSent = true;
                                                    messageObject8.scheduled = i13 == null;
                                                    if (!messageObject8.isForwarded()) {
                                                    }
                                                    videoEditedInfo = messageObject8.videoEditedInfo;
                                                    if (videoEditedInfo != null) {
                                                    }
                                                    if (videoEditedInfo6 == null) {
                                                    }
                                                    videoEditedInfo = videoEditedInfo2;
                                                    if (j10 != 0) {
                                                    }
                                                    if (BuildVars.LOGS_ENABLED) {
                                                    }
                                                    str23 = str22;
                                                    tLRPC$InputPeer4 = tLRPC$InputPeer3;
                                                    sendMessagesHelper7 = sendMessagesHelper6;
                                                    str24 = str22;
                                                    if (c5 != 0) {
                                                    }
                                                    SendMessagesHelper sendMessagesHelper152 = this;
                                                    long j262 = j12;
                                                    HashMap<String, String> hashMap52 = hashMap4;
                                                    MessageObject messageObject142 = messageObject6;
                                                    TLRPC$InputPeer tLRPC$InputPeer62 = tLRPC$InputPeer4;
                                                    TLRPC$Message tLRPC$Message312 = tLRPC$Message6;
                                                    Object obj182 = obj5;
                                                    Object obj192 = obj16;
                                                    ?? r422 = i13;
                                                    ArrayList<TLRPC$MessageEntity> arrayList122 = arrayList4;
                                                    TL_stories$StoryItem tL_stories$StoryItem92 = tL_stories$StoryItem4;
                                                    String str482 = str15;
                                                    if (tLRPC$EncryptedChat == null) {
                                                    }
                                                }
                                            }
                                            replyQuote2 = replyQuote;
                                            if (j24 == 0) {
                                            }
                                            if (tLRPC$ReplyMarkup != null) {
                                            }
                                            if (DialogObject.isEncryptedDialog(j22)) {
                                            }
                                            if (messageObject7 != null) {
                                            }
                                            i18 = i15;
                                            tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                            j8 = j22;
                                            z8 = false;
                                            if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                            }
                                            tLRPC$Message6.media_unread = true;
                                            if (tLRPC$Message6.from_id == null) {
                                            }
                                            tLRPC$Message6.send_state = 1;
                                            if (hashMap4 == null) {
                                            }
                                            if (j9 <= 0) {
                                            }
                                            messageObject8 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message6, ((messageObject6 == null && messageObject6 == messageObject7 && messageObject6.getId() == 1) || z8) ? null : messageObject7, true, true);
                                            messageObject8.sendAnimationData = sendAnimationData;
                                            messageObject8.wasJustSent = true;
                                            messageObject8.scheduled = i13 == null;
                                            if (!messageObject8.isForwarded()) {
                                            }
                                            videoEditedInfo = messageObject8.videoEditedInfo;
                                            if (videoEditedInfo != null) {
                                            }
                                            if (videoEditedInfo6 == null) {
                                            }
                                            videoEditedInfo = videoEditedInfo2;
                                            if (j10 != 0) {
                                            }
                                            if (BuildVars.LOGS_ENABLED) {
                                            }
                                            str23 = str22;
                                            tLRPC$InputPeer4 = tLRPC$InputPeer3;
                                            sendMessagesHelper7 = sendMessagesHelper6;
                                            str24 = str22;
                                            if (c5 != 0) {
                                            }
                                            SendMessagesHelper sendMessagesHelper1522 = this;
                                            long j2622 = j12;
                                            HashMap<String, String> hashMap522 = hashMap4;
                                            MessageObject messageObject1422 = messageObject6;
                                            TLRPC$InputPeer tLRPC$InputPeer622 = tLRPC$InputPeer4;
                                            TLRPC$Message tLRPC$Message3122 = tLRPC$Message6;
                                            Object obj1822 = obj5;
                                            Object obj1922 = obj16;
                                            ?? r4222 = i13;
                                            ArrayList<TLRPC$MessageEntity> arrayList1222 = arrayList4;
                                            TL_stories$StoryItem tL_stories$StoryItem922 = tL_stories$StoryItem4;
                                            String str4822 = str15;
                                            if (tLRPC$EncryptedChat == null) {
                                            }
                                        }
                                    } else {
                                        j7 = j5;
                                    }
                                    tLRPC$Message6.flags |= 8;
                                    tLRPC$TL_messageReplyHeader.flags |= 16;
                                    tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject7.getId();
                                    if (messageObject6 == null) {
                                    }
                                    if (messageObject7.isTopicMainMessage) {
                                    }
                                    if (replyQuote != null) {
                                    }
                                    replyQuote2 = replyQuote;
                                    if (j24 == 0) {
                                    }
                                    if (tLRPC$ReplyMarkup != null) {
                                    }
                                    if (DialogObject.isEncryptedDialog(j22)) {
                                    }
                                    if (messageObject7 != null) {
                                    }
                                    i18 = i15;
                                    tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                    j8 = j22;
                                    z8 = false;
                                    if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                    }
                                    tLRPC$Message6.media_unread = true;
                                    if (tLRPC$Message6.from_id == null) {
                                    }
                                    tLRPC$Message6.send_state = 1;
                                    if (hashMap4 == null) {
                                    }
                                    if (j9 <= 0) {
                                    }
                                    messageObject8 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message6, ((messageObject6 == null && messageObject6 == messageObject7 && messageObject6.getId() == 1) || z8) ? null : messageObject7, true, true);
                                    messageObject8.sendAnimationData = sendAnimationData;
                                    messageObject8.wasJustSent = true;
                                    messageObject8.scheduled = i13 == null;
                                    if (!messageObject8.isForwarded()) {
                                    }
                                    videoEditedInfo = messageObject8.videoEditedInfo;
                                    if (videoEditedInfo != null) {
                                    }
                                    if (videoEditedInfo6 == null) {
                                    }
                                    videoEditedInfo = videoEditedInfo2;
                                    if (j10 != 0) {
                                    }
                                    if (BuildVars.LOGS_ENABLED) {
                                    }
                                    str23 = str22;
                                    tLRPC$InputPeer4 = tLRPC$InputPeer3;
                                    sendMessagesHelper7 = sendMessagesHelper6;
                                    str24 = str22;
                                    if (c5 != 0) {
                                    }
                                    SendMessagesHelper sendMessagesHelper15222 = this;
                                    long j26222 = j12;
                                    HashMap<String, String> hashMap5222 = hashMap4;
                                    MessageObject messageObject14222 = messageObject6;
                                    TLRPC$InputPeer tLRPC$InputPeer6222 = tLRPC$InputPeer4;
                                    TLRPC$Message tLRPC$Message31222 = tLRPC$Message6;
                                    Object obj18222 = obj5;
                                    Object obj19222 = obj16;
                                    ?? r42222 = i13;
                                    ArrayList<TLRPC$MessageEntity> arrayList12222 = arrayList4;
                                    TL_stories$StoryItem tL_stories$StoryItem9222 = tL_stories$StoryItem4;
                                    String str48222 = str15;
                                    if (tLRPC$EncryptedChat == null) {
                                    }
                                }
                            }
                            j7 = j5;
                            messageObject6 = messageObject11;
                            messageObject7 = messageObject13;
                            replyQuote2 = replyQuote;
                            if (j24 == 0) {
                            }
                            if (tLRPC$ReplyMarkup != null) {
                            }
                            if (DialogObject.isEncryptedDialog(j22)) {
                            }
                            if (messageObject7 != null) {
                            }
                            i18 = i15;
                            tL_stories$StoryItem3 = tL_stories$StoryItem2;
                            j8 = j22;
                            z8 = false;
                            if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                            }
                            tLRPC$Message6.media_unread = true;
                            if (tLRPC$Message6.from_id == null) {
                            }
                            tLRPC$Message6.send_state = 1;
                            if (hashMap4 == null) {
                            }
                            if (j9 <= 0) {
                            }
                            messageObject8 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message6, ((messageObject6 == null && messageObject6 == messageObject7 && messageObject6.getId() == 1) || z8) ? null : messageObject7, true, true);
                            messageObject8.sendAnimationData = sendAnimationData;
                            messageObject8.wasJustSent = true;
                            messageObject8.scheduled = i13 == null;
                            if (!messageObject8.isForwarded()) {
                            }
                            videoEditedInfo = messageObject8.videoEditedInfo;
                            if (videoEditedInfo != null) {
                            }
                            if (videoEditedInfo6 == null) {
                            }
                            videoEditedInfo = videoEditedInfo2;
                            if (j10 != 0) {
                            }
                            if (BuildVars.LOGS_ENABLED) {
                            }
                            str23 = str22;
                            tLRPC$InputPeer4 = tLRPC$InputPeer3;
                            sendMessagesHelper7 = sendMessagesHelper6;
                            str24 = str22;
                            if (c5 != 0) {
                            }
                            SendMessagesHelper sendMessagesHelper152222 = this;
                            long j262222 = j12;
                            HashMap<String, String> hashMap52222 = hashMap4;
                            MessageObject messageObject142222 = messageObject6;
                            TLRPC$InputPeer tLRPC$InputPeer62222 = tLRPC$InputPeer4;
                            TLRPC$Message tLRPC$Message312222 = tLRPC$Message6;
                            Object obj182222 = obj5;
                            Object obj192222 = obj16;
                            ?? r422222 = i13;
                            ArrayList<TLRPC$MessageEntity> arrayList122222 = arrayList4;
                            TL_stories$StoryItem tL_stories$StoryItem92222 = tL_stories$StoryItem4;
                            String str482222 = str15;
                            if (tLRPC$EncryptedChat == null) {
                            }
                        }
                    } else {
                        messageObject4 = messageObject3;
                    }
                    if (str18 == null) {
                        tLRPC$Message6.date = 0;
                        i21 = i22;
                    } else if (i22 != 0) {
                        i21 = i22;
                        try {
                            tLRPC$Message6.date = i21;
                        } catch (Exception e44) {
                            exc = e44;
                            sendMessagesHelper2 = sendMessagesHelper;
                            tLRPC$Message2 = tLRPC$Message6;
                            i5 = i21;
                            tLRPC$Message3 = tLRPC$Message2;
                            i4 = i5;
                            messageObject2 = null;
                            sendMessagesHelper3 = sendMessagesHelper2;
                            i3 = i4;
                            FileLog.e(exc);
                            getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                            if (messageObject2 != null) {
                            }
                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                            sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                            return;
                        }
                    } else {
                        i21 = i22;
                        try {
                            str35 = "";
                            tLRPC$Message6.date = getConnectionsManager().getCurrentTime();
                            if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
                                if (i21 == 0 && z) {
                                    tLRPC$Message6.views = 1;
                                    tLRPC$Message6.flags |= 1024;
                                }
                                try {
                                    i13 = i21;
                                    messageObject5 = messageObject4;
                                } catch (Exception e45) {
                                    e = e45;
                                    i13 = i21;
                                }
                                try {
                                    TLRPC$Chat chat3 = getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer2.channel_id));
                                    tLRPC$Message8 = str35;
                                    if (chat3 != null) {
                                        if (chat3.megagroup) {
                                            tLRPC$Message6.unread = true;
                                            tLRPC$Message8 = str35;
                                        } else {
                                            tLRPC$Message6.post = true;
                                            tLRPC$Message8 = str35;
                                        }
                                    }
                                } catch (Exception e46) {
                                    e = e46;
                                    exc = e;
                                    sendMessagesHelper2 = sendMessagesHelper;
                                    tLRPC$Message2 = tLRPC$Message6;
                                    i5 = i13;
                                    tLRPC$Message3 = tLRPC$Message2;
                                    i4 = i5;
                                    messageObject2 = null;
                                    sendMessagesHelper3 = sendMessagesHelper2;
                                    i3 = i4;
                                    FileLog.e(exc);
                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                    if (messageObject2 != null) {
                                    }
                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                    return;
                                }
                            } else {
                                i13 = i21;
                                messageObject5 = messageObject4;
                                try {
                                    tLRPC$Message6.unread = true;
                                    tLRPC$Message8 = str35;
                                } catch (Exception e47) {
                                    e = e47;
                                    sendMessagesHelper2 = sendMessagesHelper;
                                    tLRPC$Message7 = tLRPC$Message6;
                                    i10 = i13;
                                    exc = e;
                                    tLRPC$Message2 = tLRPC$Message7;
                                    i5 = i10;
                                    tLRPC$Message3 = tLRPC$Message2;
                                    i4 = i5;
                                    messageObject2 = null;
                                    sendMessagesHelper3 = sendMessagesHelper2;
                                    i3 = i4;
                                    FileLog.e(exc);
                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                                    if (messageObject2 != null) {
                                    }
                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                                    sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                                    return;
                                }
                            }
                            tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                            tLRPC$Message6.dialog_id = j22;
                            tLRPC$Message6.invert_media = z20;
                            if (tL_stories$StoryItem6 == null) {
                            }
                            j7 = j5;
                            messageObject6 = messageObject11;
                            messageObject7 = messageObject13;
                            replyQuote2 = replyQuote;
                            if (j24 == 0) {
                            }
                            if (tLRPC$ReplyMarkup != null) {
                            }
                            if (DialogObject.isEncryptedDialog(j22)) {
                            }
                            if (messageObject7 != null) {
                            }
                            i18 = i15;
                            tL_stories$StoryItem3 = tL_stories$StoryItem2;
                            j8 = j22;
                            z8 = false;
                            if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                            }
                            tLRPC$Message6.media_unread = true;
                            if (tLRPC$Message6.from_id == null) {
                            }
                            tLRPC$Message6.send_state = 1;
                            if (hashMap4 == null) {
                            }
                            if (j9 <= 0) {
                            }
                            messageObject8 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message6, ((messageObject6 == null && messageObject6 == messageObject7 && messageObject6.getId() == 1) || z8) ? null : messageObject7, true, true);
                            messageObject8.sendAnimationData = sendAnimationData;
                            messageObject8.wasJustSent = true;
                            messageObject8.scheduled = i13 == null;
                            if (!messageObject8.isForwarded()) {
                            }
                            videoEditedInfo = messageObject8.videoEditedInfo;
                            if (videoEditedInfo != null) {
                            }
                            if (videoEditedInfo6 == null) {
                            }
                            videoEditedInfo = videoEditedInfo2;
                            if (j10 != 0) {
                            }
                            if (BuildVars.LOGS_ENABLED) {
                            }
                            str23 = str22;
                            tLRPC$InputPeer4 = tLRPC$InputPeer3;
                            sendMessagesHelper7 = sendMessagesHelper6;
                            str24 = str22;
                            if (c5 != 0) {
                            }
                            SendMessagesHelper sendMessagesHelper1522222 = this;
                            long j2622222 = j12;
                            HashMap<String, String> hashMap522222 = hashMap4;
                            MessageObject messageObject1422222 = messageObject6;
                            TLRPC$InputPeer tLRPC$InputPeer622222 = tLRPC$InputPeer4;
                            TLRPC$Message tLRPC$Message3122222 = tLRPC$Message6;
                            Object obj1822222 = obj5;
                            Object obj1922222 = obj16;
                            ?? r4222222 = i13;
                            ArrayList<TLRPC$MessageEntity> arrayList1222222 = arrayList4;
                            TL_stories$StoryItem tL_stories$StoryItem922222 = tL_stories$StoryItem4;
                            String str4822222 = str15;
                            if (tLRPC$EncryptedChat == null) {
                            }
                        } catch (Exception e48) {
                            e = e48;
                            sendMessagesHelper2 = sendMessagesHelper;
                            tLRPC$Message7 = tLRPC$Message6;
                            i10 = i21;
                            exc = e;
                            tLRPC$Message2 = tLRPC$Message7;
                            i5 = i10;
                            tLRPC$Message3 = tLRPC$Message2;
                            i4 = i5;
                            messageObject2 = null;
                            sendMessagesHelper3 = sendMessagesHelper2;
                            i3 = i4;
                            FileLog.e(exc);
                            getMessagesStorage().markMessageAsSendError(tLRPC$Message3, i3 != null ? 1 : 0);
                            if (messageObject2 != null) {
                            }
                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message3.id));
                            sendMessagesHelper3.processSentMessage(tLRPC$Message3.id);
                            return;
                        }
                    }
                    str35 = "";
                    if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
                    }
                    tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                    tLRPC$Message6.dialog_id = j22;
                    tLRPC$Message6.invert_media = z20;
                    if (tL_stories$StoryItem6 == null) {
                    }
                    j7 = j5;
                    messageObject6 = messageObject11;
                    messageObject7 = messageObject13;
                    replyQuote2 = replyQuote;
                    if (j24 == 0) {
                    }
                    if (tLRPC$ReplyMarkup != null) {
                    }
                    if (DialogObject.isEncryptedDialog(j22)) {
                    }
                    if (messageObject7 != null) {
                    }
                    i18 = i15;
                    tL_stories$StoryItem3 = tL_stories$StoryItem2;
                    j8 = j22;
                    z8 = false;
                    if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                    }
                    tLRPC$Message6.media_unread = true;
                    if (tLRPC$Message6.from_id == null) {
                    }
                    tLRPC$Message6.send_state = 1;
                    if (hashMap4 == null) {
                    }
                    if (j9 <= 0) {
                    }
                    messageObject8 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message6, ((messageObject6 == null && messageObject6 == messageObject7 && messageObject6.getId() == 1) || z8) ? null : messageObject7, true, true);
                    messageObject8.sendAnimationData = sendAnimationData;
                    messageObject8.wasJustSent = true;
                    messageObject8.scheduled = i13 == null;
                    if (!messageObject8.isForwarded()) {
                    }
                    videoEditedInfo = messageObject8.videoEditedInfo;
                    if (videoEditedInfo != null) {
                    }
                    if (videoEditedInfo6 == null) {
                    }
                    videoEditedInfo = videoEditedInfo2;
                    if (j10 != 0) {
                    }
                    if (BuildVars.LOGS_ENABLED) {
                    }
                    str23 = str22;
                    tLRPC$InputPeer4 = tLRPC$InputPeer3;
                    sendMessagesHelper7 = sendMessagesHelper6;
                    str24 = str22;
                    if (c5 != 0) {
                    }
                    SendMessagesHelper sendMessagesHelper15222222 = this;
                    long j26222222 = j12;
                    HashMap<String, String> hashMap5222222 = hashMap4;
                    MessageObject messageObject14222222 = messageObject6;
                    TLRPC$InputPeer tLRPC$InputPeer6222222 = tLRPC$InputPeer4;
                    TLRPC$Message tLRPC$Message31222222 = tLRPC$Message6;
                    Object obj18222222 = obj5;
                    Object obj19222222 = obj16;
                    ?? r42222222 = i13;
                    ArrayList<TLRPC$MessageEntity> arrayList12222222 = arrayList4;
                    TL_stories$StoryItem tL_stories$StoryItem9222222 = tL_stories$StoryItem4;
                    String str48222222 = str15;
                    if (tLRPC$EncryptedChat == null) {
                    }
                }
                i11 = i24;
                TLRPC$TL_inputQuickReplyShortcut tLRPC$TL_inputQuickReplyShortcut = new TLRPC$TL_inputQuickReplyShortcut();
                str18 = str40;
                tLRPC$TL_inputQuickReplyShortcut.shortcut = str18;
                tLRPC$Message6.quick_reply_shortcut = tLRPC$TL_inputQuickReplyShortcut;
                tLRPC$Message6.quick_reply_shortcut_id = i11;
                if (i11 != 0) {
                    tLRPC$Message6.flags |= 1073741824;
                }
                sendMessageParams2 = sendMessageParams;
                str19 = str17;
                i12 = i9;
                j6 = sendMessageParams2.effect_id;
                if (j6 != 0) {
                }
                if (hashMap4 == null) {
                }
                tLRPC$Message6.params = hashMap4;
                if (messageObject3 == null) {
                }
                if (str18 == null) {
                }
                str35 = "";
                if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
                }
                tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                tLRPC$Message6.dialog_id = j22;
                tLRPC$Message6.invert_media = z20;
                if (tL_stories$StoryItem6 == null) {
                }
                j7 = j5;
                messageObject6 = messageObject11;
                messageObject7 = messageObject13;
                replyQuote2 = replyQuote;
                if (j24 == 0) {
                }
                if (tLRPC$ReplyMarkup != null) {
                }
                if (DialogObject.isEncryptedDialog(j22)) {
                }
                if (messageObject7 != null) {
                }
                i18 = i15;
                tL_stories$StoryItem3 = tL_stories$StoryItem2;
                j8 = j22;
                z8 = false;
                if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                }
                tLRPC$Message6.media_unread = true;
                if (tLRPC$Message6.from_id == null) {
                }
                tLRPC$Message6.send_state = 1;
                if (hashMap4 == null) {
                }
                if (j9 <= 0) {
                }
                messageObject8 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message6, ((messageObject6 == null && messageObject6 == messageObject7 && messageObject6.getId() == 1) || z8) ? null : messageObject7, true, true);
                messageObject8.sendAnimationData = sendAnimationData;
                messageObject8.wasJustSent = true;
                messageObject8.scheduled = i13 == null;
                if (!messageObject8.isForwarded()) {
                }
                videoEditedInfo = messageObject8.videoEditedInfo;
                if (videoEditedInfo != null) {
                }
                if (videoEditedInfo6 == null) {
                }
                videoEditedInfo = videoEditedInfo2;
                if (j10 != 0) {
                }
                if (BuildVars.LOGS_ENABLED) {
                }
                str23 = str22;
                tLRPC$InputPeer4 = tLRPC$InputPeer3;
                sendMessagesHelper7 = sendMessagesHelper6;
                str24 = str22;
                if (c5 != 0) {
                }
                SendMessagesHelper sendMessagesHelper152222222 = this;
                long j262222222 = j12;
                HashMap<String, String> hashMap52222222 = hashMap4;
                MessageObject messageObject142222222 = messageObject6;
                TLRPC$InputPeer tLRPC$InputPeer62222222 = tLRPC$InputPeer4;
                TLRPC$Message tLRPC$Message312222222 = tLRPC$Message6;
                Object obj182222222 = obj5;
                Object obj192222222 = obj16;
                ?? r422222222 = i13;
                ArrayList<TLRPC$MessageEntity> arrayList122222222 = arrayList4;
                TL_stories$StoryItem tL_stories$StoryItem92222222 = tL_stories$StoryItem4;
                String str482222222 = str15;
                if (tLRPC$EncryptedChat == null) {
                }
            }
        } else {
            tLRPC$TL_photo2 = tLRPC$TL_photo;
            obj6 = "query_id";
            str15 = str14;
            str16 = NotificationsSettingsFacade.PROPERTY_SILENT;
            c5 = c4;
        }
        z7 = true;
        tLRPC$Message6.silent = z7;
        str17 = str16;
        if (tLRPC$Message6.random_id == 0) {
        }
        if (str40 == null) {
            sendMessageParams2 = sendMessageParams;
            i12 = i9;
            str18 = str40;
            str19 = str17;
            j6 = sendMessageParams2.effect_id;
            if (j6 != 0) {
            }
            if (hashMap4 == null) {
            }
            tLRPC$Message6.params = hashMap4;
            if (messageObject3 == null) {
            }
            if (str18 == null) {
            }
            str35 = "";
            if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
            }
            tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
            tLRPC$Message6.dialog_id = j22;
            tLRPC$Message6.invert_media = z20;
            if (tL_stories$StoryItem6 == null) {
            }
            j7 = j5;
            messageObject6 = messageObject11;
            messageObject7 = messageObject13;
            replyQuote2 = replyQuote;
            if (j24 == 0) {
            }
            if (tLRPC$ReplyMarkup != null) {
            }
            if (DialogObject.isEncryptedDialog(j22)) {
            }
            if (messageObject7 != null) {
            }
            i18 = i15;
            tL_stories$StoryItem3 = tL_stories$StoryItem2;
            j8 = j22;
            z8 = false;
            if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
            }
            tLRPC$Message6.media_unread = true;
            if (tLRPC$Message6.from_id == null) {
            }
            tLRPC$Message6.send_state = 1;
            if (hashMap4 == null) {
            }
            if (j9 <= 0) {
            }
            messageObject8 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message6, ((messageObject6 == null && messageObject6 == messageObject7 && messageObject6.getId() == 1) || z8) ? null : messageObject7, true, true);
            messageObject8.sendAnimationData = sendAnimationData;
            messageObject8.wasJustSent = true;
            messageObject8.scheduled = i13 == null;
            if (!messageObject8.isForwarded()) {
            }
            videoEditedInfo = messageObject8.videoEditedInfo;
            if (videoEditedInfo != null) {
            }
            if (videoEditedInfo6 == null) {
            }
            videoEditedInfo = videoEditedInfo2;
            if (j10 != 0) {
            }
            if (BuildVars.LOGS_ENABLED) {
            }
            str23 = str22;
            tLRPC$InputPeer4 = tLRPC$InputPeer3;
            sendMessagesHelper7 = sendMessagesHelper6;
            str24 = str22;
            if (c5 != 0) {
            }
            SendMessagesHelper sendMessagesHelper1522222222 = this;
            long j2622222222 = j12;
            HashMap<String, String> hashMap522222222 = hashMap4;
            MessageObject messageObject1422222222 = messageObject6;
            TLRPC$InputPeer tLRPC$InputPeer622222222 = tLRPC$InputPeer4;
            TLRPC$Message tLRPC$Message3122222222 = tLRPC$Message6;
            Object obj1822222222 = obj5;
            Object obj1922222222 = obj16;
            ?? r4222222222 = i13;
            ArrayList<TLRPC$MessageEntity> arrayList1222222222 = arrayList4;
            TL_stories$StoryItem tL_stories$StoryItem922222222 = tL_stories$StoryItem4;
            String str4822222222 = str15;
            if (tLRPC$EncryptedChat == null) {
            }
        }
        i11 = i24;
        TLRPC$TL_inputQuickReplyShortcut tLRPC$TL_inputQuickReplyShortcut2 = new TLRPC$TL_inputQuickReplyShortcut();
        str18 = str40;
        tLRPC$TL_inputQuickReplyShortcut2.shortcut = str18;
        tLRPC$Message6.quick_reply_shortcut = tLRPC$TL_inputQuickReplyShortcut2;
        tLRPC$Message6.quick_reply_shortcut_id = i11;
        if (i11 != 0) {
        }
        sendMessageParams2 = sendMessageParams;
        str19 = str17;
        i12 = i9;
        j6 = sendMessageParams2.effect_id;
        if (j6 != 0) {
        }
        if (hashMap4 == null) {
        }
        tLRPC$Message6.params = hashMap4;
        if (messageObject3 == null) {
        }
        if (str18 == null) {
        }
        str35 = "";
        if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
        }
        tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
        tLRPC$Message6.dialog_id = j22;
        tLRPC$Message6.invert_media = z20;
        if (tL_stories$StoryItem6 == null) {
        }
        j7 = j5;
        messageObject6 = messageObject11;
        messageObject7 = messageObject13;
        replyQuote2 = replyQuote;
        if (j24 == 0) {
        }
        if (tLRPC$ReplyMarkup != null) {
        }
        if (DialogObject.isEncryptedDialog(j22)) {
        }
        if (messageObject7 != null) {
        }
        i18 = i15;
        tL_stories$StoryItem3 = tL_stories$StoryItem2;
        j8 = j22;
        z8 = false;
        if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
        }
        tLRPC$Message6.media_unread = true;
        if (tLRPC$Message6.from_id == null) {
        }
        tLRPC$Message6.send_state = 1;
        if (hashMap4 == null) {
        }
        if (j9 <= 0) {
        }
        messageObject8 = new MessageObject(sendMessagesHelper.currentAccount, tLRPC$Message6, ((messageObject6 == null && messageObject6 == messageObject7 && messageObject6.getId() == 1) || z8) ? null : messageObject7, true, true);
        messageObject8.sendAnimationData = sendAnimationData;
        messageObject8.wasJustSent = true;
        messageObject8.scheduled = i13 == null;
        if (!messageObject8.isForwarded()) {
        }
        videoEditedInfo = messageObject8.videoEditedInfo;
        if (videoEditedInfo != null) {
        }
        if (videoEditedInfo6 == null) {
        }
        videoEditedInfo = videoEditedInfo2;
        if (j10 != 0) {
        }
        if (BuildVars.LOGS_ENABLED) {
        }
        str23 = str22;
        tLRPC$InputPeer4 = tLRPC$InputPeer3;
        sendMessagesHelper7 = sendMessagesHelper6;
        str24 = str22;
        if (c5 != 0) {
        }
        SendMessagesHelper sendMessagesHelper15222222222 = this;
        long j26222222222 = j12;
        HashMap<String, String> hashMap5222222222 = hashMap4;
        MessageObject messageObject14222222222 = messageObject6;
        TLRPC$InputPeer tLRPC$InputPeer6222222222 = tLRPC$InputPeer4;
        TLRPC$Message tLRPC$Message31222222222 = tLRPC$Message6;
        Object obj18222222222 = obj5;
        Object obj19222222222 = obj16;
        ?? r42222222222 = i13;
        ArrayList<TLRPC$MessageEntity> arrayList12222222222 = arrayList4;
        TL_stories$StoryItem tL_stories$StoryItem9222222222 = tL_stories$StoryItem4;
        String str48222222222 = str15;
        if (tLRPC$EncryptedChat == null) {
        }
    }

    private void performSendDelayedMessage(DelayedMessage delayedMessage) {
        performSendDelayedMessage(delayedMessage, -1);
    }

    private TLRPC$PhotoSize getThumbForSecretChat(ArrayList<TLRPC$PhotoSize> arrayList) {
        if (arrayList != null && !arrayList.isEmpty()) {
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                TLRPC$PhotoSize tLRPC$PhotoSize = arrayList.get(i);
                if (tLRPC$PhotoSize != null && !(tLRPC$PhotoSize instanceof TLRPC$TL_photoPathSize) && !(tLRPC$PhotoSize instanceof TLRPC$TL_photoSizeEmpty) && tLRPC$PhotoSize.location != null) {
                    if (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) {
                        return tLRPC$PhotoSize;
                    }
                    TLRPC$TL_photoSize_layer127 tLRPC$TL_photoSize_layer127 = new TLRPC$TL_photoSize_layer127();
                    tLRPC$TL_photoSize_layer127.type = tLRPC$PhotoSize.type;
                    tLRPC$TL_photoSize_layer127.w = tLRPC$PhotoSize.w;
                    tLRPC$TL_photoSize_layer127.h = tLRPC$PhotoSize.h;
                    tLRPC$TL_photoSize_layer127.size = tLRPC$PhotoSize.size;
                    byte[] bArr = tLRPC$PhotoSize.bytes;
                    tLRPC$TL_photoSize_layer127.bytes = bArr;
                    if (bArr == null) {
                        tLRPC$TL_photoSize_layer127.bytes = new byte[0];
                    }
                    TLRPC$TL_fileLocation_layer82 tLRPC$TL_fileLocation_layer82 = new TLRPC$TL_fileLocation_layer82();
                    tLRPC$TL_photoSize_layer127.location = tLRPC$TL_fileLocation_layer82;
                    TLRPC$FileLocation tLRPC$FileLocation = tLRPC$PhotoSize.location;
                    tLRPC$TL_fileLocation_layer82.dc_id = tLRPC$FileLocation.dc_id;
                    tLRPC$TL_fileLocation_layer82.volume_id = tLRPC$FileLocation.volume_id;
                    tLRPC$TL_fileLocation_layer82.local_id = tLRPC$FileLocation.local_id;
                    tLRPC$TL_fileLocation_layer82.secret = tLRPC$FileLocation.secret;
                    return tLRPC$TL_photoSize_layer127;
                }
            }
        }
        return null;
    }

    private void performSendDelayedMessage(final DelayedMessage delayedMessage, int i) {
        boolean z;
        TLRPC$Document tLRPC$Document;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile;
        boolean z2;
        String str;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$InputMedia tLRPC$InputMedia2;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$InputMedia tLRPC$InputMedia3;
        String str2;
        VideoEditedInfo videoEditedInfo;
        TLRPC$InputMedia tLRPC$InputMedia4;
        int i2 = delayedMessage.type;
        if (i2 == 0) {
            String str3 = delayedMessage.httpLocation;
            if (str3 != null) {
                putToDelayedMessages(str3, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
            } else if (delayedMessage.sendRequest != null) {
                String file = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                putToDelayedMessages(file, delayedMessage);
                getFileLoader().uploadFile(file, false, true, ConnectionsManager.FileTypePhoto);
                putToUploadingMessages(delayedMessage.obj);
            } else {
                String file2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                if (delayedMessage.sendEncryptedRequest != null && delayedMessage.photoSize.location.dc_id != 0) {
                    File file3 = new File(file2);
                    if (!file3.exists()) {
                        file2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize, true).toString();
                        file3 = new File(file2);
                    }
                    if (!file3.exists()) {
                        putToDelayedMessages(FileLoader.getAttachFileName(delayedMessage.photoSize), delayedMessage);
                        getFileLoader().loadFile(ImageLocation.getForObject(delayedMessage.photoSize, delayedMessage.locationParent), delayedMessage.parentObject, "jpg", 3, 0);
                        return;
                    }
                }
                putToDelayedMessages(file2, delayedMessage);
                getFileLoader().uploadFile(file2, true, true, ConnectionsManager.FileTypePhoto);
                putToUploadingMessages(delayedMessage.obj);
            }
        } else if (i2 == 1) {
            VideoEditedInfo videoEditedInfo2 = delayedMessage.videoEditedInfo;
            if (videoEditedInfo2 != null && videoEditedInfo2.needConvert()) {
                MessageObject messageObject = delayedMessage.obj;
                String str4 = messageObject.messageOwner.attachPath;
                TLRPC$Document document = messageObject.getDocument();
                if (str4 == null) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(FileLoader.getDirectory(4));
                    sb.append("/");
                    sb.append(document.id);
                    sb.append(".");
                    sb.append(delayedMessage.videoEditedInfo.isSticker ? "webm" : "mp4");
                    str4 = sb.toString();
                }
                putToDelayedMessages(str4, delayedMessage);
                if (!delayedMessage.videoEditedInfo.alreadyScheduledConverting) {
                    MediaController.getInstance().scheduleVideoConvert(delayedMessage.obj);
                }
                putToUploadingMessages(delayedMessage.obj);
                return;
            }
            VideoEditedInfo videoEditedInfo3 = delayedMessage.videoEditedInfo;
            if (videoEditedInfo3 != null) {
                TLRPC$InputFile tLRPC$InputFile = videoEditedInfo3.file;
                if (tLRPC$InputFile != null) {
                    TLObject tLObject = delayedMessage.sendRequest;
                    if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
                        tLRPC$InputMedia4 = ((TLRPC$TL_messages_sendMedia) tLObject).media;
                    } else {
                        tLRPC$InputMedia4 = ((TLRPC$TL_messages_editMessage) tLObject).media;
                    }
                    tLRPC$InputMedia4.file = tLRPC$InputFile;
                    videoEditedInfo3.file = null;
                } else if (videoEditedInfo3.encryptedFile != null) {
                    TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage = (TLRPC$TL_decryptedMessage) delayedMessage.sendEncryptedRequest;
                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                    tLRPC$DecryptedMessageMedia.size = videoEditedInfo3.estimatedSize;
                    tLRPC$DecryptedMessageMedia.key = videoEditedInfo3.key;
                    tLRPC$DecryptedMessageMedia.iv = videoEditedInfo3.iv;
                    SecretChatHelper secretChatHelper = getSecretChatHelper();
                    MessageObject messageObject2 = delayedMessage.obj;
                    secretChatHelper.performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject2.messageOwner, delayedMessage.encryptedChat, delayedMessage.videoEditedInfo.encryptedFile, delayedMessage.originalPath, messageObject2);
                    delayedMessage.videoEditedInfo.encryptedFile = null;
                    return;
                }
            }
            TLObject tLObject2 = delayedMessage.sendRequest;
            if (tLObject2 != null) {
                if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
                    tLRPC$InputMedia3 = ((TLRPC$TL_messages_sendMedia) tLObject2).media;
                } else {
                    tLRPC$InputMedia3 = ((TLRPC$TL_messages_editMessage) tLObject2).media;
                }
                if (tLRPC$InputMedia3 instanceof TLRPC$TL_inputMediaPaidMedia) {
                    TLRPC$TL_inputMediaPaidMedia tLRPC$TL_inputMediaPaidMedia = (TLRPC$TL_inputMediaPaidMedia) tLRPC$InputMedia3;
                    if (!tLRPC$TL_inputMediaPaidMedia.extended_media.isEmpty()) {
                        tLRPC$InputMedia3 = tLRPC$TL_inputMediaPaidMedia.extended_media.get(0);
                    }
                }
                if (tLRPC$InputMedia3.file == null) {
                    MessageObject messageObject3 = delayedMessage.obj;
                    String str5 = messageObject3.messageOwner.attachPath;
                    TLRPC$Document document2 = messageObject3.getDocument();
                    if (str5 == null) {
                        str5 = FileLoader.getDirectory(4) + "/" + document2.id + ".mp4";
                    }
                    String str6 = str5;
                    putToDelayedMessages(str6, delayedMessage);
                    VideoEditedInfo videoEditedInfo4 = delayedMessage.obj.videoEditedInfo;
                    if (videoEditedInfo4 == null || !videoEditedInfo4.notReadyYet) {
                        if (videoEditedInfo4 != null && videoEditedInfo4.needConvert()) {
                            getFileLoader().uploadFile(str6, false, false, document2.size, ConnectionsManager.FileTypeVideo, false);
                        } else {
                            getFileLoader().uploadFile(str6, false, false, ConnectionsManager.FileTypeVideo);
                        }
                    }
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                }
                MessageObject messageObject4 = delayedMessage.obj;
                if (messageObject4 != null && (videoEditedInfo = messageObject4.videoEditedInfo) != null && videoEditedInfo.isSticker) {
                    str2 = "webp";
                } else {
                    str2 = "jpg";
                }
                String str7 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + "." + str2;
                putToDelayedMessages(str7, delayedMessage);
                getFileLoader().uploadFile(str7, false, true, ConnectionsManager.FileTypePhoto);
                putToUploadingMessages(delayedMessage.obj);
                return;
            }
            MessageObject messageObject5 = delayedMessage.obj;
            String str8 = messageObject5.messageOwner.attachPath;
            TLRPC$Document document3 = messageObject5.getDocument();
            if (str8 == null) {
                str8 = FileLoader.getDirectory(4) + "/" + document3.id + ".mp4";
            }
            if (delayedMessage.sendEncryptedRequest != null && document3.dc_id != 0) {
                File file4 = new File(str8);
                if (!file4.exists() && (file4 = getFileLoader().getPathToMessage(delayedMessage.obj.messageOwner)) != null && file4.exists()) {
                    TLRPC$Message tLRPC$Message = delayedMessage.obj.messageOwner;
                    String absolutePath = file4.getAbsolutePath();
                    tLRPC$Message.attachPath = absolutePath;
                    delayedMessage.obj.attachPathExists = true;
                    str8 = absolutePath;
                }
                if ((file4 == null || (!file4.exists() && delayedMessage.obj.getDocument() != null)) && (file4 = getFileLoader().getPathToAttach(delayedMessage.obj.getDocument(), false)) != null && file4.exists()) {
                    TLRPC$Message tLRPC$Message2 = delayedMessage.obj.messageOwner;
                    String absolutePath2 = file4.getAbsolutePath();
                    tLRPC$Message2.attachPath = absolutePath2;
                    delayedMessage.obj.attachPathExists = true;
                    str8 = absolutePath2;
                }
                if (file4 == null || !file4.exists()) {
                    putToDelayedMessages(FileLoader.getAttachFileName(document3), delayedMessage);
                    getFileLoader().loadFile(document3, delayedMessage.parentObject, 3, 0);
                    return;
                }
            }
            String str9 = str8;
            putToDelayedMessages(str9, delayedMessage);
            VideoEditedInfo videoEditedInfo5 = delayedMessage.obj.videoEditedInfo;
            if (videoEditedInfo5 == null || !videoEditedInfo5.notReadyYet) {
                if (videoEditedInfo5 != null && videoEditedInfo5.needConvert()) {
                    getFileLoader().uploadFile(str9, true, false, document3.size, ConnectionsManager.FileTypeVideo, false);
                } else {
                    getFileLoader().uploadFile(str9, true, false, ConnectionsManager.FileTypeVideo);
                }
            }
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 == 2) {
            String str10 = delayedMessage.httpLocation;
            if (str10 != null) {
                putToDelayedMessages(str10, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "gif", this.currentAccount);
                return;
            }
            TLObject tLObject3 = delayedMessage.sendRequest;
            if (tLObject3 != null) {
                if (tLObject3 instanceof TLRPC$TL_messages_sendMedia) {
                    tLRPC$InputMedia2 = ((TLRPC$TL_messages_sendMedia) tLObject3).media;
                } else {
                    tLRPC$InputMedia2 = ((TLRPC$TL_messages_editMessage) tLObject3).media;
                }
                if (tLRPC$InputMedia2.file == null) {
                    String str11 = delayedMessage.obj.messageOwner.attachPath;
                    putToDelayedMessages(str11, delayedMessage);
                    getFileLoader().uploadFile(str11, delayedMessage.sendRequest == null, false, ConnectionsManager.FileTypeFile);
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                } else if (tLRPC$InputMedia2.thumb != null || (tLRPC$PhotoSize = delayedMessage.photoSize) == null || (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                    return;
                } else {
                    String str12 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                    putToDelayedMessages(str12, delayedMessage);
                    getFileLoader().uploadFile(str12, false, true, ConnectionsManager.FileTypePhoto);
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                }
            }
            MessageObject messageObject6 = delayedMessage.obj;
            String str13 = messageObject6.messageOwner.attachPath;
            TLRPC$Document document4 = messageObject6.getDocument();
            if (delayedMessage.sendEncryptedRequest != null && document4.dc_id != 0) {
                File file5 = new File(str13);
                if (!file5.exists() && (file5 = getFileLoader().getPathToMessage(delayedMessage.obj.messageOwner)) != null && file5.exists()) {
                    TLRPC$Message tLRPC$Message3 = delayedMessage.obj.messageOwner;
                    String absolutePath3 = file5.getAbsolutePath();
                    tLRPC$Message3.attachPath = absolutePath3;
                    delayedMessage.obj.attachPathExists = true;
                    str13 = absolutePath3;
                }
                if ((file5 == null || (!file5.exists() && delayedMessage.obj.getDocument() != null)) && (file5 = getFileLoader().getPathToAttach(delayedMessage.obj.getDocument(), false)) != null && file5.exists()) {
                    TLRPC$Message tLRPC$Message4 = delayedMessage.obj.messageOwner;
                    String absolutePath4 = file5.getAbsolutePath();
                    tLRPC$Message4.attachPath = absolutePath4;
                    delayedMessage.obj.attachPathExists = true;
                    str13 = absolutePath4;
                }
                if (file5 == null || !file5.exists()) {
                    putToDelayedMessages(FileLoader.getAttachFileName(document4), delayedMessage);
                    getFileLoader().loadFile(document4, delayedMessage.parentObject, 3, 0);
                    return;
                }
            }
            putToDelayedMessages(str13, delayedMessage);
            getFileLoader().uploadFile(str13, true, false, ConnectionsManager.FileTypeFile);
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 == 3) {
            String str14 = delayedMessage.obj.messageOwner.attachPath;
            putToDelayedMessages(str14, delayedMessage);
            getFileLoader().uploadFile(str14, delayedMessage.sendRequest == null, true, ConnectionsManager.FileTypeAudio);
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 != 4) {
            if (i2 == 5) {
                final String str15 = "stickerset_" + delayedMessage.obj.getId();
                TLRPC$TL_messages_getStickerSet tLRPC$TL_messages_getStickerSet = new TLRPC$TL_messages_getStickerSet();
                tLRPC$TL_messages_getStickerSet.stickerset = (TLRPC$InputStickerSet) delayedMessage.parentObject;
                getConnectionsManager().sendRequest(tLRPC$TL_messages_getStickerSet, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda71
                    @Override // org.telegram.tgnet.RequestDelegate
                    public final void run(TLObject tLObject4, TLRPC$TL_error tLRPC$TL_error) {
                        SendMessagesHelper.this.lambda$performSendDelayedMessage$36(delayedMessage, str15, tLObject4, tLRPC$TL_error);
                    }
                });
                putToDelayedMessages(str15, delayedMessage);
            }
        } else {
            boolean z3 = i < 0;
            if (delayedMessage.performMediaUpload) {
                int size = i < 0 ? delayedMessage.messageObjects.size() - 1 : i;
                MessageObject messageObject7 = delayedMessage.messageObjects.get(size);
                TLRPC$Document document5 = messageObject7.getDocument();
                if (document5 == null && (MessageObject.getMedia(messageObject7) instanceof TLRPC$TL_messageMediaPaidMedia)) {
                    TLRPC$TL_messageMediaPaidMedia tLRPC$TL_messageMediaPaidMedia = (TLRPC$TL_messageMediaPaidMedia) MessageObject.getMedia(messageObject7);
                    TLRPC$MessageExtendedMedia tLRPC$MessageExtendedMedia = size >= tLRPC$TL_messageMediaPaidMedia.extended_media.size() ? null : tLRPC$TL_messageMediaPaidMedia.extended_media.get(size);
                    TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$MessageExtendedMedia instanceof TLRPC$TL_messageExtendedMedia ? ((TLRPC$TL_messageExtendedMedia) tLRPC$MessageExtendedMedia).media : null;
                    tLRPC$Document = tLRPC$MessageMedia == null ? null : tLRPC$MessageMedia.document;
                } else {
                    tLRPC$Document = document5;
                }
                if (tLRPC$Document != null) {
                    if (delayedMessage.videoEditedInfo != null) {
                        String str16 = messageObject7.messageOwner.attachPath;
                        if (str16 == null) {
                            str16 = FileLoader.getDirectory(4) + "/" + tLRPC$Document.id + ".mp4";
                        }
                        putToDelayedMessages(str16, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject7, str16);
                        delayedMessage.extraHashMap.put(str16 + "_i", messageObject7);
                        TLRPC$PhotoSize tLRPC$PhotoSize2 = delayedMessage.photoSize;
                        if (tLRPC$PhotoSize2 != null && tLRPC$PhotoSize2.location != null) {
                            delayedMessage.extraHashMap.put(str16 + "_t", delayedMessage.photoSize);
                        }
                        if (!delayedMessage.videoEditedInfo.alreadyScheduledConverting) {
                            MediaController.getInstance().scheduleVideoConvert(messageObject7);
                        }
                        delayedMessage.obj = messageObject7;
                        putToUploadingMessages(messageObject7);
                    } else {
                        String str17 = messageObject7.messageOwner.attachPath;
                        if (str17 == null) {
                            StringBuilder sb2 = new StringBuilder();
                            sb2.append(FileLoader.getDirectory(4));
                            sb2.append("/");
                            str = "_t";
                            sb2.append(tLRPC$Document.id);
                            sb2.append(".mp4");
                            str17 = sb2.toString();
                        } else {
                            str = "_t";
                        }
                        TLObject tLObject4 = delayedMessage.sendRequest;
                        if (tLObject4 != null) {
                            if (tLObject4 instanceof TLRPC$TL_messages_sendMultiMedia) {
                                tLRPC$InputMedia = ((TLRPC$TL_messages_sendMultiMedia) tLObject4).multi_media.get(size).media;
                            } else {
                                if (tLObject4 instanceof TLRPC$TL_messages_sendMedia) {
                                    TLRPC$InputMedia tLRPC$InputMedia5 = ((TLRPC$TL_messages_sendMedia) tLObject4).media;
                                    if (tLRPC$InputMedia5 instanceof TLRPC$TL_inputMediaPaidMedia) {
                                        tLRPC$InputMedia = ((TLRPC$TL_inputMediaPaidMedia) tLRPC$InputMedia5).extended_media.get(size);
                                    }
                                }
                                tLRPC$InputMedia = null;
                            }
                            if (tLRPC$InputMedia != null && tLRPC$InputMedia.file == null) {
                                putToDelayedMessages(str17, delayedMessage);
                                delayedMessage.extraHashMap.put(messageObject7, str17);
                                delayedMessage.extraHashMap.put(str17, tLRPC$InputMedia);
                                delayedMessage.extraHashMap.put(str17 + "_i", messageObject7);
                                TLRPC$PhotoSize tLRPC$PhotoSize3 = delayedMessage.photoSize;
                                if (tLRPC$PhotoSize3 != null && tLRPC$PhotoSize3.location != null) {
                                    delayedMessage.extraHashMap.put(str17 + str, delayedMessage.photoSize);
                                }
                                VideoEditedInfo videoEditedInfo6 = messageObject7.videoEditedInfo;
                                if (videoEditedInfo6 != null && videoEditedInfo6.needConvert()) {
                                    getFileLoader().uploadFile(str17, false, false, tLRPC$Document.size, ConnectionsManager.FileTypeVideo, false);
                                } else {
                                    getFileLoader().uploadFile(str17, false, false, ConnectionsManager.FileTypeVideo);
                                }
                                putToUploadingMessages(messageObject7);
                            } else if (delayedMessage.photoSize != null) {
                                String str18 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                                putToDelayedMessages(str18, delayedMessage);
                                delayedMessage.extraHashMap.put(str18 + "_o", str17);
                                delayedMessage.extraHashMap.put(messageObject7, str18);
                                delayedMessage.extraHashMap.put(str18, tLRPC$InputMedia);
                                getFileLoader().uploadFile(str18, false, true, ConnectionsManager.FileTypePhoto);
                                putToUploadingMessages(messageObject7);
                            }
                        } else {
                            String str19 = str;
                            putToDelayedMessages(str17, delayedMessage);
                            delayedMessage.extraHashMap.put(messageObject7, str17);
                            delayedMessage.extraHashMap.put(str17, ((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(size));
                            delayedMessage.extraHashMap.put(str17 + "_i", messageObject7);
                            TLRPC$PhotoSize tLRPC$PhotoSize4 = delayedMessage.photoSize;
                            if (tLRPC$PhotoSize4 != null && tLRPC$PhotoSize4.location != null) {
                                delayedMessage.extraHashMap.put(str17 + str19, delayedMessage.photoSize);
                            }
                            VideoEditedInfo videoEditedInfo7 = messageObject7.videoEditedInfo;
                            if (videoEditedInfo7 != null && videoEditedInfo7.needConvert()) {
                                getFileLoader().uploadFile(str17, true, false, tLRPC$Document.size, ConnectionsManager.FileTypeVideo, false);
                            } else {
                                getFileLoader().uploadFile(str17, true, false, ConnectionsManager.FileTypeVideo);
                            }
                            putToUploadingMessages(messageObject7);
                        }
                    }
                    delayedMessage.videoEditedInfo = null;
                    delayedMessage.photoSize = null;
                } else {
                    String str20 = delayedMessage.httpLocation;
                    if (str20 != null) {
                        putToDelayedMessages(str20, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject7, delayedMessage.httpLocation);
                        delayedMessage.extraHashMap.put(delayedMessage.httpLocation, messageObject7);
                        ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
                        delayedMessage.httpLocation = null;
                    } else {
                        TLObject tLObject5 = delayedMessage.sendRequest;
                        if (tLObject5 instanceof TLRPC$TL_messages_sendMultiMedia) {
                            tLRPC$InputEncryptedFile = ((TLRPC$TL_messages_sendMultiMedia) tLObject5).multi_media.get(size).media;
                        } else {
                            if (tLObject5 instanceof TLRPC$TL_messages_sendMedia) {
                                TLRPC$InputMedia tLRPC$InputMedia6 = ((TLRPC$TL_messages_sendMedia) tLObject5).media;
                                if (tLRPC$InputMedia6 instanceof TLRPC$TL_inputMediaPaidMedia) {
                                    tLRPC$InputEncryptedFile = ((TLRPC$TL_inputMediaPaidMedia) tLRPC$InputMedia6).extended_media.get(size);
                                }
                            }
                            tLRPC$InputEncryptedFile = ((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(size);
                        }
                        String file6 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                        putToDelayedMessages(file6, delayedMessage);
                        delayedMessage.extraHashMap.put(file6, tLRPC$InputEncryptedFile);
                        delayedMessage.extraHashMap.put(messageObject7, file6);
                        z = true;
                        getFileLoader().uploadFile(file6, delayedMessage.sendEncryptedRequest != null, true, ConnectionsManager.FileTypePhoto);
                        putToUploadingMessages(messageObject7);
                        delayedMessage.photoSize = null;
                        z2 = false;
                        delayedMessage.performMediaUpload = z2;
                    }
                }
                z2 = false;
                z = true;
                delayedMessage.performMediaUpload = z2;
            } else {
                z = true;
                if (!delayedMessage.messageObjects.isEmpty()) {
                    ArrayList<MessageObject> arrayList = delayedMessage.messageObjects;
                    putToSendingMessages(arrayList.get(arrayList.size() - 1).messageOwner, delayedMessage.finalGroupMessage != 0);
                }
            }
            sendReadyToSendGroup(delayedMessage, z3, z);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendDelayedMessage$36(final DelayedMessage delayedMessage, final String str, final TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda17
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendDelayedMessage$35(tLObject, delayedMessage, str);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendDelayedMessage$35(TLObject tLObject, DelayedMessage delayedMessage, String str) {
        boolean z;
        if (tLObject != null) {
            TLRPC$TL_messages_stickerSet tLRPC$TL_messages_stickerSet = (TLRPC$TL_messages_stickerSet) tLObject;
            getMediaDataController().storeTempStickerSet(tLRPC$TL_messages_stickerSet);
            TLRPC$TL_inputStickerSetShortName tLRPC$TL_inputStickerSetShortName = new TLRPC$TL_inputStickerSetShortName();
            ((TLRPC$TL_documentAttributeSticker_layer55) delayedMessage.locationParent).stickerset = tLRPC$TL_inputStickerSetShortName;
            tLRPC$TL_inputStickerSetShortName.short_name = tLRPC$TL_messages_stickerSet.set.short_name;
            z = true;
        } else {
            z = false;
        }
        ArrayList<DelayedMessage> remove = this.delayedMessages.remove(str);
        if (remove == null || remove.isEmpty()) {
            return;
        }
        if (z) {
            getMessagesStorage().replaceMessageIfExists(remove.get(0).obj.messageOwner, null, null, false);
        }
        MessageObject messageObject = delayedMessage.obj;
        getSecretChatHelper().performSendEncryptedRequest((TLRPC$DecryptedMessage) delayedMessage.sendEncryptedRequest, messageObject.messageOwner, delayedMessage.encryptedChat, null, null, messageObject);
    }

    private void uploadMultiMedia(final DelayedMessage delayedMessage, final TLRPC$InputMedia tLRPC$InputMedia, TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile, String str) {
        if (tLRPC$InputMedia == null) {
            if (tLRPC$InputEncryptedFile != null) {
                TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                int i = 0;
                while (true) {
                    if (i >= tLRPC$TL_messages_sendEncryptedMultiMedia.files.size()) {
                        break;
                    } else if (tLRPC$TL_messages_sendEncryptedMultiMedia.files.get(i) == tLRPC$InputEncryptedFile) {
                        putToSendingMessages(delayedMessage.messages.get(i), delayedMessage.scheduled);
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.fileUploadProgressChanged, str, -1L, -1L, Boolean.FALSE);
                        break;
                    } else {
                        i++;
                    }
                }
                sendReadyToSendGroup(delayedMessage, false, true);
                return;
            }
            return;
        }
        TLRPC$TL_messages_uploadMedia tLRPC$TL_messages_uploadMedia = new TLRPC$TL_messages_uploadMedia();
        tLRPC$TL_messages_uploadMedia.media = tLRPC$InputMedia;
        TLObject tLObject = delayedMessage.sendRequest;
        if (tLObject instanceof TLRPC$TL_messages_sendMultiMedia) {
            TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) tLObject;
            tLRPC$TL_messages_uploadMedia.peer = tLRPC$TL_messages_sendMultiMedia.peer;
            int i2 = 0;
            while (true) {
                if (i2 >= tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                    break;
                } else if (tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media == tLRPC$InputMedia) {
                    putToSendingMessages(delayedMessage.messages.get(i2), delayedMessage.scheduled);
                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.fileUploadProgressChanged, str, -1L, -1L, Boolean.FALSE);
                    break;
                } else {
                    i2++;
                }
            }
        } else if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
            TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = (TLRPC$TL_messages_sendMedia) tLObject;
            TLRPC$InputMedia tLRPC$InputMedia2 = tLRPC$TL_messages_sendMedia.media;
            if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaPaidMedia) {
                tLRPC$TL_messages_uploadMedia.peer = tLRPC$TL_messages_sendMedia.peer;
                TLRPC$TL_inputMediaPaidMedia tLRPC$TL_inputMediaPaidMedia = (TLRPC$TL_inputMediaPaidMedia) tLRPC$InputMedia2;
                int i3 = 0;
                while (true) {
                    if (i3 >= tLRPC$TL_inputMediaPaidMedia.extended_media.size()) {
                        break;
                    } else if (tLRPC$TL_inputMediaPaidMedia.extended_media.get(i3) == tLRPC$InputMedia) {
                        putToSendingMessages(delayedMessage.messages.get(i3), delayedMessage.scheduled);
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.fileUploadProgressChanged, str, -1L, -1L, Boolean.FALSE);
                        break;
                    } else {
                        i3++;
                    }
                }
            }
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_uploadMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda46
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject2, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$uploadMultiMedia$38(tLRPC$InputMedia, delayedMessage, tLObject2, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$uploadMultiMedia$38(final TLRPC$InputMedia tLRPC$InputMedia, final DelayedMessage delayedMessage, final TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda41
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$uploadMultiMedia$37(tLObject, tLRPC$InputMedia, delayedMessage);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:19:0x0067  */
    /* JADX WARN: Removed duplicated region for block: B:43:0x00cb  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$uploadMultiMedia$37(TLObject tLObject, TLRPC$InputMedia tLRPC$InputMedia, DelayedMessage delayedMessage) {
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument;
        if (tLObject != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia = (TLRPC$MessageMedia) tLObject;
            if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedPhoto) && (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto)) {
                TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto = new TLRPC$TL_inputMediaPhoto();
                TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                tLRPC$TL_inputMediaPhoto.id = tLRPC$TL_inputPhoto;
                TLRPC$Photo tLRPC$Photo = tLRPC$MessageMedia.photo;
                tLRPC$TL_inputPhoto.id = tLRPC$Photo.id;
                tLRPC$TL_inputPhoto.access_hash = tLRPC$Photo.access_hash;
                tLRPC$TL_inputPhoto.file_reference = tLRPC$Photo.file_reference;
                tLRPC$TL_inputMediaPhoto.spoiler = tLRPC$InputMedia.spoiler;
                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaPhoto;
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("set uploaded photo");
                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaPhoto;
                }
            } else if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument) && (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument)) {
                TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument2 = new TLRPC$TL_inputMediaDocument();
                TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                tLRPC$TL_inputMediaDocument2.id = tLRPC$TL_inputDocument;
                TLRPC$Document tLRPC$Document = tLRPC$MessageMedia.document;
                tLRPC$TL_inputDocument.id = tLRPC$Document.id;
                tLRPC$TL_inputDocument.access_hash = tLRPC$Document.access_hash;
                tLRPC$TL_inputDocument.file_reference = tLRPC$Document.file_reference;
                tLRPC$TL_inputMediaDocument2.spoiler = tLRPC$InputMedia.spoiler;
                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument2;
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("set uploaded document");
                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument2;
                }
            }
            if (tLRPC$TL_inputMediaDocument == null) {
                int i = tLRPC$InputMedia.ttl_seconds;
                if (i != 0) {
                    tLRPC$TL_inputMediaDocument.ttl_seconds = i;
                    tLRPC$TL_inputMediaDocument.flags |= 1;
                }
                TLObject tLObject2 = delayedMessage.sendRequest;
                if (tLObject2 instanceof TLRPC$TL_messages_sendMultiMedia) {
                    TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) tLObject2;
                    int i2 = 0;
                    while (true) {
                        if (i2 >= tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                            break;
                        } else if (tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media == tLRPC$InputMedia) {
                            tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media = tLRPC$TL_inputMediaDocument;
                            break;
                        } else {
                            i2++;
                        }
                    }
                } else if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
                    TLRPC$InputMedia tLRPC$InputMedia2 = ((TLRPC$TL_messages_sendMedia) tLObject2).media;
                    if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaPaidMedia) {
                        TLRPC$TL_inputMediaPaidMedia tLRPC$TL_inputMediaPaidMedia = (TLRPC$TL_inputMediaPaidMedia) tLRPC$InputMedia2;
                        int i3 = 0;
                        while (true) {
                            if (i3 >= tLRPC$TL_inputMediaPaidMedia.extended_media.size()) {
                                break;
                            } else if (tLRPC$TL_inputMediaPaidMedia.extended_media.get(i3) == tLRPC$InputMedia) {
                                tLRPC$TL_inputMediaPaidMedia.extended_media.set(i3, tLRPC$TL_inputMediaDocument);
                                break;
                            } else {
                                i3++;
                            }
                        }
                    }
                }
                sendReadyToSendGroup(delayedMessage, false, true);
                return;
            }
            delayedMessage.markAsError();
            return;
        }
        tLRPC$TL_inputMediaDocument = null;
        if (tLRPC$TL_inputMediaDocument == null) {
        }
    }

    private void sendReadyToSendGroup(DelayedMessage delayedMessage, boolean z, boolean z2) {
        DelayedMessage findMaxDelayedMessageForMessageId;
        DelayedMessage findMaxDelayedMessageForMessageId2;
        ArrayList<MessageObject> arrayList;
        if (delayedMessage.messageObjects.isEmpty()) {
            delayedMessage.markAsError();
            return;
        }
        String str = "group_" + delayedMessage.groupId;
        int i = delayedMessage.finalGroupMessage;
        ArrayList<MessageObject> arrayList2 = delayedMessage.messageObjects;
        int i2 = 1;
        if (i != arrayList2.get(arrayList2.size() - 1).getId()) {
            if (z) {
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("final message not added, add");
                }
                putToDelayedMessages(str, delayedMessage);
                return;
            } else if (BuildVars.DEBUG_VERSION) {
                FileLog.d("final message not added");
                return;
            } else {
                return;
            }
        }
        int i3 = 0;
        if (z) {
            this.delayedMessages.remove(str);
            if (!delayedMessage.scheduled) {
                MessageObject messageObject = delayedMessage.obj;
                i2 = ((messageObject == null || !messageObject.isQuickReply()) && ((arrayList = delayedMessage.messageObjects) == null || arrayList.isEmpty() || !delayedMessage.messageObjects.get(0).isQuickReply())) ? 0 : 5;
            }
            if (delayedMessage.paidMedia) {
                ArrayList<MessageObject> arrayList3 = new ArrayList<>();
                arrayList3.add(delayedMessage.messageObjects.get(0));
                ArrayList<TLRPC$Message> arrayList4 = new ArrayList<>();
                arrayList4.add(delayedMessage.messages.get(0));
                getMessagesStorage().putMessages(arrayList4, false, true, false, 0, i2, 0L);
                getMessagesController().updateInterfaceWithMessages(delayedMessage.peer, arrayList3, i2);
            } else {
                getMessagesStorage().putMessages(delayedMessage.messages, false, true, false, 0, i2, 0L);
                getMessagesController().updateInterfaceWithMessages(delayedMessage.peer, delayedMessage.messageObjects, i2);
            }
            if (!delayedMessage.scheduled) {
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
            }
            if (BuildVars.DEBUG_VERSION) {
                FileLog.d("add message");
            }
        }
        TLObject tLObject = delayedMessage.sendRequest;
        if (tLObject instanceof TLRPC$TL_messages_sendMultiMedia) {
            TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) tLObject;
            while (i3 < tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_messages_sendMultiMedia.multi_media.get(i3).media;
                if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedPhoto) || (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument)) {
                    if (BuildVars.DEBUG_VERSION) {
                        FileLog.d("multi media not ready");
                        return;
                    }
                    return;
                }
                i3++;
            }
            if (z2 && (findMaxDelayedMessageForMessageId2 = findMaxDelayedMessageForMessageId(delayedMessage.finalGroupMessage, delayedMessage.peer)) != null) {
                findMaxDelayedMessageForMessageId2.addDelayedRequest(delayedMessage.sendRequest, delayedMessage.messageObjects, delayedMessage.originalPaths, delayedMessage.parentObjects, delayedMessage, delayedMessage.scheduled);
                ArrayList<DelayedMessageSendAfterRequest> arrayList5 = delayedMessage.requests;
                if (arrayList5 != null) {
                    findMaxDelayedMessageForMessageId2.requests.addAll(arrayList5);
                }
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("has maxDelayedMessage, delay");
                    return;
                }
                return;
            }
        } else {
            if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
                TLRPC$InputMedia tLRPC$InputMedia2 = ((TLRPC$TL_messages_sendMedia) tLObject).media;
                if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaPaidMedia) {
                    TLRPC$TL_inputMediaPaidMedia tLRPC$TL_inputMediaPaidMedia = (TLRPC$TL_inputMediaPaidMedia) tLRPC$InputMedia2;
                    while (i3 < tLRPC$TL_inputMediaPaidMedia.extended_media.size()) {
                        TLRPC$InputMedia tLRPC$InputMedia3 = tLRPC$TL_inputMediaPaidMedia.extended_media.get(i3);
                        if ((tLRPC$InputMedia3 instanceof TLRPC$TL_inputMediaUploadedPhoto) || (tLRPC$InputMedia3 instanceof TLRPC$TL_inputMediaUploadedDocument)) {
                            if (BuildVars.DEBUG_VERSION) {
                                FileLog.d("multi media not ready");
                                return;
                            }
                            return;
                        }
                        i3++;
                    }
                    if (z2 && (findMaxDelayedMessageForMessageId = findMaxDelayedMessageForMessageId(delayedMessage.finalGroupMessage, delayedMessage.peer)) != null) {
                        findMaxDelayedMessageForMessageId.addDelayedRequest(delayedMessage.sendRequest, delayedMessage.messageObjects, delayedMessage.originalPaths, delayedMessage.parentObjects, delayedMessage, delayedMessage.scheduled);
                        ArrayList<DelayedMessageSendAfterRequest> arrayList6 = delayedMessage.requests;
                        if (arrayList6 != null) {
                            findMaxDelayedMessageForMessageId.requests.addAll(arrayList6);
                        }
                        if (BuildVars.DEBUG_VERSION) {
                            FileLog.d("has maxDelayedMessage, delay");
                            return;
                        }
                        return;
                    }
                }
            }
            TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
            while (i3 < tLRPC$TL_messages_sendEncryptedMultiMedia.files.size()) {
                if (tLRPC$TL_messages_sendEncryptedMultiMedia.files.get(i3) instanceof TLRPC$TL_inputEncryptedFile) {
                    return;
                }
                i3++;
            }
        }
        TLObject tLObject2 = delayedMessage.sendRequest;
        if (tLObject2 instanceof TLRPC$TL_messages_sendMultiMedia) {
            performSendMessageRequestMulti((TLRPC$TL_messages_sendMultiMedia) tLObject2, delayedMessage.messageObjects, delayedMessage.originalPaths, delayedMessage.parentObjects, delayedMessage, delayedMessage.scheduled);
        } else if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
            performSendMessageRequestMulti((TLRPC$TL_messages_sendMedia) tLObject2, delayedMessage.messageObjects, delayedMessage.originalPaths, delayedMessage.parentObjects, delayedMessage, delayedMessage.scheduled);
        } else {
            getSecretChatHelper().performSendEncryptedRequest((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest, delayedMessage);
        }
        delayedMessage.sendDelayedRequests();
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void putToSendingMessages(final TLRPC$Message tLRPC$Message, final boolean z) {
        if (Thread.currentThread() != ApplicationLoader.applicationHandler.getLooper().getThread()) {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda96
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$putToSendingMessages$39(tLRPC$Message, z);
                }
            });
        } else {
            putToSendingMessages(tLRPC$Message, z, true);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$putToSendingMessages$39(TLRPC$Message tLRPC$Message, boolean z) {
        putToSendingMessages(tLRPC$Message, z, true);
    }

    protected void putToSendingMessages(TLRPC$Message tLRPC$Message, boolean z, boolean z2) {
        if (tLRPC$Message == null) {
            return;
        }
        int i = tLRPC$Message.id;
        if (i > 0) {
            this.editingMessages.put(i, tLRPC$Message);
            return;
        }
        boolean z3 = this.sendingMessages.indexOfKey(i) >= 0;
        removeFromUploadingMessages(tLRPC$Message.id, z);
        this.sendingMessages.put(tLRPC$Message.id, tLRPC$Message);
        if (z || z3) {
            return;
        }
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        LongSparseArray<Integer> longSparseArray = this.sendingMessagesIdDialogs;
        longSparseArray.put(dialogId, Integer.valueOf(longSparseArray.get(dialogId, 0).intValue() + 1));
        if (z2) {
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public TLRPC$Message removeFromSendingMessages(int i, boolean z) {
        long dialogId;
        Integer num;
        if (i > 0) {
            TLRPC$Message tLRPC$Message = this.editingMessages.get(i);
            if (tLRPC$Message != null) {
                this.editingMessages.remove(i);
                return tLRPC$Message;
            }
            return tLRPC$Message;
        }
        TLRPC$Message tLRPC$Message2 = this.sendingMessages.get(i);
        if (tLRPC$Message2 != null) {
            this.sendingMessages.remove(i);
            if (!z && (num = this.sendingMessagesIdDialogs.get((dialogId = MessageObject.getDialogId(tLRPC$Message2)))) != null) {
                int intValue = num.intValue() - 1;
                if (intValue <= 0) {
                    this.sendingMessagesIdDialogs.remove(dialogId);
                } else {
                    this.sendingMessagesIdDialogs.put(dialogId, Integer.valueOf(intValue));
                }
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
            }
        }
        return tLRPC$Message2;
    }

    public int getSendingMessageId(long j) {
        for (int i = 0; i < this.sendingMessages.size(); i++) {
            TLRPC$Message valueAt = this.sendingMessages.valueAt(i);
            if (valueAt.dialog_id == j) {
                return valueAt.id;
            }
        }
        for (int i2 = 0; i2 < this.uploadMessages.size(); i2++) {
            TLRPC$Message valueAt2 = this.uploadMessages.valueAt(i2);
            if (valueAt2.dialog_id == j) {
                return valueAt2.id;
            }
        }
        return 0;
    }

    protected void putToUploadingMessages(MessageObject messageObject) {
        if (messageObject == null || messageObject.getId() > 0 || messageObject.scheduled) {
            return;
        }
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        boolean z = this.uploadMessages.indexOfKey(tLRPC$Message.id) >= 0;
        this.uploadMessages.put(tLRPC$Message.id, tLRPC$Message);
        if (z) {
            return;
        }
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        LongSparseArray<Integer> longSparseArray = this.uploadingMessagesIdDialogs;
        longSparseArray.put(dialogId, Integer.valueOf(longSparseArray.get(dialogId, 0).intValue() + 1));
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
    }

    protected void removeFromUploadingMessages(int i, boolean z) {
        TLRPC$Message tLRPC$Message;
        if (i > 0 || z || (tLRPC$Message = this.uploadMessages.get(i)) == null) {
            return;
        }
        this.uploadMessages.remove(i);
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        Integer num = this.uploadingMessagesIdDialogs.get(dialogId);
        if (num != null) {
            int intValue = num.intValue() - 1;
            if (intValue <= 0) {
                this.uploadingMessagesIdDialogs.remove(dialogId);
            } else {
                this.uploadingMessagesIdDialogs.put(dialogId, Integer.valueOf(intValue));
            }
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
        }
    }

    public boolean isSendingMessage(int i) {
        return this.sendingMessages.indexOfKey(i) >= 0 || this.editingMessages.indexOfKey(i) >= 0;
    }

    public boolean isSendingPaidMessage(int i, int i2) {
        HashMap<String, ArrayList<DelayedMessage>> hashMap = this.delayedMessages;
        DelayedMessage delayedMessage = null;
        if (hashMap != null) {
            for (ArrayList<DelayedMessage> arrayList : hashMap.values()) {
                if (arrayList != null) {
                    Iterator<DelayedMessage> it = arrayList.iterator();
                    while (it.hasNext()) {
                        DelayedMessage next = it.next();
                        ArrayList<TLRPC$Message> arrayList2 = next.messages;
                        if (arrayList2 != null) {
                            Iterator<TLRPC$Message> it2 = arrayList2.iterator();
                            while (true) {
                                if (!it2.hasNext()) {
                                    break;
                                }
                                TLRPC$Message next2 = it2.next();
                                if (next2 != null && next2.id == i) {
                                    delayedMessage = next;
                                    break;
                                }
                            }
                            if (delayedMessage != null) {
                                break;
                            }
                        }
                    }
                    if (delayedMessage != null) {
                        break;
                    }
                }
            }
        }
        if (delayedMessage != null && i2 >= 0 && i2 < delayedMessage.messages.size()) {
            i = delayedMessage.messages.get(i2).id;
        }
        return this.sendingMessages.indexOfKey(i) >= 0 || this.editingMessages.indexOfKey(i) >= 0;
    }

    public boolean isSendingMessageIdDialog(long j) {
        return this.sendingMessagesIdDialogs.get(j, 0).intValue() > 0;
    }

    public boolean isUploadingMessageIdDialog(long j) {
        return this.uploadingMessagesIdDialogs.get(j, 0).intValue() > 0;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void performSendMessageRequestMulti(final TLObject tLObject, final ArrayList<MessageObject> arrayList, final ArrayList<String> arrayList2, final ArrayList<Object> arrayList3, final DelayedMessage delayedMessage, final boolean z) {
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            putToSendingMessages(arrayList.get(i).messageOwner, z);
        }
        getConnectionsManager().sendRequest(tLObject, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda59
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject2, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$48(arrayList3, tLObject, arrayList, arrayList2, delayedMessage, z, tLObject2, tLRPC$TL_error);
            }
        }, (QuickAckDelegate) null, 68);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$48(ArrayList arrayList, final TLObject tLObject, final ArrayList arrayList2, final ArrayList arrayList3, final DelayedMessage delayedMessage, final boolean z, final TLObject tLObject2, final TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error != null && FileRefController.isFileRefError(tLRPC$TL_error.text)) {
            final int fileRefErrorIndex = FileRefController.getFileRefErrorIndex(tLRPC$TL_error.text);
            if (arrayList != null) {
                ArrayList arrayList4 = new ArrayList(arrayList);
                if (fileRefErrorIndex >= 0) {
                    int i = 0;
                    while (i < arrayList4.size()) {
                        arrayList4.set(i, fileRefErrorIndex == i ? arrayList4.get(i) : null);
                        i++;
                    }
                }
                getFileRefController().requestReference(arrayList4, tLObject, arrayList2, arrayList3, arrayList4, delayedMessage, Boolean.valueOf(z));
                return;
            } else if (delayedMessage != null && !delayedMessage.getRetriedToSend(fileRefErrorIndex)) {
                delayedMessage.setRetriedToSend(fileRefErrorIndex, true);
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda38
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequestMulti$40(tLObject, fileRefErrorIndex, delayedMessage, arrayList2, z);
                    }
                });
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda39
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$47(tLRPC$TL_error, tLObject2, arrayList2, arrayList3, tLObject, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:14:0x003b  */
    /* JADX WARN: Removed duplicated region for block: B:15:0x0046  */
    /* JADX WARN: Removed duplicated region for block: B:36:0x00bd  */
    /* JADX WARN: Removed duplicated region for block: B:38:0x00cc  */
    /* JADX WARN: Removed duplicated region for block: B:43:0x0102 A[ADDED_TO_REGION] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$40(TLObject tLObject, int i, DelayedMessage delayedMessage, ArrayList arrayList, boolean z) {
        boolean z2;
        int i2;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$InputMedia tLRPC$InputMedia2;
        int i3;
        TLRPC$InputMedia tLRPC$InputMedia3;
        if (tLObject instanceof TLRPC$TL_messages_sendMultiMedia) {
            TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) tLObject;
            int size = tLRPC$TL_messages_sendMultiMedia.multi_media.size();
            z2 = false;
            while (i3 < size) {
                if (i < 0) {
                    if (delayedMessage.parentObjects.get(i3) == null) {
                    }
                    removeFromSendingMessages(((MessageObject) arrayList.get(i3)).getId(), z);
                    TLRPC$TL_inputSingleMedia tLRPC$TL_inputSingleMedia = tLRPC$TL_messages_sendMultiMedia.multi_media.get(i3);
                    tLRPC$InputMedia3 = tLRPC$TL_inputSingleMedia.media;
                    if (!(tLRPC$InputMedia3 instanceof TLRPC$TL_inputMediaPhoto)) {
                    }
                    delayedMessage.videoEditedInfo = delayedMessage.videoEditedInfos.get(i3);
                    delayedMessage.httpLocation = delayedMessage.httpLocations.get(i3);
                    TLRPC$PhotoSize tLRPC$PhotoSize = delayedMessage.locations.get(i3);
                    delayedMessage.photoSize = tLRPC$PhotoSize;
                    delayedMessage.performMediaUpload = true;
                    if (tLRPC$TL_inputSingleMedia.media.file == null) {
                    }
                    performSendDelayedMessage(delayedMessage, i3);
                } else {
                    i3 = i != i3 ? i3 + 1 : 0;
                    removeFromSendingMessages(((MessageObject) arrayList.get(i3)).getId(), z);
                    TLRPC$TL_inputSingleMedia tLRPC$TL_inputSingleMedia2 = tLRPC$TL_messages_sendMultiMedia.multi_media.get(i3);
                    tLRPC$InputMedia3 = tLRPC$TL_inputSingleMedia2.media;
                    if (!(tLRPC$InputMedia3 instanceof TLRPC$TL_inputMediaPhoto)) {
                        tLRPC$TL_inputSingleMedia2.media = delayedMessage.inputMedias.get(i3);
                    } else if (tLRPC$InputMedia3 instanceof TLRPC$TL_inputMediaDocument) {
                        tLRPC$TL_inputSingleMedia2.media = delayedMessage.inputMedias.get(i3);
                    }
                    delayedMessage.videoEditedInfo = delayedMessage.videoEditedInfos.get(i3);
                    delayedMessage.httpLocation = delayedMessage.httpLocations.get(i3);
                    TLRPC$PhotoSize tLRPC$PhotoSize2 = delayedMessage.locations.get(i3);
                    delayedMessage.photoSize = tLRPC$PhotoSize2;
                    delayedMessage.performMediaUpload = true;
                    z2 = (tLRPC$TL_inputSingleMedia2.media.file == null && tLRPC$PhotoSize2 == null) ? true : true;
                    performSendDelayedMessage(delayedMessage, i3);
                }
            }
        } else if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
            TLRPC$TL_inputMediaPaidMedia tLRPC$TL_inputMediaPaidMedia = (TLRPC$TL_inputMediaPaidMedia) ((TLRPC$TL_messages_sendMedia) tLObject).media;
            int size2 = tLRPC$TL_inputMediaPaidMedia.extended_media.size();
            z2 = false;
            while (i2 < size2) {
                if (i < 0) {
                    if (delayedMessage.parentObjects.get(i2) == null) {
                    }
                    removeFromSendingMessages(((MessageObject) arrayList.get(i2)).getId(), z);
                    tLRPC$InputMedia = tLRPC$TL_inputMediaPaidMedia.extended_media.get(i2);
                    if (!(tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPhoto)) {
                    }
                    tLRPC$InputMedia = tLRPC$InputMedia2;
                    delayedMessage.videoEditedInfo = delayedMessage.videoEditedInfos.get(i2);
                    delayedMessage.httpLocation = delayedMessage.httpLocations.get(i2);
                    TLRPC$PhotoSize tLRPC$PhotoSize3 = delayedMessage.locations.get(i2);
                    delayedMessage.photoSize = tLRPC$PhotoSize3;
                    delayedMessage.performMediaUpload = true;
                    if (tLRPC$InputMedia.file == null) {
                    }
                    performSendDelayedMessage(delayedMessage, i2);
                } else {
                    i2 = i != i2 ? i2 + 1 : 0;
                    removeFromSendingMessages(((MessageObject) arrayList.get(i2)).getId(), z);
                    tLRPC$InputMedia = tLRPC$TL_inputMediaPaidMedia.extended_media.get(i2);
                    if (!(tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPhoto)) {
                        ArrayList<TLRPC$InputMedia> arrayList2 = tLRPC$TL_inputMediaPaidMedia.extended_media;
                        tLRPC$InputMedia2 = delayedMessage.inputMedias.get(i2);
                        arrayList2.set(i2, tLRPC$InputMedia2);
                    } else {
                        if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaDocument) {
                            ArrayList<TLRPC$InputMedia> arrayList3 = tLRPC$TL_inputMediaPaidMedia.extended_media;
                            tLRPC$InputMedia2 = delayedMessage.inputMedias.get(i2);
                            arrayList3.set(i2, tLRPC$InputMedia2);
                        }
                        delayedMessage.videoEditedInfo = delayedMessage.videoEditedInfos.get(i2);
                        delayedMessage.httpLocation = delayedMessage.httpLocations.get(i2);
                        TLRPC$PhotoSize tLRPC$PhotoSize32 = delayedMessage.locations.get(i2);
                        delayedMessage.photoSize = tLRPC$PhotoSize32;
                        delayedMessage.performMediaUpload = true;
                        z2 = (tLRPC$InputMedia.file == null && tLRPC$PhotoSize32 == null) ? true : true;
                        performSendDelayedMessage(delayedMessage, i2);
                    }
                    tLRPC$InputMedia = tLRPC$InputMedia2;
                    delayedMessage.videoEditedInfo = delayedMessage.videoEditedInfos.get(i2);
                    delayedMessage.httpLocation = delayedMessage.httpLocations.get(i2);
                    TLRPC$PhotoSize tLRPC$PhotoSize322 = delayedMessage.locations.get(i2);
                    delayedMessage.photoSize = tLRPC$PhotoSize322;
                    delayedMessage.performMediaUpload = true;
                    if (tLRPC$InputMedia.file == null) {
                    }
                    performSendDelayedMessage(delayedMessage, i2);
                }
            }
        } else {
            z2 = false;
        }
        if (z2) {
            return;
        }
        for (int i4 = 0; i4 < arrayList.size(); i4++) {
            TLRPC$Message tLRPC$Message = ((MessageObject) arrayList.get(i4)).messageOwner;
            getMessagesStorage().markMessageAsSendError(tLRPC$Message, z ? 1 : 0);
            tLRPC$Message.send_state = 2;
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
            processSentMessage(tLRPC$Message.id);
            removeFromSendingMessages(tLRPC$Message.id, z);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$47(TLRPC$TL_error tLRPC$TL_error, TLObject tLObject, ArrayList arrayList, ArrayList arrayList2, TLObject tLObject2, final boolean z) {
        int i;
        boolean z2;
        final TLRPC$Updates tLRPC$Updates;
        TLRPC$Message tLRPC$Message;
        ArrayList arrayList3;
        int i2;
        LongSparseArray longSparseArray;
        SparseArray sparseArray;
        TLRPC$Message tLRPC$Message2;
        TLRPC$Updates tLRPC$Updates2;
        TLRPC$Updates tLRPC$Updates3;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        SparseArray<TLRPC$MessageReplies> sparseArray2;
        ArrayList arrayList4 = arrayList;
        Object[] objArr = z ? 1 : 0;
        if (tLRPC$TL_error == null) {
            SparseArray sparseArray3 = new SparseArray();
            LongSparseArray longSparseArray2 = new LongSparseArray();
            TLRPC$Updates tLRPC$Updates4 = (TLRPC$Updates) tLObject;
            ArrayList<TLRPC$Update> arrayList5 = tLRPC$Updates4.updates;
            int i3 = 0;
            LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray3 = null;
            while (i3 < arrayList5.size()) {
                TLRPC$Update tLRPC$Update = arrayList5.get(i3);
                if (tLRPC$Update instanceof TLRPC$TL_updateMessageID) {
                    TLRPC$TL_updateMessageID tLRPC$TL_updateMessageID = (TLRPC$TL_updateMessageID) tLRPC$Update;
                    tLRPC$Updates3 = tLRPC$Updates4;
                    longSparseArray2.put(tLRPC$TL_updateMessageID.random_id, Integer.valueOf(tLRPC$TL_updateMessageID.id));
                    arrayList5.remove(i3);
                } else {
                    tLRPC$Updates3 = tLRPC$Updates4;
                    if (tLRPC$Update instanceof TLRPC$TL_updateNewMessage) {
                        final TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update;
                        TLRPC$Message tLRPC$Message3 = tLRPC$TL_updateNewMessage.message;
                        sparseArray3.put(tLRPC$Message3.id, tLRPC$Message3);
                        Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda32
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$41(tLRPC$TL_updateNewMessage);
                            }
                        });
                        arrayList5.remove(i3);
                    } else {
                        if (tLRPC$Update instanceof TLRPC$TL_updateNewChannelMessage) {
                            final TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update;
                            final long updateChannelId = MessagesController.getUpdateChannelId(tLRPC$TL_updateNewChannelMessage);
                            TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(updateChannelId));
                            if ((chat == null || chat.megagroup) && (tLRPC$MessageReplyHeader = tLRPC$TL_updateNewChannelMessage.message.reply_to) != null && (tLRPC$MessageReplyHeader.reply_to_top_id != 0 || tLRPC$MessageReplyHeader.reply_to_msg_id != 0)) {
                                if (longSparseArray3 == null) {
                                    longSparseArray3 = new LongSparseArray<>();
                                }
                                long dialogId = MessageObject.getDialogId(tLRPC$TL_updateNewChannelMessage.message);
                                SparseArray<TLRPC$MessageReplies> sparseArray4 = longSparseArray3.get(dialogId);
                                if (sparseArray4 == null) {
                                    sparseArray2 = new SparseArray<>();
                                    longSparseArray3.put(dialogId, sparseArray2);
                                } else {
                                    sparseArray2 = sparseArray4;
                                }
                                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2 = tLRPC$TL_updateNewChannelMessage.message.reply_to;
                                int i4 = tLRPC$MessageReplyHeader2.reply_to_top_id;
                                if (i4 == 0) {
                                    i4 = tLRPC$MessageReplyHeader2.reply_to_msg_id;
                                }
                                TLRPC$MessageReplies tLRPC$MessageReplies = sparseArray2.get(i4);
                                if (tLRPC$MessageReplies == null) {
                                    tLRPC$MessageReplies = new TLRPC$TL_messageReplies();
                                    sparseArray2.put(i4, tLRPC$MessageReplies);
                                }
                                TLRPC$Peer tLRPC$Peer = tLRPC$TL_updateNewChannelMessage.message.from_id;
                                if (tLRPC$Peer != null) {
                                    tLRPC$MessageReplies.recent_repliers.add(0, tLRPC$Peer);
                                }
                                tLRPC$MessageReplies.replies++;
                            }
                            TLRPC$Message tLRPC$Message4 = tLRPC$TL_updateNewChannelMessage.message;
                            sparseArray3.put(tLRPC$Message4.id, tLRPC$Message4);
                            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda33
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$performSendMessageRequestMulti$42(tLRPC$TL_updateNewChannelMessage);
                                }
                            });
                            arrayList5.remove(i3);
                            i3--;
                            if (tLRPC$TL_updateNewChannelMessage.message.pinned) {
                                Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda34
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.this.lambda$performSendMessageRequestMulti$43(tLRPC$TL_updateNewChannelMessage, updateChannelId);
                                    }
                                });
                            }
                        } else if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                            TLRPC$Message tLRPC$Message5 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                            sparseArray3.put(tLRPC$Message5.id, tLRPC$Message5);
                            arrayList5.remove(i3);
                        } else if (tLRPC$Update instanceof TLRPC$TL_updateQuickReplyMessage) {
                            QuickRepliesController.getInstance(this.currentAccount).processUpdate(tLRPC$Update, arrayList.isEmpty() ? null : ((MessageObject) arrayList4.get(0)).getQuickReplyName(), (arrayList.isEmpty() ? null : Integer.valueOf(((MessageObject) arrayList4.get(0)).getQuickReplyId())).intValue());
                            TLRPC$Message tLRPC$Message6 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update).message;
                            sparseArray3.put(tLRPC$Message6.id, tLRPC$Message6);
                            arrayList5.remove(i3);
                        }
                        i3++;
                        tLRPC$Updates4 = tLRPC$Updates3;
                    }
                }
                i3--;
                i3++;
                tLRPC$Updates4 = tLRPC$Updates3;
            }
            TLRPC$Updates tLRPC$Updates5 = tLRPC$Updates4;
            if (longSparseArray3 != null) {
                getMessagesStorage().putChannelViews(null, null, longSparseArray3, true);
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.didUpdateMessagesViews, null, null, longSparseArray3, Boolean.TRUE);
            }
            int i5 = 0;
            while (i5 < arrayList.size()) {
                MessageObject messageObject = (MessageObject) arrayList4.get(i5);
                String str = (String) arrayList2.get(i5);
                final TLRPC$Message tLRPC$Message7 = messageObject.messageOwner;
                int i6 = tLRPC$Message7.id;
                ArrayList arrayList6 = new ArrayList();
                Integer num = (Integer) longSparseArray2.get(tLRPC$Message7.random_id);
                if (num == null || (tLRPC$Message = (TLRPC$Message) sparseArray3.get(num.intValue())) == null) {
                    tLRPC$Updates = tLRPC$Updates5;
                    i = 2;
                    z2 = true;
                    break;
                }
                MessageObject.getDialogId(tLRPC$Message);
                arrayList6.add(tLRPC$Message);
                if ((tLRPC$Message.flags & ConnectionsManager.FileTypeVideo) != 0) {
                    TLRPC$Message tLRPC$Message8 = messageObject.messageOwner;
                    tLRPC$Message8.ttl_period = tLRPC$Message.ttl_period;
                    tLRPC$Message8.flags |= ConnectionsManager.FileTypeVideo;
                }
                if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
                    arrayList3 = arrayList6;
                    i2 = i6;
                    longSparseArray = longSparseArray2;
                    sparseArray = sparseArray3;
                    tLRPC$Message2 = tLRPC$Message;
                    updateMediaPaths((MessageObject) arrayList4.get(0), tLRPC$Message, tLRPC$Message.id, arrayList2, false, -1);
                    tLRPC$Updates2 = tLRPC$Updates5;
                } else {
                    arrayList3 = arrayList6;
                    i2 = i6;
                    longSparseArray = longSparseArray2;
                    sparseArray = sparseArray3;
                    tLRPC$Message2 = tLRPC$Message;
                    tLRPC$Updates2 = tLRPC$Updates5;
                    updateMediaPaths(messageObject, tLRPC$Message2, tLRPC$Message2.id, str, false);
                }
                final int mediaExistanceFlags = messageObject.getMediaExistanceFlags();
                tLRPC$Message7.id = tLRPC$Message2.id;
                int i7 = tLRPC$Message2.quick_reply_shortcut_id;
                tLRPC$Message7.quick_reply_shortcut_id = i7;
                if (i7 != 0) {
                    tLRPC$Message7.flags |= 1073741824;
                }
                final long j = tLRPC$Message2.grouped_id;
                if (objArr == null) {
                    Integer num2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message2.dialog_id));
                    if (num2 == null) {
                        num2 = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message2.out, tLRPC$Message2.dialog_id));
                        getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message2.dialog_id), num2);
                    }
                    tLRPC$Message2.unread = num2.intValue() < tLRPC$Message2.id;
                }
                getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                tLRPC$Message7.send_state = 0;
                tLRPC$Updates5 = tLRPC$Updates2;
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i2), Integer.valueOf(tLRPC$Message7.id), tLRPC$Message7, Long.valueOf(tLRPC$Message7.dialog_id), Long.valueOf(j), Integer.valueOf(mediaExistanceFlags), Boolean.valueOf(z));
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer2, Integer.valueOf(i2), Integer.valueOf(tLRPC$Message7.id), tLRPC$Message7, Long.valueOf(tLRPC$Message7.dialog_id), Long.valueOf(j), Integer.valueOf(mediaExistanceFlags), Boolean.valueOf(z));
                final int i8 = i2;
                final ArrayList arrayList7 = arrayList3;
                getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda35
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequestMulti$45(z, tLRPC$Message7, i8, arrayList7, j, mediaExistanceFlags);
                    }
                });
                i5++;
                arrayList4 = arrayList;
                objArr = z ? 1 : 0;
                sparseArray3 = sparseArray;
                longSparseArray2 = longSparseArray;
            }
            tLRPC$Updates = tLRPC$Updates5;
            i = 2;
            z2 = false;
            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda36
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequestMulti$46(tLRPC$Updates);
                }
            });
        } else {
            i = 2;
            AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLObject2, new Object[0]);
            z2 = true;
        }
        if (z2) {
            for (int i9 = 0; i9 < arrayList.size(); i9++) {
                TLRPC$Message tLRPC$Message9 = ((MessageObject) arrayList.get(i9)).messageOwner;
                getMessagesStorage().markMessageAsSendError(tLRPC$Message9, z ? 1 : 0);
                tLRPC$Message9.send_state = i;
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message9.id));
                processSentMessage(tLRPC$Message9.id);
                removeFromSendingMessages(tLRPC$Message9.id, z);
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$41(TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$42(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage) {
        getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$TL_updateNewChannelMessage.message.peer_id.channel_id);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$43(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage, long j) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        arrayList.add(Integer.valueOf(tLRPC$TL_updateNewChannelMessage.message.id));
        getMessagesStorage().updatePinnedMessages(-j, arrayList, true, -1, 0, false, null);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$45(final boolean z, final TLRPC$Message tLRPC$Message, final int i, ArrayList arrayList, final long j, final int i2) {
        int i3 = (tLRPC$Message.quick_reply_shortcut_id == 0 && tLRPC$Message.quick_reply_shortcut == null) ? z ? 1 : 0 : 5;
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message.random_id, MessageObject.getPeerId(tLRPC$Message.peer_id), Integer.valueOf(i), tLRPC$Message.id, 0, false, z ? 1 : 0, tLRPC$Message.quick_reply_shortcut_id);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, i3, tLRPC$Message.quick_reply_shortcut_id);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda14
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$44(tLRPC$Message, i, j, i2, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$44(TLRPC$Message tLRPC$Message, int i, long j, int i2, boolean z) {
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), Long.valueOf(j), Integer.valueOf(i2), Boolean.valueOf(z));
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer2, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), Long.valueOf(j), Integer.valueOf(i2), Boolean.valueOf(z));
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$46(TLRPC$Updates tLRPC$Updates) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void performSendMessageRequest(TLObject tLObject, MessageObject messageObject, String str, DelayedMessage delayedMessage, Object obj, HashMap<String, String> hashMap, boolean z) {
        performSendMessageRequest(tLObject, messageObject, str, null, false, delayedMessage, obj, hashMap, z);
    }

    private DelayedMessage findMaxDelayedMessageForMessageId(int i, long j) {
        int i2;
        DelayedMessage delayedMessage = null;
        int i3 = Integer.MIN_VALUE;
        for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
            ArrayList<DelayedMessage> value = entry.getValue();
            int size = value.size();
            for (int i4 = 0; i4 < size; i4++) {
                DelayedMessage delayedMessage2 = value.get(i4);
                int i5 = delayedMessage2.type;
                if ((i5 == 4 || i5 == 0) && delayedMessage2.peer == j) {
                    MessageObject messageObject = delayedMessage2.obj;
                    if (messageObject != null) {
                        i2 = messageObject.getId();
                    } else {
                        ArrayList<MessageObject> arrayList = delayedMessage2.messageObjects;
                        if (arrayList == null || arrayList.isEmpty()) {
                            i2 = 0;
                        } else {
                            ArrayList<MessageObject> arrayList2 = delayedMessage2.messageObjects;
                            i2 = arrayList2.get(arrayList2.size() - 1).getId();
                        }
                    }
                    if (i2 != 0 && i2 > i && delayedMessage == null && i3 < i2) {
                        delayedMessage = delayedMessage2;
                        i3 = i2;
                    }
                }
            }
        }
        return delayedMessage;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void performSendMessageRequest(final TLObject tLObject, final MessageObject messageObject, final String str, final DelayedMessage delayedMessage, final boolean z, final DelayedMessage delayedMessage2, final Object obj, HashMap<String, String> hashMap, final boolean z2) {
        DelayedMessage findMaxDelayedMessageForMessageId;
        ArrayList<DelayedMessageSendAfterRequest> arrayList;
        if (!(tLObject instanceof TLRPC$TL_messages_editMessage) && z && (findMaxDelayedMessageForMessageId = findMaxDelayedMessageForMessageId(messageObject.getId(), messageObject.getDialogId())) != null) {
            findMaxDelayedMessageForMessageId.addDelayedRequest(tLObject, messageObject, str, obj, delayedMessage2, delayedMessage != null ? delayedMessage.scheduled : false);
            if (delayedMessage == null || (arrayList = delayedMessage.requests) == null) {
                return;
            }
            findMaxDelayedMessageForMessageId.requests.addAll(arrayList);
            return;
        }
        final TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        putToSendingMessages(tLRPC$Message, z2);
        tLRPC$Message.reqId = getConnectionsManager().sendRequest(tLObject, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda78
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject2, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$performSendMessageRequest$63(tLObject, obj, messageObject, str, delayedMessage, z, delayedMessage2, z2, tLRPC$Message, tLObject2, tLRPC$TL_error);
            }
        }, new QuickAckDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda79
            @Override // org.telegram.tgnet.QuickAckDelegate
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$65(tLRPC$Message);
            }
        }, (tLObject instanceof TLRPC$TL_messages_sendMessage ? 128 : 0) | 68);
        if (delayedMessage != null) {
            delayedMessage.sendDelayedRequests();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$63(final TLObject tLObject, Object obj, final MessageObject messageObject, final String str, DelayedMessage delayedMessage, boolean z, final DelayedMessage delayedMessage2, final boolean z2, final TLRPC$Message tLRPC$Message, final TLObject tLObject2, final TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error != null && (((tLObject instanceof TLRPC$TL_messages_sendMedia) || (tLObject instanceof TLRPC$TL_messages_editMessage)) && FileRefController.isFileRefError(tLRPC$TL_error.text))) {
            if (obj != null) {
                getFileRefController().requestReference(obj, tLObject, messageObject, str, delayedMessage, Boolean.valueOf(z), delayedMessage2, Boolean.valueOf(z2));
                return;
            } else if (delayedMessage2 != null) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda11
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequest$49(tLRPC$Message, z2, tLObject, delayedMessage2);
                    }
                });
                return;
            }
        }
        if (tLObject instanceof TLRPC$TL_messages_editMessage) {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda12
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequest$52(tLRPC$TL_error, tLRPC$Message, tLObject2, messageObject, str, z2, tLObject);
                }
            });
        } else {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequest$62(z2, tLRPC$TL_error, tLRPC$Message, tLObject2, messageObject, str, tLObject);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$49(TLRPC$Message tLRPC$Message, boolean z, TLObject tLObject, DelayedMessage delayedMessage) {
        removeFromSendingMessages(tLRPC$Message.id, z);
        if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
            TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = (TLRPC$TL_messages_sendMedia) tLObject;
            TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_messages_sendMedia.media;
            if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPhoto) {
                tLRPC$TL_messages_sendMedia.media = delayedMessage.inputUploadMedia;
            } else if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaDocument) {
                tLRPC$TL_messages_sendMedia.media = delayedMessage.inputUploadMedia;
            }
        } else if (tLObject instanceof TLRPC$TL_messages_editMessage) {
            TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = (TLRPC$TL_messages_editMessage) tLObject;
            TLRPC$InputMedia tLRPC$InputMedia2 = tLRPC$TL_messages_editMessage.media;
            if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaPhoto) {
                tLRPC$TL_messages_editMessage.media = delayedMessage.inputUploadMedia;
            } else if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaDocument) {
                tLRPC$TL_messages_editMessage.media = delayedMessage.inputUploadMedia;
            }
        }
        delayedMessage.performMediaUpload = true;
        performSendDelayedMessage(delayedMessage);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$52(TLRPC$TL_error tLRPC$TL_error, final TLRPC$Message tLRPC$Message, TLObject tLObject, MessageObject messageObject, String str, final boolean z, TLObject tLObject2) {
        int i = 0;
        TLRPC$Message tLRPC$Message2 = null;
        if (tLRPC$TL_error == null) {
            String str2 = tLRPC$Message.attachPath;
            final TLRPC$Updates tLRPC$Updates = (TLRPC$Updates) tLObject;
            ArrayList<TLRPC$Update> arrayList = tLRPC$Updates.updates;
            while (true) {
                if (i >= arrayList.size()) {
                    break;
                }
                TLRPC$Update tLRPC$Update = arrayList.get(i);
                if (tLRPC$Update instanceof TLRPC$TL_updateEditMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateEditMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateEditChannelMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateEditChannelMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateQuickReplyMessage) {
                    QuickRepliesController.getInstance(this.currentAccount).processUpdate(tLRPC$Update, MessageObject.getQuickReplyName(tLRPC$Message), MessageObject.getQuickReplyId(tLRPC$Message));
                    tLRPC$Message2 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update).message;
                    break;
                } else {
                    i++;
                }
            }
            TLRPC$Message tLRPC$Message3 = tLRPC$Message2;
            if (tLRPC$Message3 != null) {
                ImageLoader.saveMessageThumbs(tLRPC$Message3);
                updateMediaPaths(messageObject, tLRPC$Message3, tLRPC$Message3.id, str, false);
            }
            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda95
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequest$51(tLRPC$Updates, tLRPC$Message, z);
                }
            });
            return;
        }
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLObject2, new Object[0]);
        removeFromSendingMessages(tLRPC$Message.id, z);
        revertEditingMessageObject(messageObject);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$51(TLRPC$Updates tLRPC$Updates, final TLRPC$Message tLRPC$Message, final boolean z) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda75
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$50(tLRPC$Message, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$50(TLRPC$Message tLRPC$Message, boolean z) {
        processSentMessage(tLRPC$Message.id);
        removeFromSendingMessages(tLRPC$Message.id, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Code restructure failed: missing block: B:45:0x0120, code lost:
        r13 = r12;
        r2 = null;
     */
    /* JADX WARN: Removed duplicated region for block: B:131:0x0329  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$performSendMessageRequest$62(final boolean z, TLRPC$TL_error tLRPC$TL_error, final TLRPC$Message tLRPC$Message, TLObject tLObject, final MessageObject messageObject, String str, TLObject tLObject2) {
        int i;
        boolean z2;
        ArrayList arrayList;
        int i2;
        boolean z3;
        final int i3;
        LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray;
        TLRPC$Message tLRPC$Message2;
        boolean z4;
        boolean z5;
        int i4;
        boolean z6;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray2;
        int i5;
        TLRPC$Message tLRPC$Message3;
        boolean z7;
        if (tLRPC$TL_error == null) {
            int i6 = tLRPC$Message.id;
            ArrayList arrayList2 = new ArrayList();
            boolean z8 = tLRPC$Message.date == 2147483646;
            if (tLObject instanceof TLRPC$TL_updateShortSentMessage) {
                final TLRPC$TL_updateShortSentMessage tLRPC$TL_updateShortSentMessage = (TLRPC$TL_updateShortSentMessage) tLObject;
                arrayList = arrayList2;
                i2 = i6;
                i = 0;
                updateMediaPaths(messageObject, null, tLRPC$TL_updateShortSentMessage.id, null, false);
                int mediaExistanceFlags = messageObject.getMediaExistanceFlags();
                int i7 = tLRPC$TL_updateShortSentMessage.id;
                tLRPC$Message.id = i7;
                tLRPC$Message.local_id = i7;
                tLRPC$Message.date = tLRPC$TL_updateShortSentMessage.date;
                tLRPC$Message.entities = tLRPC$TL_updateShortSentMessage.entities;
                tLRPC$Message.out = tLRPC$TL_updateShortSentMessage.out;
                if ((tLRPC$TL_updateShortSentMessage.flags & ConnectionsManager.FileTypeVideo) != 0) {
                    tLRPC$Message.ttl_period = tLRPC$TL_updateShortSentMessage.ttl_period;
                    tLRPC$Message.flags |= ConnectionsManager.FileTypeVideo;
                }
                TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$TL_updateShortSentMessage.media;
                if (tLRPC$MessageMedia != null) {
                    tLRPC$Message.media = tLRPC$MessageMedia;
                    tLRPC$Message.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                    ImageLoader.saveMessageThumbs(tLRPC$Message);
                }
                TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$TL_updateShortSentMessage.media;
                if (((tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaGame) || (tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaInvoice)) && !TextUtils.isEmpty(tLRPC$TL_updateShortSentMessage.message)) {
                    tLRPC$Message.message = tLRPC$TL_updateShortSentMessage.message;
                }
                if (!tLRPC$Message.entities.isEmpty()) {
                    tLRPC$Message.flags |= 128;
                }
                Integer num = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message.dialog_id));
                if (num == null) {
                    num = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message.out, tLRPC$Message.dialog_id));
                    getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message.dialog_id), num);
                }
                tLRPC$Message.unread = num.intValue() < tLRPC$Message.id;
                Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda25
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequest$53(tLRPC$TL_updateShortSentMessage);
                    }
                });
                arrayList.add(tLRPC$Message);
                i3 = mediaExistanceFlags;
                z3 = false;
            } else {
                arrayList = arrayList2;
                i2 = i6;
                i = 0;
                if (tLObject instanceof TLRPC$Updates) {
                    final TLRPC$Updates tLRPC$Updates = (TLRPC$Updates) tLObject;
                    ArrayList<TLRPC$Update> arrayList3 = tLRPC$Updates.updates;
                    int i8 = 0;
                    while (true) {
                        if (i8 >= arrayList3.size()) {
                            longSparseArray = null;
                            tLRPC$Message2 = null;
                            break;
                        }
                        TLRPC$Update tLRPC$Update = arrayList3.get(i8);
                        if (tLRPC$Update instanceof TLRPC$TL_updateNewMessage) {
                            final TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update;
                            tLRPC$Message3 = tLRPC$TL_updateNewMessage.message;
                            if (tLRPC$Message3.action == null) {
                                arrayList.add(tLRPC$Message3);
                                Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda26
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.this.lambda$performSendMessageRequest$54(tLRPC$TL_updateNewMessage);
                                    }
                                });
                                arrayList3.remove(i8);
                                break;
                            }
                        }
                        if (tLRPC$Update instanceof TLRPC$TL_updateNewChannelMessage) {
                            final TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update;
                            final long updateChannelId = MessagesController.getUpdateChannelId(tLRPC$TL_updateNewChannelMessage);
                            TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(updateChannelId));
                            if (!(chat == null || chat.megagroup) || (tLRPC$MessageReplyHeader = tLRPC$TL_updateNewChannelMessage.message.reply_to) == null || (tLRPC$MessageReplyHeader.reply_to_top_id == 0 && tLRPC$MessageReplyHeader.reply_to_msg_id == 0)) {
                                i5 = i8;
                                longSparseArray2 = null;
                            } else {
                                longSparseArray2 = new LongSparseArray<>();
                                i5 = i8;
                                long dialogId = MessageObject.getDialogId(tLRPC$TL_updateNewChannelMessage.message);
                                SparseArray<TLRPC$MessageReplies> sparseArray = longSparseArray2.get(dialogId);
                                if (sparseArray == null) {
                                    sparseArray = new SparseArray<>();
                                    longSparseArray2.put(dialogId, sparseArray);
                                }
                                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2 = tLRPC$TL_updateNewChannelMessage.message.reply_to;
                                int i9 = tLRPC$MessageReplyHeader2.reply_to_top_id;
                                if (i9 == 0) {
                                    i9 = tLRPC$MessageReplyHeader2.reply_to_msg_id;
                                }
                                TLRPC$MessageReplies tLRPC$MessageReplies = sparseArray.get(i9);
                                if (tLRPC$MessageReplies == null) {
                                    tLRPC$MessageReplies = new TLRPC$TL_messageReplies();
                                    sparseArray.put(i9, tLRPC$MessageReplies);
                                }
                                TLRPC$Peer tLRPC$Peer = tLRPC$TL_updateNewChannelMessage.message.from_id;
                                if (tLRPC$Peer != null) {
                                    tLRPC$MessageReplies.recent_repliers.add(0, tLRPC$Peer);
                                }
                                tLRPC$MessageReplies.replies++;
                            }
                            TLRPC$Message tLRPC$Message4 = tLRPC$TL_updateNewChannelMessage.message;
                            arrayList.add(tLRPC$Message4);
                            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda27
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$performSendMessageRequest$55(tLRPC$TL_updateNewChannelMessage);
                                }
                            });
                            arrayList3.remove(i5);
                            if (tLRPC$TL_updateNewChannelMessage.message.pinned) {
                                Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda28
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.this.lambda$performSendMessageRequest$56(tLRPC$TL_updateNewChannelMessage, updateChannelId);
                                    }
                                });
                            }
                            longSparseArray = longSparseArray2;
                            tLRPC$Message2 = tLRPC$Message4;
                        } else {
                            int i10 = i8;
                            if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                                tLRPC$Message3 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                                arrayList.add(tLRPC$Message3);
                                arrayList3.remove(i10);
                                break;
                            } else if (tLRPC$Update instanceof TLRPC$TL_updateQuickReplyMessage) {
                                QuickRepliesController.getInstance(this.currentAccount).processUpdate(tLRPC$Update, messageObject.getQuickReplyName(), messageObject.getQuickReplyId());
                                tLRPC$Message3 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update).message;
                                arrayList.add(tLRPC$Message3);
                                arrayList3.remove(i10);
                                break;
                            } else {
                                i8 = i10 + 1;
                            }
                        }
                    }
                    if (longSparseArray != null) {
                        getMessagesStorage().putChannelViews(null, null, longSparseArray, true);
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.didUpdateMessagesViews, null, null, longSparseArray, Boolean.TRUE);
                    }
                    if (tLRPC$Message2 != null) {
                        MessageObject.getDialogId(tLRPC$Message2);
                        z4 = (!z8 || tLRPC$Message2.date == 2147483646) ? z ? 1 : 0 : false;
                        ImageLoader.saveMessageThumbs(tLRPC$Message2);
                        if (!z4) {
                            Integer num2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message2.dialog_id));
                            if (num2 == null) {
                                num2 = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message2.out, tLRPC$Message2.dialog_id));
                                getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message2.dialog_id), num2);
                            }
                            tLRPC$Message2.unread = num2.intValue() < tLRPC$Message2.id;
                        }
                        TLRPC$Message tLRPC$Message5 = messageObject.messageOwner;
                        tLRPC$Message5.post_author = tLRPC$Message2.post_author;
                        if ((tLRPC$Message2.flags & ConnectionsManager.FileTypeVideo) != 0) {
                            tLRPC$Message5.ttl_period = tLRPC$Message2.ttl_period;
                            tLRPC$Message5.flags |= ConnectionsManager.FileTypeVideo;
                        }
                        tLRPC$Message5.entities = tLRPC$Message2.entities;
                        int i11 = tLRPC$Message2.quick_reply_shortcut_id;
                        tLRPC$Message5.quick_reply_shortcut_id = i11;
                        if (i11 != 0) {
                            tLRPC$Message5.flags |= 1073741824;
                        }
                        updateMediaPaths(messageObject, tLRPC$Message2, tLRPC$Message2.id, str, false);
                        i4 = messageObject.getMediaExistanceFlags();
                        tLRPC$Message.id = tLRPC$Message2.id;
                        z5 = false;
                    } else {
                        if (BuildVars.LOGS_ENABLED) {
                            StringBuilder sb = new StringBuilder();
                            for (int i12 = 0; i12 < arrayList3.size(); i12++) {
                                sb.append(arrayList3.get(i12).getClass().getSimpleName());
                                sb.append(", ");
                            }
                            FileLog.d("can't find message in updates " + ((Object) sb));
                        }
                        z4 = z ? 1 : 0;
                        z5 = true;
                        i4 = 0;
                    }
                    Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda29
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.this.lambda$performSendMessageRequest$57(tLRPC$Updates);
                        }
                    });
                    z6 = z5;
                    i3 = i4;
                    z3 = z4;
                    if (MessageObject.isLiveLocationMessage(tLRPC$Message) && tLRPC$Message.via_bot_id == 0 && TextUtils.isEmpty(tLRPC$Message.via_bot_name)) {
                        getLocationController().addSharingLocation(tLRPC$Message);
                    }
                    if (!z6) {
                        getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                        tLRPC$Message.send_state = i;
                        if (z && !z3) {
                            ArrayList<Integer> arrayList4 = new ArrayList<>();
                            arrayList4.add(Integer.valueOf(i2));
                            getMessagesController().deleteMessages(arrayList4, null, null, tLRPC$Message.dialog_id, 0, false, 1);
                            final ArrayList arrayList5 = arrayList;
                            final int i13 = i2;
                            getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda30
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$performSendMessageRequest$59(arrayList5, messageObject, tLRPC$Message, i13, z);
                                }
                            });
                        } else {
                            NotificationCenter notificationCenter = getNotificationCenter();
                            int i14 = NotificationCenter.messageReceivedByServer;
                            Integer valueOf = Integer.valueOf(i2);
                            Integer valueOf2 = Integer.valueOf(tLRPC$Message.id);
                            z7 = z6;
                            Long valueOf3 = Long.valueOf(tLRPC$Message.dialog_id);
                            Integer valueOf4 = Integer.valueOf(i3);
                            Boolean valueOf5 = Boolean.valueOf(z);
                            Object[] objArr = new Object[7];
                            objArr[i] = valueOf;
                            objArr[1] = valueOf2;
                            objArr[2] = tLRPC$Message;
                            objArr[3] = valueOf3;
                            objArr[4] = 0L;
                            objArr[5] = valueOf4;
                            objArr[6] = valueOf5;
                            notificationCenter.lambda$postNotificationNameOnUIThread$1(i14, objArr);
                            NotificationCenter notificationCenter2 = getNotificationCenter();
                            int i15 = NotificationCenter.messageReceivedByServer2;
                            Integer valueOf6 = Integer.valueOf(i2);
                            Integer valueOf7 = Integer.valueOf(tLRPC$Message.id);
                            Long valueOf8 = Long.valueOf(tLRPC$Message.dialog_id);
                            Integer valueOf9 = Integer.valueOf(i3);
                            Boolean valueOf10 = Boolean.valueOf(z);
                            Object[] objArr2 = new Object[7];
                            objArr2[i] = valueOf6;
                            objArr2[1] = valueOf7;
                            objArr2[2] = tLRPC$Message;
                            objArr2[3] = valueOf8;
                            objArr2[4] = 0L;
                            objArr2[5] = valueOf9;
                            objArr2[6] = valueOf10;
                            notificationCenter2.lambda$postNotificationNameOnUIThread$1(i15, objArr2);
                            final int i16 = i2;
                            final ArrayList arrayList6 = arrayList;
                            getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda31
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$performSendMessageRequest$61(z, tLRPC$Message, i16, arrayList6, i3);
                                }
                            });
                            z2 = z7;
                        }
                    }
                    z7 = z6;
                    z2 = z7;
                } else {
                    z3 = z ? 1 : 0;
                    i3 = 0;
                }
            }
            z6 = false;
            if (MessageObject.isLiveLocationMessage(tLRPC$Message)) {
                getLocationController().addSharingLocation(tLRPC$Message);
            }
            if (!z6) {
            }
            z7 = z6;
            z2 = z7;
        } else {
            i = 0;
            AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLObject2, new Object[0]);
            z2 = true;
        }
        if (z2) {
            getMessagesStorage().markMessageAsSendError(tLRPC$Message, z ? 1 : 0);
            tLRPC$Message.send_state = 2;
            NotificationCenter notificationCenter3 = getNotificationCenter();
            int i17 = NotificationCenter.messageSendError;
            Object[] objArr3 = new Object[1];
            objArr3[i] = Integer.valueOf(tLRPC$Message.id);
            notificationCenter3.lambda$postNotificationNameOnUIThread$1(i17, objArr3);
            processSentMessage(tLRPC$Message.id);
            removeFromSendingMessages(tLRPC$Message.id, z);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$53(TLRPC$TL_updateShortSentMessage tLRPC$TL_updateShortSentMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateShortSentMessage.pts, tLRPC$TL_updateShortSentMessage.date, tLRPC$TL_updateShortSentMessage.pts_count);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$54(TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$55(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage) {
        getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$TL_updateNewChannelMessage.message.peer_id.channel_id);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$56(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage, long j) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        arrayList.add(Integer.valueOf(tLRPC$TL_updateNewChannelMessage.message.id));
        getMessagesStorage().updatePinnedMessages(-j, arrayList, true, -1, 0, false, null);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$57(TLRPC$Updates tLRPC$Updates) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$59(ArrayList arrayList, final MessageObject messageObject, final TLRPC$Message tLRPC$Message, final int i, final boolean z) {
        getMessagesStorage().putMessages(arrayList, true, false, false, 0, false, 0, 0L);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda89
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$58(messageObject, tLRPC$Message, i, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$58(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, boolean z) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(new MessageObject(messageObject.currentAccount, messageObject.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message.dialog_id, arrayList, 0);
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$61(final boolean z, final TLRPC$Message tLRPC$Message, final int i, ArrayList arrayList, final int i2) {
        int i3 = (tLRPC$Message.quick_reply_shortcut_id == 0 && tLRPC$Message.quick_reply_shortcut == null) ? z ? 1 : 0 : 5;
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message.random_id, MessageObject.getPeerId(tLRPC$Message.peer_id), Integer.valueOf(i), tLRPC$Message.id, 0, false, z ? 1 : 0, tLRPC$Message.quick_reply_shortcut_id);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, i3, tLRPC$Message.quick_reply_shortcut_id);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda10
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$60(tLRPC$Message, i, i2, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$60(TLRPC$Message tLRPC$Message, int i, int i2, boolean z) {
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), 0L, Integer.valueOf(i2), Boolean.valueOf(z));
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer2, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), 0L, Integer.valueOf(i2), Boolean.valueOf(z));
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$65(final TLRPC$Message tLRPC$Message) {
        final int i = tLRPC$Message.id;
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda93
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$64(tLRPC$Message, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$64(TLRPC$Message tLRPC$Message, int i) {
        tLRPC$Message.send_state = 0;
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByAck, Integer.valueOf(i));
    }

    private void updateMediaPaths(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, String str, boolean z) {
        updateMediaPaths(messageObject, tLRPC$Message, i, Collections.singletonList(str), z, -1);
    }

    /* JADX WARN: Removed duplicated region for block: B:134:0x01df  */
    /* JADX WARN: Removed duplicated region for block: B:339:0x0791  */
    /* JADX WARN: Removed duplicated region for block: B:340:0x0796  */
    /* JADX WARN: Removed duplicated region for block: B:376:0x0829  */
    /* JADX WARN: Removed duplicated region for block: B:377:0x082c  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void updateMediaPaths(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, List<String> list, boolean z, int i2) {
        TLRPC$MessageMedia tLRPC$MessageMedia;
        TLRPC$MessageMedia tLRPC$MessageMedia2;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia;
        boolean z2;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia2;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia3;
        String str;
        TLRPC$MessageMedia tLRPC$MessageMedia3;
        TLRPC$FileLocation tLRPC$FileLocation;
        byte[] bArr;
        SendMessagesHelper sendMessagesHelper;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia4;
        String str2;
        TLRPC$FileLocation tLRPC$FileLocation2;
        TLRPC$MessageMedia tLRPC$MessageMedia4;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia5;
        TLRPC$PhotoSize tLRPC$PhotoSize2;
        int i3;
        TLRPC$PhotoSize tLRPC$PhotoSize3;
        TLRPC$Message tLRPC$Message2;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia6;
        TLRPC$Message tLRPC$Message3;
        String str3;
        File file;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia7;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia8;
        TLRPC$PhotoSize tLRPC$PhotoSize4;
        TLRPC$PhotoSize tLRPC$PhotoSize5;
        TLObject tLObject;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia9;
        TLRPC$PhotoSize tLRPC$PhotoSize6;
        boolean z3;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia10;
        TLRPC$MessageMedia tLRPC$MessageMedia5;
        TLRPC$MessageMedia tLRPC$MessageMedia6;
        TLRPC$Document tLRPC$Document;
        TLRPC$Photo tLRPC$Photo;
        TLRPC$PhotoSize closestPhotoSizeWithSize;
        TLObject tLObject2;
        TLRPC$MessageMedia tLRPC$MessageMedia7;
        TLRPC$WebPage tLRPC$WebPage;
        TLRPC$Document tLRPC$Document2;
        TLRPC$MessageMedia tLRPC$MessageMedia8;
        TLRPC$WebPage tLRPC$WebPage2;
        TLRPC$Photo tLRPC$Photo2;
        TLRPC$MessageMedia tLRPC$MessageMedia9;
        TLRPC$Document tLRPC$Document3;
        TLRPC$MessageMedia tLRPC$MessageMedia10;
        TLRPC$Photo tLRPC$Photo3;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia11;
        TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia12;
        boolean z4;
        String sb;
        SendMessagesHelper sendMessagesHelper2 = this;
        TLRPC$Message tLRPC$Message4 = messageObject.messageOwner;
        String str4 = (list.isEmpty() || Math.max(0, i2) >= list.size()) ? null : list.get(Math.max(0, i2));
        TLRPC$MessageMedia tLRPC$MessageMedia11 = tLRPC$Message == null ? null : tLRPC$Message.media;
        TLRPC$MessageMedia tLRPC$MessageMedia12 = tLRPC$Message4 == null ? null : tLRPC$Message4.media;
        TLRPC$MessageMedia tLRPC$MessageMedia13 = tLRPC$Message4.media;
        if (tLRPC$MessageMedia13 != null) {
            if (tLRPC$MessageMedia13.storyItem != null) {
                tLRPC$Message.media = tLRPC$MessageMedia13;
            } else {
                if (messageObject.isLiveLocation()) {
                    TLRPC$MessageMedia tLRPC$MessageMedia14 = tLRPC$Message.media;
                    if (tLRPC$MessageMedia14 instanceof TLRPC$TL_messageMediaGeoLive) {
                        tLRPC$Message4.media.period = tLRPC$MessageMedia14.period;
                    }
                }
                if (messageObject.isDice()) {
                    ((TLRPC$TL_messageMediaDice) tLRPC$Message4.media).value = ((TLRPC$TL_messageMediaDice) tLRPC$Message.media).value;
                } else {
                    TLRPC$MessageMedia tLRPC$MessageMedia15 = tLRPC$Message4.media;
                    TLRPC$Photo tLRPC$Photo4 = tLRPC$MessageMedia15.photo;
                    if (tLRPC$Photo4 != null) {
                        tLRPC$PhotoSize6 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo4.sizes, 40);
                        closestPhotoSizeWithSize = (tLRPC$Message == null || (tLRPC$MessageMedia10 = tLRPC$Message.media) == null || (tLRPC$Photo3 = tLRPC$MessageMedia10.photo) == null) ? tLRPC$PhotoSize6 : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo3.sizes, 40);
                        tLObject2 = tLRPC$Message4.media.photo;
                    } else {
                        TLRPC$Document tLRPC$Document4 = tLRPC$MessageMedia15.document;
                        if (tLRPC$Document4 != null) {
                            tLRPC$PhotoSize6 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document4.thumbs, 40);
                            closestPhotoSizeWithSize = (tLRPC$Message == null || (tLRPC$MessageMedia9 = tLRPC$Message.media) == null || (tLRPC$Document3 = tLRPC$MessageMedia9.document) == null) ? tLRPC$PhotoSize6 : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document3.thumbs, 40);
                            tLObject2 = tLRPC$Message4.media.document;
                        } else {
                            TLRPC$WebPage tLRPC$WebPage3 = tLRPC$MessageMedia15.webpage;
                            if (tLRPC$WebPage3 != null) {
                                TLRPC$Photo tLRPC$Photo5 = tLRPC$WebPage3.photo;
                                if (tLRPC$Photo5 != null) {
                                    tLRPC$PhotoSize6 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo5.sizes, 40);
                                    closestPhotoSizeWithSize = (tLRPC$Message == null || (tLRPC$MessageMedia8 = tLRPC$Message.media) == null || (tLRPC$WebPage2 = tLRPC$MessageMedia8.webpage) == null || (tLRPC$Photo2 = tLRPC$WebPage2.photo) == null) ? tLRPC$PhotoSize6 : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo2.sizes, 40);
                                    tLObject2 = tLRPC$Message4.media.webpage.photo;
                                } else {
                                    TLRPC$Document tLRPC$Document5 = tLRPC$WebPage3.document;
                                    if (tLRPC$Document5 != null) {
                                        tLRPC$PhotoSize6 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document5.thumbs, 40);
                                        closestPhotoSizeWithSize = (tLRPC$Message == null || (tLRPC$MessageMedia7 = tLRPC$Message.media) == null || (tLRPC$WebPage = tLRPC$MessageMedia7.webpage) == null || (tLRPC$Document2 = tLRPC$WebPage.document) == null) ? tLRPC$PhotoSize6 : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document2.thumbs, 40);
                                        tLObject2 = tLRPC$Message4.media.webpage.document;
                                    }
                                }
                            } else if ((tLRPC$MessageMedia15 instanceof TLRPC$TL_messageMediaPaidMedia) && (tLRPC$MessageMedia11 instanceof TLRPC$TL_messageMediaPaidMedia)) {
                                TLRPC$TL_messageMediaPaidMedia tLRPC$TL_messageMediaPaidMedia = (TLRPC$TL_messageMediaPaidMedia) tLRPC$MessageMedia15;
                                TLRPC$TL_messageMediaPaidMedia tLRPC$TL_messageMediaPaidMedia2 = (TLRPC$TL_messageMediaPaidMedia) tLRPC$MessageMedia11;
                                if (tLRPC$TL_messageMediaPaidMedia.extended_media.isEmpty() || tLRPC$TL_messageMediaPaidMedia2.extended_media.isEmpty()) {
                                    return;
                                }
                                if (i2 == -1) {
                                    for (int i4 = 0; i4 < tLRPC$TL_messageMediaPaidMedia.extended_media.size(); i4++) {
                                        updateMediaPaths(messageObject, tLRPC$Message, i, list, z, i4);
                                    }
                                    return;
                                }
                                boolean z5 = tLRPC$TL_messageMediaPaidMedia2.extended_media.size() > 1;
                                if (i2 < 0 || i2 >= tLRPC$TL_messageMediaPaidMedia2.extended_media.size()) {
                                    return;
                                }
                                TLRPC$MessageExtendedMedia tLRPC$MessageExtendedMedia = tLRPC$TL_messageMediaPaidMedia2.extended_media.get(i2);
                                if (tLRPC$MessageExtendedMedia instanceof TLRPC$TL_messageExtendedMedia) {
                                    tLRPC$TL_messageExtendedMedia7 = (TLRPC$TL_messageExtendedMedia) tLRPC$MessageExtendedMedia;
                                    tLRPC$MessageMedia11 = tLRPC$TL_messageExtendedMedia7.media;
                                } else {
                                    tLRPC$TL_messageExtendedMedia7 = null;
                                }
                                TLRPC$MessageExtendedMedia tLRPC$MessageExtendedMedia2 = tLRPC$TL_messageMediaPaidMedia.extended_media.get(i2);
                                if (tLRPC$MessageExtendedMedia2 instanceof TLRPC$TL_messageExtendedMedia) {
                                    tLRPC$TL_messageExtendedMedia8 = (TLRPC$TL_messageExtendedMedia) tLRPC$MessageExtendedMedia2;
                                    tLRPC$MessageMedia12 = tLRPC$TL_messageExtendedMedia8.media;
                                    TLRPC$Photo tLRPC$Photo6 = tLRPC$MessageMedia12.photo;
                                    if (tLRPC$Photo6 != null) {
                                        tLRPC$PhotoSize5 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo6.sizes, 40);
                                        tLRPC$PhotoSize4 = (tLRPC$MessageMedia11 == null || (tLRPC$Photo = tLRPC$MessageMedia11.photo) == null) ? tLRPC$PhotoSize5 : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo.sizes, 40);
                                        tLObject = tLRPC$MessageMedia12.photo;
                                    } else {
                                        TLRPC$Document tLRPC$Document6 = tLRPC$MessageMedia12.document;
                                        if (tLRPC$Document6 != null) {
                                            tLRPC$PhotoSize5 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document6.thumbs, 40);
                                            tLRPC$PhotoSize4 = (tLRPC$MessageMedia11 == null || (tLRPC$Document = tLRPC$MessageMedia11.document) == null) ? tLRPC$PhotoSize5 : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 40);
                                            tLObject = tLRPC$MessageMedia12.document;
                                        }
                                    }
                                    TLRPC$MessageMedia tLRPC$MessageMedia16 = tLRPC$MessageMedia11;
                                    tLRPC$TL_messageExtendedMedia9 = tLRPC$TL_messageExtendedMedia8;
                                    tLRPC$PhotoSize6 = tLRPC$PhotoSize5;
                                    z3 = z5;
                                    tLRPC$TL_messageExtendedMedia10 = tLRPC$TL_messageExtendedMedia7;
                                    tLRPC$MessageMedia5 = tLRPC$MessageMedia12;
                                    tLRPC$PhotoSize = tLRPC$PhotoSize4;
                                    tLRPC$MessageMedia6 = tLRPC$MessageMedia16;
                                    if ((tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) || !(tLRPC$PhotoSize6 instanceof TLRPC$TL_photoStrippedSize)) {
                                        tLRPC$TL_messageExtendedMedia11 = tLRPC$TL_messageExtendedMedia9;
                                        tLRPC$TL_messageExtendedMedia12 = tLRPC$TL_messageExtendedMedia10;
                                        z4 = z3;
                                    } else {
                                        StringBuilder sb2 = new StringBuilder();
                                        sb2.append("stripped");
                                        tLRPC$TL_messageExtendedMedia11 = tLRPC$TL_messageExtendedMedia9;
                                        sb2.append(FileRefController.getKeyForParentObject(messageObject));
                                        String sb3 = sb2.toString();
                                        if (tLRPC$Message != null) {
                                            sb = "stripped" + FileRefController.getKeyForParentObject(tLRPC$Message);
                                            tLRPC$TL_messageExtendedMedia12 = tLRPC$TL_messageExtendedMedia10;
                                            z4 = z3;
                                        } else {
                                            StringBuilder sb4 = new StringBuilder();
                                            sb4.append("strippedmessage");
                                            sb4.append(i);
                                            sb4.append("_");
                                            tLRPC$TL_messageExtendedMedia12 = tLRPC$TL_messageExtendedMedia10;
                                            z4 = z3;
                                            sb4.append(messageObject.getChannelId());
                                            sb4.append("_");
                                            sb4.append(messageObject.scheduled);
                                            sb = sb4.toString();
                                        }
                                        ImageLoader.getInstance().replaceImageInCache(sb3, sb, ImageLocation.getForObject(tLRPC$PhotoSize, tLObject), z);
                                    }
                                    tLRPC$TL_messageExtendedMedia2 = tLRPC$TL_messageExtendedMedia11;
                                    tLRPC$TL_messageExtendedMedia = tLRPC$TL_messageExtendedMedia12;
                                    tLRPC$MessageMedia = tLRPC$MessageMedia6;
                                    z2 = z4;
                                    tLRPC$MessageMedia2 = tLRPC$MessageMedia5;
                                } else {
                                    tLRPC$TL_messageExtendedMedia8 = null;
                                }
                                tLRPC$PhotoSize4 = null;
                                tLRPC$PhotoSize5 = null;
                                tLObject = null;
                                TLRPC$MessageMedia tLRPC$MessageMedia162 = tLRPC$MessageMedia11;
                                tLRPC$TL_messageExtendedMedia9 = tLRPC$TL_messageExtendedMedia8;
                                tLRPC$PhotoSize6 = tLRPC$PhotoSize5;
                                z3 = z5;
                                tLRPC$TL_messageExtendedMedia10 = tLRPC$TL_messageExtendedMedia7;
                                tLRPC$MessageMedia5 = tLRPC$MessageMedia12;
                                tLRPC$PhotoSize = tLRPC$PhotoSize4;
                                tLRPC$MessageMedia6 = tLRPC$MessageMedia162;
                                if (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) {
                                }
                                tLRPC$TL_messageExtendedMedia11 = tLRPC$TL_messageExtendedMedia9;
                                tLRPC$TL_messageExtendedMedia12 = tLRPC$TL_messageExtendedMedia10;
                                z4 = z3;
                                tLRPC$TL_messageExtendedMedia2 = tLRPC$TL_messageExtendedMedia11;
                                tLRPC$TL_messageExtendedMedia = tLRPC$TL_messageExtendedMedia12;
                                tLRPC$MessageMedia = tLRPC$MessageMedia6;
                                z2 = z4;
                                tLRPC$MessageMedia2 = tLRPC$MessageMedia5;
                            }
                        }
                    }
                    tLObject = tLObject2;
                    tLRPC$TL_messageExtendedMedia10 = null;
                    z3 = false;
                    tLRPC$MessageMedia5 = tLRPC$MessageMedia12;
                    tLRPC$PhotoSize = closestPhotoSizeWithSize;
                    tLRPC$MessageMedia6 = tLRPC$MessageMedia11;
                    tLRPC$TL_messageExtendedMedia9 = null;
                    if (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) {
                    }
                    tLRPC$TL_messageExtendedMedia11 = tLRPC$TL_messageExtendedMedia9;
                    tLRPC$TL_messageExtendedMedia12 = tLRPC$TL_messageExtendedMedia10;
                    z4 = z3;
                    tLRPC$TL_messageExtendedMedia2 = tLRPC$TL_messageExtendedMedia11;
                    tLRPC$TL_messageExtendedMedia = tLRPC$TL_messageExtendedMedia12;
                    tLRPC$MessageMedia = tLRPC$MessageMedia6;
                    z2 = z4;
                    tLRPC$MessageMedia2 = tLRPC$MessageMedia5;
                }
            }
            tLRPC$MessageMedia6 = tLRPC$MessageMedia11;
            tLRPC$MessageMedia5 = tLRPC$MessageMedia12;
            tLRPC$PhotoSize6 = null;
            tLRPC$TL_messageExtendedMedia9 = null;
            tLRPC$PhotoSize = null;
            tLRPC$TL_messageExtendedMedia10 = null;
            z3 = false;
            tLObject = null;
            if (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) {
            }
            tLRPC$TL_messageExtendedMedia11 = tLRPC$TL_messageExtendedMedia9;
            tLRPC$TL_messageExtendedMedia12 = tLRPC$TL_messageExtendedMedia10;
            z4 = z3;
            tLRPC$TL_messageExtendedMedia2 = tLRPC$TL_messageExtendedMedia11;
            tLRPC$TL_messageExtendedMedia = tLRPC$TL_messageExtendedMedia12;
            tLRPC$MessageMedia = tLRPC$MessageMedia6;
            z2 = z4;
            tLRPC$MessageMedia2 = tLRPC$MessageMedia5;
        } else {
            tLRPC$MessageMedia = tLRPC$MessageMedia11;
            tLRPC$MessageMedia2 = tLRPC$MessageMedia12;
            tLRPC$TL_messageExtendedMedia = null;
            z2 = false;
            tLRPC$PhotoSize = null;
            tLRPC$TL_messageExtendedMedia2 = null;
        }
        if (tLRPC$Message == null) {
            return;
        }
        if ((tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto) && tLRPC$MessageMedia.photo != null && (tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaPhoto) && tLRPC$MessageMedia2.photo != null) {
            if (tLRPC$MessageMedia.ttl_seconds != 0 || messageObject.scheduled) {
                tLRPC$TL_messageExtendedMedia5 = tLRPC$TL_messageExtendedMedia;
                tLRPC$PhotoSize2 = tLRPC$PhotoSize;
                i3 = 0;
            } else {
                MessagesStorage messagesStorage = getMessagesStorage();
                TLRPC$Photo tLRPC$Photo7 = tLRPC$MessageMedia.photo;
                tLRPC$TL_messageExtendedMedia5 = tLRPC$TL_messageExtendedMedia;
                StringBuilder sb5 = new StringBuilder();
                sb5.append("sent_");
                tLRPC$PhotoSize2 = tLRPC$PhotoSize;
                sb5.append(tLRPC$Message.peer_id.channel_id);
                sb5.append("_");
                sb5.append(tLRPC$Message.id);
                sb5.append("_");
                sb5.append(DialogObject.getPeerDialogId(tLRPC$Message.peer_id));
                sb5.append("_");
                sb5.append(1);
                sb5.append("_");
                sb5.append(MessageObject.getMediaSize(tLRPC$MessageMedia2));
                i3 = 0;
                messagesStorage.putSentFile(str4, tLRPC$Photo7, 0, sb5.toString());
            }
            if (tLRPC$MessageMedia2.photo.sizes.size() == 1 && (tLRPC$MessageMedia2.photo.sizes.get(i3).location instanceof TLRPC$TL_fileLocationUnavailable)) {
                tLRPC$MessageMedia2.photo.sizes = tLRPC$MessageMedia.photo.sizes;
            } else {
                int i5 = 0;
                while (i5 < tLRPC$MessageMedia2.photo.sizes.size()) {
                    TLRPC$PhotoSize tLRPC$PhotoSize7 = tLRPC$MessageMedia2.photo.sizes.get(i5);
                    if (tLRPC$PhotoSize7 == null || tLRPC$PhotoSize7.location == null || tLRPC$PhotoSize7.type == null) {
                        tLRPC$PhotoSize3 = tLRPC$PhotoSize2;
                        tLRPC$Message2 = tLRPC$Message4;
                        tLRPC$TL_messageExtendedMedia6 = tLRPC$TL_messageExtendedMedia2;
                    } else {
                        int i6 = 0;
                        while (i6 < tLRPC$MessageMedia.photo.sizes.size()) {
                            TLRPC$PhotoSize tLRPC$PhotoSize8 = tLRPC$MessageMedia.photo.sizes.get(i6);
                            if (tLRPC$PhotoSize8 == null || tLRPC$PhotoSize8.location == null || (tLRPC$PhotoSize8 instanceof TLRPC$TL_photoSizeEmpty) || (str3 = tLRPC$PhotoSize8.type) == null) {
                                tLRPC$Message3 = tLRPC$Message4;
                                tLRPC$TL_messageExtendedMedia6 = tLRPC$TL_messageExtendedMedia2;
                            } else {
                                tLRPC$TL_messageExtendedMedia6 = tLRPC$TL_messageExtendedMedia2;
                                if ((tLRPC$PhotoSize7.location.volume_id == -2147483648L && str3.equals(tLRPC$PhotoSize7.type)) || (tLRPC$PhotoSize8.w == tLRPC$PhotoSize7.w && tLRPC$PhotoSize8.h == tLRPC$PhotoSize7.h)) {
                                    String str5 = tLRPC$PhotoSize7.location.volume_id + "_" + tLRPC$PhotoSize7.location.local_id;
                                    String str6 = tLRPC$PhotoSize8.location.volume_id + "_" + tLRPC$PhotoSize8.location.local_id;
                                    if (str5.equals(str6)) {
                                        tLRPC$PhotoSize3 = tLRPC$PhotoSize2;
                                        tLRPC$Message2 = tLRPC$Message4;
                                    } else {
                                        tLRPC$Message2 = tLRPC$Message4;
                                        File file2 = new File(FileLoader.getDirectory(4), str5 + ".jpg");
                                        if (tLRPC$MessageMedia.ttl_seconds == 0 && ((tLRPC$MessageMedia.photo.sizes.size() == 1 || tLRPC$PhotoSize8.w > 90 || tLRPC$PhotoSize8.h > 90) && !z2)) {
                                            file = FileLoader.getInstance(sendMessagesHelper2.currentAccount).getPathToAttach(tLRPC$PhotoSize8);
                                        } else {
                                            file = new File(FileLoader.getDirectory(4), str6 + ".jpg");
                                        }
                                        file2.renameTo(file);
                                        ImageLoader.getInstance().replaceImageInCache(str5, str6, ImageLocation.getForPhoto(tLRPC$PhotoSize8, tLRPC$MessageMedia.photo), z);
                                        tLRPC$PhotoSize7.location = tLRPC$PhotoSize8.location;
                                        tLRPC$PhotoSize7.size = tLRPC$PhotoSize8.size;
                                        tLRPC$PhotoSize3 = tLRPC$PhotoSize2;
                                    }
                                } else {
                                    tLRPC$Message3 = tLRPC$Message4;
                                }
                            }
                            i6++;
                            sendMessagesHelper2 = this;
                            tLRPC$TL_messageExtendedMedia2 = tLRPC$TL_messageExtendedMedia6;
                            tLRPC$Message4 = tLRPC$Message3;
                        }
                        tLRPC$Message2 = tLRPC$Message4;
                        tLRPC$TL_messageExtendedMedia6 = tLRPC$TL_messageExtendedMedia2;
                        String str7 = tLRPC$PhotoSize7.location.volume_id + "_" + tLRPC$PhotoSize7.location.local_id;
                        new File(FileLoader.getDirectory(4), str7 + ".jpg").delete();
                        if ("s".equals(tLRPC$PhotoSize7.type) && tLRPC$PhotoSize2 != null) {
                            tLRPC$PhotoSize3 = tLRPC$PhotoSize2;
                            tLRPC$MessageMedia2.photo.sizes.set(i5, tLRPC$PhotoSize3);
                            ImageLocation forPhoto = ImageLocation.getForPhoto(tLRPC$PhotoSize3, tLRPC$MessageMedia.photo);
                            ImageLoader.getInstance().replaceImageInCache(str7, forPhoto.getKey(tLRPC$Message, null, false), forPhoto, z);
                            i5++;
                            sendMessagesHelper2 = this;
                            tLRPC$TL_messageExtendedMedia2 = tLRPC$TL_messageExtendedMedia6;
                            tLRPC$PhotoSize2 = tLRPC$PhotoSize3;
                            tLRPC$Message4 = tLRPC$Message2;
                        }
                        tLRPC$PhotoSize3 = tLRPC$PhotoSize2;
                    }
                    i5++;
                    sendMessagesHelper2 = this;
                    tLRPC$TL_messageExtendedMedia2 = tLRPC$TL_messageExtendedMedia6;
                    tLRPC$PhotoSize2 = tLRPC$PhotoSize3;
                    tLRPC$Message4 = tLRPC$Message2;
                }
            }
            TLRPC$Message tLRPC$Message5 = tLRPC$Message4;
            TLRPC$TL_messageExtendedMedia tLRPC$TL_messageExtendedMedia13 = tLRPC$TL_messageExtendedMedia2;
            if (!z2) {
                tLRPC$Message5.message = tLRPC$Message.message;
                tLRPC$Message.attachPath = tLRPC$Message5.attachPath;
            } else if (tLRPC$TL_messageExtendedMedia13 != null && tLRPC$TL_messageExtendedMedia5 != null) {
                tLRPC$TL_messageExtendedMedia13.attachPath = tLRPC$TL_messageExtendedMedia5.attachPath;
            }
            TLRPC$Photo tLRPC$Photo8 = tLRPC$MessageMedia2.photo;
            TLRPC$Photo tLRPC$Photo9 = tLRPC$MessageMedia.photo;
            tLRPC$Photo8.id = tLRPC$Photo9.id;
            tLRPC$Photo8.dc_id = tLRPC$Photo9.dc_id;
            tLRPC$Photo8.access_hash = tLRPC$Photo9.access_hash;
        } else if ((tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument) && tLRPC$MessageMedia.document != null && (tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaDocument) && tLRPC$MessageMedia2.document != null) {
            if (tLRPC$MessageMedia.ttl_seconds == 0) {
                VideoEditedInfo videoEditedInfo = messageObject.videoEditedInfo;
                if (videoEditedInfo == null || (videoEditedInfo.mediaEntities == null && TextUtils.isEmpty(videoEditedInfo.paintPath) && messageObject.videoEditedInfo.cropState == null)) {
                    boolean isVideoMessage = MessageObject.isVideoMessage(tLRPC$Message);
                    if ((isVideoMessage || MessageObject.isGifMessage(tLRPC$Message)) && MessageObject.isGifDocument(tLRPC$MessageMedia.document) == MessageObject.isGifDocument(tLRPC$MessageMedia2.document)) {
                        if (messageObject.scheduled) {
                            tLRPC$TL_messageExtendedMedia3 = tLRPC$TL_messageExtendedMedia2;
                            tLRPC$MessageMedia4 = tLRPC$MessageMedia2;
                            str = ".jpg";
                        } else {
                            MessageObject messageObject2 = new MessageObject(this.currentAccount, tLRPC$Message, false, false);
                            MessagesStorage messagesStorage2 = getMessagesStorage();
                            TLRPC$Document tLRPC$Document7 = tLRPC$MessageMedia.document;
                            tLRPC$TL_messageExtendedMedia3 = tLRPC$TL_messageExtendedMedia2;
                            StringBuilder sb6 = new StringBuilder();
                            sb6.append("sent_");
                            tLRPC$MessageMedia4 = tLRPC$MessageMedia2;
                            str = ".jpg";
                            sb6.append(tLRPC$Message.peer_id.channel_id);
                            sb6.append("_");
                            sb6.append(tLRPC$Message.id);
                            sb6.append("_");
                            sb6.append(DialogObject.getPeerDialogId(tLRPC$Message.peer_id));
                            sb6.append("_");
                            sb6.append(messageObject2.type);
                            sb6.append("_");
                            sb6.append(messageObject2.getSize());
                            messagesStorage2.putSentFile(str4, tLRPC$Document7, 2, sb6.toString());
                        }
                        if (isVideoMessage) {
                            tLRPC$Message.attachPath = tLRPC$Message4.attachPath;
                        }
                    } else {
                        tLRPC$TL_messageExtendedMedia3 = tLRPC$TL_messageExtendedMedia2;
                        tLRPC$MessageMedia4 = tLRPC$MessageMedia2;
                        str = ".jpg";
                        if (!MessageObject.isVoiceMessage(tLRPC$Message) && !MessageObject.isRoundVideoMessage(tLRPC$Message) && !messageObject.scheduled) {
                            MessageObject messageObject3 = new MessageObject(this.currentAccount, tLRPC$Message, false, false);
                            getMessagesStorage().putSentFile(str4, tLRPC$MessageMedia.document, 1, "sent_" + tLRPC$Message.peer_id.channel_id + "_" + tLRPC$Message.id + "_" + DialogObject.getPeerDialogId(tLRPC$Message.peer_id) + "_" + messageObject3.type + "_" + messageObject3.getSize());
                        }
                    }
                    tLRPC$MessageMedia3 = tLRPC$MessageMedia4;
                } else {
                    tLRPC$TL_messageExtendedMedia3 = tLRPC$TL_messageExtendedMedia2;
                    tLRPC$MessageMedia3 = tLRPC$MessageMedia2;
                    str = ".jpg";
                }
            } else {
                tLRPC$TL_messageExtendedMedia3 = tLRPC$TL_messageExtendedMedia2;
                str = ".jpg";
                tLRPC$MessageMedia3 = tLRPC$MessageMedia2;
            }
            TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$MessageMedia3.document.thumbs, 320);
            TLRPC$PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$MessageMedia.document.thumbs, 320);
            if (closestPhotoSizeWithSize2 != null && (tLRPC$FileLocation2 = closestPhotoSizeWithSize2.location) != null && tLRPC$FileLocation2.volume_id == -2147483648L && closestPhotoSizeWithSize3 != null && closestPhotoSizeWithSize3.location != null && !(closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoSizeEmpty) && !(closestPhotoSizeWithSize2 instanceof TLRPC$TL_photoSizeEmpty)) {
                String str8 = closestPhotoSizeWithSize2.location.volume_id + "_" + closestPhotoSizeWithSize2.location.local_id;
                String str9 = closestPhotoSizeWithSize3.location.volume_id + "_" + closestPhotoSizeWithSize3.location.local_id;
                if (!str8.equals(str9)) {
                    File directory = FileLoader.getDirectory(4);
                    StringBuilder sb7 = new StringBuilder();
                    sb7.append(str8);
                    String str10 = str;
                    sb7.append(str10);
                    new File(directory, sb7.toString()).renameTo(new File(FileLoader.getDirectory(4), str9 + str10));
                    ImageLoader.getInstance().replaceImageInCache(str8, str9, ImageLocation.getForDocument(closestPhotoSizeWithSize3, tLRPC$MessageMedia.document), z);
                    closestPhotoSizeWithSize2.location = closestPhotoSizeWithSize3.location;
                    closestPhotoSizeWithSize2.size = closestPhotoSizeWithSize3.size;
                }
            } else if (closestPhotoSizeWithSize3 != null && closestPhotoSizeWithSize2 != null && MessageObject.isStickerMessage(tLRPC$Message) && (tLRPC$FileLocation = closestPhotoSizeWithSize2.location) != null) {
                closestPhotoSizeWithSize3.location = tLRPC$FileLocation;
            } else if (closestPhotoSizeWithSize2 == null || (closestPhotoSizeWithSize2.location instanceof TLRPC$TL_fileLocationUnavailable) || (closestPhotoSizeWithSize2 instanceof TLRPC$TL_photoSizeEmpty)) {
                tLRPC$MessageMedia3.document.thumbs = tLRPC$MessageMedia.document.thumbs;
            }
            TLRPC$Document tLRPC$Document8 = tLRPC$MessageMedia3.document;
            TLRPC$Document tLRPC$Document9 = tLRPC$MessageMedia.document;
            tLRPC$Document8.dc_id = tLRPC$Document9.dc_id;
            tLRPC$Document8.id = tLRPC$Document9.id;
            tLRPC$Document8.access_hash = tLRPC$Document9.access_hash;
            int i7 = 0;
            while (true) {
                if (i7 >= tLRPC$MessageMedia3.document.attributes.size()) {
                    bArr = null;
                    break;
                }
                TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$MessageMedia3.document.attributes.get(i7);
                if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeAudio) {
                    bArr = tLRPC$DocumentAttribute.waveform;
                    break;
                }
                i7++;
            }
            tLRPC$MessageMedia3.document.attributes = tLRPC$MessageMedia.document.attributes;
            if (bArr != null) {
                for (int i8 = 0; i8 < tLRPC$MessageMedia3.document.attributes.size(); i8++) {
                    TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = tLRPC$MessageMedia3.document.attributes.get(i8);
                    if (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeAudio) {
                        tLRPC$DocumentAttribute2.waveform = bArr;
                        tLRPC$DocumentAttribute2.flags |= 4;
                    }
                }
            }
            TLRPC$Document tLRPC$Document10 = tLRPC$MessageMedia3.document;
            TLRPC$Document tLRPC$Document11 = tLRPC$MessageMedia.document;
            tLRPC$Document10.size = tLRPC$Document11.size;
            tLRPC$Document10.mime_type = tLRPC$Document11.mime_type;
            if ((tLRPC$Message.flags & 4) == 0 && ((MessageObject.isOut(tLRPC$Message) || tLRPC$Message.dialog_id == getUserConfig().getClientUserId()) && !MessageObject.isQuickReply(tLRPC$Message))) {
                if (MessageObject.isNewGifDocument(tLRPC$MessageMedia.document)) {
                    if (MessageObject.isDocumentHasAttachedStickers(tLRPC$MessageMedia.document) ? getMessagesController().saveGifsWithStickers : true) {
                        getMediaDataController().addRecentGif(tLRPC$MessageMedia.document, tLRPC$Message.date, true);
                    }
                } else if (MessageObject.isStickerDocument(tLRPC$MessageMedia.document) || MessageObject.isAnimatedStickerDocument(tLRPC$MessageMedia.document, true)) {
                    sendMessagesHelper = this;
                    getMediaDataController().addRecentSticker(0, tLRPC$Message, tLRPC$MessageMedia.document, tLRPC$Message.date, false);
                    if (tLRPC$TL_messageExtendedMedia3 == null) {
                        tLRPC$TL_messageExtendedMedia4 = tLRPC$TL_messageExtendedMedia3;
                        str2 = tLRPC$TL_messageExtendedMedia4.attachPath;
                    } else {
                        tLRPC$TL_messageExtendedMedia4 = tLRPC$TL_messageExtendedMedia3;
                        str2 = tLRPC$Message4.attachPath;
                    }
                    if (str2 != null || !str2.startsWith(FileLoader.getDirectory(4).getAbsolutePath()) || MessageObject.isGifDocument(tLRPC$MessageMedia.document)) {
                        if (tLRPC$TL_messageExtendedMedia4 == null) {
                            tLRPC$TL_messageExtendedMedia4.attachPath = str2;
                            return;
                        }
                        tLRPC$Message.attachPath = str2;
                        tLRPC$Message.message = tLRPC$Message4.message;
                        return;
                    }
                    File file3 = new File(str2);
                    File pathToAttach = FileLoader.getInstance(sendMessagesHelper.currentAccount).getPathToAttach(tLRPC$MessageMedia.document, tLRPC$MessageMedia.ttl_seconds != 0);
                    if (!file3.renameTo(pathToAttach)) {
                        if (file3.exists()) {
                            if (tLRPC$TL_messageExtendedMedia4 != null) {
                                tLRPC$TL_messageExtendedMedia4.attachPath = str2;
                            } else {
                                tLRPC$Message.attachPath = str2;
                            }
                        } else if (tLRPC$TL_messageExtendedMedia4 == null) {
                            messageObject.attachPathExists = false;
                        }
                        if (tLRPC$TL_messageExtendedMedia4 == null) {
                            messageObject.mediaExists = pathToAttach.exists();
                        }
                        tLRPC$Message.message = tLRPC$Message4.message;
                        return;
                    } else if (MessageObject.isVideoMessage(tLRPC$Message)) {
                        messageObject.attachPathExists = true;
                        return;
                    } else {
                        messageObject.mediaExists = messageObject.attachPathExists;
                        messageObject.attachPathExists = false;
                        if (tLRPC$TL_messageExtendedMedia4 != null) {
                            tLRPC$TL_messageExtendedMedia4.attachPath = "";
                        } else {
                            tLRPC$Message4.attachPath = "";
                        }
                        if (str4 == null || !str4.startsWith("http")) {
                            return;
                        }
                        getMessagesStorage().addRecentLocalFile(str4, pathToAttach.toString(), tLRPC$MessageMedia3.document);
                        return;
                    }
                }
            }
            sendMessagesHelper = this;
            if (tLRPC$TL_messageExtendedMedia3 == null) {
            }
            if (str2 != null) {
            }
            if (tLRPC$TL_messageExtendedMedia4 == null) {
            }
        } else {
            TLRPC$MessageMedia tLRPC$MessageMedia17 = tLRPC$Message.media;
            if ((tLRPC$MessageMedia17 instanceof TLRPC$TL_messageMediaContact) && (tLRPC$Message4.media instanceof TLRPC$TL_messageMediaContact)) {
                tLRPC$Message4.media = tLRPC$MessageMedia17;
            } else if (tLRPC$MessageMedia17 instanceof TLRPC$TL_messageMediaWebPage) {
                tLRPC$Message4.media = tLRPC$MessageMedia17;
            } else if (tLRPC$MessageMedia17 instanceof TLRPC$TL_messageMediaGeo) {
                TLRPC$GeoPoint tLRPC$GeoPoint = tLRPC$MessageMedia17.geo;
                TLRPC$GeoPoint tLRPC$GeoPoint2 = tLRPC$Message4.media.geo;
                tLRPC$GeoPoint.lat = tLRPC$GeoPoint2.lat;
                tLRPC$GeoPoint._long = tLRPC$GeoPoint2._long;
            } else if ((tLRPC$MessageMedia17 instanceof TLRPC$TL_messageMediaGame) || (tLRPC$MessageMedia17 instanceof TLRPC$TL_messageMediaInvoice)) {
                tLRPC$Message4.media = tLRPC$MessageMedia17;
                if (!TextUtils.isEmpty(tLRPC$Message.message)) {
                    tLRPC$Message4.entities = tLRPC$Message.entities;
                    tLRPC$Message4.message = tLRPC$Message.message;
                }
                TLRPC$ReplyMarkup tLRPC$ReplyMarkup = tLRPC$Message.reply_markup;
                if (tLRPC$ReplyMarkup != null) {
                    tLRPC$Message4.reply_markup = tLRPC$ReplyMarkup;
                    tLRPC$Message4.flags |= 64;
                }
            } else if (tLRPC$MessageMedia17 instanceof TLRPC$TL_messageMediaPoll) {
                tLRPC$Message4.media = tLRPC$MessageMedia17;
            }
        }
    }

    private void putToDelayedMessages(String str, DelayedMessage delayedMessage) {
        ArrayList<DelayedMessage> arrayList = this.delayedMessages.get(str);
        if (arrayList == null) {
            arrayList = new ArrayList<>();
            this.delayedMessages.put(str, arrayList);
        }
        arrayList.add(delayedMessage);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public ArrayList<DelayedMessage> getDelayedMessages(String str) {
        return this.delayedMessages.get(str);
    }

    public long getNextRandomId() {
        long j = 0;
        while (j == 0) {
            j = Utilities.random.nextLong();
        }
        return j;
    }

    public void checkUnsentMessages() {
        getMessagesStorage().getUnsentMessages(1000);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void processUnsentMessages(final ArrayList<TLRPC$Message> arrayList, final ArrayList<TLRPC$Message> arrayList2, final ArrayList<TLRPC$User> arrayList3, final ArrayList<TLRPC$Chat> arrayList4, final ArrayList<TLRPC$EncryptedChat> arrayList5) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda77
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$processUnsentMessages$66(arrayList3, arrayList4, arrayList5, arrayList, arrayList2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$processUnsentMessages$66(ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, ArrayList arrayList4, ArrayList arrayList5) {
        HashMap<String, String> hashMap;
        getMessagesController().putUsers(arrayList, true);
        getMessagesController().putChats(arrayList2, true);
        getMessagesController().putEncryptedChats(arrayList3, true);
        int size = arrayList4.size();
        for (int i = 0; i < size; i++) {
            MessageObject messageObject = new MessageObject(this.currentAccount, (TLRPC$Message) arrayList4.get(i), false, true);
            long groupId = messageObject.getGroupId();
            if (groupId != 0 && (hashMap = messageObject.messageOwner.params) != null && !hashMap.containsKey("final") && (i == size - 1 || ((TLRPC$Message) arrayList4.get(i + 1)).grouped_id != groupId)) {
                messageObject.messageOwner.params.put("final", "1");
            }
            retrySendMessage(messageObject, true);
        }
        if (arrayList5 != null) {
            for (int i2 = 0; i2 < arrayList5.size(); i2++) {
                MessageObject messageObject2 = new MessageObject(this.currentAccount, (TLRPC$Message) arrayList5.get(i2), false, true);
                messageObject2.scheduled = true;
                retrySendMessage(messageObject2, true);
            }
        }
    }

    public ImportingStickers getImportingStickers(String str) {
        return this.importingStickersMap.get(str);
    }

    public ImportingHistory getImportingHistory(long j) {
        return this.importingHistoryMap.get(j);
    }

    public boolean isImportingStickers() {
        return this.importingStickersMap.size() != 0;
    }

    public boolean isImportingHistory() {
        return this.importingHistoryMap.size() != 0;
    }

    public void prepareImportHistory(final long j, final Uri uri, final ArrayList<Uri> arrayList, final MessagesStorage.LongCallback longCallback) {
        if (this.importingHistoryMap.get(j) != null) {
            longCallback.run(0L);
            return;
        }
        if (DialogObject.isChatDialog(j)) {
            long j2 = -j;
            TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(j2));
            if (chat != null && !chat.megagroup) {
                getMessagesController().convertToMegaGroup(null, j2, null, new MessagesStorage.LongCallback() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda42
                    @Override // org.telegram.messenger.MessagesStorage.LongCallback
                    public final void run(long j3) {
                        SendMessagesHelper.this.lambda$prepareImportHistory$67(uri, arrayList, longCallback, j3);
                    }
                });
                return;
            }
        }
        new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda43
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$prepareImportHistory$72(arrayList, j, uri, longCallback);
            }
        }).start();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportHistory$67(Uri uri, ArrayList arrayList, MessagesStorage.LongCallback longCallback, long j) {
        if (j != 0) {
            prepareImportHistory(-j, uri, arrayList, longCallback);
        } else {
            longCallback.run(0L);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Code restructure failed: missing block: B:30:0x0093, code lost:
        r0 = org.telegram.messenger.MediaController.createFileInCache(r0.getName(), "txt");
        r14 = r0.getAbsolutePath();
        r9 = new java.io.FileOutputStream(r0);
        r0 = new byte[1024];
     */
    /* JADX WARN: Code restructure failed: missing block: B:31:0x00a8, code lost:
        r13 = r12.read(r0);
     */
    /* JADX WARN: Code restructure failed: missing block: B:32:0x00ac, code lost:
        if (r13 <= 0) goto L83;
     */
    /* JADX WARN: Code restructure failed: missing block: B:34:0x00af, code lost:
        r9.write(r0, 0, r13);
     */
    /* JADX WARN: Code restructure failed: missing block: B:35:0x00b3, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:36:0x00b4, code lost:
        r9 = r0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:37:0x00b6, code lost:
        r9.close();
     */
    /* JADX WARN: Code restructure failed: missing block: B:47:0x00ce, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:49:0x00d0, code lost:
        r12.close();
     */
    /* JADX WARN: Code restructure failed: missing block: B:51:0x00d4, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:53:0x00d6, code lost:
        r9.addSuppressed(r0);
     */
    /* JADX WARN: Code restructure failed: missing block: B:54:0x00d9, code lost:
        throw r9;
     */
    /* JADX WARN: Code restructure failed: missing block: B:59:0x00df, code lost:
        org.telegram.messenger.FileLog.e(r0);
     */
    /* JADX WARN: Removed duplicated region for block: B:68:0x00f3  */
    /* JADX WARN: Removed duplicated region for block: B:69:0x00f7  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$prepareImportHistory$72(ArrayList arrayList, final long j, Uri uri, final MessagesStorage.LongCallback longCallback) {
        ArrayList arrayList2;
        int i;
        ArrayList arrayList3 = arrayList != null ? arrayList : new ArrayList();
        final ImportingHistory importingHistory = new ImportingHistory();
        importingHistory.mediaPaths = arrayList3;
        importingHistory.dialogId = j;
        importingHistory.peer = getMessagesController().getInputPeer(j);
        final HashMap hashMap = new HashMap();
        int size = arrayList3.size();
        int i2 = 0;
        while (i2 < size + 1) {
            Uri uri2 = i2 == 0 ? uri : (Uri) arrayList3.get(i2 - 1);
            if (uri2 == null || AndroidUtilities.isInternalUri(uri2)) {
                arrayList2 = arrayList3;
                i = size;
                if (i2 == 0) {
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda62
                        @Override // java.lang.Runnable
                        public final void run() {
                            MessagesStorage.LongCallback.this.run(0L);
                        }
                    });
                    return;
                }
            } else {
                String fixFileName = FileLoader.fixFileName(MediaController.getFileName(uri));
                String str = (fixFileName == null || !fixFileName.endsWith(".zip")) ? "txt" : "zip";
                String copyFileToCache = MediaController.copyFileToCache(uri2, str);
                if ("zip".equals(str)) {
                    File file = new File(copyFileToCache);
                    try {
                        ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(file));
                        try {
                            ZipEntry nextEntry = zipInputStream.getNextEntry();
                            while (true) {
                                if (nextEntry == null) {
                                    break;
                                } else if (nextEntry.getName().endsWith(".txt")) {
                                    break;
                                } else {
                                    nextEntry = zipInputStream.getNextEntry();
                                }
                            }
                            zipInputStream.closeEntry();
                            try {
                                zipInputStream.close();
                            } catch (Exception e) {
                                e = e;
                                FileLog.e(e);
                                file.delete();
                                if (copyFileToCache == null) {
                                }
                                i2++;
                                size = i;
                                arrayList3 = arrayList2;
                            }
                        } catch (Throwable th) {
                            th = th;
                        }
                    } catch (IOException e2) {
                        e = e2;
                    } catch (Exception e3) {
                        e = e3;
                    }
                    try {
                        file.delete();
                    } catch (Exception e4) {
                        FileLog.e(e4);
                    }
                }
                if (copyFileToCache == null) {
                    arrayList2 = arrayList3;
                    i = size;
                } else {
                    File file2 = new File(copyFileToCache);
                    if (file2.exists()) {
                        long length = file2.length();
                        if (length != 0) {
                            arrayList2 = arrayList3;
                            i = size;
                            importingHistory.totalSize += length;
                            if (i2 != 0) {
                                importingHistory.uploadMedia.add(copyFileToCache);
                            } else if (length > 33554432) {
                                file2.delete();
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda60
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareImportHistory$70(MessagesStorage.LongCallback.this);
                                    }
                                });
                                return;
                            } else {
                                importingHistory.historyPath = copyFileToCache;
                            }
                            importingHistory.uploadSet.add(copyFileToCache);
                            hashMap.put(copyFileToCache, importingHistory);
                        }
                    }
                    arrayList2 = arrayList3;
                    i = size;
                    if (i2 == 0) {
                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda61
                            @Override // java.lang.Runnable
                            public final void run() {
                                MessagesStorage.LongCallback.this.run(0L);
                            }
                        });
                        return;
                    }
                }
            }
            i2++;
            size = i;
            arrayList3 = arrayList2;
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda63
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$prepareImportHistory$71(hashMap, j, importingHistory, longCallback);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareImportHistory$70(MessagesStorage.LongCallback longCallback) {
        Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString(R.string.ImportFileTooLarge), 0).show();
        longCallback.run(0L);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportHistory$71(HashMap hashMap, long j, ImportingHistory importingHistory, MessagesStorage.LongCallback longCallback) {
        this.importingHistoryFiles.putAll(hashMap);
        this.importingHistoryMap.put(j, importingHistory);
        getFileLoader().uploadFile(importingHistory.historyPath, false, true, 0L, ConnectionsManager.FileTypeFile, true);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(j));
        longCallback.run(j);
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public void prepareImportStickers(final String str, final String str2, final String str3, final ArrayList<ImportingSticker> arrayList, final MessagesStorage.StringCallback stringCallback) {
        if (this.importingStickersMap.get(str2) != null) {
            stringCallback.run(null);
        } else {
            new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda9
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$prepareImportStickers$75(str, str2, str3, arrayList, stringCallback);
                }
            }).start();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportStickers$75(String str, final String str2, String str3, ArrayList arrayList, final MessagesStorage.StringCallback stringCallback) {
        final ImportingStickers importingStickers = new ImportingStickers();
        importingStickers.title = str;
        importingStickers.shortName = str2;
        importingStickers.software = str3;
        final HashMap hashMap = new HashMap();
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            ImportingSticker importingSticker = (ImportingSticker) arrayList.get(i);
            File file = new File(importingSticker.path);
            if (file.exists()) {
                long length = file.length();
                if (length != 0) {
                    importingStickers.totalSize += length;
                    importingStickers.uploadMedia.add(importingSticker);
                    importingStickers.uploadSet.put(importingSticker.path, importingSticker);
                    hashMap.put(importingSticker.path, importingStickers);
                }
            }
            if (i == 0) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda80
                    @Override // java.lang.Runnable
                    public final void run() {
                        MessagesStorage.StringCallback.this.run(null);
                    }
                });
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda81
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$prepareImportStickers$74(importingStickers, hashMap, str2, stringCallback);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportStickers$74(ImportingStickers importingStickers, HashMap hashMap, String str, MessagesStorage.StringCallback stringCallback) {
        if (importingStickers.uploadMedia.get(0).item != null) {
            importingStickers.startImport();
        } else {
            this.importingStickersFiles.putAll(hashMap);
            this.importingStickersMap.put(str, importingStickers);
            importingStickers.initImport();
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, str);
            stringCallback.run(str);
        }
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public TLRPC$TL_photo generatePhotoSizes(String str, Uri uri) {
        return generatePhotoSizes(null, str, uri);
    }

    public TLRPC$TL_photo generatePhotoSizes(TLRPC$TL_photo tLRPC$TL_photo, String str, Uri uri) {
        Bitmap loadBitmap = ImageLoader.loadBitmap(str, uri, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true);
        if (loadBitmap == null) {
            loadBitmap = ImageLoader.loadBitmap(str, uri, 800.0f, 800.0f, true);
        }
        ArrayList<TLRPC$PhotoSize> arrayList = new ArrayList<>();
        TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, true);
        if (scaleAndSaveImage != null) {
            arrayList.add(scaleAndSaveImage);
        }
        TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(loadBitmap, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true, 80, false, 101, 101);
        if (scaleAndSaveImage2 != null) {
            arrayList.add(scaleAndSaveImage2);
        }
        if (loadBitmap != null) {
            loadBitmap.recycle();
        }
        if (arrayList.isEmpty()) {
            return null;
        }
        getUserConfig().saveConfig(false);
        if (tLRPC$TL_photo == null) {
            tLRPC$TL_photo = new TLRPC$TL_photo();
        }
        tLRPC$TL_photo.date = getConnectionsManager().getCurrentTime();
        tLRPC$TL_photo.sizes = arrayList;
        tLRPC$TL_photo.file_reference = new byte[0];
        return tLRPC$TL_photo;
    }

    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Can't wrap try/catch for region: R(29:(5:243|244|245|246|(10:248|249|250|251|252|253|254|255|256|257)(1:308))|(3:267|268|(29:270|271|(26:273|261|262|263|54|(7:56|(1:58)|59|(1:61)|62|(1:64)|65)(1:242)|(2:67|(18:69|70|(1:235)(9:73|(1:75)(1:234)|76|(2:78|(4:80|(1:232)(4:85|(1:87)(1:231)|88|(2:90|(2:92|93)))|230|93))|233|(1:82)|232|230|93)|94|(9:96|(1:98)|99|(3:101|102|104)(1:228)|(3:114|115|(3:117|(1:119)|120))|125|(1:202)(8:128|129|130|131|132|133|134|(3:141|(1:143)|144))|195|144)(1:229)|(1:146)(1:194)|147|(1:149)|150|(1:153)|(1:155)|156|(2:158|(2:178|(2:189|(1:191)(1:192))(2:184|185))(4:162|(1:177)(2:(1:176)(1:169)|(2:171|(1:173)))|174|175))(1:193)|186|(0)|177|174|175)(2:(1:237)(1:240)|238))(1:241)|239|70|(0)|235|94|(0)(0)|(0)(0)|147|(0)|150|(1:153)|(0)|156|(0)(0)|186|(0)|177|174|175)|260|261|262|263|54|(0)(0)|(0)(0)|239|70|(0)|235|94|(0)(0)|(0)(0)|147|(0)|150|(0)|(0)|156|(0)(0)|186|(0)|177|174|175))|259|260|261|262|263|54|(0)(0)|(0)(0)|239|70|(0)|235|94|(0)(0)|(0)(0)|147|(0)|150|(0)|(0)|156|(0)(0)|186|(0)|177|174|175) */
    /* JADX WARN: Code restructure failed: missing block: B:32:0x0059, code lost:
        if (r3 == false) goto L29;
     */
    /* JADX WARN: Code restructure failed: missing block: B:96:0x015a, code lost:
        r0 = e;
     */
    /* JADX WARN: Removed duplicated region for block: B:128:0x01a3  */
    /* JADX WARN: Removed duplicated region for block: B:134:0x01c5  */
    /* JADX WARN: Removed duplicated region for block: B:144:0x01ea  */
    /* JADX WARN: Removed duplicated region for block: B:146:0x01ed  */
    /* JADX WARN: Removed duplicated region for block: B:154:0x022c  */
    /* JADX WARN: Removed duplicated region for block: B:157:0x0232 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:187:0x02de  */
    /* JADX WARN: Removed duplicated region for block: B:269:0x0459  */
    /* JADX WARN: Removed duplicated region for block: B:273:0x046d  */
    /* JADX WARN: Removed duplicated region for block: B:275:0x0475  */
    /* JADX WARN: Removed duplicated region for block: B:276:0x047b  */
    /* JADX WARN: Removed duplicated region for block: B:279:0x0485  */
    /* JADX WARN: Removed duplicated region for block: B:282:0x048e A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:285:0x0497  */
    /* JADX WARN: Removed duplicated region for block: B:288:0x04a3  */
    /* JADX WARN: Removed duplicated region for block: B:310:0x0502  */
    /* JADX WARN: Removed duplicated region for block: B:312:0x0506 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:329:0x0193 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:337:0x017a A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private static int prepareSendingDocumentInternal(final AccountInstance accountInstance, String str, String str2, Uri uri, String str3, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final ArrayList<TLRPC$MessageEntity> arrayList, final MessageObject messageObject3, long[] jArr, boolean z, CharSequence charSequence, final boolean z2, final int i, Integer[] numArr, boolean z3, final String str4, final int i2, final long j2, final boolean z4) {
        String str5;
        String str6;
        String str7;
        String lowerCase;
        String str8;
        Object obj;
        Object obj2;
        AudioInfo audioInfo;
        String title;
        int i3;
        String str9;
        boolean z5;
        TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio;
        String str10;
        boolean z6;
        String str11;
        String str12;
        Object obj3;
        String str13;
        Object obj4;
        Object obj5;
        String str14;
        int i4;
        boolean z7;
        MimeTypeMap mimeTypeMap;
        long j3;
        final String str15;
        TLRPC$TL_document tLRPC$TL_document;
        final String str16;
        String str17;
        TLRPC$TL_document tLRPC$TL_document2;
        final HashMap hashMap;
        String str18;
        char c;
        boolean z8;
        int i5;
        int i6;
        TLRPC$PhotoSize scaleAndSaveImage;
        char c2;
        String str19;
        TLRPC$TL_document tLRPC$TL_document3;
        String str20;
        TLRPC$TL_document tLRPC$TL_document4;
        String str21;
        String str22;
        MediaMetadataRetriever mediaMetadataRetriever;
        MediaMetadataRetriever mediaMetadataRetriever2;
        int i7;
        String str23;
        String str24;
        Throwable th;
        boolean z9;
        String extractMetadata;
        String str25;
        boolean z10;
        if ((str == null || str.length() == 0) && uri == null) {
            return 1;
        }
        if (uri == null || !AndroidUtilities.isInternalUri(uri)) {
            if (str == null || !AndroidUtilities.isInternalUri(Uri.fromFile(new File(str)))) {
                MimeTypeMap singleton = MimeTypeMap.getSingleton();
                if (uri == null || str != null) {
                    str5 = str;
                } else if (checkFileSize(accountInstance, uri)) {
                    return 2;
                } else {
                    str6 = str3 != null ? singleton.getExtensionFromMimeType(str3) : null;
                    if (str6 == null) {
                        str6 = "txt";
                        z10 = false;
                    } else {
                        z10 = true;
                    }
                    String copyFileToCache = MediaController.copyFileToCache(uri, str6);
                    if (copyFileToCache == null) {
                        return 1;
                    }
                    str5 = copyFileToCache;
                }
                str6 = null;
                File file = new File(str5);
                if (!file.exists() || file.length() == 0) {
                    return 1;
                }
                if (FileLoader.checkUploadFileSize(accountInstance.getCurrentAccount(), file.length())) {
                    boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
                    String name = file.getName();
                    if (str6 == null) {
                        int lastIndexOf = str5.lastIndexOf(46);
                        if (lastIndexOf == -1) {
                            str7 = "";
                            lowerCase = str7.toLowerCase();
                            if (!lowerCase.equals("mp3") || lowerCase.equals("m4a")) {
                                str8 = name;
                                obj = "flac";
                                obj2 = "opus";
                                audioInfo = AudioInfo.getAudioInfo(file);
                                if (audioInfo != null) {
                                    long duration = audioInfo.getDuration();
                                    if (duration != 0) {
                                        String artist = audioInfo.getArtist();
                                        title = audioInfo.getTitle();
                                        i3 = (int) (duration / 1000);
                                        str9 = artist;
                                    }
                                    title = null;
                                    str9 = null;
                                    i3 = 0;
                                }
                                title = null;
                                str9 = null;
                                i3 = 0;
                            } else if (lowerCase.equals("opus") || lowerCase.equals("ogg") || lowerCase.equals("flac")) {
                                try {
                                    mediaMetadataRetriever2 = new MediaMetadataRetriever();
                                    try {
                                        try {
                                            mediaMetadataRetriever2.setDataSource(file.getAbsolutePath());
                                            if (mediaMetadataRetriever2.extractMetadata(9) != null) {
                                                obj = "flac";
                                                obj2 = "opus";
                                                try {
                                                    i7 = (int) Math.ceil(((float) Long.parseLong(extractMetadata)) / 1000.0f);
                                                    try {
                                                        str23 = mediaMetadataRetriever2.extractMetadata(7);
                                                        str8 = name;
                                                    } catch (Exception e) {
                                                        e = e;
                                                        str8 = name;
                                                        str23 = null;
                                                        str24 = null;
                                                        try {
                                                            FileLog.e(e);
                                                            if (mediaMetadataRetriever2 != null) {
                                                                try {
                                                                    mediaMetadataRetriever2.release();
                                                                } catch (Exception e2) {
                                                                    e = e2;
                                                                    z9 = false;
                                                                    FileLog.e(e);
                                                                    title = str23;
                                                                    str9 = str24;
                                                                    z5 = z9;
                                                                    i3 = i7;
                                                                    if (i3 != 0) {
                                                                    }
                                                                    if (str2 == null) {
                                                                    }
                                                                    z6 = false;
                                                                    if (!z6) {
                                                                    }
                                                                    str11 = "";
                                                                    str12 = str10;
                                                                    obj3 = "m4a";
                                                                    str13 = str5;
                                                                    obj4 = obj;
                                                                    obj5 = obj2;
                                                                    str14 = str8;
                                                                    i4 = -1;
                                                                    z7 = isEncryptedDialog;
                                                                    mimeTypeMap = singleton;
                                                                    j3 = 0;
                                                                    str15 = null;
                                                                    tLRPC$TL_document = null;
                                                                    if (tLRPC$TL_document != null) {
                                                                    }
                                                                    if (charSequence == null) {
                                                                    }
                                                                    hashMap = new HashMap();
                                                                    str18 = str12;
                                                                    if (str18 != null) {
                                                                    }
                                                                    if (z3) {
                                                                    }
                                                                    if (str15 != null) {
                                                                    }
                                                                    int i8 = 0;
                                                                    if (numArr == null) {
                                                                    }
                                                                    z8 = false;
                                                                    if (z7) {
                                                                    }
                                                                    final TLRPC$TL_document tLRPC$TL_document5 = tLRPC$TL_document2;
                                                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                                                        @Override // java.lang.Runnable
                                                                        public final void run() {
                                                                            SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document5, str16, hashMap, str15, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                                        }
                                                                    });
                                                                    return 0;
                                                                }
                                                            }
                                                            i3 = i7;
                                                            title = str23;
                                                            str9 = str24;
                                                            z5 = false;
                                                            if (i3 != 0) {
                                                            }
                                                            if (str2 == null) {
                                                            }
                                                            z6 = false;
                                                            if (!z6) {
                                                            }
                                                            str11 = "";
                                                            str12 = str10;
                                                            obj3 = "m4a";
                                                            str13 = str5;
                                                            obj4 = obj;
                                                            obj5 = obj2;
                                                            str14 = str8;
                                                            i4 = -1;
                                                            z7 = isEncryptedDialog;
                                                            mimeTypeMap = singleton;
                                                            j3 = 0;
                                                            str15 = null;
                                                            tLRPC$TL_document = null;
                                                            if (tLRPC$TL_document != null) {
                                                            }
                                                            if (charSequence == null) {
                                                            }
                                                            hashMap = new HashMap();
                                                            str18 = str12;
                                                            if (str18 != null) {
                                                            }
                                                            if (z3) {
                                                            }
                                                            if (str15 != null) {
                                                            }
                                                            int i82 = 0;
                                                            if (numArr == null) {
                                                            }
                                                            z8 = false;
                                                            if (z7) {
                                                            }
                                                            final TLRPC$TL_document tLRPC$TL_document52 = tLRPC$TL_document2;
                                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                                                @Override // java.lang.Runnable
                                                                public final void run() {
                                                                    SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document52, str16, hashMap, str15, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                                }
                                                            });
                                                            return 0;
                                                        } catch (Throwable th2) {
                                                            th = th2;
                                                            mediaMetadataRetriever = mediaMetadataRetriever2;
                                                            th = th;
                                                            mediaMetadataRetriever2 = mediaMetadataRetriever;
                                                            if (mediaMetadataRetriever2 != null) {
                                                                try {
                                                                    mediaMetadataRetriever2.release();
                                                                } catch (Exception e3) {
                                                                    FileLog.e(e3);
                                                                }
                                                            }
                                                            throw th;
                                                        }
                                                    }
                                                    try {
                                                        str25 = mediaMetadataRetriever2.extractMetadata(2);
                                                    } catch (Exception e4) {
                                                        e = e4;
                                                        str24 = null;
                                                        FileLog.e(e);
                                                        if (mediaMetadataRetriever2 != null) {
                                                        }
                                                        i3 = i7;
                                                        title = str23;
                                                        str9 = str24;
                                                        z5 = false;
                                                        if (i3 != 0) {
                                                        }
                                                        if (str2 == null) {
                                                        }
                                                        z6 = false;
                                                        if (!z6) {
                                                        }
                                                        str11 = "";
                                                        str12 = str10;
                                                        obj3 = "m4a";
                                                        str13 = str5;
                                                        obj4 = obj;
                                                        obj5 = obj2;
                                                        str14 = str8;
                                                        i4 = -1;
                                                        z7 = isEncryptedDialog;
                                                        mimeTypeMap = singleton;
                                                        j3 = 0;
                                                        str15 = null;
                                                        tLRPC$TL_document = null;
                                                        if (tLRPC$TL_document != null) {
                                                        }
                                                        if (charSequence == null) {
                                                        }
                                                        hashMap = new HashMap();
                                                        str18 = str12;
                                                        if (str18 != null) {
                                                        }
                                                        if (z3) {
                                                        }
                                                        if (str15 != null) {
                                                        }
                                                        int i822 = 0;
                                                        if (numArr == null) {
                                                        }
                                                        z8 = false;
                                                        if (z7) {
                                                        }
                                                        final TLRPC$TL_document tLRPC$TL_document522 = tLRPC$TL_document2;
                                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                                            @Override // java.lang.Runnable
                                                            public final void run() {
                                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document522, str16, hashMap, str15, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                            }
                                                        });
                                                        return 0;
                                                    }
                                                } catch (Exception e5) {
                                                    e = e5;
                                                    str8 = name;
                                                    i7 = 0;
                                                    str23 = null;
                                                    str24 = null;
                                                    FileLog.e(e);
                                                    if (mediaMetadataRetriever2 != null) {
                                                    }
                                                    i3 = i7;
                                                    title = str23;
                                                    str9 = str24;
                                                    z5 = false;
                                                    if (i3 != 0) {
                                                    }
                                                    if (str2 == null) {
                                                    }
                                                    z6 = false;
                                                    if (!z6) {
                                                    }
                                                    str11 = "";
                                                    str12 = str10;
                                                    obj3 = "m4a";
                                                    str13 = str5;
                                                    obj4 = obj;
                                                    obj5 = obj2;
                                                    str14 = str8;
                                                    i4 = -1;
                                                    z7 = isEncryptedDialog;
                                                    mimeTypeMap = singleton;
                                                    j3 = 0;
                                                    str15 = null;
                                                    tLRPC$TL_document = null;
                                                    if (tLRPC$TL_document != null) {
                                                    }
                                                    if (charSequence == null) {
                                                    }
                                                    hashMap = new HashMap();
                                                    str18 = str12;
                                                    if (str18 != null) {
                                                    }
                                                    if (z3) {
                                                    }
                                                    if (str15 != null) {
                                                    }
                                                    int i8222 = 0;
                                                    if (numArr == null) {
                                                    }
                                                    z8 = false;
                                                    if (z7) {
                                                    }
                                                    final TLRPC$TL_document tLRPC$TL_document5222 = tLRPC$TL_document2;
                                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                                        @Override // java.lang.Runnable
                                                        public final void run() {
                                                            SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document5222, str16, hashMap, str15, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                        }
                                                    });
                                                    return 0;
                                                }
                                            } else {
                                                str8 = name;
                                                obj = "flac";
                                                obj2 = "opus";
                                                str25 = null;
                                                i7 = 0;
                                                str23 = null;
                                            }
                                        } catch (Exception e6) {
                                            e = e6;
                                            str8 = name;
                                            obj = "flac";
                                            obj2 = "opus";
                                        }
                                    } catch (Throwable th3) {
                                        th = th3;
                                        if (mediaMetadataRetriever2 != null) {
                                        }
                                        throw th;
                                    }
                                } catch (Exception e7) {
                                    e = e7;
                                    str8 = name;
                                    obj = "flac";
                                    obj2 = "opus";
                                    mediaMetadataRetriever2 = null;
                                } catch (Throwable th4) {
                                    th = th4;
                                    mediaMetadataRetriever = null;
                                    th = th;
                                    mediaMetadataRetriever2 = mediaMetadataRetriever;
                                    if (mediaMetadataRetriever2 != null) {
                                    }
                                    throw th;
                                }
                                if (messageObject3 == null) {
                                    try {
                                    } catch (Exception e8) {
                                        e = e8;
                                        str24 = str25;
                                        FileLog.e(e);
                                        if (mediaMetadataRetriever2 != null) {
                                        }
                                        i3 = i7;
                                        title = str23;
                                        str9 = str24;
                                        z5 = false;
                                        if (i3 != 0) {
                                        }
                                        if (str2 == null) {
                                        }
                                        z6 = false;
                                        if (!z6) {
                                        }
                                        str11 = "";
                                        str12 = str10;
                                        obj3 = "m4a";
                                        str13 = str5;
                                        obj4 = obj;
                                        obj5 = obj2;
                                        str14 = str8;
                                        i4 = -1;
                                        z7 = isEncryptedDialog;
                                        mimeTypeMap = singleton;
                                        j3 = 0;
                                        str15 = null;
                                        tLRPC$TL_document = null;
                                        if (tLRPC$TL_document != null) {
                                        }
                                        if (charSequence == null) {
                                        }
                                        hashMap = new HashMap();
                                        str18 = str12;
                                        if (str18 != null) {
                                        }
                                        if (z3) {
                                        }
                                        if (str15 != null) {
                                        }
                                        int i82222 = 0;
                                        if (numArr == null) {
                                        }
                                        z8 = false;
                                        if (z7) {
                                        }
                                        final TLRPC$TL_document tLRPC$TL_document52222 = tLRPC$TL_document2;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document52222, str16, hashMap, str15, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                            }
                                        });
                                        return 0;
                                    }
                                    if (lowerCase.equals("ogg")) {
                                        str24 = str25;
                                        if (MediaController.isOpusFile(file.getAbsolutePath()) == 1) {
                                            z9 = true;
                                            mediaMetadataRetriever2.release();
                                            title = str23;
                                            str9 = str24;
                                            z5 = z9;
                                            i3 = i7;
                                            if (i3 != 0) {
                                                TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio2 = new TLRPC$TL_documentAttributeAudio();
                                                tLRPC$TL_documentAttributeAudio2.duration = i3;
                                                tLRPC$TL_documentAttributeAudio2.title = title;
                                                tLRPC$TL_documentAttributeAudio2.performer = str9;
                                                if (title == null) {
                                                    tLRPC$TL_documentAttributeAudio2.title = "";
                                                }
                                                int i9 = tLRPC$TL_documentAttributeAudio2.flags;
                                                tLRPC$TL_documentAttributeAudio2.flags = i9 | 1;
                                                if (str9 == null) {
                                                    tLRPC$TL_documentAttributeAudio2.performer = "";
                                                }
                                                tLRPC$TL_documentAttributeAudio2.flags = i9 | 3;
                                                if (z5) {
                                                    tLRPC$TL_documentAttributeAudio2.voice = true;
                                                }
                                                tLRPC$TL_documentAttributeAudio = tLRPC$TL_documentAttributeAudio2;
                                            } else {
                                                tLRPC$TL_documentAttributeAudio = null;
                                            }
                                            if (str2 == null) {
                                                str10 = str2;
                                            } else if (str2.endsWith("attheme")) {
                                                str10 = str2;
                                                z6 = true;
                                                if (!z6 || isEncryptedDialog) {
                                                    str11 = "";
                                                    str12 = str10;
                                                    obj3 = "m4a";
                                                    str13 = str5;
                                                    obj4 = obj;
                                                    obj5 = obj2;
                                                    str14 = str8;
                                                    i4 = -1;
                                                    z7 = isEncryptedDialog;
                                                    mimeTypeMap = singleton;
                                                    j3 = 0;
                                                    str15 = null;
                                                    tLRPC$TL_document = null;
                                                } else {
                                                    Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str10, !isEncryptedDialog ? 1 : 4);
                                                    if (sentFile != null) {
                                                        Object obj6 = sentFile[0];
                                                        if (obj6 instanceof TLRPC$TL_document) {
                                                            tLRPC$TL_document3 = (TLRPC$TL_document) obj6;
                                                            str19 = (String) sentFile[1];
                                                            if (tLRPC$TL_document3 == null || str5.equals(str10) || isEncryptedDialog) {
                                                                str20 = str19;
                                                                tLRPC$TL_document4 = tLRPC$TL_document3;
                                                            } else {
                                                                MessagesStorage messagesStorage = accountInstance.getMessagesStorage();
                                                                StringBuilder sb = new StringBuilder();
                                                                sb.append(str5);
                                                                str20 = str19;
                                                                tLRPC$TL_document4 = tLRPC$TL_document3;
                                                                sb.append(file.length());
                                                                Object[] sentFile2 = messagesStorage.getSentFile(sb.toString(), !isEncryptedDialog ? 1 : 4);
                                                                if (sentFile2 != null) {
                                                                    Object obj7 = sentFile2[0];
                                                                    if (obj7 instanceof TLRPC$TL_document) {
                                                                        str21 = (String) sentFile2[1];
                                                                        tLRPC$TL_document = (TLRPC$TL_document) obj7;
                                                                        i4 = -1;
                                                                        str11 = "";
                                                                        str14 = str8;
                                                                        String str26 = str5;
                                                                        str13 = str5;
                                                                        z7 = isEncryptedDialog;
                                                                        str12 = str10;
                                                                        obj3 = "m4a";
                                                                        mimeTypeMap = singleton;
                                                                        obj4 = obj;
                                                                        obj5 = obj2;
                                                                        j3 = 0;
                                                                        ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str26, null, 0L);
                                                                        str15 = str21;
                                                                    }
                                                                }
                                                            }
                                                            tLRPC$TL_document = tLRPC$TL_document4;
                                                            str21 = str20;
                                                            i4 = -1;
                                                            str11 = "";
                                                            str14 = str8;
                                                            String str262 = str5;
                                                            str13 = str5;
                                                            z7 = isEncryptedDialog;
                                                            str12 = str10;
                                                            obj3 = "m4a";
                                                            mimeTypeMap = singleton;
                                                            obj4 = obj;
                                                            obj5 = obj2;
                                                            j3 = 0;
                                                            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str262, null, 0L);
                                                            str15 = str21;
                                                        }
                                                    }
                                                    str19 = null;
                                                    tLRPC$TL_document3 = null;
                                                    if (tLRPC$TL_document3 == null) {
                                                    }
                                                    str20 = str19;
                                                    tLRPC$TL_document4 = tLRPC$TL_document3;
                                                    tLRPC$TL_document = tLRPC$TL_document4;
                                                    str21 = str20;
                                                    i4 = -1;
                                                    str11 = "";
                                                    str14 = str8;
                                                    String str2622 = str5;
                                                    str13 = str5;
                                                    z7 = isEncryptedDialog;
                                                    str12 = str10;
                                                    obj3 = "m4a";
                                                    mimeTypeMap = singleton;
                                                    obj4 = obj;
                                                    obj5 = obj2;
                                                    j3 = 0;
                                                    ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str2622, null, 0L);
                                                    str15 = str21;
                                                }
                                                if (tLRPC$TL_document != null) {
                                                    TLRPC$TL_document tLRPC$TL_document6 = new TLRPC$TL_document();
                                                    tLRPC$TL_document6.id = j3;
                                                    tLRPC$TL_document6.date = accountInstance.getConnectionsManager().getCurrentTime();
                                                    TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                                                    tLRPC$TL_documentAttributeFilename.file_name = str14;
                                                    tLRPC$TL_document6.file_reference = new byte[0];
                                                    tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeFilename);
                                                    tLRPC$TL_document6.size = file.length();
                                                    tLRPC$TL_document6.dc_id = 0;
                                                    if (tLRPC$TL_documentAttributeAudio != null) {
                                                        tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeAudio);
                                                    }
                                                    if (str7.length() != 0) {
                                                        switch (lowerCase.hashCode()) {
                                                            case 106458:
                                                                if (lowerCase.equals(obj3)) {
                                                                    c2 = 0;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 108272:
                                                                if (lowerCase.equals("mp3")) {
                                                                    c2 = 1;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 109967:
                                                                if (lowerCase.equals("ogg")) {
                                                                    c2 = 2;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 3145576:
                                                                if (lowerCase.equals(obj4)) {
                                                                    c2 = 3;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 3418175:
                                                                if (lowerCase.equals(obj5)) {
                                                                    c2 = 4;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 3645340:
                                                                if (lowerCase.equals("webp")) {
                                                                    c2 = 5;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            default:
                                                                c2 = 65535;
                                                                break;
                                                        }
                                                        switch (c2) {
                                                            case 0:
                                                                tLRPC$TL_document6.mime_type = "audio/m4a";
                                                                break;
                                                            case 1:
                                                                tLRPC$TL_document6.mime_type = "audio/mpeg";
                                                                break;
                                                            case 2:
                                                                tLRPC$TL_document6.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tLRPC$TL_document6.mime_type = "audio/flac";
                                                                break;
                                                            case 4:
                                                                tLRPC$TL_document6.mime_type = "audio/opus";
                                                                break;
                                                            case 5:
                                                                tLRPC$TL_document6.mime_type = "image/webp";
                                                                break;
                                                            default:
                                                                String mimeTypeFromExtension = mimeTypeMap.getMimeTypeFromExtension(lowerCase);
                                                                if (mimeTypeFromExtension != null) {
                                                                    tLRPC$TL_document6.mime_type = mimeTypeFromExtension;
                                                                    break;
                                                                } else {
                                                                    tLRPC$TL_document6.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                        }
                                                    } else {
                                                        tLRPC$TL_document6.mime_type = "application/octet-stream";
                                                    }
                                                    if (!z3 && tLRPC$TL_document6.mime_type.equals("image/gif") && (messageObject3 == null || messageObject3.getGroupIdForUse() == j3)) {
                                                        try {
                                                            Bitmap loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                            if (loadBitmap != null) {
                                                                tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                                                                tLRPC$TL_document6.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                                                TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z7);
                                                                if (scaleAndSaveImage2 != null) {
                                                                    tLRPC$TL_document6.thumbs.add(scaleAndSaveImage2);
                                                                    tLRPC$TL_document6.flags |= 1;
                                                                }
                                                                loadBitmap.recycle();
                                                            }
                                                        } catch (Exception e9) {
                                                            FileLog.e(e9);
                                                        }
                                                    }
                                                    if (tLRPC$TL_document6.mime_type.equals("image/webp") && messageObject3 == null) {
                                                        BitmapFactory.Options options = new BitmapFactory.Options();
                                                        try {
                                                            options.inJustDecodeBounds = true;
                                                            str16 = str13;
                                                        } catch (Exception e10) {
                                                            e = e10;
                                                            str16 = str13;
                                                        }
                                                        try {
                                                            BitmapFactory.decodeFile(str16, options);
                                                        } catch (Exception e11) {
                                                            e = e11;
                                                            FileLog.e(e);
                                                            i5 = options.outWidth;
                                                            if (i5 != 0) {
                                                                TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                                                str17 = str11;
                                                                tLRPC$TL_documentAttributeSticker.alt = str17;
                                                                tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeSticker);
                                                                TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize = new TLRPC$TL_documentAttributeImageSize();
                                                                tLRPC$TL_documentAttributeImageSize.w = options.outWidth;
                                                                tLRPC$TL_documentAttributeImageSize.h = options.outHeight;
                                                                tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeImageSize);
                                                                scaleAndSaveImage = ImageLoader.scaleAndSaveImage(null, ImageLoader.loadBitmap(file.getAbsolutePath(), null, 400.0f, 400.0f, true), Bitmap.CompressFormat.PNG, false, 400.0f, 400.0f, 100, z7, 0, 0, false);
                                                                if (scaleAndSaveImage != null) {
                                                                }
                                                                tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                if (charSequence == null) {
                                                                }
                                                                hashMap = new HashMap();
                                                                str18 = str12;
                                                                if (str18 != null) {
                                                                }
                                                                if (z3) {
                                                                }
                                                                if (str15 != null) {
                                                                }
                                                                int i822222 = 0;
                                                                if (numArr == null) {
                                                                }
                                                                z8 = false;
                                                                if (z7) {
                                                                }
                                                                final TLRPC$TL_document tLRPC$TL_document522222 = tLRPC$TL_document2;
                                                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                                                    @Override // java.lang.Runnable
                                                                    public final void run() {
                                                                        SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document522222, str16, hashMap, str15, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                                    }
                                                                });
                                                                return 0;
                                                            }
                                                            str17 = str11;
                                                            tLRPC$TL_document2 = tLRPC$TL_document6;
                                                            if (charSequence == null) {
                                                            }
                                                            hashMap = new HashMap();
                                                            str18 = str12;
                                                            if (str18 != null) {
                                                            }
                                                            if (z3) {
                                                            }
                                                            if (str15 != null) {
                                                            }
                                                            int i8222222 = 0;
                                                            if (numArr == null) {
                                                            }
                                                            z8 = false;
                                                            if (z7) {
                                                            }
                                                            final TLRPC$TL_document tLRPC$TL_document5222222 = tLRPC$TL_document2;
                                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                                                @Override // java.lang.Runnable
                                                                public final void run() {
                                                                    SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document5222222, str16, hashMap, str15, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                                }
                                                            });
                                                            return 0;
                                                        }
                                                        i5 = options.outWidth;
                                                        if (i5 != 0 && (i6 = options.outHeight) != 0 && i5 <= 800 && i6 <= 800) {
                                                            TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker2 = new TLRPC$TL_documentAttributeSticker();
                                                            str17 = str11;
                                                            tLRPC$TL_documentAttributeSticker2.alt = str17;
                                                            tLRPC$TL_documentAttributeSticker2.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                            tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeSticker2);
                                                            TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize2 = new TLRPC$TL_documentAttributeImageSize();
                                                            tLRPC$TL_documentAttributeImageSize2.w = options.outWidth;
                                                            tLRPC$TL_documentAttributeImageSize2.h = options.outHeight;
                                                            tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeImageSize2);
                                                            scaleAndSaveImage = ImageLoader.scaleAndSaveImage(null, ImageLoader.loadBitmap(file.getAbsolutePath(), null, 400.0f, 400.0f, true), Bitmap.CompressFormat.PNG, false, 400.0f, 400.0f, 100, z7, 0, 0, false);
                                                            if (scaleAndSaveImage != null) {
                                                                tLRPC$TL_document6.thumbs.add(scaleAndSaveImage);
                                                                tLRPC$TL_document6.flags |= 1;
                                                            }
                                                            tLRPC$TL_document2 = tLRPC$TL_document6;
                                                        }
                                                    } else {
                                                        str16 = str13;
                                                    }
                                                    str17 = str11;
                                                    tLRPC$TL_document2 = tLRPC$TL_document6;
                                                } else {
                                                    str16 = str13;
                                                    str17 = str11;
                                                    tLRPC$TL_document2 = tLRPC$TL_document;
                                                }
                                                final String charSequence2 = charSequence == null ? charSequence.toString() : str17;
                                                hashMap = new HashMap();
                                                str18 = str12;
                                                if (str18 != null) {
                                                    hashMap.put("originalPath", str18);
                                                }
                                                if (z3 && tLRPC$TL_documentAttributeAudio == null) {
                                                    hashMap.put("forceDocument", "1");
                                                }
                                                if (str15 != null) {
                                                    hashMap.put("parentObject", str15);
                                                }
                                                int i82222222 = 0;
                                                if (numArr == null) {
                                                    i82222222 = numArr[0];
                                                    String str27 = tLRPC$TL_document2.mime_type;
                                                    if (str27 != null && str27.toLowerCase().startsWith("image/webp")) {
                                                        numArr[0] = Integer.valueOf(i4);
                                                        c = 0;
                                                        z8 = true;
                                                        if (z7 && jArr != null) {
                                                            if (numArr != null && i82222222 != null && i82222222 != numArr[c]) {
                                                                finishGroup(accountInstance, jArr[c], i);
                                                                jArr[c] = Utilities.random.nextLong();
                                                            }
                                                            if (!z8) {
                                                                hashMap.put("groupId", str17 + jArr[c]);
                                                                if (z) {
                                                                    hashMap.put("final", "1");
                                                                }
                                                            }
                                                        }
                                                        final TLRPC$TL_document tLRPC$TL_document52222222 = tLRPC$TL_document2;
                                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                                            @Override // java.lang.Runnable
                                                            public final void run() {
                                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document52222222, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                            }
                                                        });
                                                        return 0;
                                                    }
                                                    String str28 = tLRPC$TL_document2.mime_type;
                                                    if ((str28 == null || !(str28.toLowerCase().startsWith("image/") || tLRPC$TL_document2.mime_type.toLowerCase().startsWith("video/mp4"))) && !MessageObject.canPreviewDocument(tLRPC$TL_document2)) {
                                                        c = 0;
                                                        if (tLRPC$TL_documentAttributeAudio != null) {
                                                            numArr[0] = 2;
                                                        } else {
                                                            numArr[0] = 0;
                                                        }
                                                    } else {
                                                        c = 0;
                                                        numArr[0] = 1;
                                                    }
                                                } else {
                                                    c = 0;
                                                }
                                                z8 = false;
                                                if (z7) {
                                                }
                                                final TLRPC$TL_document tLRPC$TL_document522222222 = tLRPC$TL_document2;
                                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                                    @Override // java.lang.Runnable
                                                    public final void run() {
                                                        SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document522222222, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                    }
                                                });
                                                return 0;
                                            } else {
                                                if (tLRPC$TL_documentAttributeAudio != null) {
                                                    str22 = str2 + MediaStreamTrack.AUDIO_TRACK_KIND + file.length();
                                                } else {
                                                    str22 = str2 + "" + file.length();
                                                }
                                                str10 = str22;
                                            }
                                            z6 = false;
                                            if (!z6) {
                                            }
                                            str11 = "";
                                            str12 = str10;
                                            obj3 = "m4a";
                                            str13 = str5;
                                            obj4 = obj;
                                            obj5 = obj2;
                                            str14 = str8;
                                            i4 = -1;
                                            z7 = isEncryptedDialog;
                                            mimeTypeMap = singleton;
                                            j3 = 0;
                                            str15 = null;
                                            tLRPC$TL_document = null;
                                            if (tLRPC$TL_document != null) {
                                            }
                                            if (charSequence == null) {
                                            }
                                            hashMap = new HashMap();
                                            str18 = str12;
                                            if (str18 != null) {
                                            }
                                            if (z3) {
                                                hashMap.put("forceDocument", "1");
                                            }
                                            if (str15 != null) {
                                            }
                                            int i822222222 = 0;
                                            if (numArr == null) {
                                            }
                                            z8 = false;
                                            if (z7) {
                                            }
                                            final TLRPC$TL_document tLRPC$TL_document5222222222 = tLRPC$TL_document2;
                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                                @Override // java.lang.Runnable
                                                public final void run() {
                                                    SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document5222222222, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                }
                                            });
                                            return 0;
                                        }
                                        z9 = false;
                                        mediaMetadataRetriever2.release();
                                        title = str23;
                                        str9 = str24;
                                        z5 = z9;
                                        i3 = i7;
                                        if (i3 != 0) {
                                        }
                                        if (str2 == null) {
                                        }
                                        z6 = false;
                                        if (!z6) {
                                        }
                                        str11 = "";
                                        str12 = str10;
                                        obj3 = "m4a";
                                        str13 = str5;
                                        obj4 = obj;
                                        obj5 = obj2;
                                        str14 = str8;
                                        i4 = -1;
                                        z7 = isEncryptedDialog;
                                        mimeTypeMap = singleton;
                                        j3 = 0;
                                        str15 = null;
                                        tLRPC$TL_document = null;
                                        if (tLRPC$TL_document != null) {
                                        }
                                        if (charSequence == null) {
                                        }
                                        hashMap = new HashMap();
                                        str18 = str12;
                                        if (str18 != null) {
                                        }
                                        if (z3) {
                                        }
                                        if (str15 != null) {
                                        }
                                        int i8222222222 = 0;
                                        if (numArr == null) {
                                        }
                                        z8 = false;
                                        if (z7) {
                                        }
                                        final TLRPC$TL_document tLRPC$TL_document52222222222 = tLRPC$TL_document2;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document52222222222, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                            }
                                        });
                                        return 0;
                                    }
                                }
                                str24 = str25;
                                z9 = false;
                                mediaMetadataRetriever2.release();
                                title = str23;
                                str9 = str24;
                                z5 = z9;
                                i3 = i7;
                                if (i3 != 0) {
                                }
                                if (str2 == null) {
                                }
                                z6 = false;
                                if (!z6) {
                                }
                                str11 = "";
                                str12 = str10;
                                obj3 = "m4a";
                                str13 = str5;
                                obj4 = obj;
                                obj5 = obj2;
                                str14 = str8;
                                i4 = -1;
                                z7 = isEncryptedDialog;
                                mimeTypeMap = singleton;
                                j3 = 0;
                                str15 = null;
                                tLRPC$TL_document = null;
                                if (tLRPC$TL_document != null) {
                                }
                                if (charSequence == null) {
                                }
                                hashMap = new HashMap();
                                str18 = str12;
                                if (str18 != null) {
                                }
                                if (z3) {
                                }
                                if (str15 != null) {
                                }
                                int i82222222222 = 0;
                                if (numArr == null) {
                                }
                                z8 = false;
                                if (z7) {
                                }
                                final TLRPC$TL_document tLRPC$TL_document522222222222 = tLRPC$TL_document2;
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document522222222222, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                    }
                                });
                                return 0;
                            } else {
                                str8 = name;
                                obj = "flac";
                                obj2 = "opus";
                                title = null;
                                str9 = null;
                                i3 = 0;
                            }
                            z5 = false;
                            if (i3 != 0) {
                            }
                            if (str2 == null) {
                            }
                            z6 = false;
                            if (!z6) {
                            }
                            str11 = "";
                            str12 = str10;
                            obj3 = "m4a";
                            str13 = str5;
                            obj4 = obj;
                            obj5 = obj2;
                            str14 = str8;
                            i4 = -1;
                            z7 = isEncryptedDialog;
                            mimeTypeMap = singleton;
                            j3 = 0;
                            str15 = null;
                            tLRPC$TL_document = null;
                            if (tLRPC$TL_document != null) {
                            }
                            if (charSequence == null) {
                            }
                            hashMap = new HashMap();
                            str18 = str12;
                            if (str18 != null) {
                            }
                            if (z3) {
                            }
                            if (str15 != null) {
                            }
                            int i822222222222 = 0;
                            if (numArr == null) {
                            }
                            z8 = false;
                            if (z7) {
                            }
                            final TLRPC$TL_document tLRPC$TL_document5222222222222 = tLRPC$TL_document2;
                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document5222222222222, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                }
                            });
                            return 0;
                        }
                        str6 = str5.substring(lastIndexOf + 1);
                    }
                    str7 = str6;
                    lowerCase = str7.toLowerCase();
                    if (!lowerCase.equals("mp3")) {
                    }
                    str8 = name;
                    obj = "flac";
                    obj2 = "opus";
                    audioInfo = AudioInfo.getAudioInfo(file);
                    if (audioInfo != null) {
                    }
                    title = null;
                    str9 = null;
                    i3 = 0;
                    z5 = false;
                    if (i3 != 0) {
                    }
                    if (str2 == null) {
                    }
                    z6 = false;
                    if (!z6) {
                    }
                    str11 = "";
                    str12 = str10;
                    obj3 = "m4a";
                    str13 = str5;
                    obj4 = obj;
                    obj5 = obj2;
                    str14 = str8;
                    i4 = -1;
                    z7 = isEncryptedDialog;
                    mimeTypeMap = singleton;
                    j3 = 0;
                    str15 = null;
                    tLRPC$TL_document = null;
                    if (tLRPC$TL_document != null) {
                    }
                    if (charSequence == null) {
                    }
                    hashMap = new HashMap();
                    str18 = str12;
                    if (str18 != null) {
                    }
                    if (z3) {
                    }
                    if (str15 != null) {
                    }
                    int i8222222222222 = 0;
                    if (numArr == null) {
                    }
                    z8 = false;
                    if (z7) {
                    }
                    final TLRPC$TL_document tLRPC$TL_document52222222222222 = tLRPC$TL_document2;
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.lambda$prepareSendingDocumentInternal$76(MessageObject.this, accountInstance, tLRPC$TL_document52222222222222, str16, hashMap, str15, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                        }
                    });
                    return 0;
                }
                return 2;
            }
            return 1;
        }
        return 1;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingDocumentInternal$76(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, String str, HashMap hashMap, String str2, long j, MessageObject messageObject2, MessageObject messageObject3, String str3, ArrayList arrayList, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str4, int i2, long j2, boolean z2) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, str, hashMap, false, false, str2);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, null, str, j, messageObject2, messageObject3, str3, arrayList, null, hashMap, z, i, 0, str2, null, false);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str4;
        of.quick_reply_shortcut_id = i2;
        of.effect_id = j2;
        of.invert_media = z2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    private static boolean checkFileSize(AccountInstance accountInstance, Uri uri) {
        long j = 0;
        try {
            AssetFileDescriptor openAssetFileDescriptor = ApplicationLoader.applicationContext.getContentResolver().openAssetFileDescriptor(uri, "r", null);
            if (openAssetFileDescriptor != null) {
                openAssetFileDescriptor.getLength();
            }
            Cursor query = ApplicationLoader.applicationContext.getContentResolver().query(uri, new String[]{"_size"}, null, null, null);
            int columnIndex = query.getColumnIndex("_size");
            query.moveToFirst();
            j = query.getLong(columnIndex);
            query.close();
        } catch (Exception e) {
            FileLog.e(e);
        }
        return !FileLoader.checkUploadFileSize(accountInstance.getCurrentAccount(), j);
    }

    public static void prepareSendingDocument(AccountInstance accountInstance, String str, String str2, Uri uri, String str3, String str4, long j, MessageObject messageObject, MessageObject messageObject2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, MessageObject messageObject3, boolean z, int i, InputContentInfoCompat inputContentInfoCompat, String str5, int i2, boolean z2) {
        ArrayList arrayList;
        if ((str == null || str2 == null) && uri == null) {
            return;
        }
        ArrayList arrayList2 = new ArrayList();
        ArrayList arrayList3 = new ArrayList();
        if (uri != null) {
            arrayList = new ArrayList();
            arrayList.add(uri);
        } else {
            arrayList = null;
        }
        if (str != null) {
            arrayList2.add(str);
            arrayList3.add(str2);
        }
        prepareSendingDocuments(accountInstance, arrayList2, arrayList3, arrayList, str3, str4, j, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, messageObject3, z, i, inputContentInfoCompat, str5, i2, 0L, z2);
    }

    public static void prepareSendingAudioDocuments(final AccountInstance accountInstance, final ArrayList<MessageObject> arrayList, final CharSequence charSequence, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final boolean z, final int i, final MessageObject messageObject3, final String str, final int i2, final long j2, final boolean z2) {
        new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda56
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingAudioDocuments$78(arrayList, j, accountInstance, charSequence, messageObject3, messageObject, messageObject2, z, i, tL_stories$StoryItem, str, i2, j2, z2);
            }
        }).start();
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:25:0x0080  */
    /* JADX WARN: Removed duplicated region for block: B:32:0x00a4  */
    /* JADX WARN: Removed duplicated region for block: B:33:0x00af  */
    /* JADX WARN: Removed duplicated region for block: B:35:0x00b3  */
    /* JADX WARN: Removed duplicated region for block: B:38:0x00c2  */
    /* JADX WARN: Removed duplicated region for block: B:40:0x00c9  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingAudioDocuments$78(ArrayList arrayList, final long j, final AccountInstance accountInstance, CharSequence charSequence, final MessageObject messageObject, final MessageObject messageObject2, final MessageObject messageObject3, final boolean z, final int i, final TL_stories$StoryItem tL_stories$StoryItem, final String str, final int i2, final long j2, final boolean z2) {
        final TLRPC$TL_document tLRPC$TL_document;
        String str2;
        final HashMap hashMap;
        int size = arrayList.size();
        long j3 = 0;
        int i3 = 0;
        int i4 = 0;
        while (i3 < size) {
            final MessageObject messageObject4 = (MessageObject) arrayList.get(i3);
            String str3 = messageObject4.messageOwner.attachPath;
            File file = new File(str3);
            boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
            if (!isEncryptedDialog && size > 1 && i4 % 10 == 0) {
                j3 = Utilities.random.nextLong();
                i4 = 0;
            }
            if (str3 != null) {
                str3 = str3 + MediaStreamTrack.AUDIO_TRACK_KIND + file.length();
            }
            if (!isEncryptedDialog) {
                Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str3, !isEncryptedDialog ? 1 : 4);
                if (sentFile != null) {
                    Object obj = sentFile[0];
                    if (obj instanceof TLRPC$TL_document) {
                        tLRPC$TL_document = (TLRPC$TL_document) obj;
                        ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str3, null, 0L);
                        str2 = (String) sentFile[1];
                        if (tLRPC$TL_document == null) {
                            tLRPC$TL_document = (TLRPC$TL_document) messageObject4.messageOwner.media.document;
                        }
                        if (!isEncryptedDialog && accountInstance.getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                            return;
                        }
                        CharSequence[] charSequenceArr = {charSequence};
                        final ArrayList<TLRPC$MessageEntity> entities = i3 != 0 ? accountInstance.getMediaDataController().getEntities(charSequenceArr, true) : null;
                        final String charSequence2 = i3 == 0 ? charSequenceArr[0].toString() : null;
                        hashMap = new HashMap();
                        if (str3 != null) {
                            hashMap.put("originalPath", str3);
                        }
                        if (str2 != null) {
                            hashMap.put("parentObject", str2);
                        }
                        i4++;
                        hashMap.put("groupId", "" + j3);
                        if (i4 != 10 || i3 == size - 1) {
                            hashMap.put("final", "1");
                        }
                        final String str4 = str2;
                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda53
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.lambda$prepareSendingAudioDocuments$77(MessageObject.this, accountInstance, tLRPC$TL_document, messageObject4, hashMap, str4, j, messageObject2, messageObject3, charSequence2, entities, z, i, tL_stories$StoryItem, str, i2, j2, z2);
                            }
                        });
                        i3++;
                    }
                }
            }
            tLRPC$TL_document = null;
            str2 = null;
            if (tLRPC$TL_document == null) {
            }
            if (!isEncryptedDialog) {
            }
            CharSequence[] charSequenceArr2 = {charSequence};
            if (i3 != 0) {
            }
            final String charSequence22 = i3 == 0 ? charSequenceArr2[0].toString() : null;
            hashMap = new HashMap();
            if (str3 != null) {
            }
            if (str2 != null) {
            }
            i4++;
            hashMap.put("groupId", "" + j3);
            if (i4 != 10) {
            }
            hashMap.put("final", "1");
            final String str42 = str2;
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda53
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingAudioDocuments$77(MessageObject.this, accountInstance, tLRPC$TL_document, messageObject4, hashMap, str42, j, messageObject2, messageObject3, charSequence22, entities, z, i, tL_stories$StoryItem, str, i2, j2, z2);
                }
            });
            i3++;
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingAudioDocuments$77(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, MessageObject messageObject2, HashMap hashMap, String str, long j, MessageObject messageObject3, MessageObject messageObject4, String str2, ArrayList arrayList, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, String str3, int i2, long j2, boolean z2) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, messageObject2.messageOwner.attachPath, hashMap, false, false, str);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, null, messageObject2.messageOwner.attachPath, j, messageObject3, messageObject4, str2, arrayList, null, hashMap, z, i, 0, str, null, false, false);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.quick_reply_shortcut = str3;
        of.quick_reply_shortcut_id = i2;
        of.effect_id = j2;
        of.invert_media = z2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    private static void finishGroup(final AccountInstance accountInstance, final long j, final int i) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda47
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$finishGroup$79(AccountInstance.this, j, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$finishGroup$79(AccountInstance accountInstance, long j, int i) {
        SendMessagesHelper sendMessagesHelper = accountInstance.getSendMessagesHelper();
        HashMap<String, ArrayList<DelayedMessage>> hashMap = sendMessagesHelper.delayedMessages;
        ArrayList<DelayedMessage> arrayList = hashMap.get("group_" + j);
        if (arrayList == null || arrayList.isEmpty()) {
            return;
        }
        DelayedMessage delayedMessage = arrayList.get(0);
        ArrayList<MessageObject> arrayList2 = delayedMessage.messageObjects;
        MessageObject messageObject = arrayList2.get(arrayList2.size() - 1);
        delayedMessage.finalGroupMessage = messageObject.getId();
        messageObject.messageOwner.params.put("final", "1");
        TLRPC$TL_messages_messages tLRPC$TL_messages_messages = new TLRPC$TL_messages_messages();
        tLRPC$TL_messages_messages.messages.add(messageObject.messageOwner);
        if (!delayedMessage.paidMedia) {
            accountInstance.getMessagesStorage().putMessages((TLRPC$messages_Messages) tLRPC$TL_messages_messages, delayedMessage.peer, -2, 0, false, i != 0 ? 1 : 0, 0L);
        }
        sendMessagesHelper.sendReadyToSendGroup(delayedMessage, true, true);
    }

    public static void prepareSendingDocuments(final AccountInstance accountInstance, final ArrayList<String> arrayList, final ArrayList<String> arrayList2, final ArrayList<Uri> arrayList3, final String str, final String str2, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final MessageObject messageObject3, final boolean z, final int i, final InputContentInfoCompat inputContentInfoCompat, final String str3, final int i2, final long j2, final boolean z2) {
        if (arrayList == null && arrayList2 == null && arrayList3 == null) {
            return;
        }
        if (arrayList == null || arrayList2 == null || arrayList.size() == arrayList2.size()) {
            Utilities.globalQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda1
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingDocuments$80(j, arrayList, str, accountInstance, i, arrayList2, str2, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, messageObject3, z, inputContentInfoCompat, str3, i2, j2, z2, arrayList3);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingDocuments$80(long j, ArrayList arrayList, String str, AccountInstance accountInstance, int i, ArrayList arrayList2, String str2, MessageObject messageObject, MessageObject messageObject2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, MessageObject messageObject3, boolean z, InputContentInfoCompat inputContentInfoCompat, String str3, int i2, long j2, boolean z2, ArrayList arrayList3) {
        Integer[] numArr;
        long[] jArr;
        ArrayList arrayList4;
        int i3;
        boolean z3;
        AccountInstance accountInstance2;
        AccountInstance accountInstance3 = accountInstance;
        int i4 = i;
        int i5 = 1;
        long[] jArr2 = new long[1];
        Integer[] numArr2 = new Integer[1];
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        int i6 = 10;
        if (arrayList != null) {
            int size = arrayList.size();
            i3 = 0;
            int i7 = 0;
            boolean z4 = true;
            int i8 = 0;
            while (i8 < size) {
                String str4 = i8 == 0 ? str : null;
                if (!isEncryptedDialog && size > i5 && i7 % 10 == 0) {
                    long j3 = jArr2[0];
                    if (j3 != 0) {
                        finishGroup(accountInstance3, j3, i4);
                    }
                    jArr2[0] = Utilities.random.nextLong();
                    i7 = 0;
                }
                int i9 = i7 + 1;
                long j4 = jArr2[0];
                int i10 = size;
                int i11 = i8;
                Integer[] numArr3 = numArr2;
                long[] jArr3 = jArr2;
                i3 = prepareSendingDocumentInternal(accountInstance, (String) arrayList.get(i8), (String) arrayList2.get(i8), null, str2, j, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, null, messageObject3, jArr3, i9 == i6 || i8 == size + (-1), str4, z, i, numArr3, inputContentInfoCompat == null, str3, i2, z4 ? j2 : 0L, z2);
                long j5 = jArr3[0];
                i7 = (j4 != j5 || j5 == -1) ? 1 : i9;
                i8 = i11 + 1;
                accountInstance3 = accountInstance;
                i4 = i;
                size = i10;
                numArr2 = numArr3;
                jArr2 = jArr3;
                z4 = false;
                i6 = 10;
                i5 = 1;
            }
            numArr = numArr2;
            jArr = jArr2;
            arrayList4 = arrayList3;
            z3 = z4;
        } else {
            numArr = numArr2;
            jArr = jArr2;
            arrayList4 = arrayList3;
            i3 = 0;
            z3 = true;
        }
        if (arrayList4 != null) {
            jArr[0] = 0;
            int size2 = arrayList3.size();
            int i12 = 0;
            int i13 = 0;
            while (i13 < arrayList3.size()) {
                String str5 = (i13 == 0 && (arrayList == null || arrayList.size() == 0)) ? str : null;
                if (isEncryptedDialog) {
                    accountInstance2 = accountInstance;
                } else if (size2 <= 1 || i12 % 10 != 0) {
                    accountInstance2 = accountInstance;
                } else {
                    long j6 = jArr[0];
                    accountInstance2 = accountInstance;
                    if (j6 != 0) {
                        finishGroup(accountInstance2, j6, i);
                    }
                    jArr[0] = Utilities.random.nextLong();
                    i12 = 0;
                }
                int i14 = i12 + 1;
                long j7 = jArr[0];
                int i15 = i13;
                int i16 = size2;
                i3 = prepareSendingDocumentInternal(accountInstance, null, null, (Uri) arrayList4.get(i13), str2, j, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, null, messageObject3, jArr, i14 == 10 || i13 == size2 + (-1), str5, z, i, numArr, inputContentInfoCompat == null, str3, i2, z3 ? j2 : 0L, z2);
                long j8 = jArr[0];
                i12 = (j7 != j8 || j8 == -1) ? 1 : i14;
                i13 = i15 + 1;
                arrayList4 = arrayList3;
                size2 = i16;
                z3 = false;
            }
        }
        if (inputContentInfoCompat != null) {
            inputContentInfoCompat.releasePermission();
        }
        handleError(i3, accountInstance);
    }

    private static void handleError(final int i, final AccountInstance accountInstance) {
        if (i != 0) {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda40
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$handleError$81(i, accountInstance);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$handleError$81(int i, AccountInstance accountInstance) {
        try {
            if (i == 1) {
                NotificationCenter.getGlobalInstance().lambda$postNotificationNameOnUIThread$1(NotificationCenter.showBulletin, 1, LocaleController.getString(R.string.UnsupportedAttachment));
            } else if (i != 2) {
            } else {
                NotificationCenter.getInstance(accountInstance.getCurrentAccount()).lambda$postNotificationNameOnUIThread$1(NotificationCenter.currentUserShowLimitReachedDialog, 6);
            }
        } catch (Exception e) {
            FileLog.e(e);
        }
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String str, Uri uri, long j, MessageObject messageObject, MessageObject messageObject2, ChatActivity.ReplyQuote replyQuote, CharSequence charSequence, ArrayList<TLRPC$MessageEntity> arrayList, ArrayList<TLRPC$InputDocument> arrayList2, InputContentInfoCompat inputContentInfoCompat, int i, MessageObject messageObject3, boolean z, int i2, int i3, String str2, int i4) {
        prepareSendingPhoto(accountInstance, str, null, uri, j, messageObject, messageObject2, null, null, arrayList, arrayList2, inputContentInfoCompat, i, messageObject3, null, z, i2, i3, false, charSequence, str2, i4, 0L);
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String str, String str2, Uri uri, long j, MessageObject messageObject, MessageObject messageObject2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, ArrayList<TLRPC$MessageEntity> arrayList, ArrayList<TLRPC$InputDocument> arrayList2, InputContentInfoCompat inputContentInfoCompat, int i, MessageObject messageObject3, VideoEditedInfo videoEditedInfo, boolean z, int i2, int i3, boolean z2, CharSequence charSequence, String str3, int i4, long j2) {
        SendingMediaInfo sendingMediaInfo = new SendingMediaInfo();
        sendingMediaInfo.path = str;
        sendingMediaInfo.thumbPath = str2;
        sendingMediaInfo.uri = uri;
        if (charSequence != null) {
            sendingMediaInfo.caption = charSequence.toString();
        }
        sendingMediaInfo.entities = arrayList;
        sendingMediaInfo.ttl = i;
        if (arrayList2 != null) {
            sendingMediaInfo.masks = new ArrayList<>(arrayList2);
        }
        sendingMediaInfo.videoEditedInfo = videoEditedInfo;
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(sendingMediaInfo);
        prepareSendingMedia(accountInstance, arrayList3, j, messageObject, messageObject2, null, replyQuote, z2, false, messageObject3, z, i2, i3, false, inputContentInfoCompat, str3, i4, j2, false);
    }

    public static void prepareSendingBotContextResult(final BaseFragment baseFragment, final AccountInstance accountInstance, final TLRPC$BotInlineResult tLRPC$BotInlineResult, final HashMap<String, String> hashMap, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final boolean z, final int i, final String str, final int i2) {
        SendMessageParams of;
        TLRPC$TL_webPagePending tLRPC$TL_webPagePending;
        if (tLRPC$BotInlineResult == null) {
            return;
        }
        TLRPC$BotInlineMessage tLRPC$BotInlineMessage = tLRPC$BotInlineResult.send_message;
        if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaAuto) {
            new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda48
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingBotContextResult$85(j, tLRPC$BotInlineResult, accountInstance, hashMap, baseFragment, messageObject, messageObject2, z, i, str, i2, tL_stories$StoryItem, replyQuote);
                }
            }).run();
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageText) {
            if (DialogObject.isEncryptedDialog(j)) {
                for (int i3 = 0; i3 < tLRPC$BotInlineResult.send_message.entities.size(); i3++) {
                    TLRPC$MessageEntity tLRPC$MessageEntity = tLRPC$BotInlineResult.send_message.entities.get(i3);
                    if (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityUrl) {
                        tLRPC$TL_webPagePending = new TLRPC$TL_webPagePending();
                        String str2 = tLRPC$BotInlineResult.send_message.message;
                        int i4 = tLRPC$MessageEntity.offset;
                        tLRPC$TL_webPagePending.url = str2.substring(i4, tLRPC$MessageEntity.length + i4);
                        break;
                    }
                }
            }
            tLRPC$TL_webPagePending = null;
            TLRPC$TL_webPagePending tLRPC$TL_webPagePending2 = tLRPC$TL_webPagePending;
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage2 = tLRPC$BotInlineResult.send_message;
            SendMessageParams of2 = SendMessageParams.of(tLRPC$BotInlineMessage2.message, j, messageObject, messageObject2, tLRPC$TL_webPagePending2, !tLRPC$BotInlineMessage2.no_webpage, tLRPC$BotInlineMessage2.entities, tLRPC$BotInlineMessage2.reply_markup, hashMap, z, i, null, false);
            of2.quick_reply_shortcut = str;
            of2.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of2);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaVenue) {
            TLRPC$TL_messageMediaVenue tLRPC$TL_messageMediaVenue = new TLRPC$TL_messageMediaVenue();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage3 = tLRPC$BotInlineResult.send_message;
            tLRPC$TL_messageMediaVenue.geo = tLRPC$BotInlineMessage3.geo;
            tLRPC$TL_messageMediaVenue.address = tLRPC$BotInlineMessage3.address;
            tLRPC$TL_messageMediaVenue.title = tLRPC$BotInlineMessage3.title;
            tLRPC$TL_messageMediaVenue.provider = tLRPC$BotInlineMessage3.provider;
            String str3 = tLRPC$BotInlineMessage3.venue_type;
            tLRPC$TL_messageMediaVenue.venue_id = str3;
            tLRPC$TL_messageMediaVenue.venue_type = str3;
            if (str3 == null) {
                tLRPC$TL_messageMediaVenue.venue_type = "";
            }
            SendMessageParams of3 = SendMessageParams.of(tLRPC$TL_messageMediaVenue, j, messageObject, messageObject2, tLRPC$BotInlineMessage3.reply_markup, hashMap, z, i);
            of3.quick_reply_shortcut = str;
            of3.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of3);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaGeo) {
            if (tLRPC$BotInlineMessage.period != 0 || tLRPC$BotInlineMessage.proximity_notification_radius != 0) {
                TLRPC$TL_messageMediaGeoLive tLRPC$TL_messageMediaGeoLive = new TLRPC$TL_messageMediaGeoLive();
                TLRPC$BotInlineMessage tLRPC$BotInlineMessage4 = tLRPC$BotInlineResult.send_message;
                int i5 = tLRPC$BotInlineMessage4.period;
                if (i5 == 0) {
                    i5 = 900;
                }
                tLRPC$TL_messageMediaGeoLive.period = i5;
                tLRPC$TL_messageMediaGeoLive.geo = tLRPC$BotInlineMessage4.geo;
                tLRPC$TL_messageMediaGeoLive.heading = tLRPC$BotInlineMessage4.heading;
                tLRPC$TL_messageMediaGeoLive.proximity_notification_radius = tLRPC$BotInlineMessage4.proximity_notification_radius;
                of = SendMessageParams.of(tLRPC$TL_messageMediaGeoLive, j, messageObject, messageObject2, tLRPC$BotInlineMessage4.reply_markup, hashMap, z, i);
            } else {
                TLRPC$TL_messageMediaGeo tLRPC$TL_messageMediaGeo = new TLRPC$TL_messageMediaGeo();
                TLRPC$BotInlineMessage tLRPC$BotInlineMessage5 = tLRPC$BotInlineResult.send_message;
                tLRPC$TL_messageMediaGeo.geo = tLRPC$BotInlineMessage5.geo;
                tLRPC$TL_messageMediaGeo.heading = tLRPC$BotInlineMessage5.heading;
                of = SendMessageParams.of(tLRPC$TL_messageMediaGeo, j, messageObject, messageObject2, tLRPC$BotInlineMessage5.reply_markup, hashMap, z, i);
            }
            of.quick_reply_shortcut = str;
            of.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaContact) {
            TLRPC$TL_user tLRPC$TL_user = new TLRPC$TL_user();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage6 = tLRPC$BotInlineResult.send_message;
            tLRPC$TL_user.phone = tLRPC$BotInlineMessage6.phone_number;
            tLRPC$TL_user.first_name = tLRPC$BotInlineMessage6.first_name;
            tLRPC$TL_user.last_name = tLRPC$BotInlineMessage6.last_name;
            TLRPC$RestrictionReason tLRPC$RestrictionReason = new TLRPC$RestrictionReason();
            tLRPC$RestrictionReason.text = tLRPC$BotInlineResult.send_message.vcard;
            tLRPC$RestrictionReason.platform = "";
            tLRPC$RestrictionReason.reason = "";
            tLRPC$TL_user.restriction_reason.add(tLRPC$RestrictionReason);
            SendMessageParams of4 = SendMessageParams.of(tLRPC$TL_user, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
            of4.quick_reply_shortcut = str;
            of4.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of4);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaInvoice) {
            if (DialogObject.isEncryptedDialog(j)) {
                return;
            }
            TLRPC$TL_botInlineMessageMediaInvoice tLRPC$TL_botInlineMessageMediaInvoice = (TLRPC$TL_botInlineMessageMediaInvoice) tLRPC$BotInlineResult.send_message;
            TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice = new TLRPC$TL_messageMediaInvoice();
            tLRPC$TL_messageMediaInvoice.shipping_address_requested = tLRPC$TL_botInlineMessageMediaInvoice.shipping_address_requested;
            tLRPC$TL_messageMediaInvoice.test = tLRPC$TL_botInlineMessageMediaInvoice.test;
            tLRPC$TL_messageMediaInvoice.title = tLRPC$TL_botInlineMessageMediaInvoice.title;
            tLRPC$TL_messageMediaInvoice.description = tLRPC$TL_botInlineMessageMediaInvoice.description;
            TLRPC$WebDocument tLRPC$WebDocument = tLRPC$TL_botInlineMessageMediaInvoice.photo;
            if (tLRPC$WebDocument != null) {
                tLRPC$TL_messageMediaInvoice.webPhoto = tLRPC$WebDocument;
                tLRPC$TL_messageMediaInvoice.flags |= 1;
            }
            tLRPC$TL_messageMediaInvoice.currency = tLRPC$TL_botInlineMessageMediaInvoice.currency;
            tLRPC$TL_messageMediaInvoice.total_amount = tLRPC$TL_botInlineMessageMediaInvoice.total_amount;
            tLRPC$TL_messageMediaInvoice.start_param = "";
            SendMessageParams of5 = SendMessageParams.of(tLRPC$TL_messageMediaInvoice, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
            of5.quick_reply_shortcut = str;
            of5.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of5);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaWebPage) {
            TLRPC$TL_webPagePending tLRPC$TL_webPagePending3 = new TLRPC$TL_webPagePending();
            tLRPC$TL_webPagePending3.url = ((TLRPC$TL_botInlineMessageMediaWebPage) tLRPC$BotInlineMessage).url;
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage7 = tLRPC$BotInlineResult.send_message;
            SendMessageParams of6 = SendMessageParams.of(tLRPC$BotInlineMessage7.message, j, messageObject, messageObject2, tLRPC$TL_webPagePending3, !tLRPC$BotInlineMessage7.no_webpage, tLRPC$BotInlineMessage7.entities, tLRPC$BotInlineMessage7.reply_markup, hashMap, z, i, null, false);
            of6.quick_reply_shortcut = str;
            of6.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of6);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Code restructure failed: missing block: B:83:0x01c9, code lost:
        if (r0.equals("voice") == false) goto L99;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:156:0x03a1 A[Catch: all -> 0x035b, TryCatch #1 {all -> 0x035b, blocks: (B:138:0x0329, B:140:0x032f, B:142:0x0336, B:144:0x033c, B:146:0x0344, B:148:0x0352, B:152:0x036c, B:151:0x035d, B:156:0x03a1, B:161:0x03ab, B:163:0x03b1, B:164:0x03bc, B:154:0x0398), top: B:235:0x0329 }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingBotContextResult$85(final long j, final TLRPC$BotInlineResult tLRPC$BotInlineResult, final AccountInstance accountInstance, final HashMap hashMap, final BaseFragment baseFragment, final MessageObject messageObject, final MessageObject messageObject2, final boolean z, final int i, final String str, final int i2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote) {
        String str2;
        char c;
        String str3;
        Bitmap loadBitmap;
        Bitmap bitmap;
        int lastIndexOf;
        TLRPC$TL_document tLRPC$TL_document;
        TLRPC$TL_photo tLRPC$TL_photo;
        final TLRPC$TL_photo tLRPC$TL_photo2;
        TLRPC$TL_photo tLRPC$TL_photo3;
        TLRPC$WebDocument tLRPC$WebDocument;
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        if (!"game".equals(tLRPC$BotInlineResult.type)) {
            if (tLRPC$BotInlineResult instanceof TLRPC$TL_botInlineMediaResult) {
                TLRPC$Document tLRPC$Document = tLRPC$BotInlineResult.document;
                if (tLRPC$Document != null) {
                    if (tLRPC$Document instanceof TLRPC$TL_document) {
                        tLRPC$TL_document = (TLRPC$TL_document) tLRPC$Document;
                        tLRPC$TL_photo = null;
                    }
                } else {
                    TLRPC$Photo tLRPC$Photo = tLRPC$BotInlineResult.photo;
                    if (tLRPC$Photo != null && (tLRPC$Photo instanceof TLRPC$TL_photo)) {
                        tLRPC$TL_photo2 = (TLRPC$TL_photo) tLRPC$Photo;
                        tLRPC$TL_document = null;
                        tLRPC$TL_photo = null;
                        tLRPC$TL_photo3 = null;
                    }
                }
                tLRPC$TL_document = null;
                tLRPC$TL_photo = null;
            } else {
                TLRPC$WebDocument tLRPC$WebDocument2 = tLRPC$BotInlineResult.content;
                if (tLRPC$WebDocument2 != null) {
                    String httpUrlExtension = ImageLoader.getHttpUrlExtension(tLRPC$WebDocument2.url, null);
                    File file = new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult.content.url) + (TextUtils.isEmpty(httpUrlExtension) ? FileLoader.getExtensionByMimeType(tLRPC$BotInlineResult.content.mime_type) : "." + httpUrlExtension));
                    if (file.exists()) {
                        str2 = file.getAbsolutePath();
                    } else {
                        str2 = tLRPC$BotInlineResult.content.url;
                    }
                    String str4 = str2;
                    String str5 = tLRPC$BotInlineResult.type;
                    str5.hashCode();
                    char c2 = 5;
                    switch (str5.hashCode()) {
                        case -1890252483:
                            if (str5.equals("sticker")) {
                                c = 0;
                                break;
                            }
                            c = 65535;
                            break;
                        case 102340:
                            if (str5.equals("gif")) {
                                c = 1;
                                break;
                            }
                            c = 65535;
                            break;
                        case 3143036:
                            if (str5.equals("file")) {
                                c = 2;
                                break;
                            }
                            c = 65535;
                            break;
                        case 93166550:
                            if (str5.equals(MediaStreamTrack.AUDIO_TRACK_KIND)) {
                                c = 3;
                                break;
                            }
                            c = 65535;
                            break;
                        case 106642994:
                            if (str5.equals("photo")) {
                                c = 4;
                                break;
                            }
                            c = 65535;
                            break;
                        case 112202875:
                            if (str5.equals(MediaStreamTrack.VIDEO_TRACK_KIND)) {
                                c = 5;
                                break;
                            }
                            c = 65535;
                            break;
                        case 112386354:
                            if (str5.equals("voice")) {
                                c = 6;
                                break;
                            }
                            c = 65535;
                            break;
                        default:
                            c = 65535;
                            break;
                    }
                    switch (c) {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 5:
                        case 6:
                            TLRPC$TL_document tLRPC$TL_document2 = new TLRPC$TL_document();
                            tLRPC$TL_document2.id = 0L;
                            tLRPC$TL_document2.size = 0L;
                            tLRPC$TL_document2.dc_id = 0;
                            tLRPC$TL_document2.mime_type = tLRPC$BotInlineResult.content.mime_type;
                            tLRPC$TL_document2.file_reference = new byte[0];
                            tLRPC$TL_document2.date = accountInstance.getConnectionsManager().getCurrentTime();
                            TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                            tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeFilename);
                            String str6 = tLRPC$BotInlineResult.type;
                            str6.hashCode();
                            switch (str6.hashCode()) {
                                case -1890252483:
                                    if (str6.equals("sticker")) {
                                        c2 = 0;
                                        break;
                                    }
                                    c2 = 65535;
                                    break;
                                case 102340:
                                    if (str6.equals("gif")) {
                                        c2 = 1;
                                        break;
                                    }
                                    c2 = 65535;
                                    break;
                                case 3143036:
                                    if (str6.equals("file")) {
                                        c2 = 2;
                                        break;
                                    }
                                    c2 = 65535;
                                    break;
                                case 93166550:
                                    if (str6.equals(MediaStreamTrack.AUDIO_TRACK_KIND)) {
                                        c2 = 3;
                                        break;
                                    }
                                    c2 = 65535;
                                    break;
                                case 112202875:
                                    if (str6.equals(MediaStreamTrack.VIDEO_TRACK_KIND)) {
                                        c2 = 4;
                                        break;
                                    }
                                    c2 = 65535;
                                    break;
                                case 112386354:
                                    break;
                                default:
                                    c2 = 65535;
                                    break;
                            }
                            switch (c2) {
                                case 0:
                                    str3 = str4;
                                    TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                    tLRPC$TL_documentAttributeSticker.alt = "";
                                    tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                    tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeSticker);
                                    TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize = new TLRPC$TL_documentAttributeImageSize();
                                    int[] inlineResultWidthAndHeight = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                    tLRPC$TL_documentAttributeImageSize.w = inlineResultWidthAndHeight[0];
                                    tLRPC$TL_documentAttributeImageSize.h = inlineResultWidthAndHeight[1];
                                    tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeImageSize);
                                    tLRPC$TL_documentAttributeFilename.file_name = "sticker.webp";
                                    try {
                                        if (tLRPC$BotInlineResult.thumb != null) {
                                            Bitmap loadBitmap2 = ImageLoader.loadBitmap(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult.thumb.url) + "." + ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult.thumb.url, "webp")).getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            if (loadBitmap2 != null) {
                                                TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap2, 90.0f, 90.0f, 55, false);
                                                if (scaleAndSaveImage != null) {
                                                    tLRPC$TL_document2.thumbs.add(scaleAndSaveImage);
                                                    tLRPC$TL_document2.flags |= 1;
                                                }
                                                loadBitmap2.recycle();
                                                break;
                                            }
                                        }
                                    } catch (Throwable th) {
                                        FileLog.e(th);
                                        break;
                                    }
                                    break;
                                case 1:
                                    tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                                    str3 = str4;
                                    if (str3.endsWith("mp4")) {
                                        tLRPC$TL_document2.mime_type = "video/mp4";
                                        tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                    } else {
                                        tLRPC$TL_document2.mime_type = "image/gif";
                                    }
                                    int i3 = isEncryptedDialog ? 90 : 320;
                                    try {
                                        if (str3.endsWith("mp4")) {
                                            bitmap = createVideoThumbnail(str3, 1);
                                            if (bitmap == null) {
                                                TLRPC$WebDocument tLRPC$WebDocument3 = tLRPC$BotInlineResult.thumb;
                                                if ((tLRPC$WebDocument3 instanceof TLRPC$TL_webDocument) && "video/mp4".equals(tLRPC$WebDocument3.mime_type)) {
                                                    String httpUrlExtension2 = ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult.thumb.url, null);
                                                    loadBitmap = createVideoThumbnail(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult.thumb.url) + (TextUtils.isEmpty(httpUrlExtension2) ? FileLoader.getExtensionByMimeType(tLRPC$BotInlineResult.thumb.mime_type) : "." + httpUrlExtension2)).getAbsolutePath(), 1);
                                                }
                                            }
                                            if (bitmap != null) {
                                                float f = i3;
                                                TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(bitmap, f, f, i3 > 90 ? 80 : 55, false);
                                                if (scaleAndSaveImage2 != null) {
                                                    tLRPC$TL_document2.thumbs.add(scaleAndSaveImage2);
                                                    tLRPC$TL_document2.flags |= 1;
                                                }
                                                bitmap.recycle();
                                                break;
                                            }
                                        } else {
                                            float f2 = i3;
                                            loadBitmap = ImageLoader.loadBitmap(str3, null, f2, f2, true);
                                        }
                                        bitmap = loadBitmap;
                                        if (bitmap != null) {
                                        }
                                    } catch (Throwable th2) {
                                        FileLog.e(th2);
                                        break;
                                    }
                                    break;
                                case 2:
                                    if (tLRPC$BotInlineResult.content.mime_type.lastIndexOf(47) != -1) {
                                        tLRPC$TL_documentAttributeFilename.file_name = "file." + tLRPC$BotInlineResult.content.mime_type.substring(lastIndexOf + 1);
                                    } else {
                                        tLRPC$TL_documentAttributeFilename.file_name = "file";
                                    }
                                    str3 = str4;
                                    break;
                                case 3:
                                    TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio = new TLRPC$TL_documentAttributeAudio();
                                    tLRPC$TL_documentAttributeAudio.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                    tLRPC$TL_documentAttributeAudio.title = tLRPC$BotInlineResult.title;
                                    int i4 = tLRPC$TL_documentAttributeAudio.flags;
                                    tLRPC$TL_documentAttributeAudio.flags = i4 | 1;
                                    String str7 = tLRPC$BotInlineResult.description;
                                    if (str7 != null) {
                                        tLRPC$TL_documentAttributeAudio.performer = str7;
                                        tLRPC$TL_documentAttributeAudio.flags = i4 | 3;
                                    }
                                    tLRPC$TL_documentAttributeFilename.file_name = "audio.mp3";
                                    tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeAudio);
                                    str3 = str4;
                                    break;
                                case 4:
                                    tLRPC$TL_documentAttributeFilename.file_name = "video.mp4";
                                    TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                    int[] inlineResultWidthAndHeight2 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                    tLRPC$TL_documentAttributeVideo.w = inlineResultWidthAndHeight2[0];
                                    tLRPC$TL_documentAttributeVideo.h = inlineResultWidthAndHeight2[1];
                                    tLRPC$TL_documentAttributeVideo.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                    tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                    tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeVideo);
                                    try {
                                        if (tLRPC$BotInlineResult.thumb != null) {
                                            Bitmap loadBitmap3 = ImageLoader.loadBitmap(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult.thumb.url) + "." + ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult.thumb.url, "jpg")).getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            if (loadBitmap3 != null) {
                                                TLRPC$PhotoSize scaleAndSaveImage3 = ImageLoader.scaleAndSaveImage(loadBitmap3, 90.0f, 90.0f, 55, false);
                                                if (scaleAndSaveImage3 != null) {
                                                    tLRPC$TL_document2.thumbs.add(scaleAndSaveImage3);
                                                    tLRPC$TL_document2.flags |= 1;
                                                }
                                                loadBitmap3.recycle();
                                            }
                                        }
                                    } catch (Throwable th3) {
                                        FileLog.e(th3);
                                    }
                                    str3 = str4;
                                    break;
                                case 5:
                                    TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio2 = new TLRPC$TL_documentAttributeAudio();
                                    tLRPC$TL_documentAttributeAudio2.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                    tLRPC$TL_documentAttributeAudio2.voice = true;
                                    tLRPC$TL_documentAttributeFilename.file_name = "audio.ogg";
                                    tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeAudio2);
                                    str3 = str4;
                                    break;
                                default:
                                    str3 = str4;
                                    break;
                            }
                            if (tLRPC$TL_documentAttributeFilename.file_name == null) {
                                tLRPC$TL_documentAttributeFilename.file_name = "file";
                            }
                            if (tLRPC$TL_document2.mime_type == null) {
                                tLRPC$TL_document2.mime_type = "application/octet-stream";
                            }
                            if (tLRPC$TL_document2.thumbs.isEmpty()) {
                                TLRPC$TL_photoSize tLRPC$TL_photoSize = new TLRPC$TL_photoSize();
                                int[] inlineResultWidthAndHeight3 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                tLRPC$TL_photoSize.w = inlineResultWidthAndHeight3[0];
                                tLRPC$TL_photoSize.h = inlineResultWidthAndHeight3[1];
                                tLRPC$TL_photoSize.size = 0;
                                tLRPC$TL_photoSize.location = new TLRPC$TL_fileLocationUnavailable();
                                tLRPC$TL_photoSize.type = "x";
                                tLRPC$TL_document2.thumbs.add(tLRPC$TL_photoSize);
                                tLRPC$TL_document2.flags |= 1;
                            }
                            tLRPC$TL_document = tLRPC$TL_document2;
                            tLRPC$TL_photo = str3;
                            tLRPC$TL_photo2 = null;
                            tLRPC$TL_photo3 = tLRPC$TL_photo2;
                            break;
                        case 4:
                            TLRPC$TL_photo generatePhotoSizes = file.exists() ? accountInstance.getSendMessagesHelper().generatePhotoSizes(str4, null) : null;
                            if (generatePhotoSizes == null) {
                                generatePhotoSizes = new TLRPC$TL_photo();
                                generatePhotoSizes.date = accountInstance.getConnectionsManager().getCurrentTime();
                                generatePhotoSizes.file_reference = new byte[0];
                                TLRPC$TL_photoSize tLRPC$TL_photoSize2 = new TLRPC$TL_photoSize();
                                int[] inlineResultWidthAndHeight4 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                tLRPC$TL_photoSize2.w = inlineResultWidthAndHeight4[0];
                                tLRPC$TL_photoSize2.h = inlineResultWidthAndHeight4[1];
                                tLRPC$TL_photoSize2.size = 1;
                                tLRPC$TL_photoSize2.location = new TLRPC$TL_fileLocationUnavailable();
                                tLRPC$TL_photoSize2.type = "x";
                                generatePhotoSizes.sizes.add(tLRPC$TL_photoSize2);
                            }
                            tLRPC$TL_photo2 = generatePhotoSizes;
                            tLRPC$TL_photo = str4;
                            tLRPC$TL_document = null;
                            tLRPC$TL_photo3 = null;
                            break;
                        default:
                            tLRPC$TL_photo = str4;
                            tLRPC$TL_document = null;
                            tLRPC$TL_photo2 = null;
                            tLRPC$TL_photo3 = tLRPC$TL_photo2;
                            break;
                    }
                }
                tLRPC$TL_document = null;
                tLRPC$TL_photo = null;
            }
            tLRPC$TL_photo2 = tLRPC$TL_photo;
            tLRPC$TL_photo3 = tLRPC$TL_photo2;
        } else if (isEncryptedDialog) {
            return;
        } else {
            TLRPC$TL_game tLRPC$TL_game = new TLRPC$TL_game();
            tLRPC$TL_game.title = tLRPC$BotInlineResult.title;
            tLRPC$TL_game.description = tLRPC$BotInlineResult.description;
            tLRPC$TL_game.short_name = tLRPC$BotInlineResult.id;
            TLRPC$Photo tLRPC$Photo2 = tLRPC$BotInlineResult.photo;
            tLRPC$TL_game.photo = tLRPC$Photo2;
            if (tLRPC$Photo2 == null) {
                tLRPC$TL_game.photo = new TLRPC$TL_photoEmpty();
            }
            TLRPC$Document tLRPC$Document2 = tLRPC$BotInlineResult.document;
            if (tLRPC$Document2 instanceof TLRPC$TL_document) {
                tLRPC$TL_game.document = tLRPC$Document2;
                tLRPC$TL_game.flags |= 1;
            }
            tLRPC$TL_photo3 = tLRPC$TL_game;
            tLRPC$TL_document = null;
            tLRPC$TL_photo = null;
            tLRPC$TL_photo2 = null;
        }
        if (hashMap != null && (tLRPC$WebDocument = tLRPC$BotInlineResult.content) != null) {
            hashMap.put("originalPath", tLRPC$WebDocument.url);
        }
        final Bitmap[] bitmapArr = new Bitmap[1];
        final String[] strArr = new String[1];
        if (isEncryptedDialog && tLRPC$TL_document != null) {
            for (int i5 = 0; i5 < tLRPC$TL_document.attributes.size(); i5++) {
                if (tLRPC$TL_document.attributes.get(i5) instanceof TLRPC$TL_documentAttributeVideo) {
                    TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo2 = (TLRPC$TL_documentAttributeVideo) tLRPC$TL_document.attributes.get(i5);
                    TLRPC$TL_documentAttributeVideo_layer159 tLRPC$TL_documentAttributeVideo_layer159 = new TLRPC$TL_documentAttributeVideo_layer159();
                    tLRPC$TL_documentAttributeVideo_layer159.flags = tLRPC$TL_documentAttributeVideo2.flags;
                    tLRPC$TL_documentAttributeVideo_layer159.round_message = tLRPC$TL_documentAttributeVideo2.round_message;
                    tLRPC$TL_documentAttributeVideo_layer159.supports_streaming = tLRPC$TL_documentAttributeVideo2.supports_streaming;
                    tLRPC$TL_documentAttributeVideo_layer159.duration = tLRPC$TL_documentAttributeVideo2.duration;
                    tLRPC$TL_documentAttributeVideo_layer159.w = tLRPC$TL_documentAttributeVideo2.w;
                    tLRPC$TL_documentAttributeVideo_layer159.h = tLRPC$TL_documentAttributeVideo2.h;
                    tLRPC$TL_document.attributes.set(i5, tLRPC$TL_documentAttributeVideo_layer159);
                }
            }
        }
        if (MessageObject.isGifDocument(tLRPC$TL_document)) {
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_document.thumbs, 320);
            File pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document);
            if (!pathToAttach.exists()) {
                pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document, true);
            }
            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, pathToAttach.getAbsolutePath(), null, 0L);
            strArr[0] = getKeyForPhotoSize(accountInstance, closestPhotoSizeWithSize, bitmapArr, true, true);
        }
        TLRPC$InputPeer inputPeer = !DialogObject.isEncryptedDialog(j) ? accountInstance.getMessagesController().getInputPeer(j) : null;
        if (inputPeer != null && inputPeer.user_id != 0 && accountInstance.getMessagesController().getUserFull(inputPeer.user_id) != null && accountInstance.getMessagesController().getUserFull(inputPeer.user_id).voice_messages_forbidden && tLRPC$TL_document != null) {
            if (MessageObject.isVoiceDocument(tLRPC$TL_document)) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda72
                    @Override // java.lang.Runnable
                    public final void run() {
                        AlertsCreator.showSendMediaAlert(7, BaseFragment.this, null);
                    }
                });
                return;
            } else if (MessageObject.isRoundVideoDocument(tLRPC$TL_document)) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda73
                    @Override // java.lang.Runnable
                    public final void run() {
                        AlertsCreator.showSendMediaAlert(8, BaseFragment.this, null);
                    }
                });
                return;
            } else {
                return;
            }
        }
        final TLRPC$TL_document tLRPC$TL_document3 = tLRPC$TL_document;
        final String str8 = tLRPC$TL_photo;
        final TLRPC$TL_game tLRPC$TL_game2 = tLRPC$TL_photo3;
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda74
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingBotContextResult$84(TLRPC$TL_document.this, bitmapArr, strArr, str8, j, messageObject, messageObject2, tLRPC$BotInlineResult, hashMap, z, i, tLRPC$TL_photo2, tLRPC$TL_game2, str, i2, tL_stories$StoryItem, replyQuote, accountInstance);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingBotContextResult$84(TLRPC$TL_document tLRPC$TL_document, Bitmap[] bitmapArr, String[] strArr, String str, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$BotInlineResult tLRPC$BotInlineResult, HashMap hashMap, boolean z, int i, TLRPC$TL_photo tLRPC$TL_photo, TLRPC$TL_game tLRPC$TL_game, String str2, int i2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, AccountInstance accountInstance) {
        SendMessageParams sendMessageParams;
        if (tLRPC$TL_document != null) {
            if (bitmapArr[0] != null && strArr[0] != null) {
                ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
            }
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage = tLRPC$BotInlineResult.send_message;
            sendMessageParams = SendMessageParams.of(tLRPC$TL_document, null, str, j, messageObject, messageObject2, tLRPC$BotInlineMessage.message, tLRPC$BotInlineMessage.entities, tLRPC$BotInlineMessage.reply_markup, hashMap, z, i, 0, tLRPC$BotInlineResult, null, false);
        } else {
            sendMessageParams = null;
            if (tLRPC$TL_photo != null) {
                TLRPC$WebDocument tLRPC$WebDocument = tLRPC$BotInlineResult.content;
                String str3 = tLRPC$WebDocument != null ? tLRPC$WebDocument.url : null;
                TLRPC$BotInlineMessage tLRPC$BotInlineMessage2 = tLRPC$BotInlineResult.send_message;
                sendMessageParams = SendMessageParams.of(tLRPC$TL_photo, str3, j, messageObject, messageObject2, tLRPC$BotInlineMessage2.message, tLRPC$BotInlineMessage2.entities, tLRPC$BotInlineMessage2.reply_markup, hashMap, z, i, 0, tLRPC$BotInlineResult, false);
            } else if (tLRPC$TL_game != null) {
                sendMessageParams = SendMessageParams.of(tLRPC$TL_game, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
            }
        }
        if (sendMessageParams != null) {
            sendMessageParams.quick_reply_shortcut = str2;
            sendMessageParams.quick_reply_shortcut_id = i2;
            sendMessageParams.replyToStoryItem = tL_stories$StoryItem;
            sendMessageParams.replyQuote = replyQuote;
            accountInstance.getSendMessagesHelper().sendMessage(sendMessageParams);
        }
    }

    private static String getTrimmedString(String str) {
        String trim = str.trim();
        if (trim.length() == 0) {
            return trim;
        }
        while (str.startsWith("\n")) {
            str = str.substring(1);
        }
        while (str.endsWith("\n")) {
            str = str.substring(0, str.length() - 1);
        }
        return str;
    }

    public static void prepareSendingText(AccountInstance accountInstance, String str, long j, boolean z, int i, long j2) {
        prepareSendingText(accountInstance, str, j, 0L, z, i, j2);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingText$87(final String str, final long j, final AccountInstance accountInstance, final long j2, final boolean z, final int i, final long j3) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda18
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingText$86(str, j, accountInstance, j2, z, i, j3);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingText$88(final String str, final long j, final AccountInstance accountInstance, final long j2, final boolean z, final int i, final long j3) {
        Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda84
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingText$87(str, j, accountInstance, j2, z, i, j3);
            }
        });
    }

    public static void prepareSendingText(final AccountInstance accountInstance, final String str, final long j, final long j2, final boolean z, final int i, final long j3) {
        accountInstance.getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda44
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingText$88(str, j2, accountInstance, j, z, i, j3);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:14:0x004a  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingText$86(String str, long j, AccountInstance accountInstance, long j2, boolean z, int i, long j3) {
        MessageObject messageObject;
        TLRPC$TL_forumTopic findTopic;
        String trimmedString = getTrimmedString(str);
        if (trimmedString.length() != 0) {
            int ceil = (int) Math.ceil(trimmedString.length() / 4096.0f);
            int i2 = 0;
            if (j != 0 && (findTopic = accountInstance.getMessagesController().getTopicsController().findTopic(-j2, j)) != null && findTopic.topicStartMessage != null) {
                messageObject = new MessageObject(accountInstance.getCurrentAccount(), findTopic.topicStartMessage, false, false);
                messageObject.isTopicMainMessage = true;
                while (i2 < ceil) {
                    int i3 = i2 + 1;
                    SendMessageParams of = SendMessageParams.of(trimmedString.substring(i2 * LiteMode.FLAG_ANIMATED_EMOJI_CHAT_NOT_PREMIUM, Math.min(i3 * LiteMode.FLAG_ANIMATED_EMOJI_CHAT_NOT_PREMIUM, trimmedString.length())), j2, messageObject, messageObject, null, true, null, null, null, z, i, null, false);
                    if (i2 == 0) {
                        of.effect_id = j3;
                    }
                    accountInstance.getSendMessagesHelper().sendMessage(of);
                    i2 = i3;
                }
            }
            messageObject = null;
            while (i2 < ceil) {
            }
        }
    }

    public static void ensureMediaThumbExists(AccountInstance accountInstance, boolean z, TLObject tLObject, String str, Uri uri, long j) {
        TLRPC$PhotoSize scaleAndSaveImage;
        TLRPC$PhotoSize scaleAndSaveImage2;
        if (tLObject instanceof TLRPC$TL_photo) {
            TLRPC$TL_photo tLRPC$TL_photo = (TLRPC$TL_photo) tLObject;
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo.sizes, 90);
            boolean exists = ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoPathSize)) ? true : FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize, true).exists();
            TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo.sizes, AndroidUtilities.getPhotoSize());
            boolean exists2 = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize2, false).exists();
            if (exists && exists2) {
                return;
            }
            Bitmap loadBitmap = ImageLoader.loadBitmap(str, uri, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true);
            if (loadBitmap == null) {
                loadBitmap = ImageLoader.loadBitmap(str, uri, 800.0f, 800.0f, true);
            }
            Bitmap bitmap = loadBitmap;
            if (!exists2 && (scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize2, bitmap, Bitmap.CompressFormat.JPEG, true, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), 80, false, 101, 101, false)) != closestPhotoSizeWithSize2) {
                tLRPC$TL_photo.sizes.add(0, scaleAndSaveImage2);
            }
            if (!exists && (scaleAndSaveImage = ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize, bitmap, 90.0f, 90.0f, 55, true, false)) != closestPhotoSizeWithSize) {
                tLRPC$TL_photo.sizes.add(0, scaleAndSaveImage);
            }
            if (bitmap != null) {
                bitmap.recycle();
            }
        } else if (tLObject instanceof TLRPC$TL_document) {
            TLRPC$TL_document tLRPC$TL_document = (TLRPC$TL_document) tLObject;
            if ((MessageObject.isVideoDocument(tLRPC$TL_document) || MessageObject.isNewGifDocument(tLRPC$TL_document)) && MessageObject.isDocumentHasThumb(tLRPC$TL_document)) {
                TLRPC$PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_document.thumbs, 320);
                if ((closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoStrippedSize) || (closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoPathSize) || FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize3, true).exists()) {
                    return;
                }
                Bitmap createVideoThumbnailAtTime = createVideoThumbnailAtTime(str, j);
                Bitmap createVideoThumbnail = createVideoThumbnailAtTime == null ? createVideoThumbnail(str, 1) : createVideoThumbnailAtTime;
                int i = z ? 90 : 320;
                float f = i;
                tLRPC$TL_document.thumbs.set(0, ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize3, createVideoThumbnail, f, f, i > 90 ? 80 : 55, false, true));
            }
        }
    }

    public static String getKeyForPhotoSize(AccountInstance accountInstance, TLRPC$PhotoSize tLRPC$PhotoSize, Bitmap[] bitmapArr, boolean z, boolean z2) {
        if (tLRPC$PhotoSize == null || tLRPC$PhotoSize.location == null) {
            return null;
        }
        Point messageSize = ChatMessageCell.getMessageSize(tLRPC$PhotoSize.w, tLRPC$PhotoSize.h);
        if (bitmapArr != null) {
            try {
                BitmapFactory.Options options = new BitmapFactory.Options();
                options.inJustDecodeBounds = true;
                File pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$PhotoSize, z2);
                FileInputStream fileInputStream = new FileInputStream(pathToAttach);
                BitmapFactory.decodeStream(fileInputStream, null, options);
                fileInputStream.close();
                float max = Math.max(options.outWidth / messageSize.x, options.outHeight / messageSize.y);
                if (max < 1.0f) {
                    max = 1.0f;
                }
                options.inJustDecodeBounds = false;
                options.inSampleSize = (int) max;
                options.inPreferredConfig = Bitmap.Config.RGB_565;
                if (Build.VERSION.SDK_INT >= 21) {
                    FileInputStream fileInputStream2 = new FileInputStream(pathToAttach);
                    bitmapArr[0] = BitmapFactory.decodeStream(fileInputStream2, null, options);
                    fileInputStream2.close();
                }
            } catch (Throwable unused) {
            }
        }
        return String.format(Locale.US, z ? "%d_%d@%d_%d_b" : "%d_%d@%d_%d", Long.valueOf(tLRPC$PhotoSize.location.volume_id), Integer.valueOf(tLRPC$PhotoSize.location.local_id), Integer.valueOf((int) (messageSize.x / AndroidUtilities.density)), Integer.valueOf((int) (messageSize.y / AndroidUtilities.density)));
    }

    public static boolean shouldSendWebPAsSticker(String str, Uri uri) {
        BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = true;
        if (str != null) {
            try {
                BitmapFactory.decodeFile(str, options);
            } catch (Exception e) {
                FileLog.e(e);
            }
        } else {
            try {
                InputStream openInputStream = ApplicationLoader.applicationContext.getContentResolver().openInputStream(uri);
                BitmapFactory.decodeStream(openInputStream, null, options);
                if (openInputStream != null) {
                    openInputStream.close();
                }
            } catch (Exception unused) {
            }
        }
        return options.outWidth < 800 && options.outHeight < 800;
    }

    public static void prepareSendingMedia(final AccountInstance accountInstance, final ArrayList<SendingMediaInfo> arrayList, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final boolean z, boolean z2, final MessageObject messageObject3, final boolean z3, final int i, int i2, final boolean z4, final InputContentInfoCompat inputContentInfoCompat, final String str, final int i3, final long j2, final boolean z5) {
        final boolean z6;
        if (arrayList.isEmpty()) {
            return;
        }
        int size = arrayList.size();
        int i4 = 0;
        while (true) {
            if (i4 >= size) {
                z6 = z2;
                break;
            } else if (arrayList.get(i4).ttl > 0) {
                z6 = false;
                break;
            } else {
                i4++;
            }
        }
        mediaSendQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda16
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingMedia$94(arrayList, j, z, z6, accountInstance, messageObject3, messageObject, messageObject2, z3, i, tL_stories$StoryItem, replyQuote, str, i3, j2, z5, inputContentInfoCompat, z4);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Code restructure failed: missing block: B:286:0x06ed, code lost:
        if (r6 != null) goto L270;
     */
    /* JADX WARN: Code restructure failed: missing block: B:57:0x00d7, code lost:
        if (shouldSendWebPAsSticker(null, r7.uri) != false) goto L83;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:102:0x01ba  */
    /* JADX WARN: Removed duplicated region for block: B:103:0x01c2  */
    /* JADX WARN: Removed duplicated region for block: B:124:0x0262  */
    /* JADX WARN: Removed duplicated region for block: B:163:0x036f A[Catch: Exception -> 0x0352, TRY_LEAVE, TryCatch #9 {Exception -> 0x0352, blocks: (B:149:0x034a, B:156:0x0357, B:160:0x0366, B:163:0x036f), top: B:706:0x034a }] */
    /* JADX WARN: Removed duplicated region for block: B:182:0x03ab  */
    /* JADX WARN: Removed duplicated region for block: B:183:0x03d1  */
    /* JADX WARN: Removed duplicated region for block: B:188:0x03e3  */
    /* JADX WARN: Removed duplicated region for block: B:189:0x03e5  */
    /* JADX WARN: Removed duplicated region for block: B:192:0x03ef  */
    /* JADX WARN: Removed duplicated region for block: B:209:0x04cb  */
    /* JADX WARN: Removed duplicated region for block: B:235:0x05ff  */
    /* JADX WARN: Removed duplicated region for block: B:334:0x078d  */
    /* JADX WARN: Removed duplicated region for block: B:339:0x07e4  */
    /* JADX WARN: Removed duplicated region for block: B:429:0x09b1  */
    /* JADX WARN: Removed duplicated region for block: B:437:0x09f0  */
    /* JADX WARN: Removed duplicated region for block: B:446:0x0aae  */
    /* JADX WARN: Removed duplicated region for block: B:447:0x0ab0  */
    /* JADX WARN: Removed duplicated region for block: B:506:0x0c4f  */
    /* JADX WARN: Removed duplicated region for block: B:558:0x0d4d  */
    /* JADX WARN: Removed duplicated region for block: B:559:0x0d53  */
    /* JADX WARN: Removed duplicated region for block: B:588:0x0dc0  */
    /* JADX WARN: Removed duplicated region for block: B:591:0x0dd3  */
    /* JADX WARN: Removed duplicated region for block: B:593:0x0dda  */
    /* JADX WARN: Removed duplicated region for block: B:597:0x0de7  */
    /* JADX WARN: Removed duplicated region for block: B:603:0x0e01  */
    /* JADX WARN: Removed duplicated region for block: B:616:0x0e4d  */
    /* JADX WARN: Removed duplicated region for block: B:619:0x0e54  */
    /* JADX WARN: Removed duplicated region for block: B:621:0x0e59 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:632:0x0ea2 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:649:0x0f48  */
    /* JADX WARN: Removed duplicated region for block: B:650:0x0f68  */
    /* JADX WARN: Removed duplicated region for block: B:676:0x1024  */
    /* JADX WARN: Removed duplicated region for block: B:68:0x00f7  */
    /* JADX WARN: Removed duplicated region for block: B:692:0x06e8 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:694:0x0361 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:69:0x011b  */
    /* JADX WARN: Removed duplicated region for block: B:702:0x037c A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:71:0x011f  */
    /* JADX WARN: Removed duplicated region for block: B:731:0x0df5 A[SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:88:0x0156  */
    /* JADX WARN: Removed duplicated region for block: B:89:0x0158  */
    /* JADX WARN: Removed duplicated region for block: B:92:0x015f  */
    /* JADX WARN: Removed duplicated region for block: B:98:0x01a5  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingMedia$94(ArrayList arrayList, final long j, boolean z, boolean z2, final AccountInstance accountInstance, final MessageObject messageObject, final MessageObject messageObject2, final MessageObject messageObject3, final boolean z3, final int i, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final String str, final int i2, final long j2, final boolean z4, InputContentInfoCompat inputContentInfoCompat, final boolean z5) {
        String str2;
        String str3;
        String str4;
        int i3;
        ArrayList arrayList2;
        HashMap hashMap;
        int i4;
        int i5;
        int i6;
        ArrayList arrayList3;
        boolean z6;
        int i7;
        long j3;
        MediaController.SearchImage searchImage;
        ArrayList arrayList4;
        ArrayList arrayList5;
        int i8;
        boolean z7;
        String str5;
        String str6;
        String str7;
        int i9;
        HashMap hashMap2;
        long j4;
        String str8;
        String str9;
        ArrayList arrayList6;
        String str10;
        String str11;
        String str12;
        HashMap hashMap3;
        int i10;
        int i11;
        long j5;
        VideoEditedInfo videoEditedInfo;
        String str13;
        int i12;
        long j6;
        String str14;
        String str15;
        int i13;
        ArrayList arrayList7;
        ArrayList arrayList8;
        ArrayList arrayList9;
        String str16;
        long j7;
        boolean z8;
        File file;
        ArrayList arrayList10;
        String str17;
        Object obj;
        String str18;
        String str19;
        long j8;
        TLRPC$TL_document tLRPC$TL_document;
        String str20;
        SendingMediaInfo sendingMediaInfo;
        TLRPC$TL_document tLRPC$TL_document2;
        Bitmap bitmap;
        final String str21;
        String str22;
        Bitmap bitmap2;
        int i14;
        long j9;
        int i15;
        String str23;
        ArrayList<TLRPC$InputDocument> arrayList11;
        int size;
        int i16;
        int i17;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        String str24;
        Bitmap bitmap3;
        TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo;
        String str25;
        int i18;
        int i19;
        TLRPC$FileLocation tLRPC$FileLocation;
        MediaController.SearchImage searchImage2;
        String str26;
        String str27;
        String str28;
        String str29;
        String str30;
        String str31;
        String str32;
        boolean z9;
        Object obj2;
        String str33;
        HashMap hashMap4;
        String str34;
        String str35;
        Object obj3;
        String str36;
        ArrayList arrayList12;
        String str37;
        TLRPC$TL_photo tLRPC$TL_photo;
        String str38;
        final TLRPC$TL_photo tLRPC$TL_photo2;
        String str39;
        String str40;
        TLRPC$TL_photo tLRPC$TL_photo3;
        String str41;
        TLRPC$TL_photo tLRPC$TL_photo4;
        String str42;
        String str43;
        String str44;
        String str45;
        int i20;
        int i21;
        long j10;
        ArrayList arrayList13;
        ArrayList arrayList14;
        ArrayList arrayList15;
        String str46;
        AccountInstance accountInstance2;
        String str47;
        int i22;
        int i23;
        ArrayList arrayList16;
        ArrayList arrayList17;
        ArrayList arrayList18;
        ArrayList arrayList19;
        Uri uri;
        InputStream inputStream;
        FileOutputStream fileOutputStream;
        Uri uri2;
        String str48;
        Uri uri3;
        final TLRPC$TL_photo tLRPC$TL_photo5;
        final boolean z10;
        int i24;
        long j11;
        int i25;
        boolean z11;
        File file2;
        TLRPC$TL_document tLRPC$TL_document3;
        Object obj4;
        long j12;
        TLRPC$TL_document tLRPC$TL_document4;
        String str49;
        File file3;
        File file4;
        int i26;
        Bitmap createVideoThumbnail;
        String str50;
        String str51;
        String str52;
        int i27;
        int i28;
        String str53;
        String str54;
        String str55;
        boolean z12;
        SendingMediaInfo sendingMediaInfo2;
        String str56;
        boolean z13;
        SendingMediaInfo sendingMediaInfo3;
        1 r9;
        String str57;
        TLRPC$TL_photo tLRPC$TL_photo6;
        String str58;
        TLRPC$TL_photo tLRPC$TL_photo7;
        Object[] sentFile;
        Uri uri4;
        Uri uri5;
        ArrayList arrayList20 = arrayList;
        String str59 = "parentObject";
        String str60 = "masks";
        String str61 = "-2147483648_";
        String str62 = "x";
        long currentTimeMillis = System.currentTimeMillis();
        int size2 = arrayList.size();
        final boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        String str63 = ".webp";
        String str64 = ".gif";
        String str65 = "_";
        if (z || !z2) {
            str2 = "_";
            str3 = ".gif";
            str4 = ".webp";
            i3 = size2;
            arrayList2 = null;
            hashMap = null;
        } else {
            HashMap hashMap5 = new HashMap();
            int i29 = 0;
            while (i29 < size2) {
                int i30 = size2;
                SendingMediaInfo sendingMediaInfo4 = (SendingMediaInfo) arrayList20.get(i29);
                if (sendingMediaInfo4.searchImage == null && !sendingMediaInfo4.isVideo && sendingMediaInfo4.videoEditedInfo == null) {
                    String str66 = sendingMediaInfo4.path;
                    if (str66 != null || (uri5 = sendingMediaInfo4.uri) == null) {
                        str53 = str66;
                    } else {
                        str66 = AndroidUtilities.getPath(uri5);
                        str53 = sendingMediaInfo4.uri.toString();
                    }
                    if (str66 == null || sendingMediaInfo4.ttl > 0) {
                        str54 = str64;
                        str55 = str63;
                        z12 = false;
                    } else {
                        if (str66.endsWith(str64)) {
                            str54 = str64;
                            z12 = false;
                        } else {
                            z12 = str66.endsWith(str63);
                            str54 = str64;
                            if (!z12) {
                                str55 = str63;
                            }
                        }
                        str55 = str63;
                        if (arrayList.size() > 1 || ((z12 && !shouldSendWebPAsSticker(str66, null)) || !TextUtils.isEmpty(sendingMediaInfo4.caption))) {
                            sendingMediaInfo4.forceImage = true;
                            if (str66 != null) {
                                File file5 = new File(str66);
                                StringBuilder sb = new StringBuilder();
                                sb.append(str53);
                                sendingMediaInfo2 = sendingMediaInfo4;
                                sb.append(file5.length());
                                sb.append(str65);
                                sb.append(file5.lastModified());
                                str56 = sb.toString();
                            } else {
                                sendingMediaInfo2 = sendingMediaInfo4;
                                str56 = null;
                            }
                            if (isEncryptedDialog) {
                                str50 = str65;
                                z13 = isEncryptedDialog;
                                sendingMediaInfo3 = sendingMediaInfo2;
                            } else {
                                SendingMediaInfo sendingMediaInfo5 = sendingMediaInfo2;
                                if (sendingMediaInfo5.ttl == 0) {
                                    Object[] sentFile2 = accountInstance.getMessagesStorage().getSentFile(str56, !isEncryptedDialog ? 0 : 3);
                                    if (sentFile2 != null) {
                                        Object obj5 = sentFile2[0];
                                        if (obj5 instanceof TLRPC$TL_photo) {
                                            tLRPC$TL_photo7 = (TLRPC$TL_photo) obj5;
                                            str58 = (String) sentFile2[1];
                                            if (tLRPC$TL_photo7 == null && sendingMediaInfo5.uri != null) {
                                                sentFile = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(sendingMediaInfo5.uri), isEncryptedDialog ? 0 : 3);
                                                if (sentFile != null) {
                                                    Object obj6 = sentFile[0];
                                                    if (obj6 instanceof TLRPC$TL_photo) {
                                                        tLRPC$TL_photo7 = (TLRPC$TL_photo) obj6;
                                                        str58 = (String) sentFile[1];
                                                    }
                                                }
                                            }
                                            TLRPC$TL_photo tLRPC$TL_photo8 = tLRPC$TL_photo7;
                                            r9 = null;
                                            str50 = str65;
                                            str51 = str54;
                                            str52 = str55;
                                            sendingMediaInfo3 = sendingMediaInfo5;
                                            z13 = isEncryptedDialog;
                                            i27 = i30;
                                            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo8, sendingMediaInfo5.path, sendingMediaInfo5.uri, 0L);
                                            str57 = str58;
                                            tLRPC$TL_photo6 = tLRPC$TL_photo8;
                                            final MediaSendPrepareWorker mediaSendPrepareWorker = new MediaSendPrepareWorker();
                                            final SendingMediaInfo sendingMediaInfo6 = sendingMediaInfo3;
                                            hashMap5.put(sendingMediaInfo6, mediaSendPrepareWorker);
                                            if (tLRPC$TL_photo6 != null) {
                                                mediaSendPrepareWorker.parentObject = str57;
                                                mediaSendPrepareWorker.photo = tLRPC$TL_photo6;
                                                isEncryptedDialog = z13;
                                                i28 = 1;
                                                i29 += i28;
                                                str65 = str50;
                                                str64 = str51;
                                                str63 = str52;
                                                size2 = i27;
                                            } else {
                                                i28 = 1;
                                                mediaSendPrepareWorker.sync = new CountDownLatch(1);
                                                isEncryptedDialog = z13;
                                                mediaSendThreadPool.execute(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda20
                                                    @Override // java.lang.Runnable
                                                    public final void run() {
                                                        SendMessagesHelper.lambda$prepareSendingMedia$89(SendMessagesHelper.MediaSendPrepareWorker.this, accountInstance, sendingMediaInfo6, isEncryptedDialog);
                                                    }
                                                });
                                                i29 += i28;
                                                str65 = str50;
                                                str64 = str51;
                                                str63 = str52;
                                                size2 = i27;
                                            }
                                        }
                                    }
                                    str58 = null;
                                    tLRPC$TL_photo7 = null;
                                    if (tLRPC$TL_photo7 == null) {
                                        sentFile = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(sendingMediaInfo5.uri), isEncryptedDialog ? 0 : 3);
                                        if (sentFile != null) {
                                        }
                                    }
                                    TLRPC$TL_photo tLRPC$TL_photo82 = tLRPC$TL_photo7;
                                    r9 = null;
                                    str50 = str65;
                                    str51 = str54;
                                    str52 = str55;
                                    sendingMediaInfo3 = sendingMediaInfo5;
                                    z13 = isEncryptedDialog;
                                    i27 = i30;
                                    ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo82, sendingMediaInfo5.path, sendingMediaInfo5.uri, 0L);
                                    str57 = str58;
                                    tLRPC$TL_photo6 = tLRPC$TL_photo82;
                                    final MediaSendPrepareWorker mediaSendPrepareWorker2 = new MediaSendPrepareWorker();
                                    final SendingMediaInfo sendingMediaInfo62 = sendingMediaInfo3;
                                    hashMap5.put(sendingMediaInfo62, mediaSendPrepareWorker2);
                                    if (tLRPC$TL_photo6 != null) {
                                    }
                                } else {
                                    str50 = str65;
                                    sendingMediaInfo3 = sendingMediaInfo5;
                                    z13 = isEncryptedDialog;
                                }
                            }
                            i27 = i30;
                            str51 = str54;
                            str52 = str55;
                            r9 = null;
                            str57 = null;
                            tLRPC$TL_photo6 = null;
                            final MediaSendPrepareWorker mediaSendPrepareWorker22 = new MediaSendPrepareWorker();
                            final SendingMediaInfo sendingMediaInfo622 = sendingMediaInfo3;
                            hashMap5.put(sendingMediaInfo622, mediaSendPrepareWorker22);
                            if (tLRPC$TL_photo6 != null) {
                            }
                        }
                        str50 = str65;
                        i27 = i30;
                        str51 = str54;
                        str52 = str55;
                    }
                    if (!ImageLoader.shouldSendImageAsDocument(sendingMediaInfo4.path, sendingMediaInfo4.uri)) {
                        if (str66 == null && (uri4 = sendingMediaInfo4.uri) != null && (MediaController.isGif(uri4) || (z12 = MediaController.isWebp(sendingMediaInfo4.uri)))) {
                            if (arrayList.size() <= 1) {
                                Object obj7 = z12 ? null : null;
                                if (TextUtils.isEmpty(sendingMediaInfo4.caption)) {
                                    str50 = str65;
                                    i27 = i30;
                                    str51 = str54;
                                    str52 = str55;
                                    i28 = 1;
                                    i29 += i28;
                                    str65 = str50;
                                    str64 = str51;
                                    str63 = str52;
                                    size2 = i27;
                                }
                            }
                            sendingMediaInfo4.forceImage = true;
                            if (str66 != null) {
                            }
                            if (isEncryptedDialog) {
                            }
                            i27 = i30;
                            str51 = str54;
                            str52 = str55;
                            r9 = null;
                            str57 = null;
                            tLRPC$TL_photo6 = null;
                            final MediaSendPrepareWorker mediaSendPrepareWorker222 = new MediaSendPrepareWorker();
                            final SendingMediaInfo sendingMediaInfo6222 = sendingMediaInfo3;
                            hashMap5.put(sendingMediaInfo6222, mediaSendPrepareWorker222);
                            if (tLRPC$TL_photo6 != null) {
                            }
                        }
                        if (str66 != null) {
                        }
                        if (isEncryptedDialog) {
                        }
                        i27 = i30;
                        str51 = str54;
                        str52 = str55;
                        r9 = null;
                        str57 = null;
                        tLRPC$TL_photo6 = null;
                        final MediaSendPrepareWorker mediaSendPrepareWorker2222 = new MediaSendPrepareWorker();
                        final SendingMediaInfo sendingMediaInfo62222 = sendingMediaInfo3;
                        hashMap5.put(sendingMediaInfo62222, mediaSendPrepareWorker2222);
                        if (tLRPC$TL_photo6 != null) {
                        }
                    }
                    str50 = str65;
                    i27 = i30;
                    str51 = str54;
                    str52 = str55;
                } else {
                    str50 = str65;
                    str51 = str64;
                    str52 = str63;
                    i27 = i30;
                }
                i28 = 1;
                i29 += i28;
                str65 = str50;
                str64 = str51;
                str63 = str52;
                size2 = i27;
            }
            str2 = str65;
            str3 = str64;
            str4 = str63;
            i3 = size2;
            arrayList2 = null;
            hashMap = hashMap5;
        }
        Object obj8 = arrayList2;
        Object obj9 = obj8;
        Object obj10 = obj9;
        Object obj11 = obj10;
        Object obj12 = obj11;
        Object obj13 = obj12;
        int i31 = i3;
        int i32 = 0;
        int i33 = 0;
        long j13 = 0;
        long j14 = 0;
        Object obj14 = obj10;
        while (i33 < i31) {
            final SendingMediaInfo sendingMediaInfo7 = (SendingMediaInfo) arrayList20.get(i33);
            boolean z14 = i32 == 0;
            if (z2 && i31 > 1) {
                if (i32 % 10 == 0) {
                    j14 = Utilities.random.nextLong();
                    j3 = j14;
                    i7 = 0;
                    searchImage = sendingMediaInfo7.searchImage;
                    int i34 = i31;
                    String str67 = str61;
                    String str68 = str60;
                    String str69 = str59;
                    HashMap hashMap6 = hashMap;
                    if (searchImage == null) {
                        ArrayList arrayList21 = obj8;
                        if (sendingMediaInfo7.videoEditedInfo == null) {
                            ArrayList arrayList22 = obj9;
                            if (searchImage.type == 1) {
                                final HashMap hashMap7 = new HashMap();
                                TLRPC$Document tLRPC$Document = sendingMediaInfo7.searchImage.document;
                                if (tLRPC$Document instanceof TLRPC$TL_document) {
                                    tLRPC$TL_document3 = (TLRPC$TL_document) tLRPC$Document;
                                    file2 = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document3, true);
                                } else {
                                    file2 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo7.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo7.searchImage.imageUrl, "jpg"));
                                    tLRPC$TL_document3 = null;
                                }
                                if (tLRPC$TL_document3 == null) {
                                    TLRPC$TL_document tLRPC$TL_document5 = new TLRPC$TL_document();
                                    tLRPC$TL_document5.id = 0L;
                                    tLRPC$TL_document5.file_reference = new byte[0];
                                    tLRPC$TL_document5.date = accountInstance.getConnectionsManager().getCurrentTime();
                                    TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                                    tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                                    tLRPC$TL_document5.attributes.add(tLRPC$TL_documentAttributeFilename);
                                    tLRPC$TL_document5.size = sendingMediaInfo7.searchImage.size;
                                    tLRPC$TL_document5.dc_id = 0;
                                    if (!z && file2.toString().endsWith("mp4")) {
                                        tLRPC$TL_document5.mime_type = "video/mp4";
                                        tLRPC$TL_document5.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                    } else {
                                        tLRPC$TL_document5.mime_type = "image/gif";
                                    }
                                    if (file2.exists()) {
                                        file3 = file2;
                                        file4 = file3;
                                    } else {
                                        file3 = null;
                                        file4 = null;
                                    }
                                    if (file3 == null) {
                                        file3 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo7.searchImage.thumbUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo7.searchImage.thumbUrl, "jpg"));
                                        if (!file3.exists()) {
                                            file3 = null;
                                        }
                                    }
                                    if (file3 != null) {
                                        if (!isEncryptedDialog) {
                                            try {
                                                if (sendingMediaInfo7.ttl == 0) {
                                                    i26 = 320;
                                                    if (!file3.getAbsolutePath().endsWith("mp4")) {
                                                        try {
                                                            createVideoThumbnail = createVideoThumbnail(file3.getAbsolutePath(), 1);
                                                            obj4 = null;
                                                        } catch (Exception e) {
                                                            e = e;
                                                            obj4 = null;
                                                            FileLog.e(e);
                                                            if (!tLRPC$TL_document5.thumbs.isEmpty()) {
                                                            }
                                                            tLRPC$TL_document4 = tLRPC$TL_document5;
                                                            file2 = file4;
                                                            j12 = 0;
                                                            if (file2 != null) {
                                                            }
                                                            str49 = sendingMediaInfo7.searchImage.imageUrl;
                                                            if (str49 != null) {
                                                            }
                                                            int i35 = i33;
                                                            final TLRPC$TL_document tLRPC$TL_document6 = tLRPC$TL_document4;
                                                            final String str70 = r0;
                                                            z7 = isEncryptedDialog;
                                                            str7 = str69;
                                                            final boolean z15 = z14;
                                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda21
                                                                @Override // java.lang.Runnable
                                                                public final void run() {
                                                                    SendMessagesHelper.lambda$prepareSendingMedia$90(MessageObject.this, accountInstance, tLRPC$TL_document6, str70, hashMap7, sendingMediaInfo7, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, z15, j2, z4);
                                                                }
                                                            });
                                                            i12 = i34;
                                                            i32 = i7;
                                                            j6 = j3;
                                                            obj8 = arrayList21;
                                                            obj9 = arrayList22;
                                                            i13 = i35;
                                                            str15 = str68;
                                                            str14 = str67;
                                                            str8 = str62;
                                                            str13 = str2;
                                                            hashMap3 = hashMap6;
                                                            i33 = i13 + 1;
                                                            arrayList20 = arrayList;
                                                            isEncryptedDialog = z7;
                                                            hashMap = hashMap3;
                                                            str62 = str8;
                                                            j13 = j6;
                                                            str61 = str14;
                                                            str2 = str13;
                                                            str60 = str15;
                                                            str59 = str7;
                                                            i31 = i12;
                                                            obj14 = obj14;
                                                        }
                                                    } else {
                                                        float f = i26;
                                                        obj4 = null;
                                                        createVideoThumbnail = ImageLoader.loadBitmap(file3.getAbsolutePath(), null, f, f, true);
                                                    }
                                                    if (createVideoThumbnail != null) {
                                                        try {
                                                            float f2 = i26;
                                                            TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(createVideoThumbnail, f2, f2, i26 > 90 ? 80 : 55, isEncryptedDialog);
                                                            if (scaleAndSaveImage != null) {
                                                                tLRPC$TL_document5.thumbs.add(scaleAndSaveImage);
                                                                tLRPC$TL_document5.flags |= 1;
                                                            }
                                                            createVideoThumbnail.recycle();
                                                        } catch (Exception e2) {
                                                            e = e2;
                                                            FileLog.e(e);
                                                            if (!tLRPC$TL_document5.thumbs.isEmpty()) {
                                                            }
                                                            tLRPC$TL_document4 = tLRPC$TL_document5;
                                                            file2 = file4;
                                                            j12 = 0;
                                                            if (file2 != null) {
                                                            }
                                                            str49 = sendingMediaInfo7.searchImage.imageUrl;
                                                            if (str49 != null) {
                                                            }
                                                            int i352 = i33;
                                                            final TLRPC$TL_document tLRPC$TL_document62 = tLRPC$TL_document4;
                                                            final String str702 = r0;
                                                            z7 = isEncryptedDialog;
                                                            str7 = str69;
                                                            final boolean z152 = z14;
                                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda21
                                                                @Override // java.lang.Runnable
                                                                public final void run() {
                                                                    SendMessagesHelper.lambda$prepareSendingMedia$90(MessageObject.this, accountInstance, tLRPC$TL_document62, str702, hashMap7, sendingMediaInfo7, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, z152, j2, z4);
                                                                }
                                                            });
                                                            i12 = i34;
                                                            i32 = i7;
                                                            j6 = j3;
                                                            obj8 = arrayList21;
                                                            obj9 = arrayList22;
                                                            i13 = i352;
                                                            str15 = str68;
                                                            str14 = str67;
                                                            str8 = str62;
                                                            str13 = str2;
                                                            hashMap3 = hashMap6;
                                                            i33 = i13 + 1;
                                                            arrayList20 = arrayList;
                                                            isEncryptedDialog = z7;
                                                            hashMap = hashMap3;
                                                            str62 = str8;
                                                            j13 = j6;
                                                            str61 = str14;
                                                            str2 = str13;
                                                            str60 = str15;
                                                            str59 = str7;
                                                            i31 = i12;
                                                            obj14 = obj14;
                                                        }
                                                    }
                                                }
                                            } catch (Exception e3) {
                                                e = e3;
                                                obj4 = null;
                                                FileLog.e(e);
                                                if (!tLRPC$TL_document5.thumbs.isEmpty()) {
                                                }
                                                tLRPC$TL_document4 = tLRPC$TL_document5;
                                                file2 = file4;
                                                j12 = 0;
                                                if (file2 != null) {
                                                }
                                                str49 = sendingMediaInfo7.searchImage.imageUrl;
                                                if (str49 != null) {
                                                }
                                                int i3522 = i33;
                                                final TLRPC$TL_document tLRPC$TL_document622 = tLRPC$TL_document4;
                                                final String str7022 = r0;
                                                z7 = isEncryptedDialog;
                                                str7 = str69;
                                                final boolean z1522 = z14;
                                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda21
                                                    @Override // java.lang.Runnable
                                                    public final void run() {
                                                        SendMessagesHelper.lambda$prepareSendingMedia$90(MessageObject.this, accountInstance, tLRPC$TL_document622, str7022, hashMap7, sendingMediaInfo7, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, z1522, j2, z4);
                                                    }
                                                });
                                                i12 = i34;
                                                i32 = i7;
                                                j6 = j3;
                                                obj8 = arrayList21;
                                                obj9 = arrayList22;
                                                i13 = i3522;
                                                str15 = str68;
                                                str14 = str67;
                                                str8 = str62;
                                                str13 = str2;
                                                hashMap3 = hashMap6;
                                                i33 = i13 + 1;
                                                arrayList20 = arrayList;
                                                isEncryptedDialog = z7;
                                                hashMap = hashMap3;
                                                str62 = str8;
                                                j13 = j6;
                                                str61 = str14;
                                                str2 = str13;
                                                str60 = str15;
                                                str59 = str7;
                                                i31 = i12;
                                                obj14 = obj14;
                                            }
                                        }
                                        i26 = 90;
                                        if (!file3.getAbsolutePath().endsWith("mp4")) {
                                        }
                                        if (createVideoThumbnail != null) {
                                        }
                                    } else {
                                        obj4 = null;
                                    }
                                    if (!tLRPC$TL_document5.thumbs.isEmpty()) {
                                        TLRPC$TL_photoSize tLRPC$TL_photoSize = new TLRPC$TL_photoSize();
                                        MediaController.SearchImage searchImage3 = sendingMediaInfo7.searchImage;
                                        tLRPC$TL_photoSize.w = searchImage3.width;
                                        tLRPC$TL_photoSize.h = searchImage3.height;
                                        tLRPC$TL_photoSize.size = 0;
                                        tLRPC$TL_photoSize.location = new TLRPC$TL_fileLocationUnavailable();
                                        tLRPC$TL_photoSize.type = str62;
                                        tLRPC$TL_document5.thumbs.add(tLRPC$TL_photoSize);
                                        tLRPC$TL_document5.flags |= 1;
                                    }
                                    tLRPC$TL_document4 = tLRPC$TL_document5;
                                    file2 = file4;
                                    j12 = 0;
                                } else {
                                    obj4 = null;
                                    j12 = 0;
                                    tLRPC$TL_document4 = tLRPC$TL_document3;
                                }
                                String file6 = file2 != null ? sendingMediaInfo7.searchImage.imageUrl : file2.toString();
                                str49 = sendingMediaInfo7.searchImage.imageUrl;
                                if (str49 != null) {
                                    hashMap7.put("originalPath", str49);
                                }
                                int i35222 = i33;
                                final TLRPC$TL_document tLRPC$TL_document6222 = tLRPC$TL_document4;
                                final String str70222 = file6;
                                z7 = isEncryptedDialog;
                                str7 = str69;
                                final boolean z15222 = z14;
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda21
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingMedia$90(MessageObject.this, accountInstance, tLRPC$TL_document6222, str70222, hashMap7, sendingMediaInfo7, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, z15222, j2, z4);
                                    }
                                });
                                i12 = i34;
                                i32 = i7;
                                j6 = j3;
                                obj8 = arrayList21;
                                obj9 = arrayList22;
                                i13 = i35222;
                                str15 = str68;
                                str14 = str67;
                                str8 = str62;
                                str13 = str2;
                                hashMap3 = hashMap6;
                                i33 = i13 + 1;
                                arrayList20 = arrayList;
                                isEncryptedDialog = z7;
                                hashMap = hashMap3;
                                str62 = str8;
                                j13 = j6;
                                str61 = str14;
                                str2 = str13;
                                str60 = str15;
                                str59 = str7;
                                i31 = i12;
                                obj14 = obj14;
                            } else {
                                int i36 = i33;
                                z7 = isEncryptedDialog;
                                String str71 = str62;
                                str7 = str69;
                                hashMap2 = hashMap6;
                                TLRPC$Photo tLRPC$Photo = searchImage.photo;
                                TLRPC$TL_photo tLRPC$TL_photo9 = tLRPC$Photo instanceof TLRPC$TL_photo ? (TLRPC$TL_photo) tLRPC$Photo : null;
                                if (tLRPC$TL_photo9 == null) {
                                    File file7 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo7.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo7.searchImage.imageUrl, "jpg"));
                                    if (!file7.exists() || file7.length() == 0) {
                                        uri3 = null;
                                    } else {
                                        uri3 = null;
                                        tLRPC$TL_photo9 = accountInstance.getSendMessagesHelper().generatePhotoSizes(file7.toString(), null);
                                        if (tLRPC$TL_photo9 != null) {
                                            z11 = false;
                                            if (tLRPC$TL_photo9 == null) {
                                                File file8 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo7.searchImage.thumbUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo7.searchImage.thumbUrl, "jpg"));
                                                if (file8.exists()) {
                                                    tLRPC$TL_photo9 = accountInstance.getSendMessagesHelper().generatePhotoSizes(file8.toString(), uri3);
                                                }
                                                if (tLRPC$TL_photo9 == null) {
                                                    tLRPC$TL_photo9 = new TLRPC$TL_photo();
                                                    tLRPC$TL_photo9.date = accountInstance.getConnectionsManager().getCurrentTime();
                                                    tLRPC$TL_photo9.file_reference = new byte[0];
                                                    TLRPC$TL_photoSize tLRPC$TL_photoSize2 = new TLRPC$TL_photoSize();
                                                    MediaController.SearchImage searchImage4 = sendingMediaInfo7.searchImage;
                                                    tLRPC$TL_photoSize2.w = searchImage4.width;
                                                    tLRPC$TL_photoSize2.h = searchImage4.height;
                                                    tLRPC$TL_photoSize2.size = 0;
                                                    tLRPC$TL_photoSize2.location = new TLRPC$TL_fileLocationUnavailable();
                                                    str48 = str71;
                                                    tLRPC$TL_photoSize2.type = str48;
                                                    tLRPC$TL_photo9.sizes.add(tLRPC$TL_photoSize2);
                                                    z10 = z11;
                                                    tLRPC$TL_photo5 = tLRPC$TL_photo9;
                                                }
                                            }
                                            str48 = str71;
                                            z10 = z11;
                                            tLRPC$TL_photo5 = tLRPC$TL_photo9;
                                        }
                                    }
                                    z11 = true;
                                    if (tLRPC$TL_photo9 == null) {
                                    }
                                    str48 = str71;
                                    z10 = z11;
                                    tLRPC$TL_photo5 = tLRPC$TL_photo9;
                                } else {
                                    str48 = str71;
                                    uri3 = null;
                                    tLRPC$TL_photo5 = tLRPC$TL_photo9;
                                    z10 = true;
                                }
                                final HashMap hashMap8 = new HashMap();
                                String str72 = sendingMediaInfo7.searchImage.imageUrl;
                                if (str72 != null) {
                                    hashMap8.put("originalPath", str72);
                                }
                                if (z2) {
                                    int i37 = i7 + 1;
                                    StringBuilder sb2 = new StringBuilder();
                                    sb2.append("");
                                    i24 = i34;
                                    j11 = j3;
                                    sb2.append(j11);
                                    hashMap8.put("groupId", sb2.toString());
                                    if (i37 != 10) {
                                        i25 = i36;
                                        if (i25 != i24 - 1) {
                                            i7 = i37;
                                        }
                                    } else {
                                        i25 = i36;
                                    }
                                    hashMap8.put("final", "1");
                                    i7 = i37;
                                    j14 = 0;
                                } else {
                                    i24 = i34;
                                    j11 = j3;
                                    i25 = i36;
                                }
                                i8 = i25;
                                j4 = j11;
                                i9 = i24;
                                str8 = str48;
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda22
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingMedia$91(MessageObject.this, accountInstance, tLRPC$TL_photo5, z10, sendingMediaInfo7, hashMap8, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, i2, str, j2, z4);
                                    }
                                });
                                i32 = i7;
                                str13 = str2;
                                obj8 = arrayList21;
                                obj9 = arrayList22;
                                str15 = str68;
                                str14 = str67;
                                hashMap3 = hashMap2;
                                i13 = i8;
                                i12 = i9;
                                j6 = j4;
                                i33 = i13 + 1;
                                arrayList20 = arrayList;
                                isEncryptedDialog = z7;
                                hashMap = hashMap3;
                                str62 = str8;
                                j13 = j6;
                                str61 = str14;
                                str2 = str13;
                                str60 = str15;
                                str59 = str7;
                                i31 = i12;
                                obj14 = obj14;
                            }
                        } else {
                            arrayList5 = obj9;
                            i8 = i33;
                            z7 = isEncryptedDialog;
                            str5 = str67;
                            str6 = str68;
                            str7 = str69;
                            i9 = i34;
                            hashMap2 = hashMap6;
                            j4 = j3;
                            arrayList4 = arrayList21;
                        }
                    } else {
                        arrayList4 = obj8;
                        arrayList5 = obj9;
                        i8 = i33;
                        z7 = isEncryptedDialog;
                        str5 = str67;
                        str6 = str68;
                        str7 = str69;
                        i9 = i34;
                        hashMap2 = hashMap6;
                        j4 = j3;
                    }
                    str8 = str62;
                    if (!sendingMediaInfo7.isVideo || sendingMediaInfo7.videoEditedInfo != null) {
                        str9 = str2;
                        arrayList6 = arrayList5;
                        str10 = str6;
                        str11 = str5;
                        str12 = str7;
                        hashMap3 = hashMap2;
                        i10 = i8;
                        i11 = i9;
                        j5 = j4;
                        if (z) {
                            videoEditedInfo = sendingMediaInfo7.videoEditedInfo;
                            if (videoEditedInfo == null) {
                                videoEditedInfo = createCompressionSettings(sendingMediaInfo7.path);
                            }
                        } else {
                            videoEditedInfo = null;
                        }
                        if (z && (videoEditedInfo != null || sendingMediaInfo7.path.endsWith("mp4"))) {
                            if (sendingMediaInfo7.path == null && (searchImage2 = sendingMediaInfo7.searchImage) != null) {
                                if (searchImage2.photo instanceof TLRPC$TL_photo) {
                                    sendingMediaInfo7.path = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(sendingMediaInfo7.searchImage.photo, true).getAbsolutePath();
                                } else {
                                    sendingMediaInfo7.path = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo7.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo7.searchImage.imageUrl, "jpg")).getAbsolutePath();
                                }
                            }
                            String str73 = sendingMediaInfo7.path;
                            File file9 = new File(str73);
                            String str74 = str73 + file9.length() + str9 + file9.lastModified();
                            if (videoEditedInfo != null) {
                                boolean z16 = videoEditedInfo.muted;
                                StringBuilder sb3 = new StringBuilder();
                                sb3.append(str74);
                                sb3.append(videoEditedInfo.estimatedDuration);
                                sb3.append(str9);
                                sb3.append(videoEditedInfo.startTime);
                                sb3.append(str9);
                                sb3.append(videoEditedInfo.endTime);
                                sb3.append(videoEditedInfo.muted ? "_m" : "");
                                String sb4 = sb3.toString();
                                if (videoEditedInfo.resultWidth != videoEditedInfo.originalWidth) {
                                    sb4 = sb4 + str9 + videoEditedInfo.resultWidth;
                                }
                                String str75 = sb4;
                                j7 = videoEditedInfo.startTime;
                                if (j7 >= 0) {
                                    str16 = str75;
                                    z8 = z16;
                                } else {
                                    str16 = str75;
                                    z8 = z16;
                                    j7 = 0;
                                }
                            } else {
                                str16 = str74;
                                j7 = 0;
                                z8 = false;
                            }
                            if (!z7 && sendingMediaInfo7.ttl == 0 && (videoEditedInfo == null || (videoEditedInfo.filterState == null && videoEditedInfo.paintPath == null && videoEditedInfo.mediaEntities == null && videoEditedInfo.cropState == null))) {
                                Object[] sentFile3 = accountInstance.getMessagesStorage().getSentFile(str16, !z7 ? 2 : 5);
                                if (sentFile3 != null) {
                                    Object obj15 = sentFile3[0];
                                    if (obj15 instanceof TLRPC$TL_document) {
                                        TLRPC$TL_document tLRPC$TL_document7 = (TLRPC$TL_document) obj15;
                                        file = file9;
                                        obj = "final";
                                        str13 = str9;
                                        str17 = str73;
                                        str19 = "mp4";
                                        j8 = j7;
                                        arrayList10 = arrayList6;
                                        str18 = "video/mp4";
                                        ensureMediaThumbExists(accountInstance, z7, tLRPC$TL_document7, sendingMediaInfo7.path, null, j8);
                                        tLRPC$TL_document = tLRPC$TL_document7;
                                        str20 = (String) sentFile3[1];
                                        if (tLRPC$TL_document == null) {
                                            String str76 = sendingMediaInfo7.thumbPath;
                                            Bitmap decodeFile = str76 != null ? BitmapFactory.decodeFile(str76) : null;
                                            if (decodeFile == null && (decodeFile = createVideoThumbnailAtTime(sendingMediaInfo7.path, j8)) == null) {
                                                decodeFile = createVideoThumbnail(sendingMediaInfo7.path, 1);
                                            }
                                            if (decodeFile != null) {
                                                int max = (z7 || sendingMediaInfo7.ttl != 0) ? 90 : Math.max(decodeFile.getWidth(), decodeFile.getHeight());
                                                float f3 = max;
                                                sendingMediaInfo = sendingMediaInfo7;
                                                tLRPC$PhotoSize = ImageLoader.scaleAndSaveImage(null, decodeFile, (videoEditedInfo == null || !videoEditedInfo.isSticker) ? Bitmap.CompressFormat.JPEG : Bitmap.CompressFormat.WEBP, false, f3, f3, max > 90 ? 80 : 55, z7, 0, 0, false);
                                                if (tLRPC$PhotoSize == null || tLRPC$PhotoSize.location == null) {
                                                    i17 = 0;
                                                    str24 = null;
                                                } else {
                                                    i17 = 0;
                                                    str24 = getKeyForPhotoSize(accountInstance, tLRPC$PhotoSize, null, true, false);
                                                }
                                            } else {
                                                sendingMediaInfo = sendingMediaInfo7;
                                                i17 = 0;
                                                tLRPC$PhotoSize = null;
                                                str24 = null;
                                            }
                                            TLRPC$TL_document tLRPC$TL_document8 = new TLRPC$TL_document();
                                            tLRPC$TL_document8.file_reference = new byte[i17];
                                            if (tLRPC$PhotoSize != null) {
                                                tLRPC$TL_document8.thumbs.add(tLRPC$PhotoSize);
                                                tLRPC$TL_document8.flags |= 1;
                                            }
                                            VideoEditedInfo videoEditedInfo2 = sendingMediaInfo.videoEditedInfo;
                                            if (videoEditedInfo2 != null && videoEditedInfo2.isSticker) {
                                                tLRPC$TL_document8.mime_type = "video/webm";
                                            } else {
                                                tLRPC$TL_document8.mime_type = str18;
                                            }
                                            accountInstance.getUserConfig().saveConfig(false);
                                            VideoEditedInfo videoEditedInfo3 = sendingMediaInfo.videoEditedInfo;
                                            if (videoEditedInfo3 != null && videoEditedInfo3.isSticker) {
                                                tLRPC$TL_document8.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                                TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                                tLRPC$TL_documentAttributeSticker.alt = "👍";
                                                tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                tLRPC$TL_document8.attributes.add(tLRPC$TL_documentAttributeSticker);
                                                if (tLRPC$PhotoSize != null && (tLRPC$FileLocation = tLRPC$PhotoSize.location) != null) {
                                                    bitmap3 = decodeFile;
                                                    str24 = String.format(Locale.US, "%d_%d@b1", Long.valueOf(tLRPC$FileLocation.volume_id), Integer.valueOf(tLRPC$PhotoSize.location.local_id));
                                                    if (!z7) {
                                                        tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo_layer159();
                                                    } else {
                                                        tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                                        tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                                    }
                                                    tLRPC$TL_document8.attributes.add(tLRPC$TL_documentAttributeVideo);
                                                    if (videoEditedInfo == null && (videoEditedInfo.needConvert() || !sendingMediaInfo.isVideo)) {
                                                        if (sendingMediaInfo.isVideo && videoEditedInfo.muted) {
                                                            fillVideoAttribute(sendingMediaInfo.path, tLRPC$TL_documentAttributeVideo, videoEditedInfo);
                                                            videoEditedInfo.originalWidth = tLRPC$TL_documentAttributeVideo.w;
                                                            videoEditedInfo.originalHeight = tLRPC$TL_documentAttributeVideo.h;
                                                        } else {
                                                            tLRPC$TL_documentAttributeVideo.duration = (int) (videoEditedInfo.estimatedDuration / 1000);
                                                        }
                                                        int i38 = videoEditedInfo.rotationValue;
                                                        MediaController.CropState cropState = videoEditedInfo.cropState;
                                                        if (cropState != null) {
                                                            i18 = cropState.transformWidth;
                                                            i19 = cropState.transformHeight;
                                                        } else {
                                                            i18 = videoEditedInfo.resultWidth;
                                                            i19 = videoEditedInfo.resultHeight;
                                                        }
                                                        str25 = str24;
                                                        if (i38 == 90 || i38 == 270) {
                                                            tLRPC$TL_documentAttributeVideo.w = i19;
                                                            tLRPC$TL_documentAttributeVideo.h = i18;
                                                        } else {
                                                            tLRPC$TL_documentAttributeVideo.w = i18;
                                                            tLRPC$TL_documentAttributeVideo.h = i19;
                                                        }
                                                        tLRPC$TL_document8.size = videoEditedInfo.estimatedSize;
                                                    } else {
                                                        str25 = str24;
                                                        if (file.exists()) {
                                                            tLRPC$TL_document8.size = (int) file.length();
                                                        }
                                                        fillVideoAttribute(sendingMediaInfo.path, tLRPC$TL_documentAttributeVideo, null);
                                                    }
                                                    bitmap = bitmap3;
                                                    str21 = str25;
                                                    tLRPC$TL_document2 = tLRPC$TL_document8;
                                                }
                                            }
                                            bitmap3 = decodeFile;
                                            if (!z7) {
                                            }
                                            tLRPC$TL_document8.attributes.add(tLRPC$TL_documentAttributeVideo);
                                            if (videoEditedInfo == null) {
                                            }
                                            str25 = str24;
                                            if (file.exists()) {
                                            }
                                            fillVideoAttribute(sendingMediaInfo.path, tLRPC$TL_documentAttributeVideo, null);
                                            bitmap = bitmap3;
                                            str21 = str25;
                                            tLRPC$TL_document2 = tLRPC$TL_document8;
                                        } else {
                                            sendingMediaInfo = sendingMediaInfo7;
                                            tLRPC$TL_document2 = tLRPC$TL_document;
                                            bitmap = null;
                                            str21 = null;
                                        }
                                        if (videoEditedInfo != null && videoEditedInfo.muted) {
                                            size = tLRPC$TL_document2.attributes.size();
                                            i16 = 0;
                                            while (true) {
                                                if (i16 >= size) {
                                                    if (tLRPC$TL_document2.attributes.get(i16) instanceof TLRPC$TL_documentAttributeAnimated) {
                                                        break;
                                                    }
                                                    i16++;
                                                } else {
                                                    tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                                    break;
                                                }
                                            }
                                        }
                                        if (videoEditedInfo != null || (!videoEditedInfo.needConvert() && sendingMediaInfo.isVideo)) {
                                            str22 = str11;
                                        } else {
                                            String str77 = videoEditedInfo.isSticker ? "webm" : str19;
                                            StringBuilder sb5 = new StringBuilder();
                                            str22 = str11;
                                            sb5.append(str22);
                                            sb5.append(SharedConfig.getLastLocalId());
                                            sb5.append(".");
                                            sb5.append(str77);
                                            File file10 = new File(FileLoader.getDirectory(4), sb5.toString());
                                            SharedConfig.saveConfig();
                                            str17 = file10.getAbsolutePath();
                                        }
                                        final HashMap hashMap9 = new HashMap();
                                        if (str16 != null) {
                                            hashMap9.put("originalPath", str16);
                                        }
                                        if (str20 != null) {
                                            hashMap9.put(str12, str20);
                                        }
                                        if (z8 && z2) {
                                            int i39 = i7 + 1;
                                            StringBuilder sb6 = new StringBuilder();
                                            sb6.append("");
                                            bitmap2 = bitmap;
                                            j9 = j5;
                                            sb6.append(j9);
                                            hashMap9.put("groupId", sb6.toString());
                                            i14 = i11;
                                            if (i39 != 10) {
                                                i15 = i10;
                                                str7 = str12;
                                                if (i15 != i14 - 1) {
                                                    i7 = i39;
                                                }
                                            } else {
                                                i15 = i10;
                                                str7 = str12;
                                            }
                                            hashMap9.put(obj, "1");
                                            i7 = i39;
                                            j14 = 0;
                                        } else {
                                            str7 = str12;
                                            bitmap2 = bitmap;
                                            i14 = i11;
                                            j9 = j5;
                                            i15 = i10;
                                        }
                                        if (!z7 || ((videoEditedInfo != null && videoEditedInfo.isSticker) || (arrayList11 = sendingMediaInfo.masks) == null || arrayList11.isEmpty())) {
                                            str23 = str10;
                                        } else {
                                            tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeHasStickers());
                                            SerializedData serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                            serializedData.writeInt32(sendingMediaInfo.masks.size());
                                            for (int i40 = 0; i40 < sendingMediaInfo.masks.size(); i40++) {
                                                sendingMediaInfo.masks.get(i40).serializeToStream(serializedData);
                                            }
                                            str23 = str10;
                                            hashMap9.put(str23, Utilities.bytesToHex(serializedData.toByteArray()));
                                            serializedData.cleanup();
                                        }
                                        j6 = j9;
                                        final Bitmap bitmap4 = bitmap2;
                                        str14 = str22;
                                        final SendingMediaInfo sendingMediaInfo8 = sendingMediaInfo;
                                        final VideoEditedInfo videoEditedInfo4 = videoEditedInfo;
                                        final String str78 = str20;
                                        final TLRPC$TL_document tLRPC$TL_document9 = tLRPC$TL_document2;
                                        i13 = i15;
                                        final String str79 = str17;
                                        i12 = i14;
                                        str15 = str23;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda24
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingMedia$92(bitmap4, str21, messageObject, accountInstance, videoEditedInfo4, tLRPC$TL_document9, str79, hashMap9, sendingMediaInfo8, str78, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                            }
                                        });
                                        i32 = i7;
                                        obj8 = arrayList4;
                                        obj9 = arrayList10;
                                    } else {
                                        str13 = str9;
                                        arrayList10 = arrayList6;
                                        str17 = str73;
                                        obj = "final";
                                        str18 = "video/mp4";
                                        str19 = "mp4";
                                        file = file9;
                                        j8 = j7;
                                        tLRPC$TL_document = null;
                                        str20 = null;
                                        if (tLRPC$TL_document == null) {
                                        }
                                        if (videoEditedInfo != null) {
                                            size = tLRPC$TL_document2.attributes.size();
                                            i16 = 0;
                                            while (true) {
                                                if (i16 >= size) {
                                                }
                                                i16++;
                                            }
                                        }
                                        if (videoEditedInfo != null) {
                                        }
                                        str22 = str11;
                                        final HashMap hashMap92 = new HashMap();
                                        if (str16 != null) {
                                        }
                                        if (str20 != null) {
                                        }
                                        if (z8) {
                                        }
                                        str7 = str12;
                                        bitmap2 = bitmap;
                                        i14 = i11;
                                        j9 = j5;
                                        i15 = i10;
                                        if (z7) {
                                        }
                                        str23 = str10;
                                        j6 = j9;
                                        final Bitmap bitmap42 = bitmap2;
                                        str14 = str22;
                                        final SendingMediaInfo sendingMediaInfo82 = sendingMediaInfo;
                                        final VideoEditedInfo videoEditedInfo42 = videoEditedInfo;
                                        final String str782 = str20;
                                        final TLRPC$TL_document tLRPC$TL_document92 = tLRPC$TL_document2;
                                        i13 = i15;
                                        final String str792 = str17;
                                        i12 = i14;
                                        str15 = str23;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda24
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingMedia$92(bitmap42, str21, messageObject, accountInstance, videoEditedInfo42, tLRPC$TL_document92, str792, hashMap92, sendingMediaInfo82, str782, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                            }
                                        });
                                        i32 = i7;
                                        obj8 = arrayList4;
                                        obj9 = arrayList10;
                                    }
                                }
                            }
                            file = file9;
                            str13 = str9;
                            arrayList10 = arrayList6;
                            str17 = str73;
                            obj = "final";
                            str18 = "video/mp4";
                            str19 = "mp4";
                            j8 = j7;
                            tLRPC$TL_document = null;
                            str20 = null;
                            if (tLRPC$TL_document == null) {
                            }
                            if (videoEditedInfo != null) {
                            }
                            if (videoEditedInfo != null) {
                            }
                            str22 = str11;
                            final HashMap hashMap922 = new HashMap();
                            if (str16 != null) {
                            }
                            if (str20 != null) {
                            }
                            if (z8) {
                            }
                            str7 = str12;
                            bitmap2 = bitmap;
                            i14 = i11;
                            j9 = j5;
                            i15 = i10;
                            if (z7) {
                            }
                            str23 = str10;
                            j6 = j9;
                            final Bitmap bitmap422 = bitmap2;
                            str14 = str22;
                            final SendingMediaInfo sendingMediaInfo822 = sendingMediaInfo;
                            final VideoEditedInfo videoEditedInfo422 = videoEditedInfo;
                            final String str7822 = str20;
                            final TLRPC$TL_document tLRPC$TL_document922 = tLRPC$TL_document2;
                            i13 = i15;
                            final String str7922 = str17;
                            i12 = i14;
                            str15 = str23;
                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda24
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.lambda$prepareSendingMedia$92(bitmap422, str21, messageObject, accountInstance, videoEditedInfo422, tLRPC$TL_document922, str7922, hashMap922, sendingMediaInfo822, str7822, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                }
                            });
                            i32 = i7;
                            obj8 = arrayList4;
                            obj9 = arrayList10;
                        } else {
                            str13 = str9;
                            i12 = i11;
                            j6 = j5;
                            str14 = str11;
                            str15 = str10;
                            i13 = i10;
                            str7 = str12;
                            if (arrayList6 != null) {
                                obj9 = new ArrayList();
                                obj8 = new ArrayList();
                                ArrayList arrayList23 = new ArrayList();
                                ArrayList arrayList24 = new ArrayList();
                                arrayList7 = new ArrayList();
                                arrayList8 = arrayList23;
                                arrayList9 = arrayList24;
                            } else {
                                obj9 = arrayList6;
                                arrayList7 = obj11;
                                arrayList8 = obj12;
                                arrayList9 = obj13;
                                obj8 = arrayList4;
                            }
                            obj9.add(sendingMediaInfo7.path);
                            obj8.add(sendingMediaInfo7.path);
                            arrayList7.add(sendingMediaInfo7.uri);
                            arrayList8.add(sendingMediaInfo7.caption);
                            arrayList9.add(sendingMediaInfo7.entities);
                            obj11 = arrayList7;
                            obj12 = arrayList8;
                            obj13 = arrayList9;
                            i32 = i7;
                        }
                        i33 = i13 + 1;
                        arrayList20 = arrayList;
                        isEncryptedDialog = z7;
                        hashMap = hashMap3;
                        str62 = str8;
                        j13 = j6;
                        str61 = str14;
                        str2 = str13;
                        str60 = str15;
                        str59 = str7;
                        i31 = i12;
                        obj14 = obj14;
                    } else {
                        String str80 = sendingMediaInfo7.path;
                        if (str80 != null || (uri2 = sendingMediaInfo7.uri) == null) {
                            str26 = str80;
                            str27 = str26;
                        } else {
                            str27 = (Build.VERSION.SDK_INT < 30 || !"content".equals(uri2.getScheme())) ? AndroidUtilities.getPath(sendingMediaInfo7.uri) : null;
                            str26 = sendingMediaInfo7.uri.toString();
                        }
                        if (inputContentInfoCompat == null || sendingMediaInfo7.uri == null || !inputContentInfoCompat.getDescription().hasMimeType("image/png")) {
                            str28 = str4;
                            str29 = str5;
                        } else {
                            try {
                                BitmapFactory.Options options = new BitmapFactory.Options();
                                inputStream = ApplicationLoader.applicationContext.getContentResolver().openInputStream(sendingMediaInfo7.uri);
                                try {
                                    Bitmap decodeStream = BitmapFactory.decodeStream(inputStream, null, options);
                                    StringBuilder sb7 = new StringBuilder();
                                    str29 = str5;
                                    try {
                                        sb7.append(str29);
                                        sb7.append(SharedConfig.getLastLocalId());
                                        str28 = str4;
                                        try {
                                            sb7.append(str28);
                                            File file11 = new File(FileLoader.getDirectory(4), sb7.toString());
                                            fileOutputStream = new FileOutputStream(file11);
                                            try {
                                                decodeStream.compress(Bitmap.CompressFormat.WEBP, 100, fileOutputStream);
                                                SharedConfig.saveConfig();
                                                sendingMediaInfo7.uri = Uri.fromFile(file11);
                                                if (inputStream != null) {
                                                    try {
                                                        inputStream.close();
                                                    } catch (Exception unused) {
                                                    }
                                                }
                                            } catch (Throwable th) {
                                                th = th;
                                                try {
                                                    FileLog.e(th);
                                                    if (inputStream != null) {
                                                        try {
                                                            inputStream.close();
                                                        } catch (Exception unused2) {
                                                        }
                                                    }
                                                } catch (Throwable th2) {
                                                    if (inputStream != null) {
                                                        try {
                                                            inputStream.close();
                                                        } catch (Exception unused3) {
                                                        }
                                                    }
                                                    if (fileOutputStream != null) {
                                                        try {
                                                            fileOutputStream.close();
                                                        } catch (Exception unused4) {
                                                        }
                                                    }
                                                    throw th2;
                                                }
                                            }
                                        } catch (Throwable th3) {
                                            th = th3;
                                            fileOutputStream = null;
                                            FileLog.e(th);
                                            if (inputStream != null) {
                                            }
                                        }
                                    } catch (Throwable th4) {
                                        th = th4;
                                        str28 = str4;
                                    }
                                } catch (Throwable th5) {
                                    th = th5;
                                    str28 = str4;
                                    str29 = str5;
                                }
                            } catch (Throwable th6) {
                                th = th6;
                                str28 = str4;
                                str29 = str5;
                                inputStream = null;
                            }
                            try {
                                fileOutputStream.close();
                            } catch (Exception unused5) {
                            }
                        }
                        if (z || ImageLoader.shouldSendImageAsDocument(sendingMediaInfo7.path, sendingMediaInfo7.uri)) {
                            str30 = str3;
                            if (str27 != null) {
                                str32 = FileLoader.getFileExtension(new File(str27));
                                str31 = str27;
                                obj14 = str32;
                                z9 = true;
                                if (z9) {
                                    ArrayList arrayList25 = arrayList5;
                                    if (arrayList25 == null) {
                                        obj9 = new ArrayList();
                                        arrayList19 = new ArrayList();
                                        ArrayList arrayList26 = new ArrayList();
                                        ArrayList arrayList27 = new ArrayList();
                                        arrayList16 = new ArrayList();
                                        arrayList17 = arrayList26;
                                        arrayList18 = arrayList27;
                                    } else {
                                        obj9 = arrayList25;
                                        arrayList16 = obj11;
                                        arrayList17 = obj12;
                                        arrayList18 = obj13;
                                        arrayList19 = arrayList4;
                                    }
                                    obj9.add(str31);
                                    arrayList19.add(str26);
                                    arrayList16.add(sendingMediaInfo7.uri);
                                    arrayList17.add(sendingMediaInfo7.caption);
                                    arrayList18.add(sendingMediaInfo7.entities);
                                    obj8 = arrayList19;
                                    obj11 = arrayList16;
                                    obj12 = arrayList17;
                                    obj13 = arrayList18;
                                    str4 = str28;
                                    str14 = str29;
                                    str3 = str30;
                                    i32 = i7;
                                    str13 = str2;
                                    str15 = str6;
                                    hashMap3 = hashMap2;
                                    i13 = i8;
                                    i12 = i9;
                                    j6 = j4;
                                } else {
                                    ArrayList arrayList28 = arrayList5;
                                    if (str31 != null) {
                                        File file12 = new File(str31);
                                        StringBuilder sb8 = new StringBuilder();
                                        sb8.append(str26);
                                        sb8.append(file12.length());
                                        str33 = str2;
                                        sb8.append(str33);
                                        obj2 = "1";
                                        sb8.append(file12.lastModified());
                                        str34 = sb8.toString();
                                        hashMap4 = hashMap2;
                                    } else {
                                        obj2 = "1";
                                        str33 = str2;
                                        hashMap4 = hashMap2;
                                        str34 = null;
                                    }
                                    if (hashMap4 != null) {
                                        MediaSendPrepareWorker mediaSendPrepareWorker3 = (MediaSendPrepareWorker) hashMap4.get(sendingMediaInfo7);
                                        TLRPC$TL_photo tLRPC$TL_photo10 = mediaSendPrepareWorker3.photo;
                                        HashMap hashMap10 = hashMap4;
                                        String str81 = mediaSendPrepareWorker3.parentObject;
                                        if (tLRPC$TL_photo10 == null) {
                                            try {
                                                mediaSendPrepareWorker3.sync.await();
                                            } catch (Exception e4) {
                                                FileLog.e(e4);
                                            }
                                            tLRPC$TL_photo10 = mediaSendPrepareWorker3.photo;
                                            str35 = str34;
                                            obj3 = obj2;
                                            str36 = str33;
                                            arrayList12 = arrayList28;
                                            str4 = str28;
                                            hashMap3 = hashMap10;
                                            str39 = mediaSendPrepareWorker3.parentObject;
                                        } else {
                                            str35 = str34;
                                            obj3 = obj2;
                                            str36 = str33;
                                            arrayList12 = arrayList28;
                                            str4 = str28;
                                            hashMap3 = hashMap10;
                                            str39 = str81;
                                        }
                                        str37 = str31;
                                        tLRPC$TL_photo2 = tLRPC$TL_photo10;
                                    } else {
                                        HashMap hashMap11 = hashMap4;
                                        if (z7 || sendingMediaInfo7.ttl != 0) {
                                            str35 = str34;
                                            obj3 = obj2;
                                            str36 = str33;
                                            arrayList12 = arrayList28;
                                            str4 = str28;
                                            hashMap3 = hashMap11;
                                            str37 = str31;
                                            tLRPC$TL_photo = null;
                                            str38 = null;
                                        } else {
                                            Object[] sentFile4 = accountInstance.getMessagesStorage().getSentFile(str34, !z7 ? 0 : 3);
                                            if (sentFile4 != null) {
                                                Object obj16 = sentFile4[0];
                                                if (obj16 instanceof TLRPC$TL_photo) {
                                                    tLRPC$TL_photo3 = (TLRPC$TL_photo) obj16;
                                                    str40 = (String) sentFile4[1];
                                                    if (tLRPC$TL_photo3 == null || sendingMediaInfo7.uri == null) {
                                                        str41 = str40;
                                                        tLRPC$TL_photo4 = tLRPC$TL_photo3;
                                                    } else {
                                                        str41 = str40;
                                                        tLRPC$TL_photo4 = tLRPC$TL_photo3;
                                                        Object[] sentFile5 = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(sendingMediaInfo7.uri), !z7 ? 0 : 3);
                                                        if (sentFile5 != null) {
                                                            Object obj17 = sentFile5[0];
                                                            if (obj17 instanceof TLRPC$TL_photo) {
                                                                str42 = (String) sentFile5[1];
                                                                tLRPC$TL_photo4 = (TLRPC$TL_photo) obj17;
                                                                str38 = str42;
                                                                obj3 = obj2;
                                                                hashMap3 = hashMap11;
                                                                str35 = str34;
                                                                str36 = str33;
                                                                arrayList12 = arrayList28;
                                                                str4 = str28;
                                                                str37 = str31;
                                                                ensureMediaThumbExists(accountInstance, z7, tLRPC$TL_photo4, sendingMediaInfo7.path, sendingMediaInfo7.uri, 0L);
                                                                tLRPC$TL_photo = tLRPC$TL_photo4;
                                                            }
                                                        }
                                                    }
                                                    str42 = str41;
                                                    str38 = str42;
                                                    obj3 = obj2;
                                                    hashMap3 = hashMap11;
                                                    str35 = str34;
                                                    str36 = str33;
                                                    arrayList12 = arrayList28;
                                                    str4 = str28;
                                                    str37 = str31;
                                                    ensureMediaThumbExists(accountInstance, z7, tLRPC$TL_photo4, sendingMediaInfo7.path, sendingMediaInfo7.uri, 0L);
                                                    tLRPC$TL_photo = tLRPC$TL_photo4;
                                                }
                                            }
                                            str40 = null;
                                            tLRPC$TL_photo3 = null;
                                            if (tLRPC$TL_photo3 == null) {
                                            }
                                            str41 = str40;
                                            tLRPC$TL_photo4 = tLRPC$TL_photo3;
                                            str42 = str41;
                                            str38 = str42;
                                            obj3 = obj2;
                                            hashMap3 = hashMap11;
                                            str35 = str34;
                                            str36 = str33;
                                            arrayList12 = arrayList28;
                                            str4 = str28;
                                            str37 = str31;
                                            ensureMediaThumbExists(accountInstance, z7, tLRPC$TL_photo4, sendingMediaInfo7.path, sendingMediaInfo7.uri, 0L);
                                            tLRPC$TL_photo = tLRPC$TL_photo4;
                                        }
                                        if (tLRPC$TL_photo == null) {
                                            TLRPC$TL_photo generatePhotoSizes = accountInstance.getSendMessagesHelper().generatePhotoSizes(sendingMediaInfo7.path, sendingMediaInfo7.uri);
                                            if (z7 && sendingMediaInfo7.canDeleteAfter) {
                                                new File(sendingMediaInfo7.path).delete();
                                            }
                                            tLRPC$TL_photo2 = generatePhotoSizes;
                                        } else {
                                            tLRPC$TL_photo2 = tLRPC$TL_photo;
                                        }
                                        str39 = str38;
                                    }
                                    if (tLRPC$TL_photo2 != null) {
                                        final HashMap hashMap12 = new HashMap();
                                        final Bitmap[] bitmapArr = new Bitmap[1];
                                        final String[] strArr = new String[1];
                                        ArrayList<TLRPC$InputDocument> arrayList29 = sendingMediaInfo7.masks;
                                        boolean z17 = (arrayList29 == null || arrayList29.isEmpty()) ? false : true;
                                        tLRPC$TL_photo2.has_stickers = z17;
                                        if (z17) {
                                            SerializedData serializedData2 = new SerializedData((sendingMediaInfo7.masks.size() * 20) + 4);
                                            serializedData2.writeInt32(sendingMediaInfo7.masks.size());
                                            for (int i41 = 0; i41 < sendingMediaInfo7.masks.size(); i41++) {
                                                sendingMediaInfo7.masks.get(i41).serializeToStream(serializedData2);
                                            }
                                            str46 = str6;
                                            hashMap12.put(str46, Utilities.bytesToHex(serializedData2.toByteArray()));
                                            serializedData2.cleanup();
                                        } else {
                                            str46 = str6;
                                        }
                                        String str82 = str35;
                                        if (str82 != null) {
                                            hashMap12.put("originalPath", str82);
                                        }
                                        String str83 = str7;
                                        if (str39 != null) {
                                            hashMap12.put(str83, str39);
                                        }
                                        if (z2) {
                                            try {
                                                if (arrayList.size() == 1) {
                                                }
                                                accountInstance2 = accountInstance;
                                            } catch (Exception e5) {
                                                e = e5;
                                                accountInstance2 = accountInstance;
                                                FileLog.e(e);
                                                if (z2) {
                                                }
                                                final String str84 = str39;
                                                i21 = i23;
                                                str44 = str46;
                                                str43 = str47;
                                                j10 = j4;
                                                i20 = i22;
                                                str45 = str83;
                                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda23
                                                    @Override // java.lang.Runnable
                                                    public final void run() {
                                                        SendMessagesHelper.lambda$prepareSendingMedia$93(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo7, str84, j, messageObject2, messageObject3, z3, i, z5, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                                    }
                                                });
                                                i32 = i7;
                                                obj8 = arrayList4;
                                                str13 = str36;
                                                obj9 = arrayList12;
                                                i12 = i21;
                                                j6 = j10;
                                                str14 = str43;
                                                str15 = str44;
                                                i13 = i20;
                                                str7 = str45;
                                                i33 = i13 + 1;
                                                arrayList20 = arrayList;
                                                isEncryptedDialog = z7;
                                                hashMap = hashMap3;
                                                str62 = str8;
                                                j13 = j6;
                                                str61 = str14;
                                                str2 = str13;
                                                str60 = str15;
                                                str59 = str7;
                                                i31 = i12;
                                                obj14 = obj14;
                                            }
                                            if (z2) {
                                                int i42 = i7 + 1;
                                                StringBuilder sb9 = new StringBuilder();
                                                sb9.append("");
                                                str47 = str29;
                                                str3 = str30;
                                                long j15 = j4;
                                                sb9.append(j15);
                                                hashMap12.put("groupId", sb9.toString());
                                                if (i42 != 10) {
                                                    i23 = i9;
                                                    j4 = j15;
                                                    i22 = i8;
                                                    if (i22 != i23 - 1) {
                                                        i7 = i42;
                                                    }
                                                } else {
                                                    j4 = j15;
                                                    i22 = i8;
                                                    i23 = i9;
                                                }
                                                hashMap12.put("final", obj3);
                                                i7 = i42;
                                                j14 = 0;
                                            } else {
                                                str47 = str29;
                                                str3 = str30;
                                                i22 = i8;
                                                i23 = i9;
                                            }
                                            final String str842 = str39;
                                            i21 = i23;
                                            str44 = str46;
                                            str43 = str47;
                                            j10 = j4;
                                            i20 = i22;
                                            str45 = str83;
                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda23
                                                @Override // java.lang.Runnable
                                                public final void run() {
                                                    SendMessagesHelper.lambda$prepareSendingMedia$93(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo7, str842, j, messageObject2, messageObject3, z3, i, z5, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                                }
                                            });
                                            i32 = i7;
                                            obj8 = arrayList4;
                                            str13 = str36;
                                            obj9 = arrayList12;
                                        }
                                        TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo2.sizes, AndroidUtilities.getPhotoSize());
                                        if (closestPhotoSizeWithSize != null) {
                                            accountInstance2 = accountInstance;
                                            try {
                                                strArr[0] = getKeyForPhotoSize(accountInstance2, closestPhotoSizeWithSize, bitmapArr, false, false);
                                            } catch (Exception e6) {
                                                e = e6;
                                                FileLog.e(e);
                                                if (z2) {
                                                }
                                                final String str8422 = str39;
                                                i21 = i23;
                                                str44 = str46;
                                                str43 = str47;
                                                j10 = j4;
                                                i20 = i22;
                                                str45 = str83;
                                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda23
                                                    @Override // java.lang.Runnable
                                                    public final void run() {
                                                        SendMessagesHelper.lambda$prepareSendingMedia$93(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo7, str8422, j, messageObject2, messageObject3, z3, i, z5, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                                    }
                                                });
                                                i32 = i7;
                                                obj8 = arrayList4;
                                                str13 = str36;
                                                obj9 = arrayList12;
                                                i12 = i21;
                                                j6 = j10;
                                                str14 = str43;
                                                str15 = str44;
                                                i13 = i20;
                                                str7 = str45;
                                                i33 = i13 + 1;
                                                arrayList20 = arrayList;
                                                isEncryptedDialog = z7;
                                                hashMap = hashMap3;
                                                str62 = str8;
                                                j13 = j6;
                                                str61 = str14;
                                                str2 = str13;
                                                str60 = str15;
                                                str59 = str7;
                                                i31 = i12;
                                                obj14 = obj14;
                                            }
                                            if (z2) {
                                            }
                                            final String str84222 = str39;
                                            i21 = i23;
                                            str44 = str46;
                                            str43 = str47;
                                            j10 = j4;
                                            i20 = i22;
                                            str45 = str83;
                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda23
                                                @Override // java.lang.Runnable
                                                public final void run() {
                                                    SendMessagesHelper.lambda$prepareSendingMedia$93(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo7, str84222, j, messageObject2, messageObject3, z3, i, z5, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                                }
                                            });
                                            i32 = i7;
                                            obj8 = arrayList4;
                                            str13 = str36;
                                            obj9 = arrayList12;
                                        }
                                        accountInstance2 = accountInstance;
                                        if (z2) {
                                        }
                                        final String str842222 = str39;
                                        i21 = i23;
                                        str44 = str46;
                                        str43 = str47;
                                        j10 = j4;
                                        i20 = i22;
                                        str45 = str83;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda23
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingMedia$93(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo7, str842222, j, messageObject2, messageObject3, z3, i, z5, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                            }
                                        });
                                        i32 = i7;
                                        obj8 = arrayList4;
                                        str13 = str36;
                                        obj9 = arrayList12;
                                    } else {
                                        str43 = str29;
                                        str3 = str30;
                                        str44 = str6;
                                        str45 = str7;
                                        i20 = i8;
                                        i21 = i9;
                                        j10 = j4;
                                        String str85 = str35;
                                        ArrayList arrayList30 = arrayList12;
                                        if (arrayList30 == null) {
                                            obj9 = new ArrayList();
                                            obj8 = new ArrayList();
                                            ArrayList arrayList31 = new ArrayList();
                                            ArrayList arrayList32 = new ArrayList();
                                            arrayList13 = new ArrayList();
                                            arrayList14 = arrayList31;
                                            arrayList15 = arrayList32;
                                        } else {
                                            obj9 = arrayList30;
                                            arrayList13 = obj11;
                                            arrayList14 = obj12;
                                            arrayList15 = obj13;
                                            obj8 = arrayList4;
                                        }
                                        obj9.add(str37);
                                        obj8.add(str85);
                                        arrayList13.add(sendingMediaInfo7.uri);
                                        arrayList14.add(sendingMediaInfo7.caption);
                                        arrayList15.add(sendingMediaInfo7.entities);
                                        obj11 = arrayList13;
                                        obj12 = arrayList14;
                                        obj13 = arrayList15;
                                        i32 = i7;
                                        str13 = str36;
                                    }
                                    i12 = i21;
                                    j6 = j10;
                                    str14 = str43;
                                    str15 = str44;
                                    i13 = i20;
                                    str7 = str45;
                                }
                            } else {
                                str31 = str27;
                                obj14 = "";
                                z9 = true;
                                if (z9) {
                                }
                            }
                        } else {
                            if (sendingMediaInfo7.forceImage || str27 == null) {
                                str30 = str3;
                            } else {
                                str30 = str3;
                                if ((str27.endsWith(str30) || str27.endsWith(str28)) && sendingMediaInfo7.ttl <= 0) {
                                    str32 = str27.endsWith(str30) ? "gif" : "webp";
                                    str31 = str27;
                                    obj14 = str32;
                                    z9 = true;
                                    if (z9) {
                                    }
                                }
                            }
                            if (!sendingMediaInfo7.forceImage && str27 == null && (uri = sendingMediaInfo7.uri) != null) {
                                if (MediaController.isGif(uri)) {
                                    str26 = sendingMediaInfo7.uri.toString();
                                    str31 = MediaController.copyFileToCache(sendingMediaInfo7.uri, "gif");
                                    obj14 = "gif";
                                } else if (MediaController.isWebp(sendingMediaInfo7.uri)) {
                                    str26 = sendingMediaInfo7.uri.toString();
                                    str31 = MediaController.copyFileToCache(sendingMediaInfo7.uri, "webp");
                                    obj14 = "webp";
                                }
                                z9 = true;
                                if (z9) {
                                }
                            }
                            str31 = str27;
                            z9 = false;
                            if (z9) {
                            }
                        }
                        i33 = i13 + 1;
                        arrayList20 = arrayList;
                        isEncryptedDialog = z7;
                        hashMap = hashMap3;
                        str62 = str8;
                        j13 = j6;
                        str61 = str14;
                        str2 = str13;
                        str60 = str15;
                        str59 = str7;
                        i31 = i12;
                        obj14 = obj14;
                    }
                }
            }
            i7 = i32;
            j3 = j13;
            searchImage = sendingMediaInfo7.searchImage;
            int i342 = i31;
            String str672 = str61;
            String str682 = str60;
            String str692 = str59;
            HashMap hashMap62 = hashMap;
            if (searchImage == null) {
            }
            str8 = str62;
            if (!sendingMediaInfo7.isVideo) {
            }
            str9 = str2;
            arrayList6 = arrayList5;
            str10 = str6;
            str11 = str5;
            str12 = str7;
            hashMap3 = hashMap2;
            i10 = i8;
            i11 = i9;
            j5 = j4;
            if (z) {
            }
            if (z) {
            }
            str13 = str9;
            i12 = i11;
            j6 = j5;
            str14 = str11;
            str15 = str10;
            i13 = i10;
            str7 = str12;
            if (arrayList6 != null) {
            }
            obj9.add(sendingMediaInfo7.path);
            obj8.add(sendingMediaInfo7.path);
            arrayList7.add(sendingMediaInfo7.uri);
            arrayList8.add(sendingMediaInfo7.caption);
            arrayList9.add(sendingMediaInfo7.entities);
            obj11 = arrayList7;
            obj12 = arrayList8;
            obj13 = arrayList9;
            i32 = i7;
            i33 = i13 + 1;
            arrayList20 = arrayList;
            isEncryptedDialog = z7;
            hashMap = hashMap3;
            str62 = str8;
            j13 = j6;
            str61 = str14;
            str2 = str13;
            str60 = str15;
            str59 = str7;
            i31 = i12;
            obj14 = obj14;
        }
        ArrayList arrayList33 = obj8;
        ArrayList arrayList34 = obj9;
        boolean z18 = isEncryptedDialog;
        int i43 = i31;
        long j16 = j14;
        if (j16 != 0) {
            finishGroup(accountInstance, j16, i);
        }
        if (inputContentInfoCompat != null) {
            inputContentInfoCompat.releasePermission();
        }
        if (arrayList34 != null && !arrayList34.isEmpty()) {
            int i44 = 1;
            long[] jArr = new long[1];
            int size3 = arrayList34.size();
            int i45 = 0;
            while (i45 < size3) {
                if (!z || z18) {
                    i4 = i43;
                } else {
                    i4 = i43;
                    if (i4 > i44) {
                        i5 = 10;
                        if (i32 % 10 == 0) {
                            jArr[0] = Utilities.random.nextLong();
                            i32 = 0;
                            i6 = i32 + 1;
                            String str86 = (String) arrayList34.get(i45);
                            ArrayList arrayList35 = arrayList33;
                            String str87 = (String) arrayList35.get(i45);
                            ArrayList arrayList36 = obj11;
                            Uri uri6 = (Uri) arrayList36.get(i45);
                            ArrayList arrayList37 = obj13;
                            ArrayList arrayList38 = (ArrayList) arrayList37.get(i45);
                            if (i6 != i5 || i45 == size3 - 1) {
                                arrayList3 = obj12;
                                z6 = true;
                            } else {
                                arrayList3 = obj12;
                                z6 = false;
                            }
                            obj13 = arrayList37;
                            obj12 = arrayList3;
                            obj11 = arrayList36;
                            handleError(prepareSendingDocumentInternal(accountInstance, str86, str87, uri6, obj14, j, messageObject2, messageObject3, tL_stories$StoryItem, replyQuote, arrayList38, messageObject, jArr, z6, (CharSequence) arrayList3.get(i45), z3, i, null, z, str, i2, j2, z4), accountInstance);
                            i45++;
                            arrayList33 = arrayList35;
                            i32 = i6;
                            i43 = i4;
                            size3 = size3;
                            arrayList34 = arrayList34;
                            i44 = 1;
                        } else {
                            i6 = i32 + 1;
                            String str862 = (String) arrayList34.get(i45);
                            ArrayList arrayList352 = arrayList33;
                            String str872 = (String) arrayList352.get(i45);
                            ArrayList arrayList362 = obj11;
                            Uri uri62 = (Uri) arrayList362.get(i45);
                            ArrayList arrayList372 = obj13;
                            ArrayList arrayList382 = (ArrayList) arrayList372.get(i45);
                            if (i6 != i5) {
                            }
                            arrayList3 = obj12;
                            z6 = true;
                            obj13 = arrayList372;
                            obj12 = arrayList3;
                            obj11 = arrayList362;
                            handleError(prepareSendingDocumentInternal(accountInstance, str862, str872, uri62, obj14, j, messageObject2, messageObject3, tL_stories$StoryItem, replyQuote, arrayList382, messageObject, jArr, z6, (CharSequence) arrayList3.get(i45), z3, i, null, z, str, i2, j2, z4), accountInstance);
                            i45++;
                            arrayList33 = arrayList352;
                            i32 = i6;
                            i43 = i4;
                            size3 = size3;
                            arrayList34 = arrayList34;
                            i44 = 1;
                        }
                    }
                }
                i5 = 10;
                i6 = i32 + 1;
                String str8622 = (String) arrayList34.get(i45);
                ArrayList arrayList3522 = arrayList33;
                String str8722 = (String) arrayList3522.get(i45);
                ArrayList arrayList3622 = obj11;
                Uri uri622 = (Uri) arrayList3622.get(i45);
                ArrayList arrayList3722 = obj13;
                ArrayList arrayList3822 = (ArrayList) arrayList3722.get(i45);
                if (i6 != i5) {
                }
                arrayList3 = obj12;
                z6 = true;
                obj13 = arrayList3722;
                obj12 = arrayList3;
                obj11 = arrayList3622;
                handleError(prepareSendingDocumentInternal(accountInstance, str8622, str8722, uri622, obj14, j, messageObject2, messageObject3, tL_stories$StoryItem, replyQuote, arrayList3822, messageObject, jArr, z6, (CharSequence) arrayList3.get(i45), z3, i, null, z, str, i2, j2, z4), accountInstance);
                i45++;
                arrayList33 = arrayList3522;
                i32 = i6;
                i43 = i4;
                size3 = size3;
                arrayList34 = arrayList34;
                i44 = 1;
            }
        }
        if (BuildVars.LOGS_ENABLED) {
            FileLog.d("total send time = " + (System.currentTimeMillis() - currentTimeMillis));
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$89(MediaSendPrepareWorker mediaSendPrepareWorker, AccountInstance accountInstance, SendingMediaInfo sendingMediaInfo, boolean z) {
        mediaSendPrepareWorker.photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
        if (z && sendingMediaInfo.canDeleteAfter) {
            new File(sendingMediaInfo.path).delete();
        }
        mediaSendPrepareWorker.sync.countDown();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$90(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, String str, HashMap hashMap, SendingMediaInfo sendingMediaInfo, String str2, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str3, int i2, boolean z2, long j2, boolean z3) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, str, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str2);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, null, str, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, 0, str2, null, false, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str3;
        of.quick_reply_shortcut_id = i2;
        if (z2) {
            of.effect_id = j2;
        }
        of.invert_media = z3;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$91(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_photo tLRPC$TL_photo, boolean z, SendingMediaInfo sendingMediaInfo, HashMap hashMap, String str, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z2, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, int i2, String str2, long j2, boolean z3) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, tLRPC$TL_photo, null, null, z ? sendingMediaInfo.searchImage.imageUrl : null, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_photo, z ? sendingMediaInfo.searchImage.imageUrl : null, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z2, i, sendingMediaInfo.ttl, str, false, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut_id = i2;
        of.quick_reply_shortcut = str2;
        of.effect_id = j2;
        of.invert_media = z3;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$92(Bitmap bitmap, String str, MessageObject messageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str2, HashMap hashMap, SendingMediaInfo sendingMediaInfo, String str3, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str4, int i2, long j2, boolean z2) {
        if (bitmap != null && str != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, videoEditedInfo, tLRPC$TL_document, str2, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str3);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, videoEditedInfo, str2, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, sendingMediaInfo.ttl, str3, null, false, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str4;
        of.quick_reply_shortcut_id = i2;
        of.effect_id = j2;
        of.invert_media = z2;
        of.stars = sendingMediaInfo.stars;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$93(Bitmap[] bitmapArr, String[] strArr, MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_photo tLRPC$TL_photo, HashMap hashMap, SendingMediaInfo sendingMediaInfo, String str, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i, boolean z2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str2, int i2, long j2, boolean z3) {
        if (bitmapArr[0] != null && strArr[0] != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, tLRPC$TL_photo, null, null, null, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_photo, null, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, sendingMediaInfo.ttl, str, z2, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str2;
        of.quick_reply_shortcut_id = i2;
        of.effect_id = j2;
        of.invert_media = z3;
        of.stars = sendingMediaInfo.stars;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Type inference failed for: r2v2, types: [android.media.MediaMetadataRetriever] */
    /* JADX WARN: Type inference failed for: r2v6, types: [double] */
    /* JADX WARN: Type inference failed for: r2v7 */
    public static void fillVideoAttribute(String str, TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo, VideoEditedInfo videoEditedInfo) {
        MediaMetadataRetriever mediaMetadataRetriever;
        MediaMetadataRetriever mediaMetadataRetriever2 = 0;
        try {
            try {
                mediaMetadataRetriever = new MediaMetadataRetriever();
            } catch (Throwable th) {
                th = th;
                mediaMetadataRetriever = mediaMetadataRetriever2;
            }
        } catch (Exception e) {
            e = e;
        }
        try {
            mediaMetadataRetriever.setDataSource(str);
            String extractMetadata = mediaMetadataRetriever.extractMetadata(18);
            if (extractMetadata != null) {
                tLRPC$TL_documentAttributeVideo.w = Integer.parseInt(extractMetadata);
            }
            String extractMetadata2 = mediaMetadataRetriever.extractMetadata(19);
            if (extractMetadata2 != null) {
                tLRPC$TL_documentAttributeVideo.h = Integer.parseInt(extractMetadata2);
            }
            String extractMetadata3 = mediaMetadataRetriever.extractMetadata(9);
            if (extractMetadata3 != null) {
                double parseLong = Long.parseLong(extractMetadata3);
                Double.isNaN(parseLong);
                tLRPC$TL_documentAttributeVideo.duration = parseLong / 1000.0d;
            }
            String extractMetadata4 = mediaMetadataRetriever.extractMetadata(24);
            if (extractMetadata4 != null) {
                int intValue = Utilities.parseInt((CharSequence) extractMetadata4).intValue();
                if (videoEditedInfo != null) {
                    videoEditedInfo.rotationValue = intValue;
                } else if (intValue == 90 || intValue == 270) {
                    int i = tLRPC$TL_documentAttributeVideo.w;
                    tLRPC$TL_documentAttributeVideo.w = tLRPC$TL_documentAttributeVideo.h;
                    tLRPC$TL_documentAttributeVideo.h = i;
                }
            }
            try {
                mediaMetadataRetriever.release();
            } catch (Exception e2) {
                FileLog.e(e2);
            }
        } catch (Exception e3) {
            e = e3;
            mediaMetadataRetriever2 = mediaMetadataRetriever;
            FileLog.e(e);
            if (mediaMetadataRetriever2 != 0) {
                try {
                    mediaMetadataRetriever2.release();
                } catch (Exception e4) {
                    FileLog.e(e4);
                }
            }
            try {
                MediaPlayer create = MediaPlayer.create(ApplicationLoader.applicationContext, Uri.fromFile(new File(str)));
                if (create != null) {
                    double duration = create.getDuration();
                    Double.isNaN(duration);
                    mediaMetadataRetriever2 = duration / 1000.0d;
                    tLRPC$TL_documentAttributeVideo.duration = mediaMetadataRetriever2;
                    tLRPC$TL_documentAttributeVideo.w = create.getVideoWidth();
                    tLRPC$TL_documentAttributeVideo.h = create.getVideoHeight();
                    create.release();
                }
            } catch (Exception e5) {
                FileLog.e(e5);
            }
        } catch (Throwable th2) {
            th = th2;
            if (mediaMetadataRetriever != null) {
                try {
                    mediaMetadataRetriever.release();
                } catch (Exception e6) {
                    FileLog.e(e6);
                }
            }
            throw th;
        }
    }

    public static Bitmap createVideoThumbnail(String str, int i) {
        float f = i == 2 ? 1920.0f : i == 3 ? 96.0f : 512.0f;
        Bitmap createVideoThumbnailAtTime = createVideoThumbnailAtTime(str, 0L);
        if (createVideoThumbnailAtTime != null) {
            int width = createVideoThumbnailAtTime.getWidth();
            int height = createVideoThumbnailAtTime.getHeight();
            float f2 = width;
            if (f2 > f || height > f) {
                float max = Math.max(width, height) / f;
                return Bitmap.createScaledBitmap(createVideoThumbnailAtTime, (int) (f2 / max), (int) (height / max), true);
            }
            return createVideoThumbnailAtTime;
        }
        return createVideoThumbnailAtTime;
    }

    public static Bitmap createVideoThumbnailAtTime(String str, long j) {
        return createVideoThumbnailAtTime(str, j, null, false);
    }

    public static Bitmap createVideoThumbnailAtTime(String str, long j, int[] iArr, boolean z) {
        Bitmap bitmap;
        Bitmap bitmap2;
        if (z) {
            AnimatedFileDrawable animatedFileDrawable = new AnimatedFileDrawable(new File(str), true, 0L, 0, null, null, null, 0L, 0, true, null);
            bitmap2 = animatedFileDrawable.getFrameAtTime(j, z);
            if (iArr != null) {
                iArr[0] = animatedFileDrawable.getOrientation();
            }
            animatedFileDrawable.recycle();
            if (bitmap2 == null) {
                return createVideoThumbnailAtTime(str, j, iArr, false);
            }
        } else {
            MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever();
            try {
                try {
                    mediaMetadataRetriever.setDataSource(str);
                    bitmap = mediaMetadataRetriever.getFrameAtTime(j, 1);
                    if (bitmap == null) {
                        try {
                            bitmap = mediaMetadataRetriever.getFrameAtTime(j, 3);
                        } catch (Exception unused) {
                        }
                    }
                } catch (Exception unused2) {
                    bitmap = null;
                }
                bitmap2 = bitmap;
            } finally {
                try {
                    mediaMetadataRetriever.release();
                } catch (Throwable unused3) {
                }
            }
        }
        return bitmap2;
    }

    private static VideoEditedInfo createCompressionSettings(String str) {
        int[] iArr = new int[11];
        AnimatedFileDrawable.getVideoInfo(str, iArr);
        if (iArr[0] == 0) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("video hasn't avc1 atom");
                return null;
            }
            return null;
        }
        long length = new File(str).length();
        int videoBitrate = MediaController.getVideoBitrate(str);
        if (videoBitrate == -1) {
            videoBitrate = iArr[3];
        }
        float f = iArr[4];
        long j = iArr[5];
        int i = iArr[7];
        VideoEditedInfo videoEditedInfo = new VideoEditedInfo();
        videoEditedInfo.startTime = -1L;
        videoEditedInfo.endTime = -1L;
        videoEditedInfo.bitrate = videoBitrate;
        videoEditedInfo.originalPath = str;
        videoEditedInfo.framerate = i;
        videoEditedInfo.estimatedDuration = (long) Math.ceil(f);
        boolean z = true;
        int i2 = iArr[1];
        videoEditedInfo.originalWidth = i2;
        videoEditedInfo.resultWidth = i2;
        int i3 = iArr[2];
        videoEditedInfo.originalHeight = i3;
        videoEditedInfo.resultHeight = i3;
        videoEditedInfo.rotationValue = iArr[8];
        videoEditedInfo.originalDuration = f * 1000.0f;
        float max = Math.max(i2, i3);
        float f2 = 640.0f;
        int i4 = max > 1280.0f ? 4 : max > 854.0f ? 3 : max > 640.0f ? 2 : 1;
        int round = Math.round(DownloadController.getInstance(UserConfig.selectedAccount).getMaxVideoBitrate() / (100.0f / i4));
        if (round > i4) {
            round = i4;
        }
        if (new File(str).length() < 1048576000) {
            if (round != i4 || Math.max(videoEditedInfo.originalWidth, videoEditedInfo.originalHeight) > 1280) {
                if (round == 1) {
                    f2 = 432.0f;
                } else if (round != 2) {
                    f2 = round != 3 ? 1280.0f : 848.0f;
                }
                int i5 = videoEditedInfo.originalWidth;
                int i6 = videoEditedInfo.originalHeight;
                float f3 = f2 / (i5 > i6 ? i5 : i6);
                videoEditedInfo.resultWidth = Math.round((i5 * f3) / 2.0f) * 2;
                videoEditedInfo.resultHeight = Math.round((videoEditedInfo.originalHeight * f3) / 2.0f) * 2;
            } else {
                z = false;
            }
            videoBitrate = MediaController.makeVideoBitrate(videoEditedInfo.originalHeight, videoEditedInfo.originalWidth, videoBitrate, videoEditedInfo.resultHeight, videoEditedInfo.resultWidth);
        } else {
            z = false;
        }
        if (!z) {
            videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
            videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
            videoEditedInfo.bitrate = videoBitrate;
            videoEditedInfo.estimatedSize = length;
        } else {
            videoEditedInfo.bitrate = videoBitrate;
            videoEditedInfo.estimatedSize = ((float) j) + (((f / 1000.0f) * MediaController.extractRealEncoderBitrate(videoEditedInfo.resultWidth, videoEditedInfo.resultHeight, videoBitrate, false)) / 8.0f);
        }
        if (videoEditedInfo.estimatedSize == 0) {
            videoEditedInfo.estimatedSize = 1L;
        }
        return videoEditedInfo;
    }

    public static void prepareSendingVideo(final AccountInstance accountInstance, final String str, final VideoEditedInfo videoEditedInfo, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final ArrayList<TLRPC$MessageEntity> arrayList, final int i, final MessageObject messageObject3, final boolean z, final int i2, final boolean z2, final boolean z3, final CharSequence charSequence, final String str2, final int i3, final long j2) {
        if (str == null || str.length() == 0) {
            return;
        }
        new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda4
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingVideo$96(VideoEditedInfo.this, str, j, i, accountInstance, charSequence, messageObject3, z3, messageObject, messageObject2, arrayList, z, i2, tL_stories$StoryItem, replyQuote, i3, str2, j2, z2);
            }
        }).start();
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:140:0x032f  */
    /* JADX WARN: Removed duplicated region for block: B:142:0x0334  */
    /* JADX WARN: Removed duplicated region for block: B:147:0x036d  */
    /* JADX WARN: Removed duplicated region for block: B:149:0x0375  */
    /* JADX WARN: Removed duplicated region for block: B:151:0x037a  */
    /* JADX WARN: Removed duplicated region for block: B:153:0x0381  */
    /* JADX WARN: Removed duplicated region for block: B:48:0x00f8  */
    /* JADX WARN: Removed duplicated region for block: B:49:0x00fa  */
    /* JADX WARN: Removed duplicated region for block: B:52:0x0101  */
    /* JADX WARN: Removed duplicated region for block: B:57:0x012e  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingVideo$96(VideoEditedInfo videoEditedInfo, String str, final long j, final int i, final AccountInstance accountInstance, CharSequence charSequence, final MessageObject messageObject, final boolean z, final MessageObject messageObject2, final MessageObject messageObject3, final ArrayList arrayList, final boolean z2, final int i2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final int i3, final String str2, final long j2, boolean z3) {
        String str3;
        long j3;
        long j4;
        String str4;
        String str5;
        final TLRPC$TL_document tLRPC$TL_document;
        final Bitmap bitmap;
        final String str6;
        String str7;
        TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo;
        int i4;
        int i5;
        Object[] sentFile;
        final String str8 = str;
        VideoEditedInfo createCompressionSettings = videoEditedInfo != null ? videoEditedInfo : createCompressionSettings(str);
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        boolean z4 = createCompressionSettings != null && createCompressionSettings.roundVideo;
        if (createCompressionSettings != null || str8.endsWith("mp4") || z4) {
            File file = new File(str8);
            String str9 = str8 + file.length() + "_" + file.lastModified();
            if (createCompressionSettings != null) {
                if (!z4) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(str9);
                    sb.append(createCompressionSettings.estimatedDuration);
                    sb.append("_");
                    sb.append(createCompressionSettings.startTime);
                    sb.append("_");
                    sb.append(createCompressionSettings.endTime);
                    sb.append(createCompressionSettings.muted ? "_m" : "");
                    str9 = sb.toString();
                    if (createCompressionSettings.resultWidth != createCompressionSettings.originalWidth) {
                        str9 = str9 + "_" + createCompressionSettings.resultWidth;
                    }
                }
                j3 = createCompressionSettings.startTime;
                if (j3 >= 0) {
                    str3 = str9;
                    if (!isEncryptedDialog && i == 0 && (createCompressionSettings == null || (createCompressionSettings.filterState == null && createCompressionSettings.paintPath == null && createCompressionSettings.mediaEntities == null && createCompressionSettings.cropState == null))) {
                        sentFile = accountInstance.getMessagesStorage().getSentFile(str3, isEncryptedDialog ? 2 : 5);
                        if (sentFile != null) {
                            Object obj = sentFile[0];
                            if (obj instanceof TLRPC$TL_document) {
                                TLRPC$TL_document tLRPC$TL_document2 = (TLRPC$TL_document) obj;
                                j4 = j3;
                                str4 = str3;
                                ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document2, str, null, j4);
                                tLRPC$TL_document = tLRPC$TL_document2;
                                str5 = (String) sentFile[1];
                                if (tLRPC$TL_document == null) {
                                    Bitmap bitmap2 = (createCompressionSettings == null || !createCompressionSettings.notReadyYet) ? null : createCompressionSettings.thumb;
                                    if (bitmap2 == null) {
                                        bitmap2 = createVideoThumbnailAtTime(str8, j4);
                                    }
                                    if (bitmap2 == null) {
                                        bitmap2 = createVideoThumbnail(str8, 1);
                                    }
                                    int i6 = (isEncryptedDialog || i != 0) ? 90 : 320;
                                    float f = i6;
                                    TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(bitmap2, f, f, i6 > 90 ? 80 : 55, isEncryptedDialog);
                                    if (bitmap2 == null || scaleAndSaveImage == null) {
                                        str6 = null;
                                    } else if (!z4) {
                                        str6 = null;
                                        bitmap2 = null;
                                    } else if (isEncryptedDialog) {
                                        bitmap2 = Bitmap.createScaledBitmap(bitmap2, 90, 90, true);
                                        int i7 = Build.VERSION.SDK_INT;
                                        Utilities.blurBitmap(bitmap2, 7, i7 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                        Utilities.blurBitmap(bitmap2, 7, i7 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                        Utilities.blurBitmap(bitmap2, 7, i7 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                        str6 = String.format(scaleAndSaveImage.location.volume_id + "_" + scaleAndSaveImage.location.local_id + "@%d_%d_b2", Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density)), Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density)));
                                    } else {
                                        Utilities.blurBitmap(bitmap2, 3, Build.VERSION.SDK_INT < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                        str6 = String.format(scaleAndSaveImage.location.volume_id + "_" + scaleAndSaveImage.location.local_id + "@%d_%d_b", Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density)), Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density)));
                                    }
                                    TLRPC$TL_document tLRPC$TL_document3 = new TLRPC$TL_document();
                                    if (scaleAndSaveImage != null) {
                                        tLRPC$TL_document3.thumbs.add(scaleAndSaveImage);
                                        tLRPC$TL_document3.flags |= 1;
                                    }
                                    tLRPC$TL_document3.file_reference = new byte[0];
                                    tLRPC$TL_document3.mime_type = "video/mp4";
                                    accountInstance.getUserConfig().saveConfig(false);
                                    if (isEncryptedDialog) {
                                        if (accountInstance.getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                                            return;
                                        }
                                        tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo_layer159();
                                    } else {
                                        tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                        tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                    }
                                    tLRPC$TL_documentAttributeVideo.round_message = z4;
                                    tLRPC$TL_document3.attributes.add(tLRPC$TL_documentAttributeVideo);
                                    if (createCompressionSettings != null && createCompressionSettings.notReadyYet) {
                                        tLRPC$TL_documentAttributeVideo.w = createCompressionSettings.resultWidth;
                                        tLRPC$TL_documentAttributeVideo.h = createCompressionSettings.resultHeight;
                                        double d = createCompressionSettings.estimatedDuration;
                                        Double.isNaN(d);
                                        tLRPC$TL_documentAttributeVideo.duration = d / 1000.0d;
                                        tLRPC$TL_document3.size = createCompressionSettings.estimatedSize;
                                    } else if (createCompressionSettings != null && createCompressionSettings.needConvert()) {
                                        if (createCompressionSettings.muted) {
                                            tLRPC$TL_document3.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                            fillVideoAttribute(str8, tLRPC$TL_documentAttributeVideo, createCompressionSettings);
                                            createCompressionSettings.originalWidth = tLRPC$TL_documentAttributeVideo.w;
                                            createCompressionSettings.originalHeight = tLRPC$TL_documentAttributeVideo.h;
                                        } else {
                                            double d2 = createCompressionSettings.estimatedDuration;
                                            Double.isNaN(d2);
                                            tLRPC$TL_documentAttributeVideo.duration = d2 / 1000.0d;
                                        }
                                        int i8 = createCompressionSettings.rotationValue;
                                        MediaController.CropState cropState = createCompressionSettings.cropState;
                                        if (cropState != null) {
                                            i4 = cropState.transformWidth;
                                            i5 = cropState.transformHeight;
                                            i8 += cropState.transformRotation;
                                        } else {
                                            i4 = createCompressionSettings.resultWidth;
                                            i5 = createCompressionSettings.resultHeight;
                                        }
                                        if (i8 == 90 || i8 == 270) {
                                            tLRPC$TL_documentAttributeVideo.w = i5;
                                            tLRPC$TL_documentAttributeVideo.h = i4;
                                        } else {
                                            tLRPC$TL_documentAttributeVideo.w = i4;
                                            tLRPC$TL_documentAttributeVideo.h = i5;
                                        }
                                        tLRPC$TL_document3.size = createCompressionSettings.estimatedSize;
                                    } else {
                                        if (file.exists()) {
                                            tLRPC$TL_document3.size = (int) file.length();
                                        }
                                        fillVideoAttribute(str8, tLRPC$TL_documentAttributeVideo, null);
                                    }
                                    bitmap = bitmap2;
                                    tLRPC$TL_document = tLRPC$TL_document3;
                                } else {
                                    bitmap = null;
                                    str6 = null;
                                }
                                if (createCompressionSettings != null && createCompressionSettings.needConvert()) {
                                    File file2 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + ".mp4");
                                    SharedConfig.saveConfig();
                                    str8 = file2.getAbsolutePath();
                                }
                                final HashMap hashMap = new HashMap();
                                final String charSequence2 = charSequence != null ? charSequence.toString() : "";
                                str7 = str4;
                                if (str7 != null) {
                                    hashMap.put("originalPath", str7);
                                }
                                if (str5 != null) {
                                    hashMap.put("parentObject", str5);
                                }
                                final String str10 = str5;
                                final VideoEditedInfo videoEditedInfo2 = createCompressionSettings;
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda7
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingVideo$95(bitmap, str6, messageObject, accountInstance, videoEditedInfo2, tLRPC$TL_document, str8, hashMap, z, str10, j, messageObject2, messageObject3, charSequence2, arrayList, z2, i2, i, tL_stories$StoryItem, replyQuote, i3, str2, j2);
                                    }
                                });
                                return;
                            }
                        }
                    }
                    j4 = j3;
                    str4 = str3;
                    str5 = null;
                    tLRPC$TL_document = null;
                    if (tLRPC$TL_document == null) {
                    }
                    if (createCompressionSettings != null) {
                        File file22 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + ".mp4");
                        SharedConfig.saveConfig();
                        str8 = file22.getAbsolutePath();
                    }
                    final HashMap hashMap2 = new HashMap();
                    if (charSequence != null) {
                    }
                    str7 = str4;
                    if (str7 != null) {
                    }
                    if (str5 != null) {
                    }
                    final String str102 = str5;
                    final VideoEditedInfo videoEditedInfo22 = createCompressionSettings;
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda7
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.lambda$prepareSendingVideo$95(bitmap, str6, messageObject, accountInstance, videoEditedInfo22, tLRPC$TL_document, str8, hashMap2, z, str102, j, messageObject2, messageObject3, charSequence2, arrayList, z2, i2, i, tL_stories$StoryItem, replyQuote, i3, str2, j2);
                        }
                    });
                    return;
                }
            }
            str3 = str9;
            j3 = 0;
            if (!isEncryptedDialog) {
                sentFile = accountInstance.getMessagesStorage().getSentFile(str3, isEncryptedDialog ? 2 : 5);
                if (sentFile != null) {
                }
            }
            j4 = j3;
            str4 = str3;
            str5 = null;
            tLRPC$TL_document = null;
            if (tLRPC$TL_document == null) {
            }
            if (createCompressionSettings != null) {
            }
            final HashMap hashMap22 = new HashMap();
            if (charSequence != null) {
            }
            str7 = str4;
            if (str7 != null) {
            }
            if (str5 != null) {
            }
            final String str1022 = str5;
            final VideoEditedInfo videoEditedInfo222 = createCompressionSettings;
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda7
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingVideo$95(bitmap, str6, messageObject, accountInstance, videoEditedInfo222, tLRPC$TL_document, str8, hashMap22, z, str1022, j, messageObject2, messageObject3, charSequence2, arrayList, z2, i2, i, tL_stories$StoryItem, replyQuote, i3, str2, j2);
                }
            });
            return;
        }
        prepareSendingDocumentInternal(accountInstance, str, str, null, null, j, messageObject2, messageObject3, tL_stories$StoryItem, replyQuote, arrayList, messageObject, null, false, charSequence, z2, i2, null, z3, str2, i3, 0L, false);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingVideo$95(Bitmap bitmap, String str, MessageObject messageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str2, HashMap hashMap, boolean z, String str3, long j, MessageObject messageObject2, MessageObject messageObject3, String str4, ArrayList arrayList, boolean z2, int i, int i2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, int i3, String str5, long j2) {
        if (bitmap != null && str != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, videoEditedInfo, tLRPC$TL_document, str2, hashMap, false, z, str3);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, videoEditedInfo, str2, j, messageObject2, messageObject3, str4, arrayList, null, hashMap, z2, i, i2, str3, null, false, z);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut_id = i3;
        of.quick_reply_shortcut = str5;
        of.effect_id = j2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* loaded from: classes3.dex */
    public static class SendMessageParams {
        public String caption;
        public TLRPC$TL_document document;
        public long effect_id;
        public ArrayList<TLRPC$MessageEntity> entities;
        public TLRPC$TL_game game;
        public boolean hasMediaSpoilers;
        public boolean invert_media;
        public TLRPC$TL_messageMediaInvoice invoice;
        public TLRPC$MessageMedia location;
        public TLRPC$TL_messageMediaWebPage mediaWebPage;
        public String message;
        public boolean notify;
        public HashMap<String, String> params;
        public Object parentObject;
        public String path;
        public long peer;
        public TLRPC$TL_photo photo;
        public TLRPC$TL_messageMediaPoll poll;
        public String quick_reply_shortcut;
        public int quick_reply_shortcut_id;
        public TLRPC$ReplyMarkup replyMarkup;
        public ChatActivity.ReplyQuote replyQuote;
        public MessageObject replyToMsg;
        public TL_stories$StoryItem replyToStoryItem;
        public MessageObject replyToTopMsg;
        public MessageObject retryMessageObject;
        public int scheduleDate;
        public boolean searchLinks = true;
        public MessageObject.SendAnimationData sendAnimationData;
        public TL_stories$StoryItem sendingStory;
        public long stars;
        public int ttl;
        public boolean updateStickersOrder;
        public TLRPC$User user;
        public VideoEditedInfo videoEditedInfo;
        public TLRPC$WebPage webPage;

        public static SendMessageParams of(String str, long j) {
            return of(str, null, null, null, null, null, null, null, null, null, j, null, null, null, null, true, null, null, null, null, false, 0, 0, null, null, false);
        }

        public static SendMessageParams of(MessageObject messageObject) {
            long dialogId = messageObject.getDialogId();
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            SendMessageParams of = of(null, null, null, null, null, null, null, null, null, null, dialogId, tLRPC$Message.attachPath, null, null, null, true, messageObject, null, tLRPC$Message.reply_markup, tLRPC$Message.params, !tLRPC$Message.silent, messageObject.scheduled ? tLRPC$Message.date : 0, 0, null, null, false);
            TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
            if (tLRPC$Message2 != null) {
                TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut = tLRPC$Message2.quick_reply_shortcut;
                if (tLRPC$InputQuickReplyShortcut instanceof TLRPC$TL_inputQuickReplyShortcut) {
                    of.quick_reply_shortcut = ((TLRPC$TL_inputQuickReplyShortcut) tLRPC$InputQuickReplyShortcut).shortcut;
                }
                of.quick_reply_shortcut_id = messageObject.getQuickReplyId();
            }
            return of;
        }

        public static SendMessageParams of(TLRPC$User tLRPC$User, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, tLRPC$User, null, null, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, null, null, null, null, tLRPC$TL_messageMediaInvoice, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_document tLRPC$TL_document, VideoEditedInfo videoEditedInfo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z2) {
            return of(null, str2, null, null, videoEditedInfo, null, tLRPC$TL_document, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, sendAnimationData, z2);
        }

        public static SendMessageParams of(TLRPC$TL_document tLRPC$TL_document, VideoEditedInfo videoEditedInfo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z2, boolean z3) {
            return of(null, str2, null, null, videoEditedInfo, null, tLRPC$TL_document, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, sendAnimationData, z2, z3);
        }

        public static SendMessageParams of(String str, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, MessageObject.SendAnimationData sendAnimationData, boolean z3) {
            return of(str, null, null, null, null, null, null, null, null, null, j, null, messageObject, messageObject2, tLRPC$WebPage, z, null, arrayList, tLRPC$ReplyMarkup, hashMap, z2, i, 0, null, sendAnimationData, z3);
        }

        public static SendMessageParams of(TLRPC$MessageMedia tLRPC$MessageMedia, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, tLRPC$MessageMedia, null, null, null, null, null, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, null, null, null, tLRPC$TL_messageMediaPoll, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_game tLRPC$TL_game, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, null, null, tLRPC$TL_game, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_photo tLRPC$TL_photo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, boolean z2, boolean z3) {
            return of(null, str2, null, tLRPC$TL_photo, null, null, null, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, null, z2, z3);
        }

        public static SendMessageParams of(TLRPC$TL_photo tLRPC$TL_photo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, boolean z2) {
            return of(null, str2, null, tLRPC$TL_photo, null, null, null, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, null, z2);
        }

        private static SendMessageParams of(String str, String str2, TLRPC$MessageMedia tLRPC$MessageMedia, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$User tLRPC$User, TLRPC$TL_document tLRPC$TL_document, TLRPC$TL_game tLRPC$TL_game, TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, String str3, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, MessageObject messageObject3, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z3) {
            return of(str, str2, tLRPC$MessageMedia, tLRPC$TL_photo, videoEditedInfo, tLRPC$User, tLRPC$TL_document, tLRPC$TL_game, tLRPC$TL_messageMediaPoll, tLRPC$TL_messageMediaInvoice, j, str3, messageObject, messageObject2, tLRPC$WebPage, z, messageObject3, arrayList, tLRPC$ReplyMarkup, hashMap, z2, i, i2, obj, sendAnimationData, z3, false);
        }

        public static SendMessageParams of(String str, String str2, TLRPC$MessageMedia tLRPC$MessageMedia, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$User tLRPC$User, TLRPC$TL_document tLRPC$TL_document, TLRPC$TL_game tLRPC$TL_game, TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, String str3, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, MessageObject messageObject3, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z3, boolean z4) {
            SendMessageParams sendMessageParams = new SendMessageParams();
            sendMessageParams.message = str;
            sendMessageParams.caption = str2;
            sendMessageParams.location = tLRPC$MessageMedia;
            sendMessageParams.photo = tLRPC$TL_photo;
            sendMessageParams.videoEditedInfo = videoEditedInfo;
            sendMessageParams.user = tLRPC$User;
            sendMessageParams.document = tLRPC$TL_document;
            sendMessageParams.game = tLRPC$TL_game;
            sendMessageParams.poll = tLRPC$TL_messageMediaPoll;
            sendMessageParams.invoice = tLRPC$TL_messageMediaInvoice;
            sendMessageParams.peer = j;
            sendMessageParams.path = str3;
            sendMessageParams.replyToMsg = messageObject;
            sendMessageParams.replyToTopMsg = messageObject2;
            sendMessageParams.webPage = tLRPC$WebPage;
            sendMessageParams.searchLinks = z;
            sendMessageParams.retryMessageObject = messageObject3;
            sendMessageParams.entities = arrayList;
            sendMessageParams.replyMarkup = tLRPC$ReplyMarkup;
            sendMessageParams.params = hashMap;
            sendMessageParams.notify = z2;
            sendMessageParams.scheduleDate = i;
            sendMessageParams.ttl = i2;
            sendMessageParams.parentObject = obj;
            sendMessageParams.sendAnimationData = sendAnimationData;
            sendMessageParams.updateStickersOrder = z3;
            sendMessageParams.hasMediaSpoilers = z4;
            return sendMessageParams;
        }
    }
}
