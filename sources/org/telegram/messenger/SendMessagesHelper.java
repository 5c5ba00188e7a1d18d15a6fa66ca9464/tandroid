package org.telegram.messenger;

import android.annotation.SuppressLint;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.AssetFileDescriptor;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.drawable.BitmapDrawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.media.MediaCodecInfo;
import android.media.MediaMetadataRetriever;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.Spannable;
import android.text.TextUtils;
import android.util.Base64;
import android.util.SparseArray;
import android.webkit.MimeTypeMap;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.collection.LongSparseArray;
import androidx.core.view.inputmethod.InputContentInfoCompat;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.json.JSONObject;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.audioinfo.AudioInfo;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.QuickAckDelegate;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.SerializedData;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC$BotInlineMessage;
import org.telegram.tgnet.TLRPC$BotInlineResult;
import org.telegram.tgnet.TLRPC$Chat;
import org.telegram.tgnet.TLRPC$ChatFull;
import org.telegram.tgnet.TLRPC$DecryptedMessage;
import org.telegram.tgnet.TLRPC$DecryptedMessageAction;
import org.telegram.tgnet.TLRPC$DecryptedMessageMedia;
import org.telegram.tgnet.TLRPC$Document;
import org.telegram.tgnet.TLRPC$DocumentAttribute;
import org.telegram.tgnet.TLRPC$EncryptedChat;
import org.telegram.tgnet.TLRPC$FileLocation;
import org.telegram.tgnet.TLRPC$GeoPoint;
import org.telegram.tgnet.TLRPC$InputCheckPasswordSRP;
import org.telegram.tgnet.TLRPC$InputDocument;
import org.telegram.tgnet.TLRPC$InputEncryptedFile;
import org.telegram.tgnet.TLRPC$InputFile;
import org.telegram.tgnet.TLRPC$InputMedia;
import org.telegram.tgnet.TLRPC$InputPeer;
import org.telegram.tgnet.TLRPC$InputQuickReplyShortcut;
import org.telegram.tgnet.TLRPC$InputReplyTo;
import org.telegram.tgnet.TLRPC$InputStickerSet;
import org.telegram.tgnet.TLRPC$KeyboardButton;
import org.telegram.tgnet.TLRPC$Message;
import org.telegram.tgnet.TLRPC$MessageAction;
import org.telegram.tgnet.TLRPC$MessageEntity;
import org.telegram.tgnet.TLRPC$MessageFwdHeader;
import org.telegram.tgnet.TLRPC$MessageMedia;
import org.telegram.tgnet.TLRPC$MessageReplies;
import org.telegram.tgnet.TLRPC$MessageReplyHeader;
import org.telegram.tgnet.TLRPC$Peer;
import org.telegram.tgnet.TLRPC$Photo;
import org.telegram.tgnet.TLRPC$PhotoSize;
import org.telegram.tgnet.TLRPC$PollResults;
import org.telegram.tgnet.TLRPC$ReplyMarkup;
import org.telegram.tgnet.TLRPC$TL_account_getPassword;
import org.telegram.tgnet.TLRPC$TL_botInlineMediaResult;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaAuto;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaContact;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaGeo;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageText;
import org.telegram.tgnet.TLRPC$TL_dataJSON;
import org.telegram.tgnet.TLRPC$TL_decryptedMessage;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionAbortKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionAcceptKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionCommitKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionDeleteMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionFlushHistory;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionNoop;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionNotifyLayer;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionReadMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionRequestKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionResend;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionScreenshotMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionTyping;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaContact;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaGeoPoint;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_decryptedMessage_layer45;
import org.telegram.tgnet.TLRPC$TL_document;
import org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated;
import org.telegram.tgnet.TLRPC$TL_documentAttributeAudio;
import org.telegram.tgnet.TLRPC$TL_documentAttributeFilename;
import org.telegram.tgnet.TLRPC$TL_documentAttributeHasStickers;
import org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize;
import org.telegram.tgnet.TLRPC$TL_documentAttributeSticker;
import org.telegram.tgnet.TLRPC$TL_documentAttributeSticker_layer55;
import org.telegram.tgnet.TLRPC$TL_documentAttributeVideo;
import org.telegram.tgnet.TLRPC$TL_documentAttributeVideo_layer159;
import org.telegram.tgnet.TLRPC$TL_document_layer82;
import org.telegram.tgnet.TLRPC$TL_error;
import org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC$TL_fileLocation_layer82;
import org.telegram.tgnet.TLRPC$TL_forumTopic;
import org.telegram.tgnet.TLRPC$TL_game;
import org.telegram.tgnet.TLRPC$TL_geoPoint;
import org.telegram.tgnet.TLRPC$TL_inputCheckPasswordEmpty;
import org.telegram.tgnet.TLRPC$TL_inputDocument;
import org.telegram.tgnet.TLRPC$TL_inputEncryptedFile;
import org.telegram.tgnet.TLRPC$TL_inputGeoPoint;
import org.telegram.tgnet.TLRPC$TL_inputInvoiceMessage;
import org.telegram.tgnet.TLRPC$TL_inputMediaContact;
import org.telegram.tgnet.TLRPC$TL_inputMediaDice;
import org.telegram.tgnet.TLRPC$TL_inputMediaDocument;
import org.telegram.tgnet.TLRPC$TL_inputMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_inputMediaGame;
import org.telegram.tgnet.TLRPC$TL_inputMediaGeoLive;
import org.telegram.tgnet.TLRPC$TL_inputMediaGeoPoint;
import org.telegram.tgnet.TLRPC$TL_inputMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_inputMediaPoll;
import org.telegram.tgnet.TLRPC$TL_inputMediaStory;
import org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument;
import org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto;
import org.telegram.tgnet.TLRPC$TL_inputMediaVenue;
import org.telegram.tgnet.TLRPC$TL_inputMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_inputPeerChannel;
import org.telegram.tgnet.TLRPC$TL_inputPeerChat;
import org.telegram.tgnet.TLRPC$TL_inputPeerEmpty;
import org.telegram.tgnet.TLRPC$TL_inputPeerSelf;
import org.telegram.tgnet.TLRPC$TL_inputPeerUser;
import org.telegram.tgnet.TLRPC$TL_inputPhoto;
import org.telegram.tgnet.TLRPC$TL_inputQuickReplyShortcut;
import org.telegram.tgnet.TLRPC$TL_inputReplyToMessage;
import org.telegram.tgnet.TLRPC$TL_inputReplyToStory;
import org.telegram.tgnet.TLRPC$TL_inputSingleMedia;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetID;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetItem;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC$TL_inputUserSelf;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonRow;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonSwitchInline;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonUrl;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonUrlAuth;
import org.telegram.tgnet.TLRPC$TL_message;
import org.telegram.tgnet.TLRPC$TL_messageActionScreenshotTaken;
import org.telegram.tgnet.TLRPC$TL_messageEncryptedAction;
import org.telegram.tgnet.TLRPC$TL_messageEntityBold;
import org.telegram.tgnet.TLRPC$TL_messageEntityCode;
import org.telegram.tgnet.TLRPC$TL_messageEntityCustomEmoji;
import org.telegram.tgnet.TLRPC$TL_messageEntityItalic;
import org.telegram.tgnet.TLRPC$TL_messageEntityPre;
import org.telegram.tgnet.TLRPC$TL_messageEntitySpoiler;
import org.telegram.tgnet.TLRPC$TL_messageEntityTextUrl;
import org.telegram.tgnet.TLRPC$TL_messageEntityUrl;
import org.telegram.tgnet.TLRPC$TL_messageFwdHeader;
import org.telegram.tgnet.TLRPC$TL_messageMediaContact;
import org.telegram.tgnet.TLRPC$TL_messageMediaDice;
import org.telegram.tgnet.TLRPC$TL_messageMediaDocument;
import org.telegram.tgnet.TLRPC$TL_messageMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_messageMediaGame;
import org.telegram.tgnet.TLRPC$TL_messageMediaGeo;
import org.telegram.tgnet.TLRPC$TL_messageMediaGeoLive;
import org.telegram.tgnet.TLRPC$TL_messageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_messageMediaPoll;
import org.telegram.tgnet.TLRPC$TL_messageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_messageReplies;
import org.telegram.tgnet.TLRPC$TL_messageReplyHeader;
import org.telegram.tgnet.TLRPC$TL_messageReplyStoryHeader;
import org.telegram.tgnet.TLRPC$TL_messageService;
import org.telegram.tgnet.TLRPC$TL_message_secret;
import org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer;
import org.telegram.tgnet.TLRPC$TL_messages_editMessage;
import org.telegram.tgnet.TLRPC$TL_messages_forwardMessages;
import org.telegram.tgnet.TLRPC$TL_messages_getBotCallbackAnswer;
import org.telegram.tgnet.TLRPC$TL_messages_getStickerSet;
import org.telegram.tgnet.TLRPC$TL_messages_historyImport;
import org.telegram.tgnet.TLRPC$TL_messages_initHistoryImport;
import org.telegram.tgnet.TLRPC$TL_messages_messages;
import org.telegram.tgnet.TLRPC$TL_messages_requestUrlAuth;
import org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendInlineBotResult;
import org.telegram.tgnet.TLRPC$TL_messages_sendMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendMessage;
import org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendReaction;
import org.telegram.tgnet.TLRPC$TL_messages_sendScreenshotNotification;
import org.telegram.tgnet.TLRPC$TL_messages_sendVote;
import org.telegram.tgnet.TLRPC$TL_messages_startHistoryImport;
import org.telegram.tgnet.TLRPC$TL_messages_stickerSet;
import org.telegram.tgnet.TLRPC$TL_messages_uploadImportedMedia;
import org.telegram.tgnet.TLRPC$TL_messages_uploadMedia;
import org.telegram.tgnet.TLRPC$TL_payments_getPaymentForm;
import org.telegram.tgnet.TLRPC$TL_payments_getPaymentReceipt;
import org.telegram.tgnet.TLRPC$TL_payments_paymentForm;
import org.telegram.tgnet.TLRPC$TL_payments_paymentReceipt;
import org.telegram.tgnet.TLRPC$TL_peerChannel;
import org.telegram.tgnet.TLRPC$TL_peerUser;
import org.telegram.tgnet.TLRPC$TL_photo;
import org.telegram.tgnet.TLRPC$TL_photoCachedSize;
import org.telegram.tgnet.TLRPC$TL_photoEmpty;
import org.telegram.tgnet.TLRPC$TL_photoPathSize;
import org.telegram.tgnet.TLRPC$TL_photoSize;
import org.telegram.tgnet.TLRPC$TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC$TL_photoSizeProgressive;
import org.telegram.tgnet.TLRPC$TL_photoSize_layer127;
import org.telegram.tgnet.TLRPC$TL_photoStrippedSize;
import org.telegram.tgnet.TLRPC$TL_pollAnswer;
import org.telegram.tgnet.TLRPC$TL_reactionCustomEmoji;
import org.telegram.tgnet.TLRPC$TL_reactionEmoji;
import org.telegram.tgnet.TLRPC$TL_replyInlineMarkup;
import org.telegram.tgnet.TLRPC$TL_restrictionReason;
import org.telegram.tgnet.TLRPC$TL_stickers_createStickerSet;
import org.telegram.tgnet.TLRPC$TL_updateEditChannelMessage;
import org.telegram.tgnet.TLRPC$TL_updateEditMessage;
import org.telegram.tgnet.TLRPC$TL_updateMessageID;
import org.telegram.tgnet.TLRPC$TL_updateNewChannelMessage;
import org.telegram.tgnet.TLRPC$TL_updateNewMessage;
import org.telegram.tgnet.TLRPC$TL_updateNewScheduledMessage;
import org.telegram.tgnet.TLRPC$TL_updateQuickReplyMessage;
import org.telegram.tgnet.TLRPC$TL_updateShortSentMessage;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultAccepted;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultDefault;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultRequest;
import org.telegram.tgnet.TLRPC$TL_user;
import org.telegram.tgnet.TLRPC$TL_userContact_old2;
import org.telegram.tgnet.TLRPC$TL_userRequest_old2;
import org.telegram.tgnet.TLRPC$TL_webDocument;
import org.telegram.tgnet.TLRPC$TL_webPageEmpty;
import org.telegram.tgnet.TLRPC$TL_webPagePending;
import org.telegram.tgnet.TLRPC$TL_webPageUrlPending;
import org.telegram.tgnet.TLRPC$Update;
import org.telegram.tgnet.TLRPC$Updates;
import org.telegram.tgnet.TLRPC$User;
import org.telegram.tgnet.TLRPC$UserFull;
import org.telegram.tgnet.TLRPC$VideoSize;
import org.telegram.tgnet.TLRPC$WebDocument;
import org.telegram.tgnet.TLRPC$WebPage;
import org.telegram.tgnet.TLRPC$account_Password;
import org.telegram.tgnet.TLRPC$messages_Messages;
import org.telegram.tgnet.tl.TL_stories$StoryItem;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Business.QuickRepliesController;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.ChatActivity;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedEmojiSpan;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.Point;
import org.telegram.ui.Components.Reactions.ReactionsLayoutInBubble;
import org.telegram.ui.Components.Reactions.ReactionsUtils;
import org.telegram.ui.PaymentFormActivity;
import org.telegram.ui.Stories.MessageMediaStoryFull;
import org.telegram.ui.TwoStepVerificationActivity;
import org.telegram.ui.TwoStepVerificationSetupActivity;
import org.telegram.ui.bots.BotWebViewSheet;
import org.webrtc.MediaStreamTrack;
/* loaded from: classes.dex */
public class SendMessagesHelper extends BaseController implements NotificationCenter.NotificationCenterDelegate {
    private static final int ERROR_TYPE_FILE_TOO_LARGE = 2;
    private static final int ERROR_TYPE_UNSUPPORTED = 1;
    private static volatile SendMessagesHelper[] Instance = null;
    public static final int MEDIA_TYPE_DICE = 11;
    public static final int MEDIA_TYPE_STORY = 12;
    private static DispatchQueue mediaSendQueue = new DispatchQueue("mediaSendQueue");
    private static ThreadPoolExecutor mediaSendThreadPool;
    private HashMap<String, ArrayList<DelayedMessage>> delayedMessages;
    private SparseArray<TLRPC$Message> editingMessages;
    private HashMap<String, ImportingHistory> importingHistoryFiles;
    private LongSparseArray<ImportingHistory> importingHistoryMap;
    private HashMap<String, ImportingStickers> importingStickersFiles;
    private HashMap<String, ImportingStickers> importingStickersMap;
    private LocationProvider locationProvider;
    private SparseArray<TLRPC$Message> sendingMessages;
    private LongSparseArray<Integer> sendingMessagesIdDialogs;
    private SparseArray<MessageObject> unsentMessages;
    private SparseArray<TLRPC$Message> uploadMessages;
    private LongSparseArray<Integer> uploadingMessagesIdDialogs;
    private LongSparseArray<Long> voteSendTime;
    private HashMap<String, Boolean> waitingForCallback;
    private HashMap<String, List<String>> waitingForCallbackMap;
    private HashMap<String, MessageObject> waitingForLocation;
    private HashMap<String, byte[]> waitingForVote;

    /* loaded from: classes3.dex */
    public static class SendingMediaInfo {
        public boolean canDeleteAfter;
        public String caption;
        public TLRPC$VideoSize emojiMarkup;
        public ArrayList<TLRPC$MessageEntity> entities;
        public boolean forceImage;
        public boolean hasMediaSpoilers;
        public TLRPC$BotInlineResult inlineResult;
        public boolean isVideo;
        public ArrayList<TLRPC$InputDocument> masks;
        public String paintPath;
        public HashMap<String, String> params;
        public String path;
        public MediaController.SearchImage searchImage;
        public String thumbPath;
        public int ttl;
        public boolean updateStickersOrder;
        public Uri uri;
        public VideoEditedInfo videoEditedInfo;
    }

    public static boolean checkUpdateStickersOrder(CharSequence charSequence) {
        if (charSequence instanceof Spannable) {
            for (AnimatedEmojiSpan animatedEmojiSpan : (AnimatedEmojiSpan[]) ((Spannable) charSequence).getSpans(0, charSequence.length(), AnimatedEmojiSpan.class)) {
                if (animatedEmojiSpan.fromEmojiKeyboard) {
                    return true;
                }
            }
        }
        return false;
    }

    public TLRPC$InputReplyTo createReplyInput(TL_stories$StoryItem tL_stories$StoryItem) {
        TLRPC$TL_inputReplyToStory tLRPC$TL_inputReplyToStory = new TLRPC$TL_inputReplyToStory();
        tLRPC$TL_inputReplyToStory.story_id = tL_stories$StoryItem.id;
        tLRPC$TL_inputReplyToStory.peer = getMessagesController().getInputPeer(tL_stories$StoryItem.dialogId);
        return tLRPC$TL_inputReplyToStory;
    }

    public TLRPC$InputReplyTo createReplyInput(int i) {
        return createReplyInput(null, i, 0, null);
    }

    public TLRPC$InputReplyTo createReplyInput(TLRPC$InputPeer tLRPC$InputPeer, int i, int i2, ChatActivity.ReplyQuote replyQuote) {
        MessageObject messageObject;
        TLRPC$TL_inputReplyToMessage tLRPC$TL_inputReplyToMessage = new TLRPC$TL_inputReplyToMessage();
        tLRPC$TL_inputReplyToMessage.reply_to_msg_id = i;
        if (i2 != 0) {
            tLRPC$TL_inputReplyToMessage.flags |= 1;
            tLRPC$TL_inputReplyToMessage.top_msg_id = i2;
        }
        if (replyQuote != null) {
            String text = replyQuote.getText();
            tLRPC$TL_inputReplyToMessage.quote_text = text;
            if (!TextUtils.isEmpty(text)) {
                tLRPC$TL_inputReplyToMessage.flags |= 4;
                ArrayList<TLRPC$MessageEntity> entities = replyQuote.getEntities();
                tLRPC$TL_inputReplyToMessage.quote_entities = entities;
                if (entities != null && !entities.isEmpty()) {
                    tLRPC$TL_inputReplyToMessage.quote_entities = new ArrayList<>(tLRPC$TL_inputReplyToMessage.quote_entities);
                    tLRPC$TL_inputReplyToMessage.flags |= 8;
                }
                tLRPC$TL_inputReplyToMessage.flags |= 16;
                tLRPC$TL_inputReplyToMessage.quote_offset = replyQuote.start;
            }
        }
        if (replyQuote != null && (messageObject = replyQuote.message) != null) {
            TLRPC$InputPeer inputPeer = getMessagesController().getInputPeer(messageObject.getDialogId());
            if (inputPeer != null && !MessageObject.peersEqual(inputPeer, tLRPC$InputPeer)) {
                tLRPC$TL_inputReplyToMessage.flags |= 2;
                tLRPC$TL_inputReplyToMessage.reply_to_peer_id = inputPeer;
            }
        }
        return tLRPC$TL_inputReplyToMessage;
    }

    public TLRPC$InputReplyTo createReplyInput(TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader) {
        TLRPC$TL_inputReplyToMessage tLRPC$TL_inputReplyToMessage = new TLRPC$TL_inputReplyToMessage();
        tLRPC$TL_inputReplyToMessage.reply_to_msg_id = tLRPC$TL_messageReplyHeader.reply_to_msg_id;
        int i = tLRPC$TL_messageReplyHeader.flags;
        if ((i & 2) != 0) {
            tLRPC$TL_inputReplyToMessage.flags |= 1;
            tLRPC$TL_inputReplyToMessage.top_msg_id = tLRPC$TL_messageReplyHeader.reply_to_top_id;
        }
        if ((i & 1) != 0) {
            tLRPC$TL_inputReplyToMessage.flags |= 2;
            tLRPC$TL_inputReplyToMessage.reply_to_peer_id = MessagesController.getInstance(this.currentAccount).getInputPeer(tLRPC$TL_messageReplyHeader.reply_to_peer_id);
        }
        if (tLRPC$TL_messageReplyHeader.quote) {
            int i2 = tLRPC$TL_messageReplyHeader.flags;
            if ((i2 & 64) != 0) {
                tLRPC$TL_inputReplyToMessage.flags |= 4;
                tLRPC$TL_inputReplyToMessage.quote_text = tLRPC$TL_messageReplyHeader.quote_text;
            }
            if ((i2 & 128) != 0) {
                tLRPC$TL_inputReplyToMessage.flags |= 8;
                tLRPC$TL_inputReplyToMessage.quote_entities = tLRPC$TL_messageReplyHeader.quote_entities;
            }
            if ((i2 & 1024) != 0) {
                tLRPC$TL_inputReplyToMessage.flags |= 16;
                tLRPC$TL_inputReplyToMessage.quote_offset = tLRPC$TL_messageReplyHeader.quote_offset;
            }
        }
        return tLRPC$TL_inputReplyToMessage;
    }

    /* loaded from: classes3.dex */
    public class ImportingHistory {
        public long dialogId;
        public double estimatedUploadSpeed;
        public String historyPath;
        public long importId;
        private long lastUploadSize;
        private long lastUploadTime;
        public TLRPC$InputPeer peer;
        public long totalSize;
        public int uploadProgress;
        public long uploadedSize;
        public ArrayList<Uri> mediaPaths = new ArrayList<>();
        public HashSet<String> uploadSet = new HashSet<>();
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public ArrayList<String> uploadMedia = new ArrayList<>();
        public int timeUntilFinish = ConnectionsManager.DEFAULT_DATACENTER_ID;

        public ImportingHistory() {
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void initImport(TLRPC$InputFile tLRPC$InputFile) {
            TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport = new TLRPC$TL_messages_initHistoryImport();
            tLRPC$TL_messages_initHistoryImport.file = tLRPC$InputFile;
            tLRPC$TL_messages_initHistoryImport.media_count = this.mediaPaths.size();
            tLRPC$TL_messages_initHistoryImport.peer = this.peer;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_initHistoryImport, new 1(tLRPC$TL_messages_initHistoryImport), 2);
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 1 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_messages_initHistoryImport val$req;

            1(TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport) {
                this.val$req = tLRPC$TL_messages_initHistoryImport;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
                final TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport = this.val$req;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingHistory$1$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingHistory.1.this.lambda$run$0(tLObject, tLRPC$TL_messages_initHistoryImport, tLRPC$TL_error);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLObject tLObject, TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport, TLRPC$TL_error tLRPC$TL_error) {
                if (!(tLObject instanceof TLRPC$TL_messages_historyImport)) {
                    SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), tLRPC$TL_messages_initHistoryImport, tLRPC$TL_error);
                    return;
                }
                ImportingHistory importingHistory = ImportingHistory.this;
                importingHistory.importId = ((TLRPC$TL_messages_historyImport) tLObject).id;
                importingHistory.uploadSet.remove(importingHistory.historyPath);
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                if (ImportingHistory.this.uploadSet.isEmpty()) {
                    ImportingHistory.this.startImport();
                }
                ImportingHistory.this.lastUploadTime = SystemClock.elapsedRealtime();
                int size = ImportingHistory.this.uploadMedia.size();
                for (int i = 0; i < size; i++) {
                    SendMessagesHelper.this.getFileLoader().uploadFile(ImportingHistory.this.uploadMedia.get(i), false, true, ConnectionsManager.FileTypeFile);
                }
            }
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onFileFailedToUpload(String str) {
            if (str.equals(this.historyPath)) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
                TLRPC$TL_error tLRPC$TL_error = new TLRPC$TL_error();
                tLRPC$TL_error.code = 400;
                tLRPC$TL_error.text = "IMPORT_UPLOAD_FAILED";
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId), new TLRPC$TL_messages_initHistoryImport(), tLRPC$TL_error);
                return;
            }
            this.uploadSet.remove(str);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void addUploadProgress(String str, long j, float f) {
            this.uploadProgresses.put(str, Float.valueOf(f));
            this.uploadSize.put(str, Long.valueOf(j));
            this.uploadedSize = 0L;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long elapsedRealtime = SystemClock.elapsedRealtime();
            if (!str.equals(this.historyPath)) {
                long j2 = this.uploadedSize;
                long j3 = this.lastUploadSize;
                if (j2 != j3) {
                    long j4 = this.lastUploadTime;
                    if (elapsedRealtime != j4) {
                        double d = elapsedRealtime - j4;
                        Double.isNaN(d);
                        double d2 = j2 - j3;
                        Double.isNaN(d2);
                        double d3 = d2 / (d / 1000.0d);
                        double d4 = this.estimatedUploadSpeed;
                        if (d4 == 0.0d) {
                            this.estimatedUploadSpeed = d3;
                        } else {
                            this.estimatedUploadSpeed = (d3 * 0.01d) + (0.99d * d4);
                        }
                        double d5 = (this.totalSize - j2) * 1000;
                        double d6 = this.estimatedUploadSpeed;
                        Double.isNaN(d5);
                        this.timeUntilFinish = (int) (d5 / d6);
                        this.lastUploadSize = j2;
                        this.lastUploadTime = elapsedRealtime;
                    }
                }
            }
            int uploadedCount = (int) ((((float) getUploadedCount()) / ((float) getTotalCount())) * 100.0f);
            if (this.uploadProgress != uploadedCount) {
                this.uploadProgress = uploadedCount;
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onMediaImport(String str, long j, TLRPC$InputFile tLRPC$InputFile) {
            addUploadProgress(str, j, 1.0f);
            TLRPC$TL_messages_uploadImportedMedia tLRPC$TL_messages_uploadImportedMedia = new TLRPC$TL_messages_uploadImportedMedia();
            tLRPC$TL_messages_uploadImportedMedia.peer = this.peer;
            tLRPC$TL_messages_uploadImportedMedia.import_id = this.importId;
            tLRPC$TL_messages_uploadImportedMedia.file_name = new File(str).getName();
            MimeTypeMap singleton = MimeTypeMap.getSingleton();
            int lastIndexOf = tLRPC$TL_messages_uploadImportedMedia.file_name.lastIndexOf(46);
            String lowerCase = lastIndexOf != -1 ? tLRPC$TL_messages_uploadImportedMedia.file_name.substring(lastIndexOf + 1).toLowerCase() : "txt";
            String mimeTypeFromExtension = singleton.getMimeTypeFromExtension(lowerCase);
            if (mimeTypeFromExtension == null) {
                if ("opus".equals(lowerCase)) {
                    mimeTypeFromExtension = "audio/opus";
                } else {
                    mimeTypeFromExtension = "webp".equals(lowerCase) ? "image/webp" : "text/plain";
                }
            }
            if (mimeTypeFromExtension.equals("image/jpg") || mimeTypeFromExtension.equals("image/jpeg")) {
                TLRPC$TL_inputMediaUploadedPhoto tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                tLRPC$TL_inputMediaUploadedPhoto.file = tLRPC$InputFile;
                tLRPC$TL_messages_uploadImportedMedia.media = tLRPC$TL_inputMediaUploadedPhoto;
            } else {
                TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                tLRPC$TL_inputMediaUploadedDocument.file = tLRPC$InputFile;
                tLRPC$TL_inputMediaUploadedDocument.mime_type = mimeTypeFromExtension;
                tLRPC$TL_messages_uploadImportedMedia.media = tLRPC$TL_inputMediaUploadedDocument;
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_uploadImportedMedia, new 2(str), 2);
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 2 implements RequestDelegate {
            final /* synthetic */ String val$path;

            2(String str) {
                this.val$path = str;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                final String str = this.val$path;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingHistory$2$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingHistory.2.this.lambda$run$0(str);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(String str) {
                ImportingHistory.this.uploadSet.remove(str);
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                if (ImportingHistory.this.uploadSet.isEmpty()) {
                    ImportingHistory.this.startImport();
                }
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void startImport() {
            TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport = new TLRPC$TL_messages_startHistoryImport();
            tLRPC$TL_messages_startHistoryImport.peer = this.peer;
            tLRPC$TL_messages_startHistoryImport.import_id = this.importId;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_startHistoryImport, new 3(tLRPC$TL_messages_startHistoryImport));
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 3 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_messages_startHistoryImport val$req;

            3(TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport) {
                this.val$req = tLRPC$TL_messages_startHistoryImport;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
                final TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport = this.val$req;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingHistory$3$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingHistory.3.this.lambda$run$0(tLRPC$TL_error, tLRPC$TL_messages_startHistoryImport);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport) {
                SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                if (tLRPC$TL_error == null) {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                } else {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), tLRPC$TL_messages_startHistoryImport, tLRPC$TL_error);
                }
            }
        }

        public void setImportProgress(int i) {
            if (i == 100) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
            }
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
        }
    }

    /* loaded from: classes3.dex */
    public static class ImportingSticker {
        public boolean animated;
        public String emoji;
        public TLRPC$TL_inputStickerSetItem item;
        public String mimeType;
        public String path;
        public boolean validated;
        public VideoEditedInfo videoEditedInfo;

        public void uploadMedia(int i, TLRPC$InputFile tLRPC$InputFile, Runnable runnable) {
            TLRPC$TL_messages_uploadMedia tLRPC$TL_messages_uploadMedia = new TLRPC$TL_messages_uploadMedia();
            tLRPC$TL_messages_uploadMedia.peer = new TLRPC$TL_inputPeerSelf();
            TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
            tLRPC$TL_messages_uploadMedia.media = tLRPC$TL_inputMediaUploadedDocument;
            tLRPC$TL_inputMediaUploadedDocument.file = tLRPC$InputFile;
            tLRPC$TL_inputMediaUploadedDocument.mime_type = this.mimeType;
            ConnectionsManager.getInstance(i).sendRequest(tLRPC$TL_messages_uploadMedia, new 1(runnable), 2);
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 1 implements RequestDelegate {
            final /* synthetic */ Runnable val$onFinish;

            1(Runnable runnable) {
                this.val$onFinish = runnable;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(final TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                final Runnable runnable = this.val$onFinish;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingSticker$1$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingSticker.1.this.lambda$run$0(tLObject, runnable);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLObject tLObject, Runnable runnable) {
                if (tLObject instanceof TLRPC$TL_messageMediaDocument) {
                    ImportingSticker.this.item = new TLRPC$TL_inputStickerSetItem();
                    ImportingSticker.this.item.document = new TLRPC$TL_inputDocument();
                    ImportingSticker importingSticker = ImportingSticker.this;
                    TLRPC$TL_inputStickerSetItem tLRPC$TL_inputStickerSetItem = importingSticker.item;
                    TLRPC$InputDocument tLRPC$InputDocument = tLRPC$TL_inputStickerSetItem.document;
                    TLRPC$Document tLRPC$Document = ((TLRPC$TL_messageMediaDocument) tLObject).document;
                    tLRPC$InputDocument.id = tLRPC$Document.id;
                    tLRPC$InputDocument.access_hash = tLRPC$Document.access_hash;
                    tLRPC$InputDocument.file_reference = tLRPC$Document.file_reference;
                    String str = importingSticker.emoji;
                    if (str == null) {
                        str = "";
                    }
                    tLRPC$TL_inputStickerSetItem.emoji = str;
                    importingSticker.mimeType = tLRPC$Document.mime_type;
                } else {
                    ImportingSticker importingSticker2 = ImportingSticker.this;
                    if (importingSticker2.animated) {
                        importingSticker2.mimeType = "application/x-bad-tgsticker";
                    }
                }
                runnable.run();
            }
        }
    }

    /* loaded from: classes3.dex */
    public class ImportingStickers {
        public double estimatedUploadSpeed;
        private long lastUploadSize;
        private long lastUploadTime;
        public String shortName;
        public String software;
        public String title;
        public long totalSize;
        public int uploadProgress;
        public long uploadedSize;
        public HashMap<String, ImportingSticker> uploadSet = new HashMap<>();
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public ArrayList<ImportingSticker> uploadMedia = new ArrayList<>();
        public int timeUntilFinish = ConnectionsManager.DEFAULT_DATACENTER_ID;

        public ImportingStickers() {
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void initImport() {
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
            this.lastUploadTime = SystemClock.elapsedRealtime();
            int size = this.uploadMedia.size();
            for (int i = 0; i < size; i++) {
                SendMessagesHelper.this.getFileLoader().uploadFile(this.uploadMedia.get(i).path, false, true, ConnectionsManager.FileTypeFile);
            }
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onFileFailedToUpload(String str) {
            ImportingSticker remove = this.uploadSet.remove(str);
            if (remove != null) {
                this.uploadMedia.remove(remove);
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void addUploadProgress(String str, long j, float f) {
            this.uploadProgresses.put(str, Float.valueOf(f));
            this.uploadSize.put(str, Long.valueOf(j));
            this.uploadedSize = 0L;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long elapsedRealtime = SystemClock.elapsedRealtime();
            long j2 = this.uploadedSize;
            long j3 = this.lastUploadSize;
            if (j2 != j3) {
                long j4 = this.lastUploadTime;
                if (elapsedRealtime != j4) {
                    double d = elapsedRealtime - j4;
                    Double.isNaN(d);
                    double d2 = j2 - j3;
                    Double.isNaN(d2);
                    double d3 = d2 / (d / 1000.0d);
                    double d4 = this.estimatedUploadSpeed;
                    if (d4 == 0.0d) {
                        this.estimatedUploadSpeed = d3;
                    } else {
                        this.estimatedUploadSpeed = (d3 * 0.01d) + (0.99d * d4);
                    }
                    double d5 = (this.totalSize - j2) * 1000;
                    double d6 = this.estimatedUploadSpeed;
                    Double.isNaN(d5);
                    this.timeUntilFinish = (int) (d5 / d6);
                    this.lastUploadSize = j2;
                    this.lastUploadTime = elapsedRealtime;
                }
            }
            int uploadedCount = (int) ((((float) getUploadedCount()) / ((float) getTotalCount())) * 100.0f);
            if (this.uploadProgress != uploadedCount) {
                this.uploadProgress = uploadedCount;
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onMediaImport(final String str, long j, TLRPC$InputFile tLRPC$InputFile) {
            addUploadProgress(str, j, 1.0f);
            ImportingSticker importingSticker = this.uploadSet.get(str);
            if (importingSticker == null) {
                return;
            }
            importingSticker.uploadMedia(SendMessagesHelper.this.currentAccount, tLRPC$InputFile, new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingStickers$$ExternalSyntheticLambda0
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.ImportingStickers.this.lambda$onMediaImport$0(str);
                }
            });
        }

        /* JADX INFO: Access modifiers changed from: private */
        public /* synthetic */ void lambda$onMediaImport$0(String str) {
            this.uploadSet.remove(str);
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
            if (this.uploadSet.isEmpty()) {
                startImport();
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void startImport() {
            TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet = new TLRPC$TL_stickers_createStickerSet();
            tLRPC$TL_stickers_createStickerSet.user_id = new TLRPC$TL_inputUserSelf();
            tLRPC$TL_stickers_createStickerSet.title = this.title;
            tLRPC$TL_stickers_createStickerSet.short_name = this.shortName;
            String str = this.software;
            if (str != null) {
                tLRPC$TL_stickers_createStickerSet.software = str;
                tLRPC$TL_stickers_createStickerSet.flags |= 8;
            }
            int size = this.uploadMedia.size();
            for (int i = 0; i < size; i++) {
                TLRPC$TL_inputStickerSetItem tLRPC$TL_inputStickerSetItem = this.uploadMedia.get(i).item;
                if (tLRPC$TL_inputStickerSetItem != null) {
                    tLRPC$TL_stickers_createStickerSet.stickers.add(tLRPC$TL_inputStickerSetItem);
                }
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_stickers_createStickerSet, new 1(tLRPC$TL_stickers_createStickerSet));
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 1 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_stickers_createStickerSet val$req;

            1(TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet) {
                this.val$req = tLRPC$TL_stickers_createStickerSet;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
                final TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet = this.val$req;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingStickers$1$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingStickers.1.this.lambda$run$0(tLRPC$TL_error, tLRPC$TL_stickers_createStickerSet, tLObject);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet, TLObject tLObject) {
                SendMessagesHelper.this.importingStickersMap.remove(ImportingStickers.this.shortName);
                if (tLRPC$TL_error == null) {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName);
                } else {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName, tLRPC$TL_stickers_createStickerSet, tLRPC$TL_error);
                }
                if (tLObject instanceof TLRPC$TL_messages_stickerSet) {
                    NotificationCenter notificationCenter = SendMessagesHelper.this.getNotificationCenter();
                    int i = NotificationCenter.stickersImportComplete;
                    if (notificationCenter.hasObservers(i)) {
                        SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(i, tLObject);
                    } else {
                        SendMessagesHelper.this.getMediaDataController().toggleStickerSet(null, tLObject, 2, null, false, false);
                    }
                }
            }
        }

        public void setImportProgress(int i) {
            if (i == 100) {
                SendMessagesHelper.this.importingStickersMap.remove(this.shortName);
            }
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
        }
    }

    static {
        int availableProcessors = Build.VERSION.SDK_INT >= 17 ? Runtime.getRuntime().availableProcessors() : 2;
        mediaSendThreadPool = new ThreadPoolExecutor(availableProcessors, availableProcessors, 60L, TimeUnit.SECONDS, new LinkedBlockingQueue());
        Instance = new SendMessagesHelper[4];
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* loaded from: classes3.dex */
    public static class MediaSendPrepareWorker {
        public volatile String parentObject;
        public volatile TLRPC$TL_photo photo;
        public CountDownLatch sync;

        private MediaSendPrepareWorker() {
        }
    }

    @SuppressLint({"MissingPermission"})
    /* loaded from: classes3.dex */
    public static class LocationProvider {
        private LocationProviderDelegate delegate;
        private Location lastKnownLocation;
        private LocationManager locationManager;
        private Runnable locationQueryCancelRunnable;
        private GpsLocationListener gpsLocationListener = new GpsLocationListener();
        private GpsLocationListener networkLocationListener = new GpsLocationListener();

        /* loaded from: classes3.dex */
        public interface LocationProviderDelegate {
            void onLocationAcquired(Location location);

            void onUnableLocationAcquire();
        }

        /* JADX INFO: Access modifiers changed from: private */
        /* loaded from: classes3.dex */
        public class GpsLocationListener implements LocationListener {
            @Override // android.location.LocationListener
            public void onProviderDisabled(String str) {
            }

            @Override // android.location.LocationListener
            public void onProviderEnabled(String str) {
            }

            @Override // android.location.LocationListener
            public void onStatusChanged(String str, int i, Bundle bundle) {
            }

            private GpsLocationListener() {
            }

            @Override // android.location.LocationListener
            public void onLocationChanged(Location location) {
                if (location == null || LocationProvider.this.locationQueryCancelRunnable == null) {
                    return;
                }
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("found location " + location);
                }
                LocationProvider.this.lastKnownLocation = location;
                if (location.getAccuracy() < 100.0f) {
                    if (LocationProvider.this.delegate != null) {
                        LocationProvider.this.delegate.onLocationAcquired(location);
                    }
                    if (LocationProvider.this.locationQueryCancelRunnable != null) {
                        AndroidUtilities.cancelRunOnUIThread(LocationProvider.this.locationQueryCancelRunnable);
                    }
                    LocationProvider.this.cleanup();
                }
            }
        }

        public LocationProvider() {
        }

        public LocationProvider(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        public void setDelegate(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void cleanup() {
            this.locationManager.removeUpdates(this.gpsLocationListener);
            this.locationManager.removeUpdates(this.networkLocationListener);
            this.lastKnownLocation = null;
            this.locationQueryCancelRunnable = null;
        }

        public void start() {
            if (this.locationManager == null) {
                this.locationManager = (LocationManager) ApplicationLoader.applicationContext.getSystemService("location");
            }
            try {
                this.locationManager.requestLocationUpdates("gps", 1L, 0.0f, this.gpsLocationListener);
            } catch (Exception e) {
                FileLog.e(e);
            }
            try {
                this.locationManager.requestLocationUpdates("network", 1L, 0.0f, this.networkLocationListener);
            } catch (Exception e2) {
                FileLog.e(e2);
            }
            try {
                Location lastKnownLocation = this.locationManager.getLastKnownLocation("gps");
                this.lastKnownLocation = lastKnownLocation;
                if (lastKnownLocation == null) {
                    this.lastKnownLocation = this.locationManager.getLastKnownLocation("network");
                }
            } catch (Exception e3) {
                FileLog.e(e3);
            }
            Runnable runnable = this.locationQueryCancelRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            Runnable runnable2 = new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.LocationProvider.this.lambda$start$0();
                }
            };
            this.locationQueryCancelRunnable = runnable2;
            AndroidUtilities.runOnUIThread(runnable2, 5000L);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public /* synthetic */ void lambda$start$0() {
            LocationProviderDelegate locationProviderDelegate = this.delegate;
            if (locationProviderDelegate != null) {
                Location location = this.lastKnownLocation;
                if (location != null) {
                    locationProviderDelegate.onLocationAcquired(location);
                } else {
                    locationProviderDelegate.onUnableLocationAcquire();
                }
            }
            cleanup();
        }

        public void stop() {
            if (this.locationManager == null) {
                return;
            }
            Runnable runnable = this.locationQueryCancelRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            cleanup();
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    /* loaded from: classes3.dex */
    public class DelayedMessageSendAfterRequest {
        public DelayedMessage delayedMessage;
        public MessageObject msgObj;
        public ArrayList<MessageObject> msgObjs;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public TLObject request;
        public boolean scheduled;

        protected DelayedMessageSendAfterRequest() {
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    /* loaded from: classes3.dex */
    public class DelayedMessage {
        public TLRPC$EncryptedChat encryptedChat;
        public HashMap<Object, Object> extraHashMap;
        public int finalGroupMessage;
        public long groupId;
        public String httpLocation;
        public ArrayList<String> httpLocations;
        public ArrayList<TLRPC$InputMedia> inputMedias;
        public TLRPC$InputMedia inputUploadMedia;
        public TLObject locationParent;
        public ArrayList<TLRPC$PhotoSize> locations;
        public ArrayList<MessageObject> messageObjects;
        public ArrayList<TLRPC$Message> messages;
        public MessageObject obj;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public long peer;
        public boolean performMediaUpload;
        public TLRPC$PhotoSize photoSize;
        ArrayList<DelayedMessageSendAfterRequest> requests;
        public boolean retriedToSend;
        public boolean scheduled;
        public TLObject sendEncryptedRequest;
        public TLObject sendRequest;
        public int topMessageId;
        public int type;
        public VideoEditedInfo videoEditedInfo;
        public ArrayList<VideoEditedInfo> videoEditedInfos;

        public DelayedMessage(long j) {
            this.peer = j;
        }

        public void initForGroup(long j) {
            this.type = 4;
            this.groupId = j;
            this.messageObjects = new ArrayList<>();
            this.messages = new ArrayList<>();
            this.inputMedias = new ArrayList<>();
            this.originalPaths = new ArrayList<>();
            this.parentObjects = new ArrayList<>();
            this.extraHashMap = new HashMap<>();
            this.locations = new ArrayList<>();
            this.httpLocations = new ArrayList<>();
            this.videoEditedInfos = new ArrayList<>();
        }

        public void addDelayedRequest(TLObject tLObject, MessageObject messageObject, String str, Object obj, DelayedMessage delayedMessage, boolean z) {
            DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = new DelayedMessageSendAfterRequest();
            delayedMessageSendAfterRequest.request = tLObject;
            delayedMessageSendAfterRequest.msgObj = messageObject;
            delayedMessageSendAfterRequest.originalPath = str;
            delayedMessageSendAfterRequest.delayedMessage = delayedMessage;
            delayedMessageSendAfterRequest.parentObject = obj;
            delayedMessageSendAfterRequest.scheduled = z;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(delayedMessageSendAfterRequest);
        }

        public void addDelayedRequest(TLObject tLObject, ArrayList<MessageObject> arrayList, ArrayList<String> arrayList2, ArrayList<Object> arrayList3, DelayedMessage delayedMessage, boolean z) {
            DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = new DelayedMessageSendAfterRequest();
            delayedMessageSendAfterRequest.request = tLObject;
            delayedMessageSendAfterRequest.msgObjs = arrayList;
            delayedMessageSendAfterRequest.originalPaths = arrayList2;
            delayedMessageSendAfterRequest.delayedMessage = delayedMessage;
            delayedMessageSendAfterRequest.parentObjects = arrayList3;
            delayedMessageSendAfterRequest.scheduled = z;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(delayedMessageSendAfterRequest);
        }

        public void sendDelayedRequests() {
            ArrayList<DelayedMessageSendAfterRequest> arrayList = this.requests;
            if (arrayList != null) {
                int i = this.type;
                if (i == 4 || i == 0) {
                    int size = arrayList.size();
                    for (int i2 = 0; i2 < size; i2++) {
                        DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = this.requests.get(i2);
                        TLObject tLObject = delayedMessageSendAfterRequest.request;
                        if (tLObject instanceof TLRPC$TL_messages_sendEncryptedMultiMedia) {
                            SendMessagesHelper.this.getSecretChatHelper().performSendEncryptedRequest((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessageSendAfterRequest.request, this);
                        } else if (!(tLObject instanceof TLRPC$TL_messages_sendMultiMedia)) {
                            SendMessagesHelper.this.performSendMessageRequest(tLObject, delayedMessageSendAfterRequest.msgObj, delayedMessageSendAfterRequest.originalPath, delayedMessageSendAfterRequest.delayedMessage, delayedMessageSendAfterRequest.parentObject, null, delayedMessageSendAfterRequest.scheduled);
                        } else {
                            SendMessagesHelper.this.performSendMessageRequestMulti((TLRPC$TL_messages_sendMultiMedia) tLObject, delayedMessageSendAfterRequest.msgObjs, delayedMessageSendAfterRequest.originalPaths, delayedMessageSendAfterRequest.parentObjects, delayedMessageSendAfterRequest.delayedMessage, delayedMessageSendAfterRequest.scheduled);
                        }
                    }
                    this.requests = null;
                }
            }
        }

        public void markAsError() {
            if (this.type == 4) {
                for (int i = 0; i < this.messageObjects.size(); i++) {
                    MessageObject messageObject = this.messageObjects.get(i);
                    SendMessagesHelper.this.getMessagesStorage().markMessageAsSendError(messageObject.messageOwner, messageObject.scheduled ? 1 : 0);
                    messageObject.messageOwner.send_state = 2;
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                    SendMessagesHelper.this.processSentMessage(messageObject.getId());
                    SendMessagesHelper.this.removeFromUploadingMessages(messageObject.getId(), this.scheduled);
                }
                HashMap hashMap = SendMessagesHelper.this.delayedMessages;
                hashMap.remove("group_" + this.groupId);
            } else {
                MessagesStorage messagesStorage = SendMessagesHelper.this.getMessagesStorage();
                MessageObject messageObject2 = this.obj;
                messagesStorage.markMessageAsSendError(messageObject2.messageOwner, messageObject2.scheduled ? 1 : 0);
                this.obj.messageOwner.send_state = 2;
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(this.obj.getId()));
                SendMessagesHelper.this.processSentMessage(this.obj.getId());
                SendMessagesHelper.this.removeFromUploadingMessages(this.obj.getId(), this.scheduled);
            }
            sendDelayedRequests();
        }
    }

    public static SendMessagesHelper getInstance(int i) {
        SendMessagesHelper sendMessagesHelper = Instance[i];
        if (sendMessagesHelper == null) {
            synchronized (SendMessagesHelper.class) {
                sendMessagesHelper = Instance[i];
                if (sendMessagesHelper == null) {
                    SendMessagesHelper[] sendMessagesHelperArr = Instance;
                    SendMessagesHelper sendMessagesHelper2 = new SendMessagesHelper(i);
                    sendMessagesHelperArr[i] = sendMessagesHelper2;
                    sendMessagesHelper = sendMessagesHelper2;
                }
            }
        }
        return sendMessagesHelper;
    }

    public SendMessagesHelper(int i) {
        super(i);
        this.delayedMessages = new HashMap<>();
        this.unsentMessages = new SparseArray<>();
        this.sendingMessages = new SparseArray<>();
        this.editingMessages = new SparseArray<>();
        this.uploadMessages = new SparseArray<>();
        this.sendingMessagesIdDialogs = new LongSparseArray<>();
        this.uploadingMessagesIdDialogs = new LongSparseArray<>();
        this.waitingForLocation = new HashMap<>();
        this.waitingForCallback = new HashMap<>();
        this.waitingForCallbackMap = new HashMap<>();
        this.waitingForVote = new HashMap<>();
        this.voteSendTime = new LongSparseArray<>();
        this.importingHistoryFiles = new HashMap<>();
        this.importingHistoryMap = new LongSparseArray<>();
        this.importingStickersFiles = new HashMap<>();
        this.importingStickersMap = new HashMap<>();
        this.locationProvider = new LocationProvider(new LocationProvider.LocationProviderDelegate() { // from class: org.telegram.messenger.SendMessagesHelper.1
            @Override // org.telegram.messenger.SendMessagesHelper.LocationProvider.LocationProviderDelegate
            public void onLocationAcquired(Location location) {
                SendMessagesHelper.this.sendLocation(location);
                SendMessagesHelper.this.waitingForLocation.clear();
            }

            @Override // org.telegram.messenger.SendMessagesHelper.LocationProvider.LocationProviderDelegate
            public void onUnableLocationAcquire() {
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.wasUnableToFindCurrentLocation, new HashMap(SendMessagesHelper.this.waitingForLocation));
                SendMessagesHelper.this.waitingForLocation.clear();
            }
        });
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda22
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$new$0();
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$new$0() {
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadProgressChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingStarted);
        getNotificationCenter().addObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidFailedLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoadFailed);
    }

    public void cleanup() {
        this.delayedMessages.clear();
        this.unsentMessages.clear();
        this.sendingMessages.clear();
        this.editingMessages.clear();
        this.sendingMessagesIdDialogs.clear();
        this.uploadMessages.clear();
        this.uploadingMessagesIdDialogs.clear();
        this.waitingForLocation.clear();
        this.waitingForCallback.clear();
        this.waitingForVote.clear();
        this.importingHistoryFiles.clear();
        this.importingHistoryMap.clear();
        this.importingStickersFiles.clear();
        this.importingStickersMap.clear();
        this.locationProvider.stop();
    }

    @Override // org.telegram.messenger.NotificationCenter.NotificationCenterDelegate
    public void didReceivedNotification(int i, int i2, Object... objArr) {
        String str;
        ArrayList<DelayedMessage> arrayList;
        char c;
        final MessageObject messageObject;
        MessageObject messageObject2;
        String str2;
        ArrayList<DelayedMessage> arrayList2;
        ArrayList<DelayedMessage> arrayList3;
        int i3;
        int i4;
        int i5;
        TLRPC$InputMedia tLRPC$InputMedia;
        ArrayList<DelayedMessage> arrayList4;
        TLRPC$InputFile tLRPC$InputFile;
        String str3;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile;
        int i6;
        TLObject tLObject;
        TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage;
        ArrayList<DelayedMessage> arrayList5;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile2;
        int i7;
        String str4;
        int i8;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$PhotoSize tLRPC$PhotoSize2;
        int i9 = 0;
        boolean z = true;
        if (i == NotificationCenter.fileUploadProgressChanged) {
            String str5 = (String) objArr[0];
            ImportingHistory importingHistory = this.importingHistoryFiles.get(str5);
            if (importingHistory != null) {
                Long l = (Long) objArr[1];
                importingHistory.addUploadProgress(str5, l.longValue(), ((float) l.longValue()) / ((float) ((Long) objArr[2]).longValue()));
            }
            ImportingStickers importingStickers = this.importingStickersFiles.get(str5);
            if (importingStickers != null) {
                Long l2 = (Long) objArr[1];
                importingStickers.addUploadProgress(str5, l2.longValue(), ((float) l2.longValue()) / ((float) ((Long) objArr[2]).longValue()));
            }
        } else if (i == NotificationCenter.fileUploaded) {
            String str6 = (String) objArr[0];
            TLRPC$InputFile tLRPC$InputFile2 = (TLRPC$InputFile) objArr[1];
            TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile3 = (TLRPC$InputEncryptedFile) objArr[2];
            ImportingHistory importingHistory2 = this.importingHistoryFiles.get(str6);
            if (importingHistory2 != null) {
                if (str6.equals(importingHistory2.historyPath)) {
                    importingHistory2.initImport(tLRPC$InputFile2);
                } else {
                    importingHistory2.onMediaImport(str6, ((Long) objArr[5]).longValue(), tLRPC$InputFile2);
                }
            }
            ImportingStickers importingStickers2 = this.importingStickersFiles.get(str6);
            if (importingStickers2 != null) {
                importingStickers2.onMediaImport(str6, ((Long) objArr[5]).longValue(), tLRPC$InputFile2);
            }
            ArrayList<DelayedMessage> arrayList6 = this.delayedMessages.get(str6);
            if (arrayList6 != null) {
                while (i9 < arrayList6.size()) {
                    DelayedMessage delayedMessage = arrayList6.get(i9);
                    TLObject tLObject2 = delayedMessage.sendRequest;
                    if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
                        tLRPC$InputMedia = ((TLRPC$TL_messages_sendMedia) tLObject2).media;
                    } else if (tLObject2 instanceof TLRPC$TL_messages_editMessage) {
                        tLRPC$InputMedia = ((TLRPC$TL_messages_editMessage) tLObject2).media;
                    } else {
                        tLRPC$InputMedia = tLObject2 instanceof TLRPC$TL_messages_sendMultiMedia ? (TLRPC$InputMedia) delayedMessage.extraHashMap.get(str6) : null;
                    }
                    if (tLRPC$InputFile2 == null || tLRPC$InputMedia == null) {
                        arrayList4 = arrayList6;
                        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile4 = tLRPC$InputEncryptedFile3;
                        tLRPC$InputFile = tLRPC$InputFile2;
                        str3 = str6;
                        tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile4;
                        if (tLRPC$InputEncryptedFile != null && (tLObject = delayedMessage.sendEncryptedRequest) != null) {
                            if (delayedMessage.type == 4) {
                                TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) tLObject;
                                TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile5 = (TLRPC$InputEncryptedFile) delayedMessage.extraHashMap.get(str3);
                                int indexOf = tLRPC$TL_messages_sendEncryptedMultiMedia.files.indexOf(tLRPC$InputEncryptedFile5);
                                if (indexOf >= 0) {
                                    tLRPC$TL_messages_sendEncryptedMultiMedia.files.set(indexOf, tLRPC$InputEncryptedFile);
                                    if (tLRPC$InputEncryptedFile5.id == 1) {
                                        delayedMessage.photoSize = (TLRPC$PhotoSize) delayedMessage.extraHashMap.get(str3 + "_t");
                                    }
                                    tLRPC$TL_decryptedMessage = tLRPC$TL_messages_sendEncryptedMultiMedia.messages.get(indexOf);
                                } else {
                                    tLRPC$TL_decryptedMessage = null;
                                }
                            } else {
                                tLRPC$TL_decryptedMessage = (TLRPC$TL_decryptedMessage) tLObject;
                            }
                            if (tLRPC$TL_decryptedMessage != null) {
                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                                if ((tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaVideo) || (tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaPhoto) || (tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaDocument)) {
                                    tLRPC$TL_decryptedMessage.media.size = ((Long) objArr[5]).longValue();
                                }
                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia2 = tLRPC$TL_decryptedMessage.media;
                                tLRPC$DecryptedMessageMedia2.key = (byte[]) objArr[3];
                                tLRPC$DecryptedMessageMedia2.iv = (byte[]) objArr[4];
                                if (delayedMessage.type == 4) {
                                    uploadMultiMedia(delayedMessage, null, tLRPC$InputEncryptedFile, str3);
                                } else {
                                    SecretChatHelper secretChatHelper = getSecretChatHelper();
                                    MessageObject messageObject3 = delayedMessage.obj;
                                    secretChatHelper.performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject3.messageOwner, delayedMessage.encryptedChat, tLRPC$InputEncryptedFile, delayedMessage.originalPath, messageObject3);
                                }
                            }
                            arrayList4.remove(i9);
                            i9--;
                        }
                        i6 = 1;
                    } else {
                        int i10 = delayedMessage.type;
                        if (i10 == 0) {
                            tLRPC$InputMedia.file = tLRPC$InputFile2;
                            arrayList5 = arrayList6;
                            tLRPC$InputFile = tLRPC$InputFile2;
                            i7 = i9;
                            str4 = str6;
                            tLRPC$InputEncryptedFile2 = tLRPC$InputEncryptedFile3;
                            performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, delayedMessage, true, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                        } else {
                            arrayList5 = arrayList6;
                            tLRPC$InputEncryptedFile2 = tLRPC$InputEncryptedFile3;
                            tLRPC$InputFile = tLRPC$InputFile2;
                            i7 = i9;
                            str4 = str6;
                            if (i10 == z) {
                                if (tLRPC$InputMedia.file == null) {
                                    tLRPC$InputMedia.file = tLRPC$InputFile;
                                    if (tLRPC$InputMedia.thumb == null && (tLRPC$PhotoSize2 = delayedMessage.photoSize) != null && tLRPC$PhotoSize2.location != null) {
                                        performSendDelayedMessage(delayedMessage);
                                    } else {
                                        performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                    }
                                } else {
                                    tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                    tLRPC$InputMedia.flags |= 4;
                                    performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                }
                            } else if (i10 == 2) {
                                if (tLRPC$InputMedia.file == null) {
                                    tLRPC$InputMedia.file = tLRPC$InputFile;
                                    if (tLRPC$InputMedia.thumb == null && (tLRPC$PhotoSize = delayedMessage.photoSize) != null && tLRPC$PhotoSize.location != null) {
                                        performSendDelayedMessage(delayedMessage);
                                    } else {
                                        performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                    }
                                } else {
                                    tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                    tLRPC$InputMedia.flags |= 4;
                                    performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                }
                            } else if (i10 == 3) {
                                tLRPC$InputMedia.file = tLRPC$InputFile;
                                performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                            } else {
                                if (i10 == 4) {
                                    if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument) {
                                        if (tLRPC$InputMedia.file == null) {
                                            tLRPC$InputMedia.file = tLRPC$InputFile;
                                            HashMap<Object, Object> hashMap = delayedMessage.extraHashMap;
                                            StringBuilder sb = new StringBuilder();
                                            str3 = str4;
                                            sb.append(str3);
                                            sb.append("_i");
                                            int indexOf2 = delayedMessage.messageObjects.indexOf((MessageObject) hashMap.get(sb.toString()));
                                            TLRPC$PhotoSize tLRPC$PhotoSize3 = (TLRPC$PhotoSize) delayedMessage.extraHashMap.get(str3 + "_t");
                                            delayedMessage.photoSize = tLRPC$PhotoSize3;
                                            if (tLRPC$InputMedia.thumb == null && tLRPC$PhotoSize3 != null && tLRPC$PhotoSize3.location != null) {
                                                delayedMessage.performMediaUpload = z;
                                                performSendDelayedMessage(delayedMessage, indexOf2);
                                            } else {
                                                uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, str3);
                                            }
                                        } else {
                                            str3 = str4;
                                            tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                            tLRPC$InputMedia.flags |= 4;
                                            uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, (String) delayedMessage.extraHashMap.get(str3 + "_o"));
                                        }
                                    } else {
                                        str3 = str4;
                                        tLRPC$InputMedia.file = tLRPC$InputFile;
                                        uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, str3);
                                    }
                                    arrayList4 = arrayList5;
                                    i8 = i7;
                                    arrayList4.remove(i8);
                                    i9 = i8 - 1;
                                    tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                                    i6 = 1;
                                } else {
                                    str3 = str4;
                                }
                                arrayList4 = arrayList5;
                                i8 = i7;
                                arrayList4.remove(i8);
                                i9 = i8 - 1;
                                tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                                i6 = 1;
                            }
                        }
                        arrayList4 = arrayList5;
                        i8 = i7;
                        str3 = str4;
                        arrayList4.remove(i8);
                        i9 = i8 - 1;
                        tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                        i6 = 1;
                    }
                    i9 += i6;
                    arrayList6 = arrayList4;
                    str6 = str3;
                    tLRPC$InputFile2 = tLRPC$InputFile;
                    z = true;
                    tLRPC$InputEncryptedFile3 = tLRPC$InputEncryptedFile;
                }
                String str7 = str6;
                if (arrayList6.isEmpty()) {
                    this.delayedMessages.remove(str7);
                }
            }
        } else {
            MessageObject messageObject4 = null;
            if (i == NotificationCenter.fileUploadFailed) {
                String str8 = (String) objArr[0];
                boolean booleanValue = ((Boolean) objArr[1]).booleanValue();
                ImportingHistory importingHistory3 = this.importingHistoryFiles.get(str8);
                if (importingHistory3 != null) {
                    importingHistory3.onFileFailedToUpload(str8);
                }
                ImportingStickers importingStickers3 = this.importingStickersFiles.get(str8);
                if (importingStickers3 != null) {
                    importingStickers3.onFileFailedToUpload(str8);
                }
                ArrayList<DelayedMessage> arrayList7 = this.delayedMessages.get(str8);
                if (arrayList7 != null) {
                    while (i9 < arrayList7.size()) {
                        DelayedMessage delayedMessage2 = arrayList7.get(i9);
                        if ((booleanValue && delayedMessage2.sendEncryptedRequest != null) || (!booleanValue && delayedMessage2.sendRequest != null)) {
                            delayedMessage2.markAsError();
                            arrayList7.remove(i9);
                            i9--;
                        }
                        i9++;
                    }
                    if (arrayList7.isEmpty()) {
                        this.delayedMessages.remove(str8);
                    }
                }
            } else if (i == NotificationCenter.filePreparingStarted) {
                MessageObject messageObject5 = (MessageObject) objArr[0];
                if (messageObject5.getId() == 0) {
                    return;
                }
                String str9 = (String) objArr[1];
                ArrayList<DelayedMessage> arrayList8 = this.delayedMessages.get(messageObject5.messageOwner.attachPath);
                if (arrayList8 != null) {
                    while (true) {
                        if (i9 >= arrayList8.size()) {
                            break;
                        }
                        DelayedMessage delayedMessage3 = arrayList8.get(i9);
                        if (delayedMessage3.type == 4) {
                            int indexOf3 = delayedMessage3.messageObjects.indexOf(messageObject5);
                            delayedMessage3.photoSize = (TLRPC$PhotoSize) delayedMessage3.extraHashMap.get(messageObject5.messageOwner.attachPath + "_t");
                            delayedMessage3.performMediaUpload = true;
                            performSendDelayedMessage(delayedMessage3, indexOf3);
                            arrayList8.remove(i9);
                            break;
                        } else if (delayedMessage3.obj == messageObject5) {
                            delayedMessage3.videoEditedInfo = null;
                            performSendDelayedMessage(delayedMessage3);
                            arrayList8.remove(i9);
                            break;
                        } else {
                            i9++;
                        }
                    }
                    if (arrayList8.isEmpty()) {
                        this.delayedMessages.remove(messageObject5.messageOwner.attachPath);
                    }
                }
            } else if (i == NotificationCenter.fileNewChunkAvailable) {
                MessageObject messageObject6 = (MessageObject) objArr[0];
                if (messageObject6.getId() == 0) {
                    return;
                }
                long longValue = ((Long) objArr[2]).longValue();
                long longValue2 = ((Long) objArr[3]).longValue();
                getFileLoader().checkUploadNewDataAvailable((String) objArr[1], DialogObject.isEncryptedDialog(messageObject6.getDialogId()), longValue, longValue2, (Float) objArr[4]);
                if (longValue2 == 0 || (arrayList3 = this.delayedMessages.get(messageObject6.messageOwner.attachPath)) == null) {
                    return;
                }
                for (int i11 = 0; i11 < arrayList3.size(); i11++) {
                    DelayedMessage delayedMessage4 = arrayList3.get(i11);
                    if (delayedMessage4.type == 4) {
                        int i12 = 0;
                        while (true) {
                            if (i12 >= delayedMessage4.messageObjects.size()) {
                                break;
                            }
                            MessageObject messageObject7 = delayedMessage4.messageObjects.get(i12);
                            if (messageObject7 == messageObject6) {
                                delayedMessage4.obj.shouldRemoveVideoEditedInfo = true;
                                messageObject7.messageOwner.params.remove("ve");
                                messageObject7.messageOwner.media.document.size = longValue2;
                                ArrayList<TLRPC$Message> arrayList9 = new ArrayList<>();
                                arrayList9.add(messageObject7.messageOwner);
                                if (messageObject7.isQuickReply()) {
                                    i4 = messageObject7.getQuickReplyId();
                                    i5 = 5;
                                } else if (messageObject7.scheduled) {
                                    i4 = 0;
                                    i5 = 1;
                                } else {
                                    i4 = 0;
                                    i5 = 0;
                                }
                                getMessagesStorage().putMessages(arrayList9, false, true, false, 0, i5, i4);
                            } else {
                                i12++;
                            }
                        }
                    } else {
                        MessageObject messageObject8 = delayedMessage4.obj;
                        if (messageObject8 == messageObject6) {
                            messageObject8.shouldRemoveVideoEditedInfo = true;
                            messageObject8.messageOwner.params.remove("ve");
                            delayedMessage4.obj.messageOwner.media.document.size = longValue2;
                            ArrayList<TLRPC$Message> arrayList10 = new ArrayList<>();
                            arrayList10.add(delayedMessage4.obj.messageOwner);
                            if (delayedMessage4.obj.isQuickReply()) {
                                i9 = delayedMessage4.obj.getQuickReplyId();
                                i3 = 5;
                            } else {
                                i3 = delayedMessage4.obj.scheduled ? 1 : 0;
                            }
                            getMessagesStorage().putMessages(arrayList10, false, true, false, 0, i3, i9);
                            return;
                        }
                    }
                }
            } else if (i == NotificationCenter.filePreparingFailed) {
                MessageObject messageObject9 = (MessageObject) objArr[0];
                if (messageObject9.getId() == 0 || (arrayList2 = this.delayedMessages.get((str2 = (String) objArr[1]))) == null) {
                    return;
                }
                int i13 = 0;
                while (i13 < arrayList2.size()) {
                    DelayedMessage delayedMessage5 = arrayList2.get(i13);
                    if (delayedMessage5.type == 4) {
                        for (int i14 = 0; i14 < delayedMessage5.messages.size(); i14++) {
                            if (delayedMessage5.messageObjects.get(i14) == messageObject9) {
                                delayedMessage5.markAsError();
                                arrayList2.remove(i13);
                                i13--;
                                break;
                            }
                        }
                        i13++;
                    } else if (delayedMessage5.obj == messageObject9) {
                        delayedMessage5.markAsError();
                        arrayList2.remove(i13);
                        i13--;
                        break;
                        i13++;
                    } else {
                        i13++;
                    }
                }
                if (arrayList2.isEmpty()) {
                    this.delayedMessages.remove(str2);
                }
            } else if (i == NotificationCenter.httpFileDidLoad) {
                final String str10 = (String) objArr[0];
                ArrayList<DelayedMessage> arrayList11 = this.delayedMessages.get(str10);
                if (arrayList11 != null) {
                    int i15 = 0;
                    while (i15 < arrayList11.size()) {
                        final DelayedMessage delayedMessage6 = arrayList11.get(i15);
                        int i16 = delayedMessage6.type;
                        if (i16 == 0) {
                            messageObject = delayedMessage6.obj;
                            c = 0;
                        } else {
                            if (i16 == 2) {
                                messageObject2 = delayedMessage6.obj;
                            } else if (i16 == 4) {
                                messageObject2 = (MessageObject) delayedMessage6.extraHashMap.get(str10);
                                if (messageObject2.getDocument() == null) {
                                    messageObject = messageObject2;
                                    c = 0;
                                }
                            } else {
                                c = 65535;
                                messageObject = messageObject4;
                            }
                            messageObject = messageObject2;
                            c = 1;
                        }
                        if (c == 0) {
                            final File file = new File(FileLoader.getDirectory(4), Utilities.MD5(str10) + "." + ImageLoader.getHttpUrlExtension(str10, "file"));
                            Utilities.globalQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda26
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$didReceivedNotification$2(file, messageObject, delayedMessage6, str10);
                                }
                            });
                        } else if (c == 1) {
                            final File file2 = new File(FileLoader.getDirectory(4), Utilities.MD5(str10) + ".gif");
                            Utilities.globalQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda38
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$didReceivedNotification$4(delayedMessage6, file2, messageObject);
                                }
                            });
                            i15++;
                            messageObject4 = null;
                        }
                        i15++;
                        messageObject4 = null;
                    }
                    this.delayedMessages.remove(str10);
                }
            } else if (i == NotificationCenter.fileLoaded) {
                String str11 = (String) objArr[0];
                ArrayList<DelayedMessage> arrayList12 = this.delayedMessages.get(str11);
                if (arrayList12 != null) {
                    while (i9 < arrayList12.size()) {
                        performSendDelayedMessage(arrayList12.get(i9));
                        i9++;
                    }
                    this.delayedMessages.remove(str11);
                }
            } else if ((i == NotificationCenter.httpFileDidFailedLoad || i == NotificationCenter.fileLoadFailed) && (arrayList = this.delayedMessages.get((str = (String) objArr[0]))) != null) {
                while (i9 < arrayList.size()) {
                    arrayList.get(i9).markAsError();
                    i9++;
                }
                this.delayedMessages.remove(str);
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$2(final File file, final MessageObject messageObject, final DelayedMessage delayedMessage, final String str) {
        final TLRPC$TL_photo generatePhotoSizes = generatePhotoSizes(file.toString(), null);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda58
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$didReceivedNotification$1(generatePhotoSizes, messageObject, file, delayedMessage, str);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$1(TLRPC$TL_photo tLRPC$TL_photo, MessageObject messageObject, File file, DelayedMessage delayedMessage, String str) {
        if (tLRPC$TL_photo != null) {
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            tLRPC$Message.media.photo = tLRPC$TL_photo;
            tLRPC$Message.attachPath = file.toString();
            ArrayList<TLRPC$Message> arrayList = new ArrayList<>();
            arrayList.add(messageObject.messageOwner);
            getMessagesStorage().putMessages(arrayList, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.updateMessageMedia, messageObject.messageOwner);
            ArrayList<TLRPC$PhotoSize> arrayList2 = tLRPC$TL_photo.sizes;
            delayedMessage.photoSize = arrayList2.get(arrayList2.size() - 1);
            delayedMessage.locationParent = tLRPC$TL_photo;
            delayedMessage.httpLocation = null;
            if (delayedMessage.type == 4) {
                delayedMessage.performMediaUpload = true;
                performSendDelayedMessage(delayedMessage, delayedMessage.messageObjects.indexOf(messageObject));
                return;
            }
            performSendDelayedMessage(delayedMessage);
            return;
        }
        if (BuildVars.LOGS_ENABLED) {
            FileLog.e("can't load image " + str + " to file " + file.toString());
        }
        delayedMessage.markAsError();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$4(final DelayedMessage delayedMessage, final File file, final MessageObject messageObject) {
        final TLRPC$Document document = delayedMessage.obj.getDocument();
        if (document.thumbs.isEmpty() || (document.thumbs.get(0).location instanceof TLRPC$TL_fileLocationUnavailable)) {
            try {
                Bitmap loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                if (loadBitmap != null) {
                    document.thumbs.clear();
                    document.thumbs.add(ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, delayedMessage.sendEncryptedRequest != null));
                    loadBitmap.recycle();
                }
            } catch (Exception e) {
                document.thumbs.clear();
                FileLog.e(e);
            }
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda39
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$didReceivedNotification$3(delayedMessage, file, document, messageObject);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$3(DelayedMessage delayedMessage, File file, TLRPC$Document tLRPC$Document, MessageObject messageObject) {
        delayedMessage.httpLocation = null;
        delayedMessage.obj.messageOwner.attachPath = file.toString();
        if (!tLRPC$Document.thumbs.isEmpty()) {
            TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$Document.thumbs.get(0);
            if (!(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                delayedMessage.photoSize = tLRPC$PhotoSize;
                delayedMessage.locationParent = tLRPC$Document;
            }
        }
        ArrayList<TLRPC$Message> arrayList = new ArrayList<>();
        arrayList.add(messageObject.messageOwner);
        getMessagesStorage().putMessages(arrayList, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
        delayedMessage.performMediaUpload = true;
        performSendDelayedMessage(delayedMessage);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.updateMessageMedia, delayedMessage.obj.messageOwner);
    }

    private void revertEditingMessageObject(MessageObject messageObject) {
        messageObject.cancelEditing = true;
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        tLRPC$Message.media = messageObject.previousMedia;
        tLRPC$Message.message = messageObject.previousMessage;
        ArrayList<TLRPC$MessageEntity> arrayList = messageObject.previousMessageEntities;
        tLRPC$Message.entities = arrayList;
        tLRPC$Message.attachPath = messageObject.previousAttachPath;
        tLRPC$Message.send_state = 0;
        if (arrayList != null) {
            tLRPC$Message.flags |= 128;
        } else {
            tLRPC$Message.flags &= -129;
        }
        messageObject.previousMedia = null;
        messageObject.previousMessage = null;
        messageObject.previousMessageEntities = null;
        messageObject.previousAttachPath = null;
        messageObject.videoEditedInfo = null;
        messageObject.type = -1;
        messageObject.setType();
        messageObject.caption = null;
        if (messageObject.type != 0) {
            messageObject.generateCaption();
        } else {
            messageObject.resetLayout();
        }
        ArrayList<TLRPC$Message> arrayList2 = new ArrayList<>();
        arrayList2.add(messageObject.messageOwner);
        getMessagesStorage().putMessages(arrayList2, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(messageObject);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.replaceMessagesObjects, Long.valueOf(messageObject.getDialogId()), arrayList3);
    }

    public void cancelSendingMessage(MessageObject messageObject) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(messageObject);
        cancelSendingMessage(arrayList);
    }

    public void cancelSendingMessage(ArrayList<MessageObject> arrayList) {
        boolean z;
        ArrayList arrayList2 = new ArrayList();
        ArrayList arrayList3 = new ArrayList();
        ArrayList<Integer> arrayList4 = new ArrayList<>();
        long j = 0;
        int i = 0;
        boolean z2 = false;
        int i2 = 0;
        int i3 = 0;
        while (i < arrayList.size()) {
            MessageObject messageObject = arrayList.get(i);
            if (messageObject.scheduled) {
                i3 = 1;
            }
            long dialogId = messageObject.getDialogId();
            arrayList4.add(Integer.valueOf(messageObject.getId()));
            if (messageObject.isQuickReply()) {
                i2 = messageObject.getQuickReplyId();
            }
            TLRPC$Message removeFromSendingMessages = removeFromSendingMessages(messageObject.getId(), messageObject.scheduled);
            if (removeFromSendingMessages != null) {
                getConnectionsManager().cancelRequest(removeFromSendingMessages.reqId, true);
            }
            for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
                ArrayList<DelayedMessage> value = entry.getValue();
                int i4 = 0;
                while (true) {
                    if (i4 >= value.size()) {
                        z = z2;
                        break;
                    }
                    DelayedMessage delayedMessage = value.get(i4);
                    z = z2;
                    if (delayedMessage.type == 4) {
                        int i5 = -1;
                        MessageObject messageObject2 = null;
                        int i6 = 0;
                        while (true) {
                            if (i6 >= delayedMessage.messageObjects.size()) {
                                break;
                            }
                            messageObject2 = delayedMessage.messageObjects.get(i6);
                            if (messageObject2.getId() == messageObject.getId()) {
                                removeFromUploadingMessages(messageObject.getId(), messageObject.scheduled);
                                i5 = i6;
                                break;
                            }
                            i6++;
                        }
                        if (i5 >= 0) {
                            delayedMessage.messageObjects.remove(i5);
                            delayedMessage.messages.remove(i5);
                            delayedMessage.originalPaths.remove(i5);
                            if (!delayedMessage.parentObjects.isEmpty()) {
                                delayedMessage.parentObjects.remove(i5);
                            }
                            TLObject tLObject = delayedMessage.sendRequest;
                            if (tLObject != null) {
                                ((TLRPC$TL_messages_sendMultiMedia) tLObject).multi_media.remove(i5);
                            } else {
                                TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                                tLRPC$TL_messages_sendEncryptedMultiMedia.messages.remove(i5);
                                tLRPC$TL_messages_sendEncryptedMultiMedia.files.remove(i5);
                            }
                            MediaController.getInstance().cancelVideoConvert(messageObject);
                            String str = (String) delayedMessage.extraHashMap.get(messageObject2);
                            if (str != null) {
                                arrayList2.add(str);
                            }
                            if (delayedMessage.messageObjects.isEmpty()) {
                                delayedMessage.sendDelayedRequests();
                            } else {
                                if (delayedMessage.finalGroupMessage == messageObject.getId()) {
                                    ArrayList<MessageObject> arrayList5 = delayedMessage.messageObjects;
                                    MessageObject messageObject3 = arrayList5.get(arrayList5.size() - 1);
                                    delayedMessage.finalGroupMessage = messageObject3.getId();
                                    messageObject3.messageOwner.params.put("final", "1");
                                    TLRPC$TL_messages_messages tLRPC$TL_messages_messages = new TLRPC$TL_messages_messages();
                                    tLRPC$TL_messages_messages.messages.add(messageObject3.messageOwner);
                                    getMessagesStorage().putMessages((TLRPC$messages_Messages) tLRPC$TL_messages_messages, delayedMessage.peer, -2, 0, false, i3, 0L);
                                }
                                if (!arrayList3.contains(delayedMessage)) {
                                    arrayList3.add(delayedMessage);
                                }
                            }
                        }
                    } else if (delayedMessage.obj.getId() == messageObject.getId()) {
                        removeFromUploadingMessages(messageObject.getId(), messageObject.scheduled);
                        value.remove(i4);
                        delayedMessage.sendDelayedRequests();
                        MediaController.getInstance().cancelVideoConvert(delayedMessage.obj);
                        if (value.size() == 0) {
                            arrayList2.add(entry.getKey());
                            if (delayedMessage.sendEncryptedRequest != null) {
                                z2 = true;
                            }
                        }
                    } else {
                        i4++;
                        z2 = z;
                    }
                }
                z2 = z;
            }
            i++;
            j = dialogId;
        }
        for (int i7 = 0; i7 < arrayList2.size(); i7++) {
            String str2 = (String) arrayList2.get(i7);
            if (str2.startsWith("http")) {
                ImageLoader.getInstance().cancelLoadHttpFile(str2);
            } else {
                getFileLoader().cancelFileUpload(str2, z2);
            }
            this.delayedMessages.remove(str2);
        }
        int size = arrayList3.size();
        for (int i8 = 0; i8 < size; i8++) {
            sendReadyToSendGroup((DelayedMessage) arrayList3.get(i8), false, true);
        }
        int i9 = 0;
        if (arrayList.size() == 1 && arrayList.get(0).isEditing() && arrayList.get(0).previousMedia != null) {
            revertEditingMessageObject(arrayList.get(0));
            return;
        }
        if (!arrayList.isEmpty() && arrayList.get(0).isQuickReply()) {
            i9 = 5;
        } else if (i3 != 0) {
            i9 = 1;
        }
        getMessagesController().deleteMessages(arrayList4, null, null, j, i2, false, i9);
    }

    public boolean retrySendMessage(MessageObject messageObject, boolean z) {
        if (messageObject.getId() >= 0) {
            if (messageObject.isEditing()) {
                editMessage(messageObject, null, null, null, null, null, true, messageObject.hasMediaSpoilers(), messageObject);
            }
            return false;
        }
        TLRPC$MessageAction tLRPC$MessageAction = messageObject.messageOwner.action;
        if (tLRPC$MessageAction instanceof TLRPC$TL_messageEncryptedAction) {
            TLRPC$EncryptedChat encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(messageObject.getDialogId())));
            if (encryptedChat == null) {
                getMessagesStorage().markMessageAsSendError(messageObject.messageOwner, messageObject.scheduled ? 1 : 0);
                messageObject.messageOwner.send_state = 2;
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                processSentMessage(messageObject.getId());
                return false;
            }
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            if (tLRPC$Message.random_id == 0) {
                tLRPC$Message.random_id = getNextRandomId();
            }
            TLRPC$DecryptedMessageAction tLRPC$DecryptedMessageAction = messageObject.messageOwner.action.encryptedAction;
            if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionSetMessageTTL) {
                getSecretChatHelper().sendTTLMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionDeleteMessages) {
                getSecretChatHelper().sendMessagesDeleteMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionFlushHistory) {
                getSecretChatHelper().sendClearHistoryMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionNotifyLayer) {
                getSecretChatHelper().sendNotifyLayerMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionReadMessages) {
                getSecretChatHelper().sendMessagesReadMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionScreenshotMessages) {
                getSecretChatHelper().sendScreenshotMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (!(tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionTyping)) {
                if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionResend) {
                    getSecretChatHelper().sendResendMessage(encryptedChat, 0, 0, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionCommitKey) {
                    getSecretChatHelper().sendCommitKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionAbortKey) {
                    getSecretChatHelper().sendAbortKeyMessage(encryptedChat, messageObject.messageOwner, 0L);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionRequestKey) {
                    getSecretChatHelper().sendRequestKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionAcceptKey) {
                    getSecretChatHelper().sendAcceptKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionNoop) {
                    getSecretChatHelper().sendNoopMessage(encryptedChat, messageObject.messageOwner);
                }
            }
            return true;
        }
        if (tLRPC$MessageAction instanceof TLRPC$TL_messageActionScreenshotTaken) {
            sendScreenshotMessage(getMessagesController().getUser(Long.valueOf(messageObject.getDialogId())), messageObject.getReplyMsgId(), messageObject.messageOwner);
        }
        if (z) {
            this.unsentMessages.put(messageObject.getId(), messageObject);
        }
        sendMessage(SendMessageParams.of(messageObject));
        return true;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void processSentMessage(int i) {
        int size = this.unsentMessages.size();
        this.unsentMessages.remove(i);
        if (size == 0 || this.unsentMessages.size() != 0) {
            return;
        }
        checkUnsentMessages();
    }

    /* JADX WARN: Removed duplicated region for block: B:27:0x0090  */
    /* JADX WARN: Removed duplicated region for block: B:28:0x00b9  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void processForwardFromMyName(MessageObject messageObject, long j) {
        HashMap hashMap;
        TLRPC$Photo tLRPC$Photo;
        if (messageObject == null) {
            return;
        }
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
        ArrayList arrayList = null;
        if (tLRPC$MessageMedia != null && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaEmpty) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGame) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaInvoice)) {
            if (DialogObject.isEncryptedDialog(j)) {
                TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
                if (tLRPC$Message2.peer_id != null) {
                    TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$Message2.media;
                    if ((tLRPC$MessageMedia2.photo instanceof TLRPC$TL_photo) || (tLRPC$MessageMedia2.document instanceof TLRPC$TL_document)) {
                        HashMap hashMap2 = new HashMap();
                        hashMap2.put("parentObject", "sent_" + messageObject.messageOwner.peer_id.channel_id + "_" + messageObject.getId() + "_" + messageObject.getDialogId() + "_" + messageObject.type + "_" + messageObject.getSize());
                        hashMap = hashMap2;
                        TLRPC$Message tLRPC$Message3 = messageObject.messageOwner;
                        TLRPC$MessageMedia tLRPC$MessageMedia3 = tLRPC$Message3.media;
                        tLRPC$Photo = tLRPC$MessageMedia3.photo;
                        if (!(tLRPC$Photo instanceof TLRPC$TL_photo)) {
                            sendMessage(SendMessageParams.of((TLRPC$TL_photo) tLRPC$Photo, null, j, messageObject.replyMessageObject, null, tLRPC$Message3.message, tLRPC$Message3.entities, null, hashMap, true, 0, tLRPC$MessageMedia3.ttl_seconds, messageObject, false));
                            return;
                        }
                        TLRPC$Document tLRPC$Document = tLRPC$MessageMedia3.document;
                        if (tLRPC$Document instanceof TLRPC$TL_document) {
                            sendMessage(SendMessageParams.of((TLRPC$TL_document) tLRPC$Document, null, tLRPC$Message3.attachPath, j, messageObject.replyMessageObject, null, tLRPC$Message3.message, tLRPC$Message3.entities, null, hashMap, true, 0, tLRPC$MessageMedia3.ttl_seconds, messageObject, null, false));
                            return;
                        } else if ((tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaVenue) || (tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaGeo)) {
                            sendMessage(SendMessageParams.of(tLRPC$MessageMedia3, j, messageObject.replyMessageObject, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0));
                            return;
                        } else if (tLRPC$MessageMedia3.phone_number != null) {
                            TLRPC$TL_userContact_old2 tLRPC$TL_userContact_old2 = new TLRPC$TL_userContact_old2();
                            TLRPC$MessageMedia tLRPC$MessageMedia4 = messageObject.messageOwner.media;
                            tLRPC$TL_userContact_old2.phone = tLRPC$MessageMedia4.phone_number;
                            tLRPC$TL_userContact_old2.first_name = tLRPC$MessageMedia4.first_name;
                            tLRPC$TL_userContact_old2.last_name = tLRPC$MessageMedia4.last_name;
                            tLRPC$TL_userContact_old2.id = tLRPC$MessageMedia4.user_id;
                            sendMessage(SendMessageParams.of((TLRPC$User) tLRPC$TL_userContact_old2, j, messageObject.replyMessageObject, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0));
                            return;
                        } else if (DialogObject.isEncryptedDialog(j)) {
                            return;
                        } else {
                            ArrayList<MessageObject> arrayList2 = new ArrayList<>();
                            arrayList2.add(messageObject);
                            sendMessage(arrayList2, j, true, false, true, 0);
                            return;
                        }
                    }
                }
            }
            hashMap = null;
            TLRPC$Message tLRPC$Message32 = messageObject.messageOwner;
            TLRPC$MessageMedia tLRPC$MessageMedia32 = tLRPC$Message32.media;
            tLRPC$Photo = tLRPC$MessageMedia32.photo;
            if (!(tLRPC$Photo instanceof TLRPC$TL_photo)) {
            }
        } else if (tLRPC$Message.message != null) {
            TLRPC$WebPage tLRPC$WebPage = tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage ? tLRPC$MessageMedia.webpage : null;
            ArrayList<TLRPC$MessageEntity> arrayList3 = tLRPC$Message.entities;
            if (arrayList3 != null && !arrayList3.isEmpty()) {
                arrayList = new ArrayList();
                for (int i = 0; i < messageObject.messageOwner.entities.size(); i++) {
                    TLRPC$MessageEntity tLRPC$MessageEntity = messageObject.messageOwner.entities.get(i);
                    if ((tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityBold) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityItalic) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityPre) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityCode) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityTextUrl) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntitySpoiler) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityCustomEmoji)) {
                        arrayList.add(tLRPC$MessageEntity);
                    }
                }
            }
            sendMessage(SendMessageParams.of(messageObject.messageOwner.message, j, messageObject.replyMessageObject, null, tLRPC$WebPage, true, arrayList, null, null, true, 0, null, false));
        } else if (DialogObject.isEncryptedDialog(j)) {
            ArrayList<MessageObject> arrayList4 = new ArrayList<>();
            arrayList4.add(messageObject);
            sendMessage(arrayList4, j, true, false, true, 0);
        }
    }

    public void sendScreenshotMessage(TLRPC$User tLRPC$User, int i, TLRPC$Message tLRPC$Message) {
        TLRPC$Message tLRPC$Message2 = tLRPC$Message;
        if (tLRPC$User == null || i == 0 || tLRPC$User.id == getUserConfig().getClientUserId()) {
            return;
        }
        TLRPC$TL_messages_sendScreenshotNotification tLRPC$TL_messages_sendScreenshotNotification = new TLRPC$TL_messages_sendScreenshotNotification();
        TLRPC$TL_inputPeerUser tLRPC$TL_inputPeerUser = new TLRPC$TL_inputPeerUser();
        tLRPC$TL_messages_sendScreenshotNotification.peer = tLRPC$TL_inputPeerUser;
        tLRPC$TL_inputPeerUser.access_hash = tLRPC$User.access_hash;
        tLRPC$TL_inputPeerUser.user_id = tLRPC$User.id;
        if (tLRPC$Message2 != null) {
            tLRPC$TL_messages_sendScreenshotNotification.reply_to = createReplyInput(i);
            tLRPC$TL_messages_sendScreenshotNotification.random_id = tLRPC$Message2.random_id;
        } else {
            tLRPC$Message2 = new TLRPC$TL_messageService();
            tLRPC$Message2.random_id = getNextRandomId();
            tLRPC$Message2.dialog_id = tLRPC$User.id;
            tLRPC$Message2.unread = true;
            tLRPC$Message2.out = true;
            int newMessageId = getUserConfig().getNewMessageId();
            tLRPC$Message2.id = newMessageId;
            tLRPC$Message2.local_id = newMessageId;
            TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
            tLRPC$Message2.from_id = tLRPC$TL_peerUser;
            tLRPC$TL_peerUser.user_id = getUserConfig().getClientUserId();
            int i2 = tLRPC$Message2.flags | LiteMode.FLAG_CHAT_BLUR;
            tLRPC$Message2.flags = i2;
            tLRPC$Message2.flags = i2 | 8;
            TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
            tLRPC$Message2.reply_to = tLRPC$TL_messageReplyHeader;
            tLRPC$TL_messageReplyHeader.flags |= 16;
            tLRPC$TL_messageReplyHeader.reply_to_msg_id = i;
            TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
            tLRPC$Message2.peer_id = tLRPC$TL_peerUser2;
            tLRPC$TL_peerUser2.user_id = tLRPC$User.id;
            tLRPC$Message2.date = getConnectionsManager().getCurrentTime();
            tLRPC$Message2.action = new TLRPC$TL_messageActionScreenshotTaken();
            getUserConfig().saveConfig(false);
        }
        tLRPC$TL_messages_sendScreenshotNotification.random_id = tLRPC$Message2.random_id;
        MessageObject messageObject = new MessageObject(this.currentAccount, tLRPC$Message2, false, true);
        messageObject.messageOwner.send_state = 1;
        messageObject.wasJustSent = true;
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(messageObject);
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message2.dialog_id, arrayList, 0);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
        ArrayList<TLRPC$Message> arrayList2 = new ArrayList<>();
        arrayList2.add(tLRPC$Message2);
        getMessagesStorage().putMessages(arrayList2, false, true, false, 0, false, 0, 0L);
        performSendMessageRequest(tLRPC$TL_messages_sendScreenshotNotification, messageObject, null, null, null, null, false);
    }

    public void sendSticker(TLRPC$Document tLRPC$Document, String str, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final MessageObject.SendAnimationData sendAnimationData, final boolean z, final int i, boolean z2, final Object obj, final String str2, final int i2) {
        final TLRPC$TL_document_layer82 tLRPC$TL_document_layer82;
        HashMap hashMap;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        byte[] bArr;
        if (tLRPC$Document == null) {
            return;
        }
        if (DialogObject.isEncryptedDialog(j)) {
            if (getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                return;
            }
            TLRPC$TL_document_layer82 tLRPC$TL_document_layer822 = new TLRPC$TL_document_layer82();
            tLRPC$TL_document_layer822.id = tLRPC$Document.id;
            tLRPC$TL_document_layer822.access_hash = tLRPC$Document.access_hash;
            tLRPC$TL_document_layer822.date = tLRPC$Document.date;
            tLRPC$TL_document_layer822.mime_type = tLRPC$Document.mime_type;
            byte[] bArr2 = tLRPC$Document.file_reference;
            tLRPC$TL_document_layer822.file_reference = bArr2;
            if (bArr2 == null) {
                tLRPC$TL_document_layer822.file_reference = new byte[0];
            }
            tLRPC$TL_document_layer822.size = tLRPC$Document.size;
            tLRPC$TL_document_layer822.dc_id = tLRPC$Document.dc_id;
            tLRPC$TL_document_layer822.attributes = new ArrayList<>(tLRPC$Document.attributes);
            if (tLRPC$TL_document_layer822.mime_type == null) {
                tLRPC$TL_document_layer822.mime_type = "";
            }
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 10);
            if ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoSize) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoSizeProgressive) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize)) {
                File pathToAttach = FileLoader.getInstance(this.currentAccount).getPathToAttach(closestPhotoSizeWithSize, true);
                if ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize) || pathToAttach.exists()) {
                    try {
                        if (closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize) {
                            tLRPC$PhotoSize = new TLRPC$TL_photoStrippedSize();
                            bArr = closestPhotoSizeWithSize.bytes;
                        } else {
                            TLRPC$TL_photoCachedSize tLRPC$TL_photoCachedSize = new TLRPC$TL_photoCachedSize();
                            pathToAttach.length();
                            byte[] bArr3 = new byte[(int) pathToAttach.length()];
                            new RandomAccessFile(pathToAttach, "r").readFully(bArr3);
                            tLRPC$PhotoSize = tLRPC$TL_photoCachedSize;
                            bArr = bArr3;
                        }
                        TLRPC$TL_fileLocation_layer82 tLRPC$TL_fileLocation_layer82 = new TLRPC$TL_fileLocation_layer82();
                        TLRPC$FileLocation tLRPC$FileLocation = closestPhotoSizeWithSize.location;
                        tLRPC$TL_fileLocation_layer82.dc_id = tLRPC$FileLocation.dc_id;
                        tLRPC$TL_fileLocation_layer82.volume_id = tLRPC$FileLocation.volume_id;
                        tLRPC$TL_fileLocation_layer82.local_id = tLRPC$FileLocation.local_id;
                        tLRPC$TL_fileLocation_layer82.secret = tLRPC$FileLocation.secret;
                        tLRPC$PhotoSize.location = tLRPC$TL_fileLocation_layer82;
                        tLRPC$PhotoSize.size = closestPhotoSizeWithSize.size;
                        tLRPC$PhotoSize.w = closestPhotoSizeWithSize.w;
                        tLRPC$PhotoSize.h = closestPhotoSizeWithSize.h;
                        tLRPC$PhotoSize.type = closestPhotoSizeWithSize.type;
                        tLRPC$PhotoSize.bytes = bArr;
                        tLRPC$TL_document_layer822.thumbs.add(tLRPC$PhotoSize);
                        tLRPC$TL_document_layer822.flags |= 1;
                    } catch (Exception e) {
                        FileLog.e(e);
                    }
                }
            }
            if (tLRPC$TL_document_layer822.thumbs.isEmpty()) {
                TLRPC$TL_photoSizeEmpty tLRPC$TL_photoSizeEmpty = new TLRPC$TL_photoSizeEmpty();
                tLRPC$TL_photoSizeEmpty.type = "s";
                tLRPC$TL_document_layer822.thumbs.add(tLRPC$TL_photoSizeEmpty);
            }
            tLRPC$TL_document_layer82 = tLRPC$TL_document_layer822;
        } else {
            tLRPC$TL_document_layer82 = tLRPC$Document;
        }
        if (MessageObject.isGifDocument(tLRPC$TL_document_layer82)) {
            mediaSendQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda43
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$sendSticker$6(tLRPC$TL_document_layer82, j, messageObject, messageObject2, z, i, obj, sendAnimationData, tL_stories$StoryItem, replyQuote, str2, i2);
                }
            });
            return;
        }
        if (TextUtils.isEmpty(str)) {
            hashMap = null;
        } else {
            hashMap = new HashMap();
            hashMap.put("query", str);
        }
        SendMessageParams of = SendMessageParams.of((TLRPC$TL_document) tLRPC$TL_document_layer82, null, null, j, messageObject, messageObject2, null, null, null, hashMap, z, i, 0, obj, sendAnimationData, z2);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str2;
        of.quick_reply_shortcut_id = i2;
        sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendSticker$6(final TLRPC$Document tLRPC$Document, final long j, final MessageObject messageObject, final MessageObject messageObject2, final boolean z, final int i, final Object obj, final MessageObject.SendAnimationData sendAnimationData, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final String str, final int i2) {
        String str2;
        final Bitmap[] bitmapArr = new Bitmap[1];
        final String[] strArr = new String[1];
        String key = ImageLocation.getForDocument(tLRPC$Document).getKey(null, null, false);
        if ("video/mp4".equals(tLRPC$Document.mime_type)) {
            str2 = ".mp4";
        } else {
            str2 = "video/x-matroska".equals(tLRPC$Document.mime_type) ? ".mkv" : "";
        }
        File directory = FileLoader.getDirectory(3);
        File file = new File(directory, key + str2);
        if (!file.exists()) {
            File directory2 = FileLoader.getDirectory(2);
            file = new File(directory2, key + str2);
        }
        ensureMediaThumbExists(getAccountInstance(), false, tLRPC$Document, file.getAbsolutePath(), null, 0L);
        strArr[0] = getKeyForPhotoSize(getAccountInstance(), FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 320), bitmapArr, true, true);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda72
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendSticker$5(bitmapArr, strArr, tLRPC$Document, j, messageObject, messageObject2, z, i, obj, sendAnimationData, tL_stories$StoryItem, replyQuote, str, i2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendSticker$5(Bitmap[] bitmapArr, String[] strArr, TLRPC$Document tLRPC$Document, long j, MessageObject messageObject, MessageObject messageObject2, boolean z, int i, Object obj, MessageObject.SendAnimationData sendAnimationData, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str, int i2) {
        if (bitmapArr[0] != null && strArr[0] != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
        }
        SendMessageParams of = SendMessageParams.of((TLRPC$TL_document) tLRPC$Document, null, null, j, messageObject, messageObject2, null, null, null, null, z, i, 0, obj, sendAnimationData, false);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str;
        of.quick_reply_shortcut_id = i2;
        sendMessage(of);
    }

    public int sendMessage(ArrayList<MessageObject> arrayList, long j, boolean z, boolean z2, boolean z3, int i) {
        return sendMessage(arrayList, j, z, z2, z3, i, null);
    }

    /* JADX WARN: Code restructure failed: missing block: B:335:0x076f, code lost:
        if (r15.contains(java.lang.Integer.valueOf(r0.reply_to_msg_id)) != false) goto L245;
     */
    /* JADX WARN: Removed duplicated region for block: B:206:0x0466  */
    /* JADX WARN: Removed duplicated region for block: B:272:0x0603  */
    /* JADX WARN: Removed duplicated region for block: B:275:0x060d  */
    /* JADX WARN: Removed duplicated region for block: B:278:0x0626  */
    /* JADX WARN: Removed duplicated region for block: B:291:0x0680  */
    /* JADX WARN: Removed duplicated region for block: B:292:0x0692  */
    /* JADX WARN: Removed duplicated region for block: B:297:0x06af  */
    /* JADX WARN: Removed duplicated region for block: B:300:0x06da  */
    /* JADX WARN: Removed duplicated region for block: B:301:0x06dc  */
    /* JADX WARN: Removed duplicated region for block: B:334:0x0765  */
    /* JADX WARN: Removed duplicated region for block: B:339:0x078d  */
    /* JADX WARN: Removed duplicated region for block: B:340:0x078f  */
    /* JADX WARN: Removed duplicated region for block: B:343:0x07a8  */
    /* JADX WARN: Removed duplicated region for block: B:352:0x07e1  */
    /* JADX WARN: Removed duplicated region for block: B:353:0x07e3  */
    /* JADX WARN: Removed duplicated region for block: B:356:0x07eb  */
    /* JADX WARN: Removed duplicated region for block: B:358:0x0821  */
    /* JADX WARN: Removed duplicated region for block: B:364:0x0851  */
    /* JADX WARN: Removed duplicated region for block: B:374:0x08a9  */
    /* JADX WARN: Removed duplicated region for block: B:375:0x08ac  */
    /* JADX WARN: Removed duplicated region for block: B:378:0x08bb  */
    /* JADX WARN: Removed duplicated region for block: B:379:0x08bd  */
    /* JADX WARN: Removed duplicated region for block: B:382:0x08dd  */
    /* JADX WARN: Removed duplicated region for block: B:389:0x0903  */
    /* JADX WARN: Removed duplicated region for block: B:391:0x0911  */
    /* JADX WARN: Removed duplicated region for block: B:394:0x0921  */
    /* JADX WARN: Removed duplicated region for block: B:397:0x094b  */
    /* JADX WARN: Removed duplicated region for block: B:400:0x096d  */
    /* JADX WARN: Removed duplicated region for block: B:403:0x097e A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:407:0x098c  */
    /* JADX WARN: Removed duplicated region for block: B:408:0x098f  */
    /* JADX WARN: Removed duplicated region for block: B:411:0x09eb  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public int sendMessage(ArrayList<MessageObject> arrayList, final long j, boolean z, boolean z2, boolean z3, final int i, MessageObject messageObject) {
        TLRPC$UserFull userFull;
        TLRPC$Peer tLRPC$Peer;
        long j2;
        boolean z4;
        boolean z5;
        long j3;
        boolean z6;
        String str;
        boolean z7;
        boolean z8;
        boolean z9;
        boolean z10;
        long j4;
        boolean z11;
        boolean z12;
        boolean canSendEmbed;
        boolean canSendPolls;
        boolean canSendRoundVideo;
        boolean canSendVoice;
        boolean canSendMusic;
        TLRPC$Chat tLRPC$Chat;
        String str2;
        LongSparseArray longSparseArray;
        long j5;
        final LongSparseArray longSparseArray2;
        long j6;
        String str3;
        TLRPC$Chat tLRPC$Chat2;
        int i2;
        final TLRPC$Peer tLRPC$Peer2;
        ArrayList<MessageObject> arrayList2;
        TLRPC$InputPeer tLRPC$InputPeer;
        ArrayList<Integer> arrayList3;
        final ArrayList arrayList4;
        ArrayList<Long> arrayList5;
        int i3;
        boolean z13;
        ArrayList<Long> arrayList6;
        long j7;
        LongSparseArray longSparseArray3;
        String str4;
        TLRPC$Chat tLRPC$Chat3;
        LongSparseArray longSparseArray4;
        long j8;
        long j9;
        long j10;
        TLRPC$Peer tLRPC$Peer3;
        TLRPC$Chat tLRPC$Chat4;
        long sendAsPeerId;
        String str5;
        boolean z14;
        LongSparseArray longSparseArray5;
        TLRPC$Message tLRPC$Message;
        long j11;
        ArrayList arrayList7;
        ArrayList<MessageObject> arrayList8;
        ArrayList<Long> arrayList9;
        ArrayList<Integer> arrayList10;
        int i4;
        boolean z15;
        int i5;
        boolean z16;
        TLRPC$Message tLRPC$Message2;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        TLRPC$Peer tLRPC$Peer4;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2;
        TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow;
        TLRPC$User user;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        TLRPC$Peer tLRPC$Peer5;
        int i6;
        boolean z17;
        boolean z18;
        ArrayList<MessageObject> arrayList11 = arrayList;
        long j12 = j;
        boolean z19 = z;
        boolean z20 = z2;
        if (arrayList11 == null || arrayList.isEmpty()) {
            return 0;
        }
        long clientUserId = getUserConfig().getClientUserId();
        if (!DialogObject.isEncryptedDialog(j)) {
            TLRPC$Peer peer = getMessagesController().getPeer(j12);
            if (DialogObject.isUserDialog(j)) {
                if (getMessagesController().getUser(Long.valueOf(j)) == null) {
                    return 0;
                }
                TLRPC$UserFull userFull2 = getMessagesController().getUserFull(j12);
                if (userFull2 != null) {
                    z17 = !userFull2.voice_messages_forbidden;
                    z18 = z17;
                } else {
                    z17 = true;
                    z18 = true;
                }
                canSendVoice = z17;
                canSendRoundVideo = z18;
                tLRPC$Peer = peer;
                j4 = 0;
                str2 = null;
                tLRPC$Chat = null;
                z8 = false;
                z7 = true;
                z9 = false;
                z10 = true;
                z11 = true;
                z12 = true;
                canSendEmbed = true;
                canSendPolls = true;
                canSendMusic = true;
            } else {
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(-j12));
                if (ChatObject.isChannel(chat)) {
                    z4 = chat.signatures;
                    z5 = !chat.megagroup;
                    if (z5 && chat.has_link) {
                        tLRPC$Peer = peer;
                        TLRPC$ChatFull chatFull = getMessagesController().getChatFull(chat.id);
                        if (chatFull != null) {
                            j2 = chatFull.linked_chat_id;
                        }
                    } else {
                        tLRPC$Peer = peer;
                    }
                    j2 = 0;
                } else {
                    tLRPC$Peer = peer;
                    j2 = 0;
                    z4 = false;
                    z5 = false;
                }
                if (chat != null) {
                    j3 = j2;
                    z6 = z4;
                    str = getMessagesController().getAdminRank(chat.id, clientUserId);
                } else {
                    j3 = j2;
                    z6 = z4;
                    str = null;
                }
                boolean canSendStickers = ChatObject.canSendStickers(chat);
                boolean canSendPhoto = ChatObject.canSendPhoto(chat);
                boolean canSendVideo = ChatObject.canSendVideo(chat);
                boolean canSendDocument = ChatObject.canSendDocument(chat);
                z7 = canSendStickers;
                z8 = z6;
                z9 = z5;
                z10 = canSendPhoto;
                j4 = j3;
                z11 = canSendVideo;
                z12 = canSendDocument;
                canSendEmbed = ChatObject.canSendEmbed(chat);
                canSendPolls = ChatObject.canSendPolls(chat);
                canSendRoundVideo = ChatObject.canSendRoundVideo(chat);
                canSendVoice = ChatObject.canSendVoice(chat);
                canSendMusic = ChatObject.canSendMusic(chat);
                tLRPC$Chat = chat;
                str2 = str;
            }
            LongSparseArray longSparseArray6 = new LongSparseArray();
            ArrayList<MessageObject> arrayList12 = new ArrayList<>();
            ArrayList arrayList13 = new ArrayList();
            ArrayList<Long> arrayList14 = new ArrayList<>();
            ArrayList<Integer> arrayList15 = new ArrayList<>();
            LongSparseArray longSparseArray7 = new LongSparseArray();
            TLRPC$InputPeer inputPeer = getMessagesController().getInputPeer(j12);
            boolean z21 = j12 == clientUserId;
            ArrayList arrayList16 = arrayList13;
            int i7 = 0;
            int i8 = 0;
            ArrayList<MessageObject> arrayList17 = arrayList12;
            ArrayList<Long> arrayList18 = arrayList14;
            TLRPC$InputPeer tLRPC$InputPeer2 = inputPeer;
            LongSparseArray longSparseArray8 = longSparseArray7;
            while (i7 < arrayList.size()) {
                final MessageObject messageObject2 = arrayList11.get(i7);
                if (messageObject2.getId() <= 0 || messageObject2.needDrawBluredPreview()) {
                    longSparseArray = longSparseArray6;
                    j5 = j4;
                    longSparseArray2 = longSparseArray8;
                    j6 = clientUserId;
                    str3 = str2;
                    tLRPC$Chat2 = tLRPC$Chat;
                    i2 = i7;
                    tLRPC$Peer2 = tLRPC$Peer;
                    arrayList2 = arrayList17;
                    tLRPC$InputPeer = tLRPC$InputPeer2;
                    arrayList3 = arrayList15;
                    arrayList4 = arrayList16;
                    arrayList5 = arrayList18;
                    if (messageObject2.type == 0 && !TextUtils.isEmpty(messageObject2.messageText)) {
                        TLRPC$MessageMedia tLRPC$MessageMedia = messageObject2.messageOwner.media;
                        TLRPC$WebPage tLRPC$WebPage = tLRPC$MessageMedia != null ? tLRPC$MessageMedia.webpage : null;
                        SendMessageParams of = SendMessageParams.of(messageObject2.messageText.toString(), j, null, messageObject, tLRPC$WebPage, tLRPC$WebPage != null, messageObject2.messageOwner.entities, null, null, z3, i, null, false);
                        of.quick_reply_shortcut = messageObject2.getQuickReplyName();
                        of.quick_reply_shortcut_id = messageObject2.getQuickReplyId();
                        sendMessage(of);
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    }
                    arrayList18 = arrayList5;
                    arrayList17 = arrayList2;
                    arrayList16 = arrayList4;
                    longSparseArray8 = longSparseArray2;
                    arrayList15 = arrayList3;
                } else {
                    if (messageObject2.isSticker() || messageObject2.isAnimatedSticker() || messageObject2.isGif() || messageObject2.isGame()) {
                        i3 = i7;
                        z13 = true;
                    } else {
                        i3 = i7;
                        z13 = false;
                    }
                    if (!z7 && z13) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 8) ? 4 : 1;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!z10 && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) && !messageObject2.isVideo() && !z13) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 16) ? 10 : 12;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!canSendMusic && messageObject2.isMusic()) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 18) ? 19 : 20;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!z11 && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) && messageObject2.isVideo() && !z13) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 17) ? 9 : 11;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!canSendPolls && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPoll)) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 10) ? 6 : 3;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!canSendVoice && MessageObject.isVoiceMessage(messageObject2.messageOwner)) {
                        if (tLRPC$Chat != null) {
                            if (i8 == 0) {
                                i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 20) ? 13 : 14;
                                longSparseArray = longSparseArray6;
                                j5 = j4;
                                j6 = clientUserId;
                                str3 = str2;
                                tLRPC$Chat2 = tLRPC$Chat;
                                i8 = i6;
                                tLRPC$Peer2 = tLRPC$Peer;
                                tLRPC$InputPeer = tLRPC$InputPeer2;
                                i2 = i3;
                            }
                        } else if (i8 == 0) {
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                            i8 = 7;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!canSendRoundVideo && MessageObject.isRoundVideoMessage(messageObject2.messageOwner)) {
                        if (tLRPC$Chat != null) {
                            if (i8 == 0) {
                                i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 21) ? 15 : 16;
                                longSparseArray = longSparseArray6;
                                j5 = j4;
                                j6 = clientUserId;
                                str3 = str2;
                                tLRPC$Chat2 = tLRPC$Chat;
                                i8 = i6;
                                tLRPC$Peer2 = tLRPC$Peer;
                                tLRPC$InputPeer = tLRPC$InputPeer2;
                                i2 = i3;
                            }
                        } else if (i8 == 0) {
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                            i8 = 8;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (z12 || !(messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaDocument) || z13) {
                        TLRPC$TL_message tLRPC$TL_message = new TLRPC$TL_message();
                        if (z19) {
                            arrayList6 = arrayList18;
                            j7 = j4;
                            longSparseArray3 = longSparseArray8;
                            str4 = str2;
                            tLRPC$Chat3 = tLRPC$Chat;
                            longSparseArray4 = longSparseArray6;
                        } else {
                            boolean z22 = messageObject2.getDialogId() == clientUserId && messageObject2.isFromUser() && messageObject2.messageOwner.from_id.user_id == clientUserId;
                            if (messageObject2.isForwarded()) {
                                TLRPC$TL_messageFwdHeader tLRPC$TL_messageFwdHeader = new TLRPC$TL_messageFwdHeader();
                                tLRPC$TL_message.fwd_from = tLRPC$TL_messageFwdHeader;
                                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2 = messageObject2.messageOwner.fwd_from;
                                longSparseArray3 = longSparseArray8;
                                if ((tLRPC$MessageFwdHeader2.flags & 1) != 0) {
                                    tLRPC$TL_messageFwdHeader.flags |= 1;
                                    tLRPC$TL_messageFwdHeader.from_id = tLRPC$MessageFwdHeader2.from_id;
                                }
                                if ((tLRPC$MessageFwdHeader2.flags & 32) != 0) {
                                    tLRPC$TL_messageFwdHeader.flags |= 32;
                                    tLRPC$TL_messageFwdHeader.from_name = tLRPC$MessageFwdHeader2.from_name;
                                }
                                if ((tLRPC$MessageFwdHeader2.flags & 4) != 0) {
                                    tLRPC$TL_messageFwdHeader.flags |= 4;
                                    tLRPC$TL_messageFwdHeader.channel_post = tLRPC$MessageFwdHeader2.channel_post;
                                }
                                if ((tLRPC$MessageFwdHeader2.flags & 8) != 0) {
                                    tLRPC$TL_messageFwdHeader.flags |= 8;
                                    tLRPC$TL_messageFwdHeader.post_author = tLRPC$MessageFwdHeader2.post_author;
                                }
                                if ((j12 == clientUserId || z9) && (tLRPC$MessageFwdHeader2.flags & 16) != 0 && !UserObject.isReplyUser(messageObject2.getDialogId())) {
                                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader3 = tLRPC$TL_message.fwd_from;
                                    tLRPC$MessageFwdHeader3.flags |= 16;
                                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader4 = messageObject2.messageOwner.fwd_from;
                                    tLRPC$MessageFwdHeader3.saved_from_peer = tLRPC$MessageFwdHeader4.saved_from_peer;
                                    tLRPC$MessageFwdHeader3.saved_from_msg_id = tLRPC$MessageFwdHeader4.saved_from_msg_id;
                                }
                                tLRPC$TL_message.fwd_from.date = messageObject2.messageOwner.fwd_from.date;
                                tLRPC$TL_message.flags = 4;
                            } else {
                                longSparseArray3 = longSparseArray8;
                                if (!z22) {
                                    long fromChatId = messageObject2.getFromChatId();
                                    TLRPC$TL_messageFwdHeader tLRPC$TL_messageFwdHeader2 = new TLRPC$TL_messageFwdHeader();
                                    tLRPC$TL_message.fwd_from = tLRPC$TL_messageFwdHeader2;
                                    arrayList6 = arrayList18;
                                    tLRPC$TL_messageFwdHeader2.channel_post = messageObject2.getId();
                                    tLRPC$TL_message.fwd_from.flags |= 4;
                                    if (messageObject2.isFromUser()) {
                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader5 = tLRPC$TL_message.fwd_from;
                                        tLRPC$MessageFwdHeader5.from_id = messageObject2.messageOwner.from_id;
                                        tLRPC$MessageFwdHeader5.flags |= 1;
                                        j7 = j4;
                                        str4 = str2;
                                        tLRPC$Chat3 = tLRPC$Chat;
                                        longSparseArray4 = longSparseArray6;
                                    } else {
                                        tLRPC$TL_message.fwd_from.from_id = new TLRPC$TL_peerChannel();
                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader6 = tLRPC$TL_message.fwd_from;
                                        TLRPC$Peer tLRPC$Peer6 = tLRPC$MessageFwdHeader6.from_id;
                                        str4 = str2;
                                        TLRPC$Message tLRPC$Message3 = messageObject2.messageOwner;
                                        tLRPC$Chat3 = tLRPC$Chat;
                                        TLRPC$Peer tLRPC$Peer7 = tLRPC$Message3.peer_id;
                                        j7 = j4;
                                        longSparseArray4 = longSparseArray6;
                                        tLRPC$Peer6.channel_id = tLRPC$Peer7.channel_id;
                                        tLRPC$MessageFwdHeader6.flags |= 1;
                                        if (tLRPC$Message3.post && fromChatId > 0) {
                                            TLRPC$Peer tLRPC$Peer8 = tLRPC$Message3.from_id;
                                            if (tLRPC$Peer8 != null) {
                                                tLRPC$Peer7 = tLRPC$Peer8;
                                            }
                                            tLRPC$MessageFwdHeader6.from_id = tLRPC$Peer7;
                                        }
                                    }
                                    if (messageObject2.messageOwner.post_author == null && !messageObject2.isOutOwner() && fromChatId > 0 && messageObject2.messageOwner.post && (user = getMessagesController().getUser(Long.valueOf(fromChatId))) != null) {
                                        tLRPC$TL_message.fwd_from.post_author = ContactsController.formatName(user.first_name, user.last_name);
                                        tLRPC$TL_message.fwd_from.flags |= 8;
                                    }
                                    tLRPC$TL_message.date = messageObject2.messageOwner.date;
                                    tLRPC$TL_message.flags = 4;
                                    if (j12 == clientUserId && (tLRPC$MessageFwdHeader = tLRPC$TL_message.fwd_from) != null) {
                                        tLRPC$MessageFwdHeader.flags |= 16;
                                        tLRPC$MessageFwdHeader.saved_from_msg_id = messageObject2.getId();
                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader7 = tLRPC$TL_message.fwd_from;
                                        tLRPC$Peer5 = messageObject2.messageOwner.peer_id;
                                        tLRPC$MessageFwdHeader7.saved_from_peer = tLRPC$Peer5;
                                        if (tLRPC$Peer5.user_id == clientUserId) {
                                            tLRPC$Peer5.user_id = messageObject2.getDialogId();
                                        }
                                    }
                                }
                            }
                            arrayList6 = arrayList18;
                            j7 = j4;
                            str4 = str2;
                            tLRPC$Chat3 = tLRPC$Chat;
                            longSparseArray4 = longSparseArray6;
                            if (j12 == clientUserId) {
                                tLRPC$MessageFwdHeader.flags |= 16;
                                tLRPC$MessageFwdHeader.saved_from_msg_id = messageObject2.getId();
                                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader72 = tLRPC$TL_message.fwd_from;
                                tLRPC$Peer5 = messageObject2.messageOwner.peer_id;
                                tLRPC$MessageFwdHeader72.saved_from_peer = tLRPC$Peer5;
                                if (tLRPC$Peer5.user_id == clientUserId) {
                                }
                            }
                        }
                        HashMap<String, String> hashMap = new HashMap<>();
                        tLRPC$TL_message.params = hashMap;
                        hashMap.put("fwd_id", "" + messageObject2.getId());
                        tLRPC$TL_message.params.put("fwd_peer", "" + messageObject2.getDialogId());
                        if (!messageObject2.messageOwner.restriction_reason.isEmpty()) {
                            tLRPC$TL_message.restriction_reason = messageObject2.messageOwner.restriction_reason;
                            tLRPC$TL_message.flags |= 4194304;
                        }
                        if (!canSendEmbed && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaWebPage)) {
                            tLRPC$TL_message.media = new TLRPC$TL_messageMediaEmpty();
                        } else {
                            tLRPC$TL_message.media = messageObject2.messageOwner.media;
                        }
                        if (tLRPC$TL_message.media != null) {
                            tLRPC$TL_message.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                        }
                        long j13 = messageObject2.messageOwner.via_bot_id;
                        if (j13 != 0) {
                            tLRPC$TL_message.via_bot_id = j13;
                            tLRPC$TL_message.flags |= 2048;
                        }
                        if (j7 != 0) {
                            TLRPC$TL_messageReplies tLRPC$TL_messageReplies = new TLRPC$TL_messageReplies();
                            tLRPC$TL_message.replies = tLRPC$TL_messageReplies;
                            tLRPC$TL_messageReplies.comments = true;
                            j8 = j7;
                            tLRPC$TL_messageReplies.channel_id = j8;
                            tLRPC$TL_messageReplies.flags |= 1;
                            tLRPC$TL_message.flags |= 8388608;
                        } else {
                            j8 = j7;
                        }
                        if (!z20 || tLRPC$TL_message.media == null) {
                            tLRPC$TL_message.message = messageObject2.messageOwner.message;
                        }
                        if (tLRPC$TL_message.message == null) {
                            tLRPC$TL_message.message = "";
                        }
                        tLRPC$TL_message.fwd_msg_id = messageObject2.getId();
                        TLRPC$Message tLRPC$Message4 = messageObject2.messageOwner;
                        tLRPC$TL_message.attachPath = tLRPC$Message4.attachPath;
                        tLRPC$TL_message.entities = tLRPC$Message4.entities;
                        if (tLRPC$Message4.reply_markup instanceof TLRPC$TL_replyInlineMarkup) {
                            tLRPC$TL_message.reply_markup = new TLRPC$TL_replyInlineMarkup();
                            int size = messageObject2.messageOwner.reply_markup.rows.size();
                            int i9 = 0;
                            boolean z23 = false;
                            while (true) {
                                if (i9 >= size) {
                                    j9 = j8;
                                    break;
                                }
                                TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow2 = messageObject2.messageOwner.reply_markup.rows.get(i9);
                                int size2 = tLRPC$TL_keyboardButtonRow2.buttons.size();
                                int i10 = size;
                                int i11 = 0;
                                TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow3 = null;
                                while (true) {
                                    boolean z24 = z23;
                                    if (i11 >= size2) {
                                        j9 = j8;
                                        break;
                                    }
                                    TLRPC$KeyboardButton tLRPC$KeyboardButton = tLRPC$TL_keyboardButtonRow2.buttons.get(i11);
                                    j9 = j8;
                                    boolean z25 = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth;
                                    if (!z25 && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrl) && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonSwitchInline) && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy)) {
                                        z23 = true;
                                        break;
                                    }
                                    if (z25) {
                                        TLRPC$TL_keyboardButtonUrlAuth tLRPC$TL_keyboardButtonUrlAuth = new TLRPC$TL_keyboardButtonUrlAuth();
                                        tLRPC$TL_keyboardButtonUrlAuth.flags = tLRPC$KeyboardButton.flags;
                                        String str6 = tLRPC$KeyboardButton.fwd_text;
                                        if (str6 != null) {
                                            tLRPC$TL_keyboardButtonUrlAuth.fwd_text = str6;
                                            tLRPC$TL_keyboardButtonUrlAuth.text = str6;
                                        } else {
                                            tLRPC$TL_keyboardButtonUrlAuth.text = tLRPC$KeyboardButton.text;
                                        }
                                        tLRPC$TL_keyboardButtonUrlAuth.url = tLRPC$KeyboardButton.url;
                                        tLRPC$TL_keyboardButtonUrlAuth.button_id = tLRPC$KeyboardButton.button_id;
                                        tLRPC$KeyboardButton = tLRPC$TL_keyboardButtonUrlAuth;
                                    }
                                    if (tLRPC$TL_keyboardButtonRow3 == null) {
                                        tLRPC$TL_keyboardButtonRow = new TLRPC$TL_keyboardButtonRow();
                                        tLRPC$TL_message.reply_markup.rows.add(tLRPC$TL_keyboardButtonRow);
                                    } else {
                                        tLRPC$TL_keyboardButtonRow = tLRPC$TL_keyboardButtonRow3;
                                    }
                                    tLRPC$TL_keyboardButtonRow.buttons.add(tLRPC$KeyboardButton);
                                    i11++;
                                    tLRPC$TL_keyboardButtonRow3 = tLRPC$TL_keyboardButtonRow;
                                    z23 = z24;
                                    j8 = j9;
                                }
                                if (z23) {
                                    break;
                                }
                                i9++;
                                size = i10;
                                j8 = j9;
                            }
                            if (z23) {
                                messageObject2.messageOwner.reply_markup = null;
                                tLRPC$TL_message.flags &= -65;
                                if (!tLRPC$TL_message.entities.isEmpty()) {
                                    tLRPC$TL_message.flags |= 128;
                                }
                                if (tLRPC$TL_message.attachPath == null) {
                                    tLRPC$TL_message.attachPath = "";
                                }
                                int newMessageId = getUserConfig().getNewMessageId();
                                tLRPC$TL_message.id = newMessageId;
                                tLRPC$TL_message.local_id = newMessageId;
                                tLRPC$TL_message.out = true;
                                j10 = messageObject2.messageOwner.grouped_id;
                                if (j10 != 0) {
                                    Long l = (Long) longSparseArray4.get(j10);
                                    if (l == null) {
                                        l = Long.valueOf(Utilities.random.nextLong());
                                        longSparseArray4.put(messageObject2.messageOwner.grouped_id, l);
                                    }
                                    tLRPC$TL_message.grouped_id = l.longValue();
                                    tLRPC$TL_message.flags |= 131072;
                                }
                                tLRPC$Peer3 = tLRPC$Peer;
                                if (tLRPC$Peer3.channel_id == 0 && z9) {
                                    if (z8) {
                                        TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
                                        tLRPC$TL_message.from_id = tLRPC$TL_peerUser;
                                        tLRPC$TL_peerUser.user_id = clientUserId;
                                    } else {
                                        tLRPC$TL_message.from_id = tLRPC$Peer3;
                                    }
                                    tLRPC$TL_message.post = true;
                                    str5 = str4;
                                    tLRPC$Chat4 = tLRPC$Chat3;
                                } else {
                                    tLRPC$Chat4 = tLRPC$Chat3;
                                    sendAsPeerId = ChatObject.getSendAsPeerId(tLRPC$Chat4, getMessagesController().getChatFull(-j12), true);
                                    if (sendAsPeerId != clientUserId) {
                                        TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
                                        tLRPC$TL_message.from_id = tLRPC$TL_peerUser2;
                                        tLRPC$TL_peerUser2.user_id = clientUserId;
                                        tLRPC$TL_message.flags |= LiteMode.FLAG_CHAT_BLUR;
                                        str5 = str4;
                                    } else {
                                        tLRPC$TL_message.from_id = getMessagesController().getPeer(sendAsPeerId);
                                        str5 = str4;
                                        if (str4 != null) {
                                            tLRPC$TL_message.post_author = str5;
                                            tLRPC$TL_message.flags |= 65536;
                                        }
                                    }
                                }
                                if (tLRPC$TL_message.random_id == 0) {
                                    tLRPC$TL_message.random_id = getNextRandomId();
                                }
                                ArrayList<Long> arrayList19 = arrayList6;
                                arrayList19.add(Long.valueOf(tLRPC$TL_message.random_id));
                                LongSparseArray longSparseArray9 = longSparseArray3;
                                longSparseArray9.put(tLRPC$TL_message.random_id, tLRPC$TL_message);
                                ArrayList<Integer> arrayList20 = arrayList15;
                                arrayList20.add(Integer.valueOf(tLRPC$TL_message.fwd_msg_id));
                                tLRPC$Chat2 = tLRPC$Chat4;
                                int i12 = i3;
                                tLRPC$TL_message.date = i == 0 ? i : getConnectionsManager().getCurrentTime();
                                TLRPC$InputPeer tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                z14 = tLRPC$InputPeer3 instanceof TLRPC$TL_inputPeerChannel;
                                if (z14 || !z9) {
                                    longSparseArray5 = longSparseArray4;
                                    tLRPC$Message = messageObject2.messageOwner;
                                    j11 = clientUserId;
                                    if ((tLRPC$Message.flags & 1024) != 0 && i == 0) {
                                        tLRPC$TL_message.views = tLRPC$Message.views;
                                        tLRPC$TL_message.flags |= 1024;
                                    }
                                    tLRPC$TL_message.unread = true;
                                } else {
                                    longSparseArray5 = longSparseArray4;
                                    if (i == 0) {
                                        tLRPC$TL_message.views = 1;
                                        tLRPC$TL_message.flags |= 1024;
                                    }
                                    j11 = clientUserId;
                                }
                                tLRPC$TL_message.dialog_id = j12;
                                tLRPC$TL_message.peer_id = tLRPC$Peer3;
                                if (!MessageObject.isVoiceMessage(tLRPC$TL_message) || MessageObject.isRoundVideoMessage(tLRPC$TL_message)) {
                                    if (!z14 && messageObject2.getChannelId() != 0) {
                                        tLRPC$TL_message.media_unread = messageObject2.isContentUnread();
                                    } else {
                                        tLRPC$TL_message.media_unread = true;
                                    }
                                }
                                if (messageObject == null && (tLRPC$MessageReplyHeader = (tLRPC$Message2 = messageObject2.messageOwner).reply_to) != null) {
                                    tLRPC$Peer4 = tLRPC$MessageReplyHeader.reply_to_peer_id;
                                    if (tLRPC$Peer4 != null || MessageObject.peersEqual(tLRPC$Peer4, tLRPC$Message2.peer_id)) {
                                        tLRPC$MessageReplyHeader2 = messageObject2.messageOwner.reply_to;
                                        if ((tLRPC$MessageReplyHeader2.flags & 16) != 0) {
                                        }
                                    }
                                    tLRPC$TL_message.flags |= 8;
                                    tLRPC$TL_message.reply_to = messageObject2.messageOwner.reply_to;
                                }
                                ArrayList<Integer> arrayList21 = arrayList20;
                                MessageObject messageObject3 = new MessageObject(this.currentAccount, tLRPC$TL_message, true, true);
                                messageObject3.scheduled = i == 0;
                                messageObject3.messageOwner.send_state = 1;
                                messageObject3.wasJustSent = true;
                                ArrayList<MessageObject> arrayList22 = arrayList17;
                                arrayList22.add(messageObject3);
                                arrayList7 = arrayList16;
                                arrayList7.add(tLRPC$TL_message);
                                String str7 = str5;
                                if (messageObject2.replyMessageObject != null) {
                                    int i13 = 0;
                                    while (i13 < arrayList.size()) {
                                        arrayList8 = arrayList;
                                        arrayList10 = arrayList21;
                                        arrayList9 = arrayList19;
                                        if (arrayList8.get(i13).getId() == messageObject2.replyMessageObject.getId()) {
                                            TLRPC$Message tLRPC$Message5 = messageObject3.messageOwner;
                                            MessageObject messageObject4 = messageObject2.replyMessageObject;
                                            tLRPC$Message5.replyMessage = messageObject4.messageOwner;
                                            messageObject3.replyMessageObject = messageObject4;
                                            break;
                                        }
                                        i13++;
                                        arrayList21 = arrayList10;
                                        arrayList19 = arrayList9;
                                    }
                                }
                                arrayList8 = arrayList;
                                arrayList9 = arrayList19;
                                arrayList10 = arrayList21;
                                putToSendingMessages(tLRPC$TL_message, i == 0);
                                if (BuildVars.LOGS_ENABLED) {
                                    FileLog.d("forward message user_id = " + tLRPC$InputPeer3.user_id + " chat_id = " + tLRPC$InputPeer3.chat_id + " channel_id = " + tLRPC$InputPeer3.channel_id + " access_hash = " + tLRPC$InputPeer3.access_hash);
                                }
                                if (messageObject != null) {
                                    TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
                                    tLRPC$TL_message.reply_to = tLRPC$TL_messageReplyHeader;
                                    tLRPC$TL_messageReplyHeader.flags |= 16;
                                    tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject.getId();
                                    if (messageObject.isTopicMainMessage) {
                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader3 = tLRPC$TL_message.reply_to;
                                        i4 = 1;
                                        tLRPC$MessageReplyHeader3.forum_topic = true;
                                        tLRPC$MessageReplyHeader3.flags |= 8;
                                        if (arrayList7.size() == 100 && i12 != arrayList.size() - i4 && (i12 == arrayList.size() - i4 || arrayList8.get(i12 + 1).getDialogId() == messageObject2.getDialogId())) {
                                            tLRPC$InputPeer = tLRPC$InputPeer3;
                                            arrayList2 = arrayList22;
                                            arrayList4 = arrayList7;
                                            i2 = i12;
                                            longSparseArray = longSparseArray5;
                                            j6 = j11;
                                            longSparseArray2 = longSparseArray9;
                                            arrayList3 = arrayList10;
                                            arrayList5 = arrayList9;
                                            str3 = str7;
                                            j5 = j9;
                                            tLRPC$Peer2 = tLRPC$Peer3;
                                            arrayList18 = arrayList5;
                                            arrayList17 = arrayList2;
                                            arrayList16 = arrayList4;
                                            longSparseArray8 = longSparseArray2;
                                            arrayList15 = arrayList3;
                                        } else {
                                            getMessagesStorage().putMessages(new ArrayList<>(arrayList7), false, true, false, 0, i != 0 ? 1 : 0, 0L);
                                            getMessagesController().updateInterfaceWithMessages(j12, arrayList22, i != 0 ? 1 : 0);
                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                                            getUserConfig().saveConfig(false);
                                            final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages = new TLRPC$TL_messages_forwardMessages();
                                            tLRPC$TL_messages_forwardMessages.to_peer = tLRPC$InputPeer3;
                                            if (z3) {
                                                if (!MessagesController.getNotificationsSettings(this.currentAccount).getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + j12, false)) {
                                                    z15 = false;
                                                    tLRPC$TL_messages_forwardMessages.silent = z15;
                                                    if (messageObject != null) {
                                                        tLRPC$TL_messages_forwardMessages.top_msg_id = messageObject.getId();
                                                        tLRPC$TL_messages_forwardMessages.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                    }
                                                    if (i != 0) {
                                                        tLRPC$TL_messages_forwardMessages.schedule_date = i;
                                                        tLRPC$TL_messages_forwardMessages.flags |= 1024;
                                                    }
                                                    if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                                        TLRPC$Chat chat2 = getMessagesController().getChat(Long.valueOf(messageObject2.messageOwner.peer_id.channel_id));
                                                        TLRPC$TL_inputPeerChannel tLRPC$TL_inputPeerChannel = new TLRPC$TL_inputPeerChannel();
                                                        tLRPC$TL_messages_forwardMessages.from_peer = tLRPC$TL_inputPeerChannel;
                                                        i5 = i12;
                                                        tLRPC$TL_inputPeerChannel.channel_id = messageObject2.messageOwner.peer_id.channel_id;
                                                        if (chat2 != null) {
                                                            tLRPC$TL_inputPeerChannel.access_hash = chat2.access_hash;
                                                        }
                                                    } else {
                                                        i5 = i12;
                                                        tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                    }
                                                    ArrayList<Long> arrayList23 = arrayList9;
                                                    tLRPC$TL_messages_forwardMessages.random_id = arrayList23;
                                                    ArrayList<Integer> arrayList24 = arrayList10;
                                                    tLRPC$TL_messages_forwardMessages.id = arrayList24;
                                                    tLRPC$TL_messages_forwardMessages.drop_author = z;
                                                    tLRPC$TL_messages_forwardMessages.drop_media_captions = z2;
                                                    if (arrayList.size() == 1 && arrayList8.get(0).messageOwner.with_my_score) {
                                                        z16 = true;
                                                        tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                                        final ArrayList arrayList25 = new ArrayList(arrayList22);
                                                        arrayList5 = arrayList23;
                                                        arrayList2 = arrayList22;
                                                        longSparseArray = longSparseArray5;
                                                        arrayList4 = arrayList7;
                                                        j5 = j9;
                                                        tLRPC$Peer2 = tLRPC$Peer3;
                                                        tLRPC$InputPeer = tLRPC$InputPeer3;
                                                        longSparseArray2 = longSparseArray9;
                                                        arrayList3 = arrayList24;
                                                        j6 = j11;
                                                        final boolean z26 = i != 2147483646;
                                                        final boolean z27 = z21;
                                                        str3 = str7;
                                                        getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda81
                                                            @Override // org.telegram.tgnet.RequestDelegate
                                                            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                                SendMessagesHelper.this.lambda$sendMessage$14(j, i, z26, z27, longSparseArray2, arrayList4, arrayList25, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                            }
                                                        }, 68);
                                                        i2 = i5;
                                                        if (i2 != arrayList.size() - 1) {
                                                            arrayList17 = new ArrayList<>();
                                                            arrayList16 = new ArrayList();
                                                            arrayList18 = new ArrayList<>();
                                                            arrayList15 = new ArrayList<>();
                                                            longSparseArray8 = new LongSparseArray();
                                                        }
                                                        arrayList18 = arrayList5;
                                                        arrayList17 = arrayList2;
                                                        arrayList16 = arrayList4;
                                                        longSparseArray8 = longSparseArray2;
                                                        arrayList15 = arrayList3;
                                                    }
                                                    z16 = false;
                                                    tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                                    final ArrayList arrayList252 = new ArrayList(arrayList22);
                                                    arrayList5 = arrayList23;
                                                    arrayList2 = arrayList22;
                                                    longSparseArray = longSparseArray5;
                                                    arrayList4 = arrayList7;
                                                    j5 = j9;
                                                    tLRPC$Peer2 = tLRPC$Peer3;
                                                    tLRPC$InputPeer = tLRPC$InputPeer3;
                                                    longSparseArray2 = longSparseArray9;
                                                    arrayList3 = arrayList24;
                                                    j6 = j11;
                                                    final boolean z262 = i != 2147483646;
                                                    final boolean z272 = z21;
                                                    str3 = str7;
                                                    getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda81
                                                        @Override // org.telegram.tgnet.RequestDelegate
                                                        public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                            SendMessagesHelper.this.lambda$sendMessage$14(j, i, z262, z272, longSparseArray2, arrayList4, arrayList252, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                        }
                                                    }, 68);
                                                    i2 = i5;
                                                    if (i2 != arrayList.size() - 1) {
                                                    }
                                                    arrayList18 = arrayList5;
                                                    arrayList17 = arrayList2;
                                                    arrayList16 = arrayList4;
                                                    longSparseArray8 = longSparseArray2;
                                                    arrayList15 = arrayList3;
                                                }
                                            }
                                            z15 = true;
                                            tLRPC$TL_messages_forwardMessages.silent = z15;
                                            if (messageObject != null) {
                                            }
                                            if (i != 0) {
                                            }
                                            if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                            }
                                            ArrayList<Long> arrayList232 = arrayList9;
                                            tLRPC$TL_messages_forwardMessages.random_id = arrayList232;
                                            ArrayList<Integer> arrayList242 = arrayList10;
                                            tLRPC$TL_messages_forwardMessages.id = arrayList242;
                                            tLRPC$TL_messages_forwardMessages.drop_author = z;
                                            tLRPC$TL_messages_forwardMessages.drop_media_captions = z2;
                                            if (arrayList.size() == 1) {
                                                z16 = true;
                                                tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                                final ArrayList arrayList2522 = new ArrayList(arrayList22);
                                                arrayList5 = arrayList232;
                                                arrayList2 = arrayList22;
                                                longSparseArray = longSparseArray5;
                                                arrayList4 = arrayList7;
                                                j5 = j9;
                                                tLRPC$Peer2 = tLRPC$Peer3;
                                                tLRPC$InputPeer = tLRPC$InputPeer3;
                                                longSparseArray2 = longSparseArray9;
                                                arrayList3 = arrayList242;
                                                j6 = j11;
                                                final boolean z2622 = i != 2147483646;
                                                final boolean z2722 = z21;
                                                str3 = str7;
                                                getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda81
                                                    @Override // org.telegram.tgnet.RequestDelegate
                                                    public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                        SendMessagesHelper.this.lambda$sendMessage$14(j, i, z2622, z2722, longSparseArray2, arrayList4, arrayList2522, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                    }
                                                }, 68);
                                                i2 = i5;
                                                if (i2 != arrayList.size() - 1) {
                                                }
                                                arrayList18 = arrayList5;
                                                arrayList17 = arrayList2;
                                                arrayList16 = arrayList4;
                                                longSparseArray8 = longSparseArray2;
                                                arrayList15 = arrayList3;
                                            }
                                            z16 = false;
                                            tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                            final ArrayList arrayList25222 = new ArrayList(arrayList22);
                                            arrayList5 = arrayList232;
                                            arrayList2 = arrayList22;
                                            longSparseArray = longSparseArray5;
                                            arrayList4 = arrayList7;
                                            j5 = j9;
                                            tLRPC$Peer2 = tLRPC$Peer3;
                                            tLRPC$InputPeer = tLRPC$InputPeer3;
                                            longSparseArray2 = longSparseArray9;
                                            arrayList3 = arrayList242;
                                            j6 = j11;
                                            final boolean z26222 = i != 2147483646;
                                            final boolean z27222 = z21;
                                            str3 = str7;
                                            getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda81
                                                @Override // org.telegram.tgnet.RequestDelegate
                                                public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                    SendMessagesHelper.this.lambda$sendMessage$14(j, i, z26222, z27222, longSparseArray2, arrayList4, arrayList25222, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                }
                                            }, 68);
                                            i2 = i5;
                                            if (i2 != arrayList.size() - 1) {
                                            }
                                            arrayList18 = arrayList5;
                                            arrayList17 = arrayList2;
                                            arrayList16 = arrayList4;
                                            longSparseArray8 = longSparseArray2;
                                            arrayList15 = arrayList3;
                                        }
                                    }
                                }
                                i4 = 1;
                                if (arrayList7.size() == 100) {
                                }
                                getMessagesStorage().putMessages(new ArrayList<>(arrayList7), false, true, false, 0, i != 0 ? 1 : 0, 0L);
                                getMessagesController().updateInterfaceWithMessages(j12, arrayList22, i != 0 ? 1 : 0);
                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                                getUserConfig().saveConfig(false);
                                final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages2 = new TLRPC$TL_messages_forwardMessages();
                                tLRPC$TL_messages_forwardMessages2.to_peer = tLRPC$InputPeer3;
                                if (z3) {
                                }
                                z15 = true;
                                tLRPC$TL_messages_forwardMessages2.silent = z15;
                                if (messageObject != null) {
                                }
                                if (i != 0) {
                                }
                                if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                }
                                ArrayList<Long> arrayList2322 = arrayList9;
                                tLRPC$TL_messages_forwardMessages2.random_id = arrayList2322;
                                ArrayList<Integer> arrayList2422 = arrayList10;
                                tLRPC$TL_messages_forwardMessages2.id = arrayList2422;
                                tLRPC$TL_messages_forwardMessages2.drop_author = z;
                                tLRPC$TL_messages_forwardMessages2.drop_media_captions = z2;
                                if (arrayList.size() == 1) {
                                }
                                z16 = false;
                                tLRPC$TL_messages_forwardMessages2.with_my_score = z16;
                                final ArrayList arrayList252222 = new ArrayList(arrayList22);
                                arrayList5 = arrayList2322;
                                arrayList2 = arrayList22;
                                longSparseArray = longSparseArray5;
                                arrayList4 = arrayList7;
                                j5 = j9;
                                tLRPC$Peer2 = tLRPC$Peer3;
                                tLRPC$InputPeer = tLRPC$InputPeer3;
                                longSparseArray2 = longSparseArray9;
                                arrayList3 = arrayList2422;
                                j6 = j11;
                                final boolean z262222 = i != 2147483646;
                                final boolean z272222 = z21;
                                str3 = str7;
                                getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages2, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda81
                                    @Override // org.telegram.tgnet.RequestDelegate
                                    public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                        SendMessagesHelper.this.lambda$sendMessage$14(j, i, z262222, z272222, longSparseArray2, arrayList4, arrayList252222, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages2, tLObject, tLRPC$TL_error);
                                    }
                                }, 68);
                                i2 = i5;
                                if (i2 != arrayList.size() - 1) {
                                }
                                arrayList18 = arrayList5;
                                arrayList17 = arrayList2;
                                arrayList16 = arrayList4;
                                longSparseArray8 = longSparseArray2;
                                arrayList15 = arrayList3;
                            } else {
                                tLRPC$TL_message.flags |= 64;
                            }
                        } else {
                            j9 = j8;
                        }
                        if (!tLRPC$TL_message.entities.isEmpty()) {
                        }
                        if (tLRPC$TL_message.attachPath == null) {
                        }
                        int newMessageId2 = getUserConfig().getNewMessageId();
                        tLRPC$TL_message.id = newMessageId2;
                        tLRPC$TL_message.local_id = newMessageId2;
                        tLRPC$TL_message.out = true;
                        j10 = messageObject2.messageOwner.grouped_id;
                        if (j10 != 0) {
                        }
                        tLRPC$Peer3 = tLRPC$Peer;
                        if (tLRPC$Peer3.channel_id == 0) {
                        }
                        tLRPC$Chat4 = tLRPC$Chat3;
                        sendAsPeerId = ChatObject.getSendAsPeerId(tLRPC$Chat4, getMessagesController().getChatFull(-j12), true);
                        if (sendAsPeerId != clientUserId) {
                        }
                        if (tLRPC$TL_message.random_id == 0) {
                        }
                        ArrayList<Long> arrayList192 = arrayList6;
                        arrayList192.add(Long.valueOf(tLRPC$TL_message.random_id));
                        LongSparseArray longSparseArray92 = longSparseArray3;
                        longSparseArray92.put(tLRPC$TL_message.random_id, tLRPC$TL_message);
                        ArrayList<Integer> arrayList202 = arrayList15;
                        arrayList202.add(Integer.valueOf(tLRPC$TL_message.fwd_msg_id));
                        tLRPC$Chat2 = tLRPC$Chat4;
                        int i122 = i3;
                        tLRPC$TL_message.date = i == 0 ? i : getConnectionsManager().getCurrentTime();
                        TLRPC$InputPeer tLRPC$InputPeer32 = tLRPC$InputPeer2;
                        z14 = tLRPC$InputPeer32 instanceof TLRPC$TL_inputPeerChannel;
                        if (z14) {
                        }
                        longSparseArray5 = longSparseArray4;
                        tLRPC$Message = messageObject2.messageOwner;
                        j11 = clientUserId;
                        if ((tLRPC$Message.flags & 1024) != 0) {
                            tLRPC$TL_message.views = tLRPC$Message.views;
                            tLRPC$TL_message.flags |= 1024;
                        }
                        tLRPC$TL_message.unread = true;
                        tLRPC$TL_message.dialog_id = j12;
                        tLRPC$TL_message.peer_id = tLRPC$Peer3;
                        if (!MessageObject.isVoiceMessage(tLRPC$TL_message)) {
                        }
                        if (!z14) {
                        }
                        tLRPC$TL_message.media_unread = true;
                        if (messageObject == null) {
                            tLRPC$Peer4 = tLRPC$MessageReplyHeader.reply_to_peer_id;
                            if (tLRPC$Peer4 != null) {
                            }
                            tLRPC$MessageReplyHeader2 = messageObject2.messageOwner.reply_to;
                            if ((tLRPC$MessageReplyHeader2.flags & 16) != 0) {
                            }
                        }
                        ArrayList<Integer> arrayList212 = arrayList202;
                        MessageObject messageObject32 = new MessageObject(this.currentAccount, tLRPC$TL_message, true, true);
                        messageObject32.scheduled = i == 0;
                        messageObject32.messageOwner.send_state = 1;
                        messageObject32.wasJustSent = true;
                        ArrayList<MessageObject> arrayList222 = arrayList17;
                        arrayList222.add(messageObject32);
                        arrayList7 = arrayList16;
                        arrayList7.add(tLRPC$TL_message);
                        String str72 = str5;
                        if (messageObject2.replyMessageObject != null) {
                        }
                        arrayList8 = arrayList;
                        arrayList9 = arrayList192;
                        arrayList10 = arrayList212;
                        putToSendingMessages(tLRPC$TL_message, i == 0);
                        if (BuildVars.LOGS_ENABLED) {
                        }
                        if (messageObject != null) {
                        }
                        i4 = 1;
                        if (arrayList7.size() == 100) {
                        }
                        getMessagesStorage().putMessages(new ArrayList<>(arrayList7), false, true, false, 0, i != 0 ? 1 : 0, 0L);
                        getMessagesController().updateInterfaceWithMessages(j12, arrayList222, i != 0 ? 1 : 0);
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                        getUserConfig().saveConfig(false);
                        final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages22 = new TLRPC$TL_messages_forwardMessages();
                        tLRPC$TL_messages_forwardMessages22.to_peer = tLRPC$InputPeer32;
                        if (z3) {
                        }
                        z15 = true;
                        tLRPC$TL_messages_forwardMessages22.silent = z15;
                        if (messageObject != null) {
                        }
                        if (i != 0) {
                        }
                        if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                        }
                        ArrayList<Long> arrayList23222 = arrayList9;
                        tLRPC$TL_messages_forwardMessages22.random_id = arrayList23222;
                        ArrayList<Integer> arrayList24222 = arrayList10;
                        tLRPC$TL_messages_forwardMessages22.id = arrayList24222;
                        tLRPC$TL_messages_forwardMessages22.drop_author = z;
                        tLRPC$TL_messages_forwardMessages22.drop_media_captions = z2;
                        if (arrayList.size() == 1) {
                        }
                        z16 = false;
                        tLRPC$TL_messages_forwardMessages22.with_my_score = z16;
                        final ArrayList arrayList2522222 = new ArrayList(arrayList222);
                        arrayList5 = arrayList23222;
                        arrayList2 = arrayList222;
                        longSparseArray = longSparseArray5;
                        arrayList4 = arrayList7;
                        j5 = j9;
                        tLRPC$Peer2 = tLRPC$Peer3;
                        tLRPC$InputPeer = tLRPC$InputPeer32;
                        longSparseArray2 = longSparseArray92;
                        arrayList3 = arrayList24222;
                        j6 = j11;
                        final boolean z2622222 = i != 2147483646;
                        final boolean z2722222 = z21;
                        str3 = str72;
                        getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages22, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda81
                            @Override // org.telegram.tgnet.RequestDelegate
                            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                SendMessagesHelper.this.lambda$sendMessage$14(j, i, z2622222, z2722222, longSparseArray2, arrayList4, arrayList2522222, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages22, tLObject, tLRPC$TL_error);
                            }
                        }, 68);
                        i2 = i5;
                        if (i2 != arrayList.size() - 1) {
                        }
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 19) ? 17 : 18;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    }
                }
                i7 = i2 + 1;
                arrayList11 = arrayList;
                j12 = j;
                z19 = z;
                z20 = z2;
                tLRPC$Chat = tLRPC$Chat2;
                longSparseArray6 = longSparseArray;
                tLRPC$Peer = tLRPC$Peer2;
                j4 = j5;
                tLRPC$InputPeer2 = tLRPC$InputPeer;
                clientUserId = j6;
                str2 = str3;
            }
            return i8;
        }
        long j14 = getMessagesController().getEncryptedChat(Integer.valueOf((int) j)).user_id;
        boolean z28 = (!DialogObject.isUserDialog(j14) || getMessagesController().getUser(Long.valueOf(j14)) == null || (userFull = getMessagesController().getUserFull(j14)) == null) ? true : !userFull.voice_messages_forbidden;
        int i14 = 0;
        for (int i15 = 0; i15 < arrayList.size(); i15++) {
            MessageObject messageObject5 = arrayList.get(i15);
            if (z28 || !MessageObject.isVoiceMessage(messageObject5.messageOwner)) {
                if (!z28 && MessageObject.isRoundVideoMessage(messageObject5.messageOwner) && i14 == 0) {
                    i14 = 8;
                }
            } else if (i14 == 0) {
                i14 = 7;
            }
        }
        if (i14 == 0) {
            for (int i16 = 0; i16 < arrayList.size(); i16++) {
                processForwardFromMyName(arrayList.get(i16), j);
            }
        }
        return i14;
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:51:0x0108  */
    /* JADX WARN: Removed duplicated region for block: B:57:0x0117  */
    /* JADX WARN: Removed duplicated region for block: B:58:0x0120  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$sendMessage$14(final long j, final int i, boolean z, boolean z2, LongSparseArray longSparseArray, ArrayList arrayList, ArrayList arrayList2, final MessageObject messageObject, final TLRPC$Peer tLRPC$Peer, final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages, TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        final SendMessagesHelper sendMessagesHelper;
        TLRPC$Message tLRPC$Message;
        TLRPC$Message tLRPC$Message2;
        TLRPC$Message tLRPC$Message3;
        boolean z3;
        long j2;
        int i2;
        SparseLongArray sparseLongArray;
        TLRPC$Updates tLRPC$Updates;
        final TLRPC$Message tLRPC$Message4;
        int indexOf;
        SendMessagesHelper sendMessagesHelper2 = this;
        int i3 = i;
        ArrayList arrayList3 = arrayList2;
        int i4 = 0;
        if (tLRPC$TL_error == null) {
            SparseLongArray sparseLongArray2 = new SparseLongArray();
            TLRPC$Updates tLRPC$Updates2 = (TLRPC$Updates) tLObject;
            int i5 = 0;
            while (i5 < tLRPC$Updates2.updates.size()) {
                TLRPC$Update tLRPC$Update = tLRPC$Updates2.updates.get(i5);
                if (tLRPC$Update instanceof TLRPC$TL_updateMessageID) {
                    TLRPC$TL_updateMessageID tLRPC$TL_updateMessageID = (TLRPC$TL_updateMessageID) tLRPC$Update;
                    sparseLongArray2.put(tLRPC$TL_updateMessageID.id, tLRPC$TL_updateMessageID.random_id);
                    tLRPC$Updates2.updates.remove(i5);
                    i5--;
                }
                i5++;
            }
            getNotificationCenter().postNotificationNameOnUIThread(NotificationCenter.savedMessagesForwarded, sparseLongArray2);
            Integer num = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(j));
            if (num == null) {
                num = Integer.valueOf(getMessagesStorage().getDialogReadMax(true, j));
                getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(j), num);
            }
            Integer num2 = num;
            int i6 = 0;
            int i7 = 0;
            while (i6 < tLRPC$Updates2.updates.size()) {
                TLRPC$Update tLRPC$Update2 = tLRPC$Updates2.updates.get(i6);
                boolean z4 = tLRPC$Update2 instanceof TLRPC$TL_updateNewMessage;
                if (z4 || (tLRPC$Update2 instanceof TLRPC$TL_updateNewChannelMessage) || (tLRPC$Update2 instanceof TLRPC$TL_updateNewScheduledMessage) || (tLRPC$Update2 instanceof TLRPC$TL_updateQuickReplyMessage)) {
                    boolean z5 = i3 != 0;
                    tLRPC$Updates2.updates.remove(i6);
                    int i8 = i6 - 1;
                    if (z4) {
                        TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update2;
                        tLRPC$Message = tLRPC$TL_updateNewMessage.message;
                        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
                    } else {
                        if (tLRPC$Update2 instanceof TLRPC$TL_updateNewScheduledMessage) {
                            tLRPC$Message2 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update2).message;
                        } else if (tLRPC$Update2 instanceof TLRPC$TL_updateQuickReplyMessage) {
                            QuickRepliesController.getInstance(sendMessagesHelper2.currentAccount).processUpdate(tLRPC$Update2, null, i4);
                            tLRPC$Message2 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update2).message;
                        } else {
                            TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update2;
                            tLRPC$Message = tLRPC$TL_updateNewChannelMessage.message;
                            getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$Message.peer_id.channel_id);
                        }
                        tLRPC$Message3 = tLRPC$Message2;
                        z3 = (z || tLRPC$Message3.date == 2147483646) ? z5 : false;
                        ImageLoader.saveMessageThumbs(tLRPC$Message3);
                        if (!z3) {
                            tLRPC$Message3.unread = num2.intValue() < tLRPC$Message3.id;
                        }
                        if (!z2) {
                            tLRPC$Message3.out = true;
                            tLRPC$Message3.unread = false;
                            tLRPC$Message3.media_unread = false;
                        }
                        j2 = sparseLongArray2.get(tLRPC$Message3.id);
                        if (j2 != 0 || (tLRPC$Message4 = (TLRPC$Message) longSparseArray.get(j2)) == null || (indexOf = arrayList.indexOf(tLRPC$Message4)) == -1) {
                            i2 = i7;
                        } else {
                            MessageObject messageObject2 = (MessageObject) arrayList3.get(indexOf);
                            arrayList.remove(indexOf);
                            arrayList3.remove(indexOf);
                            final int i9 = tLRPC$Message4.id;
                            final ArrayList arrayList4 = new ArrayList();
                            arrayList4.add(tLRPC$Message3);
                            TLRPC$Message tLRPC$Message5 = messageObject2.messageOwner;
                            tLRPC$Message5.post_author = tLRPC$Message3.post_author;
                            if ((tLRPC$Message3.flags & ConnectionsManager.FileTypeVideo) != 0) {
                                tLRPC$Message5.ttl_period = tLRPC$Message3.ttl_period;
                                tLRPC$Message5.flags |= ConnectionsManager.FileTypeVideo;
                            }
                            updateMediaPaths(messageObject2, tLRPC$Message3, tLRPC$Message3.id, null, true);
                            final int mediaExistanceFlags = messageObject2.getMediaExistanceFlags();
                            tLRPC$Message4.id = tLRPC$Message3.id;
                            i2 = i7 + 1;
                            if (i3 != 0 && !z3) {
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda23
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.this.lambda$sendMessage$9(i9, tLRPC$Message4, arrayList4, messageObject, i);
                                    }
                                });
                            } else {
                                final TLRPC$Message tLRPC$Message6 = tLRPC$Message3;
                                sparseLongArray = sparseLongArray2;
                                tLRPC$Updates = tLRPC$Updates2;
                                getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda24
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.this.lambda$sendMessage$11(i, tLRPC$Message6, tLRPC$Message4, tLRPC$Peer, i9, arrayList4, j, mediaExistanceFlags);
                                    }
                                });
                                i7 = i2;
                                i6 = i8;
                            }
                        }
                        sparseLongArray = sparseLongArray2;
                        tLRPC$Updates = tLRPC$Updates2;
                        i7 = i2;
                        i6 = i8;
                    }
                    tLRPC$Message3 = tLRPC$Message;
                    if (z) {
                    }
                    ImageLoader.saveMessageThumbs(tLRPC$Message3);
                    if (!z3) {
                    }
                    if (!z2) {
                    }
                    j2 = sparseLongArray2.get(tLRPC$Message3.id);
                    if (j2 != 0) {
                    }
                    i2 = i7;
                    sparseLongArray = sparseLongArray2;
                    tLRPC$Updates = tLRPC$Updates2;
                    i7 = i2;
                    i6 = i8;
                } else {
                    sparseLongArray = sparseLongArray2;
                    tLRPC$Updates = tLRPC$Updates2;
                }
                i6++;
                i4 = 0;
                sendMessagesHelper2 = this;
                i3 = i;
                tLRPC$Updates2 = tLRPC$Updates;
                sparseLongArray2 = sparseLongArray;
                arrayList3 = arrayList2;
            }
            int i10 = i7;
            TLRPC$Updates tLRPC$Updates3 = tLRPC$Updates2;
            if (!tLRPC$Updates3.updates.isEmpty()) {
                getMessagesController().processUpdates(tLRPC$Updates3, false);
            }
            getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, i10);
            sendMessagesHelper = this;
        } else {
            sendMessagesHelper = this;
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda55
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$sendMessage$12(tLRPC$TL_error, tLRPC$TL_messages_forwardMessages);
                }
            });
        }
        for (int i11 = 0; i11 < arrayList.size(); i11++) {
            final TLRPC$Message tLRPC$Message7 = (TLRPC$Message) arrayList.get(i11);
            getMessagesStorage().markMessageAsSendError(tLRPC$Message7, i != 0 ? 1 : 0);
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda44
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$sendMessage$13(tLRPC$Message7, i);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$9(final int i, final TLRPC$Message tLRPC$Message, final ArrayList arrayList, final MessageObject messageObject, final int i2) {
        ArrayList<Integer> arrayList2 = new ArrayList<>();
        arrayList2.add(Integer.valueOf(i));
        getMessagesController().deleteMessages(arrayList2, null, null, tLRPC$Message.dialog_id, tLRPC$Message.quick_reply_shortcut_id, false, 1);
        getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda33
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendMessage$8(arrayList, messageObject, tLRPC$Message, i, i2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$8(ArrayList arrayList, final MessageObject messageObject, final TLRPC$Message tLRPC$Message, final int i, final int i2) {
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, 0, 0L);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda36
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendMessage$7(messageObject, tLRPC$Message, i, i2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$7(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, int i2) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(new MessageObject(messageObject.currentAccount, messageObject.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message.dialog_id, arrayList, 0);
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        processSentMessage(i);
        removeFromSendingMessages(i, i2 != 0);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$11(final int i, final TLRPC$Message tLRPC$Message, final TLRPC$Message tLRPC$Message2, TLRPC$Peer tLRPC$Peer, final int i2, ArrayList arrayList, final long j, final int i3) {
        int i4 = (tLRPC$Message.quick_reply_shortcut_id == 0 && tLRPC$Message.quick_reply_shortcut == null) ? i != 0 ? 1 : 0 : 5;
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message2.random_id, MessageObject.getPeerId(tLRPC$Peer), Integer.valueOf(i2), tLRPC$Message2.id, 0, false, i != 0 ? 1 : 0, tLRPC$Message.quick_reply_shortcut_id);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, i4, tLRPC$Message.quick_reply_shortcut_id);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda48
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendMessage$10(tLRPC$Message2, j, i2, tLRPC$Message, i3, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$10(TLRPC$Message tLRPC$Message, long j, int i, TLRPC$Message tLRPC$Message2, int i2, int i3) {
        tLRPC$Message.send_state = 0;
        getMediaDataController().increasePeerRaiting(j);
        NotificationCenter notificationCenter = getNotificationCenter();
        int i4 = NotificationCenter.messageReceivedByServer;
        Object[] objArr = new Object[7];
        objArr[0] = Integer.valueOf(i);
        objArr[1] = Integer.valueOf(tLRPC$Message2.id);
        objArr[2] = tLRPC$Message2;
        objArr[3] = Long.valueOf(j);
        objArr[4] = 0L;
        objArr[5] = Integer.valueOf(i2);
        objArr[6] = Boolean.valueOf(i3 != 0);
        notificationCenter.lambda$postNotificationNameOnUIThread$1(i4, objArr);
        processSentMessage(i);
        removeFromSendingMessages(i, i3 != 0);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$12(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages) {
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLRPC$TL_messages_forwardMessages, new Object[0]);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$13(TLRPC$Message tLRPC$Message, int i) {
        tLRPC$Message.send_state = 2;
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
        processSentMessage(tLRPC$Message.id);
        removeFromSendingMessages(tLRPC$Message.id, i != 0);
    }

    public static int canSendMessageToChat(TLRPC$Chat tLRPC$Chat, MessageObject messageObject) {
        boolean canSendStickers = ChatObject.canSendStickers(tLRPC$Chat);
        boolean canSendPhoto = ChatObject.canSendPhoto(tLRPC$Chat);
        boolean canSendVideo = ChatObject.canSendVideo(tLRPC$Chat);
        boolean canSendDocument = ChatObject.canSendDocument(tLRPC$Chat);
        ChatObject.canSendEmbed(tLRPC$Chat);
        boolean canSendPolls = ChatObject.canSendPolls(tLRPC$Chat);
        boolean canSendRoundVideo = ChatObject.canSendRoundVideo(tLRPC$Chat);
        boolean canSendVoice = ChatObject.canSendVoice(tLRPC$Chat);
        boolean canSendMusic = ChatObject.canSendMusic(tLRPC$Chat);
        boolean z = messageObject.isSticker() || messageObject.isAnimatedSticker() || messageObject.isGif() || messageObject.isGame();
        if (!canSendStickers && z) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 8) ? 4 : 1;
        } else if (!canSendPhoto && (messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) && !messageObject.isVideo() && !z) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 16) ? 10 : 12;
        } else if (!canSendMusic && messageObject.isMusic()) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 18) ? 19 : 20;
        } else if (!canSendVideo && messageObject.isVideo() && !z) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 17) ? 9 : 11;
        } else if (!canSendPolls && (messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaPoll)) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 10) ? 6 : 3;
        } else if (!canSendVoice && MessageObject.isVoiceMessage(messageObject.messageOwner)) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 20) ? 13 : 14;
        } else if (!canSendRoundVideo && MessageObject.isRoundVideoMessage(messageObject.messageOwner)) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 21) ? 15 : 16;
        } else if (canSendDocument || !(messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaDocument) || z) {
            return 0;
        } else {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 19) ? 17 : 18;
        }
    }

    private void writePreviousMessageData(TLRPC$Message tLRPC$Message, SerializedData serializedData) {
        TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
        if (tLRPC$MessageMedia == null) {
            new TLRPC$TL_messageMediaEmpty().serializeToStream(serializedData);
        } else {
            tLRPC$MessageMedia.serializeToStream(serializedData);
        }
        String str = tLRPC$Message.message;
        if (str == null) {
            str = "";
        }
        serializedData.writeString(str);
        String str2 = tLRPC$Message.attachPath;
        serializedData.writeString(str2 != null ? str2 : "");
        int size = tLRPC$Message.entities.size();
        serializedData.writeInt32(size);
        for (int i = 0; i < size; i++) {
            tLRPC$Message.entities.get(i).serializeToStream(serializedData);
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:237:0x04f1 A[Catch: Exception -> 0x061e, TryCatch #0 {Exception -> 0x061e, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016d, B:76:0x0171, B:77:0x0175, B:85:0x018f, B:90:0x0198, B:92:0x019c, B:94:0x01ac, B:96:0x01b0, B:113:0x0209, B:117:0x0226, B:119:0x0241, B:121:0x0249, B:124:0x024e, B:125:0x0255, B:126:0x0258, B:129:0x0287, B:131:0x028f, B:141:0x02a7, B:143:0x02ab, B:146:0x02b1, B:153:0x02c5, B:155:0x02c9, B:235:0x04d4, B:237:0x04f1, B:238:0x04f9, B:240:0x04fd, B:241:0x0509, B:243:0x0510, B:244:0x051b, B:246:0x051f, B:250:0x0532, B:252:0x0538, B:259:0x0565, B:254:0x0541, B:256:0x0555, B:258:0x055b, B:261:0x056b, B:264:0x0570, B:268:0x058d, B:269:0x0592, B:273:0x05aa, B:274:0x05af, B:277:0x05c9, B:281:0x05e4, B:282:0x05e8, B:286:0x0604, B:287:0x0608, B:148:0x02b7, B:150:0x02bb, B:159:0x02e6, B:161:0x02ef, B:163:0x02f7, B:165:0x0308, B:166:0x0321, B:168:0x032f, B:175:0x035d, B:177:0x0371, B:179:0x0377, B:181:0x0380, B:182:0x0383, B:171:0x0339, B:173:0x0354, B:174:0x0359, B:186:0x03a0, B:188:0x03ab, B:190:0x03b3, B:192:0x03c4, B:193:0x03d5, B:194:0x03de, B:197:0x03f0, B:201:0x03f9, B:203:0x0400, B:205:0x0408, B:212:0x0433, B:214:0x044d, B:216:0x045a, B:217:0x045e, B:208:0x0411, B:210:0x042b, B:211:0x0430, B:220:0x046b, B:227:0x04a5, B:229:0x04b9, B:231:0x04c6, B:232:0x04ca, B:223:0x0483, B:225:0x049d, B:226:0x04a2, B:97:0x01b9, B:99:0x01bf, B:100:0x01c6, B:102:0x01ca, B:111:0x0203, B:103:0x01d3, B:105:0x01e6, B:107:0x01ec, B:108:0x01f5, B:110:0x01fd, B:82:0x0184, B:84:0x018c, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0161, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015d), top: B:292:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:240:0x04fd A[Catch: Exception -> 0x061e, TryCatch #0 {Exception -> 0x061e, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016d, B:76:0x0171, B:77:0x0175, B:85:0x018f, B:90:0x0198, B:92:0x019c, B:94:0x01ac, B:96:0x01b0, B:113:0x0209, B:117:0x0226, B:119:0x0241, B:121:0x0249, B:124:0x024e, B:125:0x0255, B:126:0x0258, B:129:0x0287, B:131:0x028f, B:141:0x02a7, B:143:0x02ab, B:146:0x02b1, B:153:0x02c5, B:155:0x02c9, B:235:0x04d4, B:237:0x04f1, B:238:0x04f9, B:240:0x04fd, B:241:0x0509, B:243:0x0510, B:244:0x051b, B:246:0x051f, B:250:0x0532, B:252:0x0538, B:259:0x0565, B:254:0x0541, B:256:0x0555, B:258:0x055b, B:261:0x056b, B:264:0x0570, B:268:0x058d, B:269:0x0592, B:273:0x05aa, B:274:0x05af, B:277:0x05c9, B:281:0x05e4, B:282:0x05e8, B:286:0x0604, B:287:0x0608, B:148:0x02b7, B:150:0x02bb, B:159:0x02e6, B:161:0x02ef, B:163:0x02f7, B:165:0x0308, B:166:0x0321, B:168:0x032f, B:175:0x035d, B:177:0x0371, B:179:0x0377, B:181:0x0380, B:182:0x0383, B:171:0x0339, B:173:0x0354, B:174:0x0359, B:186:0x03a0, B:188:0x03ab, B:190:0x03b3, B:192:0x03c4, B:193:0x03d5, B:194:0x03de, B:197:0x03f0, B:201:0x03f9, B:203:0x0400, B:205:0x0408, B:212:0x0433, B:214:0x044d, B:216:0x045a, B:217:0x045e, B:208:0x0411, B:210:0x042b, B:211:0x0430, B:220:0x046b, B:227:0x04a5, B:229:0x04b9, B:231:0x04c6, B:232:0x04ca, B:223:0x0483, B:225:0x049d, B:226:0x04a2, B:97:0x01b9, B:99:0x01bf, B:100:0x01c6, B:102:0x01ca, B:111:0x0203, B:103:0x01d3, B:105:0x01e6, B:107:0x01ec, B:108:0x01f5, B:110:0x01fd, B:82:0x0184, B:84:0x018c, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0161, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015d), top: B:292:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:243:0x0510 A[Catch: Exception -> 0x061e, TryCatch #0 {Exception -> 0x061e, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016d, B:76:0x0171, B:77:0x0175, B:85:0x018f, B:90:0x0198, B:92:0x019c, B:94:0x01ac, B:96:0x01b0, B:113:0x0209, B:117:0x0226, B:119:0x0241, B:121:0x0249, B:124:0x024e, B:125:0x0255, B:126:0x0258, B:129:0x0287, B:131:0x028f, B:141:0x02a7, B:143:0x02ab, B:146:0x02b1, B:153:0x02c5, B:155:0x02c9, B:235:0x04d4, B:237:0x04f1, B:238:0x04f9, B:240:0x04fd, B:241:0x0509, B:243:0x0510, B:244:0x051b, B:246:0x051f, B:250:0x0532, B:252:0x0538, B:259:0x0565, B:254:0x0541, B:256:0x0555, B:258:0x055b, B:261:0x056b, B:264:0x0570, B:268:0x058d, B:269:0x0592, B:273:0x05aa, B:274:0x05af, B:277:0x05c9, B:281:0x05e4, B:282:0x05e8, B:286:0x0604, B:287:0x0608, B:148:0x02b7, B:150:0x02bb, B:159:0x02e6, B:161:0x02ef, B:163:0x02f7, B:165:0x0308, B:166:0x0321, B:168:0x032f, B:175:0x035d, B:177:0x0371, B:179:0x0377, B:181:0x0380, B:182:0x0383, B:171:0x0339, B:173:0x0354, B:174:0x0359, B:186:0x03a0, B:188:0x03ab, B:190:0x03b3, B:192:0x03c4, B:193:0x03d5, B:194:0x03de, B:197:0x03f0, B:201:0x03f9, B:203:0x0400, B:205:0x0408, B:212:0x0433, B:214:0x044d, B:216:0x045a, B:217:0x045e, B:208:0x0411, B:210:0x042b, B:211:0x0430, B:220:0x046b, B:227:0x04a5, B:229:0x04b9, B:231:0x04c6, B:232:0x04ca, B:223:0x0483, B:225:0x049d, B:226:0x04a2, B:97:0x01b9, B:99:0x01bf, B:100:0x01c6, B:102:0x01ca, B:111:0x0203, B:103:0x01d3, B:105:0x01e6, B:107:0x01ec, B:108:0x01f5, B:110:0x01fd, B:82:0x0184, B:84:0x018c, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0161, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015d), top: B:292:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:246:0x051f A[Catch: Exception -> 0x061e, TryCatch #0 {Exception -> 0x061e, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016d, B:76:0x0171, B:77:0x0175, B:85:0x018f, B:90:0x0198, B:92:0x019c, B:94:0x01ac, B:96:0x01b0, B:113:0x0209, B:117:0x0226, B:119:0x0241, B:121:0x0249, B:124:0x024e, B:125:0x0255, B:126:0x0258, B:129:0x0287, B:131:0x028f, B:141:0x02a7, B:143:0x02ab, B:146:0x02b1, B:153:0x02c5, B:155:0x02c9, B:235:0x04d4, B:237:0x04f1, B:238:0x04f9, B:240:0x04fd, B:241:0x0509, B:243:0x0510, B:244:0x051b, B:246:0x051f, B:250:0x0532, B:252:0x0538, B:259:0x0565, B:254:0x0541, B:256:0x0555, B:258:0x055b, B:261:0x056b, B:264:0x0570, B:268:0x058d, B:269:0x0592, B:273:0x05aa, B:274:0x05af, B:277:0x05c9, B:281:0x05e4, B:282:0x05e8, B:286:0x0604, B:287:0x0608, B:148:0x02b7, B:150:0x02bb, B:159:0x02e6, B:161:0x02ef, B:163:0x02f7, B:165:0x0308, B:166:0x0321, B:168:0x032f, B:175:0x035d, B:177:0x0371, B:179:0x0377, B:181:0x0380, B:182:0x0383, B:171:0x0339, B:173:0x0354, B:174:0x0359, B:186:0x03a0, B:188:0x03ab, B:190:0x03b3, B:192:0x03c4, B:193:0x03d5, B:194:0x03de, B:197:0x03f0, B:201:0x03f9, B:203:0x0400, B:205:0x0408, B:212:0x0433, B:214:0x044d, B:216:0x045a, B:217:0x045e, B:208:0x0411, B:210:0x042b, B:211:0x0430, B:220:0x046b, B:227:0x04a5, B:229:0x04b9, B:231:0x04c6, B:232:0x04ca, B:223:0x0483, B:225:0x049d, B:226:0x04a2, B:97:0x01b9, B:99:0x01bf, B:100:0x01c6, B:102:0x01ca, B:111:0x0203, B:103:0x01d3, B:105:0x01e6, B:107:0x01ec, B:108:0x01f5, B:110:0x01fd, B:82:0x0184, B:84:0x018c, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0161, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015d), top: B:292:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:261:0x056b A[Catch: Exception -> 0x061e, TryCatch #0 {Exception -> 0x061e, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016d, B:76:0x0171, B:77:0x0175, B:85:0x018f, B:90:0x0198, B:92:0x019c, B:94:0x01ac, B:96:0x01b0, B:113:0x0209, B:117:0x0226, B:119:0x0241, B:121:0x0249, B:124:0x024e, B:125:0x0255, B:126:0x0258, B:129:0x0287, B:131:0x028f, B:141:0x02a7, B:143:0x02ab, B:146:0x02b1, B:153:0x02c5, B:155:0x02c9, B:235:0x04d4, B:237:0x04f1, B:238:0x04f9, B:240:0x04fd, B:241:0x0509, B:243:0x0510, B:244:0x051b, B:246:0x051f, B:250:0x0532, B:252:0x0538, B:259:0x0565, B:254:0x0541, B:256:0x0555, B:258:0x055b, B:261:0x056b, B:264:0x0570, B:268:0x058d, B:269:0x0592, B:273:0x05aa, B:274:0x05af, B:277:0x05c9, B:281:0x05e4, B:282:0x05e8, B:286:0x0604, B:287:0x0608, B:148:0x02b7, B:150:0x02bb, B:159:0x02e6, B:161:0x02ef, B:163:0x02f7, B:165:0x0308, B:166:0x0321, B:168:0x032f, B:175:0x035d, B:177:0x0371, B:179:0x0377, B:181:0x0380, B:182:0x0383, B:171:0x0339, B:173:0x0354, B:174:0x0359, B:186:0x03a0, B:188:0x03ab, B:190:0x03b3, B:192:0x03c4, B:193:0x03d5, B:194:0x03de, B:197:0x03f0, B:201:0x03f9, B:203:0x0400, B:205:0x0408, B:212:0x0433, B:214:0x044d, B:216:0x045a, B:217:0x045e, B:208:0x0411, B:210:0x042b, B:211:0x0430, B:220:0x046b, B:227:0x04a5, B:229:0x04b9, B:231:0x04c6, B:232:0x04ca, B:223:0x0483, B:225:0x049d, B:226:0x04a2, B:97:0x01b9, B:99:0x01bf, B:100:0x01c6, B:102:0x01ca, B:111:0x0203, B:103:0x01d3, B:105:0x01e6, B:107:0x01ec, B:108:0x01f5, B:110:0x01fd, B:82:0x0184, B:84:0x018c, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0161, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015d), top: B:292:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:264:0x0570 A[Catch: Exception -> 0x061e, TryCatch #0 {Exception -> 0x061e, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016d, B:76:0x0171, B:77:0x0175, B:85:0x018f, B:90:0x0198, B:92:0x019c, B:94:0x01ac, B:96:0x01b0, B:113:0x0209, B:117:0x0226, B:119:0x0241, B:121:0x0249, B:124:0x024e, B:125:0x0255, B:126:0x0258, B:129:0x0287, B:131:0x028f, B:141:0x02a7, B:143:0x02ab, B:146:0x02b1, B:153:0x02c5, B:155:0x02c9, B:235:0x04d4, B:237:0x04f1, B:238:0x04f9, B:240:0x04fd, B:241:0x0509, B:243:0x0510, B:244:0x051b, B:246:0x051f, B:250:0x0532, B:252:0x0538, B:259:0x0565, B:254:0x0541, B:256:0x0555, B:258:0x055b, B:261:0x056b, B:264:0x0570, B:268:0x058d, B:269:0x0592, B:273:0x05aa, B:274:0x05af, B:277:0x05c9, B:281:0x05e4, B:282:0x05e8, B:286:0x0604, B:287:0x0608, B:148:0x02b7, B:150:0x02bb, B:159:0x02e6, B:161:0x02ef, B:163:0x02f7, B:165:0x0308, B:166:0x0321, B:168:0x032f, B:175:0x035d, B:177:0x0371, B:179:0x0377, B:181:0x0380, B:182:0x0383, B:171:0x0339, B:173:0x0354, B:174:0x0359, B:186:0x03a0, B:188:0x03ab, B:190:0x03b3, B:192:0x03c4, B:193:0x03d5, B:194:0x03de, B:197:0x03f0, B:201:0x03f9, B:203:0x0400, B:205:0x0408, B:212:0x0433, B:214:0x044d, B:216:0x045a, B:217:0x045e, B:208:0x0411, B:210:0x042b, B:211:0x0430, B:220:0x046b, B:227:0x04a5, B:229:0x04b9, B:231:0x04c6, B:232:0x04ca, B:223:0x0483, B:225:0x049d, B:226:0x04a2, B:97:0x01b9, B:99:0x01bf, B:100:0x01c6, B:102:0x01ca, B:111:0x0203, B:103:0x01d3, B:105:0x01e6, B:107:0x01ec, B:108:0x01f5, B:110:0x01fd, B:82:0x0184, B:84:0x018c, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0161, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015d), top: B:292:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:265:0x0588  */
    /* JADX WARN: Removed duplicated region for block: B:70:0x0154 A[Catch: Exception -> 0x061e, TryCatch #0 {Exception -> 0x061e, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016d, B:76:0x0171, B:77:0x0175, B:85:0x018f, B:90:0x0198, B:92:0x019c, B:94:0x01ac, B:96:0x01b0, B:113:0x0209, B:117:0x0226, B:119:0x0241, B:121:0x0249, B:124:0x024e, B:125:0x0255, B:126:0x0258, B:129:0x0287, B:131:0x028f, B:141:0x02a7, B:143:0x02ab, B:146:0x02b1, B:153:0x02c5, B:155:0x02c9, B:235:0x04d4, B:237:0x04f1, B:238:0x04f9, B:240:0x04fd, B:241:0x0509, B:243:0x0510, B:244:0x051b, B:246:0x051f, B:250:0x0532, B:252:0x0538, B:259:0x0565, B:254:0x0541, B:256:0x0555, B:258:0x055b, B:261:0x056b, B:264:0x0570, B:268:0x058d, B:269:0x0592, B:273:0x05aa, B:274:0x05af, B:277:0x05c9, B:281:0x05e4, B:282:0x05e8, B:286:0x0604, B:287:0x0608, B:148:0x02b7, B:150:0x02bb, B:159:0x02e6, B:161:0x02ef, B:163:0x02f7, B:165:0x0308, B:166:0x0321, B:168:0x032f, B:175:0x035d, B:177:0x0371, B:179:0x0377, B:181:0x0380, B:182:0x0383, B:171:0x0339, B:173:0x0354, B:174:0x0359, B:186:0x03a0, B:188:0x03ab, B:190:0x03b3, B:192:0x03c4, B:193:0x03d5, B:194:0x03de, B:197:0x03f0, B:201:0x03f9, B:203:0x0400, B:205:0x0408, B:212:0x0433, B:214:0x044d, B:216:0x045a, B:217:0x045e, B:208:0x0411, B:210:0x042b, B:211:0x0430, B:220:0x046b, B:227:0x04a5, B:229:0x04b9, B:231:0x04c6, B:232:0x04ca, B:223:0x0483, B:225:0x049d, B:226:0x04a2, B:97:0x01b9, B:99:0x01bf, B:100:0x01c6, B:102:0x01ca, B:111:0x0203, B:103:0x01d3, B:105:0x01e6, B:107:0x01ec, B:108:0x01f5, B:110:0x01fd, B:82:0x0184, B:84:0x018c, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0161, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015d), top: B:292:0x0022 }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void editMessage(MessageObject messageObject, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str, HashMap<String, String> hashMap, boolean z, boolean z2, Object obj) {
        Object obj2;
        char c;
        Object obj3;
        String str2;
        char c2;
        HashMap<String, String> hashMap2;
        VideoEditedInfo videoEditedInfo2;
        VideoEditedInfo videoEditedInfo3;
        boolean z3;
        String str3;
        String str4;
        boolean z4;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument;
        DelayedMessage delayedMessage;
        VideoEditedInfo videoEditedInfo4;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument2;
        TLRPC$InputMedia tLRPC$InputMedia;
        String str5;
        HashMap<String, String> hashMap3;
        String str6;
        TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto;
        boolean z5;
        String str7;
        TLRPC$InputMedia tLRPC$InputMedia2;
        TLRPC$Message tLRPC$Message;
        CharSequence charSequence;
        TLRPC$TL_inputMediaWebPage tLRPC$TL_inputMediaWebPage;
        TLRPC$EncryptedChat encryptedChat;
        TLRPC$TL_photo tLRPC$TL_photo2 = tLRPC$TL_photo;
        TLRPC$TL_document tLRPC$TL_document2 = tLRPC$TL_document;
        if (messageObject == null) {
            return;
        }
        HashMap<String, String> hashMap4 = hashMap == null ? new HashMap<>() : hashMap;
        TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
        messageObject.cancelEditing = false;
        try {
            long dialogId = messageObject.getDialogId();
            boolean z6 = !DialogObject.isEncryptedDialog(dialogId) || ((encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(dialogId)))) != null && AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 101);
            if (z) {
                TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
                if (!(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) && tLRPC$MessageMedia != null && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaEmpty)) {
                    if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto) {
                        tLRPC$TL_photo2 = (TLRPC$TL_photo) tLRPC$MessageMedia.photo;
                        videoEditedInfo2 = videoEditedInfo;
                        c2 = 2;
                    } else if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument) {
                        tLRPC$TL_document2 = (TLRPC$TL_document) tLRPC$MessageMedia.document;
                        if (!MessageObject.isVideoDocument(tLRPC$TL_document2) && videoEditedInfo == null) {
                            c2 = 7;
                            videoEditedInfo2 = messageObject.videoEditedInfo;
                        }
                        c2 = 3;
                        videoEditedInfo2 = messageObject.videoEditedInfo;
                    } else {
                        videoEditedInfo2 = videoEditedInfo;
                        c2 = 65535;
                    }
                    HashMap<String, String> hashMap5 = tLRPC$Message2.params;
                    Object obj4 = (obj == null || hashMap5 == null || !hashMap5.containsKey("parentObject")) ? obj : hashMap5.get("parentObject");
                    messageObject.editingMessage = tLRPC$Message2.message;
                    messageObject.editingMessageEntities = tLRPC$Message2.entities;
                    str2 = tLRPC$Message2.attachPath;
                    obj2 = "originalPath";
                    obj3 = obj4;
                    hashMap2 = hashMap5;
                }
                videoEditedInfo2 = videoEditedInfo;
                c2 = 1;
                HashMap<String, String> hashMap52 = tLRPC$Message2.params;
                if (obj == null) {
                }
                messageObject.editingMessage = tLRPC$Message2.message;
                messageObject.editingMessageEntities = tLRPC$Message2.entities;
                str2 = tLRPC$Message2.attachPath;
                obj2 = "originalPath";
                obj3 = obj4;
                hashMap2 = hashMap52;
            } else {
                TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$Message2.media;
                messageObject.previousMedia = tLRPC$MessageMedia2;
                messageObject.previousMessage = tLRPC$Message2.message;
                messageObject.previousMessageEntities = tLRPC$Message2.entities;
                messageObject.previousAttachPath = tLRPC$Message2.attachPath;
                if (tLRPC$MessageMedia2 == null) {
                    new TLRPC$TL_messageMediaEmpty();
                }
                SerializedData serializedData = new SerializedData(true);
                writePreviousMessageData(tLRPC$Message2, serializedData);
                SerializedData serializedData2 = new SerializedData(serializedData.length());
                writePreviousMessageData(tLRPC$Message2, serializedData2);
                obj2 = "originalPath";
                hashMap4.put("prevMedia", Base64.encodeToString(serializedData2.toByteArray(), 0));
                serializedData2.cleanup();
                if (tLRPC$TL_photo2 != null) {
                    TLRPC$TL_messageMediaPhoto tLRPC$TL_messageMediaPhoto = new TLRPC$TL_messageMediaPhoto();
                    tLRPC$Message2.media = tLRPC$TL_messageMediaPhoto;
                    tLRPC$TL_messageMediaPhoto.flags |= 3;
                    tLRPC$TL_messageMediaPhoto.photo = tLRPC$TL_photo2;
                    tLRPC$TL_messageMediaPhoto.spoiler = z2;
                    if (str != null && str.length() > 0 && str.startsWith("http")) {
                        tLRPC$Message2.attachPath = str;
                    } else {
                        ArrayList<TLRPC$PhotoSize> arrayList = tLRPC$TL_photo2.sizes;
                        tLRPC$Message2.attachPath = FileLoader.getInstance(this.currentAccount).getPathToAttach(arrayList.get(arrayList.size() - 1).location, true).toString();
                    }
                    c = 2;
                } else if (tLRPC$TL_document2 != null) {
                    TLRPC$TL_messageMediaDocument tLRPC$TL_messageMediaDocument = new TLRPC$TL_messageMediaDocument();
                    tLRPC$Message2.media = tLRPC$TL_messageMediaDocument;
                    tLRPC$TL_messageMediaDocument.flags |= 3;
                    tLRPC$TL_messageMediaDocument.document = tLRPC$TL_document2;
                    tLRPC$TL_messageMediaDocument.spoiler = z2;
                    if (!MessageObject.isVideoDocument(tLRPC$TL_document) && videoEditedInfo == null) {
                        c = 7;
                        if (videoEditedInfo != null) {
                            hashMap4.put("ve", videoEditedInfo.getString());
                        }
                        tLRPC$Message2.attachPath = str;
                    }
                    c = 3;
                    if (videoEditedInfo != null) {
                    }
                    tLRPC$Message2.attachPath = str;
                } else {
                    c = 1;
                }
                tLRPC$Message2.params = hashMap4;
                tLRPC$Message2.send_state = 3;
                obj3 = obj;
                str2 = str;
                c2 = c;
                hashMap2 = hashMap4;
                videoEditedInfo2 = videoEditedInfo;
            }
            if (tLRPC$Message2.attachPath == null) {
                tLRPC$Message2.attachPath = "";
            }
            tLRPC$Message2.local_id = 0;
            int i = messageObject.type;
            TLRPC$TL_document tLRPC$TL_document3 = tLRPC$TL_document2;
            if ((i == 3 || videoEditedInfo2 != null || i == 2) && !TextUtils.isEmpty(tLRPC$Message2.attachPath)) {
                messageObject.attachPathExists = true;
            }
            VideoEditedInfo videoEditedInfo5 = messageObject.videoEditedInfo;
            if (videoEditedInfo5 != null && videoEditedInfo2 == null) {
                videoEditedInfo2 = videoEditedInfo5;
            }
            if (z) {
                videoEditedInfo3 = videoEditedInfo2;
                z3 = z6;
                str3 = "http";
            } else {
                CharSequence charSequence2 = messageObject.editingMessage;
                if (charSequence2 != null) {
                    String str8 = tLRPC$Message2.message;
                    String charSequence3 = charSequence2.toString();
                    tLRPC$Message2.message = charSequence3;
                    videoEditedInfo3 = videoEditedInfo2;
                    messageObject.caption = null;
                    if (c2 == 1) {
                        ArrayList<TLRPC$MessageEntity> arrayList2 = messageObject.editingMessageEntities;
                        if (arrayList2 != null) {
                            tLRPC$Message2.entities = arrayList2;
                            tLRPC$Message2.flags |= 128;
                        } else if (!TextUtils.equals(str8, charSequence3)) {
                            tLRPC$Message2.flags &= -129;
                        }
                    } else {
                        ArrayList<TLRPC$MessageEntity> arrayList3 = messageObject.editingMessageEntities;
                        if (arrayList3 != null) {
                            tLRPC$Message2.entities = arrayList3;
                            tLRPC$Message2.flags |= 128;
                        } else {
                            ArrayList<TLRPC$MessageEntity> entities = getMediaDataController().getEntities(new CharSequence[]{messageObject.editingMessage}, z6);
                            if (entities != null && !entities.isEmpty()) {
                                tLRPC$Message2.entities = entities;
                                tLRPC$Message2.flags |= 128;
                            } else if (!TextUtils.equals(str8, tLRPC$Message2.message)) {
                                tLRPC$Message2.flags &= -129;
                            }
                        }
                        messageObject.generateCaption();
                    }
                } else {
                    videoEditedInfo3 = videoEditedInfo2;
                }
                ArrayList<TLRPC$Message> arrayList4 = new ArrayList<>();
                arrayList4.add(tLRPC$Message2);
                getMessagesStorage().putMessages(arrayList4, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
                getMessagesController().getTopicsController().processEditedMessage(tLRPC$Message2);
                messageObject.type = -1;
                messageObject.setType();
                if (c2 == 1) {
                    TLRPC$MessageMedia tLRPC$MessageMedia3 = messageObject.messageOwner.media;
                    if (!(tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaPhoto) && !(tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaDocument)) {
                        messageObject.resetLayout();
                        messageObject.checkLayout();
                    }
                    messageObject.generateCaption();
                }
                messageObject.createMessageSendInfo();
                ArrayList arrayList5 = new ArrayList();
                arrayList5.add(messageObject);
                z3 = z6;
                str3 = "http";
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.replaceMessagesObjects, Long.valueOf(dialogId), arrayList5);
            }
            if (hashMap2 != null) {
                Object obj5 = obj2;
                if (hashMap2.containsKey(obj5)) {
                    str4 = hashMap2.get(obj5);
                    if ((c2 >= 1 || c2 > 3) && (c2 < 5 || c2 > '\b')) {
                        return;
                    }
                    if (c2 == 1) {
                        TLRPC$MessageMedia tLRPC$MessageMedia4 = tLRPC$Message2.media;
                        if ((tLRPC$MessageMedia4 == null || (tLRPC$MessageMedia4 instanceof TLRPC$TL_messageMediaEmpty) || (tLRPC$MessageMedia4 != null && (tLRPC$MessageMedia4.webpage instanceof TLRPC$TL_webPageEmpty))) && !messageObject.editingMessageSearchWebPage) {
                            tLRPC$TL_inputMediaWebPage = new TLRPC$TL_inputMediaEmpty();
                        } else if (tLRPC$MessageMedia4 != null && tLRPC$MessageMedia4.webpage != null) {
                            TLRPC$TL_inputMediaWebPage tLRPC$TL_inputMediaWebPage2 = new TLRPC$TL_inputMediaWebPage();
                            TLRPC$MessageMedia tLRPC$MessageMedia5 = tLRPC$Message2.media;
                            tLRPC$TL_inputMediaWebPage2.url = tLRPC$MessageMedia5.webpage.url;
                            tLRPC$TL_inputMediaWebPage2.force_small_media = tLRPC$MessageMedia5.force_small_media;
                            tLRPC$TL_inputMediaWebPage2.force_large_media = tLRPC$MessageMedia5.force_large_media;
                            tLRPC$TL_inputMediaWebPage = tLRPC$TL_inputMediaWebPage2;
                        }
                        z4 = false;
                        tLRPC$InputMedia2 = tLRPC$TL_inputMediaWebPage;
                        delayedMessage = null;
                        tLRPC$InputMedia = tLRPC$InputMedia2;
                        TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = new TLRPC$TL_messages_editMessage();
                        tLRPC$TL_messages_editMessage.id = messageObject.getId();
                        tLRPC$TL_messages_editMessage.peer = getMessagesController().getInputPeer(dialogId);
                        tLRPC$Message = messageObject.messageOwner;
                        tLRPC$TL_messages_editMessage.invert_media = tLRPC$Message.invert_media;
                        if (tLRPC$InputMedia != null) {
                            tLRPC$TL_messages_editMessage.flags |= LiteMode.FLAG_ANIMATED_EMOJI_KEYBOARD_NOT_PREMIUM;
                            tLRPC$TL_messages_editMessage.media = tLRPC$InputMedia;
                        }
                        if (messageObject.scheduled) {
                            tLRPC$TL_messages_editMessage.schedule_date = tLRPC$Message.date;
                            tLRPC$TL_messages_editMessage.flags |= LiteMode.FLAG_CHAT_SCALE;
                        }
                        if ((tLRPC$Message.flags & 1073741824) != 0) {
                            tLRPC$TL_messages_editMessage.quick_reply_shortcut_id = tLRPC$Message.quick_reply_shortcut_id;
                            tLRPC$TL_messages_editMessage.flags |= 131072;
                        }
                        charSequence = messageObject.editingMessage;
                        if (charSequence != null) {
                            tLRPC$TL_messages_editMessage.message = charSequence.toString();
                            int i2 = tLRPC$TL_messages_editMessage.flags | 2048;
                            tLRPC$TL_messages_editMessage.flags = i2;
                            tLRPC$TL_messages_editMessage.no_webpage = !messageObject.editingMessageSearchWebPage;
                            ArrayList<TLRPC$MessageEntity> arrayList6 = messageObject.editingMessageEntities;
                            if (arrayList6 != null) {
                                tLRPC$TL_messages_editMessage.entities = arrayList6;
                                tLRPC$TL_messages_editMessage.flags = i2 | 8;
                            } else {
                                ArrayList<TLRPC$MessageEntity> entities2 = getMediaDataController().getEntities(new CharSequence[]{messageObject.editingMessage}, z3);
                                if (entities2 != null && !entities2.isEmpty()) {
                                    tLRPC$TL_messages_editMessage.entities = entities2;
                                    tLRPC$TL_messages_editMessage.flags |= 8;
                                }
                            }
                            messageObject.editingMessage = null;
                            messageObject.editingMessageEntities = null;
                        }
                        if (delayedMessage != null) {
                            delayedMessage.sendRequest = tLRPC$TL_messages_editMessage;
                        }
                        if (c2 == 1) {
                            performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, null, delayedMessage, obj3, hashMap2, messageObject.scheduled);
                            return;
                        } else if (c2 == 2) {
                            if (z4) {
                                performSendDelayedMessage(delayedMessage);
                                return;
                            } else {
                                performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str4, null, true, delayedMessage, obj3, hashMap2, messageObject.scheduled);
                                return;
                            }
                        } else {
                            HashMap<String, String> hashMap6 = hashMap2;
                            if (c2 == 3) {
                                if (z4) {
                                    performSendDelayedMessage(delayedMessage);
                                    return;
                                } else {
                                    performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str4, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                    return;
                                }
                            } else if (c2 == 6) {
                                performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str4, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                return;
                            } else if (c2 == 7) {
                                if (z4) {
                                    performSendDelayedMessage(delayedMessage);
                                    return;
                                } else {
                                    performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str4, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                    return;
                                }
                            } else if (c2 == '\b') {
                                if (z4) {
                                    performSendDelayedMessage(delayedMessage);
                                    return;
                                } else {
                                    performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str4, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                    return;
                                }
                            } else {
                                return;
                            }
                        }
                    }
                    if (c2 == 2) {
                        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                        tLRPC$TL_inputMediaUploadedPhoto.spoiler = z2;
                        if (hashMap2 == null || (str7 = hashMap2.get("masks")) == null) {
                            hashMap3 = hashMap2;
                        } else {
                            SerializedData serializedData3 = new SerializedData(Utilities.hexToBytes(str7));
                            boolean z7 = false;
                            int readInt32 = serializedData3.readInt32(false);
                            int i3 = 0;
                            while (i3 < readInt32) {
                                tLRPC$TL_inputMediaUploadedPhoto.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData3, serializedData3.readInt32(z7), z7));
                                i3++;
                                readInt32 = readInt32;
                                hashMap2 = hashMap2;
                                z7 = false;
                            }
                            hashMap3 = hashMap2;
                            tLRPC$TL_inputMediaUploadedPhoto.flags |= 1;
                            serializedData3.cleanup();
                        }
                        if (tLRPC$TL_photo2.access_hash == 0) {
                            tLRPC$TL_inputMediaPhoto = tLRPC$TL_inputMediaUploadedPhoto;
                            str6 = str2;
                            z5 = true;
                        } else {
                            TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto2 = new TLRPC$TL_inputMediaPhoto();
                            TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                            tLRPC$TL_inputMediaPhoto2.id = tLRPC$TL_inputPhoto;
                            str6 = str2;
                            tLRPC$TL_inputPhoto.id = tLRPC$TL_photo2.id;
                            tLRPC$TL_inputPhoto.access_hash = tLRPC$TL_photo2.access_hash;
                            byte[] bArr = tLRPC$TL_photo2.file_reference;
                            tLRPC$TL_inputPhoto.file_reference = bArr;
                            if (bArr == null) {
                                tLRPC$TL_inputPhoto.file_reference = new byte[0];
                            }
                            tLRPC$TL_inputMediaPhoto2.spoiler = z2;
                            tLRPC$TL_inputMediaPhoto = tLRPC$TL_inputMediaPhoto2;
                            z5 = false;
                        }
                        DelayedMessage delayedMessage2 = new DelayedMessage(dialogId);
                        delayedMessage2.type = 0;
                        delayedMessage2.obj = messageObject;
                        delayedMessage2.originalPath = str4;
                        delayedMessage2.parentObject = obj3;
                        delayedMessage2.inputUploadMedia = tLRPC$TL_inputMediaUploadedPhoto;
                        delayedMessage2.performMediaUpload = z5;
                        if (str6 != null && str6.length() > 0) {
                            String str9 = str6;
                            if (str9.startsWith(str3)) {
                                delayedMessage2.httpLocation = str9;
                                hashMap2 = hashMap3;
                                delayedMessage = delayedMessage2;
                                z4 = z5;
                                tLRPC$InputMedia = tLRPC$TL_inputMediaPhoto;
                            }
                        }
                        ArrayList<TLRPC$PhotoSize> arrayList7 = tLRPC$TL_photo2.sizes;
                        delayedMessage2.photoSize = arrayList7.get(arrayList7.size() - 1);
                        delayedMessage2.locationParent = tLRPC$TL_photo2;
                        hashMap2 = hashMap3;
                        delayedMessage = delayedMessage2;
                        z4 = z5;
                        tLRPC$InputMedia = tLRPC$TL_inputMediaPhoto;
                    } else {
                        HashMap<String, String> hashMap7 = hashMap2;
                        if (c2 == 3) {
                            TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                            tLRPC$TL_inputMediaUploadedDocument.spoiler = z2;
                            hashMap2 = hashMap7;
                            if (hashMap7 != null && (str5 = hashMap2.get("masks")) != null) {
                                SerializedData serializedData4 = new SerializedData(Utilities.hexToBytes(str5));
                                boolean z8 = false;
                                int readInt322 = serializedData4.readInt32(false);
                                int i4 = 0;
                                while (i4 < readInt322) {
                                    tLRPC$TL_inputMediaUploadedDocument.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData4, serializedData4.readInt32(z8), z8));
                                    i4++;
                                    z8 = false;
                                }
                                tLRPC$TL_inputMediaUploadedDocument.flags |= 1;
                                serializedData4.cleanup();
                            }
                            tLRPC$TL_inputMediaUploadedDocument.mime_type = tLRPC$TL_document3.mime_type;
                            tLRPC$TL_inputMediaUploadedDocument.attributes = tLRPC$TL_document3.attributes;
                            if (messageObject.isGif()) {
                                videoEditedInfo4 = videoEditedInfo3;
                            } else {
                                if (videoEditedInfo3 != null) {
                                    videoEditedInfo4 = videoEditedInfo3;
                                    if (!videoEditedInfo4.muted) {
                                    }
                                } else {
                                    videoEditedInfo4 = videoEditedInfo3;
                                }
                                tLRPC$TL_inputMediaUploadedDocument.nosound_video = true;
                                if (BuildVars.DEBUG_VERSION) {
                                    FileLog.d("nosound_video = true");
                                }
                            }
                            if (tLRPC$TL_document3.access_hash == 0) {
                                tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaUploadedDocument;
                                z4 = true;
                            } else {
                                TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument3 = new TLRPC$TL_inputMediaDocument();
                                TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                                tLRPC$TL_inputMediaDocument3.id = tLRPC$TL_inputDocument;
                                tLRPC$TL_inputDocument.id = tLRPC$TL_document3.id;
                                tLRPC$TL_inputDocument.access_hash = tLRPC$TL_document3.access_hash;
                                byte[] bArr2 = tLRPC$TL_document3.file_reference;
                                tLRPC$TL_inputDocument.file_reference = bArr2;
                                if (bArr2 == null) {
                                    tLRPC$TL_inputDocument.file_reference = new byte[0];
                                }
                                tLRPC$TL_inputMediaDocument3.spoiler = z2;
                                z4 = false;
                                tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaDocument3;
                            }
                            DelayedMessage delayedMessage3 = new DelayedMessage(dialogId);
                            delayedMessage3.type = 1;
                            delayedMessage3.obj = messageObject;
                            delayedMessage3.originalPath = str4;
                            delayedMessage3.parentObject = obj3;
                            delayedMessage3.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument;
                            delayedMessage3.performMediaUpload = z4;
                            if (!tLRPC$TL_document3.thumbs.isEmpty()) {
                                TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$TL_document3.thumbs.get(0);
                                if (!(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                                    delayedMessage3.photoSize = tLRPC$PhotoSize;
                                    delayedMessage3.locationParent = tLRPC$TL_document3;
                                }
                            }
                            delayedMessage3.videoEditedInfo = videoEditedInfo4;
                            tLRPC$InputMedia = tLRPC$TL_inputMediaDocument2;
                            delayedMessage = delayedMessage3;
                        } else {
                            hashMap2 = hashMap7;
                            if (c2 == 7) {
                                TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument2 = new TLRPC$TL_inputMediaUploadedDocument();
                                tLRPC$TL_inputMediaUploadedDocument2.mime_type = tLRPC$TL_document3.mime_type;
                                tLRPC$TL_inputMediaUploadedDocument2.attributes = tLRPC$TL_document3.attributes;
                                tLRPC$TL_inputMediaUploadedDocument2.spoiler = z2;
                                if (tLRPC$TL_document3.access_hash == 0) {
                                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaUploadedDocument2;
                                    z4 = true;
                                } else {
                                    TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument4 = new TLRPC$TL_inputMediaDocument();
                                    TLRPC$TL_inputDocument tLRPC$TL_inputDocument2 = new TLRPC$TL_inputDocument();
                                    tLRPC$TL_inputMediaDocument4.id = tLRPC$TL_inputDocument2;
                                    tLRPC$TL_inputDocument2.id = tLRPC$TL_document3.id;
                                    tLRPC$TL_inputDocument2.access_hash = tLRPC$TL_document3.access_hash;
                                    byte[] bArr3 = tLRPC$TL_document3.file_reference;
                                    tLRPC$TL_inputDocument2.file_reference = bArr3;
                                    if (bArr3 == null) {
                                        tLRPC$TL_inputDocument2.file_reference = new byte[0];
                                    }
                                    tLRPC$TL_inputMediaDocument4.spoiler = z2;
                                    z4 = false;
                                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument4;
                                }
                                delayedMessage = new DelayedMessage(dialogId);
                                delayedMessage.originalPath = str4;
                                delayedMessage.type = 2;
                                delayedMessage.obj = messageObject;
                                if (!tLRPC$TL_document3.thumbs.isEmpty()) {
                                    TLRPC$PhotoSize tLRPC$PhotoSize2 = tLRPC$TL_document3.thumbs.get(0);
                                    if (!(tLRPC$PhotoSize2 instanceof TLRPC$TL_photoStrippedSize)) {
                                        delayedMessage.photoSize = tLRPC$PhotoSize2;
                                        delayedMessage.locationParent = tLRPC$TL_document3;
                                    }
                                }
                                delayedMessage.parentObject = obj3;
                                delayedMessage.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument2;
                                delayedMessage.performMediaUpload = z4;
                                tLRPC$InputMedia = tLRPC$TL_inputMediaDocument;
                            }
                        }
                    }
                    TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage2 = new TLRPC$TL_messages_editMessage();
                    tLRPC$TL_messages_editMessage2.id = messageObject.getId();
                    tLRPC$TL_messages_editMessage2.peer = getMessagesController().getInputPeer(dialogId);
                    tLRPC$Message = messageObject.messageOwner;
                    tLRPC$TL_messages_editMessage2.invert_media = tLRPC$Message.invert_media;
                    if (tLRPC$InputMedia != null) {
                    }
                    if (messageObject.scheduled) {
                    }
                    if ((tLRPC$Message.flags & 1073741824) != 0) {
                    }
                    charSequence = messageObject.editingMessage;
                    if (charSequence != null) {
                    }
                    if (delayedMessage != null) {
                    }
                    if (c2 == 1) {
                    }
                    z4 = false;
                    tLRPC$InputMedia2 = null;
                    delayedMessage = null;
                    tLRPC$InputMedia = tLRPC$InputMedia2;
                    TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage22 = new TLRPC$TL_messages_editMessage();
                    tLRPC$TL_messages_editMessage22.id = messageObject.getId();
                    tLRPC$TL_messages_editMessage22.peer = getMessagesController().getInputPeer(dialogId);
                    tLRPC$Message = messageObject.messageOwner;
                    tLRPC$TL_messages_editMessage22.invert_media = tLRPC$Message.invert_media;
                    if (tLRPC$InputMedia != null) {
                    }
                    if (messageObject.scheduled) {
                    }
                    if ((tLRPC$Message.flags & 1073741824) != 0) {
                    }
                    charSequence = messageObject.editingMessage;
                    if (charSequence != null) {
                    }
                    if (delayedMessage != null) {
                    }
                    if (c2 == 1) {
                    }
                }
            }
            str4 = null;
            if (c2 >= 1) {
            }
        } catch (Exception e) {
            FileLog.e(e);
            revertEditingMessageObject(messageObject);
        }
    }

    public int editMessage(MessageObject messageObject, String str, boolean z, final BaseFragment baseFragment, ArrayList<TLRPC$MessageEntity> arrayList, int i) {
        if (baseFragment == null || baseFragment.getParentActivity() == null) {
            return 0;
        }
        final TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = new TLRPC$TL_messages_editMessage();
        tLRPC$TL_messages_editMessage.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (str != null) {
            tLRPC$TL_messages_editMessage.message = str;
            tLRPC$TL_messages_editMessage.flags |= 2048;
            tLRPC$TL_messages_editMessage.no_webpage = !z;
        }
        tLRPC$TL_messages_editMessage.id = messageObject.getId();
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        if (tLRPC$Message != null && (tLRPC$Message.flags & 1073741824) != 0) {
            tLRPC$TL_messages_editMessage.quick_reply_shortcut_id = tLRPC$Message.quick_reply_shortcut_id;
            tLRPC$TL_messages_editMessage.flags |= 131072;
        }
        if (arrayList != null) {
            tLRPC$TL_messages_editMessage.entities = arrayList;
            tLRPC$TL_messages_editMessage.flags |= 8;
        }
        if (i != 0) {
            tLRPC$TL_messages_editMessage.schedule_date = i;
            tLRPC$TL_messages_editMessage.flags |= LiteMode.FLAG_CHAT_SCALE;
        }
        return getConnectionsManager().sendRequest(tLRPC$TL_messages_editMessage, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda90
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$editMessage$16(baseFragment, tLRPC$TL_messages_editMessage, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$editMessage$16(final BaseFragment baseFragment, final TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage, TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
        } else {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda56
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$editMessage$15(tLRPC$TL_error, baseFragment, tLRPC$TL_messages_editMessage);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$editMessage$15(TLRPC$TL_error tLRPC$TL_error, BaseFragment baseFragment, TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage) {
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, baseFragment, tLRPC$TL_messages_editMessage, new Object[0]);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void sendLocation(Location location) {
        TLRPC$TL_messageMediaGeo tLRPC$TL_messageMediaGeo = new TLRPC$TL_messageMediaGeo();
        TLRPC$TL_geoPoint tLRPC$TL_geoPoint = new TLRPC$TL_geoPoint();
        tLRPC$TL_messageMediaGeo.geo = tLRPC$TL_geoPoint;
        tLRPC$TL_geoPoint.lat = AndroidUtilities.fixLocationCoord(location.getLatitude());
        tLRPC$TL_messageMediaGeo.geo._long = AndroidUtilities.fixLocationCoord(location.getLongitude());
        for (Map.Entry<String, MessageObject> entry : this.waitingForLocation.entrySet()) {
            MessageObject value = entry.getValue();
            sendMessage(SendMessageParams.of((TLRPC$MessageMedia) tLRPC$TL_messageMediaGeo, value.getDialogId(), value, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0));
        }
    }

    public void sendCurrentLocation(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(messageObject.getDialogId());
        sb.append("_");
        sb.append(messageObject.getId());
        sb.append("_");
        sb.append(Utilities.bytesToHex(tLRPC$KeyboardButton.data));
        sb.append("_");
        sb.append(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame ? "1" : "0");
        this.waitingForLocation.put(sb.toString(), messageObject);
        this.locationProvider.start();
    }

    public boolean isSendingCurrentLocation(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return false;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(messageObject.getDialogId());
        sb.append("_");
        sb.append(messageObject.getId());
        sb.append("_");
        sb.append(Utilities.bytesToHex(tLRPC$KeyboardButton.data));
        sb.append("_");
        sb.append(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame ? "1" : "0");
        return this.waitingForLocation.containsKey(sb.toString());
    }

    public void sendNotificationCallback(final long j, final int i, final byte[] bArr) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda25
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendNotificationCallback$19(j, i, bArr);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendNotificationCallback$19(long j, int i, byte[] bArr) {
        TLRPC$Chat chatSync;
        TLRPC$User userSync;
        final String str = j + "_" + i + "_" + Utilities.bytesToHex(bArr) + "_0";
        this.waitingForCallback.put(str, Boolean.TRUE);
        final List<String> list = this.waitingForCallbackMap.get(j + "_" + i);
        if (list == null) {
            ArrayList arrayList = new ArrayList();
            this.waitingForCallbackMap.put(j + "_" + i, arrayList);
            list = arrayList;
        }
        list.add(str);
        if (DialogObject.isUserDialog(j)) {
            if (getMessagesController().getUser(Long.valueOf(j)) == null && (userSync = getMessagesStorage().getUserSync(j)) != null) {
                getMessagesController().putUser(userSync, true);
            }
        } else {
            long j2 = -j;
            if (getMessagesController().getChat(Long.valueOf(j2)) == null && (chatSync = getMessagesStorage().getChatSync(j2)) != null) {
                getMessagesController().putChat(chatSync, true);
            }
        }
        TLRPC$TL_messages_getBotCallbackAnswer tLRPC$TL_messages_getBotCallbackAnswer = new TLRPC$TL_messages_getBotCallbackAnswer();
        tLRPC$TL_messages_getBotCallbackAnswer.peer = getMessagesController().getInputPeer(j);
        tLRPC$TL_messages_getBotCallbackAnswer.msg_id = i;
        tLRPC$TL_messages_getBotCallbackAnswer.game = false;
        if (bArr != null) {
            tLRPC$TL_messages_getBotCallbackAnswer.flags |= 1;
            tLRPC$TL_messages_getBotCallbackAnswer.data = bArr;
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_getBotCallbackAnswer, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda83
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendNotificationCallback$18(str, list, tLObject, tLRPC$TL_error);
            }
        }, 2);
        getMessagesController().markDialogAsRead(j, i, i, 0, false, 0L, 0, true, 0);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendNotificationCallback$18(final String str, final List list, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda29
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendNotificationCallback$17(str, list);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendNotificationCallback$17(String str, List list) {
        this.waitingForCallback.remove(str);
        list.remove(str);
    }

    public void onMessageEdited(TLRPC$Message tLRPC$Message) {
        if (tLRPC$Message == null || tLRPC$Message.reply_markup == null) {
            return;
        }
        HashMap<String, List<String>> hashMap = this.waitingForCallbackMap;
        List<String> remove = hashMap.remove(tLRPC$Message.dialog_id + "_" + tLRPC$Message.id);
        if (remove != null) {
            for (String str : remove) {
                this.waitingForCallback.remove(str);
            }
        }
    }

    public byte[] isSendingVote(MessageObject messageObject) {
        if (messageObject == null) {
            return null;
        }
        return this.waitingForVote.get("poll_" + messageObject.getPollId());
    }

    public int sendVote(final MessageObject messageObject, ArrayList<TLRPC$TL_pollAnswer> arrayList, final Runnable runnable) {
        byte[] bArr;
        if (messageObject == null) {
            return 0;
        }
        final String str = "poll_" + messageObject.getPollId();
        if (this.waitingForCallback.containsKey(str)) {
            return 0;
        }
        TLRPC$TL_messages_sendVote tLRPC$TL_messages_sendVote = new TLRPC$TL_messages_sendVote();
        tLRPC$TL_messages_sendVote.msg_id = messageObject.getId();
        tLRPC$TL_messages_sendVote.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (arrayList != null) {
            bArr = new byte[arrayList.size()];
            for (int i = 0; i < arrayList.size(); i++) {
                TLRPC$TL_pollAnswer tLRPC$TL_pollAnswer = arrayList.get(i);
                tLRPC$TL_messages_sendVote.options.add(tLRPC$TL_pollAnswer.option);
                bArr[i] = tLRPC$TL_pollAnswer.option[0];
            }
        } else {
            bArr = new byte[0];
        }
        this.waitingForVote.put(str, bArr);
        return getConnectionsManager().sendRequest(tLRPC$TL_messages_sendVote, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda86
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendVote$21(messageObject, str, runnable, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendVote$21(MessageObject messageObject, final String str, final Runnable runnable, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            this.voteSendTime.put(messageObject.getPollId(), 0L);
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
            this.voteSendTime.put(messageObject.getPollId(), Long.valueOf(SystemClock.elapsedRealtime()));
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda27
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendVote$20(str, runnable);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendVote$20(String str, Runnable runnable) {
        this.waitingForVote.remove(str);
        if (runnable != null) {
            runnable.run();
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public long getVoteSendTime(long j) {
        return this.voteSendTime.get(j, 0L).longValue();
    }

    public void sendReaction(MessageObject messageObject, ArrayList<ReactionsLayoutInBubble.VisibleReaction> arrayList, ReactionsLayoutInBubble.VisibleReaction visibleReaction, boolean z, boolean z2, BaseFragment baseFragment, final Runnable runnable) {
        if (messageObject == null || baseFragment == null) {
            return;
        }
        TLRPC$TL_messages_sendReaction tLRPC$TL_messages_sendReaction = new TLRPC$TL_messages_sendReaction();
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        if (tLRPC$Message.isThreadMessage && tLRPC$Message.fwd_from != null) {
            tLRPC$TL_messages_sendReaction.peer = getMessagesController().getInputPeer(messageObject.getFromChatId());
            tLRPC$TL_messages_sendReaction.msg_id = messageObject.messageOwner.fwd_from.saved_from_msg_id;
        } else {
            tLRPC$TL_messages_sendReaction.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
            tLRPC$TL_messages_sendReaction.msg_id = messageObject.getId();
        }
        tLRPC$TL_messages_sendReaction.add_to_recent = z2;
        if (z2 && visibleReaction != null) {
            MediaDataController.getInstance(this.currentAccount).recentReactions.add(0, ReactionsUtils.toTLReaction(visibleReaction));
        }
        if (arrayList != null && !arrayList.isEmpty()) {
            for (int i = 0; i < arrayList.size(); i++) {
                ReactionsLayoutInBubble.VisibleReaction visibleReaction2 = arrayList.get(i);
                if (visibleReaction2.documentId != 0) {
                    TLRPC$TL_reactionCustomEmoji tLRPC$TL_reactionCustomEmoji = new TLRPC$TL_reactionCustomEmoji();
                    tLRPC$TL_reactionCustomEmoji.document_id = visibleReaction2.documentId;
                    tLRPC$TL_messages_sendReaction.reaction.add(tLRPC$TL_reactionCustomEmoji);
                    tLRPC$TL_messages_sendReaction.flags |= 1;
                } else if (visibleReaction2.emojicon != null) {
                    TLRPC$TL_reactionEmoji tLRPC$TL_reactionEmoji = new TLRPC$TL_reactionEmoji();
                    tLRPC$TL_reactionEmoji.emoticon = visibleReaction2.emojicon;
                    tLRPC$TL_messages_sendReaction.reaction.add(tLRPC$TL_reactionEmoji);
                    tLRPC$TL_messages_sendReaction.flags |= 1;
                }
            }
        }
        if (z) {
            tLRPC$TL_messages_sendReaction.flags |= 2;
            tLRPC$TL_messages_sendReaction.big = true;
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendReaction, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda82
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendReaction$22(runnable, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendReaction$22(Runnable runnable, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLObject != null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
            if (runnable != null) {
                AndroidUtilities.runOnUIThread(runnable);
            }
        }
    }

    public void requestUrlAuth(final String str, final ChatActivity chatActivity, final boolean z) {
        final TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth = new TLRPC$TL_messages_requestUrlAuth();
        tLRPC$TL_messages_requestUrlAuth.url = str;
        tLRPC$TL_messages_requestUrlAuth.flags |= 4;
        getConnectionsManager().sendRequest(tLRPC$TL_messages_requestUrlAuth, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda92
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.lambda$requestUrlAuth$23(ChatActivity.this, tLRPC$TL_messages_requestUrlAuth, str, z, tLObject, tLRPC$TL_error);
            }
        }, 2);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$requestUrlAuth$23(ChatActivity chatActivity, TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth, String str, boolean z, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLObject != null) {
            if (tLObject instanceof TLRPC$TL_urlAuthResultRequest) {
                chatActivity.showRequestUrlAlert((TLRPC$TL_urlAuthResultRequest) tLObject, tLRPC$TL_messages_requestUrlAuth, str, z);
                return;
            } else if (tLObject instanceof TLRPC$TL_urlAuthResultAccepted) {
                AlertsCreator.showOpenUrlAlert(chatActivity, ((TLRPC$TL_urlAuthResultAccepted) tLObject).url, false, false);
                return;
            } else if (tLObject instanceof TLRPC$TL_urlAuthResultDefault) {
                AlertsCreator.showOpenUrlAlert(chatActivity, str, false, z);
                return;
            } else {
                return;
            }
        }
        AlertsCreator.showOpenUrlAlert(chatActivity, str, false, z);
    }

    public void sendCallback(boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity) {
        lambda$sendCallback$24(z, messageObject, tLRPC$KeyboardButton, null, null, chatActivity);
    }

    /* JADX WARN: Removed duplicated region for block: B:20:0x0084  */
    /* JADX WARN: Removed duplicated region for block: B:21:0x00aa  */
    /* JADX WARN: Removed duplicated region for block: B:24:0x00d1  */
    /* JADX WARN: Removed duplicated region for block: B:25:0x00da  */
    /* renamed from: sendCallback */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void lambda$sendCallback$24(final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, final TwoStepVerificationActivity twoStepVerificationActivity, final ChatActivity chatActivity) {
        boolean z2;
        int i;
        List<String> list;
        final ArrayList arrayList;
        if (messageObject == null || tLRPC$KeyboardButton == null || chatActivity == null) {
            return;
        }
        boolean z3 = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth;
        if (z3) {
            i = 3;
        } else if (!(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame)) {
            if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                z2 = z;
                i = 2;
            } else {
                z2 = z;
                i = 0;
            }
            final String str = messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i;
            this.waitingForCallback.put(str, Boolean.TRUE);
            list = this.waitingForCallbackMap.get(messageObject.getDialogId() + "_" + messageObject.getId());
            if (list != null) {
                ArrayList arrayList2 = new ArrayList();
                this.waitingForCallbackMap.put(messageObject.getDialogId() + "_" + messageObject.getId(), arrayList2);
                arrayList = arrayList2;
            } else {
                arrayList = list;
            }
            arrayList.add(str);
            final TLObject[] tLObjectArr = new TLObject[1];
            final boolean z4 = z2;
            RequestDelegate requestDelegate = new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda84
                @Override // org.telegram.tgnet.RequestDelegate
                public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                    SendMessagesHelper.this.lambda$sendCallback$30(str, arrayList, z4, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr, tLRPC$InputCheckPasswordSRP, z, tLObject, tLRPC$TL_error);
                }
            };
            if (!z2) {
                getMessagesStorage().getBotCache(str, requestDelegate);
                return;
            } else if (z3) {
                TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth = new TLRPC$TL_messages_requestUrlAuth();
                tLRPC$TL_messages_requestUrlAuth.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                tLRPC$TL_messages_requestUrlAuth.msg_id = messageObject.getId();
                tLRPC$TL_messages_requestUrlAuth.button_id = tLRPC$KeyboardButton.button_id;
                tLRPC$TL_messages_requestUrlAuth.flags |= 2;
                tLObjectArr[0] = tLRPC$TL_messages_requestUrlAuth;
                getConnectionsManager().sendRequest(tLRPC$TL_messages_requestUrlAuth, requestDelegate, 2);
                return;
            } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                if ((messageObject.messageOwner.media.flags & 4) == 0) {
                    TLRPC$TL_payments_getPaymentForm tLRPC$TL_payments_getPaymentForm = new TLRPC$TL_payments_getPaymentForm();
                    TLRPC$TL_inputInvoiceMessage tLRPC$TL_inputInvoiceMessage = new TLRPC$TL_inputInvoiceMessage();
                    tLRPC$TL_inputInvoiceMessage.msg_id = messageObject.getId();
                    tLRPC$TL_inputInvoiceMessage.peer = getMessagesController().getInputPeer(messageObject.messageOwner.peer_id);
                    tLRPC$TL_payments_getPaymentForm.invoice = tLRPC$TL_inputInvoiceMessage;
                    JSONObject makeThemeParams = BotWebViewSheet.makeThemeParams(null);
                    if (makeThemeParams != null) {
                        TLRPC$TL_dataJSON tLRPC$TL_dataJSON = new TLRPC$TL_dataJSON();
                        tLRPC$TL_payments_getPaymentForm.theme_params = tLRPC$TL_dataJSON;
                        tLRPC$TL_dataJSON.data = makeThemeParams.toString();
                        tLRPC$TL_payments_getPaymentForm.flags |= 1;
                    }
                    getConnectionsManager().sendRequest(tLRPC$TL_payments_getPaymentForm, requestDelegate, 2);
                    return;
                }
                TLRPC$TL_payments_getPaymentReceipt tLRPC$TL_payments_getPaymentReceipt = new TLRPC$TL_payments_getPaymentReceipt();
                tLRPC$TL_payments_getPaymentReceipt.msg_id = messageObject.messageOwner.media.receipt_msg_id;
                tLRPC$TL_payments_getPaymentReceipt.peer = getMessagesController().getInputPeer(messageObject.messageOwner.peer_id);
                getConnectionsManager().sendRequest(tLRPC$TL_payments_getPaymentReceipt, requestDelegate, 2);
                return;
            } else {
                TLRPC$TL_messages_getBotCallbackAnswer tLRPC$TL_messages_getBotCallbackAnswer = new TLRPC$TL_messages_getBotCallbackAnswer();
                tLRPC$TL_messages_getBotCallbackAnswer.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                tLRPC$TL_messages_getBotCallbackAnswer.msg_id = messageObject.getId();
                tLRPC$TL_messages_getBotCallbackAnswer.game = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame;
                if (tLRPC$KeyboardButton.requires_password) {
                    TLRPC$InputCheckPasswordSRP tLRPC$TL_inputCheckPasswordEmpty = tLRPC$InputCheckPasswordSRP != null ? tLRPC$InputCheckPasswordSRP : new TLRPC$TL_inputCheckPasswordEmpty();
                    tLRPC$TL_messages_getBotCallbackAnswer.password = tLRPC$TL_inputCheckPasswordEmpty;
                    tLRPC$TL_messages_getBotCallbackAnswer.password = tLRPC$TL_inputCheckPasswordEmpty;
                    tLRPC$TL_messages_getBotCallbackAnswer.flags |= 4;
                }
                byte[] bArr = tLRPC$KeyboardButton.data;
                if (bArr != null) {
                    tLRPC$TL_messages_getBotCallbackAnswer.flags |= 1;
                    tLRPC$TL_messages_getBotCallbackAnswer.data = bArr;
                }
                getConnectionsManager().sendRequest(tLRPC$TL_messages_getBotCallbackAnswer, requestDelegate, 2);
                return;
            }
        } else {
            i = 1;
        }
        z2 = false;
        final String str2 = messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i;
        this.waitingForCallback.put(str2, Boolean.TRUE);
        list = this.waitingForCallbackMap.get(messageObject.getDialogId() + "_" + messageObject.getId());
        if (list != null) {
        }
        arrayList.add(str2);
        final TLObject[] tLObjectArr2 = new TLObject[1];
        final boolean z42 = z2;
        RequestDelegate requestDelegate2 = new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda84
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendCallback$30(str2, arrayList, z42, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr2, tLRPC$InputCheckPasswordSRP, z, tLObject, tLRPC$TL_error);
            }
        };
        if (!z2) {
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$30(final String str, final List list, final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, final TwoStepVerificationActivity twoStepVerificationActivity, final TLObject[] tLObjectArr, final TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, final boolean z2, final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda30
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendCallback$29(str, list, z, tLObject, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr, tLRPC$TL_error, tLRPC$InputCheckPasswordSRP, z2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$29(String str, List list, boolean z, TLObject tLObject, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, final TwoStepVerificationActivity twoStepVerificationActivity, TLObject[] tLObjectArr, TLRPC$TL_error tLRPC$TL_error, TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, final boolean z2) {
        String str2;
        this.waitingForCallback.remove(str);
        list.remove(str);
        boolean z3 = false;
        if (z && tLObject == null) {
            sendCallback(false, messageObject, tLRPC$KeyboardButton, chatActivity);
            return;
        }
        if (tLObject != null) {
            if (twoStepVerificationActivity != null) {
                twoStepVerificationActivity.needHideProgress();
                twoStepVerificationActivity.finishFragment();
            }
            long fromChatId = messageObject.getFromChatId();
            long j = messageObject.messageOwner.via_bot_id;
            if (j != 0) {
                fromChatId = j;
            }
            if (fromChatId > 0) {
                TLRPC$User user = getMessagesController().getUser(Long.valueOf(fromChatId));
                if (user != null) {
                    str2 = ContactsController.formatName(user.first_name, user.last_name);
                }
                str2 = null;
            } else {
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(-fromChatId));
                if (chat != null) {
                    str2 = chat.title;
                }
                str2 = null;
            }
            if (str2 == null) {
                str2 = "bot";
            }
            if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth) {
                if (tLObject instanceof TLRPC$TL_urlAuthResultRequest) {
                    chatActivity.showRequestUrlAlert((TLRPC$TL_urlAuthResultRequest) tLObject, (TLRPC$TL_messages_requestUrlAuth) tLObjectArr[0], tLRPC$KeyboardButton.url, false);
                } else if (tLObject instanceof TLRPC$TL_urlAuthResultAccepted) {
                    AlertsCreator.showOpenUrlAlert(chatActivity, ((TLRPC$TL_urlAuthResultAccepted) tLObject).url, false, false);
                } else if (tLObject instanceof TLRPC$TL_urlAuthResultDefault) {
                    TLRPC$TL_urlAuthResultDefault tLRPC$TL_urlAuthResultDefault = (TLRPC$TL_urlAuthResultDefault) tLObject;
                    AlertsCreator.showOpenUrlAlert(chatActivity, tLRPC$KeyboardButton.url, false, true);
                }
            } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                if (tLObject instanceof TLRPC$TL_payments_paymentForm) {
                    TLRPC$TL_payments_paymentForm tLRPC$TL_payments_paymentForm = (TLRPC$TL_payments_paymentForm) tLObject;
                    getMessagesController().putUsers(tLRPC$TL_payments_paymentForm.users, false);
                    chatActivity.presentFragment(new PaymentFormActivity(tLRPC$TL_payments_paymentForm, messageObject, chatActivity));
                } else if (tLObject instanceof TLRPC$TL_payments_paymentReceipt) {
                    chatActivity.presentFragment(new PaymentFormActivity((TLRPC$TL_payments_paymentReceipt) tLObject));
                }
            } else {
                TLRPC$TL_messages_botCallbackAnswer tLRPC$TL_messages_botCallbackAnswer = (TLRPC$TL_messages_botCallbackAnswer) tLObject;
                if (!z && tLRPC$TL_messages_botCallbackAnswer.cache_time != 0 && !tLRPC$KeyboardButton.requires_password) {
                    getMessagesStorage().saveBotCache(str, tLRPC$TL_messages_botCallbackAnswer);
                }
                String str3 = tLRPC$TL_messages_botCallbackAnswer.message;
                if (str3 != null) {
                    if (tLRPC$TL_messages_botCallbackAnswer.alert) {
                        if (chatActivity.getParentActivity() == null) {
                            return;
                        }
                        AlertDialog.Builder builder = new AlertDialog.Builder(chatActivity.getParentActivity());
                        builder.setTitle(str2);
                        builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
                        builder.setMessage(tLRPC$TL_messages_botCallbackAnswer.message);
                        chatActivity.showDialog(builder.create());
                        return;
                    }
                    chatActivity.showAlert(str2, str3);
                } else if (tLRPC$TL_messages_botCallbackAnswer.url == null || chatActivity.getParentActivity() == null) {
                } else {
                    TLRPC$User user2 = getMessagesController().getUser(Long.valueOf(fromChatId));
                    boolean z4 = user2 != null && user2.verified;
                    if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame) {
                        TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
                        TLRPC$TL_game tLRPC$TL_game = tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGame ? tLRPC$MessageMedia.game : null;
                        if (tLRPC$TL_game == null) {
                            return;
                        }
                        String str4 = tLRPC$TL_messages_botCallbackAnswer.url;
                        if (!z4) {
                            if (MessagesController.getNotificationsSettings(this.currentAccount).getBoolean("askgame_" + fromChatId, true)) {
                                z3 = true;
                            }
                        }
                        chatActivity.showOpenGameAlert(tLRPC$TL_game, messageObject, str4, z3, fromChatId);
                        return;
                    }
                    AlertsCreator.showOpenUrlAlert(chatActivity, tLRPC$TL_messages_botCallbackAnswer.url, false, false);
                }
            }
        } else if (tLRPC$TL_error == null || chatActivity.getParentActivity() == null) {
        } else {
            if ("PASSWORD_HASH_INVALID".equals(tLRPC$TL_error.text)) {
                if (tLRPC$InputCheckPasswordSRP == null) {
                    AlertDialog.Builder builder2 = new AlertDialog.Builder(chatActivity.getParentActivity());
                    builder2.setTitle(LocaleController.getString("BotOwnershipTransfer", R.string.BotOwnershipTransfer));
                    builder2.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferReadyAlertText", R.string.BotOwnershipTransferReadyAlertText, new Object[0])));
                    builder2.setPositiveButton(LocaleController.getString("BotOwnershipTransferChangeOwner", R.string.BotOwnershipTransferChangeOwner), new DialogInterface.OnClickListener() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda0
                        @Override // android.content.DialogInterface.OnClickListener
                        public final void onClick(DialogInterface dialogInterface, int i) {
                            SendMessagesHelper.this.lambda$sendCallback$25(z2, messageObject, tLRPC$KeyboardButton, chatActivity, dialogInterface, i);
                        }
                    });
                    builder2.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                    chatActivity.showDialog(builder2.create());
                }
            } else if ("PASSWORD_MISSING".equals(tLRPC$TL_error.text) || tLRPC$TL_error.text.startsWith("PASSWORD_TOO_FRESH_") || tLRPC$TL_error.text.startsWith("SESSION_TOO_FRESH_")) {
                if (twoStepVerificationActivity != null) {
                    twoStepVerificationActivity.needHideProgress();
                }
                AlertDialog.Builder builder3 = new AlertDialog.Builder(chatActivity.getParentActivity());
                builder3.setTitle(LocaleController.getString("EditAdminTransferAlertTitle", R.string.EditAdminTransferAlertTitle));
                LinearLayout linearLayout = new LinearLayout(chatActivity.getParentActivity());
                linearLayout.setPadding(AndroidUtilities.dp(24.0f), AndroidUtilities.dp(2.0f), AndroidUtilities.dp(24.0f), 0);
                linearLayout.setOrientation(1);
                builder3.setView(linearLayout);
                TextView textView = new TextView(chatActivity.getParentActivity());
                int i = Theme.key_dialogTextBlack;
                textView.setTextColor(Theme.getColor(i));
                textView.setTextSize(1, 16.0f);
                textView.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView.setText(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferAlertText", R.string.BotOwnershipTransferAlertText, new Object[0])));
                linearLayout.addView(textView, LayoutHelper.createLinear(-1, -2));
                LinearLayout linearLayout2 = new LinearLayout(chatActivity.getParentActivity());
                linearLayout2.setOrientation(0);
                linearLayout.addView(linearLayout2, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView imageView = new ImageView(chatActivity.getParentActivity());
                int i2 = R.drawable.list_circle;
                imageView.setImageResource(i2);
                imageView.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                imageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor(i), PorterDuff.Mode.MULTIPLY));
                TextView textView2 = new TextView(chatActivity.getParentActivity());
                textView2.setTextColor(Theme.getColor(i));
                textView2.setTextSize(1, 16.0f);
                textView2.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView2.setText(AndroidUtilities.replaceTags(LocaleController.getString("EditAdminTransferAlertText1", R.string.EditAdminTransferAlertText1)));
                if (LocaleController.isRTL) {
                    linearLayout2.addView(textView2, LayoutHelper.createLinear(-1, -2));
                    linearLayout2.addView(imageView, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout2.addView(imageView, LayoutHelper.createLinear(-2, -2));
                    linearLayout2.addView(textView2, LayoutHelper.createLinear(-1, -2));
                }
                LinearLayout linearLayout3 = new LinearLayout(chatActivity.getParentActivity());
                linearLayout3.setOrientation(0);
                linearLayout.addView(linearLayout3, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView imageView2 = new ImageView(chatActivity.getParentActivity());
                imageView2.setImageResource(i2);
                imageView2.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                imageView2.setColorFilter(new PorterDuffColorFilter(Theme.getColor(i), PorterDuff.Mode.MULTIPLY));
                TextView textView3 = new TextView(chatActivity.getParentActivity());
                textView3.setTextColor(Theme.getColor(i));
                textView3.setTextSize(1, 16.0f);
                textView3.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView3.setText(AndroidUtilities.replaceTags(LocaleController.getString("EditAdminTransferAlertText2", R.string.EditAdminTransferAlertText2)));
                if (LocaleController.isRTL) {
                    linearLayout3.addView(textView3, LayoutHelper.createLinear(-1, -2));
                    linearLayout3.addView(imageView2, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout3.addView(imageView2, LayoutHelper.createLinear(-2, -2));
                    linearLayout3.addView(textView3, LayoutHelper.createLinear(-1, -2));
                }
                if ("PASSWORD_MISSING".equals(tLRPC$TL_error.text)) {
                    builder3.setPositiveButton(LocaleController.getString("EditAdminTransferSetPassword", R.string.EditAdminTransferSetPassword), new DialogInterface.OnClickListener() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda1
                        @Override // android.content.DialogInterface.OnClickListener
                        public final void onClick(DialogInterface dialogInterface, int i3) {
                            SendMessagesHelper.lambda$sendCallback$26(ChatActivity.this, dialogInterface, i3);
                        }
                    });
                    builder3.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                } else {
                    TextView textView4 = new TextView(chatActivity.getParentActivity());
                    textView4.setTextColor(Theme.getColor(i));
                    textView4.setTextSize(1, 16.0f);
                    textView4.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                    textView4.setText(LocaleController.getString("EditAdminTransferAlertText3", R.string.EditAdminTransferAlertText3));
                    linearLayout.addView(textView4, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                    builder3.setNegativeButton(LocaleController.getString("OK", R.string.OK), null);
                }
                chatActivity.showDialog(builder3.create());
            } else if ("SRP_ID_INVALID".equals(tLRPC$TL_error.text)) {
                ConnectionsManager.getInstance(this.currentAccount).sendRequest(new TLRPC$TL_account_getPassword(), new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda91
                    @Override // org.telegram.tgnet.RequestDelegate
                    public final void run(TLObject tLObject2, TLRPC$TL_error tLRPC$TL_error2) {
                        SendMessagesHelper.this.lambda$sendCallback$28(twoStepVerificationActivity, z2, messageObject, tLRPC$KeyboardButton, chatActivity, tLObject2, tLRPC$TL_error2);
                    }
                }, 8);
            } else if (twoStepVerificationActivity != null) {
                twoStepVerificationActivity.needHideProgress();
                twoStepVerificationActivity.finishFragment();
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$25(final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, DialogInterface dialogInterface, int i) {
        final TwoStepVerificationActivity twoStepVerificationActivity = new TwoStepVerificationActivity();
        twoStepVerificationActivity.setDelegate(0, new TwoStepVerificationActivity.TwoStepVerificationActivityDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda93
            @Override // org.telegram.ui.TwoStepVerificationActivity.TwoStepVerificationActivityDelegate
            public final void didEnterPassword(TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP) {
                SendMessagesHelper.this.lambda$sendCallback$24(z, messageObject, tLRPC$KeyboardButton, twoStepVerificationActivity, chatActivity, tLRPC$InputCheckPasswordSRP);
            }
        });
        chatActivity.presentFragment(twoStepVerificationActivity);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$sendCallback$26(ChatActivity chatActivity, DialogInterface dialogInterface, int i) {
        chatActivity.presentFragment(new TwoStepVerificationSetupActivity(6, null));
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$28(final TwoStepVerificationActivity twoStepVerificationActivity, final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda53
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendCallback$27(tLRPC$TL_error, tLObject, twoStepVerificationActivity, z, messageObject, tLRPC$KeyboardButton, chatActivity);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$27(TLRPC$TL_error tLRPC$TL_error, TLObject tLObject, TwoStepVerificationActivity twoStepVerificationActivity, boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity) {
        if (tLRPC$TL_error == null) {
            TLRPC$account_Password tLRPC$account_Password = (TLRPC$account_Password) tLObject;
            twoStepVerificationActivity.setCurrentPasswordInfo(null, tLRPC$account_Password);
            TwoStepVerificationActivity.initPasswordNewAlgo(tLRPC$account_Password);
            lambda$sendCallback$24(z, messageObject, tLRPC$KeyboardButton, twoStepVerificationActivity.getNewSrpPassword(), twoStepVerificationActivity, chatActivity);
        }
    }

    public boolean isSendingCallback(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        int i = 0;
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return false;
        }
        if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth) {
            i = 3;
        } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame) {
            i = 1;
        } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
            i = 2;
        }
        return this.waitingForCallback.containsKey(messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i);
    }

    public void sendGame(TLRPC$InputPeer tLRPC$InputPeer, TLRPC$TL_inputMediaGame tLRPC$TL_inputMediaGame, long j, final long j2) {
        NativeByteBuffer nativeByteBuffer;
        if (tLRPC$InputPeer == null || tLRPC$TL_inputMediaGame == null) {
            return;
        }
        TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = new TLRPC$TL_messages_sendMedia();
        tLRPC$TL_messages_sendMedia.peer = tLRPC$InputPeer;
        if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChannel) {
            SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings.getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + (-tLRPC$InputPeer.channel_id), false);
        } else if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChat) {
            SharedPreferences notificationsSettings2 = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings2.getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + (-tLRPC$InputPeer.chat_id), false);
        } else {
            SharedPreferences notificationsSettings3 = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings3.getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + tLRPC$InputPeer.user_id, false);
        }
        tLRPC$TL_messages_sendMedia.random_id = j != 0 ? j : getNextRandomId();
        tLRPC$TL_messages_sendMedia.message = "";
        tLRPC$TL_messages_sendMedia.media = tLRPC$TL_inputMediaGame;
        long sendAsPeerId = ChatObject.getSendAsPeerId(getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer.chat_id)), getMessagesController().getChatFull(tLRPC$InputPeer.chat_id));
        if (sendAsPeerId != UserConfig.getInstance(this.currentAccount).getClientUserId()) {
            tLRPC$TL_messages_sendMedia.send_as = getMessagesController().getInputPeer(sendAsPeerId);
        }
        if (j2 == 0) {
            NativeByteBuffer nativeByteBuffer2 = null;
            try {
                nativeByteBuffer = new NativeByteBuffer(tLRPC$InputPeer.getObjectSize() + tLRPC$TL_inputMediaGame.getObjectSize() + 4 + 8);
                try {
                    nativeByteBuffer.writeInt32(3);
                    nativeByteBuffer.writeInt64(j);
                    tLRPC$InputPeer.serializeToStream(nativeByteBuffer);
                    tLRPC$TL_inputMediaGame.serializeToStream(nativeByteBuffer);
                } catch (Exception e) {
                    e = e;
                    nativeByteBuffer2 = nativeByteBuffer;
                    FileLog.e(e);
                    nativeByteBuffer = nativeByteBuffer2;
                    j2 = getMessagesStorage().createPendingTask(nativeByteBuffer);
                    getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda80
                        @Override // org.telegram.tgnet.RequestDelegate
                        public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                            SendMessagesHelper.this.lambda$sendGame$31(j2, tLObject, tLRPC$TL_error);
                        }
                    });
                }
            } catch (Exception e2) {
                e = e2;
            }
            j2 = getMessagesStorage().createPendingTask(nativeByteBuffer);
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda80
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendGame$31(j2, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendGame$31(long j, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
        }
        if (j != 0) {
            getMessagesStorage().removePendingTask(j);
        }
    }

    /* JADX WARN: Can't wrap try/catch for region: R(78:10|(1:13)|14|(1:19)|(1:1793)(1:23)|24|(1:26)(1:1792)|27|(2:29|(1:(2:32|33)(1:34))(1:35))(2:1778|(72:1780|(1:1782)(1:1790)|(1:1789)(1:1787)|1788|37|38|(5:40|(3:43|44|(1:46))|60|(7:66|(1:68)(5:1423|(2:1428|(1:1430)(2:1431|(3:1433|(1:1435)|1436)(5:1437|(2:1444|(1:1446)(5:1447|(2:1458|(3:1460|(1:1462)|1463)(2:1464|(1:1466)(1:1467)))|1468|(1:1470)|1471))|1472|(1:1474)|1475)))|1476|(1:1478)(1:1480)|1479)|(1:72)|73|74|(1:76)(1:1421)|77)|1481)(6:1482|1483|1484|(1:1486)(1:1772)|1487|(3:(1:1490)(1:1555)|(3:1546|1547|(2:1549|(1:1551)(1:1552)))|(14:(1:1533)(2:1542|(1:1544)(1:1545))|(1:1541)(1:1537)|1538|1539|1540|(1:1531)(1:1507)|(1:1509)(3:1527|1528|(1:1530))|1510|(1:1512)|1513|(2:1523|(1:1525)(3:1526|1518|1519))(1:1516)|1517|1518|1519)(10:1503|(1:1505)|1531|(0)(0)|1510|(0)|1513|(0)|1523|(0)(0)))(14:1556|1557|(4:(1:1560)(1:1565)|1561|1562|1563)(2:1566|(5:(1:1569)(1:1578)|1570|1571|(1:1577)(1:1575)|1576)(13:1579|(14:(1:1582)(1:1614)|1583|1584|(1:1586)|1587|(1:1589)|1590|(1:1613)(1:1594)|(1:1612)(2:1598|(2:1600|1601))|1604|1605|1606|1607|1601)(12:1615|1616|(4:1618|1619|(1:1621)|1624)(1:(5:1626|1627|1628|(1:1630)|1624)(2:(9:(1:1634)(1:1654)|1635|(1:1653)(1:1639)|1640|(1:1642)|1643|(1:1645)|(1:1652)(1:1649)|1650)(2:1655|(12:(1:1658)(1:1755)|1659|1660|(1:1752)(5:1663|1664|(2:1666|(3:1669|1670|1671)(1:1668))|1749|1750)|1751|1672|(1:1674)|1675|(3:1735|(2:1738|(1:1740)(1:1741))|1748)(1:1679)|(3:1681|(1:1683)|1684)|(1:1734)(1:1694)|(1:1733)(4:1701|(2:1702|(5:1704|1705|1706|1707|(3:1710|1711|(4:1713|(1:1715)(1:1726)|1716|(1:1718)(3:1721|(1:1723)(1:1725)|1724))(1:1727))(1:1709))(2:1730|1731))|1719|1720))(3:1756|(2:(1:1759)(1:1762)|1760)(1:1763)|1761))|1651))|(0)|1531|(0)(0)|1510|(0)|1513|(0)|1523|(0)(0))|1602|1603|(0)|1531|(0)(0)|1510|(0)|1513|(0)|1523|(0)(0)))|1564|1540|(0)|1531|(0)(0)|1510|(0)|1513|(0)|1523|(0)(0)))|(4:79|80|81|(64:83|84|85|86|(1:88)|(54:92|93|(1:1406)(2:(3:98|(1:100)|101)(1:1405)|102)|103|(3:105|106|(1:108)(47:1402|126|(1:128)(2:1355|(52:1357|(41:1363|130|131|132|(1:134)(1:1354)|(2:137|(1:139))|140|(2:142|(2:144|(2:146|147)(2:148|(1:150))))(6:1307|1308|(1:1310)(1:1353)|(2:1312|1313)(3:1347|1348|(1:1352))|1314|(1:1346)(2:1318|(3:1320|(2:1321|(2:1323|(2:1326|1327)(1:1325))(2:1329|1330))|1328)(2:1331|(3:1335|(2:1336|(2:1338|(2:1341|1342)(1:1340))(2:1344|1345))|1343))))|(1:1306)(15:157|(1:159)(1:1305)|160|(2:162|(11:164|(2:170|(10:174|(7:176|177|(1:179)(1:1300)|(1:1299)(1:185)|(2:189|(2:(1:192)(1:205)|(6:194|(1:198)|199|(1:201)|202|(1:204))))|1298|(0))|1301|177|(0)(0)|(1:181)|1299|(2:189|(0))|1298|(0)))|1302|1301|177|(0)(0)|(0)|1299|(0)|1298|(0)))(1:1304)|1303|(4:166|168|170|(11:172|174|(0)|1301|177|(0)(0)|(0)|1299|(0)|1298|(0)))|1302|1301|177|(0)(0)|(0)|1299|(0)|1298|(0))|206|(2:1296|1297)|210|(1:212)|213|214|215|(4:217|(1:219)(1:1294)|220|(18:222|(1:1292)(1:228)|229|230|231|232|(1:234)(1:1284)|235|(3:1275|1276|(1:1283))|237|(2:(3:1265|1266|(1:1268))(1:1273)|1272)(1:240)|241|242|(6:1246|1247|(1:1249)(1:(2:1256|1257)(1:1259))|1250|(1:1252)(1:1254)|1253)(8:244|245|246|(2:248|249)|(3:251|(1:253)(1:1242)|254)(1:1243)|255|256|(1:258))|259|(1:1240)(2:262|263)|264|(2:1063|(1:(20:1133|1134|(1:1136)(1:1199)|1137|(1:1139)(2:1196|(1:1198))|(1:1143)|1144|(1:1146)|(1:1150)|(3:1152|1153|1154)(1:1194)|1155|1156|(1:1158)|1160|1161|(1:1163)(1:1188)|1164|1165|1166|(6:1168|(3:1178|1179|1180)(1:1170)|1171|1172|1173|1175)(1:1185))(22:1066|1067|1068|(1:1070)(1:1130)|1071|1072|(1:1074)(2:1125|(1:1127))|1075|(1:1077)|(1:1081)|1082|(1:1084)|(1:1086)|(1:1090)|(1:1092)|1094|1095|(1:1097)(1:1123)|1098|1099|1100|(6:1102|(3:1113|1114|1115)(1:1104)|1105|1106|1107|1109)(1:1120)))(11:1202|1203|1204|(1:1208)|1209|(2:1211|(1:1213))|(1:1217)|1218|(1:1233)(1:1222)|1223|(4:1225|(1:1227)(1:1231)|1228|1230)(1:1232)))(2:270|(3:957|958|(14:1020|1021|(1:1023)|(2:1025|(12:1027|(2:1029|(1:1031)(1:1053))(1:1054)|1032|1033|(1:1035)|1036|(1:1038)(2:1046|(1:1048)(2:1049|(1:1051)))|1039|(1:1041)(1:1045)|1042|1043|1044))(1:1056)|1055|1033|(0)|1036|(0)(0)|1039|(0)(0)|1042|1043|1044)(2:960|(20:962|963|(1:965)|966|(1:968)|969|(1:971)(1:1016)|972|(2:974|975)(2:1013|(1:1015))|976|(1:978)|979|980|(7:982|983|984|(2:986|987)(1:1007)|988|989|990)(1:1011)|991|(1:993)(1:1002)|994|995|996|998)(1:1019)))(10:274|275|(8:277|278|(5:280|281|(1:283)(2:428|(4:430|(1:432)|433|(1:435))(1:436))|284|285)(2:437|(13:648|649|650|(1:652)|(1:687)(4:656|(1:658)|659|660)|661|662|(1:664)(4:681|(2:683|684)|685|686)|(3:666|(1:668)(1:670)|669)|671|(2:675|(2:677|678))|679|678)(3:442|(17:571|572|(12:574|(1:(2:577|(1:579)))(1:644)|(1:587)|(3:622|623|(13:625|626|627|(4:629|630|631|632)|636|637|590|591|(1:593)(6:607|608|609|(1:611)|(1:615)|616)|(3:595|(1:597)(1:605)|598)(1:606)|599|(2:601|(1:603))|604))|589|590|591|(0)(0)|(0)(0)|599|(0)|604)|645|581|582|(1:584)|(0)|(0)|589|590|591|(0)(0)|(0)(0)|599|(0)|604)(2:444|(3:446|(1:453)(1:450)|451)(9:454|455|(3:460|(7:462|(4:464|465|466|467)|468|(1:470)(4:477|(1:479)|(1:483)|484)|471|(1:473)(1:476)|474)(4:485|(4:487|(2:491|(4:493|(2:496|494)|497|498))|499|(2:501|(1:503)))(2:506|(1:508)(2:509|(1:511)(2:512|505)))|504|505)|475)|513|(5:546|(3:548|549|550)(1:566)|(1:565)|(1:564)(1:562)|563)(1:519)|520|(1:522)(4:538|(1:540)|(1:544)|545)|(3:(3:525|(1:527)(1:535)|528)(1:536)|529|(2:531|(1:533)))(1:537)|534))|452))|286|287|(5:289|(1:291)(6:380|(1:382)(2:391|(1:393))|(2:384|385)(1:390)|386|(1:388)|389)|292|(1:296)|297)(14:394|395|396|(1:398)|(1:400)(2:421|(1:423))|401|(1:403)|404|(1:408)|(1:410)|(1:414)|415|(1:417)|(1:419))|298|(2:300|302)(2:303|(6:305|(1:307)(1:316)|308|309|310|312)(5:317|318|(1:(1:321)(6:325|(1:327)(1:335)|328|329|330|332))(2:336|(1:(1:339)(2:(1:341)(1:343)|342))(2:344|(2:(1:347)(1:349)|348)(2:350|(1:(2:(1:356)(1:358)|357)(1:354))(2:359|(1:(1:362)(2:(1:364)(1:366)|365))(2:367|(2:(1:375)(1:377)|376)(1:373))))))|322|323)))(17:693|694|695|696|(3:933|934|(1:936)(1:937))(2:698|699)|700|(1:704)|705|(2:707|(1:709))|710|(3:712|713|(1:715))|716|717|(3:719|(1:721)(1:763)|722)(8:764|(3:770|(11:772|(9:777|(1:814)(1:781)|782|(2:783|(2:785|(2:788|789)(1:787))(1:813))|790|(1:795)|812|807|(1:809))|815|(1:820)(1:819)|782|(3:783|(0)(0)|787)|790|(2:792|795)|812|807|(0))(3:821|(1:823)(5:825|(2:831|(5:833|(1:835)(1:841)|836|(1:838)(1:840)|839))|842|843|(7:859|(2:861|(1:863)(1:891))(1:892)|864|(1:869)|(1:887)|888|(1:890))(4:849|(1:851)(1:858)|(2:853|(1:855))(1:857)|856))|824)|796)|893|894|895|(3:897|898|899)(2:928|929)|900|(5:(6:906|(2:908|(4:910|911|(1:913)(1:915)|914))|916|911|(0)(0)|914)|917|(2:925|926)(1:921)|922|(1:924))(1:904))|723|(10:744|745|(1:747)(1:760)|748|749|750|751|(2:756|757)|758|757)(1:725)|(6:727|728|(2:730|731)(1:738)|732|733|734)(1:743))|570|51|(1:53)(1:59)|54|(1:56)|57|58))))(1:1295)|1293|(0)|1292|229|230|231|232|(0)(0)|235|(0)|237|(0)|(0)(0)|1272|241|242|(0)(0)|259|(0)|1240|264|(1:266)|1063|(0)(0))|1364|(2:1366|(46:1368|1369|(2:1385|(1:1387))(2:1374|(1:1376))|(2:1378|(43:1380|(1:1384)|132|(0)(0)|(2:137|(0))|140|(0)(0)|(0)|1306|206|(1:208)|1296|1297|210|(0)|213|214|215|(0)(0)|1293|(0)|1292|229|230|231|232|(0)(0)|235|(0)|237|(0)|(0)(0)|1272|241|242|(0)(0)|259|(0)|1240|264|(0)|1063|(0)(0)))|131|132|(0)(0)|(0)|140|(0)(0)|(0)|1306|206|(0)|1296|1297|210|(0)|213|214|215|(0)(0)|1293|(0)|1292|229|230|231|232|(0)(0)|235|(0)|237|(0)|(0)(0)|1272|241|242|(0)(0)|259|(0)|1240|264|(0)|1063|(0)(0)))(1:1389)|1388|1369|(0)|1385|(0)|(0)|131|132|(0)(0)|(0)|140|(0)(0)|(0)|1306|206|(0)|1296|1297|210|(0)|213|214|215|(0)(0)|1293|(0)|1292|229|230|231|232|(0)(0)|235|(0)|237|(0)|(0)(0)|1272|241|242|(0)(0)|259|(0)|1240|264|(0)|1063|(0)(0)))|129|130|131|132|(0)(0)|(0)|140|(0)(0)|(0)|1306|206|(0)|1296|1297|210|(0)|213|214|215|(0)(0)|1293|(0)|1292|229|230|231|232|(0)(0)|235|(0)|237|(0)|(0)(0)|1272|241|242|(0)(0)|259|(0)|1240|264|(0)|1063|(0)(0)))(1:1403)|(2:110|111)(1:(3:1394|1395|1396)(3:1399|1400|1401))|112|(3:(2:116|117)|118|(2:120|(1:122)(2:123|(1:125))))(2:1390|1391)|126|(0)(0)|129|130|131|132|(0)(0)|(0)|140|(0)(0)|(0)|1306|206|(0)|1296|1297|210|(0)|213|214|215|(0)(0)|1293|(0)|1292|229|230|231|232|(0)(0)|235|(0)|237|(0)|(0)(0)|1272|241|242|(0)(0)|259|(0)|1240|264|(0)|1063|(0)(0))|1413|1414|1410|(1:1412)|93|(1:95)|1406|103|(0)(0)|(0)(0)|112|(0)(0)|126|(0)(0)|129|130|131|132|(0)(0)|(0)|140|(0)(0)|(0)|1306|206|(0)|1296|1297|210|(0)|213|214|215|(0)(0)|1293|(0)|1292|229|230|231|232|(0)(0)|235|(0)|237|(0)|(0)(0)|1272|241|242|(0)(0)|259|(0)|1240|264|(0)|1063|(0)(0)))(1:1420)|1417|84|85|86|(0)|(55:92|93|(0)|1406|103|(0)(0)|(0)(0)|112|(0)(0)|126|(0)(0)|129|130|131|132|(0)(0)|(0)|140|(0)(0)|(0)|1306|206|(0)|1296|1297|210|(0)|213|214|215|(0)(0)|1293|(0)|1292|229|230|231|232|(0)(0)|235|(0)|237|(0)|(0)(0)|1272|241|242|(0)(0)|259|(0)|1240|264|(0)|1063|(0)(0))|1413|1414|1410|(0)|93|(0)|1406|103|(0)(0)|(0)(0)|112|(0)(0)|126|(0)(0)|129|130|131|132|(0)(0)|(0)|140|(0)(0)|(0)|1306|206|(0)|1296|1297|210|(0)|213|214|215|(0)(0)|1293|(0)|1292|229|230|231|232|(0)(0)|235|(0)|237|(0)|(0)(0)|1272|241|242|(0)(0)|259|(0)|1240|264|(0)|1063|(0)(0))(1:1791))|36|37|38|(0)(0)|(0)(0)|1417|84|85|86|(0)|(0)|1413|1414|1410|(0)|93|(0)|1406|103|(0)(0)|(0)(0)|112|(0)(0)|126|(0)(0)|129|130|131|132|(0)(0)|(0)|140|(0)(0)|(0)|1306|206|(0)|1296|1297|210|(0)|213|214|215|(0)(0)|1293|(0)|1292|229|230|231|232|(0)(0)|235|(0)|237|(0)|(0)(0)|1272|241|242|(0)(0)|259|(0)|1240|264|(0)|1063|(0)(0)) */
    /* JADX WARN: Code restructure failed: missing block: B:1378:0x1b40, code lost:
        r7 = r44;
        r1 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r11, r7);
        r1.encryptedChat = r4;
        r1.type = 1;
        r1.sendEncryptedRequest = r5;
        r2 = r41;
        r1.originalPath = r2;
        r1.obj = r12;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1379:0x1b54, code lost:
        if (r2 == null) goto L811;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1380:0x1b56, code lost:
        r9 = r57;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1381:0x1b5c, code lost:
        if (r2.containsKey(r9) == false) goto L811;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1382:0x1b5e, code lost:
        r1.parentObject = r2.get(r9);
     */
    /* JADX WARN: Code restructure failed: missing block: B:1383:0x1b65, code lost:
        r1.parentObject = r18;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1384:0x1b69, code lost:
        r1.performMediaUpload = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1385:0x1b6c, code lost:
        if (r24 == null) goto L810;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1386:0x1b6e, code lost:
        r3 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1387:0x1b70, code lost:
        r3 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1388:0x1b71, code lost:
        r1.scheduled = r3;
     */
    /* JADX WARN: Code restructure failed: missing block: B:141:0x034b, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:142:0x034c, code lost:
        r11 = r77;
        r1 = r0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1447:0x1d5d, code lost:
        r1 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r11, r7);
        r1.encryptedChat = r4;
        r1.type = 2;
        r1.sendEncryptedRequest = r5;
        r1.originalPath = r2;
        r1.obj = r12;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1448:0x1d6d, code lost:
        if (r2 == null) goto L881;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1450:0x1d73, code lost:
        if (r2.containsKey(r9) == false) goto L881;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1451:0x1d75, code lost:
        r1.parentObject = r2.get(r9);
     */
    /* JADX WARN: Code restructure failed: missing block: B:1452:0x1d7c, code lost:
        r1.parentObject = r16;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1453:0x1d80, code lost:
        r1.performMediaUpload = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1454:0x1d83, code lost:
        if (r24 == null) goto L880;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1455:0x1d85, code lost:
        r3 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1456:0x1d87, code lost:
        r3 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1457:0x1d88, code lost:
        r1.scheduled = r3;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1557:0x1f83, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1703:0x21be, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1704:0x21bf, code lost:
        r5 = r2;
        r11 = r3;
        r12 = r8;
        r2 = r14;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1708:0x21cc, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1709:0x21cd, code lost:
        r11 = r3;
        r12 = r8;
        r5 = r4;
     */
    /* JADX WARN: Code restructure failed: missing block: B:250:0x05d8, code lost:
        if (r5.containsKey("query_id") != false) goto L1623;
     */
    /* JADX WARN: Code restructure failed: missing block: B:262:0x05fa, code lost:
        if (r5.containsKey("query_id") != false) goto L1623;
     */
    /* JADX WARN: Code restructure failed: missing block: B:263:0x05fc, code lost:
        r20 = r5;
        r19 = r13;
        r61 = r17;
        r8 = r34;
        r5 = r39;
        r7 = null;
        r40 = '\t';
     */
    /* JADX WARN: Code restructure failed: missing block: B:439:0x0987, code lost:
        r2 = new org.telegram.tgnet.TLRPC$TL_inputQuickReplyShortcutId();
        r6 = r1;
        r2.shortcut_id = r6;
        r8.quick_reply_shortcut = r2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:440:0x0992, code lost:
        r7 = r47;
     */
    /* JADX WARN: Code restructure failed: missing block: B:744:0x0ef5, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:937:0x12b1, code lost:
        if (r9.roundVideo == false) goto L581;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:1367:0x1ad9 A[Catch: Exception -> 0x19ba, TryCatch #54 {Exception -> 0x19ba, blocks: (B:1306:0x199e, B:1308:0x19a7, B:1317:0x19cd, B:1319:0x19d3, B:1322:0x19df, B:1324:0x19e5, B:1328:0x19fc, B:1330:0x1a02, B:1334:0x1a19, B:1336:0x1a1d, B:1338:0x1a3c, B:1337:0x1a35, B:1347:0x1a77, B:1349:0x1a86, B:1352:0x1a8d, B:1354:0x1a96, B:1356:0x1a9a, B:1364:0x1ac4, B:1365:0x1ad1, B:1367:0x1ad9, B:1369:0x1ae5, B:1370:0x1af5, B:1371:0x1af8, B:1376:0x1b0b, B:1378:0x1b40, B:1380:0x1b56, B:1382:0x1b5e, B:1384:0x1b69, B:1388:0x1b71, B:1390:0x1b7a, B:1392:0x1b82, B:1383:0x1b65, B:1357:0x1a9f, B:1358:0x1aa7, B:1360:0x1ab4, B:1362:0x1ab8, B:1363:0x1abd, B:1396:0x1b96, B:1405:0x1bd4, B:1409:0x1bec, B:1411:0x1c03, B:1413:0x1c26, B:1412:0x1c18), top: B:1819:0x199e }] */
    /* JADX WARN: Removed duplicated region for block: B:1392:0x1b82 A[Catch: Exception -> 0x19ba, TryCatch #54 {Exception -> 0x19ba, blocks: (B:1306:0x199e, B:1308:0x19a7, B:1317:0x19cd, B:1319:0x19d3, B:1322:0x19df, B:1324:0x19e5, B:1328:0x19fc, B:1330:0x1a02, B:1334:0x1a19, B:1336:0x1a1d, B:1338:0x1a3c, B:1337:0x1a35, B:1347:0x1a77, B:1349:0x1a86, B:1352:0x1a8d, B:1354:0x1a96, B:1356:0x1a9a, B:1364:0x1ac4, B:1365:0x1ad1, B:1367:0x1ad9, B:1369:0x1ae5, B:1370:0x1af5, B:1371:0x1af8, B:1376:0x1b0b, B:1378:0x1b40, B:1380:0x1b56, B:1382:0x1b5e, B:1384:0x1b69, B:1388:0x1b71, B:1390:0x1b7a, B:1392:0x1b82, B:1383:0x1b65, B:1357:0x1a9f, B:1358:0x1aa7, B:1360:0x1ab4, B:1362:0x1ab8, B:1363:0x1abd, B:1396:0x1b96, B:1405:0x1bd4, B:1409:0x1bec, B:1411:0x1c03, B:1413:0x1c26, B:1412:0x1c18), top: B:1819:0x199e }] */
    /* JADX WARN: Removed duplicated region for block: B:144:0x0353  */
    /* JADX WARN: Removed duplicated region for block: B:1491:0x1e75  */
    /* JADX WARN: Removed duplicated region for block: B:1492:0x1e77  */
    /* JADX WARN: Removed duplicated region for block: B:1548:0x1f41  */
    /* JADX WARN: Removed duplicated region for block: B:1670:0x210e  */
    /* JADX WARN: Removed duplicated region for block: B:1719:0x21ec  */
    /* JADX WARN: Removed duplicated region for block: B:1720:0x21ee  */
    /* JADX WARN: Removed duplicated region for block: B:1723:0x21f4  */
    /* JADX WARN: Removed duplicated region for block: B:1728:0x0e59 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1737:0x0e91 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1777:0x12db A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1814:0x08bb A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1836:0x1af8 A[EDGE_INSN: B:1836:0x1af8->B:1371:0x1af8 ?: BREAK  , SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:396:0x08a3 A[Catch: Exception -> 0x05db, TryCatch #10 {Exception -> 0x05db, blocks: (B:396:0x08a3, B:398:0x08a9, B:401:0x08b8, B:408:0x08c5, B:412:0x08da, B:415:0x08f4, B:405:0x08bf, B:247:0x05c7, B:249:0x05d4, B:259:0x05f2, B:261:0x05f6, B:271:0x062b, B:273:0x064e, B:275:0x0661, B:277:0x0675, B:279:0x067b, B:280:0x067f, B:282:0x0683, B:284:0x0689, B:276:0x0671, B:298:0x06cd, B:300:0x06d6, B:302:0x06e2, B:310:0x0709, B:313:0x0717, B:331:0x0747, B:333:0x074d, B:334:0x0752, B:336:0x0759, B:338:0x075d, B:340:0x0763, B:342:0x076a, B:344:0x0770, B:351:0x078c, B:325:0x0737, B:321:0x072e, B:392:0x086a), top: B:1744:0x0372 }] */
    /* JADX WARN: Removed duplicated region for block: B:401:0x08b8 A[Catch: Exception -> 0x05db, TRY_LEAVE, TryCatch #10 {Exception -> 0x05db, blocks: (B:396:0x08a3, B:398:0x08a9, B:401:0x08b8, B:408:0x08c5, B:412:0x08da, B:415:0x08f4, B:405:0x08bf, B:247:0x05c7, B:249:0x05d4, B:259:0x05f2, B:261:0x05f6, B:271:0x062b, B:273:0x064e, B:275:0x0661, B:277:0x0675, B:279:0x067b, B:280:0x067f, B:282:0x0683, B:284:0x0689, B:276:0x0671, B:298:0x06cd, B:300:0x06d6, B:302:0x06e2, B:310:0x0709, B:313:0x0717, B:331:0x0747, B:333:0x074d, B:334:0x0752, B:336:0x0759, B:338:0x075d, B:340:0x0763, B:342:0x076a, B:344:0x0770, B:351:0x078c, B:325:0x0737, B:321:0x072e, B:392:0x086a), top: B:1744:0x0372 }] */
    /* JADX WARN: Removed duplicated region for block: B:408:0x08c5 A[Catch: Exception -> 0x05db, TRY_ENTER, TRY_LEAVE, TryCatch #10 {Exception -> 0x05db, blocks: (B:396:0x08a3, B:398:0x08a9, B:401:0x08b8, B:408:0x08c5, B:412:0x08da, B:415:0x08f4, B:405:0x08bf, B:247:0x05c7, B:249:0x05d4, B:259:0x05f2, B:261:0x05f6, B:271:0x062b, B:273:0x064e, B:275:0x0661, B:277:0x0675, B:279:0x067b, B:280:0x067f, B:282:0x0683, B:284:0x0689, B:276:0x0671, B:298:0x06cd, B:300:0x06d6, B:302:0x06e2, B:310:0x0709, B:313:0x0717, B:331:0x0747, B:333:0x074d, B:334:0x0752, B:336:0x0759, B:338:0x075d, B:340:0x0763, B:342:0x076a, B:344:0x0770, B:351:0x078c, B:325:0x0737, B:321:0x072e, B:392:0x086a), top: B:1744:0x0372 }] */
    /* JADX WARN: Removed duplicated region for block: B:411:0x08d8 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:415:0x08f4 A[Catch: Exception -> 0x05db, TRY_LEAVE, TryCatch #10 {Exception -> 0x05db, blocks: (B:396:0x08a3, B:398:0x08a9, B:401:0x08b8, B:408:0x08c5, B:412:0x08da, B:415:0x08f4, B:405:0x08bf, B:247:0x05c7, B:249:0x05d4, B:259:0x05f2, B:261:0x05f6, B:271:0x062b, B:273:0x064e, B:275:0x0661, B:277:0x0675, B:279:0x067b, B:280:0x067f, B:282:0x0683, B:284:0x0689, B:276:0x0671, B:298:0x06cd, B:300:0x06d6, B:302:0x06e2, B:310:0x0709, B:313:0x0717, B:331:0x0747, B:333:0x074d, B:334:0x0752, B:336:0x0759, B:338:0x075d, B:340:0x0763, B:342:0x076a, B:344:0x0770, B:351:0x078c, B:325:0x0737, B:321:0x072e, B:392:0x086a), top: B:1744:0x0372 }] */
    /* JADX WARN: Removed duplicated region for block: B:417:0x08fd A[Catch: Exception -> 0x21d4, TRY_ENTER, TryCatch #51 {Exception -> 0x21d4, blocks: (B:406:0x08c1, B:409:0x08c7, B:418:0x0910, B:417:0x08fd, B:403:0x08bb), top: B:1814:0x08bb }] */
    /* JADX WARN: Removed duplicated region for block: B:421:0x093b  */
    /* JADX WARN: Removed duplicated region for block: B:428:0x0968  */
    /* JADX WARN: Removed duplicated region for block: B:433:0x0977 A[Catch: Exception -> 0x0962, TRY_ENTER, TryCatch #16 {Exception -> 0x0962, blocks: (B:422:0x093d, B:433:0x0977, B:448:0x09b1, B:451:0x09bb, B:453:0x09c5, B:456:0x09e2, B:462:0x09f3, B:468:0x0a04, B:455:0x09cc, B:439:0x0987, B:445:0x09a6), top: B:1753:0x093d }] */
    /* JADX WARN: Removed duplicated region for block: B:435:0x097f A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:445:0x09a6 A[Catch: Exception -> 0x0962, TRY_ENTER, TRY_LEAVE, TryCatch #16 {Exception -> 0x0962, blocks: (B:422:0x093d, B:433:0x0977, B:448:0x09b1, B:451:0x09bb, B:453:0x09c5, B:456:0x09e2, B:462:0x09f3, B:468:0x0a04, B:455:0x09cc, B:439:0x0987, B:445:0x09a6), top: B:1753:0x093d }] */
    /* JADX WARN: Removed duplicated region for block: B:448:0x09b1 A[Catch: Exception -> 0x0962, TRY_ENTER, TryCatch #16 {Exception -> 0x0962, blocks: (B:422:0x093d, B:433:0x0977, B:448:0x09b1, B:451:0x09bb, B:453:0x09c5, B:456:0x09e2, B:462:0x09f3, B:468:0x0a04, B:455:0x09cc, B:439:0x0987, B:445:0x09a6), top: B:1753:0x093d }] */
    /* JADX WARN: Removed duplicated region for block: B:461:0x09f1  */
    /* JADX WARN: Removed duplicated region for block: B:466:0x0a00  */
    /* JADX WARN: Removed duplicated region for block: B:468:0x0a04 A[Catch: Exception -> 0x0962, TRY_LEAVE, TryCatch #16 {Exception -> 0x0962, blocks: (B:422:0x093d, B:433:0x0977, B:448:0x09b1, B:451:0x09bb, B:453:0x09c5, B:456:0x09e2, B:462:0x09f3, B:468:0x0a04, B:455:0x09cc, B:439:0x0987, B:445:0x09a6), top: B:1753:0x093d }] */
    /* JADX WARN: Removed duplicated region for block: B:470:0x0a0a  */
    /* JADX WARN: Removed duplicated region for block: B:480:0x0a28  */
    /* JADX WARN: Removed duplicated region for block: B:493:0x0a62  */
    /* JADX WARN: Removed duplicated region for block: B:497:0x0a77 A[Catch: Exception -> 0x0a11, TRY_ENTER, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:498:0x0a9f  */
    /* JADX WARN: Removed duplicated region for block: B:524:0x0b1b A[Catch: Exception -> 0x0a11, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:526:0x0b29 A[Catch: Exception -> 0x0a11, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:538:0x0b85 A[Catch: Exception -> 0x0a11, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:539:0x0ba2  */
    /* JADX WARN: Removed duplicated region for block: B:541:0x0ba5 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:544:0x0bbb A[Catch: Exception -> 0x0a11, TRY_LEAVE, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:547:0x0bc7 A[Catch: Exception -> 0x0a11, TRY_ENTER, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:54:0x017b A[Catch: Exception -> 0x034b, TRY_ENTER, TRY_LEAVE, TryCatch #49 {Exception -> 0x034b, blocks: (B:54:0x017b, B:147:0x035b, B:151:0x0376, B:152:0x037c, B:190:0x0457, B:191:0x045d, B:203:0x049f, B:204:0x04a5, B:216:0x0506, B:217:0x050c), top: B:1811:0x0179 }] */
    /* JADX WARN: Removed duplicated region for block: B:557:0x0bf4 A[Catch: Exception -> 0x21c7, TRY_ENTER, TRY_LEAVE, TryCatch #55 {Exception -> 0x21c7, blocks: (B:478:0x0a24, B:495:0x0a69, B:545:0x0bc1, B:667:0x0ddb, B:673:0x0dea, B:677:0x0df3, B:697:0x0e34, B:672:0x0de8, B:557:0x0bf4, B:573:0x0c25, B:568:0x0c11, B:562:0x0c06, B:494:0x0a67, B:477:0x0a1a), top: B:1820:0x0a1a }] */
    /* JADX WARN: Removed duplicated region for block: B:603:0x0cad A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:630:0x0d19 A[Catch: Exception -> 0x0a11, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:635:0x0d47  */
    /* JADX WARN: Removed duplicated region for block: B:636:0x0d49  */
    /* JADX WARN: Removed duplicated region for block: B:638:0x0d4c A[Catch: Exception -> 0x0a11, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:645:0x0d6d A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:650:0x0d7f  */
    /* JADX WARN: Removed duplicated region for block: B:669:0x0de1 A[Catch: Exception -> 0x0a11, TRY_ENTER, TRY_LEAVE, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:675:0x0dee A[Catch: Exception -> 0x0a11, TRY_ENTER, TRY_LEAVE, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:680:0x0df9 A[Catch: Exception -> 0x0a11, TRY_ENTER, TryCatch #23 {Exception -> 0x0a11, blocks: (B:483:0x0a2d, B:484:0x0a35, B:486:0x0a49, B:488:0x0a4d, B:489:0x0a51, B:491:0x0a58, B:497:0x0a77, B:538:0x0b85, B:542:0x0ba7, B:544:0x0bbb, B:547:0x0bc7, B:549:0x0bd7, B:551:0x0be5, B:553:0x0beb, B:555:0x0bef, B:604:0x0caf, B:606:0x0cb3, B:608:0x0cbd, B:610:0x0cc9, B:612:0x0cd2, B:614:0x0cd8, B:620:0x0cf7, B:622:0x0cfd, B:624:0x0d03, B:626:0x0d0b, B:628:0x0d0f, B:630:0x0d19, B:633:0x0d29, B:638:0x0d4c, B:640:0x0d56, B:651:0x0d81, B:654:0x0d8e, B:656:0x0d92, B:658:0x0d96, B:659:0x0da0, B:661:0x0da6, B:662:0x0dc0, B:664:0x0dc6, B:669:0x0de1, B:675:0x0dee, B:680:0x0df9, B:682:0x0e03, B:684:0x0e15, B:691:0x0e26, B:648:0x0d72, B:611:0x0cce, B:560:0x0c01, B:565:0x0c0c, B:575:0x0c29, B:577:0x0c2f, B:580:0x0c36, B:582:0x0c42, B:584:0x0c54, B:587:0x0c60, B:585:0x0c58, B:588:0x0c6b, B:590:0x0c73, B:593:0x0c7a, B:595:0x0c86, B:597:0x0c96, B:600:0x0c9e, B:598:0x0c9a, B:570:0x0c17, B:572:0x0c1b, B:503:0x0aaf, B:507:0x0abb, B:509:0x0ac4, B:511:0x0acf, B:514:0x0ae3, B:517:0x0af3, B:519:0x0afa, B:521:0x0b0e, B:526:0x0b29, B:528:0x0b3b, B:530:0x0b5c, B:532:0x0b62, B:522:0x0b17, B:524:0x0b1b, B:513:0x0adc, B:472:0x0a0e), top: B:1763:0x0a0e }] */
    /* JADX WARN: Removed duplicated region for block: B:687:0x0e1f  */
    /* JADX WARN: Removed duplicated region for block: B:690:0x0e24 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:701:0x0e4e  */
    /* JADX WARN: Removed duplicated region for block: B:702:0x0e50  */
    /* JADX WARN: Removed duplicated region for block: B:719:0x0e7b A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:722:0x0e81  */
    /* JADX WARN: Removed duplicated region for block: B:727:0x0e8a  */
    /* JADX WARN: Removed duplicated region for block: B:751:0x0f02  */
    /* JADX WARN: Removed duplicated region for block: B:770:0x0f59 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:777:0x0fcf  */
    /* JADX WARN: Removed duplicated region for block: B:823:0x10a4 A[Catch: Exception -> 0x0fc2, TRY_ENTER, TRY_LEAVE, TryCatch #60 {Exception -> 0x0fc2, blocks: (B:771:0x0f5b, B:806:0x101c, B:808:0x102a, B:810:0x1033, B:812:0x105a, B:814:0x106d, B:817:0x108c, B:823:0x10a4, B:826:0x10bd, B:830:0x10d1, B:834:0x10df, B:815:0x107d, B:816:0x1085), top: B:1831:0x0f5b }] */
    /* JADX WARN: Removed duplicated region for block: B:826:0x10bd A[Catch: Exception -> 0x0fc2, TRY_ENTER, TRY_LEAVE, TryCatch #60 {Exception -> 0x0fc2, blocks: (B:771:0x0f5b, B:806:0x101c, B:808:0x102a, B:810:0x1033, B:812:0x105a, B:814:0x106d, B:817:0x108c, B:823:0x10a4, B:826:0x10bd, B:830:0x10d1, B:834:0x10df, B:815:0x107d, B:816:0x1085), top: B:1831:0x0f5b }] */
    /* JADX WARN: Removed duplicated region for block: B:828:0x10cb A[Catch: Exception -> 0x1106, TRY_ENTER, TRY_LEAVE, TryCatch #26 {Exception -> 0x1106, blocks: (B:804:0x100b, B:821:0x109e, B:824:0x10ac, B:828:0x10cb, B:832:0x10db, B:820:0x1097), top: B:1768:0x100b }] */
    /* JADX WARN: Removed duplicated region for block: B:837:0x10ee  */
    /* JADX WARN: Removed duplicated region for block: B:838:0x10f0  */
    /* JADX WARN: Removed duplicated region for block: B:946:0x12cb A[Catch: Exception -> 0x126d, TRY_LEAVE, TryCatch #3 {Exception -> 0x126d, blocks: (B:905:0x11f7, B:907:0x11fb, B:917:0x1245, B:908:0x1215, B:910:0x1219, B:912:0x122c, B:913:0x1232, B:915:0x1236, B:916:0x1240, B:931:0x129f, B:934:0x12a7, B:936:0x12af, B:944:0x12c4, B:946:0x12cb), top: B:1732:0x11f3 }] */
    /* JADX WARN: Removed duplicated region for block: B:968:0x1343  */
    /* JADX WARN: Removed duplicated region for block: B:969:0x1347 A[Catch: Exception -> 0x13c9, TRY_LEAVE, TryCatch #50 {Exception -> 0x13c9, blocks: (B:966:0x133d, B:969:0x1347), top: B:1812:0x133d }] */
    /* JADX WARN: Removed duplicated region for block: B:980:0x1382 A[Catch: Exception -> 0x143b, TryCatch #53 {Exception -> 0x143b, blocks: (B:980:0x1382, B:984:0x1399, B:986:0x13a0, B:988:0x13ac, B:990:0x13b9, B:991:0x13bd, B:971:0x1354, B:973:0x1362, B:975:0x1369, B:977:0x136f, B:978:0x137d, B:1000:0x13f1, B:1002:0x140c, B:1004:0x141f, B:1005:0x142d, B:1017:0x144a, B:1023:0x1469, B:1034:0x14af, B:1038:0x14c4, B:1026:0x1474, B:1028:0x1490, B:1030:0x1497, B:1032:0x149d, B:1033:0x14ab, B:1041:0x14d4, B:1043:0x14e1, B:1045:0x14e9, B:1048:0x14f9, B:1050:0x14fc, B:1051:0x150c, B:1052:0x1512, B:1054:0x1516, B:1056:0x151e, B:1059:0x1533, B:1063:0x1548, B:1070:0x1576, B:1509:0x1eb0, B:1417:0x1c3f, B:1419:0x1c45, B:1421:0x1c4b, B:1423:0x1c52, B:1425:0x1c7d, B:1428:0x1c9b, B:1430:0x1ca2, B:1432:0x1cad, B:1426:0x1c84, B:1433:0x1cc4, B:1435:0x1cdb, B:1437:0x1cdf, B:1440:0x1d1a, B:1445:0x1d2d, B:1447:0x1d5d, B:1449:0x1d6f, B:1451:0x1d75, B:1453:0x1d80, B:1457:0x1d88, B:1452:0x1d7c, B:1459:0x1d8c, B:1461:0x1d92, B:1463:0x1d9c, B:1466:0x1da2, B:1438:0x1cf3, B:1439:0x1d0a, B:1472:0x1de6, B:1481:0x1e1a, B:1483:0x1e4b, B:1485:0x1e5d, B:1487:0x1e65, B:1489:0x1e70, B:1493:0x1e78, B:1488:0x1e6c, B:1496:0x1e80, B:1498:0x1e8a, B:1504:0x1ea5), top: B:1818:0x11f0 }] */
    /* JADX WARN: Removed duplicated region for block: B:985:0x139c  */
    /* JADX WARN: Removed duplicated region for block: B:988:0x13ac A[Catch: Exception -> 0x143b, TryCatch #53 {Exception -> 0x143b, blocks: (B:980:0x1382, B:984:0x1399, B:986:0x13a0, B:988:0x13ac, B:990:0x13b9, B:991:0x13bd, B:971:0x1354, B:973:0x1362, B:975:0x1369, B:977:0x136f, B:978:0x137d, B:1000:0x13f1, B:1002:0x140c, B:1004:0x141f, B:1005:0x142d, B:1017:0x144a, B:1023:0x1469, B:1034:0x14af, B:1038:0x14c4, B:1026:0x1474, B:1028:0x1490, B:1030:0x1497, B:1032:0x149d, B:1033:0x14ab, B:1041:0x14d4, B:1043:0x14e1, B:1045:0x14e9, B:1048:0x14f9, B:1050:0x14fc, B:1051:0x150c, B:1052:0x1512, B:1054:0x1516, B:1056:0x151e, B:1059:0x1533, B:1063:0x1548, B:1070:0x1576, B:1509:0x1eb0, B:1417:0x1c3f, B:1419:0x1c45, B:1421:0x1c4b, B:1423:0x1c52, B:1425:0x1c7d, B:1428:0x1c9b, B:1430:0x1ca2, B:1432:0x1cad, B:1426:0x1c84, B:1433:0x1cc4, B:1435:0x1cdb, B:1437:0x1cdf, B:1440:0x1d1a, B:1445:0x1d2d, B:1447:0x1d5d, B:1449:0x1d6f, B:1451:0x1d75, B:1453:0x1d80, B:1457:0x1d88, B:1452:0x1d7c, B:1459:0x1d8c, B:1461:0x1d92, B:1463:0x1d9c, B:1466:0x1da2, B:1438:0x1cf3, B:1439:0x1d0a, B:1472:0x1de6, B:1481:0x1e1a, B:1483:0x1e4b, B:1485:0x1e5d, B:1487:0x1e65, B:1489:0x1e70, B:1493:0x1e78, B:1488:0x1e6c, B:1496:0x1e80, B:1498:0x1e8a, B:1504:0x1ea5), top: B:1818:0x11f0 }] */
    /* JADX WARN: Type inference failed for: r11v14 */
    /* JADX WARN: Type inference failed for: r11v140 */
    /* JADX WARN: Type inference failed for: r12v102 */
    /* JADX WARN: Type inference failed for: r12v111, types: [java.lang.StringBuilder] */
    /* JADX WARN: Type inference failed for: r12v73 */
    /* JADX WARN: Type inference failed for: r12v74 */
    /* JADX WARN: Type inference failed for: r12v95 */
    /* JADX WARN: Type inference failed for: r12v97 */
    /* JADX WARN: Type inference failed for: r12v98 */
    /* JADX WARN: Type inference failed for: r14v19 */
    /* JADX WARN: Type inference failed for: r18v11 */
    /* JADX WARN: Type inference failed for: r1v295, types: [org.telegram.tgnet.TLRPC$TL_messages_sendMedia, org.telegram.tgnet.TLObject] */
    /* JADX WARN: Type inference failed for: r1v297 */
    /* JADX WARN: Type inference failed for: r1v311, types: [org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia] */
    /* JADX WARN: Type inference failed for: r1v354 */
    /* JADX WARN: Type inference failed for: r1v355 */
    /* JADX WARN: Type inference failed for: r3v13 */
    /* JADX WARN: Type inference failed for: r3v169, types: [org.telegram.tgnet.TLRPC$TL_inputMediaDice] */
    /* JADX WARN: Type inference failed for: r3v172, types: [org.telegram.tgnet.TLRPC$TL_inputMediaPoll, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r3v243 */
    /* JADX WARN: Type inference failed for: r4v63, types: [org.telegram.tgnet.TLRPC$TL_inputMediaPhoto, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r5v101 */
    /* JADX WARN: Type inference failed for: r5v192 */
    /* JADX WARN: Type inference failed for: r5v193 */
    /* JADX WARN: Type inference failed for: r5v194 */
    /* JADX WARN: Type inference failed for: r5v63, types: [long] */
    /* JADX WARN: Type inference failed for: r5v64 */
    /* JADX WARN: Type inference failed for: r5v93 */
    /* JADX WARN: Type inference failed for: r5v98 */
    /* JADX WARN: Type inference failed for: r6v139 */
    /* JADX WARN: Type inference failed for: r6v140 */
    /* JADX WARN: Type inference failed for: r6v167 */
    /* JADX WARN: Type inference failed for: r7v212, types: [org.telegram.tgnet.TLRPC$TL_inputMediaDocument, org.telegram.tgnet.TLRPC$InputMedia] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void sendMessage(SendMessageParams sendMessageParams) {
        String str;
        TLRPC$InputPeer tLRPC$InputPeer;
        String str2;
        TLRPC$InputPeer tLRPC$InputPeer2;
        long j;
        long j2;
        TLRPC$Peer tLRPC$Peer;
        TLRPC$EncryptedChat tLRPC$EncryptedChat;
        boolean z;
        long j3;
        long j4;
        SendMessagesHelper sendMessagesHelper;
        Exception exc;
        int i;
        TLRPC$Message tLRPC$Message;
        MessageObject messageObject;
        SendMessagesHelper sendMessagesHelper2;
        int i2;
        TLRPC$Message tLRPC$Message2;
        int i3;
        Object obj;
        Object obj2;
        boolean z2;
        TLRPC$TL_message tLRPC$TL_message;
        String str3;
        TLRPC$MessageMedia tLRPC$MessageMedia;
        TLRPC$WebPage tLRPC$WebPage;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll;
        TLRPC$InputPeer tLRPC$InputPeer3;
        boolean z3;
        TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage;
        int i4;
        TLRPC$Peer tLRPC$Peer2;
        SendMessagesHelper sendMessagesHelper3;
        MessageObject messageObject2;
        String str4;
        TLRPC$TL_photo tLRPC$TL_photo;
        ArrayList<TLRPC$MessageEntity> arrayList;
        TLRPC$TL_document tLRPC$TL_document;
        String str5;
        boolean z4;
        TL_stories$StoryItem tL_stories$StoryItem;
        HashMap<String, String> hashMap;
        String str6;
        TLRPC$TL_message tLRPC$TL_message2;
        DelayedMessage delayedMessage;
        boolean z5;
        TLRPC$Message tLRPC$TL_message3;
        TLRPC$Message tLRPC$Message3;
        TLRPC$TL_document tLRPC$TL_document2;
        boolean z6;
        DelayedMessage delayedMessage2;
        String stickerSetName;
        TLRPC$TL_message_secret tLRPC$TL_message_secret;
        ArrayList<TLRPC$PhotoSize> arrayList2;
        TLRPC$Message tLRPC$TL_message4;
        TLRPC$Message tLRPC$TL_message5;
        ArrayList<TLRPC$MessageEntity> arrayList3;
        DelayedMessage delayedMessage3;
        int i5;
        long j5;
        TLRPC$Message tLRPC$Message4;
        TLRPC$MessageMedia tLRPC$MessageMedia2;
        TLRPC$WebPage tLRPC$WebPage2;
        TLRPC$User tLRPC$User;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll2;
        boolean z7;
        boolean z8;
        DelayedMessage delayedMessage4;
        TLRPC$TL_photo tLRPC$TL_photo2;
        int i6;
        TLRPC$TL_document tLRPC$TL_document3;
        String str7;
        ArrayList<TLRPC$MessageEntity> arrayList4;
        char c;
        Object obj3;
        TLRPC$Message tLRPC$TL_message6;
        TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage2;
        String str8;
        Object obj4;
        TLRPC$MessageMedia tLRPC$MessageMedia3;
        boolean z9;
        int i7;
        String str9;
        String str10;
        Object obj5;
        MessageObject messageObject3;
        int i8;
        MessageObject messageObject4;
        String str11;
        int i9;
        TL_stories$StoryItem tL_stories$StoryItem2;
        TLRPC$InputPeer tLRPC$InputPeer4;
        MessageObject messageObject5;
        MessageObject messageObject6;
        long j6;
        char c2;
        ChatActivity.ReplyQuote replyQuote;
        char c3;
        int i10;
        TLRPC$MessageMedia tLRPC$MessageMedia4;
        int i11;
        int i12;
        TL_stories$StoryItem tL_stories$StoryItem3;
        long j7;
        char c4;
        MessageObject messageObject7;
        long j8;
        boolean z10;
        MessageObject messageObject8;
        int i13;
        SendMessagesHelper sendMessagesHelper4;
        TLRPC$Message tLRPC$Message5;
        MessageObject messageObject9;
        int i14;
        TLRPC$Message tLRPC$Message6;
        VideoEditedInfo videoEditedInfo;
        VideoEditedInfo videoEditedInfo2;
        VideoEditedInfo videoEditedInfo3;
        int i15;
        SendMessagesHelper sendMessagesHelper5;
        TLRPC$Message tLRPC$Message7;
        SendMessagesHelper sendMessagesHelper6;
        int i16;
        long j9;
        int i17;
        HashMap<String, String> hashMap2;
        VideoEditedInfo videoEditedInfo4;
        VideoEditedInfo videoEditedInfo5;
        DelayedMessage delayedMessage5;
        SendMessagesHelper sendMessagesHelper7;
        TL_stories$StoryItem tL_stories$StoryItem4;
        ?? r5;
        MessageObject messageObject10;
        TLRPC$InputPeer tLRPC$InputPeer5;
        SendMessagesHelper sendMessagesHelper8;
        TLRPC$Message tLRPC$Message8;
        SendMessagesHelper sendMessagesHelper9;
        MessageObject messageObject11;
        TLRPC$Message tLRPC$Message9;
        int i18;
        int i19;
        long id;
        MessageObject messageObject12;
        int i20;
        TLRPC$Message tLRPC$Message10;
        TLRPC$TL_messages_sendMessage tLRPC$TL_messages_sendMessage;
        long id2;
        char c5;
        int i21;
        TLRPC$Message tLRPC$Message11;
        SendMessagesHelper sendMessagesHelper10;
        HashMap<String, String> hashMap3;
        TLRPC$Message tLRPC$Message12;
        TLRPC$TL_messages_sendInlineBotResult tLRPC$TL_messages_sendInlineBotResult;
        TLRPC$Message tLRPC$Message13;
        MessageObject messageObject13;
        TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage;
        DelayedMessage delayedMessage6;
        TLRPC$TL_photo tLRPC$TL_photo3;
        DelayedMessage delayedMessage7;
        char c6;
        String str12;
        long j10;
        TLRPC$Message tLRPC$Message14;
        ArrayList<TLRPC$PhotoSize> arrayList5;
        Object obj6;
        Object obj7;
        Object obj8;
        byte[] bArr;
        int i22;
        byte[] bArr2;
        TLRPC$Message tLRPC$Message15;
        TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia;
        long j11;
        TL_stories$StoryItem tL_stories$StoryItem5;
        char c7;
        TLRPC$InputPeer tLRPC$InputPeer6;
        Object obj9;
        String str13;
        long j12;
        HashMap<String, String> hashMap4;
        boolean z11;
        TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory;
        TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory2;
        boolean z12;
        DelayedMessage delayedMessage8;
        String str14;
        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument;
        TLRPC$TL_document tLRPC$TL_document4;
        boolean z13;
        VideoEditedInfo videoEditedInfo6;
        TLRPC$Message tLRPC$Message16;
        VideoEditedInfo videoEditedInfo7;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument;
        Object obj10;
        String str15;
        TLRPC$Message tLRPC$Message17;
        boolean z14;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument2;
        TLRPC$Message tLRPC$Message18;
        Object obj11;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument2;
        String str16;
        TLRPC$Message tLRPC$Message19;
        TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory3;
        TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory4;
        TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory5;
        TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory6;
        TLRPC$InputPeer tLRPC$InputPeer7;
        TLRPC$Message tLRPC$Message20;
        TLRPC$Message tLRPC$Message21;
        MessageObject messageObject14;
        TLRPC$Message tLRPC$Message22;
        ?? tLRPC$TL_messages_sendMedia;
        VideoEditedInfo videoEditedInfo8;
        TLRPC$InputMedia tLRPC$TL_inputMediaGeoPoint;
        TL_stories$StoryItem tL_stories$StoryItem6;
        TLRPC$Peer tLRPC$Peer3;
        boolean z15;
        boolean z16;
        TLRPC$Peer tLRPC$Peer4;
        ?? r6;
        boolean z17;
        ChatActivity.ReplyQuote replyQuote2;
        TLRPC$MessageMedia tLRPC$MessageMedia5;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        TLRPC$Peer tLRPC$Peer5;
        String str17;
        SharedPreferences notificationsSettings;
        StringBuilder sb;
        Object obj12;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll3;
        TLRPC$User tLRPC$User2;
        MessageObject messageObject15;
        String str18 = sendMessageParams.message;
        String str19 = sendMessageParams.caption;
        TLRPC$MessageMedia tLRPC$MessageMedia6 = sendMessageParams.location;
        TLRPC$TL_photo tLRPC$TL_photo4 = sendMessageParams.photo;
        VideoEditedInfo videoEditedInfo9 = sendMessageParams.videoEditedInfo;
        TLRPC$User tLRPC$User3 = sendMessageParams.user;
        TLRPC$TL_document tLRPC$TL_document5 = sendMessageParams.document;
        TLRPC$TL_game tLRPC$TL_game = sendMessageParams.game;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll4 = sendMessageParams.poll;
        TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice = sendMessageParams.invoice;
        long j13 = sendMessageParams.peer;
        String str20 = sendMessageParams.path;
        MessageObject messageObject16 = sendMessageParams.replyToMsg;
        TLRPC$TL_document tLRPC$TL_document6 = tLRPC$TL_document5;
        MessageObject messageObject17 = sendMessageParams.replyToTopMsg;
        TLRPC$WebPage tLRPC$WebPage3 = sendMessageParams.webPage;
        TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage3 = sendMessageParams.mediaWebPage;
        boolean z18 = sendMessageParams.searchLinks;
        MessageObject messageObject18 = sendMessageParams.retryMessageObject;
        ArrayList<TLRPC$MessageEntity> arrayList6 = sendMessageParams.entities;
        TLRPC$TL_photo tLRPC$TL_photo5 = tLRPC$TL_photo4;
        TLRPC$ReplyMarkup tLRPC$ReplyMarkup = sendMessageParams.replyMarkup;
        HashMap<String, String> hashMap5 = sendMessageParams.params;
        TLRPC$MessageMedia tLRPC$MessageMedia7 = tLRPC$MessageMedia6;
        boolean z19 = sendMessageParams.notify;
        int i23 = sendMessageParams.scheduleDate;
        int i24 = sendMessageParams.ttl;
        Object obj13 = sendMessageParams.parentObject;
        MessageObject.SendAnimationData sendAnimationData = sendMessageParams.sendAnimationData;
        boolean z20 = sendMessageParams.updateStickersOrder;
        boolean z21 = sendMessageParams.hasMediaSpoilers;
        TL_stories$StoryItem tL_stories$StoryItem7 = sendMessageParams.replyToStoryItem;
        TL_stories$StoryItem tL_stories$StoryItem8 = sendMessageParams.sendingStory;
        ChatActivity.ReplyQuote replyQuote3 = sendMessageParams.replyQuote;
        boolean z22 = sendMessageParams.invert_media;
        String str21 = sendMessageParams.quick_reply_shortcut;
        int i25 = sendMessageParams.quick_reply_shortcut_id;
        if ((tLRPC$User3 != null && tLRPC$User3.phone == null) || j13 == 0) {
            return;
        }
        if (str18 == null && str19 == null) {
            str19 = "";
        }
        String str22 = str19;
        if (replyQuote3 != null && (messageObject15 = replyQuote3.message) != null && messageObject16 != null) {
            messageObject16 = messageObject15;
        }
        String str23 = (hashMap5 == null || !hashMap5.containsKey("originalPath")) ? null : hashMap5.get("originalPath");
        char c8 = 65535;
        if (DialogObject.isEncryptedDialog(j13)) {
            str = str23;
            tLRPC$InputPeer = null;
        } else {
            str = str23;
            tLRPC$InputPeer = getMessagesController().getInputPeer(j13);
        }
        MessageObject messageObject19 = messageObject16;
        TLRPC$User tLRPC$User4 = tLRPC$User3;
        long clientUserId = getUserConfig().getClientUserId();
        if (DialogObject.isEncryptedDialog(j13)) {
            str2 = str21;
            tLRPC$EncryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j13)));
            if (tLRPC$EncryptedChat == null) {
                if (messageObject18 != null) {
                    getMessagesStorage().markMessageAsSendError(messageObject18.messageOwner, messageObject18.scheduled ? 1 : 0);
                    messageObject18.messageOwner.send_state = 2;
                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(messageObject18.getId()));
                    processSentMessage(messageObject18.getId());
                    return;
                }
                return;
            }
            tLRPC$InputPeer2 = tLRPC$InputPeer;
            j = clientUserId;
            j2 = 0;
            tLRPC$Peer = null;
        } else {
            str2 = str21;
            if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChannel) {
                j = clientUserId;
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer.channel_id));
                TLRPC$ChatFull chatFull = getMessagesController().getChatFull(chat.id);
                boolean z23 = !chat.megagroup;
                if (z23 && chat.has_link && chatFull != null) {
                    j3 = chatFull.linked_chat_id;
                    z = z23;
                } else {
                    z = z23;
                    j3 = 0;
                }
                tLRPC$InputPeer2 = tLRPC$InputPeer;
                tLRPC$Peer = getMessagesController().getPeer(ChatObject.getSendAsPeerId(chat, chatFull, true));
                j2 = j3;
                tLRPC$EncryptedChat = null;
                j4 = j2;
                if (messageObject18 == null) {
                    tLRPC$Message = messageObject18.messageOwner;
                    if (obj13 == null && hashMap5 != null) {
                        try {
                            if (hashMap5.containsKey("parentObject")) {
                                obj13 = hashMap5.get("parentObject");
                            }
                        } catch (Exception e) {
                            sendMessagesHelper = this;
                            exc = e;
                            i3 = i23;
                            messageObject = null;
                            tLRPC$Message2 = tLRPC$Message;
                            i2 = i3;
                            sendMessagesHelper2 = sendMessagesHelper;
                            FileLog.e(exc);
                            getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                            if (messageObject != null) {
                            }
                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                            sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                            return;
                        }
                    }
                    if (!messageObject18.isForwarded() && (hashMap5 == null || !hashMap5.containsKey("fwd_id"))) {
                        if (messageObject18.isDice()) {
                            str18 = messageObject18.getDiceEmoji();
                            str22 = "";
                            obj12 = obj13;
                            obj = "parentObject";
                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                            tLRPC$User2 = tLRPC$User4;
                            c8 = 11;
                        } else {
                            if (messageObject18.type != 0 && !messageObject18.isAnimatedEmoji()) {
                                int i26 = messageObject18.type;
                                obj12 = obj13;
                                if (i26 == 4) {
                                    tLRPC$MessageMedia7 = tLRPC$Message.media;
                                    obj = "parentObject";
                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                    tLRPC$User2 = tLRPC$User4;
                                    c8 = 1;
                                } else if (i26 == 1) {
                                    TLRPC$TL_photo tLRPC$TL_photo6 = (TLRPC$TL_photo) tLRPC$Message.media.photo;
                                    String str24 = messageObject18.messageOwner.message;
                                    if (str24 != null) {
                                        str22 = str24;
                                    }
                                    tLRPC$TL_photo5 = tLRPC$TL_photo6;
                                    obj = "parentObject";
                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                    tLRPC$User2 = tLRPC$User4;
                                    c8 = 2;
                                } else {
                                    if (i26 != 3 && i26 != 5 && messageObject18.videoEditedInfo == null) {
                                        if (i26 == 12) {
                                            tLRPC$User2 = new TLRPC$TL_userRequest_old2();
                                            TLRPC$MessageMedia tLRPC$MessageMedia8 = tLRPC$Message.media;
                                            obj = "parentObject";
                                            tLRPC$User2.phone = tLRPC$MessageMedia8.phone_number;
                                            tLRPC$User2.first_name = tLRPC$MessageMedia8.first_name;
                                            tLRPC$User2.last_name = tLRPC$MessageMedia8.last_name;
                                            TLRPC$TL_restrictionReason tLRPC$TL_restrictionReason = new TLRPC$TL_restrictionReason();
                                            tLRPC$TL_restrictionReason.platform = "";
                                            tLRPC$TL_restrictionReason.reason = "";
                                            tLRPC$TL_restrictionReason.text = tLRPC$Message.media.vcard;
                                            tLRPC$User2.restriction_reason.add(tLRPC$TL_restrictionReason);
                                            tLRPC$User2.id = tLRPC$Message.media.user_id;
                                            c8 = 6;
                                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                        } else {
                                            obj = "parentObject";
                                            if (i26 != 8 && i26 != 9 && i26 != 13 && i26 != 14 && i26 != 15) {
                                                if (i26 == 2) {
                                                    String str25 = messageObject18.messageOwner.message;
                                                    tLRPC$TL_document6 = (TLRPC$TL_document) tLRPC$Message.media.document;
                                                    if (str25 != null) {
                                                        str22 = str25;
                                                    }
                                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                                    tLRPC$User2 = tLRPC$User4;
                                                    c8 = '\b';
                                                } else if (i26 == 17) {
                                                    tLRPC$TL_messageMediaPoll3 = (TLRPC$TL_messageMediaPoll) tLRPC$Message.media;
                                                    tLRPC$User2 = tLRPC$User4;
                                                    c8 = '\n';
                                                } else {
                                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                                    tLRPC$User2 = tLRPC$User4;
                                                }
                                            }
                                            String str26 = messageObject18.messageOwner.message;
                                            tLRPC$TL_document6 = (TLRPC$TL_document) tLRPC$Message.media.document;
                                            if (str26 != null) {
                                                str22 = str26;
                                            }
                                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                            tLRPC$User2 = tLRPC$User4;
                                            c8 = 7;
                                        }
                                    }
                                    obj = "parentObject";
                                    String str27 = messageObject18.messageOwner.message;
                                    tLRPC$TL_document6 = (TLRPC$TL_document) tLRPC$Message.media.document;
                                    if (str27 != null) {
                                        str22 = str27;
                                    }
                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                    tLRPC$User2 = tLRPC$User4;
                                    c8 = 3;
                                }
                            }
                            obj12 = obj13;
                            obj = "parentObject";
                            if (!(messageObject18.messageOwner.media instanceof TLRPC$TL_messageMediaGame)) {
                                str18 = tLRPC$Message.message;
                            }
                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                            tLRPC$User2 = tLRPC$User4;
                            c8 = 0;
                        }
                        if (hashMap5 != null && hashMap5.containsKey("query_id")) {
                            c8 = '\t';
                        }
                        int i27 = tLRPC$Message.media.ttl_seconds;
                        tLRPC$User = tLRPC$User2;
                        tLRPC$WebPage2 = tLRPC$WebPage3;
                        tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll3;
                        if (i27 > 0) {
                            tLRPC$TL_document3 = tLRPC$TL_document6;
                            obj3 = obj12;
                            str5 = str20;
                            tLRPC$MessageMedia2 = tLRPC$MessageMedia7;
                            z8 = z21;
                            str7 = str22;
                            delayedMessage4 = null;
                            z7 = false;
                            tLRPC$Message4 = tLRPC$Message;
                            arrayList4 = arrayList6;
                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                            sendMessagesHelper3 = this;
                            i6 = i27;
                            tLRPC$TL_photo2 = tLRPC$TL_photo5;
                            j5 = j;
                        } else {
                            obj3 = obj12;
                            tLRPC$MessageMedia2 = tLRPC$MessageMedia7;
                            z8 = z21;
                            j5 = j;
                            delayedMessage4 = null;
                            tLRPC$Message4 = tLRPC$Message;
                            arrayList4 = arrayList6;
                            i6 = i24;
                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                            sendMessagesHelper3 = this;
                            tLRPC$TL_document3 = tLRPC$TL_document6;
                            str5 = str20;
                            tLRPC$TL_photo2 = tLRPC$TL_photo5;
                            str7 = str22;
                            z7 = false;
                        }
                        messageObject2 = messageObject18;
                        c = c8;
                    }
                    obj = "parentObject";
                    tLRPC$WebPage2 = tLRPC$WebPage3;
                    obj3 = obj13;
                    tLRPC$MessageMedia2 = tLRPC$MessageMedia7;
                    tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll4;
                    z8 = z21;
                    tLRPC$User = tLRPC$User4;
                    j5 = j;
                    delayedMessage4 = null;
                    tLRPC$Message4 = tLRPC$Message;
                    arrayList4 = arrayList6;
                    i6 = i24;
                    tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                    sendMessagesHelper3 = this;
                    tLRPC$TL_document3 = tLRPC$TL_document6;
                    str5 = str20;
                    tLRPC$TL_photo2 = tLRPC$TL_photo5;
                    str7 = str22;
                    z7 = false;
                    messageObject2 = messageObject18;
                    c = 4;
                } else {
                    obj = "parentObject";
                    try {
                        if (DialogObject.isChatDialog(j13)) {
                            obj2 = obj13;
                            z2 = ChatObject.canSendStickers(getMessagesController().getChat(Long.valueOf(-j13)));
                        } else {
                            obj2 = obj13;
                            z2 = true;
                        }
                        try {
                            if (str18 != null) {
                                if (tLRPC$EncryptedChat != null) {
                                    tLRPC$TL_message6 = new TLRPC$TL_message_secret();
                                } else {
                                    tLRPC$TL_message6 = new TLRPC$TL_message();
                                }
                                if (tLRPC$EncryptedChat != null) {
                                    try {
                                        if (tLRPC$WebPage3 instanceof TLRPC$TL_webPagePending) {
                                            if (tLRPC$WebPage3.url != null) {
                                                TLRPC$TL_webPageUrlPending tLRPC$TL_webPageUrlPending = new TLRPC$TL_webPageUrlPending();
                                                tLRPC$TL_webPageUrlPending.url = tLRPC$WebPage3.url;
                                                tLRPC$WebPage3 = tLRPC$TL_webPageUrlPending;
                                            } else {
                                                tLRPC$WebPage3 = null;
                                            }
                                        }
                                    } catch (Exception e2) {
                                        sendMessagesHelper = this;
                                        exc = e2;
                                        tLRPC$Message = tLRPC$TL_message6;
                                        i3 = i23;
                                        messageObject = null;
                                        tLRPC$Message2 = tLRPC$Message;
                                        i2 = i3;
                                        sendMessagesHelper2 = sendMessagesHelper;
                                        FileLog.e(exc);
                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                        if (messageObject != null) {
                                        }
                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                        sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                        return;
                                    }
                                }
                                if (z2 && str18.length() < 30 && tLRPC$WebPage3 == null && ((arrayList6 == null || arrayList6.isEmpty()) && getMessagesController().diceEmojies.contains(str18.replace("️", "")) && tLRPC$EncryptedChat == null && i23 == 0)) {
                                    TLRPC$TL_messageMediaDice tLRPC$TL_messageMediaDice = new TLRPC$TL_messageMediaDice();
                                    tLRPC$TL_messageMediaDice.emoticon = str18;
                                    tLRPC$TL_messageMediaDice.value = -1;
                                    tLRPC$TL_message6.media = tLRPC$TL_messageMediaDice;
                                    hashMap = hashMap5;
                                    tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                    arrayList = arrayList6;
                                    tLRPC$TL_document = tLRPC$TL_document6;
                                    str5 = str20;
                                    tLRPC$TL_photo = tLRPC$TL_photo5;
                                    tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                    i4 = i24;
                                    z4 = z21;
                                    delayedMessage = null;
                                    c8 = 11;
                                    z5 = false;
                                    str6 = "";
                                    tLRPC$Peer2 = tLRPC$Peer;
                                    messageObject2 = messageObject18;
                                    tLRPC$MessageMedia = tLRPC$MessageMedia7;
                                    tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                    sendMessagesHelper3 = this;
                                    str3 = str18;
                                    tLRPC$WebPage = tLRPC$WebPage3;
                                    tLRPC$TL_message2 = tLRPC$TL_message6;
                                    tL_stories$StoryItem = tL_stories$StoryItem8;
                                    if (arrayList != null) {
                                    }
                                    arrayList3 = arrayList;
                                    if (str6 != null) {
                                    }
                                    if (tLRPC$TL_message2.attachPath == null) {
                                    }
                                    int newMessageId = getUserConfig().getNewMessageId();
                                    tLRPC$TL_message2.id = newMessageId;
                                    tLRPC$TL_message2.local_id = newMessageId;
                                    tLRPC$TL_message2.out = true;
                                    if (z) {
                                    }
                                    delayedMessage3 = delayedMessage;
                                    tL_stories$StoryItem8 = tL_stories$StoryItem;
                                    tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                    if (tLRPC$Peer2 != null) {
                                    }
                                } else {
                                    if (tLRPC$TL_messageMediaWebPage3 != null) {
                                        tLRPC$TL_messageMediaWebPage2 = tLRPC$TL_messageMediaWebPage3;
                                        tLRPC$TL_message6.media = tLRPC$TL_messageMediaWebPage2;
                                    } else {
                                        tLRPC$TL_messageMediaWebPage2 = tLRPC$TL_messageMediaWebPage3;
                                        if (tLRPC$WebPage3 == null) {
                                            tLRPC$TL_message6.media = new TLRPC$TL_messageMediaEmpty();
                                        } else {
                                            TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage4 = new TLRPC$TL_messageMediaWebPage();
                                            tLRPC$TL_message6.media = tLRPC$TL_messageMediaWebPage4;
                                            tLRPC$TL_messageMediaWebPage4.webpage = tLRPC$WebPage3;
                                        }
                                    }
                                    c8 = (hashMap5 == null || !hashMap5.containsKey("query_id")) ? (char) 0 : '\t';
                                    tLRPC$TL_message6.message = str18;
                                    hashMap = hashMap5;
                                    tLRPC$WebPage = tLRPC$WebPage3;
                                    tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                    arrayList = arrayList6;
                                    tLRPC$TL_document = tLRPC$TL_document6;
                                    str5 = str20;
                                    tLRPC$TL_photo = tLRPC$TL_photo5;
                                    tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                    z4 = z21;
                                    tL_stories$StoryItem = tL_stories$StoryItem8;
                                    str6 = str22;
                                    delayedMessage = null;
                                    z5 = false;
                                    messageObject2 = messageObject18;
                                    tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage2;
                                    tLRPC$MessageMedia = tLRPC$MessageMedia7;
                                    i4 = i24;
                                    str3 = str18;
                                    tLRPC$Peer2 = tLRPC$Peer;
                                    tLRPC$TL_message2 = tLRPC$TL_message6;
                                    sendMessagesHelper3 = this;
                                    if (arrayList != null || arrayList.isEmpty()) {
                                        arrayList3 = arrayList;
                                    } else {
                                        arrayList3 = arrayList;
                                        tLRPC$TL_message2.entities = arrayList3;
                                        tLRPC$TL_message2.flags |= 128;
                                    }
                                    if (str6 != null) {
                                        tLRPC$TL_message2.message = str6;
                                    } else {
                                        try {
                                            if (tLRPC$TL_message2.message == null) {
                                                tLRPC$TL_message2.message = "";
                                            }
                                        } catch (Exception e3) {
                                            sendMessagesHelper = sendMessagesHelper3;
                                            i3 = i23;
                                            exc = e3;
                                            tLRPC$Message = tLRPC$TL_message2;
                                            messageObject = null;
                                            tLRPC$Message2 = tLRPC$Message;
                                            i2 = i3;
                                            sendMessagesHelper2 = sendMessagesHelper;
                                            FileLog.e(exc);
                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                            if (messageObject != null) {
                                            }
                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                            sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                            return;
                                        }
                                    }
                                    if (tLRPC$TL_message2.attachPath == null) {
                                        tLRPC$TL_message2.attachPath = "";
                                    }
                                    int newMessageId2 = getUserConfig().getNewMessageId();
                                    tLRPC$TL_message2.id = newMessageId2;
                                    tLRPC$TL_message2.local_id = newMessageId2;
                                    tLRPC$TL_message2.out = true;
                                    if (z || tLRPC$InputPeer3 == null) {
                                        delayedMessage3 = delayedMessage;
                                        tL_stories$StoryItem8 = tL_stories$StoryItem;
                                        tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                        if (tLRPC$Peer2 != null) {
                                            tLRPC$TL_message2.from_id = tLRPC$Peer2;
                                        } else {
                                            TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
                                            tLRPC$TL_message2.from_id = tLRPC$TL_peerUser;
                                            i5 = i4;
                                            j5 = j;
                                            tLRPC$TL_peerUser.user_id = j5;
                                            tLRPC$TL_message2.flags |= LiteMode.FLAG_CHAT_BLUR;
                                            getUserConfig().saveConfig(false);
                                            tLRPC$Message4 = tLRPC$TL_message2;
                                            str18 = str3;
                                            tLRPC$MessageMedia2 = tLRPC$MessageMedia;
                                            tLRPC$WebPage2 = tLRPC$WebPage;
                                            tLRPC$User = tLRPC$User4;
                                            tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll;
                                            z7 = z5;
                                            z8 = z4;
                                            delayedMessage4 = delayedMessage3;
                                            tLRPC$TL_photo2 = tLRPC$TL_photo;
                                            i6 = i5;
                                            tLRPC$TL_document3 = tLRPC$TL_document;
                                            str7 = str6;
                                            arrayList4 = arrayList3;
                                            hashMap5 = hashMap;
                                            c = c8;
                                            obj3 = obj2;
                                        }
                                    } else {
                                        TLRPC$TL_peerChannel tLRPC$TL_peerChannel = new TLRPC$TL_peerChannel();
                                        tLRPC$TL_message2.from_id = tLRPC$TL_peerChannel;
                                        delayedMessage3 = delayedMessage;
                                        tL_stories$StoryItem8 = tL_stories$StoryItem;
                                        tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                        tLRPC$TL_peerChannel.channel_id = tLRPC$InputPeer2.channel_id;
                                    }
                                    i5 = i4;
                                    j5 = j;
                                    getUserConfig().saveConfig(false);
                                    tLRPC$Message4 = tLRPC$TL_message2;
                                    str18 = str3;
                                    tLRPC$MessageMedia2 = tLRPC$MessageMedia;
                                    tLRPC$WebPage2 = tLRPC$WebPage;
                                    tLRPC$User = tLRPC$User4;
                                    tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll;
                                    z7 = z5;
                                    z8 = z4;
                                    delayedMessage4 = delayedMessage3;
                                    tLRPC$TL_photo2 = tLRPC$TL_photo;
                                    i6 = i5;
                                    tLRPC$TL_document3 = tLRPC$TL_document;
                                    str7 = str6;
                                    arrayList4 = arrayList3;
                                    hashMap5 = hashMap;
                                    c = c8;
                                    obj3 = obj2;
                                }
                            } else {
                                try {
                                    if (tLRPC$TL_messageMediaPoll4 != null) {
                                        if (tLRPC$EncryptedChat != null) {
                                            tLRPC$TL_message5 = new TLRPC$TL_message_secret();
                                        } else {
                                            tLRPC$TL_message5 = new TLRPC$TL_message();
                                        }
                                        tLRPC$TL_message5.media = tLRPC$TL_messageMediaPoll4;
                                        hashMap = hashMap5;
                                        tLRPC$WebPage = tLRPC$WebPage3;
                                        tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                        tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                        arrayList = arrayList6;
                                        tLRPC$TL_document = tLRPC$TL_document6;
                                        str5 = str20;
                                        tLRPC$TL_photo = tLRPC$TL_photo5;
                                        tLRPC$MessageMedia = tLRPC$MessageMedia7;
                                        z4 = z21;
                                        tL_stories$StoryItem = tL_stories$StoryItem8;
                                        str6 = str22;
                                        c8 = '\n';
                                        z5 = false;
                                        str3 = str18;
                                        tLRPC$TL_message2 = tLRPC$TL_message5;
                                        messageObject2 = messageObject18;
                                        tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                        i4 = i24;
                                        delayedMessage = null;
                                    } else if (tLRPC$MessageMedia7 != null) {
                                        if (tLRPC$EncryptedChat != null) {
                                            tLRPC$TL_message4 = new TLRPC$TL_message_secret();
                                        } else {
                                            tLRPC$TL_message4 = new TLRPC$TL_message();
                                        }
                                        str3 = str18;
                                        tLRPC$TL_message4.media = tLRPC$MessageMedia7;
                                        if (hashMap5 == null || !hashMap5.containsKey("query_id")) {
                                            tLRPC$MessageMedia = tLRPC$MessageMedia7;
                                            hashMap = hashMap5;
                                            tLRPC$TL_message2 = tLRPC$TL_message4;
                                            tLRPC$WebPage = tLRPC$WebPage3;
                                            tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                            tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                            arrayList = arrayList6;
                                            tLRPC$TL_document = tLRPC$TL_document6;
                                            str5 = str20;
                                            tLRPC$TL_photo = tLRPC$TL_photo5;
                                            z4 = z21;
                                            tL_stories$StoryItem = tL_stories$StoryItem8;
                                            str6 = str22;
                                            delayedMessage = null;
                                            c8 = 1;
                                        } else {
                                            tLRPC$MessageMedia = tLRPC$MessageMedia7;
                                            hashMap = hashMap5;
                                            tLRPC$TL_message2 = tLRPC$TL_message4;
                                            tLRPC$WebPage = tLRPC$WebPage3;
                                            tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                            tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                            arrayList = arrayList6;
                                            tLRPC$TL_document = tLRPC$TL_document6;
                                            str5 = str20;
                                            tLRPC$TL_photo = tLRPC$TL_photo5;
                                            z4 = z21;
                                            tL_stories$StoryItem = tL_stories$StoryItem8;
                                            str6 = str22;
                                            delayedMessage = null;
                                            c8 = '\t';
                                        }
                                        z5 = false;
                                        messageObject2 = messageObject18;
                                        tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                        i4 = i24;
                                    } else {
                                        str3 = str18;
                                        if (tLRPC$TL_photo5 != null) {
                                            if (tLRPC$EncryptedChat != null) {
                                                tLRPC$TL_message_secret = new TLRPC$TL_message_secret();
                                            } else {
                                                tLRPC$TL_message_secret = new TLRPC$TL_message();
                                            }
                                            tLRPC$MessageMedia = tLRPC$MessageMedia7;
                                            TLRPC$TL_messageMediaPhoto tLRPC$TL_messageMediaPhoto = new TLRPC$TL_messageMediaPhoto();
                                            tLRPC$TL_message_secret.media = tLRPC$TL_messageMediaPhoto;
                                            tLRPC$WebPage = tLRPC$WebPage3;
                                            int i28 = tLRPC$TL_messageMediaPhoto.flags | 3;
                                            tLRPC$TL_messageMediaPhoto.flags = i28;
                                            tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                            z3 = z21;
                                            tLRPC$TL_messageMediaPhoto.spoiler = z3;
                                            if (arrayList6 != null) {
                                                tLRPC$TL_message_secret.entities = arrayList6;
                                            }
                                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                            i4 = i24;
                                            if (i24 != 0) {
                                                tLRPC$TL_messageMediaPhoto.ttl_seconds = i4;
                                                tLRPC$TL_message_secret.ttl = i4;
                                                tLRPC$TL_messageMediaPhoto.flags = i28 | 4;
                                            }
                                            tLRPC$TL_messageMediaPhoto.photo = tLRPC$TL_photo5;
                                            c8 = (hashMap5 == null || !hashMap5.containsKey("query_id")) ? (char) 2 : '\t';
                                            try {
                                                if (str20 == null || str20.length() <= 0) {
                                                    messageObject2 = messageObject18;
                                                    str4 = str20;
                                                } else {
                                                    messageObject2 = messageObject18;
                                                    str4 = str20;
                                                    if (str4.startsWith("http")) {
                                                        tLRPC$TL_message_secret.attachPath = str4;
                                                        tLRPC$Peer2 = tLRPC$Peer;
                                                        tLRPC$TL_photo = tLRPC$TL_photo5;
                                                        tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                                        sendMessagesHelper3 = this;
                                                        hashMap = hashMap5;
                                                        tLRPC$TL_message2 = tLRPC$TL_message_secret;
                                                    }
                                                }
                                                tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                                tLRPC$TL_message_secret.attachPath = FileLoader.getInstance(sendMessagesHelper3.currentAccount).getPathToAttach(tLRPC$TL_photo5.sizes.get(arrayList2.size() - 1).location, true).toString();
                                                hashMap = hashMap5;
                                                tLRPC$TL_message2 = tLRPC$TL_message_secret;
                                            } catch (Exception e4) {
                                                exc = e4;
                                                sendMessagesHelper = sendMessagesHelper3;
                                                tLRPC$TL_message = tLRPC$TL_message_secret;
                                                tLRPC$Message = tLRPC$TL_message;
                                                i3 = i23;
                                                messageObject = null;
                                                tLRPC$Message2 = tLRPC$Message;
                                                i2 = i3;
                                                sendMessagesHelper2 = sendMessagesHelper;
                                                FileLog.e(exc);
                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                if (messageObject != null) {
                                                }
                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                return;
                                            }
                                            tLRPC$Peer2 = tLRPC$Peer;
                                            tLRPC$TL_photo = tLRPC$TL_photo5;
                                            sendMessagesHelper3 = this;
                                        } else {
                                            tLRPC$MessageMedia = tLRPC$MessageMedia7;
                                            tLRPC$WebPage = tLRPC$WebPage3;
                                            tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                            tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                            z3 = z21;
                                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                            i4 = i24;
                                            tLRPC$Peer2 = tLRPC$Peer;
                                            sendMessagesHelper3 = this;
                                            messageObject2 = messageObject18;
                                            str4 = str20;
                                            tLRPC$TL_photo = tLRPC$TL_photo5;
                                            try {
                                                if (tLRPC$TL_game != null) {
                                                    tLRPC$TL_message2 = new TLRPC$TL_message();
                                                    TLRPC$TL_messageMediaGame tLRPC$TL_messageMediaGame = new TLRPC$TL_messageMediaGame();
                                                    tLRPC$TL_message2.media = tLRPC$TL_messageMediaGame;
                                                    tLRPC$TL_messageMediaGame.game = tLRPC$TL_game;
                                                    if (hashMap5 != null) {
                                                    }
                                                    hashMap = hashMap5;
                                                } else if (tLRPC$TL_messageMediaInvoice != null) {
                                                    tLRPC$TL_message2 = new TLRPC$TL_message();
                                                    tLRPC$TL_message2.media = tLRPC$TL_messageMediaInvoice;
                                                    if (hashMap5 != null) {
                                                    }
                                                    hashMap = hashMap5;
                                                } else {
                                                    if (tLRPC$User4 != null) {
                                                        if (tLRPC$EncryptedChat != null) {
                                                            tLRPC$TL_message2 = new TLRPC$TL_message_secret();
                                                        } else {
                                                            tLRPC$TL_message2 = new TLRPC$TL_message();
                                                        }
                                                        TLRPC$TL_messageMediaContact tLRPC$TL_messageMediaContact = new TLRPC$TL_messageMediaContact();
                                                        tLRPC$TL_message2.media = tLRPC$TL_messageMediaContact;
                                                        tLRPC$TL_messageMediaContact.phone_number = tLRPC$User4.phone;
                                                        tLRPC$TL_messageMediaContact.first_name = tLRPC$User4.first_name;
                                                        tLRPC$TL_messageMediaContact.last_name = tLRPC$User4.last_name;
                                                        arrayList = arrayList6;
                                                        tLRPC$TL_messageMediaContact.user_id = tLRPC$User4.id;
                                                        if (!tLRPC$User4.restriction_reason.isEmpty() && tLRPC$User4.restriction_reason.get(0).text.startsWith("BEGIN:VCARD")) {
                                                            tLRPC$TL_message2.media.vcard = tLRPC$User4.restriction_reason.get(0).text;
                                                        } else {
                                                            tLRPC$TL_message2.media.vcard = "";
                                                        }
                                                        TLRPC$MessageMedia tLRPC$MessageMedia9 = tLRPC$TL_message2.media;
                                                        if (tLRPC$MessageMedia9.first_name == null) {
                                                            tLRPC$MessageMedia9.first_name = "";
                                                            tLRPC$User4.first_name = "";
                                                        }
                                                        if (tLRPC$MessageMedia9.last_name == null) {
                                                            tLRPC$MessageMedia9.last_name = "";
                                                            tLRPC$User4.last_name = "";
                                                        }
                                                        if (hashMap5 == null || !hashMap5.containsKey("query_id")) {
                                                            c8 = 6;
                                                            hashMap = hashMap5;
                                                            tLRPC$User4 = tLRPC$User4;
                                                            z4 = z3;
                                                            tLRPC$TL_document = tLRPC$TL_document6;
                                                            tL_stories$StoryItem = tL_stories$StoryItem8;
                                                            str6 = str22;
                                                            delayedMessage = null;
                                                        } else {
                                                            hashMap = hashMap5;
                                                            tLRPC$User4 = tLRPC$User4;
                                                            z4 = z3;
                                                            tLRPC$TL_document = tLRPC$TL_document6;
                                                            tL_stories$StoryItem = tL_stories$StoryItem8;
                                                            str6 = str22;
                                                            delayedMessage = null;
                                                            c8 = '\t';
                                                        }
                                                        z5 = false;
                                                    } else {
                                                        arrayList = arrayList6;
                                                        TLRPC$User tLRPC$User5 = tLRPC$User4;
                                                        if (tLRPC$TL_document6 != null) {
                                                            if (tLRPC$EncryptedChat != null) {
                                                                tLRPC$TL_message3 = new TLRPC$TL_message_secret();
                                                            } else {
                                                                tLRPC$TL_message3 = new TLRPC$TL_message();
                                                            }
                                                            try {
                                                                if (!DialogObject.isChatDialog(j13) || z2) {
                                                                    tLRPC$User4 = tLRPC$User5;
                                                                    tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                } else {
                                                                    tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                    int size = tLRPC$TL_document2.attributes.size();
                                                                    int i29 = 0;
                                                                    while (i29 < size) {
                                                                        tLRPC$User4 = tLRPC$User5;
                                                                        if (tLRPC$TL_document2.attributes.get(i29) instanceof TLRPC$TL_documentAttributeAnimated) {
                                                                            tLRPC$TL_document2.attributes.remove(i29);
                                                                            z6 = true;
                                                                            break;
                                                                        }
                                                                        i29++;
                                                                        tLRPC$User5 = tLRPC$User4;
                                                                    }
                                                                    tLRPC$User4 = tLRPC$User5;
                                                                }
                                                                z6 = false;
                                                                TLRPC$TL_messageMediaDocument tLRPC$TL_messageMediaDocument = new TLRPC$TL_messageMediaDocument();
                                                                tLRPC$TL_message3.media = tLRPC$TL_messageMediaDocument;
                                                                int i30 = tLRPC$TL_messageMediaDocument.flags | 3;
                                                                tLRPC$TL_messageMediaDocument.flags = i30;
                                                                tLRPC$TL_messageMediaDocument.spoiler = z3;
                                                                if (i4 != 0) {
                                                                    tLRPC$TL_messageMediaDocument.ttl_seconds = i4;
                                                                    tLRPC$TL_message3.ttl = i4;
                                                                    tLRPC$TL_messageMediaDocument.flags = i30 | 4;
                                                                }
                                                                tLRPC$TL_messageMediaDocument.document = tLRPC$TL_document2;
                                                                if (hashMap5 == null || !hashMap5.containsKey("query_id")) {
                                                                    if ((MessageObject.isVideoSticker(tLRPC$TL_document2) && videoEditedInfo9 == null) || (!MessageObject.isVideoDocument(tLRPC$TL_document2) && !MessageObject.isRoundVideoDocument(tLRPC$TL_document2) && videoEditedInfo9 == null)) {
                                                                        c8 = MessageObject.isVoiceDocument(tLRPC$TL_document2) ? '\b' : (char) 7;
                                                                    }
                                                                    c8 = 3;
                                                                } else {
                                                                    c8 = '\t';
                                                                }
                                                                if (videoEditedInfo9 != null) {
                                                                    String string = videoEditedInfo9.getString();
                                                                    if (hashMap5 == null) {
                                                                        hashMap5 = new HashMap<>();
                                                                    }
                                                                    hashMap5.put("ve", string);
                                                                }
                                                                if (tLRPC$EncryptedChat != null && tLRPC$TL_document2.dc_id > 0 && !MessageObject.isStickerDocument(tLRPC$TL_document2) && !MessageObject.isAnimatedStickerDocument(tLRPC$TL_document2, true) && !MessageObject.isGifDocument(tLRPC$TL_document2)) {
                                                                    tLRPC$TL_message3.attachPath = FileLoader.getInstance(sendMessagesHelper3.currentAccount).getPathToAttach(tLRPC$TL_document2).toString();
                                                                } else {
                                                                    tLRPC$TL_message3.attachPath = str4;
                                                                }
                                                                if (tLRPC$EncryptedChat == null || !(MessageObject.isStickerDocument(tLRPC$TL_document2) || MessageObject.isAnimatedStickerDocument(tLRPC$TL_document2, true))) {
                                                                    hashMap = hashMap5;
                                                                    tLRPC$TL_document = tLRPC$TL_document2;
                                                                    z5 = z6;
                                                                    z4 = z3;
                                                                    tLRPC$TL_message2 = tLRPC$TL_message3;
                                                                    tL_stories$StoryItem = tL_stories$StoryItem8;
                                                                    str6 = str22;
                                                                    delayedMessage = null;
                                                                } else {
                                                                    int i31 = 0;
                                                                    while (true) {
                                                                        if (i31 >= tLRPC$TL_document2.attributes.size()) {
                                                                            tLRPC$Message3 = tLRPC$TL_message3;
                                                                            hashMap = hashMap5;
                                                                            tLRPC$TL_document = tLRPC$TL_document2;
                                                                            z5 = z6;
                                                                            break;
                                                                        }
                                                                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$TL_document2.attributes.get(i31);
                                                                        tLRPC$Message3 = tLRPC$TL_message3;
                                                                        try {
                                                                            if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeSticker) {
                                                                                tLRPC$TL_document2.attributes.remove(i31);
                                                                                TLRPC$TL_documentAttributeSticker_layer55 tLRPC$TL_documentAttributeSticker_layer55 = new TLRPC$TL_documentAttributeSticker_layer55();
                                                                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeSticker_layer55);
                                                                                tLRPC$TL_documentAttributeSticker_layer55.alt = tLRPC$DocumentAttribute.alt;
                                                                                TLRPC$InputStickerSet tLRPC$InputStickerSet = tLRPC$DocumentAttribute.stickerset;
                                                                                if (tLRPC$InputStickerSet != null) {
                                                                                    hashMap = hashMap5;
                                                                                    if (tLRPC$InputStickerSet instanceof TLRPC$TL_inputStickerSetShortName) {
                                                                                        stickerSetName = tLRPC$InputStickerSet.short_name;
                                                                                        tLRPC$TL_document = tLRPC$TL_document2;
                                                                                        z5 = z6;
                                                                                    } else {
                                                                                        tLRPC$TL_document = tLRPC$TL_document2;
                                                                                        z5 = z6;
                                                                                        stickerSetName = getMediaDataController().getStickerSetName(tLRPC$DocumentAttribute.stickerset.id);
                                                                                    }
                                                                                    if (!TextUtils.isEmpty(stickerSetName)) {
                                                                                        TLRPC$TL_inputStickerSetShortName tLRPC$TL_inputStickerSetShortName = new TLRPC$TL_inputStickerSetShortName();
                                                                                        tLRPC$TL_documentAttributeSticker_layer55.stickerset = tLRPC$TL_inputStickerSetShortName;
                                                                                        tLRPC$TL_inputStickerSetShortName.short_name = stickerSetName;
                                                                                    } else {
                                                                                        if (tLRPC$DocumentAttribute.stickerset instanceof TLRPC$TL_inputStickerSetID) {
                                                                                            delayedMessage2 = new DelayedMessage(j13);
                                                                                            delayedMessage2.encryptedChat = tLRPC$EncryptedChat;
                                                                                            delayedMessage2.locationParent = tLRPC$TL_documentAttributeSticker_layer55;
                                                                                            delayedMessage2.type = 5;
                                                                                            delayedMessage2.parentObject = tLRPC$DocumentAttribute.stickerset;
                                                                                        } else {
                                                                                            delayedMessage2 = null;
                                                                                        }
                                                                                        tLRPC$TL_documentAttributeSticker_layer55.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                                    }
                                                                                } else {
                                                                                    hashMap = hashMap5;
                                                                                    tLRPC$TL_document = tLRPC$TL_document2;
                                                                                    z5 = z6;
                                                                                    tLRPC$TL_documentAttributeSticker_layer55.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                                }
                                                                            } else {
                                                                                i31++;
                                                                                tLRPC$TL_message3 = tLRPC$Message3;
                                                                            }
                                                                        } catch (Exception e5) {
                                                                            e = e5;
                                                                            exc = e;
                                                                            sendMessagesHelper = sendMessagesHelper3;
                                                                            tLRPC$Message = tLRPC$Message3;
                                                                            i3 = i23;
                                                                            messageObject = null;
                                                                            tLRPC$Message2 = tLRPC$Message;
                                                                            i2 = i3;
                                                                            sendMessagesHelper2 = sendMessagesHelper;
                                                                            FileLog.e(exc);
                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                            if (messageObject != null) {
                                                                            }
                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                            return;
                                                                        }
                                                                    }
                                                                    delayedMessage2 = null;
                                                                    delayedMessage = delayedMessage2;
                                                                    z4 = z3;
                                                                    tLRPC$TL_message2 = tLRPC$Message3;
                                                                    tL_stories$StoryItem = tL_stories$StoryItem8;
                                                                    str6 = str22;
                                                                }
                                                            } catch (Exception e6) {
                                                                e = e6;
                                                                tLRPC$Message3 = tLRPC$TL_message3;
                                                            }
                                                        } else {
                                                            tLRPC$User4 = tLRPC$User5;
                                                            tLRPC$TL_document = tLRPC$TL_document6;
                                                            if (tL_stories$StoryItem8 != null) {
                                                                if (tLRPC$EncryptedChat != null) {
                                                                    tLRPC$TL_message2 = new TLRPC$TL_message_secret();
                                                                } else {
                                                                    tLRPC$TL_message2 = new TLRPC$TL_message();
                                                                }
                                                                MessageMediaStoryFull messageMediaStoryFull = new MessageMediaStoryFull();
                                                                tL_stories$StoryItem = tL_stories$StoryItem8;
                                                                messageMediaStoryFull.id = tL_stories$StoryItem.id;
                                                                messageMediaStoryFull.user_id = tL_stories$StoryItem.dialogId;
                                                                str5 = str4;
                                                                z4 = z3;
                                                                messageMediaStoryFull.peer = getMessagesController().getPeer(tL_stories$StoryItem.dialogId);
                                                                messageMediaStoryFull.storyItem = tL_stories$StoryItem;
                                                                tLRPC$TL_message2.media = messageMediaStoryFull;
                                                                hashMap = hashMap5;
                                                                str6 = str22;
                                                                delayedMessage = null;
                                                                c8 = '\f';
                                                            } else {
                                                                str5 = str4;
                                                                z4 = z3;
                                                                tL_stories$StoryItem = tL_stories$StoryItem8;
                                                                hashMap = hashMap5;
                                                                str6 = str22;
                                                                tLRPC$TL_message2 = null;
                                                                delayedMessage = null;
                                                            }
                                                            z5 = false;
                                                        }
                                                    }
                                                    str5 = str4;
                                                }
                                                if (arrayList != null) {
                                                }
                                                arrayList3 = arrayList;
                                                if (str6 != null) {
                                                }
                                                if (tLRPC$TL_message2.attachPath == null) {
                                                }
                                                int newMessageId22 = getUserConfig().getNewMessageId();
                                                tLRPC$TL_message2.id = newMessageId22;
                                                tLRPC$TL_message2.local_id = newMessageId22;
                                                tLRPC$TL_message2.out = true;
                                                if (z) {
                                                }
                                                delayedMessage3 = delayedMessage;
                                                tL_stories$StoryItem8 = tL_stories$StoryItem;
                                                tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                                if (tLRPC$Peer2 != null) {
                                                }
                                            } catch (Exception e7) {
                                                exc = e7;
                                                sendMessagesHelper = sendMessagesHelper3;
                                                i = i23;
                                                tLRPC$Message = null;
                                                i3 = i;
                                                messageObject = null;
                                                tLRPC$Message2 = tLRPC$Message;
                                                i2 = i3;
                                                sendMessagesHelper2 = sendMessagesHelper;
                                                FileLog.e(exc);
                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                if (messageObject != null) {
                                                }
                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                return;
                                            }
                                        }
                                        arrayList = arrayList6;
                                        tLRPC$TL_document = tLRPC$TL_document6;
                                        tL_stories$StoryItem = tL_stories$StoryItem8;
                                        str6 = str22;
                                        delayedMessage = null;
                                        z5 = false;
                                        str5 = str4;
                                        z4 = z3;
                                        if (arrayList != null) {
                                        }
                                        arrayList3 = arrayList;
                                        if (str6 != null) {
                                        }
                                        if (tLRPC$TL_message2.attachPath == null) {
                                        }
                                        int newMessageId222 = getUserConfig().getNewMessageId();
                                        tLRPC$TL_message2.id = newMessageId222;
                                        tLRPC$TL_message2.local_id = newMessageId222;
                                        tLRPC$TL_message2.out = true;
                                        if (z) {
                                        }
                                        delayedMessage3 = delayedMessage;
                                        tL_stories$StoryItem8 = tL_stories$StoryItem;
                                        tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                        if (tLRPC$Peer2 != null) {
                                        }
                                    }
                                    tLRPC$Peer2 = tLRPC$Peer;
                                    sendMessagesHelper3 = this;
                                    if (arrayList != null) {
                                    }
                                    arrayList3 = arrayList;
                                    if (str6 != null) {
                                    }
                                    if (tLRPC$TL_message2.attachPath == null) {
                                    }
                                    int newMessageId2222 = getUserConfig().getNewMessageId();
                                    tLRPC$TL_message2.id = newMessageId2222;
                                    tLRPC$TL_message2.local_id = newMessageId2222;
                                    tLRPC$TL_message2.out = true;
                                    if (z) {
                                    }
                                    delayedMessage3 = delayedMessage;
                                    tL_stories$StoryItem8 = tL_stories$StoryItem;
                                    tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                    if (tLRPC$Peer2 != null) {
                                    }
                                } catch (Exception e8) {
                                    sendMessagesHelper = this;
                                    exc = e8;
                                    tLRPC$TL_message = z2;
                                }
                            }
                        } catch (Exception e9) {
                            exc = e9;
                            sendMessagesHelper2 = tLRPC$Peer;
                            i2 = i23;
                            messageObject = null;
                            tLRPC$Message2 = str18;
                        }
                    } catch (Exception e10) {
                        sendMessagesHelper = this;
                        i = i23;
                        exc = e10;
                        tLRPC$Message = null;
                        i3 = i;
                        messageObject = null;
                        tLRPC$Message2 = tLRPC$Message;
                        i2 = i3;
                        sendMessagesHelper2 = sendMessagesHelper;
                        FileLog.e(exc);
                        getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                        if (messageObject != null) {
                        }
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                        sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                        return;
                    }
                }
                if (z19) {
                    str8 = str18;
                    obj4 = "query_id";
                    tLRPC$MessageMedia3 = tLRPC$MessageMedia2;
                } else {
                    tLRPC$MessageMedia3 = tLRPC$MessageMedia2;
                    try {
                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper3.currentAccount);
                        obj4 = "query_id";
                        sb = new StringBuilder();
                        str8 = str18;
                        sb.append(NotificationsSettingsFacade.PROPERTY_SILENT);
                        sb.append(j13);
                    } catch (Exception e11) {
                        exc = e11;
                        sendMessagesHelper = sendMessagesHelper3;
                        tLRPC$Message = tLRPC$Message4;
                        i3 = i23;
                        messageObject = null;
                        tLRPC$Message2 = tLRPC$Message;
                        i2 = i3;
                        sendMessagesHelper2 = sendMessagesHelper;
                        FileLog.e(exc);
                        getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                        if (messageObject != null) {
                        }
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                        sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                        return;
                    }
                    if (!notificationsSettings.getBoolean(sb.toString(), false)) {
                        z9 = false;
                        tLRPC$Message4.silent = z9;
                        if (tLRPC$Message4.random_id == 0) {
                            tLRPC$Message4.random_id = getNextRandomId();
                        }
                        if (str2 == null && i25 == 0) {
                            str9 = str2;
                            if (hashMap5 == null && hashMap5.containsKey("bot")) {
                                if (tLRPC$EncryptedChat != null) {
                                    String str28 = hashMap5.get("bot_name");
                                    tLRPC$Message4.via_bot_name = str28;
                                    if (str28 == null) {
                                        tLRPC$Message4.via_bot_name = "";
                                    }
                                    str10 = "";
                                    obj5 = "bot_name";
                                } else {
                                    str10 = "";
                                    obj5 = "bot_name";
                                    tLRPC$Message4.via_bot_id = Utilities.parseLong(hashMap5.get("bot")).longValue();
                                }
                                tLRPC$Message4.flags |= 2048;
                            } else {
                                str10 = "";
                                obj5 = "bot_name";
                            }
                            tLRPC$Message4.params = hashMap5;
                            if (messageObject2 != null) {
                                messageObject3 = messageObject2;
                                if (messageObject3.resendAsIs) {
                                    str11 = str9;
                                    i8 = i23;
                                    messageObject4 = messageObject3;
                                    tLRPC$Message4.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                    tLRPC$Message4.dialog_id = j13;
                                    tLRPC$Message4.invert_media = z22;
                                    if (tL_stories$StoryItem7 == null) {
                                        TLRPC$TL_messageReplyStoryHeader tLRPC$TL_messageReplyStoryHeader = new TLRPC$TL_messageReplyStoryHeader();
                                        tLRPC$Message4.reply_to = tLRPC$TL_messageReplyStoryHeader;
                                        tL_stories$StoryItem2 = tL_stories$StoryItem7;
                                        tLRPC$TL_messageReplyStoryHeader.story_id = tL_stories$StoryItem2.id;
                                        tLRPC$InputPeer4 = tLRPC$InputPeer2;
                                        i9 = i6;
                                        tLRPC$TL_messageReplyStoryHeader.peer = getMessagesController().getPeer(tL_stories$StoryItem2.dialogId);
                                        tLRPC$Message4.replyStory = tL_stories$StoryItem2;
                                        tLRPC$Message4.flags |= 8;
                                    } else {
                                        i9 = i6;
                                        tL_stories$StoryItem2 = tL_stories$StoryItem7;
                                        tLRPC$InputPeer4 = tLRPC$InputPeer2;
                                        if (messageObject19 != null) {
                                            messageObject5 = messageObject17;
                                            messageObject6 = messageObject19;
                                            if (messageObject17 != null && messageObject6 == messageObject5 && messageObject5.getId() == 1) {
                                                j6 = j5;
                                                c2 = c;
                                                replyQuote = replyQuote3;
                                                if (j4 == 0) {
                                                    TLRPC$TL_messageReplies tLRPC$TL_messageReplies = new TLRPC$TL_messageReplies();
                                                    tLRPC$Message4.replies = tLRPC$TL_messageReplies;
                                                    tLRPC$TL_messageReplies.comments = true;
                                                    c3 = c2;
                                                    tLRPC$TL_messageReplies.channel_id = j4;
                                                    tLRPC$TL_messageReplies.flags |= 1;
                                                    tLRPC$Message4.flags |= 8388608;
                                                } else {
                                                    c3 = c2;
                                                }
                                                if (tLRPC$ReplyMarkup != null && tLRPC$EncryptedChat == null) {
                                                    tLRPC$Message4.flags |= 64;
                                                    tLRPC$Message4.reply_markup = tLRPC$ReplyMarkup;
                                                    str17 = hashMap5.get("bot");
                                                    if (str17 != null) {
                                                        tLRPC$Message4.via_bot_id = Long.parseLong(str17);
                                                    }
                                                }
                                                if (DialogObject.isEncryptedDialog(j13)) {
                                                    tLRPC$Message4.peer_id = getMessagesController().getPeer(j13);
                                                    if (DialogObject.isUserDialog(j13)) {
                                                        TLRPC$User user = getMessagesController().getUser(Long.valueOf(j13));
                                                        if (user == null) {
                                                            sendMessagesHelper3.processSentMessage(tLRPC$Message4.id);
                                                            return;
                                                        } else if (user.bot) {
                                                            tLRPC$Message4.unread = false;
                                                        }
                                                    }
                                                } else {
                                                    TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
                                                    tLRPC$Message4.peer_id = tLRPC$TL_peerUser2;
                                                    long j14 = tLRPC$EncryptedChat.participant_id;
                                                    if (j14 == j6) {
                                                        tLRPC$TL_peerUser2.user_id = tLRPC$EncryptedChat.admin_id;
                                                    } else {
                                                        tLRPC$TL_peerUser2.user_id = j14;
                                                    }
                                                    if (i9 != 0) {
                                                        i10 = i9;
                                                        tLRPC$Message4.ttl = i10;
                                                    } else {
                                                        i10 = i9;
                                                        int i32 = tLRPC$EncryptedChat.ttl;
                                                        tLRPC$Message4.ttl = i32;
                                                        if (i32 != 0 && (tLRPC$MessageMedia4 = tLRPC$Message4.media) != null) {
                                                            tLRPC$MessageMedia4.ttl_seconds = i32;
                                                            tLRPC$MessageMedia4.flags |= 4;
                                                        }
                                                    }
                                                    if (tLRPC$Message4.ttl == 0 || tLRPC$Message4.media.document == null) {
                                                        i9 = i10;
                                                    } else if (MessageObject.isVoiceMessage(tLRPC$Message4)) {
                                                        int i33 = 0;
                                                        while (true) {
                                                            if (i33 >= tLRPC$Message4.media.document.attributes.size()) {
                                                                i9 = i10;
                                                                i12 = 0;
                                                                break;
                                                            }
                                                            TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = tLRPC$Message4.media.document.attributes.get(i33);
                                                            i9 = i10;
                                                            if (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeAudio) {
                                                                i12 = (int) tLRPC$DocumentAttribute2.duration;
                                                                break;
                                                            } else {
                                                                i33++;
                                                                i10 = i9;
                                                            }
                                                        }
                                                        tLRPC$Message4.ttl = Math.max(tLRPC$Message4.ttl, i12 + 1);
                                                    } else {
                                                        i9 = i10;
                                                        if (MessageObject.isVideoMessage(tLRPC$Message4) || MessageObject.isRoundVideoMessage(tLRPC$Message4)) {
                                                            int i34 = 0;
                                                            while (true) {
                                                                if (i34 >= tLRPC$Message4.media.document.attributes.size()) {
                                                                    i11 = 0;
                                                                    break;
                                                                }
                                                                TLRPC$DocumentAttribute tLRPC$DocumentAttribute3 = tLRPC$Message4.media.document.attributes.get(i34);
                                                                if (tLRPC$DocumentAttribute3 instanceof TLRPC$TL_documentAttributeVideo) {
                                                                    i11 = (int) tLRPC$DocumentAttribute3.duration;
                                                                    break;
                                                                }
                                                                i34++;
                                                            }
                                                            tLRPC$Message4.ttl = Math.max(tLRPC$Message4.ttl, i11 + 1);
                                                        }
                                                    }
                                                }
                                                if (messageObject6 != null || tL_stories$StoryItem2 != null || tLRPC$Message4.reply_to == null || DialogObject.isEncryptedDialog(messageObject6.getDialogId())) {
                                                    tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                                    j7 = j13;
                                                    c4 = c3;
                                                    messageObject7 = null;
                                                } else {
                                                    TLRPC$Peer peer = getMessagesController().getPeer(messageObject6.getDialogId() > 0 ? messageObject6.getSenderId() : messageObject6.getDialogId());
                                                    if (peer != null) {
                                                        tL_stories$StoryItem6 = tL_stories$StoryItem2;
                                                        tLRPC$Peer3 = peer;
                                                        if (!MessageObject.peersEqual(getMessagesController().getPeer(messageObject6.getDialogId()), tLRPC$Message4.peer_id)) {
                                                            z15 = true;
                                                            tL_stories$StoryItem3 = tL_stories$StoryItem6;
                                                            if (z15 && messageObject6.isForwarded() && !messageObject6.isImportedForward()) {
                                                                tLRPC$MessageFwdHeader = messageObject6.messageOwner.fwd_from;
                                                                if (tLRPC$MessageFwdHeader.saved_from_peer == null && (tLRPC$Peer5 = tLRPC$MessageFwdHeader.from_id) != null) {
                                                                    z16 = z15;
                                                                    if ((tLRPC$MessageFwdHeader.flags & 4) != 0) {
                                                                        tLRPC$Message4.reply_to.reply_to_msg_id = tLRPC$MessageFwdHeader.channel_post;
                                                                        tLRPC$Peer4 = tLRPC$Peer5;
                                                                        r6 = 1;
                                                                        z16 = true;
                                                                        messageObject7 = r6;
                                                                        j7 = j13;
                                                                        c4 = c3;
                                                                        boolean z24 = ((ChatObject.isForum(getMessagesController().getChat(Long.valueOf(-DialogObject.getPeerDialogId(tLRPC$Message4.peer_id))))) || messageObject5.getId() == messageObject6.getId() || MessageObject.getTopicId(sendMessagesHelper3.currentAccount, messageObject6.messageOwner, true) == ((long) messageObject5.getId())) ? false : true;
                                                                        if (!z16 && !z24) {
                                                                            z17 = false;
                                                                            if (z17) {
                                                                                if (replyQuote == null) {
                                                                                    tLRPC$Message4.reply_to.quote = false;
                                                                                    replyQuote2 = ChatActivity.ReplyQuote.from(messageObject6);
                                                                                } else {
                                                                                    replyQuote2 = replyQuote;
                                                                                }
                                                                                if (replyQuote2 != null) {
                                                                                    TLRPC$Message tLRPC$Message23 = messageObject6.messageOwner;
                                                                                    if (tLRPC$Message23 != null && (tLRPC$MessageMedia5 = tLRPC$Message23.media) != null) {
                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader = tLRPC$Message4.reply_to;
                                                                                        tLRPC$MessageReplyHeader.flags |= LiteMode.FLAG_CHAT_BLUR;
                                                                                        tLRPC$MessageReplyHeader.reply_media = tLRPC$MessageMedia5;
                                                                                    }
                                                                                    if (replyQuote2.getText() != null) {
                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2 = tLRPC$Message4.reply_to;
                                                                                        tLRPC$MessageReplyHeader2.flags |= 64;
                                                                                        tLRPC$MessageReplyHeader2.quote_text = replyQuote2.getText();
                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader3 = tLRPC$Message4.reply_to;
                                                                                        tLRPC$MessageReplyHeader3.flags |= 1024;
                                                                                        tLRPC$MessageReplyHeader3.quote_offset = replyQuote2.start;
                                                                                    }
                                                                                    if (replyQuote2.getEntities() != null) {
                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader4 = tLRPC$Message4.reply_to;
                                                                                        tLRPC$MessageReplyHeader4.flags |= 128;
                                                                                        tLRPC$MessageReplyHeader4.quote_entities = replyQuote2.getEntities();
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader5 = tLRPC$Message4.reply_to;
                                                                        tLRPC$MessageReplyHeader5.flags |= 1;
                                                                        tLRPC$MessageReplyHeader5.reply_to_peer_id = tLRPC$Peer4;
                                                                        z17 = true;
                                                                        if (z17) {
                                                                        }
                                                                    }
                                                                    tLRPC$Peer4 = tLRPC$Peer3;
                                                                    r6 = 0;
                                                                    messageObject7 = r6;
                                                                    j7 = j13;
                                                                    c4 = c3;
                                                                    if (ChatObject.isForum(getMessagesController().getChat(Long.valueOf(-DialogObject.getPeerDialogId(tLRPC$Message4.peer_id))))) {
                                                                    }
                                                                    if (!z16) {
                                                                        z17 = false;
                                                                        if (z17) {
                                                                        }
                                                                    }
                                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader52 = tLRPC$Message4.reply_to;
                                                                    tLRPC$MessageReplyHeader52.flags |= 1;
                                                                    tLRPC$MessageReplyHeader52.reply_to_peer_id = tLRPC$Peer4;
                                                                    z17 = true;
                                                                    if (z17) {
                                                                    }
                                                                }
                                                            }
                                                            z16 = z15;
                                                            tLRPC$Peer4 = tLRPC$Peer3;
                                                            r6 = 0;
                                                            messageObject7 = r6;
                                                            j7 = j13;
                                                            c4 = c3;
                                                            if (ChatObject.isForum(getMessagesController().getChat(Long.valueOf(-DialogObject.getPeerDialogId(tLRPC$Message4.peer_id))))) {
                                                            }
                                                            if (!z16) {
                                                            }
                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader522 = tLRPC$Message4.reply_to;
                                                            tLRPC$MessageReplyHeader522.flags |= 1;
                                                            tLRPC$MessageReplyHeader522.reply_to_peer_id = tLRPC$Peer4;
                                                            z17 = true;
                                                            if (z17) {
                                                            }
                                                        }
                                                    } else {
                                                        tL_stories$StoryItem6 = tL_stories$StoryItem2;
                                                        tLRPC$Peer3 = peer;
                                                    }
                                                    z15 = false;
                                                    tL_stories$StoryItem3 = tL_stories$StoryItem6;
                                                    if (z15) {
                                                        tLRPC$MessageFwdHeader = messageObject6.messageOwner.fwd_from;
                                                        if (tLRPC$MessageFwdHeader.saved_from_peer == null) {
                                                            z16 = z15;
                                                            if ((tLRPC$MessageFwdHeader.flags & 4) != 0) {
                                                            }
                                                            tLRPC$Peer4 = tLRPC$Peer3;
                                                            r6 = 0;
                                                            messageObject7 = r6;
                                                            j7 = j13;
                                                            c4 = c3;
                                                            if (ChatObject.isForum(getMessagesController().getChat(Long.valueOf(-DialogObject.getPeerDialogId(tLRPC$Message4.peer_id))))) {
                                                            }
                                                            if (!z16) {
                                                            }
                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader5222 = tLRPC$Message4.reply_to;
                                                            tLRPC$MessageReplyHeader5222.flags |= 1;
                                                            tLRPC$MessageReplyHeader5222.reply_to_peer_id = tLRPC$Peer4;
                                                            z17 = true;
                                                            if (z17) {
                                                            }
                                                        }
                                                    }
                                                    z16 = z15;
                                                    tLRPC$Peer4 = tLRPC$Peer3;
                                                    r6 = 0;
                                                    messageObject7 = r6;
                                                    j7 = j13;
                                                    c4 = c3;
                                                    if (ChatObject.isForum(getMessagesController().getChat(Long.valueOf(-DialogObject.getPeerDialogId(tLRPC$Message4.peer_id))))) {
                                                    }
                                                    if (!z16) {
                                                    }
                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader52222 = tLRPC$Message4.reply_to;
                                                    tLRPC$MessageReplyHeader52222.flags |= 1;
                                                    tLRPC$MessageReplyHeader52222.reply_to_peer_id = tLRPC$Peer4;
                                                    z17 = true;
                                                    if (z17) {
                                                    }
                                                }
                                                if (!MessageObject.isVoiceMessage(tLRPC$Message4) || MessageObject.isRoundVideoMessage(tLRPC$Message4)) {
                                                    tLRPC$Message4.media_unread = true;
                                                }
                                                if (tLRPC$Message4.from_id == null) {
                                                    tLRPC$Message4.from_id = tLRPC$Message4.peer_id;
                                                }
                                                tLRPC$Message4.send_state = 1;
                                                if (hashMap5 == null) {
                                                    String str29 = hashMap5.get("groupId");
                                                    if (str29 != null) {
                                                        j8 = Utilities.parseLong(str29).longValue();
                                                        tLRPC$Message4.grouped_id = j8;
                                                        tLRPC$Message4.flags |= 131072;
                                                    } else {
                                                        j8 = 0;
                                                    }
                                                    if (hashMap5.get("final") != null) {
                                                        z10 = true;
                                                        messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
                                                        messageObject8.sendAnimationData = sendAnimationData;
                                                        messageObject8.wasJustSent = true;
                                                        messageObject8.scheduled = i8 != 0;
                                                        if (!messageObject8.isForwarded()) {
                                                            try {
                                                                int i35 = messageObject8.type;
                                                                if ((i35 == 3 || videoEditedInfo9 != null || i35 == 2) && !TextUtils.isEmpty(tLRPC$Message4.attachPath)) {
                                                                    messageObject8.attachPathExists = true;
                                                                }
                                                            } catch (Exception e12) {
                                                                exc = e12;
                                                                i14 = i8;
                                                                sendMessagesHelper4 = sendMessagesHelper3;
                                                                tLRPC$Message6 = tLRPC$Message4;
                                                                messageObject = messageObject8;
                                                                tLRPC$Message2 = tLRPC$Message6;
                                                                i2 = i14;
                                                                sendMessagesHelper2 = sendMessagesHelper4;
                                                                FileLog.e(exc);
                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                if (messageObject != null) {
                                                                }
                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                return;
                                                            }
                                                        }
                                                        videoEditedInfo = messageObject8.videoEditedInfo;
                                                        if (videoEditedInfo == null && videoEditedInfo9 == null) {
                                                            videoEditedInfo3 = videoEditedInfo;
                                                        } else {
                                                            if (videoEditedInfo9 != null) {
                                                                videoEditedInfo2 = videoEditedInfo9;
                                                                boolean z25 = videoEditedInfo2.notReadyYet;
                                                                if (z25) {
                                                                    videoEditedInfo.notReadyYet = z25;
                                                                }
                                                            } else {
                                                                videoEditedInfo2 = videoEditedInfo9;
                                                            }
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                        }
                                                        if (j8 == 0) {
                                                            try {
                                                                ArrayList<MessageObject> arrayList7 = new ArrayList<>();
                                                                arrayList7.add(messageObject8);
                                                                ArrayList<TLRPC$Message> arrayList8 = new ArrayList<>();
                                                                arrayList8.add(tLRPC$Message4);
                                                                if (i8 != 0) {
                                                                    messageObject7 = messageObject8;
                                                                    j9 = 0;
                                                                    i17 = 1;
                                                                } else if (str11 != null) {
                                                                    messageObject7 = messageObject8;
                                                                    j9 = tLRPC$Message4.quick_reply_shortcut_id;
                                                                    i17 = 5;
                                                                } else {
                                                                    messageObject7 = messageObject8;
                                                                    j9 = 0;
                                                                    i17 = 0;
                                                                }
                                                                MessagesStorage.getInstance(sendMessagesHelper3.currentAccount).putMessages(arrayList8, false, true, false, 0, i17, j9);
                                                                hashMap2 = hashMap5;
                                                                videoEditedInfo4 = videoEditedInfo3;
                                                                long j15 = j7;
                                                                MessagesController.getInstance(sendMessagesHelper3.currentAccount).updateInterfaceWithMessages(j15, arrayList7, i17);
                                                                if (i8 == 0) {
                                                                    videoEditedInfo5 = tL_stories$StoryItem3;
                                                                    NotificationCenter.getInstance(sendMessagesHelper3.currentAccount).lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                } else {
                                                                    videoEditedInfo5 = tL_stories$StoryItem3;
                                                                }
                                                                delayedMessage5 = delayedMessage4;
                                                                sendMessagesHelper7 = null;
                                                                r5 = j15;
                                                                tL_stories$StoryItem4 = videoEditedInfo5;
                                                            } catch (Exception e13) {
                                                                e = e13;
                                                                messageObject7 = messageObject8;
                                                                exc = e;
                                                                i15 = i8;
                                                                sendMessagesHelper5 = sendMessagesHelper3;
                                                                tLRPC$Message7 = tLRPC$Message4;
                                                                i16 = i15;
                                                                sendMessagesHelper6 = sendMessagesHelper5;
                                                                messageObject = messageObject7;
                                                                tLRPC$Message2 = tLRPC$Message7;
                                                                i2 = i16;
                                                                sendMessagesHelper2 = sendMessagesHelper6;
                                                                FileLog.e(exc);
                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                if (messageObject != null) {
                                                                }
                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                return;
                                                            }
                                                        } else {
                                                            videoEditedInfo4 = videoEditedInfo3;
                                                            TL_stories$StoryItem tL_stories$StoryItem9 = tL_stories$StoryItem3;
                                                            messageObject7 = messageObject8;
                                                            hashMap2 = hashMap5;
                                                            long j16 = j7;
                                                            try {
                                                                ArrayList<DelayedMessage> arrayList9 = sendMessagesHelper3.delayedMessages.get("group_" + j8);
                                                                if (arrayList9 != null) {
                                                                    delayedMessage4 = arrayList9.get(0);
                                                                }
                                                                if (delayedMessage4 == null) {
                                                                    delayedMessage5 = new DelayedMessage(j16);
                                                                    delayedMessage5.initForGroup(j8);
                                                                    delayedMessage5.encryptedChat = tLRPC$EncryptedChat;
                                                                    delayedMessage5.scheduled = i8 != 0;
                                                                } else {
                                                                    delayedMessage5 = delayedMessage4;
                                                                }
                                                                delayedMessage5.performMediaUpload = false;
                                                                sendMessagesHelper7 = null;
                                                                sendMessagesHelper7 = null;
                                                                delayedMessage5.photoSize = null;
                                                                delayedMessage5.videoEditedInfo = null;
                                                                delayedMessage5.httpLocation = null;
                                                                r5 = j16;
                                                                tL_stories$StoryItem4 = tL_stories$StoryItem9;
                                                                if (z10) {
                                                                    delayedMessage5.finalGroupMessage = tLRPC$Message4.id;
                                                                    r5 = j16;
                                                                    tL_stories$StoryItem4 = tL_stories$StoryItem9;
                                                                }
                                                            } catch (Exception e14) {
                                                                e = e14;
                                                                i13 = i8;
                                                                sendMessagesHelper4 = sendMessagesHelper3;
                                                                tLRPC$Message5 = tLRPC$Message4;
                                                                messageObject9 = messageObject7;
                                                                exc = e;
                                                                tLRPC$Message2 = tLRPC$Message5;
                                                                messageObject = messageObject9;
                                                                i2 = i13;
                                                                sendMessagesHelper2 = sendMessagesHelper4;
                                                                FileLog.e(exc);
                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                if (messageObject != null) {
                                                                }
                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                return;
                                                            }
                                                        }
                                                        if (BuildVars.LOGS_ENABLED || tLRPC$InputPeer4 == null) {
                                                            messageObject10 = messageObject5;
                                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                            sendMessagesHelper8 = sendMessagesHelper7;
                                                        } else {
                                                            try {
                                                                StringBuilder sb2 = new StringBuilder();
                                                                sb2.append("send message user_id = ");
                                                                messageObject10 = messageObject5;
                                                                TLRPC$InputPeer tLRPC$InputPeer8 = tLRPC$InputPeer4;
                                                                sb2.append(tLRPC$InputPeer8.user_id);
                                                                sb2.append(" chat_id = ");
                                                                sb2.append(tLRPC$InputPeer8.chat_id);
                                                                sb2.append(" channel_id = ");
                                                                sb2.append(tLRPC$InputPeer8.channel_id);
                                                                sb2.append(" access_hash = ");
                                                                sb2.append(tLRPC$InputPeer8.access_hash);
                                                                sb2.append(" notify = ");
                                                                sb2.append(z19);
                                                                sb2.append(" silent = ");
                                                                SharedPreferences notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper3.currentAccount);
                                                                messageObject5 = null;
                                                                sb2.append(notificationsSettings2.getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + r5, false));
                                                                FileLog.d(sb2.toString());
                                                                sendMessagesHelper8 = notificationsSettings2;
                                                                tLRPC$InputPeer5 = tLRPC$InputPeer8;
                                                            } catch (Exception e15) {
                                                                sendMessagesHelper5 = this;
                                                                exc = e15;
                                                                i15 = i8;
                                                                tLRPC$Message7 = tLRPC$Message4;
                                                                i16 = i15;
                                                                sendMessagesHelper6 = sendMessagesHelper5;
                                                                messageObject = messageObject7;
                                                                tLRPC$Message2 = tLRPC$Message7;
                                                                i2 = i16;
                                                                sendMessagesHelper2 = sendMessagesHelper6;
                                                                FileLog.e(exc);
                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                if (messageObject != null) {
                                                                }
                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                return;
                                                            }
                                                        }
                                                        if (c4 != 0 || ((c5 = c4) == '\t' && str8 != null && tLRPC$EncryptedChat != null)) {
                                                            sendMessagesHelper4 = this;
                                                            tLRPC$Message5 = tLRPC$Message4;
                                                            HashMap<String, String> hashMap6 = hashMap2;
                                                            ArrayList<TLRPC$MessageEntity> arrayList10 = arrayList4;
                                                            TL_stories$StoryItem tL_stories$StoryItem10 = tL_stories$StoryItem4;
                                                            Object obj14 = obj5;
                                                            String str30 = str8;
                                                            int i36 = i8;
                                                            TLRPC$InputPeer tLRPC$InputPeer9 = tLRPC$InputPeer5;
                                                            long j17 = r5;
                                                            MessageObject messageObject20 = messageObject7;
                                                            Object obj15 = obj3;
                                                            if (tLRPC$EncryptedChat != null) {
                                                                messageObject9 = messageObject20;
                                                                i13 = i36;
                                                                MessageObject messageObject21 = messageObject10;
                                                                MessageObject messageObject22 = messageObject4;
                                                                try {
                                                                    TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage2 = new TLRPC$TL_decryptedMessage();
                                                                    tLRPC$TL_decryptedMessage2.ttl = tLRPC$Message5.ttl;
                                                                    if (arrayList10 != null && !arrayList10.isEmpty()) {
                                                                        tLRPC$TL_decryptedMessage2.entities = arrayList10;
                                                                        tLRPC$TL_decryptedMessage2.flags |= 128;
                                                                    }
                                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader6 = tLRPC$Message5.reply_to;
                                                                    if (tLRPC$MessageReplyHeader6 != null) {
                                                                        long j18 = tLRPC$MessageReplyHeader6.reply_to_random_id;
                                                                        if (j18 != 0) {
                                                                            tLRPC$TL_decryptedMessage2.reply_to_random_id = j18;
                                                                            tLRPC$TL_decryptedMessage2.flags |= 8;
                                                                        }
                                                                    }
                                                                    if (hashMap6 != null && hashMap6.get(obj14) != null) {
                                                                        tLRPC$TL_decryptedMessage2.via_bot_name = hashMap6.get(obj14);
                                                                        tLRPC$TL_decryptedMessage2.flags |= 2048;
                                                                    }
                                                                    tLRPC$TL_decryptedMessage2.silent = tLRPC$Message5.silent;
                                                                    tLRPC$TL_decryptedMessage2.random_id = tLRPC$Message5.random_id;
                                                                    tLRPC$TL_decryptedMessage2.message = str30;
                                                                    TLRPC$WebPage tLRPC$WebPage4 = tLRPC$WebPage2;
                                                                    if (tLRPC$WebPage4 != null && tLRPC$WebPage4.url != null) {
                                                                        TLRPC$TL_decryptedMessageMediaWebPage tLRPC$TL_decryptedMessageMediaWebPage = new TLRPC$TL_decryptedMessageMediaWebPage();
                                                                        tLRPC$TL_decryptedMessage2.media = tLRPC$TL_decryptedMessageMediaWebPage;
                                                                        tLRPC$TL_decryptedMessageMediaWebPage.url = tLRPC$WebPage4.url;
                                                                        tLRPC$TL_decryptedMessage2.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                                    } else {
                                                                        tLRPC$TL_decryptedMessage2.media = new TLRPC$TL_decryptedMessageMediaEmpty();
                                                                    }
                                                                    getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage2, messageObject9.messageOwner, tLRPC$EncryptedChat, null, null, messageObject9);
                                                                    if (messageObject22 == null) {
                                                                        getMediaDataController().cleanDraft(j17, messageObject21 != null ? messageObject21.getId() : 0L, false);
                                                                        return;
                                                                    }
                                                                    return;
                                                                } catch (Exception e16) {
                                                                    e = e16;
                                                                    exc = e;
                                                                    tLRPC$Message2 = tLRPC$Message5;
                                                                    messageObject = messageObject9;
                                                                    i2 = i13;
                                                                    sendMessagesHelper2 = sendMessagesHelper4;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                    if (messageObject != null) {
                                                                    }
                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                    sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                    return;
                                                                }
                                                            } else if (tLRPC$TL_messageMediaWebPage != null) {
                                                                try {
                                                                    TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia2 = new TLRPC$TL_messages_sendMedia();
                                                                    tLRPC$TL_messages_sendMedia2.message = str30;
                                                                    tLRPC$TL_messages_sendMedia2.clear_draft = messageObject4 == null;
                                                                    tLRPC$TL_messages_sendMedia2.silent = tLRPC$Message5.silent;
                                                                    tLRPC$TL_messages_sendMedia2.peer = tLRPC$InputPeer9;
                                                                    tLRPC$TL_messages_sendMedia2.random_id = tLRPC$Message5.random_id;
                                                                    TLRPC$TL_inputMediaWebPage tLRPC$TL_inputMediaWebPage = new TLRPC$TL_inputMediaWebPage();
                                                                    TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage5 = tLRPC$TL_messageMediaWebPage;
                                                                    tLRPC$TL_inputMediaWebPage.url = tLRPC$TL_messageMediaWebPage5.webpage.url;
                                                                    tLRPC$TL_inputMediaWebPage.force_large_media = tLRPC$TL_messageMediaWebPage5.force_large_media;
                                                                    tLRPC$TL_inputMediaWebPage.force_small_media = tLRPC$TL_messageMediaWebPage5.force_small_media;
                                                                    tLRPC$TL_inputMediaWebPage.optional = true;
                                                                    tLRPC$TL_messages_sendMedia2.media = tLRPC$TL_inputMediaWebPage;
                                                                    if (tL_stories$StoryItem10 != null) {
                                                                        tLRPC$TL_messages_sendMedia2.reply_to = sendMessagesHelper4.createReplyInput(tL_stories$StoryItem10);
                                                                        tLRPC$TL_messages_sendMedia2.flags |= 1;
                                                                    } else {
                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader7 = tLRPC$Message5.reply_to;
                                                                        if (tLRPC$MessageReplyHeader7 instanceof TLRPC$TL_messageReplyHeader) {
                                                                            tLRPC$TL_messages_sendMedia2.reply_to = sendMessagesHelper4.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader7);
                                                                            tLRPC$TL_messages_sendMedia2.flags |= 1;
                                                                        }
                                                                    }
                                                                    if (z20 && SharedConfig.updateStickersOrderOnSend) {
                                                                        tLRPC$TL_messages_sendMedia2.update_stickersets_order = true;
                                                                    }
                                                                    if (tLRPC$Message5.from_id != null) {
                                                                        tLRPC$TL_messages_sendMedia2.send_as = getMessagesController().getInputPeer(tLRPC$Message5.from_id);
                                                                    }
                                                                    if (arrayList10 != null && !arrayList10.isEmpty()) {
                                                                        tLRPC$TL_messages_sendMedia2.entities = arrayList10;
                                                                        tLRPC$TL_messages_sendMedia2.flags |= 8;
                                                                    }
                                                                    if (i36 != 0) {
                                                                        i19 = i36;
                                                                        try {
                                                                            tLRPC$TL_messages_sendMedia2.schedule_date = i19;
                                                                            tLRPC$TL_messages_sendMedia2.flags |= 1024;
                                                                        } catch (Exception e17) {
                                                                            exc = e17;
                                                                            tLRPC$Message2 = tLRPC$Message5;
                                                                            messageObject = messageObject20;
                                                                            i2 = i19;
                                                                            sendMessagesHelper2 = sendMessagesHelper4;
                                                                        }
                                                                    } else {
                                                                        i19 = i36;
                                                                    }
                                                                    try {
                                                                        TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut = tLRPC$Message5.quick_reply_shortcut;
                                                                        if (tLRPC$InputQuickReplyShortcut != null) {
                                                                            tLRPC$TL_messages_sendMedia2.flags |= 131072;
                                                                            tLRPC$TL_messages_sendMedia2.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut;
                                                                        }
                                                                        tLRPC$TL_messages_sendMedia2.invert_media = tLRPC$Message5.invert_media;
                                                                        messageObject8 = messageObject20;
                                                                        MessageObject messageObject23 = messageObject4;
                                                                        MessageObject messageObject24 = messageObject10;
                                                                        try {
                                                                            performSendMessageRequest(tLRPC$TL_messages_sendMedia2, messageObject20, null, null, obj15, hashMap6, i19 != 0);
                                                                            if (messageObject23 == null) {
                                                                                MediaDataController mediaDataController = getMediaDataController();
                                                                                if (messageObject24 != null) {
                                                                                    try {
                                                                                        id = messageObject24.getId();
                                                                                    } catch (Exception e18) {
                                                                                        exc = e18;
                                                                                        i14 = i19;
                                                                                        tLRPC$Message6 = tLRPC$Message5;
                                                                                        messageObject = messageObject8;
                                                                                        tLRPC$Message2 = tLRPC$Message6;
                                                                                        i2 = i14;
                                                                                        sendMessagesHelper2 = sendMessagesHelper4;
                                                                                        FileLog.e(exc);
                                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                        if (messageObject != null) {
                                                                                        }
                                                                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                        sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                        return;
                                                                                    }
                                                                                } else {
                                                                                    id = 0;
                                                                                }
                                                                                messageObject11 = messageObject8;
                                                                                try {
                                                                                    mediaDataController.cleanDraft(j17, id, false);
                                                                                    return;
                                                                                } catch (Exception e19) {
                                                                                    e = e19;
                                                                                    exc = e;
                                                                                    i18 = i19;
                                                                                    tLRPC$Message9 = tLRPC$Message5;
                                                                                    messageObject = messageObject11;
                                                                                    tLRPC$Message2 = tLRPC$Message9;
                                                                                    i2 = i18;
                                                                                    sendMessagesHelper2 = sendMessagesHelper4;
                                                                                    FileLog.e(exc);
                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                    if (messageObject != null) {
                                                                                    }
                                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                    sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                    return;
                                                                                }
                                                                            }
                                                                            return;
                                                                        } catch (Exception e20) {
                                                                            e = e20;
                                                                            messageObject11 = messageObject8;
                                                                        }
                                                                    } catch (Exception e21) {
                                                                        e = e21;
                                                                        messageObject11 = messageObject20;
                                                                    }
                                                                } catch (Exception e22) {
                                                                    messageObject11 = messageObject20;
                                                                    exc = e22;
                                                                    tLRPC$Message9 = tLRPC$Message5;
                                                                    i18 = i36;
                                                                }
                                                            } else {
                                                                messageObject11 = messageObject20;
                                                                MessageObject messageObject25 = messageObject10;
                                                                MessageObject messageObject26 = messageObject4;
                                                                try {
                                                                    tLRPC$TL_messages_sendMessage = new TLRPC$TL_messages_sendMessage();
                                                                    tLRPC$TL_messages_sendMessage.message = str30;
                                                                    tLRPC$TL_messages_sendMessage.clear_draft = messageObject26 == null;
                                                                    tLRPC$TL_messages_sendMessage.silent = tLRPC$Message5.silent;
                                                                    tLRPC$TL_messages_sendMessage.peer = tLRPC$InputPeer9;
                                                                    tLRPC$TL_messages_sendMessage.random_id = tLRPC$Message5.random_id;
                                                                    try {
                                                                        if (tL_stories$StoryItem10 != null) {
                                                                            tLRPC$TL_messages_sendMessage.reply_to = sendMessagesHelper4.createReplyInput(tL_stories$StoryItem10);
                                                                            tLRPC$TL_messages_sendMessage.flags |= 1;
                                                                        } else {
                                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader8 = tLRPC$Message5.reply_to;
                                                                            if (tLRPC$MessageReplyHeader8 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                tLRPC$TL_messages_sendMessage.reply_to = sendMessagesHelper4.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader8);
                                                                                tLRPC$TL_messages_sendMessage.flags |= 1;
                                                                            }
                                                                        }
                                                                        TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut2 = tLRPC$Message5.quick_reply_shortcut;
                                                                        if (tLRPC$InputQuickReplyShortcut2 != null) {
                                                                            tLRPC$TL_messages_sendMessage.flags |= 131072;
                                                                            tLRPC$TL_messages_sendMessage.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut2;
                                                                        }
                                                                        if (z20 && SharedConfig.updateStickersOrderOnSend) {
                                                                            tLRPC$TL_messages_sendMessage.update_stickersets_order = true;
                                                                        }
                                                                        if (tLRPC$Message5.from_id != null) {
                                                                            tLRPC$TL_messages_sendMessage.send_as = getMessagesController().getInputPeer(tLRPC$Message5.from_id);
                                                                        }
                                                                        if (!z18) {
                                                                            tLRPC$TL_messages_sendMessage.no_webpage = true;
                                                                        }
                                                                        if (arrayList10 != null && !arrayList10.isEmpty()) {
                                                                            tLRPC$TL_messages_sendMessage.entities = arrayList10;
                                                                            tLRPC$TL_messages_sendMessage.flags |= 8;
                                                                        }
                                                                        if (i36 != 0) {
                                                                            tLRPC$TL_messages_sendMessage.schedule_date = i36;
                                                                            tLRPC$TL_messages_sendMessage.flags |= 1024;
                                                                        }
                                                                        tLRPC$TL_messages_sendMessage.invert_media = tLRPC$Message5.invert_media;
                                                                        messageObject12 = messageObject11;
                                                                    } catch (Exception e23) {
                                                                        exc = e23;
                                                                        tLRPC$Message9 = tLRPC$Message5;
                                                                        i18 = i36;
                                                                        messageObject = messageObject11;
                                                                        tLRPC$Message2 = tLRPC$Message9;
                                                                        i2 = i18;
                                                                        sendMessagesHelper2 = sendMessagesHelper4;
                                                                        FileLog.e(exc);
                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                        if (messageObject != null) {
                                                                        }
                                                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                        sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                        return;
                                                                    }
                                                                } catch (Exception e24) {
                                                                    e = e24;
                                                                    messageObject12 = messageObject11;
                                                                }
                                                                try {
                                                                    performSendMessageRequest(tLRPC$TL_messages_sendMessage, messageObject11, null, null, obj15, hashMap6, i36 != 0);
                                                                    if (messageObject26 == null) {
                                                                        MediaDataController mediaDataController2 = getMediaDataController();
                                                                        if (messageObject25 != null) {
                                                                            try {
                                                                                id2 = messageObject25.getId();
                                                                            } catch (Exception e25) {
                                                                                exc = e25;
                                                                                tLRPC$Message10 = tLRPC$Message5;
                                                                                i20 = i36;
                                                                                messageObject = messageObject12;
                                                                                tLRPC$Message2 = tLRPC$Message10;
                                                                                i2 = i20;
                                                                                sendMessagesHelper2 = sendMessagesHelper4;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                if (messageObject != null) {
                                                                                }
                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                return;
                                                                            }
                                                                        } else {
                                                                            id2 = 0;
                                                                        }
                                                                        i20 = i36;
                                                                        try {
                                                                            mediaDataController2.cleanDraft(j17, id2, false);
                                                                            return;
                                                                        } catch (Exception e26) {
                                                                            e = e26;
                                                                            exc = e;
                                                                            tLRPC$Message10 = tLRPC$Message5;
                                                                            messageObject = messageObject12;
                                                                            tLRPC$Message2 = tLRPC$Message10;
                                                                            i2 = i20;
                                                                            sendMessagesHelper2 = sendMessagesHelper4;
                                                                            FileLog.e(exc);
                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                            if (messageObject != null) {
                                                                            }
                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                            return;
                                                                        }
                                                                    }
                                                                    return;
                                                                } catch (Exception e27) {
                                                                    e = e27;
                                                                    i20 = i36;
                                                                    exc = e;
                                                                    tLRPC$Message10 = tLRPC$Message5;
                                                                    messageObject = messageObject12;
                                                                    tLRPC$Message2 = tLRPC$Message10;
                                                                    i2 = i20;
                                                                    sendMessagesHelper2 = sendMessagesHelper4;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                    if (messageObject != null) {
                                                                    }
                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                    sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                    return;
                                                                }
                                                            }
                                                        } else if ((c5 >= 1 && c5 <= 3) || ((c5 >= 5 && c5 <= '\b') || ((c5 == '\t' && tLRPC$EncryptedChat != null) || c5 == '\n' || c5 == 11 || c5 == '\f'))) {
                                                            sendMessagesHelper8 = this;
                                                            messageObject = i8;
                                                            TLRPC$Message tLRPC$Message24 = tLRPC$Message4;
                                                            HashMap<String, String> hashMap7 = hashMap2;
                                                            ?? r14 = messageObject7;
                                                            TL_stories$StoryItem tL_stories$StoryItem11 = tL_stories$StoryItem4;
                                                            MessageObject messageObject27 = messageObject4;
                                                            try {
                                                                if (tLRPC$EncryptedChat != null) {
                                                                    String str31 = str10;
                                                                    long j19 = r5;
                                                                    long j20 = j8;
                                                                    tL_stories$StoryItem4 = messageObject;
                                                                    messageObject = r14;
                                                                    ArrayList<TLRPC$MessageEntity> arrayList11 = arrayList4;
                                                                    Object obj16 = obj3;
                                                                    String str32 = str7;
                                                                    TLRPC$MessageMedia tLRPC$MessageMedia10 = tLRPC$MessageMedia3;
                                                                    String str33 = str5;
                                                                    TLRPC$TL_document tLRPC$TL_document7 = tLRPC$TL_document3;
                                                                    TLRPC$TL_photo tLRPC$TL_photo7 = tLRPC$TL_photo2;
                                                                    TLRPC$User tLRPC$User6 = tLRPC$User;
                                                                    try {
                                                                        if (AndroidUtilities.getPeerLayerVersion(tLRPC$EncryptedChat.layer) >= 73) {
                                                                            try {
                                                                                tLRPC$TL_decryptedMessage = new TLRPC$TL_decryptedMessage();
                                                                                if (j20 != 0) {
                                                                                    delayedMessage6 = delayedMessage5;
                                                                                    tLRPC$TL_photo3 = tLRPC$TL_photo7;
                                                                                    tLRPC$TL_decryptedMessage.grouped_id = j20;
                                                                                    tLRPC$TL_decryptedMessage.flags |= 131072;
                                                                                } else {
                                                                                    delayedMessage6 = delayedMessage5;
                                                                                    tLRPC$TL_photo3 = tLRPC$TL_photo7;
                                                                                }
                                                                            } catch (Exception e28) {
                                                                                exc = e28;
                                                                                tLRPC$Message8 = tLRPC$Message24;
                                                                                sendMessagesHelper9 = sendMessagesHelper8;
                                                                            }
                                                                        } else {
                                                                            delayedMessage6 = delayedMessage5;
                                                                            tLRPC$TL_photo3 = tLRPC$TL_photo7;
                                                                            tLRPC$TL_decryptedMessage = new TLRPC$TL_decryptedMessage_layer45();
                                                                        }
                                                                        tLRPC$TL_decryptedMessage.ttl = tLRPC$Message24.ttl;
                                                                        if (arrayList11 != null && !arrayList11.isEmpty()) {
                                                                            tLRPC$TL_decryptedMessage.entities = arrayList11;
                                                                            tLRPC$TL_decryptedMessage.flags |= 128;
                                                                        }
                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader9 = tLRPC$Message24.reply_to;
                                                                        if (tLRPC$MessageReplyHeader9 != null) {
                                                                            long j21 = tLRPC$MessageReplyHeader9.reply_to_random_id;
                                                                            if (j21 != 0) {
                                                                                tLRPC$TL_decryptedMessage.reply_to_random_id = j21;
                                                                                tLRPC$TL_decryptedMessage.flags |= 8;
                                                                            }
                                                                        }
                                                                        tLRPC$TL_decryptedMessage.silent = tLRPC$Message24.silent;
                                                                        tLRPC$TL_decryptedMessage.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                                        if (hashMap7 != null) {
                                                                            Object obj17 = obj5;
                                                                            if (hashMap7.get(obj17) != null) {
                                                                                tLRPC$TL_decryptedMessage.via_bot_name = hashMap7.get(obj17);
                                                                                tLRPC$TL_decryptedMessage.flags |= 2048;
                                                                            }
                                                                        }
                                                                        tLRPC$TL_decryptedMessage.random_id = tLRPC$Message24.random_id;
                                                                        tLRPC$TL_decryptedMessage.message = str31;
                                                                        if (c5 == 1) {
                                                                            if (tLRPC$MessageMedia10 instanceof TLRPC$TL_messageMediaVenue) {
                                                                                TLRPC$TL_decryptedMessageMediaVenue tLRPC$TL_decryptedMessageMediaVenue = new TLRPC$TL_decryptedMessageMediaVenue();
                                                                                tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaVenue;
                                                                                tLRPC$TL_decryptedMessageMediaVenue.address = tLRPC$MessageMedia10.address;
                                                                                tLRPC$TL_decryptedMessageMediaVenue.title = tLRPC$MessageMedia10.title;
                                                                                tLRPC$TL_decryptedMessageMediaVenue.provider = tLRPC$MessageMedia10.provider;
                                                                                tLRPC$TL_decryptedMessageMediaVenue.venue_id = tLRPC$MessageMedia10.venue_id;
                                                                            } else {
                                                                                tLRPC$TL_decryptedMessage.media = new TLRPC$TL_decryptedMessageMediaGeoPoint();
                                                                            }
                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                                                                            TLRPC$GeoPoint tLRPC$GeoPoint = tLRPC$MessageMedia10.geo;
                                                                            tLRPC$DecryptedMessageMedia.lat = tLRPC$GeoPoint.lat;
                                                                            tLRPC$DecryptedMessageMedia._long = tLRPC$GeoPoint._long;
                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, null, null, messageObject);
                                                                            delayedMessage7 = delayedMessage6;
                                                                            tLRPC$Message14 = tLRPC$Message24;
                                                                            c6 = c5;
                                                                            str12 = str;
                                                                            j10 = j19;
                                                                        } else {
                                                                            if (c5 != 2 && (c5 != '\t' || tLRPC$TL_photo3 == null)) {
                                                                                if (c5 == 3) {
                                                                                    TLRPC$PhotoSize thumbForSecretChat = sendMessagesHelper8.getThumbForSecretChat(tLRPC$TL_document7.thumbs);
                                                                                    ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat);
                                                                                    if (!MessageObject.isNewGifDocument(tLRPC$TL_document7) && !MessageObject.isRoundVideoDocument(tLRPC$TL_document7)) {
                                                                                        TLRPC$TL_decryptedMessageMediaVideo tLRPC$TL_decryptedMessageMediaVideo = new TLRPC$TL_decryptedMessageMediaVideo();
                                                                                        tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaVideo;
                                                                                        if (thumbForSecretChat != null && (bArr2 = thumbForSecretChat.bytes) != null) {
                                                                                            tLRPC$TL_decryptedMessageMediaVideo.thumb = bArr2;
                                                                                        } else {
                                                                                            tLRPC$TL_decryptedMessageMediaVideo.thumb = new byte[0];
                                                                                        }
                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia2 = tLRPC$TL_decryptedMessage.media;
                                                                                        tLRPC$DecryptedMessageMedia2.caption = str32;
                                                                                        tLRPC$DecryptedMessageMedia2.mime_type = "video/mp4";
                                                                                        tLRPC$DecryptedMessageMedia2.size = tLRPC$TL_document7.size;
                                                                                        i22 = 0;
                                                                                        while (true) {
                                                                                            if (i22 < tLRPC$TL_document7.attributes.size()) {
                                                                                                break;
                                                                                            }
                                                                                            TLRPC$DocumentAttribute tLRPC$DocumentAttribute4 = tLRPC$TL_document7.attributes.get(i22);
                                                                                            if (tLRPC$DocumentAttribute4 instanceof TLRPC$TL_documentAttributeVideo) {
                                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia3 = tLRPC$TL_decryptedMessage.media;
                                                                                                tLRPC$DecryptedMessageMedia3.w = tLRPC$DocumentAttribute4.w;
                                                                                                tLRPC$DecryptedMessageMedia3.h = tLRPC$DocumentAttribute4.h;
                                                                                                tLRPC$DecryptedMessageMedia3.duration = (int) tLRPC$DocumentAttribute4.duration;
                                                                                                break;
                                                                                            }
                                                                                            i22++;
                                                                                        }
                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia4 = tLRPC$TL_decryptedMessage.media;
                                                                                        tLRPC$DecryptedMessageMedia4.thumb_h = thumbForSecretChat.h;
                                                                                        tLRPC$DecryptedMessageMedia4.thumb_w = thumbForSecretChat.w;
                                                                                        if (tLRPC$TL_document7.key != null && j20 == 0) {
                                                                                            TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                                @Override // org.telegram.tgnet.TLObject
                                                                                                public void readParams(AbstractSerializedData abstractSerializedData, boolean z26) {
                                                                                                    this.id = abstractSerializedData.readInt64(z26);
                                                                                                    this.access_hash = abstractSerializedData.readInt64(z26);
                                                                                                }

                                                                                                @Override // org.telegram.tgnet.TLObject
                                                                                                public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                                    abstractSerializedData.writeInt32(1511503333);
                                                                                                    abstractSerializedData.writeInt64(this.id);
                                                                                                    abstractSerializedData.writeInt64(this.access_hash);
                                                                                                }
                                                                                            };
                                                                                            tLRPC$InputEncryptedFile.id = tLRPC$TL_document7.id;
                                                                                            tLRPC$InputEncryptedFile.access_hash = tLRPC$TL_document7.access_hash;
                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia5 = tLRPC$TL_decryptedMessage.media;
                                                                                            tLRPC$DecryptedMessageMedia5.key = tLRPC$TL_document7.key;
                                                                                            tLRPC$DecryptedMessageMedia5.iv = tLRPC$TL_document7.iv;
                                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile, null, messageObject);
                                                                                            delayedMessage7 = delayedMessage6;
                                                                                            str12 = str;
                                                                                            j10 = j19;
                                                                                        }
                                                                                        str12 = str;
                                                                                        j10 = j19;
                                                                                        delayedMessage7 = delayedMessage6;
                                                                                        delayedMessage7.videoEditedInfo = videoEditedInfo4;
                                                                                        if (j20 == 0) {
                                                                                            sendMessagesHelper8.performSendDelayedMessage(delayedMessage7);
                                                                                        }
                                                                                    }
                                                                                    TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                    tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument;
                                                                                    tLRPC$TL_decryptedMessageMediaDocument.attributes = tLRPC$TL_document7.attributes;
                                                                                    if (thumbForSecretChat != null && (bArr = thumbForSecretChat.bytes) != null) {
                                                                                        tLRPC$TL_decryptedMessageMediaDocument.thumb = bArr;
                                                                                    } else {
                                                                                        tLRPC$TL_decryptedMessageMediaDocument.thumb = new byte[0];
                                                                                    }
                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia22 = tLRPC$TL_decryptedMessage.media;
                                                                                    tLRPC$DecryptedMessageMedia22.caption = str32;
                                                                                    tLRPC$DecryptedMessageMedia22.mime_type = "video/mp4";
                                                                                    tLRPC$DecryptedMessageMedia22.size = tLRPC$TL_document7.size;
                                                                                    i22 = 0;
                                                                                    while (true) {
                                                                                        if (i22 < tLRPC$TL_document7.attributes.size()) {
                                                                                        }
                                                                                        i22++;
                                                                                    }
                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia42 = tLRPC$TL_decryptedMessage.media;
                                                                                    tLRPC$DecryptedMessageMedia42.thumb_h = thumbForSecretChat.h;
                                                                                    tLRPC$DecryptedMessageMedia42.thumb_w = thumbForSecretChat.w;
                                                                                    if (tLRPC$TL_document7.key != null) {
                                                                                        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile2 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                            @Override // org.telegram.tgnet.TLObject
                                                                                            public void readParams(AbstractSerializedData abstractSerializedData, boolean z26) {
                                                                                                this.id = abstractSerializedData.readInt64(z26);
                                                                                                this.access_hash = abstractSerializedData.readInt64(z26);
                                                                                            }

                                                                                            @Override // org.telegram.tgnet.TLObject
                                                                                            public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                                abstractSerializedData.writeInt32(1511503333);
                                                                                                abstractSerializedData.writeInt64(this.id);
                                                                                                abstractSerializedData.writeInt64(this.access_hash);
                                                                                            }
                                                                                        };
                                                                                        tLRPC$InputEncryptedFile2.id = tLRPC$TL_document7.id;
                                                                                        tLRPC$InputEncryptedFile2.access_hash = tLRPC$TL_document7.access_hash;
                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia52 = tLRPC$TL_decryptedMessage.media;
                                                                                        tLRPC$DecryptedMessageMedia52.key = tLRPC$TL_document7.key;
                                                                                        tLRPC$DecryptedMessageMedia52.iv = tLRPC$TL_document7.iv;
                                                                                        getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile2, null, messageObject);
                                                                                        delayedMessage7 = delayedMessage6;
                                                                                        str12 = str;
                                                                                        j10 = j19;
                                                                                    }
                                                                                    str12 = str;
                                                                                    j10 = j19;
                                                                                    delayedMessage7 = delayedMessage6;
                                                                                    delayedMessage7.videoEditedInfo = videoEditedInfo4;
                                                                                    if (j20 == 0) {
                                                                                    }
                                                                                } else {
                                                                                    str12 = str;
                                                                                    j10 = j19;
                                                                                    Object obj18 = obj;
                                                                                    if (c5 == 6) {
                                                                                        TLRPC$TL_decryptedMessageMediaContact tLRPC$TL_decryptedMessageMediaContact = new TLRPC$TL_decryptedMessageMediaContact();
                                                                                        tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaContact;
                                                                                        tLRPC$TL_decryptedMessageMediaContact.phone_number = tLRPC$User6.phone;
                                                                                        tLRPC$TL_decryptedMessageMediaContact.first_name = tLRPC$User6.first_name;
                                                                                        tLRPC$TL_decryptedMessageMediaContact.last_name = tLRPC$User6.last_name;
                                                                                        tLRPC$TL_decryptedMessageMediaContact.user_id = tLRPC$User6.id;
                                                                                        getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, null, null, messageObject);
                                                                                    } else {
                                                                                        if (c5 != 7 && (c5 != '\t' || tLRPC$TL_document7 == null)) {
                                                                                            if (c5 == '\b') {
                                                                                                delayedMessage7 = new DelayedMessage(j10);
                                                                                                delayedMessage7.encryptedChat = tLRPC$EncryptedChat;
                                                                                                delayedMessage7.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                                delayedMessage7.obj = messageObject;
                                                                                                delayedMessage7.type = 3;
                                                                                                delayedMessage7.parentObject = obj16;
                                                                                                delayedMessage7.performMediaUpload = true;
                                                                                                delayedMessage7.scheduled = tL_stories$StoryItem4 != null;
                                                                                                TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument2 = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                                tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument2;
                                                                                                tLRPC$TL_decryptedMessageMediaDocument2.attributes = tLRPC$TL_document7.attributes;
                                                                                                tLRPC$TL_decryptedMessageMediaDocument2.caption = str32;
                                                                                                TLRPC$PhotoSize thumbForSecretChat2 = sendMessagesHelper8.getThumbForSecretChat(tLRPC$TL_document7.thumbs);
                                                                                                if (thumbForSecretChat2 != null) {
                                                                                                    ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat2);
                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia6 = tLRPC$TL_decryptedMessage.media;
                                                                                                    ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia6).thumb = thumbForSecretChat2.bytes;
                                                                                                    tLRPC$DecryptedMessageMedia6.thumb_h = thumbForSecretChat2.h;
                                                                                                    tLRPC$DecryptedMessageMedia6.thumb_w = thumbForSecretChat2.w;
                                                                                                } else {
                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia7 = tLRPC$TL_decryptedMessage.media;
                                                                                                    ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia7).thumb = new byte[0];
                                                                                                    tLRPC$DecryptedMessageMedia7.thumb_h = 0;
                                                                                                    tLRPC$DecryptedMessageMedia7.thumb_w = 0;
                                                                                                }
                                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia8 = tLRPC$TL_decryptedMessage.media;
                                                                                                tLRPC$DecryptedMessageMedia8.mime_type = tLRPC$TL_document7.mime_type;
                                                                                                tLRPC$DecryptedMessageMedia8.size = tLRPC$TL_document7.size;
                                                                                                delayedMessage7.originalPath = str12;
                                                                                                sendMessagesHelper8.performSendDelayedMessage(delayedMessage7);
                                                                                            }
                                                                                        }
                                                                                        tLRPC$Message14 = tLRPC$Message24;
                                                                                        c6 = c5;
                                                                                        if (tLRPC$TL_document7.access_hash != 0 && (MessageObject.isStickerDocument(tLRPC$TL_document7) || MessageObject.isAnimatedStickerDocument(tLRPC$TL_document7, true))) {
                                                                                            TLRPC$TL_decryptedMessageMediaExternalDocument tLRPC$TL_decryptedMessageMediaExternalDocument = new TLRPC$TL_decryptedMessageMediaExternalDocument();
                                                                                            tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaExternalDocument;
                                                                                            tLRPC$TL_decryptedMessageMediaExternalDocument.id = tLRPC$TL_document7.id;
                                                                                            tLRPC$TL_decryptedMessageMediaExternalDocument.date = tLRPC$TL_document7.date;
                                                                                            tLRPC$TL_decryptedMessageMediaExternalDocument.access_hash = tLRPC$TL_document7.access_hash;
                                                                                            tLRPC$TL_decryptedMessageMediaExternalDocument.mime_type = tLRPC$TL_document7.mime_type;
                                                                                            tLRPC$TL_decryptedMessageMediaExternalDocument.size = tLRPC$TL_document7.size;
                                                                                            tLRPC$TL_decryptedMessageMediaExternalDocument.dc_id = tLRPC$TL_document7.dc_id;
                                                                                            tLRPC$TL_decryptedMessageMediaExternalDocument.attributes = tLRPC$TL_document7.attributes;
                                                                                            TLRPC$PhotoSize thumbForSecretChat3 = sendMessagesHelper8.getThumbForSecretChat(tLRPC$TL_document7.thumbs);
                                                                                            if (thumbForSecretChat3 != null) {
                                                                                                ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb = thumbForSecretChat3;
                                                                                            } else {
                                                                                                ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb = new TLRPC$TL_photoSizeEmpty();
                                                                                                ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb.type = "s";
                                                                                            }
                                                                                            if (delayedMessage6 != null) {
                                                                                                delayedMessage7 = delayedMessage6;
                                                                                                if (delayedMessage7.type == 5) {
                                                                                                    delayedMessage7.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                                    delayedMessage7.obj = messageObject;
                                                                                                    sendMessagesHelper8.performSendDelayedMessage(delayedMessage7);
                                                                                                }
                                                                                            } else {
                                                                                                delayedMessage7 = delayedMessage6;
                                                                                            }
                                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, null, null, messageObject);
                                                                                        } else {
                                                                                            delayedMessage7 = delayedMessage6;
                                                                                            TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument3 = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                            tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument3;
                                                                                            tLRPC$TL_decryptedMessageMediaDocument3.attributes = tLRPC$TL_document7.attributes;
                                                                                            tLRPC$TL_decryptedMessageMediaDocument3.caption = str32;
                                                                                            TLRPC$PhotoSize thumbForSecretChat4 = sendMessagesHelper8.getThumbForSecretChat(tLRPC$TL_document7.thumbs);
                                                                                            if (thumbForSecretChat4 != null) {
                                                                                                if (thumbForSecretChat4 instanceof TLRPC$TL_photoStrippedSize) {
                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia9 = tLRPC$TL_decryptedMessage.media;
                                                                                                    obj8 = obj16;
                                                                                                    ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia9).thumb = thumbForSecretChat4.bytes;
                                                                                                    tLRPC$DecryptedMessageMedia9.thumb_h = thumbForSecretChat4.h;
                                                                                                    tLRPC$DecryptedMessageMedia9.thumb_w = thumbForSecretChat4.w;
                                                                                                } else {
                                                                                                    obj8 = obj16;
                                                                                                    ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat4);
                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia10 = tLRPC$TL_decryptedMessage.media;
                                                                                                    ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia10).thumb = thumbForSecretChat4.bytes;
                                                                                                    tLRPC$DecryptedMessageMedia10.thumb_h = thumbForSecretChat4.h;
                                                                                                    tLRPC$DecryptedMessageMedia10.thumb_w = thumbForSecretChat4.w;
                                                                                                }
                                                                                            } else {
                                                                                                obj8 = obj16;
                                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia11 = tLRPC$TL_decryptedMessage.media;
                                                                                                ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia11).thumb = new byte[0];
                                                                                                tLRPC$DecryptedMessageMedia11.thumb_h = 0;
                                                                                                tLRPC$DecryptedMessageMedia11.thumb_w = 0;
                                                                                            }
                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia12 = tLRPC$TL_decryptedMessage.media;
                                                                                            tLRPC$DecryptedMessageMedia12.size = tLRPC$TL_document7.size;
                                                                                            tLRPC$DecryptedMessageMedia12.mime_type = tLRPC$TL_document7.mime_type;
                                                                                            if (tLRPC$TL_document7.key != null && j20 == 0) {
                                                                                                TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile3 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                                    @Override // org.telegram.tgnet.TLObject
                                                                                                    public void readParams(AbstractSerializedData abstractSerializedData, boolean z26) {
                                                                                                        this.id = abstractSerializedData.readInt64(z26);
                                                                                                        this.access_hash = abstractSerializedData.readInt64(z26);
                                                                                                    }

                                                                                                    @Override // org.telegram.tgnet.TLObject
                                                                                                    public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                                        abstractSerializedData.writeInt32(1511503333);
                                                                                                        abstractSerializedData.writeInt64(this.id);
                                                                                                        abstractSerializedData.writeInt64(this.access_hash);
                                                                                                    }
                                                                                                };
                                                                                                tLRPC$InputEncryptedFile3.id = tLRPC$TL_document7.id;
                                                                                                tLRPC$InputEncryptedFile3.access_hash = tLRPC$TL_document7.access_hash;
                                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia13 = tLRPC$TL_decryptedMessage.media;
                                                                                                tLRPC$DecryptedMessageMedia13.key = tLRPC$TL_document7.key;
                                                                                                tLRPC$DecryptedMessageMedia13.iv = tLRPC$TL_document7.iv;
                                                                                                getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile3, null, messageObject);
                                                                                            }
                                                                                            if (str33 != null && str33.length() > 0 && str33.startsWith("http")) {
                                                                                                delayedMessage7.httpLocation = str33;
                                                                                            }
                                                                                            if (j20 == 0) {
                                                                                                sendMessagesHelper8.performSendDelayedMessage(delayedMessage7);
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    delayedMessage7 = delayedMessage6;
                                                                                }
                                                                                tLRPC$Message14 = tLRPC$Message24;
                                                                                c6 = c5;
                                                                            }
                                                                            delayedMessage7 = delayedMessage6;
                                                                            c6 = c5;
                                                                            str12 = str;
                                                                            j10 = j19;
                                                                            Object obj19 = obj;
                                                                            tLRPC$Message14 = tLRPC$Message24;
                                                                            try {
                                                                                TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$TL_photo3.sizes.get(0);
                                                                                TLRPC$TL_photo tLRPC$TL_photo8 = tLRPC$TL_photo3;
                                                                                TLRPC$PhotoSize tLRPC$PhotoSize2 = tLRPC$TL_photo3.sizes.get(arrayList5.size() - 1);
                                                                                ImageLoader.fillPhotoSizeWithBytes(tLRPC$PhotoSize);
                                                                                TLRPC$TL_decryptedMessageMediaPhoto tLRPC$TL_decryptedMessageMediaPhoto = new TLRPC$TL_decryptedMessageMediaPhoto();
                                                                                tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaPhoto;
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.caption = str32;
                                                                                byte[] bArr3 = tLRPC$PhotoSize.bytes;
                                                                                if (bArr3 != null) {
                                                                                    obj6 = obj16;
                                                                                    tLRPC$TL_decryptedMessageMediaPhoto.thumb = bArr3;
                                                                                    obj7 = obj19;
                                                                                } else {
                                                                                    obj6 = obj16;
                                                                                    obj7 = obj19;
                                                                                    tLRPC$TL_decryptedMessageMediaPhoto.thumb = new byte[0];
                                                                                }
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.thumb_h = tLRPC$PhotoSize.h;
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.thumb_w = tLRPC$PhotoSize.w;
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.w = tLRPC$PhotoSize2.w;
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.h = tLRPC$PhotoSize2.h;
                                                                                tLRPC$TL_decryptedMessageMediaPhoto.size = tLRPC$PhotoSize2.size;
                                                                                if (tLRPC$PhotoSize2.location.key == null || j20 != 0) {
                                                                                    if (delayedMessage7 == null) {
                                                                                        delayedMessage7 = new DelayedMessage(j10);
                                                                                        delayedMessage7.encryptedChat = tLRPC$EncryptedChat;
                                                                                        delayedMessage7.type = 0;
                                                                                        delayedMessage7.originalPath = str12;
                                                                                        delayedMessage7.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                        delayedMessage7.obj = messageObject;
                                                                                        if (hashMap7 != null) {
                                                                                            Object obj20 = obj7;
                                                                                            if (hashMap7.containsKey(obj20)) {
                                                                                                delayedMessage7.parentObject = hashMap7.get(obj20);
                                                                                                delayedMessage7.performMediaUpload = true;
                                                                                                delayedMessage7.scheduled = tL_stories$StoryItem4 == null;
                                                                                            }
                                                                                        }
                                                                                        delayedMessage7.parentObject = obj6;
                                                                                        delayedMessage7.performMediaUpload = true;
                                                                                        delayedMessage7.scheduled = tL_stories$StoryItem4 == null;
                                                                                    }
                                                                                    if (!TextUtils.isEmpty(str33) && str33.startsWith("http")) {
                                                                                        delayedMessage7.httpLocation = str33;
                                                                                    } else {
                                                                                        ArrayList<TLRPC$PhotoSize> arrayList12 = tLRPC$TL_photo8.sizes;
                                                                                        delayedMessage7.photoSize = arrayList12.get(arrayList12.size() - 1);
                                                                                        delayedMessage7.locationParent = tLRPC$TL_photo8;
                                                                                    }
                                                                                    if (j20 == 0) {
                                                                                        sendMessagesHelper8.performSendDelayedMessage(delayedMessage7);
                                                                                    }
                                                                                } else {
                                                                                    TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile4 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                        @Override // org.telegram.tgnet.TLObject
                                                                                        public void readParams(AbstractSerializedData abstractSerializedData, boolean z26) {
                                                                                            this.id = abstractSerializedData.readInt64(z26);
                                                                                            this.access_hash = abstractSerializedData.readInt64(z26);
                                                                                        }

                                                                                        @Override // org.telegram.tgnet.TLObject
                                                                                        public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                            abstractSerializedData.writeInt32(1511503333);
                                                                                            abstractSerializedData.writeInt64(this.id);
                                                                                            abstractSerializedData.writeInt64(this.access_hash);
                                                                                        }
                                                                                    };
                                                                                    TLRPC$FileLocation tLRPC$FileLocation = tLRPC$PhotoSize2.location;
                                                                                    tLRPC$InputEncryptedFile4.id = tLRPC$FileLocation.volume_id;
                                                                                    tLRPC$InputEncryptedFile4.access_hash = tLRPC$FileLocation.secret;
                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia14 = tLRPC$TL_decryptedMessage.media;
                                                                                    tLRPC$DecryptedMessageMedia14.key = tLRPC$FileLocation.key;
                                                                                    tLRPC$DecryptedMessageMedia14.iv = tLRPC$FileLocation.iv;
                                                                                    getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile4, null, messageObject);
                                                                                }
                                                                            } catch (Exception e29) {
                                                                                e = e29;
                                                                                r5 = messageObject;
                                                                                messageObject5 = tLRPC$Message14;
                                                                                exc = e;
                                                                                tLRPC$Message8 = messageObject5;
                                                                                messageObject = r5;
                                                                                sendMessagesHelper9 = sendMessagesHelper8;
                                                                                i2 = tL_stories$StoryItem4;
                                                                                tLRPC$Message2 = tLRPC$Message8;
                                                                                sendMessagesHelper2 = sendMessagesHelper9;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                if (messageObject != null) {
                                                                                }
                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                return;
                                                                            }
                                                                        }
                                                                        if (j20 != 0) {
                                                                            try {
                                                                                TLObject tLObject = delayedMessage7.sendEncryptedRequest;
                                                                                if (tLObject != null) {
                                                                                    tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) tLObject;
                                                                                } else {
                                                                                    tLRPC$TL_messages_sendEncryptedMultiMedia = new TLRPC$TL_messages_sendEncryptedMultiMedia();
                                                                                    delayedMessage7.sendEncryptedRequest = tLRPC$TL_messages_sendEncryptedMultiMedia;
                                                                                }
                                                                                delayedMessage7.messageObjects.add(messageObject);
                                                                                tLRPC$Message15 = tLRPC$Message14;
                                                                            } catch (Exception e30) {
                                                                                e = e30;
                                                                                tLRPC$Message15 = tLRPC$Message14;
                                                                                exc = e;
                                                                                tLRPC$Message8 = tLRPC$Message15;
                                                                                sendMessagesHelper9 = sendMessagesHelper8;
                                                                                i2 = tL_stories$StoryItem4;
                                                                                tLRPC$Message2 = tLRPC$Message8;
                                                                                sendMessagesHelper2 = sendMessagesHelper9;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                if (messageObject != null) {
                                                                                }
                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                return;
                                                                            }
                                                                            try {
                                                                                delayedMessage7.messages.add(tLRPC$Message15);
                                                                                delayedMessage7.originalPaths.add(str12);
                                                                                delayedMessage7.performMediaUpload = true;
                                                                                tLRPC$TL_messages_sendEncryptedMultiMedia.messages.add(tLRPC$TL_decryptedMessage);
                                                                                TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile5 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                    @Override // org.telegram.tgnet.TLObject
                                                                                    public void readParams(AbstractSerializedData abstractSerializedData, boolean z26) {
                                                                                        this.id = abstractSerializedData.readInt64(z26);
                                                                                        this.access_hash = abstractSerializedData.readInt64(z26);
                                                                                    }

                                                                                    @Override // org.telegram.tgnet.TLObject
                                                                                    public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                        abstractSerializedData.writeInt32(1511503333);
                                                                                        abstractSerializedData.writeInt64(this.id);
                                                                                        abstractSerializedData.writeInt64(this.access_hash);
                                                                                    }
                                                                                };
                                                                                char c9 = c6;
                                                                                if (c9 != 3 && c9 != 7) {
                                                                                    j11 = 0;
                                                                                    tLRPC$InputEncryptedFile5.id = j11;
                                                                                    tLRPC$TL_messages_sendEncryptedMultiMedia.files.add(tLRPC$InputEncryptedFile5);
                                                                                    sendMessagesHelper8.performSendDelayedMessage(delayedMessage7);
                                                                                }
                                                                                j11 = 1;
                                                                                tLRPC$InputEncryptedFile5.id = j11;
                                                                                tLRPC$TL_messages_sendEncryptedMultiMedia.files.add(tLRPC$InputEncryptedFile5);
                                                                                sendMessagesHelper8.performSendDelayedMessage(delayedMessage7);
                                                                            } catch (Exception e31) {
                                                                                e = e31;
                                                                                exc = e;
                                                                                tLRPC$Message8 = tLRPC$Message15;
                                                                                sendMessagesHelper9 = sendMessagesHelper8;
                                                                                i2 = tL_stories$StoryItem4;
                                                                                tLRPC$Message2 = tLRPC$Message8;
                                                                                sendMessagesHelper2 = sendMessagesHelper9;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                if (messageObject != null) {
                                                                                }
                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                return;
                                                                            }
                                                                        } else {
                                                                            tLRPC$Message15 = tLRPC$Message14;
                                                                        }
                                                                        if (messageObject27 == null) {
                                                                            try {
                                                                                getMediaDataController().cleanDraft(j10, messageObject10 != null ? messageObject10.getId() : 0L, false);
                                                                                return;
                                                                            } catch (Exception e32) {
                                                                                e = e32;
                                                                                r5 = messageObject;
                                                                                messageObject5 = tLRPC$Message15;
                                                                                exc = e;
                                                                                tLRPC$Message8 = messageObject5;
                                                                                messageObject = r5;
                                                                                sendMessagesHelper9 = sendMessagesHelper8;
                                                                                i2 = tL_stories$StoryItem4;
                                                                                tLRPC$Message2 = tLRPC$Message8;
                                                                                sendMessagesHelper2 = sendMessagesHelper9;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                if (messageObject != null) {
                                                                                }
                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                return;
                                                                            }
                                                                        }
                                                                        return;
                                                                    } catch (Exception e33) {
                                                                        e = e33;
                                                                        r5 = messageObject;
                                                                        messageObject5 = tLRPC$Message24;
                                                                    }
                                                                } else {
                                                                    try {
                                                                        try {
                                                                            if (c5 == 1) {
                                                                                TLRPC$MessageMedia tLRPC$MessageMedia11 = tLRPC$MessageMedia3;
                                                                                if (tLRPC$MessageMedia11 instanceof TLRPC$TL_messageMediaVenue) {
                                                                                    tLRPC$TL_inputMediaGeoPoint = new TLRPC$TL_inputMediaVenue();
                                                                                    tLRPC$TL_inputMediaGeoPoint.address = tLRPC$MessageMedia11.address;
                                                                                    tLRPC$TL_inputMediaGeoPoint.title = tLRPC$MessageMedia11.title;
                                                                                    tLRPC$TL_inputMediaGeoPoint.provider = tLRPC$MessageMedia11.provider;
                                                                                    tLRPC$TL_inputMediaGeoPoint.venue_id = tLRPC$MessageMedia11.venue_id;
                                                                                    tLRPC$TL_inputMediaGeoPoint.venue_type = str10;
                                                                                } else if (tLRPC$MessageMedia11 instanceof TLRPC$TL_messageMediaGeoLive) {
                                                                                    tLRPC$TL_inputMediaGeoPoint = new TLRPC$TL_inputMediaGeoLive();
                                                                                    tLRPC$TL_inputMediaGeoPoint.period = tLRPC$MessageMedia11.period;
                                                                                    int i37 = tLRPC$TL_inputMediaGeoPoint.flags | 2;
                                                                                    tLRPC$TL_inputMediaGeoPoint.flags = i37;
                                                                                    int i38 = tLRPC$MessageMedia11.heading;
                                                                                    if (i38 != 0) {
                                                                                        tLRPC$TL_inputMediaGeoPoint.heading = i38;
                                                                                        tLRPC$TL_inputMediaGeoPoint.flags = i37 | 4;
                                                                                    }
                                                                                    int i39 = tLRPC$MessageMedia11.proximity_notification_radius;
                                                                                    if (i39 != 0) {
                                                                                        tLRPC$TL_inputMediaGeoPoint.proximity_notification_radius = i39;
                                                                                        tLRPC$TL_inputMediaGeoPoint.flags |= 8;
                                                                                    }
                                                                                } else {
                                                                                    tLRPC$TL_inputMediaGeoPoint = new TLRPC$TL_inputMediaGeoPoint();
                                                                                }
                                                                                TLRPC$TL_inputGeoPoint tLRPC$TL_inputGeoPoint = new TLRPC$TL_inputGeoPoint();
                                                                                tLRPC$TL_inputMediaGeoPoint.geo_point = tLRPC$TL_inputGeoPoint;
                                                                                TLRPC$GeoPoint tLRPC$GeoPoint2 = tLRPC$MessageMedia11.geo;
                                                                                tL_stories$StoryItem5 = tL_stories$StoryItem11;
                                                                                tLRPC$TL_inputGeoPoint.lat = tLRPC$GeoPoint2.lat;
                                                                                tLRPC$TL_inputGeoPoint._long = tLRPC$GeoPoint2._long;
                                                                                delayedMessage8 = delayedMessage5;
                                                                                hashMap4 = hashMap7;
                                                                                c7 = c5;
                                                                                tLRPC$TL_inputMediaStory2 = tLRPC$TL_inputMediaGeoPoint;
                                                                                j12 = j8;
                                                                                tL_stories$StoryItem4 = messageObject;
                                                                                tLRPC$InputPeer6 = tLRPC$InputPeer5;
                                                                                messageObject = r14;
                                                                                tLRPC$Message20 = tLRPC$Message24;
                                                                                obj9 = obj3;
                                                                                str13 = str;
                                                                                z12 = false;
                                                                                tLRPC$InputPeer7 = tLRPC$InputPeer5;
                                                                            } else {
                                                                                tL_stories$StoryItem5 = tL_stories$StoryItem11;
                                                                                String str34 = str10;
                                                                                if (c5 == 2 || (c5 == '\t' && tLRPC$TL_photo2 != null)) {
                                                                                    c7 = c5;
                                                                                    tL_stories$StoryItem4 = messageObject;
                                                                                    tLRPC$InputPeer6 = tLRPC$InputPeer5;
                                                                                    messageObject = r14;
                                                                                    TLRPC$Message tLRPC$Message25 = tLRPC$Message24;
                                                                                    obj9 = obj3;
                                                                                    boolean z26 = z8;
                                                                                    str13 = str;
                                                                                    j12 = j8;
                                                                                    int i40 = i9;
                                                                                    try {
                                                                                        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                                                                                        tLRPC$TL_inputMediaUploadedPhoto.spoiler = z26;
                                                                                        if (i40 != 0) {
                                                                                            tLRPC$TL_inputMediaUploadedPhoto.ttl_seconds = i40;
                                                                                            tLRPC$Message25.ttl = i40;
                                                                                            tLRPC$TL_inputMediaUploadedPhoto.flags |= 2;
                                                                                        }
                                                                                        if (hashMap7 == null || (str14 = hashMap7.get("masks")) == null) {
                                                                                            hashMap4 = hashMap7;
                                                                                        } else {
                                                                                            SerializedData serializedData = new SerializedData(Utilities.hexToBytes(str14));
                                                                                            boolean z27 = false;
                                                                                            int readInt32 = serializedData.readInt32(false);
                                                                                            int i41 = 0;
                                                                                            while (i41 < readInt32) {
                                                                                                tLRPC$TL_inputMediaUploadedPhoto.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData, serializedData.readInt32(z27), z27));
                                                                                                i41++;
                                                                                                hashMap7 = hashMap7;
                                                                                                readInt32 = readInt32;
                                                                                                z27 = false;
                                                                                            }
                                                                                            hashMap4 = hashMap7;
                                                                                            tLRPC$TL_inputMediaUploadedPhoto.flags |= 1;
                                                                                            serializedData.cleanup();
                                                                                        }
                                                                                        TLRPC$TL_photo tLRPC$TL_photo9 = tLRPC$TL_photo2;
                                                                                        if (tLRPC$TL_photo9.access_hash == 0) {
                                                                                            tLRPC$TL_inputMediaStory = tLRPC$TL_inputMediaUploadedPhoto;
                                                                                            z11 = true;
                                                                                        } else {
                                                                                            ?? tLRPC$TL_inputMediaPhoto = new TLRPC$TL_inputMediaPhoto();
                                                                                            TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                                                                                            tLRPC$TL_inputMediaPhoto.id = tLRPC$TL_inputPhoto;
                                                                                            tLRPC$TL_inputPhoto.id = tLRPC$TL_photo9.id;
                                                                                            tLRPC$TL_inputPhoto.access_hash = tLRPC$TL_photo9.access_hash;
                                                                                            byte[] bArr4 = tLRPC$TL_photo9.file_reference;
                                                                                            tLRPC$TL_inputPhoto.file_reference = bArr4;
                                                                                            if (bArr4 == null) {
                                                                                                tLRPC$TL_inputPhoto.file_reference = new byte[0];
                                                                                            }
                                                                                            tLRPC$TL_inputMediaPhoto.spoiler = z26;
                                                                                            z11 = false;
                                                                                            tLRPC$TL_inputMediaStory = tLRPC$TL_inputMediaPhoto;
                                                                                        }
                                                                                        if (delayedMessage5 == null) {
                                                                                            delayedMessage5 = new DelayedMessage(r5);
                                                                                            delayedMessage5.type = 0;
                                                                                            delayedMessage5.obj = messageObject;
                                                                                            delayedMessage5.originalPath = str13;
                                                                                            delayedMessage5.scheduled = tL_stories$StoryItem4 != null;
                                                                                        }
                                                                                        delayedMessage5.inputUploadMedia = tLRPC$TL_inputMediaUploadedPhoto;
                                                                                        delayedMessage5.performMediaUpload = z11;
                                                                                        if (str5 != null && str5.length() > 0) {
                                                                                            String str35 = str5;
                                                                                            if (str35.startsWith("http")) {
                                                                                                delayedMessage5.httpLocation = str35;
                                                                                                tLRPC$TL_inputMediaStory2 = tLRPC$TL_inputMediaStory;
                                                                                                z12 = z11;
                                                                                                delayedMessage8 = delayedMessage5;
                                                                                                tLRPC$Message20 = tLRPC$Message25;
                                                                                                tLRPC$InputPeer7 = z26;
                                                                                            }
                                                                                        }
                                                                                        ArrayList<TLRPC$PhotoSize> arrayList13 = tLRPC$TL_photo9.sizes;
                                                                                        delayedMessage5.photoSize = arrayList13.get(arrayList13.size() - 1);
                                                                                        delayedMessage5.locationParent = tLRPC$TL_photo9;
                                                                                        tLRPC$TL_inputMediaStory2 = tLRPC$TL_inputMediaStory;
                                                                                        z12 = z11;
                                                                                        delayedMessage8 = delayedMessage5;
                                                                                        tLRPC$Message20 = tLRPC$Message25;
                                                                                        tLRPC$InputPeer7 = z26;
                                                                                    } catch (Exception e34) {
                                                                                        exc = e34;
                                                                                        tLRPC$Message8 = tLRPC$Message25;
                                                                                        sendMessagesHelper9 = sendMessagesHelper8;
                                                                                    }
                                                                                } else {
                                                                                    if (c5 == 3) {
                                                                                        try {
                                                                                            tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                                                                                            tLRPC$InputPeer6 = tLRPC$InputPeer5;
                                                                                            tLRPC$TL_document4 = tLRPC$TL_document3;
                                                                                            tLRPC$TL_inputMediaUploadedDocument.mime_type = tLRPC$TL_document4.mime_type;
                                                                                            tLRPC$TL_inputMediaUploadedDocument.attributes = tLRPC$TL_document4.attributes;
                                                                                            z13 = z8;
                                                                                            tLRPC$TL_inputMediaUploadedDocument.spoiler = z13;
                                                                                        } catch (Exception e35) {
                                                                                            e = e35;
                                                                                            tL_stories$StoryItem4 = messageObject;
                                                                                            messageObject = r14;
                                                                                            messageObject13 = tLRPC$Message24;
                                                                                        }
                                                                                        try {
                                                                                            if (!z7) {
                                                                                                if (MessageObject.isRoundVideoDocument(tLRPC$TL_document4)) {
                                                                                                    j12 = j8;
                                                                                                    videoEditedInfo6 = videoEditedInfo4;
                                                                                                } else if (videoEditedInfo4 != null) {
                                                                                                    j12 = j8;
                                                                                                    videoEditedInfo6 = videoEditedInfo4;
                                                                                                    if (!videoEditedInfo6.muted) {
                                                                                                    }
                                                                                                }
                                                                                                if (i9 != 0) {
                                                                                                    int i42 = i9;
                                                                                                    tLRPC$TL_inputMediaUploadedDocument.ttl_seconds = i42;
                                                                                                    tLRPC$Message24.ttl = i42;
                                                                                                    tLRPC$TL_inputMediaUploadedDocument.flags |= 2;
                                                                                                }
                                                                                                if (hashMap7 != null) {
                                                                                                    try {
                                                                                                        String str36 = hashMap7.get("masks");
                                                                                                        if (str36 != null) {
                                                                                                            tLRPC$Message16 = tLRPC$Message24;
                                                                                                            try {
                                                                                                                SerializedData serializedData2 = new SerializedData(Utilities.hexToBytes(str36));
                                                                                                                c7 = c5;
                                                                                                                int i43 = 0;
                                                                                                                int readInt322 = serializedData2.readInt32(false);
                                                                                                                while (i43 < readInt322) {
                                                                                                                    int i44 = readInt322;
                                                                                                                    VideoEditedInfo videoEditedInfo10 = videoEditedInfo6;
                                                                                                                    tL_stories$StoryItem4 = messageObject;
                                                                                                                    try {
                                                                                                                        tLRPC$TL_inputMediaUploadedDocument.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData2, serializedData2.readInt32(false), false));
                                                                                                                        i43++;
                                                                                                                        readInt322 = i44;
                                                                                                                        videoEditedInfo6 = videoEditedInfo10;
                                                                                                                        messageObject = tL_stories$StoryItem4;
                                                                                                                    } catch (Exception e36) {
                                                                                                                        exc = e36;
                                                                                                                        messageObject = r14;
                                                                                                                        tLRPC$Message13 = tLRPC$Message16;
                                                                                                                        tLRPC$Message8 = tLRPC$Message13;
                                                                                                                        sendMessagesHelper9 = sendMessagesHelper8;
                                                                                                                        i2 = tL_stories$StoryItem4;
                                                                                                                        tLRPC$Message2 = tLRPC$Message8;
                                                                                                                        sendMessagesHelper2 = sendMessagesHelper9;
                                                                                                                        FileLog.e(exc);
                                                                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                                                        if (messageObject != null) {
                                                                                                                        }
                                                                                                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                                                        sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                                                        return;
                                                                                                                    }
                                                                                                                }
                                                                                                                videoEditedInfo7 = videoEditedInfo6;
                                                                                                                tL_stories$StoryItem4 = messageObject;
                                                                                                                tLRPC$TL_inputMediaUploadedDocument.flags |= 1;
                                                                                                                serializedData2.cleanup();
                                                                                                                if (tLRPC$TL_document4.access_hash == 0) {
                                                                                                                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaUploadedDocument;
                                                                                                                    messageObject = r14;
                                                                                                                    z12 = true;
                                                                                                                } else {
                                                                                                                    TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument3 = new TLRPC$TL_inputMediaDocument();
                                                                                                                    TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                                                                                                                    tLRPC$TL_inputMediaDocument3.id = tLRPC$TL_inputDocument;
                                                                                                                    messageObject = r14;
                                                                                                                    tLRPC$TL_inputDocument.id = tLRPC$TL_document4.id;
                                                                                                                    tLRPC$TL_inputDocument.access_hash = tLRPC$TL_document4.access_hash;
                                                                                                                    byte[] bArr5 = tLRPC$TL_document4.file_reference;
                                                                                                                    tLRPC$TL_inputDocument.file_reference = bArr5;
                                                                                                                    if (bArr5 == null) {
                                                                                                                        tLRPC$TL_inputDocument.file_reference = new byte[0];
                                                                                                                    }
                                                                                                                    if (hashMap7 != null && hashMap7.containsKey("query")) {
                                                                                                                        tLRPC$TL_inputMediaDocument3.query = hashMap7.get("query");
                                                                                                                        tLRPC$TL_inputMediaDocument3.flags |= 2;
                                                                                                                    }
                                                                                                                    tLRPC$TL_inputMediaDocument3.spoiler = z13;
                                                                                                                    z12 = false;
                                                                                                                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument3;
                                                                                                                }
                                                                                                                if (delayedMessage5 == null) {
                                                                                                                    delayedMessage5 = new DelayedMessage(r5);
                                                                                                                    delayedMessage5.type = 1;
                                                                                                                    delayedMessage5.obj = messageObject;
                                                                                                                    str15 = str;
                                                                                                                    delayedMessage5.originalPath = str15;
                                                                                                                    obj10 = obj3;
                                                                                                                    delayedMessage5.parentObject = obj10;
                                                                                                                    delayedMessage5.scheduled = tL_stories$StoryItem4 != null;
                                                                                                                } else {
                                                                                                                    obj10 = obj3;
                                                                                                                    str15 = str;
                                                                                                                }
                                                                                                                delayedMessage5.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument;
                                                                                                                delayedMessage5.performMediaUpload = z12;
                                                                                                                if (!tLRPC$TL_document4.thumbs.isEmpty()) {
                                                                                                                    TLRPC$PhotoSize tLRPC$PhotoSize3 = tLRPC$TL_document4.thumbs.get(0);
                                                                                                                    if (!(tLRPC$PhotoSize3 instanceof TLRPC$TL_photoStrippedSize)) {
                                                                                                                        delayedMessage5.photoSize = tLRPC$PhotoSize3;
                                                                                                                        delayedMessage5.locationParent = tLRPC$TL_document4;
                                                                                                                    }
                                                                                                                }
                                                                                                                VideoEditedInfo videoEditedInfo11 = videoEditedInfo7;
                                                                                                                delayedMessage5.videoEditedInfo = videoEditedInfo11;
                                                                                                                delayedMessage8 = delayedMessage5;
                                                                                                                hashMap4 = hashMap7;
                                                                                                                obj9 = obj10;
                                                                                                                tLRPC$Message17 = tLRPC$Message16;
                                                                                                                tLRPC$InputMedia = tLRPC$TL_inputMediaDocument;
                                                                                                                z14 = videoEditedInfo11;
                                                                                                            } catch (Exception e37) {
                                                                                                                e = e37;
                                                                                                                exc = e;
                                                                                                                i2 = messageObject;
                                                                                                                messageObject = r14;
                                                                                                                tLRPC$Message2 = tLRPC$Message16;
                                                                                                                sendMessagesHelper2 = sendMessagesHelper8;
                                                                                                                FileLog.e(exc);
                                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                                                if (messageObject != null) {
                                                                                                                }
                                                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                                                return;
                                                                                                            }
                                                                                                        }
                                                                                                    } catch (Exception e38) {
                                                                                                        e = e38;
                                                                                                        tLRPC$Message16 = tLRPC$Message24;
                                                                                                    }
                                                                                                }
                                                                                                c7 = c5;
                                                                                                videoEditedInfo7 = videoEditedInfo6;
                                                                                                tL_stories$StoryItem4 = messageObject;
                                                                                                tLRPC$Message16 = tLRPC$Message24;
                                                                                                if (tLRPC$TL_document4.access_hash == 0) {
                                                                                                }
                                                                                                if (delayedMessage5 == null) {
                                                                                                }
                                                                                                delayedMessage5.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument;
                                                                                                delayedMessage5.performMediaUpload = z12;
                                                                                                if (!tLRPC$TL_document4.thumbs.isEmpty()) {
                                                                                                }
                                                                                                VideoEditedInfo videoEditedInfo112 = videoEditedInfo7;
                                                                                                delayedMessage5.videoEditedInfo = videoEditedInfo112;
                                                                                                delayedMessage8 = delayedMessage5;
                                                                                                hashMap4 = hashMap7;
                                                                                                obj9 = obj10;
                                                                                                tLRPC$Message17 = tLRPC$Message16;
                                                                                                tLRPC$InputMedia = tLRPC$TL_inputMediaDocument;
                                                                                                z14 = videoEditedInfo112;
                                                                                            }
                                                                                            if (tLRPC$TL_document4.access_hash == 0) {
                                                                                            }
                                                                                            if (delayedMessage5 == null) {
                                                                                            }
                                                                                            delayedMessage5.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument;
                                                                                            delayedMessage5.performMediaUpload = z12;
                                                                                            if (!tLRPC$TL_document4.thumbs.isEmpty()) {
                                                                                            }
                                                                                            VideoEditedInfo videoEditedInfo1122 = videoEditedInfo7;
                                                                                            delayedMessage5.videoEditedInfo = videoEditedInfo1122;
                                                                                            delayedMessage8 = delayedMessage5;
                                                                                            hashMap4 = hashMap7;
                                                                                            obj9 = obj10;
                                                                                            tLRPC$Message17 = tLRPC$Message16;
                                                                                            tLRPC$InputMedia = tLRPC$TL_inputMediaDocument;
                                                                                            z14 = videoEditedInfo1122;
                                                                                        } catch (Exception e39) {
                                                                                            e = e39;
                                                                                            messageObject = r14;
                                                                                            messageObject13 = tLRPC$Message16;
                                                                                            tL_stories$StoryItem4 = tL_stories$StoryItem4;
                                                                                            exc = e;
                                                                                            tLRPC$Message13 = messageObject13;
                                                                                            tLRPC$Message8 = tLRPC$Message13;
                                                                                            sendMessagesHelper9 = sendMessagesHelper8;
                                                                                            i2 = tL_stories$StoryItem4;
                                                                                            tLRPC$Message2 = tLRPC$Message8;
                                                                                            sendMessagesHelper2 = sendMessagesHelper9;
                                                                                            FileLog.e(exc);
                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                            if (messageObject != null) {
                                                                                            }
                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                            return;
                                                                                        }
                                                                                        j12 = j8;
                                                                                        videoEditedInfo6 = videoEditedInfo4;
                                                                                        tLRPC$TL_inputMediaUploadedDocument.nosound_video = true;
                                                                                        if (BuildVars.DEBUG_VERSION) {
                                                                                            FileLog.d("nosound_video = true");
                                                                                        }
                                                                                        if (i9 != 0) {
                                                                                        }
                                                                                        if (hashMap7 != null) {
                                                                                        }
                                                                                        c7 = c5;
                                                                                        videoEditedInfo7 = videoEditedInfo6;
                                                                                        tL_stories$StoryItem4 = messageObject;
                                                                                        tLRPC$Message16 = tLRPC$Message24;
                                                                                    } else {
                                                                                        tL_stories$StoryItem4 = messageObject;
                                                                                        tLRPC$InputPeer6 = tLRPC$InputPeer5;
                                                                                        messageObject = r14;
                                                                                        TLRPC$Message tLRPC$Message26 = tLRPC$Message24;
                                                                                        Object obj21 = obj3;
                                                                                        boolean z28 = z8;
                                                                                        TLRPC$TL_document tLRPC$TL_document8 = tLRPC$TL_document3;
                                                                                        j12 = j8;
                                                                                        int i45 = i9;
                                                                                        str15 = str;
                                                                                        if (c5 == 6) {
                                                                                            TLRPC$InputMedia tLRPC$TL_inputMediaContact = new TLRPC$TL_inputMediaContact();
                                                                                            TLRPC$User tLRPC$User7 = tLRPC$User;
                                                                                            tLRPC$TL_inputMediaContact.phone_number = tLRPC$User7.phone;
                                                                                            tLRPC$TL_inputMediaContact.first_name = tLRPC$User7.first_name;
                                                                                            tLRPC$TL_inputMediaContact.last_name = tLRPC$User7.last_name;
                                                                                            if (!tLRPC$User7.restriction_reason.isEmpty() && tLRPC$User7.restriction_reason.get(0).text.startsWith("BEGIN:VCARD")) {
                                                                                                tLRPC$TL_inputMediaContact.vcard = tLRPC$User7.restriction_reason.get(0).text;
                                                                                            } else {
                                                                                                tLRPC$TL_inputMediaContact.vcard = str34;
                                                                                            }
                                                                                            delayedMessage8 = delayedMessage5;
                                                                                            hashMap4 = hashMap7;
                                                                                            c7 = c5;
                                                                                            tLRPC$Message17 = tLRPC$Message26;
                                                                                            z12 = false;
                                                                                            obj9 = obj21;
                                                                                            tLRPC$InputMedia = tLRPC$TL_inputMediaContact;
                                                                                            z14 = z28;
                                                                                        } else {
                                                                                            try {
                                                                                                if (c5 != 7 && c5 != '\t') {
                                                                                                    if (c5 == '\b') {
                                                                                                        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument3 = new TLRPC$TL_inputMediaUploadedDocument();
                                                                                                        tLRPC$TL_inputMediaUploadedDocument3.mime_type = tLRPC$TL_document8.mime_type;
                                                                                                        tLRPC$TL_inputMediaUploadedDocument3.attributes = tLRPC$TL_document8.attributes;
                                                                                                        tLRPC$TL_inputMediaUploadedDocument3.spoiler = z28;
                                                                                                        if (i45 != 0) {
                                                                                                            tLRPC$TL_inputMediaUploadedDocument3.ttl_seconds = i45;
                                                                                                            tLRPC$Message26.ttl = i45;
                                                                                                            tLRPC$TL_inputMediaUploadedDocument3.flags |= 2;
                                                                                                            tLRPC$Message26 = tLRPC$Message26;
                                                                                                        }
                                                                                                        if (tLRPC$TL_document8.access_hash == 0) {
                                                                                                            tLRPC$TL_inputMediaStory6 = tLRPC$TL_inputMediaUploadedDocument3;
                                                                                                            str16 = str15;
                                                                                                            z12 = true;
                                                                                                        } else {
                                                                                                            ?? tLRPC$TL_inputMediaDocument4 = new TLRPC$TL_inputMediaDocument();
                                                                                                            TLRPC$TL_inputDocument tLRPC$TL_inputDocument2 = new TLRPC$TL_inputDocument();
                                                                                                            tLRPC$TL_inputMediaDocument4.id = tLRPC$TL_inputDocument2;
                                                                                                            str16 = str15;
                                                                                                            tLRPC$TL_inputDocument2.id = tLRPC$TL_document8.id;
                                                                                                            tLRPC$TL_inputDocument2.access_hash = tLRPC$TL_document8.access_hash;
                                                                                                            byte[] bArr6 = tLRPC$TL_document8.file_reference;
                                                                                                            tLRPC$TL_inputDocument2.file_reference = bArr6;
                                                                                                            if (bArr6 == null) {
                                                                                                                tLRPC$TL_inputDocument2.file_reference = new byte[0];
                                                                                                            }
                                                                                                            if (hashMap7 != null && hashMap7.containsKey("query")) {
                                                                                                                tLRPC$TL_inputMediaDocument4.query = hashMap7.get("query");
                                                                                                                tLRPC$TL_inputMediaDocument4.flags |= 2;
                                                                                                            }
                                                                                                            tLRPC$TL_inputMediaDocument4.spoiler = z28;
                                                                                                            tLRPC$TL_inputMediaStory6 = tLRPC$TL_inputMediaDocument4;
                                                                                                            z12 = false;
                                                                                                        }
                                                                                                        delayedMessage8 = new DelayedMessage(r5);
                                                                                                        delayedMessage8.type = 3;
                                                                                                        delayedMessage8.obj = messageObject;
                                                                                                        delayedMessage8.parentObject = obj21;
                                                                                                        delayedMessage8.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument3;
                                                                                                        delayedMessage8.performMediaUpload = z12;
                                                                                                        delayedMessage8.scheduled = tL_stories$StoryItem4 != null;
                                                                                                        hashMap4 = hashMap7;
                                                                                                        c7 = c5;
                                                                                                        tLRPC$Message19 = tLRPC$Message26;
                                                                                                        tLRPC$TL_inputMediaStory5 = tLRPC$TL_inputMediaStory6;
                                                                                                    } else {
                                                                                                        str16 = str15;
                                                                                                        if (c5 == '\n') {
                                                                                                            ?? tLRPC$TL_inputMediaPoll = new TLRPC$TL_inputMediaPoll();
                                                                                                            TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll5 = tLRPC$TL_messageMediaPoll2;
                                                                                                            tLRPC$TL_inputMediaPoll.poll = tLRPC$TL_messageMediaPoll5.poll;
                                                                                                            if (hashMap7 != null && hashMap7.containsKey("answers")) {
                                                                                                                byte[] hexToBytes = Utilities.hexToBytes(hashMap7.get("answers"));
                                                                                                                if (hexToBytes.length > 0) {
                                                                                                                    for (int i46 = 0; i46 < hexToBytes.length; i46++) {
                                                                                                                        tLRPC$TL_inputMediaPoll.correct_answers.add(new byte[]{hexToBytes[i46]});
                                                                                                                    }
                                                                                                                    tLRPC$TL_inputMediaPoll.flags |= 1;
                                                                                                                }
                                                                                                            }
                                                                                                            TLRPC$PollResults tLRPC$PollResults = tLRPC$TL_messageMediaPoll5.results;
                                                                                                            tLRPC$TL_inputMediaStory4 = tLRPC$TL_inputMediaPoll;
                                                                                                            if (tLRPC$PollResults != null) {
                                                                                                                tLRPC$TL_inputMediaStory4 = tLRPC$TL_inputMediaPoll;
                                                                                                                if (!TextUtils.isEmpty(tLRPC$PollResults.solution)) {
                                                                                                                    TLRPC$PollResults tLRPC$PollResults2 = tLRPC$TL_messageMediaPoll5.results;
                                                                                                                    tLRPC$TL_inputMediaPoll.solution = tLRPC$PollResults2.solution;
                                                                                                                    tLRPC$TL_inputMediaPoll.solution_entities = tLRPC$PollResults2.solution_entities;
                                                                                                                    tLRPC$TL_inputMediaPoll.flags |= 2;
                                                                                                                    tLRPC$TL_inputMediaStory4 = tLRPC$TL_inputMediaPoll;
                                                                                                                }
                                                                                                            }
                                                                                                        } else if (c5 == 11) {
                                                                                                            ?? tLRPC$TL_inputMediaDice = new TLRPC$TL_inputMediaDice();
                                                                                                            tLRPC$TL_inputMediaDice.emoticon = str8;
                                                                                                            tLRPC$TL_inputMediaStory4 = tLRPC$TL_inputMediaDice;
                                                                                                        } else if (c5 == '\f') {
                                                                                                            TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory7 = new TLRPC$TL_inputMediaStory();
                                                                                                            TL_stories$StoryItem tL_stories$StoryItem12 = tL_stories$StoryItem8;
                                                                                                            tLRPC$TL_inputMediaStory7.id = tL_stories$StoryItem12.id;
                                                                                                            tLRPC$TL_inputMediaStory7.peer = MessagesController.getInstance(sendMessagesHelper8.currentAccount).getInputPeer(tL_stories$StoryItem12.dialogId);
                                                                                                            tLRPC$TL_inputMediaStory4 = tLRPC$TL_inputMediaStory7;
                                                                                                        } else {
                                                                                                            delayedMessage8 = delayedMessage5;
                                                                                                            hashMap4 = hashMap7;
                                                                                                            c7 = c5;
                                                                                                            tLRPC$Message19 = tLRPC$Message26;
                                                                                                            tLRPC$TL_inputMediaStory3 = null;
                                                                                                            z12 = false;
                                                                                                            tLRPC$TL_inputMediaStory5 = tLRPC$TL_inputMediaStory3;
                                                                                                        }
                                                                                                        delayedMessage8 = delayedMessage5;
                                                                                                        hashMap4 = hashMap7;
                                                                                                        c7 = c5;
                                                                                                        tLRPC$Message19 = tLRPC$Message26;
                                                                                                        tLRPC$TL_inputMediaStory3 = tLRPC$TL_inputMediaStory4;
                                                                                                        z12 = false;
                                                                                                        tLRPC$TL_inputMediaStory5 = tLRPC$TL_inputMediaStory3;
                                                                                                    }
                                                                                                    obj9 = obj21;
                                                                                                    str13 = str16;
                                                                                                    tLRPC$TL_inputMediaStory2 = tLRPC$TL_inputMediaStory5;
                                                                                                    tLRPC$Message20 = tLRPC$Message19;
                                                                                                    tLRPC$InputPeer7 = z28;
                                                                                                }
                                                                                                if (str15 == null && str5 == null && tLRPC$TL_document8.access_hash != 0) {
                                                                                                    tLRPC$Message18 = tLRPC$Message26;
                                                                                                    tLRPC$TL_inputMediaUploadedDocument2 = null;
                                                                                                } else {
                                                                                                    tLRPC$TL_inputMediaUploadedDocument2 = new TLRPC$TL_inputMediaUploadedDocument();
                                                                                                    tLRPC$TL_inputMediaUploadedDocument2.spoiler = z28;
                                                                                                    if (i45 != 0) {
                                                                                                        tLRPC$TL_inputMediaUploadedDocument2.ttl_seconds = i45;
                                                                                                        tLRPC$Message18 = tLRPC$Message26;
                                                                                                        tLRPC$Message18.ttl = i45;
                                                                                                        tLRPC$TL_inputMediaUploadedDocument2.flags |= 2;
                                                                                                    } else {
                                                                                                        tLRPC$Message18 = tLRPC$Message26;
                                                                                                    }
                                                                                                    if (z7 || (!TextUtils.isEmpty(str5) && str5.toLowerCase().endsWith("mp4") && (hashMap7 == null || hashMap7.containsKey("forceDocument")))) {
                                                                                                        tLRPC$TL_inputMediaUploadedDocument2.nosound_video = true;
                                                                                                    }
                                                                                                    tLRPC$TL_inputMediaUploadedDocument2.force_file = hashMap7 != null && hashMap7.containsKey("forceDocument");
                                                                                                    tLRPC$TL_inputMediaUploadedDocument2.mime_type = tLRPC$TL_document8.mime_type;
                                                                                                    tLRPC$TL_inputMediaUploadedDocument2.attributes = tLRPC$TL_document8.attributes;
                                                                                                }
                                                                                                if (tLRPC$TL_document8.access_hash == 0) {
                                                                                                    z12 = tLRPC$TL_inputMediaUploadedDocument2 instanceof TLRPC$TL_inputMediaUploadedDocument;
                                                                                                    tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaUploadedDocument2;
                                                                                                    obj11 = obj21;
                                                                                                    c7 = c5;
                                                                                                } else {
                                                                                                    TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument5 = new TLRPC$TL_inputMediaDocument();
                                                                                                    TLRPC$TL_inputDocument tLRPC$TL_inputDocument3 = new TLRPC$TL_inputDocument();
                                                                                                    tLRPC$TL_inputMediaDocument5.id = tLRPC$TL_inputDocument3;
                                                                                                    obj11 = obj21;
                                                                                                    c7 = c5;
                                                                                                    tLRPC$TL_inputDocument3.id = tLRPC$TL_document8.id;
                                                                                                    tLRPC$TL_inputDocument3.access_hash = tLRPC$TL_document8.access_hash;
                                                                                                    byte[] bArr7 = tLRPC$TL_document8.file_reference;
                                                                                                    tLRPC$TL_inputDocument3.file_reference = bArr7;
                                                                                                    if (bArr7 == null) {
                                                                                                        tLRPC$TL_inputDocument3.file_reference = new byte[0];
                                                                                                    }
                                                                                                    if (hashMap7 != null && hashMap7.containsKey("query")) {
                                                                                                        tLRPC$TL_inputMediaDocument5.query = hashMap7.get("query");
                                                                                                        tLRPC$TL_inputMediaDocument5.flags |= 2;
                                                                                                    }
                                                                                                    tLRPC$TL_inputMediaDocument5.spoiler = z28;
                                                                                                    z12 = false;
                                                                                                    tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaDocument5;
                                                                                                }
                                                                                                if (tLRPC$TL_inputMediaUploadedDocument2 != null) {
                                                                                                    if (delayedMessage5 == null) {
                                                                                                        delayedMessage5 = new DelayedMessage(r5);
                                                                                                        delayedMessage5.type = 2;
                                                                                                        delayedMessage5.obj = messageObject;
                                                                                                        str13 = str15;
                                                                                                        delayedMessage5.originalPath = str13;
                                                                                                        obj9 = obj11;
                                                                                                        delayedMessage5.parentObject = obj9;
                                                                                                        delayedMessage5.scheduled = tL_stories$StoryItem4 != null;
                                                                                                    } else {
                                                                                                        obj9 = obj11;
                                                                                                        str13 = str15;
                                                                                                    }
                                                                                                    delayedMessage5.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument2;
                                                                                                    delayedMessage5.performMediaUpload = z12;
                                                                                                    if (!tLRPC$TL_document8.thumbs.isEmpty()) {
                                                                                                        TLRPC$PhotoSize tLRPC$PhotoSize4 = tLRPC$TL_document8.thumbs.get(0);
                                                                                                        if (!(tLRPC$PhotoSize4 instanceof TLRPC$TL_photoStrippedSize)) {
                                                                                                            delayedMessage5.photoSize = tLRPC$PhotoSize4;
                                                                                                            delayedMessage5.locationParent = tLRPC$TL_document8;
                                                                                                        }
                                                                                                    }
                                                                                                } else {
                                                                                                    obj9 = obj11;
                                                                                                    str13 = str15;
                                                                                                }
                                                                                                delayedMessage8 = delayedMessage5;
                                                                                                hashMap4 = hashMap7;
                                                                                                tLRPC$TL_inputMediaStory2 = tLRPC$TL_inputMediaDocument2;
                                                                                                tLRPC$Message20 = tLRPC$Message18;
                                                                                                tLRPC$InputPeer7 = z28;
                                                                                            } catch (Exception e40) {
                                                                                                e = e40;
                                                                                                tL_stories$StoryItem11 = tLRPC$Message26;
                                                                                                exc = e;
                                                                                                tLRPC$Message8 = tL_stories$StoryItem11;
                                                                                                sendMessagesHelper9 = sendMessagesHelper8;
                                                                                                i2 = tL_stories$StoryItem4;
                                                                                                tLRPC$Message2 = tLRPC$Message8;
                                                                                                sendMessagesHelper2 = sendMessagesHelper9;
                                                                                                FileLog.e(exc);
                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                                if (messageObject != null) {
                                                                                                }
                                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                                return;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    str13 = str15;
                                                                                    tLRPC$TL_inputMediaStory2 = tLRPC$InputMedia;
                                                                                    tLRPC$Message20 = tLRPC$Message17;
                                                                                    tLRPC$InputPeer7 = z14;
                                                                                }
                                                                            }
                                                                            try {
                                                                                if (j12 != 0) {
                                                                                    TLObject tLObject2 = delayedMessage8.sendRequest;
                                                                                    if (tLObject2 != null) {
                                                                                        tLRPC$InputPeer7 = tL_stories$StoryItem4;
                                                                                        tLRPC$TL_messages_sendMedia = (TLRPC$TL_messages_sendMultiMedia) tLObject2;
                                                                                    } else {
                                                                                        TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = new TLRPC$TL_messages_sendMultiMedia();
                                                                                        tLRPC$TL_messages_sendMultiMedia.peer = tLRPC$InputPeer6;
                                                                                        tLRPC$TL_messages_sendMultiMedia.silent = tLRPC$Message20.silent;
                                                                                        if (tLRPC$Message20.replyStory != null) {
                                                                                            tLRPC$TL_messages_sendMultiMedia.flags |= 1;
                                                                                            tLRPC$TL_messages_sendMultiMedia.reply_to = sendMessagesHelper8.createReplyInput(tL_stories$StoryItem5);
                                                                                        } else {
                                                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader10 = tLRPC$Message20.reply_to;
                                                                                            if (tLRPC$MessageReplyHeader10 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                                tLRPC$TL_messages_sendMultiMedia.flags |= 1;
                                                                                                tLRPC$TL_messages_sendMultiMedia.reply_to = sendMessagesHelper8.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader10);
                                                                                            }
                                                                                        }
                                                                                        if (tL_stories$StoryItem4 != null) {
                                                                                            videoEditedInfo8 = tL_stories$StoryItem4;
                                                                                            tLRPC$TL_messages_sendMultiMedia.schedule_date = videoEditedInfo8 == 1 ? 1 : 0;
                                                                                            tLRPC$TL_messages_sendMultiMedia.flags |= 1024;
                                                                                        } else {
                                                                                            videoEditedInfo8 = tL_stories$StoryItem4;
                                                                                        }
                                                                                        TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut3 = tLRPC$Message20.quick_reply_shortcut;
                                                                                        if (tLRPC$InputQuickReplyShortcut3 != null) {
                                                                                            tLRPC$TL_messages_sendMultiMedia.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut3;
                                                                                            tLRPC$TL_messages_sendMultiMedia.flags |= 131072;
                                                                                        }
                                                                                        delayedMessage8.sendRequest = tLRPC$TL_messages_sendMultiMedia;
                                                                                        tLRPC$TL_messages_sendMedia = tLRPC$TL_messages_sendMultiMedia;
                                                                                        tLRPC$InputPeer7 = videoEditedInfo8;
                                                                                    }
                                                                                    delayedMessage8.messageObjects.add(messageObject);
                                                                                    delayedMessage8.parentObjects.add(obj9);
                                                                                    delayedMessage8.locations.add(delayedMessage8.photoSize);
                                                                                    delayedMessage8.videoEditedInfos.add(delayedMessage8.videoEditedInfo);
                                                                                    delayedMessage8.httpLocations.add(delayedMessage8.httpLocation);
                                                                                    delayedMessage8.inputMedias.add(delayedMessage8.inputUploadMedia);
                                                                                    delayedMessage8.messages.add(tLRPC$Message20);
                                                                                    delayedMessage8.originalPaths.add(str13);
                                                                                    TLRPC$TL_inputSingleMedia tLRPC$TL_inputSingleMedia = new TLRPC$TL_inputSingleMedia();
                                                                                    tLRPC$TL_inputSingleMedia.random_id = tLRPC$Message20.random_id;
                                                                                    tLRPC$TL_inputSingleMedia.media = tLRPC$TL_inputMediaStory2;
                                                                                    tLRPC$TL_inputSingleMedia.message = str7;
                                                                                    if (arrayList4 != null && !arrayList4.isEmpty()) {
                                                                                        tLRPC$TL_inputSingleMedia.entities = arrayList4;
                                                                                        tLRPC$TL_inputSingleMedia.flags |= 1;
                                                                                    }
                                                                                    tLRPC$TL_messages_sendMedia.multi_media.add(tLRPC$TL_inputSingleMedia);
                                                                                } else {
                                                                                    ArrayList<TLRPC$MessageEntity> arrayList14 = arrayList4;
                                                                                    String str37 = str7;
                                                                                    tLRPC$InputPeer7 = tL_stories$StoryItem4;
                                                                                    TL_stories$StoryItem tL_stories$StoryItem13 = tL_stories$StoryItem5;
                                                                                    TLRPC$InputPeer tLRPC$InputPeer10 = tLRPC$InputPeer6;
                                                                                    try {
                                                                                        tLRPC$TL_messages_sendMedia = new TLRPC$TL_messages_sendMedia();
                                                                                        tLRPC$TL_messages_sendMedia.peer = tLRPC$InputPeer10;
                                                                                        tLRPC$TL_messages_sendMedia.silent = tLRPC$Message20.silent;
                                                                                        if (messageObject10 != null) {
                                                                                            messageObject10.getId();
                                                                                        }
                                                                                        if (tL_stories$StoryItem13 != null) {
                                                                                            tLRPC$TL_messages_sendMedia.reply_to = sendMessagesHelper8.createReplyInput(tL_stories$StoryItem13);
                                                                                            tLRPC$TL_messages_sendMedia.flags |= 1;
                                                                                        } else {
                                                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader11 = tLRPC$Message20.reply_to;
                                                                                            if (tLRPC$MessageReplyHeader11 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                                tLRPC$TL_messages_sendMedia.flags |= 1;
                                                                                                tLRPC$TL_messages_sendMedia.reply_to = sendMessagesHelper8.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader11);
                                                                                            }
                                                                                        }
                                                                                        tLRPC$TL_messages_sendMedia.random_id = tLRPC$Message20.random_id;
                                                                                        if (tLRPC$Message20.from_id != null) {
                                                                                            tLRPC$TL_messages_sendMedia.send_as = getMessagesController().getInputPeer(tLRPC$Message20.from_id);
                                                                                        }
                                                                                        tLRPC$TL_messages_sendMedia.media = tLRPC$TL_inputMediaStory2;
                                                                                        tLRPC$TL_messages_sendMedia.message = str37;
                                                                                        if (arrayList14 != null && !arrayList14.isEmpty()) {
                                                                                            tLRPC$TL_messages_sendMedia.entities = arrayList14;
                                                                                            tLRPC$TL_messages_sendMedia.flags |= 8;
                                                                                        }
                                                                                        if (tLRPC$InputPeer7 != null) {
                                                                                            tLRPC$TL_messages_sendMedia.schedule_date = tLRPC$InputPeer7 == 1 ? 1 : 0;
                                                                                            tLRPC$TL_messages_sendMedia.flags |= 1024;
                                                                                        }
                                                                                        if (z20 && SharedConfig.updateStickersOrderOnSend) {
                                                                                            tLRPC$TL_messages_sendMedia.update_stickersets_order = true;
                                                                                        }
                                                                                        TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut4 = tLRPC$Message20.quick_reply_shortcut;
                                                                                        if (tLRPC$InputQuickReplyShortcut4 != null) {
                                                                                            tLRPC$TL_messages_sendMedia.flags |= 131072;
                                                                                            tLRPC$TL_messages_sendMedia.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut4;
                                                                                        }
                                                                                        if (delayedMessage8 != null) {
                                                                                            delayedMessage8.sendRequest = tLRPC$TL_messages_sendMedia;
                                                                                        }
                                                                                    } catch (Exception e41) {
                                                                                        e = e41;
                                                                                        tLRPC$Message22 = tLRPC$Message20;
                                                                                        exc = e;
                                                                                        tLRPC$Message21 = tLRPC$Message22;
                                                                                        messageObject14 = tLRPC$InputPeer7;
                                                                                        i2 = messageObject14;
                                                                                        tLRPC$Message2 = tLRPC$Message21;
                                                                                        sendMessagesHelper2 = sendMessagesHelper8;
                                                                                        FileLog.e(exc);
                                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                        if (messageObject != null) {
                                                                                        }
                                                                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                        sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                        return;
                                                                                    }
                                                                                }
                                                                                TLObject tLObject3 = tLRPC$TL_messages_sendMedia;
                                                                                if (j12 != 0) {
                                                                                    sendMessagesHelper8.performSendDelayedMessage(delayedMessage8);
                                                                                    return;
                                                                                }
                                                                                char c10 = c7;
                                                                                if (c10 == 1) {
                                                                                    TLRPC$Message tLRPC$Message27 = tLRPC$Message20;
                                                                                    try {
                                                                                        performSendMessageRequest(tLObject3, messageObject, null, delayedMessage8, obj9, hashMap4, tLRPC$InputPeer7 != null);
                                                                                        return;
                                                                                    } catch (Exception e42) {
                                                                                        exc = e42;
                                                                                        tLRPC$Message21 = tLRPC$Message27;
                                                                                        messageObject14 = tLRPC$InputPeer7;
                                                                                        i2 = messageObject14;
                                                                                        tLRPC$Message2 = tLRPC$Message21;
                                                                                        sendMessagesHelper2 = sendMessagesHelper8;
                                                                                        FileLog.e(exc);
                                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                        if (messageObject != null) {
                                                                                        }
                                                                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                        sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                        return;
                                                                                    }
                                                                                }
                                                                                HashMap<String, String> hashMap8 = hashMap4;
                                                                                tLRPC$Message22 = tLRPC$Message20;
                                                                                try {
                                                                                    if (c10 == 2) {
                                                                                        if (z12) {
                                                                                            sendMessagesHelper8.performSendDelayedMessage(delayedMessage8);
                                                                                        } else {
                                                                                            try {
                                                                                                performSendMessageRequest(tLObject3, messageObject, str13, null, true, delayedMessage8, obj9, hashMap8, tLRPC$InputPeer7 != null);
                                                                                                return;
                                                                                            } catch (Exception e43) {
                                                                                                exc = e43;
                                                                                                i2 = tLRPC$InputPeer7 == 1 ? 1 : 0;
                                                                                                tLRPC$Message2 = tLRPC$Message22;
                                                                                                sendMessagesHelper2 = sendMessagesHelper8;
                                                                                            }
                                                                                        }
                                                                                    } else if (c10 == 3) {
                                                                                        if (z12) {
                                                                                            sendMessagesHelper8.performSendDelayedMessage(delayedMessage8);
                                                                                        } else {
                                                                                            performSendMessageRequest(tLObject3, messageObject, str13, delayedMessage8, obj9, hashMap8, tLRPC$InputPeer7 != null);
                                                                                        }
                                                                                    } else if (c10 == 6) {
                                                                                        performSendMessageRequest(tLObject3, messageObject, str13, delayedMessage8, obj9, hashMap8, tLRPC$InputPeer7 != null);
                                                                                    } else if (c10 == 7) {
                                                                                        if (z12 && delayedMessage8 != null) {
                                                                                            sendMessagesHelper8.performSendDelayedMessage(delayedMessage8);
                                                                                        } else {
                                                                                            performSendMessageRequest(tLObject3, messageObject, str13, delayedMessage8, obj9, hashMap8, tLRPC$InputPeer7 != null);
                                                                                        }
                                                                                    } else if (c10 == '\b') {
                                                                                        if (z12) {
                                                                                            sendMessagesHelper8.performSendDelayedMessage(delayedMessage8);
                                                                                        } else {
                                                                                            performSendMessageRequest(tLObject3, messageObject, str13, delayedMessage8, obj9, hashMap8, tLRPC$InputPeer7 != null);
                                                                                        }
                                                                                    } else if (c10 != '\n' && c10 != 11 && c10 != '\f') {
                                                                                        return;
                                                                                    } else {
                                                                                        performSendMessageRequest(tLObject3, messageObject, str13, delayedMessage8, obj9, hashMap8, tLRPC$InputPeer7 != null);
                                                                                    }
                                                                                    return;
                                                                                } catch (Exception e44) {
                                                                                    e = e44;
                                                                                    exc = e;
                                                                                    tLRPC$Message21 = tLRPC$Message22;
                                                                                    messageObject14 = tLRPC$InputPeer7;
                                                                                    i2 = messageObject14;
                                                                                    tLRPC$Message2 = tLRPC$Message21;
                                                                                    sendMessagesHelper2 = sendMessagesHelper8;
                                                                                    FileLog.e(exc);
                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                    if (messageObject != null) {
                                                                                    }
                                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                    sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                    return;
                                                                                }
                                                                            } catch (Exception e45) {
                                                                                exc = e45;
                                                                                tLRPC$Message21 = tLRPC$Message20;
                                                                                messageObject14 = tLRPC$InputPeer7;
                                                                            }
                                                                        } catch (Exception e46) {
                                                                            exc = e46;
                                                                            i2 = messageObject;
                                                                            messageObject = r14;
                                                                            tLRPC$Message2 = tLRPC$Message24;
                                                                            sendMessagesHelper2 = sendMessagesHelper8;
                                                                        }
                                                                    } catch (Exception e47) {
                                                                        e = e47;
                                                                    }
                                                                }
                                                            } catch (Exception e48) {
                                                                e = e48;
                                                                messageObject13 = messageObject7;
                                                                tL_stories$StoryItem4 = tL_stories$StoryItem4;
                                                            }
                                                            i2 = tL_stories$StoryItem4;
                                                            tLRPC$Message2 = tLRPC$Message8;
                                                            sendMessagesHelper2 = sendMessagesHelper9;
                                                            FileLog.e(exc);
                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                            return;
                                                        } else {
                                                            try {
                                                                if (c5 == 4) {
                                                                    try {
                                                                        TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages = new TLRPC$TL_messages_forwardMessages();
                                                                        tLRPC$TL_messages_forwardMessages.to_peer = tLRPC$InputPeer5;
                                                                        MessageObject messageObject28 = messageObject4;
                                                                        tLRPC$TL_messages_forwardMessages.with_my_score = messageObject28.messageOwner.with_my_score;
                                                                        if (messageObject10 != null) {
                                                                            tLRPC$TL_messages_forwardMessages.top_msg_id = messageObject10.getId();
                                                                            tLRPC$TL_messages_forwardMessages.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                                        }
                                                                        if (hashMap2 != null) {
                                                                            hashMap3 = hashMap2;
                                                                            if (hashMap3.containsKey("fwd_id")) {
                                                                                int intValue = Utilities.parseInt((CharSequence) hashMap3.get("fwd_id")).intValue();
                                                                                tLRPC$TL_messages_forwardMessages.drop_author = true;
                                                                                long longValue = Utilities.parseLong(hashMap3.get("fwd_peer")).longValue();
                                                                                if (longValue < 0) {
                                                                                    TLRPC$Chat chat2 = getMessagesController().getChat(Long.valueOf(-longValue));
                                                                                    if (ChatObject.isChannel(chat2)) {
                                                                                        TLRPC$TL_inputPeerChannel tLRPC$TL_inputPeerChannel = new TLRPC$TL_inputPeerChannel();
                                                                                        tLRPC$TL_messages_forwardMessages.from_peer = tLRPC$TL_inputPeerChannel;
                                                                                        tLRPC$TL_inputPeerChannel.channel_id = chat2.id;
                                                                                        tLRPC$TL_inputPeerChannel.access_hash = chat2.access_hash;
                                                                                    } else {
                                                                                        tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                                    }
                                                                                } else {
                                                                                    tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                                }
                                                                                tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(intValue));
                                                                                tLRPC$TL_messages_forwardMessages.silent = tLRPC$Message4.silent;
                                                                                if (i8 != 0) {
                                                                                    tLRPC$TL_messages_forwardMessages.schedule_date = i8;
                                                                                    tLRPC$TL_messages_forwardMessages.flags |= 1024;
                                                                                }
                                                                                tLRPC$TL_messages_forwardMessages.random_id.add(Long.valueOf(tLRPC$Message4.random_id));
                                                                                if (messageObject28.getId() < 0) {
                                                                                    tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(messageObject28.getId()));
                                                                                } else {
                                                                                    TLRPC$Message tLRPC$Message28 = messageObject28.messageOwner;
                                                                                    int i47 = tLRPC$Message28.fwd_msg_id;
                                                                                    if (i47 != 0) {
                                                                                        tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(i47));
                                                                                    } else {
                                                                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2 = tLRPC$Message28.fwd_from;
                                                                                        if (tLRPC$MessageFwdHeader2 != null) {
                                                                                            tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(tLRPC$MessageFwdHeader2.channel_post));
                                                                                        }
                                                                                    }
                                                                                }
                                                                                performSendMessageRequest(tLRPC$TL_messages_forwardMessages, messageObject7, null, null, obj3, hashMap3, i8 == 0);
                                                                                return;
                                                                            }
                                                                        } else {
                                                                            hashMap3 = hashMap2;
                                                                        }
                                                                        tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                        tLRPC$TL_messages_forwardMessages.silent = tLRPC$Message4.silent;
                                                                        if (i8 != 0) {
                                                                        }
                                                                        tLRPC$TL_messages_forwardMessages.random_id.add(Long.valueOf(tLRPC$Message4.random_id));
                                                                        if (messageObject28.getId() < 0) {
                                                                        }
                                                                        performSendMessageRequest(tLRPC$TL_messages_forwardMessages, messageObject7, null, null, obj3, hashMap3, i8 == 0);
                                                                        return;
                                                                    } catch (Exception e49) {
                                                                        sendMessagesHelper10 = this;
                                                                        tLRPC$Message11 = tLRPC$Message4;
                                                                        exc = e49;
                                                                        i21 = i8;
                                                                        tLRPC$Message7 = tLRPC$Message11;
                                                                        i16 = i21;
                                                                        sendMessagesHelper6 = sendMessagesHelper10;
                                                                        messageObject = messageObject7;
                                                                        tLRPC$Message2 = tLRPC$Message7;
                                                                        i2 = i16;
                                                                        sendMessagesHelper2 = sendMessagesHelper6;
                                                                        FileLog.e(exc);
                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                        if (messageObject != null) {
                                                                        }
                                                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                        sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                        return;
                                                                    }
                                                                }
                                                                sendMessagesHelper4 = this;
                                                                int i48 = i8;
                                                                HashMap<String, String> hashMap9 = hashMap2;
                                                                MessageObject messageObject29 = messageObject4;
                                                                TLRPC$Message tLRPC$Message29 = tLRPC$Message4;
                                                                if (c5 == '\t') {
                                                                    try {
                                                                        tLRPC$TL_messages_sendInlineBotResult = new TLRPC$TL_messages_sendInlineBotResult();
                                                                        tLRPC$TL_messages_sendInlineBotResult.peer = tLRPC$InputPeer5;
                                                                        tLRPC$TL_messages_sendInlineBotResult.random_id = tLRPC$Message29.random_id;
                                                                        TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut5 = tLRPC$Message29.quick_reply_shortcut;
                                                                        if (tLRPC$InputQuickReplyShortcut5 != null) {
                                                                            tLRPC$TL_messages_sendInlineBotResult.flags |= 131072;
                                                                            tLRPC$TL_messages_sendInlineBotResult.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut5;
                                                                        }
                                                                        if (tLRPC$Message29.from_id != null) {
                                                                            tLRPC$TL_messages_sendInlineBotResult.send_as = getMessagesController().getInputPeer(tLRPC$Message29.from_id);
                                                                        }
                                                                        tLRPC$TL_messages_sendInlineBotResult.hide_via = !hashMap9.containsKey("bot");
                                                                        if (tL_stories$StoryItem4 != null) {
                                                                            tLRPC$TL_messages_sendInlineBotResult.reply_to = sendMessagesHelper4.createReplyInput(tL_stories$StoryItem4);
                                                                            tLRPC$TL_messages_sendInlineBotResult.flags |= 1;
                                                                        } else {
                                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader12 = tLRPC$Message29.reply_to;
                                                                            if (tLRPC$MessageReplyHeader12 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                tLRPC$TL_messages_sendInlineBotResult.flags |= 1;
                                                                                tLRPC$TL_messages_sendInlineBotResult.reply_to = sendMessagesHelper4.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader12);
                                                                            }
                                                                        }
                                                                        tLRPC$TL_messages_sendInlineBotResult.silent = tLRPC$Message29.silent;
                                                                        if (i48 != 0) {
                                                                            tLRPC$TL_messages_sendInlineBotResult.schedule_date = i48;
                                                                            tLRPC$TL_messages_sendInlineBotResult.flags |= 1024;
                                                                        }
                                                                        tLRPC$TL_messages_sendInlineBotResult.query_id = Utilities.parseLong(hashMap9.get(obj4)).longValue();
                                                                        tLRPC$TL_messages_sendInlineBotResult.id = hashMap9.get("id");
                                                                        if (messageObject29 == null) {
                                                                            try {
                                                                                tLRPC$TL_messages_sendInlineBotResult.clear_draft = true;
                                                                                tLRPC$Message12 = tLRPC$Message29;
                                                                                messageObject11 = messageObject7;
                                                                            } catch (Exception e50) {
                                                                                e = e50;
                                                                                tLRPC$Message12 = tLRPC$Message29;
                                                                                messageObject11 = messageObject7;
                                                                            }
                                                                            try {
                                                                                getMediaDataController().cleanDraft(r5, messageObject10 != null ? messageObject10.getId() : 0L, false);
                                                                            } catch (Exception e51) {
                                                                                e = e51;
                                                                                exc = e;
                                                                                tLRPC$Message9 = tLRPC$Message12;
                                                                                i18 = i48;
                                                                                messageObject = messageObject11;
                                                                                tLRPC$Message2 = tLRPC$Message9;
                                                                                i2 = i18;
                                                                                sendMessagesHelper2 = sendMessagesHelper4;
                                                                                FileLog.e(exc);
                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                                if (messageObject != null) {
                                                                                }
                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                                return;
                                                                            }
                                                                        } else {
                                                                            tLRPC$Message12 = tLRPC$Message29;
                                                                            messageObject11 = messageObject7;
                                                                        }
                                                                        messageObject8 = messageObject11;
                                                                    } catch (Exception e52) {
                                                                        e = e52;
                                                                        tLRPC$Message12 = tLRPC$Message29;
                                                                        messageObject8 = messageObject7;
                                                                    }
                                                                    try {
                                                                        performSendMessageRequest(tLRPC$TL_messages_sendInlineBotResult, messageObject11, null, null, obj3, hashMap9, i48 != 0);
                                                                        return;
                                                                    } catch (Exception e53) {
                                                                        e = e53;
                                                                        exc = e;
                                                                        tLRPC$Message6 = tLRPC$Message12;
                                                                        i14 = i48;
                                                                        messageObject = messageObject8;
                                                                        tLRPC$Message2 = tLRPC$Message6;
                                                                        i2 = i14;
                                                                        sendMessagesHelper2 = sendMessagesHelper4;
                                                                        FileLog.e(exc);
                                                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                                                        if (messageObject != null) {
                                                                        }
                                                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                                                        sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                                                        return;
                                                                    }
                                                                }
                                                                return;
                                                            } catch (Exception e54) {
                                                                exc = e54;
                                                                i21 = messageObject5;
                                                                sendMessagesHelper10 = sendMessagesHelper8;
                                                                tLRPC$Message11 = hashMap2;
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    j8 = 0;
                                                }
                                                z10 = false;
                                                messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
                                                messageObject8.sendAnimationData = sendAnimationData;
                                                messageObject8.wasJustSent = true;
                                                messageObject8.scheduled = i8 != 0;
                                                if (!messageObject8.isForwarded()) {
                                                }
                                                videoEditedInfo = messageObject8.videoEditedInfo;
                                                if (videoEditedInfo == null) {
                                                }
                                                if (videoEditedInfo9 != null) {
                                                }
                                                videoEditedInfo3 = videoEditedInfo2;
                                                if (j8 == 0) {
                                                }
                                                if (BuildVars.LOGS_ENABLED) {
                                                }
                                                messageObject10 = messageObject5;
                                                tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                sendMessagesHelper8 = sendMessagesHelper7;
                                                if (c4 != 0) {
                                                }
                                                sendMessagesHelper4 = this;
                                                tLRPC$Message5 = tLRPC$Message4;
                                                HashMap<String, String> hashMap62 = hashMap2;
                                                ArrayList<TLRPC$MessageEntity> arrayList102 = arrayList4;
                                                TL_stories$StoryItem tL_stories$StoryItem102 = tL_stories$StoryItem4;
                                                Object obj142 = obj5;
                                                String str302 = str8;
                                                int i362 = i8;
                                                TLRPC$InputPeer tLRPC$InputPeer92 = tLRPC$InputPeer5;
                                                long j172 = r5;
                                                MessageObject messageObject202 = messageObject7;
                                                Object obj152 = obj3;
                                                if (tLRPC$EncryptedChat != null) {
                                                }
                                            }
                                            TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
                                            tLRPC$Message4.reply_to = tLRPC$TL_messageReplyHeader;
                                            if (tLRPC$EncryptedChat != null) {
                                                j6 = j5;
                                                c2 = c;
                                                long j22 = messageObject6.messageOwner.random_id;
                                                if (j22 != 0) {
                                                    tLRPC$TL_messageReplyHeader.reply_to_random_id = j22;
                                                    tLRPC$Message4.flags |= 8;
                                                    tLRPC$TL_messageReplyHeader.flags |= 16;
                                                    tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject6.getId();
                                                    if (messageObject5 == null && messageObject5 != messageObject6 && messageObject5.getId() != 1) {
                                                        tLRPC$Message4.reply_to.reply_to_top_id = messageObject5.getId();
                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader13 = tLRPC$Message4.reply_to;
                                                        int i49 = tLRPC$MessageReplyHeader13.flags | 2;
                                                        tLRPC$MessageReplyHeader13.flags = i49;
                                                        if (messageObject5.isTopicMainMessage) {
                                                            tLRPC$MessageReplyHeader13.forum_topic = true;
                                                            tLRPC$MessageReplyHeader13.flags = i49 | 8;
                                                        }
                                                    } else if (messageObject6.isTopicMainMessage) {
                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader14 = tLRPC$Message4.reply_to;
                                                        tLRPC$MessageReplyHeader14.forum_topic = true;
                                                        tLRPC$MessageReplyHeader14.flags |= 8;
                                                    }
                                                    if (replyQuote3 != null) {
                                                        tLRPC$Message4.reply_to.quote_text = replyQuote3.getText();
                                                        if (!TextUtils.isEmpty(tLRPC$Message4.reply_to.quote_text)) {
                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader15 = tLRPC$Message4.reply_to;
                                                            tLRPC$MessageReplyHeader15.quote = true;
                                                            int i50 = tLRPC$MessageReplyHeader15.flags | 64;
                                                            tLRPC$MessageReplyHeader15.flags = i50;
                                                            tLRPC$MessageReplyHeader15.flags = i50 | 1024;
                                                            replyQuote = replyQuote3;
                                                            tLRPC$MessageReplyHeader15.quote_offset = replyQuote.start;
                                                            tLRPC$MessageReplyHeader15.quote_entities = replyQuote.getEntities();
                                                            ArrayList<TLRPC$MessageEntity> arrayList15 = tLRPC$Message4.reply_to.quote_entities;
                                                            if (arrayList15 != null && !arrayList15.isEmpty()) {
                                                                tLRPC$Message4.reply_to.quote_entities = new ArrayList<>(tLRPC$Message4.reply_to.quote_entities);
                                                                tLRPC$Message4.reply_to.flags |= 128;
                                                            }
                                                            if (j4 == 0) {
                                                            }
                                                            if (tLRPC$ReplyMarkup != null) {
                                                                tLRPC$Message4.flags |= 64;
                                                                tLRPC$Message4.reply_markup = tLRPC$ReplyMarkup;
                                                                str17 = hashMap5.get("bot");
                                                                if (str17 != null) {
                                                                }
                                                            }
                                                            if (DialogObject.isEncryptedDialog(j13)) {
                                                            }
                                                            if (messageObject6 != null) {
                                                            }
                                                            tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                                            j7 = j13;
                                                            c4 = c3;
                                                            messageObject7 = null;
                                                            if (!MessageObject.isVoiceMessage(tLRPC$Message4)) {
                                                            }
                                                            tLRPC$Message4.media_unread = true;
                                                            if (tLRPC$Message4.from_id == null) {
                                                            }
                                                            tLRPC$Message4.send_state = 1;
                                                            if (hashMap5 == null) {
                                                            }
                                                            z10 = false;
                                                            messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
                                                            messageObject8.sendAnimationData = sendAnimationData;
                                                            messageObject8.wasJustSent = true;
                                                            messageObject8.scheduled = i8 != 0;
                                                            if (!messageObject8.isForwarded()) {
                                                            }
                                                            videoEditedInfo = messageObject8.videoEditedInfo;
                                                            if (videoEditedInfo == null) {
                                                            }
                                                            if (videoEditedInfo9 != null) {
                                                            }
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            if (j8 == 0) {
                                                            }
                                                            if (BuildVars.LOGS_ENABLED) {
                                                            }
                                                            messageObject10 = messageObject5;
                                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                            sendMessagesHelper8 = sendMessagesHelper7;
                                                            if (c4 != 0) {
                                                            }
                                                            sendMessagesHelper4 = this;
                                                            tLRPC$Message5 = tLRPC$Message4;
                                                            HashMap<String, String> hashMap622 = hashMap2;
                                                            ArrayList<TLRPC$MessageEntity> arrayList1022 = arrayList4;
                                                            TL_stories$StoryItem tL_stories$StoryItem1022 = tL_stories$StoryItem4;
                                                            Object obj1422 = obj5;
                                                            String str3022 = str8;
                                                            int i3622 = i8;
                                                            TLRPC$InputPeer tLRPC$InputPeer922 = tLRPC$InputPeer5;
                                                            long j1722 = r5;
                                                            MessageObject messageObject2022 = messageObject7;
                                                            Object obj1522 = obj3;
                                                            if (tLRPC$EncryptedChat != null) {
                                                            }
                                                        }
                                                    }
                                                    replyQuote = replyQuote3;
                                                    if (j4 == 0) {
                                                    }
                                                    if (tLRPC$ReplyMarkup != null) {
                                                    }
                                                    if (DialogObject.isEncryptedDialog(j13)) {
                                                    }
                                                    if (messageObject6 != null) {
                                                    }
                                                    tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                                    j7 = j13;
                                                    c4 = c3;
                                                    messageObject7 = null;
                                                    if (!MessageObject.isVoiceMessage(tLRPC$Message4)) {
                                                    }
                                                    tLRPC$Message4.media_unread = true;
                                                    if (tLRPC$Message4.from_id == null) {
                                                    }
                                                    tLRPC$Message4.send_state = 1;
                                                    if (hashMap5 == null) {
                                                    }
                                                    z10 = false;
                                                    messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
                                                    messageObject8.sendAnimationData = sendAnimationData;
                                                    messageObject8.wasJustSent = true;
                                                    messageObject8.scheduled = i8 != 0;
                                                    if (!messageObject8.isForwarded()) {
                                                    }
                                                    videoEditedInfo = messageObject8.videoEditedInfo;
                                                    if (videoEditedInfo == null) {
                                                    }
                                                    if (videoEditedInfo9 != null) {
                                                    }
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    if (j8 == 0) {
                                                    }
                                                    if (BuildVars.LOGS_ENABLED) {
                                                    }
                                                    messageObject10 = messageObject5;
                                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                    sendMessagesHelper8 = sendMessagesHelper7;
                                                    if (c4 != 0) {
                                                    }
                                                    sendMessagesHelper4 = this;
                                                    tLRPC$Message5 = tLRPC$Message4;
                                                    HashMap<String, String> hashMap6222 = hashMap2;
                                                    ArrayList<TLRPC$MessageEntity> arrayList10222 = arrayList4;
                                                    TL_stories$StoryItem tL_stories$StoryItem10222 = tL_stories$StoryItem4;
                                                    Object obj14222 = obj5;
                                                    String str30222 = str8;
                                                    int i36222 = i8;
                                                    TLRPC$InputPeer tLRPC$InputPeer9222 = tLRPC$InputPeer5;
                                                    long j17222 = r5;
                                                    MessageObject messageObject20222 = messageObject7;
                                                    Object obj15222 = obj3;
                                                    if (tLRPC$EncryptedChat != null) {
                                                    }
                                                }
                                            } else {
                                                j6 = j5;
                                                c2 = c;
                                            }
                                            tLRPC$Message4.flags |= 8;
                                            tLRPC$TL_messageReplyHeader.flags |= 16;
                                            tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject6.getId();
                                            if (messageObject5 == null) {
                                            }
                                            if (messageObject6.isTopicMainMessage) {
                                            }
                                            if (replyQuote3 != null) {
                                            }
                                            replyQuote = replyQuote3;
                                            if (j4 == 0) {
                                            }
                                            if (tLRPC$ReplyMarkup != null) {
                                            }
                                            if (DialogObject.isEncryptedDialog(j13)) {
                                            }
                                            if (messageObject6 != null) {
                                            }
                                            tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                            j7 = j13;
                                            c4 = c3;
                                            messageObject7 = null;
                                            if (!MessageObject.isVoiceMessage(tLRPC$Message4)) {
                                            }
                                            tLRPC$Message4.media_unread = true;
                                            if (tLRPC$Message4.from_id == null) {
                                            }
                                            tLRPC$Message4.send_state = 1;
                                            if (hashMap5 == null) {
                                            }
                                            z10 = false;
                                            messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
                                            messageObject8.sendAnimationData = sendAnimationData;
                                            messageObject8.wasJustSent = true;
                                            messageObject8.scheduled = i8 != 0;
                                            if (!messageObject8.isForwarded()) {
                                            }
                                            videoEditedInfo = messageObject8.videoEditedInfo;
                                            if (videoEditedInfo == null) {
                                            }
                                            if (videoEditedInfo9 != null) {
                                            }
                                            videoEditedInfo3 = videoEditedInfo2;
                                            if (j8 == 0) {
                                            }
                                            if (BuildVars.LOGS_ENABLED) {
                                            }
                                            messageObject10 = messageObject5;
                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                            sendMessagesHelper8 = sendMessagesHelper7;
                                            if (c4 != 0) {
                                            }
                                            sendMessagesHelper4 = this;
                                            tLRPC$Message5 = tLRPC$Message4;
                                            HashMap<String, String> hashMap62222 = hashMap2;
                                            ArrayList<TLRPC$MessageEntity> arrayList102222 = arrayList4;
                                            TL_stories$StoryItem tL_stories$StoryItem102222 = tL_stories$StoryItem4;
                                            Object obj142222 = obj5;
                                            String str302222 = str8;
                                            int i362222 = i8;
                                            TLRPC$InputPeer tLRPC$InputPeer92222 = tLRPC$InputPeer5;
                                            long j172222 = r5;
                                            MessageObject messageObject202222 = messageObject7;
                                            Object obj152222 = obj3;
                                            if (tLRPC$EncryptedChat != null) {
                                            }
                                        }
                                    }
                                    j6 = j5;
                                    messageObject5 = messageObject17;
                                    messageObject6 = messageObject19;
                                    c2 = c;
                                    replyQuote = replyQuote3;
                                    if (j4 == 0) {
                                    }
                                    if (tLRPC$ReplyMarkup != null) {
                                    }
                                    if (DialogObject.isEncryptedDialog(j13)) {
                                    }
                                    if (messageObject6 != null) {
                                    }
                                    tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                    j7 = j13;
                                    c4 = c3;
                                    messageObject7 = null;
                                    if (!MessageObject.isVoiceMessage(tLRPC$Message4)) {
                                    }
                                    tLRPC$Message4.media_unread = true;
                                    if (tLRPC$Message4.from_id == null) {
                                    }
                                    tLRPC$Message4.send_state = 1;
                                    if (hashMap5 == null) {
                                    }
                                    z10 = false;
                                    messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
                                    messageObject8.sendAnimationData = sendAnimationData;
                                    messageObject8.wasJustSent = true;
                                    messageObject8.scheduled = i8 != 0;
                                    if (!messageObject8.isForwarded()) {
                                    }
                                    videoEditedInfo = messageObject8.videoEditedInfo;
                                    if (videoEditedInfo == null) {
                                    }
                                    if (videoEditedInfo9 != null) {
                                    }
                                    videoEditedInfo3 = videoEditedInfo2;
                                    if (j8 == 0) {
                                    }
                                    if (BuildVars.LOGS_ENABLED) {
                                    }
                                    messageObject10 = messageObject5;
                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                    sendMessagesHelper8 = sendMessagesHelper7;
                                    if (c4 != 0) {
                                    }
                                    sendMessagesHelper4 = this;
                                    tLRPC$Message5 = tLRPC$Message4;
                                    HashMap<String, String> hashMap622222 = hashMap2;
                                    ArrayList<TLRPC$MessageEntity> arrayList1022222 = arrayList4;
                                    TL_stories$StoryItem tL_stories$StoryItem1022222 = tL_stories$StoryItem4;
                                    Object obj1422222 = obj5;
                                    String str3022222 = str8;
                                    int i3622222 = i8;
                                    TLRPC$InputPeer tLRPC$InputPeer922222 = tLRPC$InputPeer5;
                                    long j1722222 = r5;
                                    MessageObject messageObject2022222 = messageObject7;
                                    Object obj1522222 = obj3;
                                    if (tLRPC$EncryptedChat != null) {
                                    }
                                }
                            } else {
                                messageObject3 = messageObject2;
                            }
                            if (str9 != null) {
                                tLRPC$Message4.date = 0;
                                i8 = i23;
                            } else if (i23 != 0) {
                                i8 = i23;
                                try {
                                    tLRPC$Message4.date = i8;
                                } catch (Exception e55) {
                                    exc = e55;
                                    i3 = i8;
                                    sendMessagesHelper = sendMessagesHelper3;
                                    tLRPC$Message = tLRPC$Message4;
                                    messageObject = null;
                                    tLRPC$Message2 = tLRPC$Message;
                                    i2 = i3;
                                    sendMessagesHelper2 = sendMessagesHelper;
                                    FileLog.e(exc);
                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                    if (messageObject != null) {
                                    }
                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                    sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                    return;
                                }
                            } else {
                                i8 = i23;
                                try {
                                    tLRPC$Message4.date = getConnectionsManager().getCurrentTime();
                                } catch (Exception e56) {
                                    e = e56;
                                    int i51 = i8;
                                    sendMessagesHelper = sendMessagesHelper3;
                                    TLRPC$Message tLRPC$Message30 = tLRPC$Message4;
                                    exc = e;
                                    tLRPC$Message = tLRPC$Message30;
                                    i3 = i51;
                                    messageObject = null;
                                    tLRPC$Message2 = tLRPC$Message;
                                    i2 = i3;
                                    sendMessagesHelper2 = sendMessagesHelper;
                                    FileLog.e(exc);
                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message2, i2 == 0 ? 1 : 0);
                                    if (messageObject != null) {
                                    }
                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message2.id));
                                    sendMessagesHelper2.processSentMessage(tLRPC$Message2.id);
                                    return;
                                }
                            }
                            if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
                                if (i8 == 0 && z) {
                                    tLRPC$Message4.views = 1;
                                    tLRPC$Message4.flags |= 1024;
                                }
                                messageObject4 = messageObject3;
                                str11 = str9;
                                TLRPC$Chat chat3 = getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer2.channel_id));
                                if (chat3 != null) {
                                    if (chat3.megagroup) {
                                        tLRPC$Message4.unread = true;
                                    } else {
                                        tLRPC$Message4.post = true;
                                        if (chat3.signatures) {
                                            TLRPC$TL_peerUser tLRPC$TL_peerUser3 = new TLRPC$TL_peerUser();
                                            tLRPC$Message4.from_id = tLRPC$TL_peerUser3;
                                            tLRPC$TL_peerUser3.user_id = j5;
                                        }
                                    }
                                }
                            } else {
                                messageObject4 = messageObject3;
                                str11 = str9;
                                tLRPC$Message4.unread = true;
                            }
                            tLRPC$Message4.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                            tLRPC$Message4.dialog_id = j13;
                            tLRPC$Message4.invert_media = z22;
                            if (tL_stories$StoryItem7 == null) {
                            }
                            j6 = j5;
                            messageObject5 = messageObject17;
                            messageObject6 = messageObject19;
                            c2 = c;
                            replyQuote = replyQuote3;
                            if (j4 == 0) {
                            }
                            if (tLRPC$ReplyMarkup != null) {
                            }
                            if (DialogObject.isEncryptedDialog(j13)) {
                            }
                            if (messageObject6 != null) {
                            }
                            tL_stories$StoryItem3 = tL_stories$StoryItem2;
                            j7 = j13;
                            c4 = c3;
                            messageObject7 = null;
                            if (!MessageObject.isVoiceMessage(tLRPC$Message4)) {
                            }
                            tLRPC$Message4.media_unread = true;
                            if (tLRPC$Message4.from_id == null) {
                            }
                            tLRPC$Message4.send_state = 1;
                            if (hashMap5 == null) {
                            }
                            z10 = false;
                            messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
                            messageObject8.sendAnimationData = sendAnimationData;
                            messageObject8.wasJustSent = true;
                            messageObject8.scheduled = i8 != 0;
                            if (!messageObject8.isForwarded()) {
                            }
                            videoEditedInfo = messageObject8.videoEditedInfo;
                            if (videoEditedInfo == null) {
                            }
                            if (videoEditedInfo9 != null) {
                            }
                            videoEditedInfo3 = videoEditedInfo2;
                            if (j8 == 0) {
                            }
                            if (BuildVars.LOGS_ENABLED) {
                            }
                            messageObject10 = messageObject5;
                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                            sendMessagesHelper8 = sendMessagesHelper7;
                            if (c4 != 0) {
                            }
                            sendMessagesHelper4 = this;
                            tLRPC$Message5 = tLRPC$Message4;
                            HashMap<String, String> hashMap6222222 = hashMap2;
                            ArrayList<TLRPC$MessageEntity> arrayList10222222 = arrayList4;
                            TL_stories$StoryItem tL_stories$StoryItem10222222 = tL_stories$StoryItem4;
                            Object obj14222222 = obj5;
                            String str30222222 = str8;
                            int i36222222 = i8;
                            TLRPC$InputPeer tLRPC$InputPeer9222222 = tLRPC$InputPeer5;
                            long j17222222 = r5;
                            MessageObject messageObject20222222 = messageObject7;
                            Object obj15222222 = obj3;
                            if (tLRPC$EncryptedChat != null) {
                            }
                        }
                        i7 = i25;
                        TLRPC$TL_inputQuickReplyShortcut tLRPC$TL_inputQuickReplyShortcut = new TLRPC$TL_inputQuickReplyShortcut();
                        str9 = str2;
                        tLRPC$TL_inputQuickReplyShortcut.shortcut = str9;
                        tLRPC$Message4.quick_reply_shortcut = tLRPC$TL_inputQuickReplyShortcut;
                        tLRPC$Message4.quick_reply_shortcut_id = i7;
                        if (i7 != 0) {
                            tLRPC$Message4.flags |= 1073741824;
                        }
                        if (hashMap5 == null) {
                        }
                        str10 = "";
                        obj5 = "bot_name";
                        tLRPC$Message4.params = hashMap5;
                        if (messageObject2 != null) {
                        }
                        if (str9 != null) {
                        }
                        if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
                        }
                        tLRPC$Message4.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                        tLRPC$Message4.dialog_id = j13;
                        tLRPC$Message4.invert_media = z22;
                        if (tL_stories$StoryItem7 == null) {
                        }
                        j6 = j5;
                        messageObject5 = messageObject17;
                        messageObject6 = messageObject19;
                        c2 = c;
                        replyQuote = replyQuote3;
                        if (j4 == 0) {
                        }
                        if (tLRPC$ReplyMarkup != null) {
                        }
                        if (DialogObject.isEncryptedDialog(j13)) {
                        }
                        if (messageObject6 != null) {
                        }
                        tL_stories$StoryItem3 = tL_stories$StoryItem2;
                        j7 = j13;
                        c4 = c3;
                        messageObject7 = null;
                        if (!MessageObject.isVoiceMessage(tLRPC$Message4)) {
                        }
                        tLRPC$Message4.media_unread = true;
                        if (tLRPC$Message4.from_id == null) {
                        }
                        tLRPC$Message4.send_state = 1;
                        if (hashMap5 == null) {
                        }
                        z10 = false;
                        messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
                        messageObject8.sendAnimationData = sendAnimationData;
                        messageObject8.wasJustSent = true;
                        messageObject8.scheduled = i8 != 0;
                        if (!messageObject8.isForwarded()) {
                        }
                        videoEditedInfo = messageObject8.videoEditedInfo;
                        if (videoEditedInfo == null) {
                        }
                        if (videoEditedInfo9 != null) {
                        }
                        videoEditedInfo3 = videoEditedInfo2;
                        if (j8 == 0) {
                        }
                        if (BuildVars.LOGS_ENABLED) {
                        }
                        messageObject10 = messageObject5;
                        tLRPC$InputPeer5 = tLRPC$InputPeer4;
                        sendMessagesHelper8 = sendMessagesHelper7;
                        if (c4 != 0) {
                        }
                        sendMessagesHelper4 = this;
                        tLRPC$Message5 = tLRPC$Message4;
                        HashMap<String, String> hashMap62222222 = hashMap2;
                        ArrayList<TLRPC$MessageEntity> arrayList102222222 = arrayList4;
                        TL_stories$StoryItem tL_stories$StoryItem102222222 = tL_stories$StoryItem4;
                        Object obj142222222 = obj5;
                        String str302222222 = str8;
                        int i362222222 = i8;
                        TLRPC$InputPeer tLRPC$InputPeer92222222 = tLRPC$InputPeer5;
                        long j172222222 = r5;
                        MessageObject messageObject202222222 = messageObject7;
                        Object obj152222222 = obj3;
                        if (tLRPC$EncryptedChat != null) {
                        }
                    }
                }
                z9 = true;
                tLRPC$Message4.silent = z9;
                if (tLRPC$Message4.random_id == 0) {
                }
                if (str2 == null) {
                    str9 = str2;
                    if (hashMap5 == null) {
                    }
                    str10 = "";
                    obj5 = "bot_name";
                    tLRPC$Message4.params = hashMap5;
                    if (messageObject2 != null) {
                    }
                    if (str9 != null) {
                    }
                    if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
                    }
                    tLRPC$Message4.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                    tLRPC$Message4.dialog_id = j13;
                    tLRPC$Message4.invert_media = z22;
                    if (tL_stories$StoryItem7 == null) {
                    }
                    j6 = j5;
                    messageObject5 = messageObject17;
                    messageObject6 = messageObject19;
                    c2 = c;
                    replyQuote = replyQuote3;
                    if (j4 == 0) {
                    }
                    if (tLRPC$ReplyMarkup != null) {
                    }
                    if (DialogObject.isEncryptedDialog(j13)) {
                    }
                    if (messageObject6 != null) {
                    }
                    tL_stories$StoryItem3 = tL_stories$StoryItem2;
                    j7 = j13;
                    c4 = c3;
                    messageObject7 = null;
                    if (!MessageObject.isVoiceMessage(tLRPC$Message4)) {
                    }
                    tLRPC$Message4.media_unread = true;
                    if (tLRPC$Message4.from_id == null) {
                    }
                    tLRPC$Message4.send_state = 1;
                    if (hashMap5 == null) {
                    }
                    z10 = false;
                    messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
                    messageObject8.sendAnimationData = sendAnimationData;
                    messageObject8.wasJustSent = true;
                    messageObject8.scheduled = i8 != 0;
                    if (!messageObject8.isForwarded()) {
                    }
                    videoEditedInfo = messageObject8.videoEditedInfo;
                    if (videoEditedInfo == null) {
                    }
                    if (videoEditedInfo9 != null) {
                    }
                    videoEditedInfo3 = videoEditedInfo2;
                    if (j8 == 0) {
                    }
                    if (BuildVars.LOGS_ENABLED) {
                    }
                    messageObject10 = messageObject5;
                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                    sendMessagesHelper8 = sendMessagesHelper7;
                    if (c4 != 0) {
                    }
                    sendMessagesHelper4 = this;
                    tLRPC$Message5 = tLRPC$Message4;
                    HashMap<String, String> hashMap622222222 = hashMap2;
                    ArrayList<TLRPC$MessageEntity> arrayList1022222222 = arrayList4;
                    TL_stories$StoryItem tL_stories$StoryItem1022222222 = tL_stories$StoryItem4;
                    Object obj1422222222 = obj5;
                    String str3022222222 = str8;
                    int i3622222222 = i8;
                    TLRPC$InputPeer tLRPC$InputPeer922222222 = tLRPC$InputPeer5;
                    long j1722222222 = r5;
                    MessageObject messageObject2022222222 = messageObject7;
                    Object obj1522222222 = obj3;
                    if (tLRPC$EncryptedChat != null) {
                    }
                }
                i7 = i25;
                TLRPC$TL_inputQuickReplyShortcut tLRPC$TL_inputQuickReplyShortcut2 = new TLRPC$TL_inputQuickReplyShortcut();
                str9 = str2;
                tLRPC$TL_inputQuickReplyShortcut2.shortcut = str9;
                tLRPC$Message4.quick_reply_shortcut = tLRPC$TL_inputQuickReplyShortcut2;
                tLRPC$Message4.quick_reply_shortcut_id = i7;
                if (i7 != 0) {
                }
                if (hashMap5 == null) {
                }
                str10 = "";
                obj5 = "bot_name";
                tLRPC$Message4.params = hashMap5;
                if (messageObject2 != null) {
                }
                if (str9 != null) {
                }
                if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
                }
                tLRPC$Message4.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                tLRPC$Message4.dialog_id = j13;
                tLRPC$Message4.invert_media = z22;
                if (tL_stories$StoryItem7 == null) {
                }
                j6 = j5;
                messageObject5 = messageObject17;
                messageObject6 = messageObject19;
                c2 = c;
                replyQuote = replyQuote3;
                if (j4 == 0) {
                }
                if (tLRPC$ReplyMarkup != null) {
                }
                if (DialogObject.isEncryptedDialog(j13)) {
                }
                if (messageObject6 != null) {
                }
                tL_stories$StoryItem3 = tL_stories$StoryItem2;
                j7 = j13;
                c4 = c3;
                messageObject7 = null;
                if (!MessageObject.isVoiceMessage(tLRPC$Message4)) {
                }
                tLRPC$Message4.media_unread = true;
                if (tLRPC$Message4.from_id == null) {
                }
                tLRPC$Message4.send_state = 1;
                if (hashMap5 == null) {
                }
                z10 = false;
                messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
                messageObject8.sendAnimationData = sendAnimationData;
                messageObject8.wasJustSent = true;
                messageObject8.scheduled = i8 != 0;
                if (!messageObject8.isForwarded()) {
                }
                videoEditedInfo = messageObject8.videoEditedInfo;
                if (videoEditedInfo == null) {
                }
                if (videoEditedInfo9 != null) {
                }
                videoEditedInfo3 = videoEditedInfo2;
                if (j8 == 0) {
                }
                if (BuildVars.LOGS_ENABLED) {
                }
                messageObject10 = messageObject5;
                tLRPC$InputPeer5 = tLRPC$InputPeer4;
                sendMessagesHelper8 = sendMessagesHelper7;
                if (c4 != 0) {
                }
                sendMessagesHelper4 = this;
                tLRPC$Message5 = tLRPC$Message4;
                HashMap<String, String> hashMap6222222222 = hashMap2;
                ArrayList<TLRPC$MessageEntity> arrayList10222222222 = arrayList4;
                TL_stories$StoryItem tL_stories$StoryItem10222222222 = tL_stories$StoryItem4;
                Object obj14222222222 = obj5;
                String str30222222222 = str8;
                int i36222222222 = i8;
                TLRPC$InputPeer tLRPC$InputPeer9222222222 = tLRPC$InputPeer5;
                long j17222222222 = r5;
                MessageObject messageObject20222222222 = messageObject7;
                Object obj15222222222 = obj3;
                if (tLRPC$EncryptedChat != null) {
                }
            } else {
                tLRPC$InputPeer2 = tLRPC$InputPeer;
                j = clientUserId;
                j2 = 0;
                tLRPC$Peer = null;
                tLRPC$EncryptedChat = null;
            }
        }
        z = false;
        j4 = j2;
        if (messageObject18 == null) {
        }
        if (z19) {
        }
        z9 = true;
        tLRPC$Message4.silent = z9;
        if (tLRPC$Message4.random_id == 0) {
        }
        if (str2 == null) {
        }
        i7 = i25;
        TLRPC$TL_inputQuickReplyShortcut tLRPC$TL_inputQuickReplyShortcut22 = new TLRPC$TL_inputQuickReplyShortcut();
        str9 = str2;
        tLRPC$TL_inputQuickReplyShortcut22.shortcut = str9;
        tLRPC$Message4.quick_reply_shortcut = tLRPC$TL_inputQuickReplyShortcut22;
        tLRPC$Message4.quick_reply_shortcut_id = i7;
        if (i7 != 0) {
        }
        if (hashMap5 == null) {
        }
        str10 = "";
        obj5 = "bot_name";
        tLRPC$Message4.params = hashMap5;
        if (messageObject2 != null) {
        }
        if (str9 != null) {
        }
        if (tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel) {
        }
        tLRPC$Message4.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
        tLRPC$Message4.dialog_id = j13;
        tLRPC$Message4.invert_media = z22;
        if (tL_stories$StoryItem7 == null) {
        }
        j6 = j5;
        messageObject5 = messageObject17;
        messageObject6 = messageObject19;
        c2 = c;
        replyQuote = replyQuote3;
        if (j4 == 0) {
        }
        if (tLRPC$ReplyMarkup != null) {
        }
        if (DialogObject.isEncryptedDialog(j13)) {
        }
        if (messageObject6 != null) {
        }
        tL_stories$StoryItem3 = tL_stories$StoryItem2;
        j7 = j13;
        c4 = c3;
        messageObject7 = null;
        if (!MessageObject.isVoiceMessage(tLRPC$Message4)) {
        }
        tLRPC$Message4.media_unread = true;
        if (tLRPC$Message4.from_id == null) {
        }
        tLRPC$Message4.send_state = 1;
        if (hashMap5 == null) {
        }
        z10 = false;
        messageObject8 = new MessageObject(sendMessagesHelper3.currentAccount, tLRPC$Message4, (!(messageObject5 == null && messageObject5 == messageObject6 && messageObject5.getId() == 1) && messageObject7 == null) ? messageObject6 : null, true, true);
        messageObject8.sendAnimationData = sendAnimationData;
        messageObject8.wasJustSent = true;
        messageObject8.scheduled = i8 != 0;
        if (!messageObject8.isForwarded()) {
        }
        videoEditedInfo = messageObject8.videoEditedInfo;
        if (videoEditedInfo == null) {
        }
        if (videoEditedInfo9 != null) {
        }
        videoEditedInfo3 = videoEditedInfo2;
        if (j8 == 0) {
        }
        if (BuildVars.LOGS_ENABLED) {
        }
        messageObject10 = messageObject5;
        tLRPC$InputPeer5 = tLRPC$InputPeer4;
        sendMessagesHelper8 = sendMessagesHelper7;
        if (c4 != 0) {
        }
        sendMessagesHelper4 = this;
        tLRPC$Message5 = tLRPC$Message4;
        HashMap<String, String> hashMap62222222222 = hashMap2;
        ArrayList<TLRPC$MessageEntity> arrayList102222222222 = arrayList4;
        TL_stories$StoryItem tL_stories$StoryItem102222222222 = tL_stories$StoryItem4;
        Object obj142222222222 = obj5;
        String str302222222222 = str8;
        int i362222222222 = i8;
        TLRPC$InputPeer tLRPC$InputPeer92222222222 = tLRPC$InputPeer5;
        long j172222222222 = r5;
        MessageObject messageObject202222222222 = messageObject7;
        Object obj152222222222 = obj3;
        if (tLRPC$EncryptedChat != null) {
        }
    }

    private void performSendDelayedMessage(DelayedMessage delayedMessage) {
        performSendDelayedMessage(delayedMessage, -1);
    }

    private TLRPC$PhotoSize getThumbForSecretChat(ArrayList<TLRPC$PhotoSize> arrayList) {
        if (arrayList != null && !arrayList.isEmpty()) {
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                TLRPC$PhotoSize tLRPC$PhotoSize = arrayList.get(i);
                if (tLRPC$PhotoSize != null && !(tLRPC$PhotoSize instanceof TLRPC$TL_photoPathSize) && !(tLRPC$PhotoSize instanceof TLRPC$TL_photoSizeEmpty) && tLRPC$PhotoSize.location != null) {
                    if (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) {
                        return tLRPC$PhotoSize;
                    }
                    TLRPC$TL_photoSize_layer127 tLRPC$TL_photoSize_layer127 = new TLRPC$TL_photoSize_layer127();
                    tLRPC$TL_photoSize_layer127.type = tLRPC$PhotoSize.type;
                    tLRPC$TL_photoSize_layer127.w = tLRPC$PhotoSize.w;
                    tLRPC$TL_photoSize_layer127.h = tLRPC$PhotoSize.h;
                    tLRPC$TL_photoSize_layer127.size = tLRPC$PhotoSize.size;
                    byte[] bArr = tLRPC$PhotoSize.bytes;
                    tLRPC$TL_photoSize_layer127.bytes = bArr;
                    if (bArr == null) {
                        tLRPC$TL_photoSize_layer127.bytes = new byte[0];
                    }
                    TLRPC$TL_fileLocation_layer82 tLRPC$TL_fileLocation_layer82 = new TLRPC$TL_fileLocation_layer82();
                    tLRPC$TL_photoSize_layer127.location = tLRPC$TL_fileLocation_layer82;
                    TLRPC$FileLocation tLRPC$FileLocation = tLRPC$PhotoSize.location;
                    tLRPC$TL_fileLocation_layer82.dc_id = tLRPC$FileLocation.dc_id;
                    tLRPC$TL_fileLocation_layer82.volume_id = tLRPC$FileLocation.volume_id;
                    tLRPC$TL_fileLocation_layer82.local_id = tLRPC$FileLocation.local_id;
                    tLRPC$TL_fileLocation_layer82.secret = tLRPC$FileLocation.secret;
                    return tLRPC$TL_photoSize_layer127;
                }
            }
        }
        return null;
    }

    private void performSendDelayedMessage(final DelayedMessage delayedMessage, int i) {
        boolean z;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile;
        boolean z2;
        MessageObject messageObject;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$InputMedia tLRPC$InputMedia2;
        TLRPC$InputMedia tLRPC$InputMedia3;
        int i2 = delayedMessage.type;
        if (i2 == 0) {
            String str = delayedMessage.httpLocation;
            if (str != null) {
                putToDelayedMessages(str, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
            } else if (delayedMessage.sendRequest != null) {
                String file = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                putToDelayedMessages(file, delayedMessage);
                getFileLoader().uploadFile(file, false, true, ConnectionsManager.FileTypePhoto);
                putToUploadingMessages(delayedMessage.obj);
            } else {
                String file2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                if (delayedMessage.sendEncryptedRequest != null && delayedMessage.photoSize.location.dc_id != 0) {
                    File file3 = new File(file2);
                    if (!file3.exists()) {
                        file2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize, true).toString();
                        file3 = new File(file2);
                    }
                    if (!file3.exists()) {
                        putToDelayedMessages(FileLoader.getAttachFileName(delayedMessage.photoSize), delayedMessage);
                        getFileLoader().loadFile(ImageLocation.getForObject(delayedMessage.photoSize, delayedMessage.locationParent), delayedMessage.parentObject, "jpg", 3, 0);
                        return;
                    }
                }
                putToDelayedMessages(file2, delayedMessage);
                getFileLoader().uploadFile(file2, true, true, ConnectionsManager.FileTypePhoto);
                putToUploadingMessages(delayedMessage.obj);
            }
        } else if (i2 == 1) {
            VideoEditedInfo videoEditedInfo = delayedMessage.videoEditedInfo;
            if (videoEditedInfo != null && videoEditedInfo.needConvert()) {
                MessageObject messageObject2 = delayedMessage.obj;
                String str2 = messageObject2.messageOwner.attachPath;
                TLRPC$Document document = messageObject2.getDocument();
                if (str2 == null) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(FileLoader.getDirectory(4));
                    sb.append("/");
                    sb.append(document.id);
                    sb.append(".");
                    sb.append(delayedMessage.videoEditedInfo.isSticker ? "webm" : "mp4");
                    str2 = sb.toString();
                }
                putToDelayedMessages(str2, delayedMessage);
                if (!delayedMessage.videoEditedInfo.alreadyScheduledConverting) {
                    MediaController.getInstance().scheduleVideoConvert(delayedMessage.obj);
                }
                putToUploadingMessages(delayedMessage.obj);
                return;
            }
            VideoEditedInfo videoEditedInfo2 = delayedMessage.videoEditedInfo;
            if (videoEditedInfo2 != null) {
                TLRPC$InputFile tLRPC$InputFile = videoEditedInfo2.file;
                if (tLRPC$InputFile != null) {
                    TLObject tLObject = delayedMessage.sendRequest;
                    if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
                        tLRPC$InputMedia3 = ((TLRPC$TL_messages_sendMedia) tLObject).media;
                    } else {
                        tLRPC$InputMedia3 = ((TLRPC$TL_messages_editMessage) tLObject).media;
                    }
                    tLRPC$InputMedia3.file = tLRPC$InputFile;
                    videoEditedInfo2.file = null;
                } else if (videoEditedInfo2.encryptedFile != null) {
                    TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage = (TLRPC$TL_decryptedMessage) delayedMessage.sendEncryptedRequest;
                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                    tLRPC$DecryptedMessageMedia.size = videoEditedInfo2.estimatedSize;
                    tLRPC$DecryptedMessageMedia.key = videoEditedInfo2.key;
                    tLRPC$DecryptedMessageMedia.iv = videoEditedInfo2.iv;
                    SecretChatHelper secretChatHelper = getSecretChatHelper();
                    MessageObject messageObject3 = delayedMessage.obj;
                    secretChatHelper.performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject3.messageOwner, delayedMessage.encryptedChat, delayedMessage.videoEditedInfo.encryptedFile, delayedMessage.originalPath, messageObject3);
                    delayedMessage.videoEditedInfo.encryptedFile = null;
                    return;
                }
            }
            TLObject tLObject2 = delayedMessage.sendRequest;
            if (tLObject2 != null) {
                if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
                    tLRPC$InputMedia2 = ((TLRPC$TL_messages_sendMedia) tLObject2).media;
                } else {
                    tLRPC$InputMedia2 = ((TLRPC$TL_messages_editMessage) tLObject2).media;
                }
                if (tLRPC$InputMedia2.file == null) {
                    MessageObject messageObject4 = delayedMessage.obj;
                    String str3 = messageObject4.messageOwner.attachPath;
                    TLRPC$Document document2 = messageObject4.getDocument();
                    if (str3 == null) {
                        str3 = FileLoader.getDirectory(4) + "/" + document2.id + ".mp4";
                    }
                    String str4 = str3;
                    putToDelayedMessages(str4, delayedMessage);
                    VideoEditedInfo videoEditedInfo3 = delayedMessage.obj.videoEditedInfo;
                    if (videoEditedInfo3 == null || !videoEditedInfo3.notReadyYet) {
                        if (videoEditedInfo3 != null && videoEditedInfo3.needConvert()) {
                            getFileLoader().uploadFile(str4, false, false, document2.size, ConnectionsManager.FileTypeVideo, false);
                        } else {
                            getFileLoader().uploadFile(str4, false, false, ConnectionsManager.FileTypeVideo);
                        }
                    }
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                }
                String str5 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                putToDelayedMessages(str5, delayedMessage);
                getFileLoader().uploadFile(str5, false, true, ConnectionsManager.FileTypePhoto);
                putToUploadingMessages(delayedMessage.obj);
                return;
            }
            MessageObject messageObject5 = delayedMessage.obj;
            String str6 = messageObject5.messageOwner.attachPath;
            TLRPC$Document document3 = messageObject5.getDocument();
            if (str6 == null) {
                str6 = FileLoader.getDirectory(4) + "/" + document3.id + ".mp4";
            }
            if (delayedMessage.sendEncryptedRequest != null && document3.dc_id != 0) {
                File file4 = new File(str6);
                if (!file4.exists() && (file4 = getFileLoader().getPathToMessage(delayedMessage.obj.messageOwner)) != null && file4.exists()) {
                    TLRPC$Message tLRPC$Message = delayedMessage.obj.messageOwner;
                    String absolutePath = file4.getAbsolutePath();
                    tLRPC$Message.attachPath = absolutePath;
                    delayedMessage.obj.attachPathExists = true;
                    str6 = absolutePath;
                }
                if ((file4 == null || (!file4.exists() && delayedMessage.obj.getDocument() != null)) && (file4 = getFileLoader().getPathToAttach(delayedMessage.obj.getDocument(), false)) != null && file4.exists()) {
                    TLRPC$Message tLRPC$Message2 = delayedMessage.obj.messageOwner;
                    String absolutePath2 = file4.getAbsolutePath();
                    tLRPC$Message2.attachPath = absolutePath2;
                    delayedMessage.obj.attachPathExists = true;
                    str6 = absolutePath2;
                }
                if (file4 == null || !file4.exists()) {
                    putToDelayedMessages(FileLoader.getAttachFileName(document3), delayedMessage);
                    getFileLoader().loadFile(document3, delayedMessage.parentObject, 3, 0);
                    return;
                }
            }
            String str7 = str6;
            putToDelayedMessages(str7, delayedMessage);
            VideoEditedInfo videoEditedInfo4 = delayedMessage.obj.videoEditedInfo;
            if (videoEditedInfo4 == null || !videoEditedInfo4.notReadyYet) {
                if (videoEditedInfo4 != null && videoEditedInfo4.needConvert()) {
                    getFileLoader().uploadFile(str7, true, false, document3.size, ConnectionsManager.FileTypeVideo, false);
                } else {
                    getFileLoader().uploadFile(str7, true, false, ConnectionsManager.FileTypeVideo);
                }
            }
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 == 2) {
            String str8 = delayedMessage.httpLocation;
            if (str8 != null) {
                putToDelayedMessages(str8, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "gif", this.currentAccount);
                return;
            }
            TLObject tLObject3 = delayedMessage.sendRequest;
            if (tLObject3 != null) {
                if (tLObject3 instanceof TLRPC$TL_messages_sendMedia) {
                    tLRPC$InputMedia = ((TLRPC$TL_messages_sendMedia) tLObject3).media;
                } else {
                    tLRPC$InputMedia = ((TLRPC$TL_messages_editMessage) tLObject3).media;
                }
                if (tLRPC$InputMedia.file == null) {
                    String str9 = delayedMessage.obj.messageOwner.attachPath;
                    putToDelayedMessages(str9, delayedMessage);
                    getFileLoader().uploadFile(str9, delayedMessage.sendRequest == null, false, ConnectionsManager.FileTypeFile);
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                } else if (tLRPC$InputMedia.thumb != null || (tLRPC$PhotoSize = delayedMessage.photoSize) == null || (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                    return;
                } else {
                    String str10 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                    putToDelayedMessages(str10, delayedMessage);
                    getFileLoader().uploadFile(str10, false, true, ConnectionsManager.FileTypePhoto);
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                }
            }
            MessageObject messageObject6 = delayedMessage.obj;
            String str11 = messageObject6.messageOwner.attachPath;
            TLRPC$Document document4 = messageObject6.getDocument();
            if (delayedMessage.sendEncryptedRequest != null && document4.dc_id != 0) {
                File file5 = new File(str11);
                if (!file5.exists() && (file5 = getFileLoader().getPathToMessage(delayedMessage.obj.messageOwner)) != null && file5.exists()) {
                    TLRPC$Message tLRPC$Message3 = delayedMessage.obj.messageOwner;
                    String absolutePath3 = file5.getAbsolutePath();
                    tLRPC$Message3.attachPath = absolutePath3;
                    delayedMessage.obj.attachPathExists = true;
                    str11 = absolutePath3;
                }
                if ((file5 == null || (!file5.exists() && delayedMessage.obj.getDocument() != null)) && (file5 = getFileLoader().getPathToAttach(delayedMessage.obj.getDocument(), false)) != null && file5.exists()) {
                    TLRPC$Message tLRPC$Message4 = delayedMessage.obj.messageOwner;
                    String absolutePath4 = file5.getAbsolutePath();
                    tLRPC$Message4.attachPath = absolutePath4;
                    delayedMessage.obj.attachPathExists = true;
                    str11 = absolutePath4;
                }
                if (file5 == null || !file5.exists()) {
                    putToDelayedMessages(FileLoader.getAttachFileName(document4), delayedMessage);
                    getFileLoader().loadFile(document4, delayedMessage.parentObject, 3, 0);
                    return;
                }
            }
            putToDelayedMessages(str11, delayedMessage);
            getFileLoader().uploadFile(str11, true, false, ConnectionsManager.FileTypeFile);
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 == 3) {
            String str12 = delayedMessage.obj.messageOwner.attachPath;
            putToDelayedMessages(str12, delayedMessage);
            getFileLoader().uploadFile(str12, delayedMessage.sendRequest == null, true, ConnectionsManager.FileTypeAudio);
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 != 4) {
            if (i2 == 5) {
                final String str13 = "stickerset_" + delayedMessage.obj.getId();
                TLRPC$TL_messages_getStickerSet tLRPC$TL_messages_getStickerSet = new TLRPC$TL_messages_getStickerSet();
                tLRPC$TL_messages_getStickerSet.stickerset = (TLRPC$InputStickerSet) delayedMessage.parentObject;
                getConnectionsManager().sendRequest(tLRPC$TL_messages_getStickerSet, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda87
                    @Override // org.telegram.tgnet.RequestDelegate
                    public final void run(TLObject tLObject4, TLRPC$TL_error tLRPC$TL_error) {
                        SendMessagesHelper.this.lambda$performSendDelayedMessage$33(delayedMessage, str13, tLObject4, tLRPC$TL_error);
                    }
                });
                putToDelayedMessages(str13, delayedMessage);
            }
        } else {
            boolean z3 = i < 0;
            if (delayedMessage.performMediaUpload) {
                int size = i < 0 ? delayedMessage.messageObjects.size() - 1 : i;
                MessageObject messageObject7 = delayedMessage.messageObjects.get(size);
                if (messageObject7.getDocument() != null) {
                    if (delayedMessage.videoEditedInfo != null) {
                        String str14 = messageObject7.messageOwner.attachPath;
                        TLRPC$Document document5 = messageObject7.getDocument();
                        if (str14 == null) {
                            str14 = FileLoader.getDirectory(4) + "/" + document5.id + ".mp4";
                        }
                        putToDelayedMessages(str14, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject7, str14);
                        delayedMessage.extraHashMap.put(str14 + "_i", messageObject7);
                        TLRPC$PhotoSize tLRPC$PhotoSize2 = delayedMessage.photoSize;
                        if (tLRPC$PhotoSize2 != null && tLRPC$PhotoSize2.location != null) {
                            delayedMessage.extraHashMap.put(str14 + "_t", delayedMessage.photoSize);
                        }
                        if (!delayedMessage.videoEditedInfo.alreadyScheduledConverting) {
                            MediaController.getInstance().scheduleVideoConvert(messageObject7);
                        }
                        delayedMessage.obj = messageObject7;
                        putToUploadingMessages(messageObject7);
                    } else {
                        TLRPC$Document document6 = messageObject7.getDocument();
                        String str15 = messageObject7.messageOwner.attachPath;
                        if (str15 == null) {
                            StringBuilder sb2 = new StringBuilder();
                            sb2.append(FileLoader.getDirectory(4));
                            sb2.append("/");
                            messageObject = messageObject7;
                            sb2.append(document6.id);
                            sb2.append(".mp4");
                            str15 = sb2.toString();
                        } else {
                            messageObject = messageObject7;
                        }
                        TLObject tLObject4 = delayedMessage.sendRequest;
                        if (tLObject4 != null) {
                            TLRPC$InputMedia tLRPC$InputMedia4 = ((TLRPC$TL_messages_sendMultiMedia) tLObject4).multi_media.get(size).media;
                            if (tLRPC$InputMedia4.file == null) {
                                putToDelayedMessages(str15, delayedMessage);
                                MessageObject messageObject8 = messageObject;
                                delayedMessage.extraHashMap.put(messageObject8, str15);
                                delayedMessage.extraHashMap.put(str15, tLRPC$InputMedia4);
                                delayedMessage.extraHashMap.put(str15 + "_i", messageObject8);
                                TLRPC$PhotoSize tLRPC$PhotoSize3 = delayedMessage.photoSize;
                                if (tLRPC$PhotoSize3 != null && tLRPC$PhotoSize3.location != null) {
                                    delayedMessage.extraHashMap.put(str15 + "_t", delayedMessage.photoSize);
                                }
                                VideoEditedInfo videoEditedInfo5 = messageObject8.videoEditedInfo;
                                if (videoEditedInfo5 != null && videoEditedInfo5.needConvert()) {
                                    getFileLoader().uploadFile(str15, false, false, document6.size, ConnectionsManager.FileTypeVideo, false);
                                } else {
                                    getFileLoader().uploadFile(str15, false, false, ConnectionsManager.FileTypeVideo);
                                }
                                putToUploadingMessages(messageObject8);
                            } else {
                                MessageObject messageObject9 = messageObject;
                                if (delayedMessage.photoSize != null) {
                                    String str16 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                                    putToDelayedMessages(str16, delayedMessage);
                                    delayedMessage.extraHashMap.put(str16 + "_o", str15);
                                    delayedMessage.extraHashMap.put(messageObject9, str16);
                                    delayedMessage.extraHashMap.put(str16, tLRPC$InputMedia4);
                                    getFileLoader().uploadFile(str16, false, true, ConnectionsManager.FileTypePhoto);
                                    putToUploadingMessages(messageObject9);
                                }
                            }
                        } else {
                            MessageObject messageObject10 = messageObject;
                            putToDelayedMessages(str15, delayedMessage);
                            delayedMessage.extraHashMap.put(messageObject10, str15);
                            delayedMessage.extraHashMap.put(str15, ((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(size));
                            delayedMessage.extraHashMap.put(str15 + "_i", messageObject10);
                            TLRPC$PhotoSize tLRPC$PhotoSize4 = delayedMessage.photoSize;
                            if (tLRPC$PhotoSize4 != null && tLRPC$PhotoSize4.location != null) {
                                delayedMessage.extraHashMap.put(str15 + "_t", delayedMessage.photoSize);
                            }
                            VideoEditedInfo videoEditedInfo6 = messageObject10.videoEditedInfo;
                            if (videoEditedInfo6 != null && videoEditedInfo6.needConvert()) {
                                getFileLoader().uploadFile(str15, true, false, document6.size, ConnectionsManager.FileTypeVideo, false);
                            } else {
                                getFileLoader().uploadFile(str15, true, false, ConnectionsManager.FileTypeVideo);
                            }
                            putToUploadingMessages(messageObject10);
                        }
                    }
                    delayedMessage.videoEditedInfo = null;
                    delayedMessage.photoSize = null;
                } else {
                    String str17 = delayedMessage.httpLocation;
                    if (str17 != null) {
                        putToDelayedMessages(str17, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject7, delayedMessage.httpLocation);
                        delayedMessage.extraHashMap.put(delayedMessage.httpLocation, messageObject7);
                        ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
                        delayedMessage.httpLocation = null;
                    } else {
                        TLObject tLObject5 = delayedMessage.sendRequest;
                        if (tLObject5 != null) {
                            tLRPC$InputEncryptedFile = ((TLRPC$TL_messages_sendMultiMedia) tLObject5).multi_media.get(size).media;
                        } else {
                            tLRPC$InputEncryptedFile = ((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(size);
                        }
                        String file6 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                        putToDelayedMessages(file6, delayedMessage);
                        delayedMessage.extraHashMap.put(file6, tLRPC$InputEncryptedFile);
                        delayedMessage.extraHashMap.put(messageObject7, file6);
                        z = true;
                        getFileLoader().uploadFile(file6, delayedMessage.sendEncryptedRequest != null, true, ConnectionsManager.FileTypePhoto);
                        putToUploadingMessages(messageObject7);
                        delayedMessage.photoSize = null;
                        z2 = false;
                        delayedMessage.performMediaUpload = z2;
                    }
                }
                z2 = false;
                z = true;
                delayedMessage.performMediaUpload = z2;
            } else {
                z = true;
                if (!delayedMessage.messageObjects.isEmpty()) {
                    ArrayList<MessageObject> arrayList = delayedMessage.messageObjects;
                    putToSendingMessages(arrayList.get(arrayList.size() - 1).messageOwner, delayedMessage.finalGroupMessage != 0);
                }
            }
            sendReadyToSendGroup(delayedMessage, z3, z);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendDelayedMessage$33(final DelayedMessage delayedMessage, final String str, final TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda41
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendDelayedMessage$32(tLObject, delayedMessage, str);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendDelayedMessage$32(TLObject tLObject, DelayedMessage delayedMessage, String str) {
        boolean z;
        if (tLObject != null) {
            TLRPC$TL_messages_stickerSet tLRPC$TL_messages_stickerSet = (TLRPC$TL_messages_stickerSet) tLObject;
            getMediaDataController().storeTempStickerSet(tLRPC$TL_messages_stickerSet);
            TLRPC$TL_inputStickerSetShortName tLRPC$TL_inputStickerSetShortName = new TLRPC$TL_inputStickerSetShortName();
            ((TLRPC$TL_documentAttributeSticker_layer55) delayedMessage.locationParent).stickerset = tLRPC$TL_inputStickerSetShortName;
            tLRPC$TL_inputStickerSetShortName.short_name = tLRPC$TL_messages_stickerSet.set.short_name;
            z = true;
        } else {
            z = false;
        }
        ArrayList<DelayedMessage> remove = this.delayedMessages.remove(str);
        if (remove == null || remove.isEmpty()) {
            return;
        }
        if (z) {
            getMessagesStorage().replaceMessageIfExists(remove.get(0).obj.messageOwner, null, null, false);
        }
        MessageObject messageObject = delayedMessage.obj;
        getSecretChatHelper().performSendEncryptedRequest((TLRPC$DecryptedMessage) delayedMessage.sendEncryptedRequest, messageObject.messageOwner, delayedMessage.encryptedChat, null, null, messageObject);
    }

    private void uploadMultiMedia(final DelayedMessage delayedMessage, final TLRPC$InputMedia tLRPC$InputMedia, TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile, String str) {
        if (tLRPC$InputMedia == null) {
            if (tLRPC$InputEncryptedFile != null) {
                TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                int i = 0;
                while (true) {
                    if (i >= tLRPC$TL_messages_sendEncryptedMultiMedia.files.size()) {
                        break;
                    } else if (tLRPC$TL_messages_sendEncryptedMultiMedia.files.get(i) == tLRPC$InputEncryptedFile) {
                        putToSendingMessages(delayedMessage.messages.get(i), delayedMessage.scheduled);
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.fileUploadProgressChanged, str, -1L, -1L, Boolean.FALSE);
                        break;
                    } else {
                        i++;
                    }
                }
                sendReadyToSendGroup(delayedMessage, false, true);
                return;
            }
            return;
        }
        TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) delayedMessage.sendRequest;
        int i2 = 0;
        while (true) {
            if (i2 >= tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                break;
            } else if (tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media == tLRPC$InputMedia) {
                putToSendingMessages(delayedMessage.messages.get(i2), delayedMessage.scheduled);
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.fileUploadProgressChanged, str, -1L, -1L, Boolean.FALSE);
                break;
            } else {
                i2++;
            }
        }
        TLRPC$TL_messages_uploadMedia tLRPC$TL_messages_uploadMedia = new TLRPC$TL_messages_uploadMedia();
        tLRPC$TL_messages_uploadMedia.media = tLRPC$InputMedia;
        tLRPC$TL_messages_uploadMedia.peer = ((TLRPC$TL_messages_sendMultiMedia) delayedMessage.sendRequest).peer;
        getConnectionsManager().sendRequest(tLRPC$TL_messages_uploadMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda89
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$uploadMultiMedia$35(tLRPC$InputMedia, delayedMessage, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$uploadMultiMedia$35(final TLRPC$InputMedia tLRPC$InputMedia, final DelayedMessage delayedMessage, final TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda42
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$uploadMultiMedia$34(tLObject, tLRPC$InputMedia, delayedMessage);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:19:0x0067  */
    /* JADX WARN: Removed duplicated region for block: B:30:0x009f  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$uploadMultiMedia$34(TLObject tLObject, TLRPC$InputMedia tLRPC$InputMedia, DelayedMessage delayedMessage) {
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument;
        if (tLObject != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia = (TLRPC$MessageMedia) tLObject;
            if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedPhoto) && (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto)) {
                TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto = new TLRPC$TL_inputMediaPhoto();
                TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                tLRPC$TL_inputMediaPhoto.id = tLRPC$TL_inputPhoto;
                TLRPC$Photo tLRPC$Photo = tLRPC$MessageMedia.photo;
                tLRPC$TL_inputPhoto.id = tLRPC$Photo.id;
                tLRPC$TL_inputPhoto.access_hash = tLRPC$Photo.access_hash;
                tLRPC$TL_inputPhoto.file_reference = tLRPC$Photo.file_reference;
                tLRPC$TL_inputMediaPhoto.spoiler = tLRPC$InputMedia.spoiler;
                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaPhoto;
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("set uploaded photo");
                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaPhoto;
                }
            } else if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument) && (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument)) {
                TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument2 = new TLRPC$TL_inputMediaDocument();
                TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                tLRPC$TL_inputMediaDocument2.id = tLRPC$TL_inputDocument;
                TLRPC$Document tLRPC$Document = tLRPC$MessageMedia.document;
                tLRPC$TL_inputDocument.id = tLRPC$Document.id;
                tLRPC$TL_inputDocument.access_hash = tLRPC$Document.access_hash;
                tLRPC$TL_inputDocument.file_reference = tLRPC$Document.file_reference;
                tLRPC$TL_inputMediaDocument2.spoiler = tLRPC$InputMedia.spoiler;
                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument2;
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("set uploaded document");
                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument2;
                }
            }
            if (tLRPC$TL_inputMediaDocument == null) {
                int i = tLRPC$InputMedia.ttl_seconds;
                if (i != 0) {
                    tLRPC$TL_inputMediaDocument.ttl_seconds = i;
                    tLRPC$TL_inputMediaDocument.flags |= 1;
                }
                TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) delayedMessage.sendRequest;
                int i2 = 0;
                while (true) {
                    if (i2 >= tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                        break;
                    } else if (tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media == tLRPC$InputMedia) {
                        tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media = tLRPC$TL_inputMediaDocument;
                        break;
                    } else {
                        i2++;
                    }
                }
                sendReadyToSendGroup(delayedMessage, false, true);
                return;
            }
            delayedMessage.markAsError();
            return;
        }
        tLRPC$TL_inputMediaDocument = null;
        if (tLRPC$TL_inputMediaDocument == null) {
        }
    }

    private void sendReadyToSendGroup(DelayedMessage delayedMessage, boolean z, boolean z2) {
        DelayedMessage findMaxDelayedMessageForMessageId;
        ArrayList<MessageObject> arrayList;
        if (delayedMessage.messageObjects.isEmpty()) {
            delayedMessage.markAsError();
            return;
        }
        String str = "group_" + delayedMessage.groupId;
        int i = delayedMessage.finalGroupMessage;
        ArrayList<MessageObject> arrayList2 = delayedMessage.messageObjects;
        int i2 = 1;
        if (i != arrayList2.get(arrayList2.size() - 1).getId()) {
            if (z) {
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("final message not added, add");
                }
                putToDelayedMessages(str, delayedMessage);
                return;
            } else if (BuildVars.DEBUG_VERSION) {
                FileLog.d("final message not added");
                return;
            } else {
                return;
            }
        }
        int i3 = 0;
        if (z) {
            this.delayedMessages.remove(str);
            if (!delayedMessage.scheduled) {
                MessageObject messageObject = delayedMessage.obj;
                i2 = ((messageObject == null || !messageObject.isQuickReply()) && ((arrayList = delayedMessage.messageObjects) == null || arrayList.isEmpty() || !delayedMessage.messageObjects.get(0).isQuickReply())) ? 0 : 5;
            }
            getMessagesStorage().putMessages(delayedMessage.messages, false, true, false, 0, i2, 0L);
            getMessagesController().updateInterfaceWithMessages(delayedMessage.peer, delayedMessage.messageObjects, i2);
            if (!delayedMessage.scheduled) {
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
            }
            if (BuildVars.DEBUG_VERSION) {
                FileLog.d("add message");
            }
        }
        TLObject tLObject = delayedMessage.sendRequest;
        if (tLObject instanceof TLRPC$TL_messages_sendMultiMedia) {
            TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) tLObject;
            while (i3 < tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_messages_sendMultiMedia.multi_media.get(i3).media;
                if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedPhoto) || (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument)) {
                    if (BuildVars.DEBUG_VERSION) {
                        FileLog.d("multi media not ready");
                        return;
                    }
                    return;
                }
                i3++;
            }
            if (z2 && (findMaxDelayedMessageForMessageId = findMaxDelayedMessageForMessageId(delayedMessage.finalGroupMessage, delayedMessage.peer)) != null) {
                findMaxDelayedMessageForMessageId.addDelayedRequest(delayedMessage.sendRequest, delayedMessage.messageObjects, delayedMessage.originalPaths, delayedMessage.parentObjects, delayedMessage, delayedMessage.scheduled);
                ArrayList<DelayedMessageSendAfterRequest> arrayList3 = delayedMessage.requests;
                if (arrayList3 != null) {
                    findMaxDelayedMessageForMessageId.requests.addAll(arrayList3);
                }
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("has maxDelayedMessage, delay");
                    return;
                }
                return;
            }
        } else {
            TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
            while (i3 < tLRPC$TL_messages_sendEncryptedMultiMedia.files.size()) {
                if (tLRPC$TL_messages_sendEncryptedMultiMedia.files.get(i3) instanceof TLRPC$TL_inputEncryptedFile) {
                    return;
                }
                i3++;
            }
        }
        TLObject tLObject2 = delayedMessage.sendRequest;
        if (tLObject2 instanceof TLRPC$TL_messages_sendMultiMedia) {
            performSendMessageRequestMulti((TLRPC$TL_messages_sendMultiMedia) tLObject2, delayedMessage.messageObjects, delayedMessage.originalPaths, delayedMessage.parentObjects, delayedMessage, delayedMessage.scheduled);
        } else {
            getSecretChatHelper().performSendEncryptedRequest((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest, delayedMessage);
        }
        delayedMessage.sendDelayedRequests();
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void putToSendingMessages(final TLRPC$Message tLRPC$Message, final boolean z) {
        if (Thread.currentThread() != ApplicationLoader.applicationHandler.getLooper().getThread()) {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda49
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$putToSendingMessages$36(tLRPC$Message, z);
                }
            });
        } else {
            putToSendingMessages(tLRPC$Message, z, true);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$putToSendingMessages$36(TLRPC$Message tLRPC$Message, boolean z) {
        putToSendingMessages(tLRPC$Message, z, true);
    }

    protected void putToSendingMessages(TLRPC$Message tLRPC$Message, boolean z, boolean z2) {
        if (tLRPC$Message == null) {
            return;
        }
        int i = tLRPC$Message.id;
        if (i > 0) {
            this.editingMessages.put(i, tLRPC$Message);
            return;
        }
        boolean z3 = this.sendingMessages.indexOfKey(i) >= 0;
        removeFromUploadingMessages(tLRPC$Message.id, z);
        this.sendingMessages.put(tLRPC$Message.id, tLRPC$Message);
        if (z || z3) {
            return;
        }
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        LongSparseArray<Integer> longSparseArray = this.sendingMessagesIdDialogs;
        longSparseArray.put(dialogId, Integer.valueOf(longSparseArray.get(dialogId, 0).intValue() + 1));
        if (z2) {
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public TLRPC$Message removeFromSendingMessages(int i, boolean z) {
        long dialogId;
        Integer num;
        if (i > 0) {
            TLRPC$Message tLRPC$Message = this.editingMessages.get(i);
            if (tLRPC$Message != null) {
                this.editingMessages.remove(i);
                return tLRPC$Message;
            }
            return tLRPC$Message;
        }
        TLRPC$Message tLRPC$Message2 = this.sendingMessages.get(i);
        if (tLRPC$Message2 != null) {
            this.sendingMessages.remove(i);
            if (!z && (num = this.sendingMessagesIdDialogs.get((dialogId = MessageObject.getDialogId(tLRPC$Message2)))) != null) {
                int intValue = num.intValue() - 1;
                if (intValue <= 0) {
                    this.sendingMessagesIdDialogs.remove(dialogId);
                } else {
                    this.sendingMessagesIdDialogs.put(dialogId, Integer.valueOf(intValue));
                }
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
            }
        }
        return tLRPC$Message2;
    }

    public int getSendingMessageId(long j) {
        for (int i = 0; i < this.sendingMessages.size(); i++) {
            TLRPC$Message valueAt = this.sendingMessages.valueAt(i);
            if (valueAt.dialog_id == j) {
                return valueAt.id;
            }
        }
        for (int i2 = 0; i2 < this.uploadMessages.size(); i2++) {
            TLRPC$Message valueAt2 = this.uploadMessages.valueAt(i2);
            if (valueAt2.dialog_id == j) {
                return valueAt2.id;
            }
        }
        return 0;
    }

    protected void putToUploadingMessages(MessageObject messageObject) {
        if (messageObject == null || messageObject.getId() > 0 || messageObject.scheduled) {
            return;
        }
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        boolean z = this.uploadMessages.indexOfKey(tLRPC$Message.id) >= 0;
        this.uploadMessages.put(tLRPC$Message.id, tLRPC$Message);
        if (z) {
            return;
        }
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        LongSparseArray<Integer> longSparseArray = this.uploadingMessagesIdDialogs;
        longSparseArray.put(dialogId, Integer.valueOf(longSparseArray.get(dialogId, 0).intValue() + 1));
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
    }

    protected void removeFromUploadingMessages(int i, boolean z) {
        TLRPC$Message tLRPC$Message;
        if (i > 0 || z || (tLRPC$Message = this.uploadMessages.get(i)) == null) {
            return;
        }
        this.uploadMessages.remove(i);
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        Integer num = this.uploadingMessagesIdDialogs.get(dialogId);
        if (num != null) {
            int intValue = num.intValue() - 1;
            if (intValue <= 0) {
                this.uploadingMessagesIdDialogs.remove(dialogId);
            } else {
                this.uploadingMessagesIdDialogs.put(dialogId, Integer.valueOf(intValue));
            }
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
        }
    }

    public boolean isSendingMessage(int i) {
        return this.sendingMessages.indexOfKey(i) >= 0 || this.editingMessages.indexOfKey(i) >= 0;
    }

    public boolean isSendingMessageIdDialog(long j) {
        return this.sendingMessagesIdDialogs.get(j, 0).intValue() > 0;
    }

    public boolean isUploadingMessageIdDialog(long j) {
        return this.uploadingMessagesIdDialogs.get(j, 0).intValue() > 0;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void performSendMessageRequestMulti(final TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia, final ArrayList<MessageObject> arrayList, final ArrayList<String> arrayList2, final ArrayList<Object> arrayList3, final DelayedMessage delayedMessage, final boolean z) {
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            putToSendingMessages(arrayList.get(i).messageOwner, z);
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMultiMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda85
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$45(arrayList3, tLRPC$TL_messages_sendMultiMedia, arrayList, arrayList2, delayedMessage, z, tLObject, tLRPC$TL_error);
            }
        }, (QuickAckDelegate) null, 68);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$45(ArrayList arrayList, final TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia, final ArrayList arrayList2, final ArrayList arrayList3, final DelayedMessage delayedMessage, final boolean z, final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error != null && FileRefController.isFileRefError(tLRPC$TL_error.text)) {
            if (arrayList != null) {
                ArrayList arrayList4 = new ArrayList(arrayList);
                getFileRefController().requestReference(arrayList4, tLRPC$TL_messages_sendMultiMedia, arrayList2, arrayList3, arrayList4, delayedMessage, Boolean.valueOf(z));
                return;
            } else if (delayedMessage != null && !delayedMessage.retriedToSend) {
                delayedMessage.retriedToSend = true;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda57
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequestMulti$37(tLRPC$TL_messages_sendMultiMedia, delayedMessage, arrayList2, z);
                    }
                });
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda52
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$44(tLRPC$TL_error, tLObject, arrayList2, arrayList3, z, tLRPC$TL_messages_sendMultiMedia);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$37(TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia, DelayedMessage delayedMessage, ArrayList arrayList, boolean z) {
        int size = tLRPC$TL_messages_sendMultiMedia.multi_media.size();
        boolean z2 = false;
        for (int i = 0; i < size; i++) {
            if (delayedMessage.parentObjects.get(i) != null) {
                removeFromSendingMessages(((MessageObject) arrayList.get(i)).getId(), z);
                TLRPC$TL_inputSingleMedia tLRPC$TL_inputSingleMedia = tLRPC$TL_messages_sendMultiMedia.multi_media.get(i);
                TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_inputSingleMedia.media;
                if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPhoto) {
                    tLRPC$TL_inputSingleMedia.media = delayedMessage.inputMedias.get(i);
                } else if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaDocument) {
                    tLRPC$TL_inputSingleMedia.media = delayedMessage.inputMedias.get(i);
                }
                delayedMessage.videoEditedInfo = delayedMessage.videoEditedInfos.get(i);
                delayedMessage.httpLocation = delayedMessage.httpLocations.get(i);
                TLRPC$PhotoSize tLRPC$PhotoSize = delayedMessage.locations.get(i);
                delayedMessage.photoSize = tLRPC$PhotoSize;
                delayedMessage.performMediaUpload = true;
                z2 = (tLRPC$TL_inputSingleMedia.media.file == null || tLRPC$PhotoSize != null) ? true : true;
                performSendDelayedMessage(delayedMessage, i);
            }
        }
        if (z2) {
            return;
        }
        for (int i2 = 0; i2 < arrayList.size(); i2++) {
            TLRPC$Message tLRPC$Message = ((MessageObject) arrayList.get(i2)).messageOwner;
            getMessagesStorage().markMessageAsSendError(tLRPC$Message, z ? 1 : 0);
            tLRPC$Message.send_state = 2;
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
            processSentMessage(tLRPC$Message.id);
            removeFromSendingMessages(tLRPC$Message.id, z);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$44(TLRPC$TL_error tLRPC$TL_error, TLObject tLObject, ArrayList arrayList, ArrayList arrayList2, final boolean z, TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia) {
        boolean z2;
        final TLRPC$Updates tLRPC$Updates;
        boolean z3;
        TLRPC$Message tLRPC$Message;
        TLRPC$Updates tLRPC$Updates2;
        int i;
        int i2;
        int i3;
        String quickReplyName;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        int i4;
        if (tLRPC$TL_error == null) {
            SparseArray sparseArray = new SparseArray();
            LongSparseArray longSparseArray = new LongSparseArray();
            TLRPC$Updates tLRPC$Updates3 = (TLRPC$Updates) tLObject;
            ArrayList<TLRPC$Update> arrayList3 = tLRPC$Updates3.updates;
            int i5 = 0;
            LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray2 = null;
            while (i5 < arrayList3.size()) {
                TLRPC$Update tLRPC$Update = arrayList3.get(i5);
                if (tLRPC$Update instanceof TLRPC$TL_updateMessageID) {
                    TLRPC$TL_updateMessageID tLRPC$TL_updateMessageID = (TLRPC$TL_updateMessageID) tLRPC$Update;
                    longSparseArray.put(tLRPC$TL_updateMessageID.random_id, Integer.valueOf(tLRPC$TL_updateMessageID.id));
                    arrayList3.remove(i5);
                } else if (tLRPC$Update instanceof TLRPC$TL_updateNewMessage) {
                    final TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update;
                    TLRPC$Message tLRPC$Message2 = tLRPC$TL_updateNewMessage.message;
                    sparseArray.put(tLRPC$Message2.id, tLRPC$Message2);
                    Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda63
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.this.lambda$performSendMessageRequestMulti$38(tLRPC$TL_updateNewMessage);
                        }
                    });
                    arrayList3.remove(i5);
                } else {
                    if (tLRPC$Update instanceof TLRPC$TL_updateNewChannelMessage) {
                        final TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update;
                        final long updateChannelId = MessagesController.getUpdateChannelId(tLRPC$TL_updateNewChannelMessage);
                        TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(updateChannelId));
                        if (!(chat == null || chat.megagroup) || (tLRPC$MessageReplyHeader = tLRPC$TL_updateNewChannelMessage.message.reply_to) == null || (tLRPC$MessageReplyHeader.reply_to_top_id == 0 && tLRPC$MessageReplyHeader.reply_to_msg_id == 0)) {
                            i4 = i5;
                        } else {
                            if (longSparseArray2 == null) {
                                longSparseArray2 = new LongSparseArray<>();
                            }
                            i4 = i5;
                            long dialogId = MessageObject.getDialogId(tLRPC$TL_updateNewChannelMessage.message);
                            SparseArray<TLRPC$MessageReplies> sparseArray2 = longSparseArray2.get(dialogId);
                            if (sparseArray2 == null) {
                                sparseArray2 = new SparseArray<>();
                                longSparseArray2.put(dialogId, sparseArray2);
                            }
                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2 = tLRPC$TL_updateNewChannelMessage.message.reply_to;
                            int i6 = tLRPC$MessageReplyHeader2.reply_to_top_id;
                            if (i6 == 0) {
                                i6 = tLRPC$MessageReplyHeader2.reply_to_msg_id;
                            }
                            TLRPC$MessageReplies tLRPC$MessageReplies = sparseArray2.get(i6);
                            if (tLRPC$MessageReplies == null) {
                                tLRPC$MessageReplies = new TLRPC$TL_messageReplies();
                                sparseArray2.put(i6, tLRPC$MessageReplies);
                            }
                            TLRPC$Peer tLRPC$Peer = tLRPC$TL_updateNewChannelMessage.message.from_id;
                            if (tLRPC$Peer != null) {
                                tLRPC$MessageReplies.recent_repliers.add(0, tLRPC$Peer);
                            }
                            tLRPC$MessageReplies.replies++;
                        }
                        TLRPC$Message tLRPC$Message3 = tLRPC$TL_updateNewChannelMessage.message;
                        sparseArray.put(tLRPC$Message3.id, tLRPC$Message3);
                        Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda60
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$39(tLRPC$TL_updateNewChannelMessage);
                            }
                        });
                        int i7 = i4;
                        arrayList3.remove(i7);
                        i2 = i7 - 1;
                        if (tLRPC$TL_updateNewChannelMessage.message.pinned) {
                            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda61
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$performSendMessageRequestMulti$40(tLRPC$TL_updateNewChannelMessage, updateChannelId);
                                }
                            });
                        }
                    } else {
                        int i8 = i5;
                        if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                            TLRPC$Message tLRPC$Message4 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                            sparseArray.put(tLRPC$Message4.id, tLRPC$Message4);
                            arrayList3.remove(i8);
                        } else if (tLRPC$Update instanceof TLRPC$TL_updateQuickReplyMessage) {
                            QuickRepliesController quickRepliesController = QuickRepliesController.getInstance(this.currentAccount);
                            if (arrayList.isEmpty()) {
                                i3 = 0;
                                quickReplyName = null;
                            } else {
                                i3 = 0;
                                quickReplyName = ((MessageObject) arrayList.get(0)).getQuickReplyName();
                            }
                            quickRepliesController.processUpdate(tLRPC$Update, quickReplyName, (arrayList.isEmpty() ? null : Integer.valueOf(((MessageObject) arrayList.get(i3)).getQuickReplyId())).intValue());
                            TLRPC$Message tLRPC$Message5 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update).message;
                            sparseArray.put(tLRPC$Message5.id, tLRPC$Message5);
                            arrayList3.remove(i8);
                        } else {
                            i2 = i8;
                        }
                        i2 = i8 - 1;
                    }
                    i5 = i2 + 1;
                }
                i2 = i5 - 1;
                i5 = i2 + 1;
            }
            if (longSparseArray2 != null) {
                getMessagesStorage().putChannelViews(null, null, longSparseArray2, true);
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.didUpdateMessagesViews, null, null, longSparseArray2, Boolean.TRUE);
            }
            int i9 = 0;
            while (i9 < arrayList.size()) {
                MessageObject messageObject = (MessageObject) arrayList.get(i9);
                String str = (String) arrayList2.get(i9);
                final TLRPC$Message tLRPC$Message6 = messageObject.messageOwner;
                final int i10 = tLRPC$Message6.id;
                final ArrayList arrayList4 = new ArrayList();
                Integer num = (Integer) longSparseArray.get(tLRPC$Message6.random_id);
                if (num == null || (tLRPC$Message = (TLRPC$Message) sparseArray.get(num.intValue())) == null) {
                    tLRPC$Updates = tLRPC$Updates3;
                    z3 = true;
                    break;
                }
                MessageObject.getDialogId(tLRPC$Message);
                arrayList4.add(tLRPC$Message);
                if ((tLRPC$Message.flags & ConnectionsManager.FileTypeVideo) != 0) {
                    TLRPC$Message tLRPC$Message7 = messageObject.messageOwner;
                    tLRPC$Message7.ttl_period = tLRPC$Message.ttl_period;
                    tLRPC$Message7.flags = 33554432 | tLRPC$Message7.flags;
                }
                updateMediaPaths(messageObject, tLRPC$Message, tLRPC$Message.id, str, false);
                final int mediaExistanceFlags = messageObject.getMediaExistanceFlags();
                tLRPC$Message6.id = tLRPC$Message.id;
                int i11 = tLRPC$Message.quick_reply_shortcut_id;
                tLRPC$Message6.quick_reply_shortcut_id = i11;
                if (i11 != 0) {
                    tLRPC$Message6.flags |= 1073741824;
                }
                final long j = tLRPC$Message.grouped_id;
                if (z) {
                    tLRPC$Updates2 = tLRPC$Updates3;
                    i = i9;
                } else {
                    Integer num2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message.dialog_id));
                    if (num2 == null) {
                        tLRPC$Updates2 = tLRPC$Updates3;
                        i = i9;
                        num2 = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message.out, tLRPC$Message.dialog_id));
                        getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message.dialog_id), num2);
                    } else {
                        tLRPC$Updates2 = tLRPC$Updates3;
                        i = i9;
                    }
                    tLRPC$Message.unread = num2.intValue() < tLRPC$Message.id;
                }
                getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                tLRPC$Message6.send_state = 0;
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i10), Integer.valueOf(tLRPC$Message6.id), tLRPC$Message6, Long.valueOf(tLRPC$Message6.dialog_id), Long.valueOf(j), Integer.valueOf(mediaExistanceFlags), Boolean.valueOf(z));
                getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda70
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequestMulti$42(z, tLRPC$Message6, i10, arrayList4, j, mediaExistanceFlags);
                    }
                });
                i9 = i + 1;
                sparseArray = sparseArray;
                tLRPC$Updates3 = tLRPC$Updates2;
                longSparseArray = longSparseArray;
            }
            tLRPC$Updates = tLRPC$Updates3;
            z3 = false;
            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda66
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequestMulti$43(tLRPC$Updates);
                }
            });
            z2 = z3;
        } else {
            AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLRPC$TL_messages_sendMultiMedia, new Object[0]);
            z2 = true;
        }
        if (z2) {
            for (int i12 = 0; i12 < arrayList.size(); i12++) {
                TLRPC$Message tLRPC$Message8 = ((MessageObject) arrayList.get(i12)).messageOwner;
                getMessagesStorage().markMessageAsSendError(tLRPC$Message8, z ? 1 : 0);
                tLRPC$Message8.send_state = 2;
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message8.id));
                processSentMessage(tLRPC$Message8.id);
                removeFromSendingMessages(tLRPC$Message8.id, z);
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$38(TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$39(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage) {
        getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$TL_updateNewChannelMessage.message.peer_id.channel_id);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$40(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage, long j) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        arrayList.add(Integer.valueOf(tLRPC$TL_updateNewChannelMessage.message.id));
        getMessagesStorage().updatePinnedMessages(-j, arrayList, true, -1, 0, false, null);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$42(final boolean z, final TLRPC$Message tLRPC$Message, final int i, ArrayList arrayList, final long j, final int i2) {
        int i3 = (tLRPC$Message.quick_reply_shortcut_id == 0 && tLRPC$Message.quick_reply_shortcut == null) ? z ? 1 : 0 : 5;
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message.random_id, MessageObject.getPeerId(tLRPC$Message.peer_id), Integer.valueOf(i), tLRPC$Message.id, 0, false, z ? 1 : 0, tLRPC$Message.quick_reply_shortcut_id);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, i3, tLRPC$Message.quick_reply_shortcut_id);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda47
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$41(tLRPC$Message, i, j, i2, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$41(TLRPC$Message tLRPC$Message, int i, long j, int i2, boolean z) {
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), Long.valueOf(j), Integer.valueOf(i2), Boolean.valueOf(z));
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$43(TLRPC$Updates tLRPC$Updates) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void performSendMessageRequest(TLObject tLObject, MessageObject messageObject, String str, DelayedMessage delayedMessage, Object obj, HashMap<String, String> hashMap, boolean z) {
        performSendMessageRequest(tLObject, messageObject, str, null, false, delayedMessage, obj, hashMap, z);
    }

    private DelayedMessage findMaxDelayedMessageForMessageId(int i, long j) {
        int i2;
        DelayedMessage delayedMessage = null;
        int i3 = Integer.MIN_VALUE;
        for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
            ArrayList<DelayedMessage> value = entry.getValue();
            int size = value.size();
            for (int i4 = 0; i4 < size; i4++) {
                DelayedMessage delayedMessage2 = value.get(i4);
                int i5 = delayedMessage2.type;
                if ((i5 == 4 || i5 == 0) && delayedMessage2.peer == j) {
                    MessageObject messageObject = delayedMessage2.obj;
                    if (messageObject != null) {
                        i2 = messageObject.getId();
                    } else {
                        ArrayList<MessageObject> arrayList = delayedMessage2.messageObjects;
                        if (arrayList == null || arrayList.isEmpty()) {
                            i2 = 0;
                        } else {
                            ArrayList<MessageObject> arrayList2 = delayedMessage2.messageObjects;
                            i2 = arrayList2.get(arrayList2.size() - 1).getId();
                        }
                    }
                    if (i2 != 0 && i2 > i && delayedMessage == null && i3 < i2) {
                        delayedMessage = delayedMessage2;
                        i3 = i2;
                    }
                }
            }
        }
        return delayedMessage;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void performSendMessageRequest(final TLObject tLObject, final MessageObject messageObject, final String str, final DelayedMessage delayedMessage, final boolean z, final DelayedMessage delayedMessage2, final Object obj, HashMap<String, String> hashMap, final boolean z2) {
        DelayedMessage findMaxDelayedMessageForMessageId;
        ArrayList<DelayedMessageSendAfterRequest> arrayList;
        if (!(tLObject instanceof TLRPC$TL_messages_editMessage) && z && (findMaxDelayedMessageForMessageId = findMaxDelayedMessageForMessageId(messageObject.getId(), messageObject.getDialogId())) != null) {
            findMaxDelayedMessageForMessageId.addDelayedRequest(tLObject, messageObject, str, obj, delayedMessage2, delayedMessage != null ? delayedMessage.scheduled : false);
            if (delayedMessage == null || (arrayList = delayedMessage.requests) == null) {
                return;
            }
            findMaxDelayedMessageForMessageId.requests.addAll(arrayList);
            return;
        }
        final TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        putToSendingMessages(tLRPC$Message, z2);
        tLRPC$Message.reqId = getConnectionsManager().sendRequest(tLObject, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject2, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$performSendMessageRequest$60(tLObject, obj, messageObject, str, delayedMessage, z, delayedMessage2, z2, tLRPC$Message, tLObject2, tLRPC$TL_error);
            }
        }, new QuickAckDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda79
            @Override // org.telegram.tgnet.QuickAckDelegate
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$62(tLRPC$Message);
            }
        }, (tLObject instanceof TLRPC$TL_messages_sendMessage ? 128 : 0) | 68);
        if (delayedMessage != null) {
            delayedMessage.sendDelayedRequests();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$60(final TLObject tLObject, Object obj, final MessageObject messageObject, final String str, DelayedMessage delayedMessage, boolean z, final DelayedMessage delayedMessage2, final boolean z2, final TLRPC$Message tLRPC$Message, final TLObject tLObject2, final TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error != null && (((tLObject instanceof TLRPC$TL_messages_sendMedia) || (tLObject instanceof TLRPC$TL_messages_editMessage)) && FileRefController.isFileRefError(tLRPC$TL_error.text))) {
            if (obj != null) {
                getFileRefController().requestReference(obj, tLObject, messageObject, str, delayedMessage, Boolean.valueOf(z), delayedMessage2, Boolean.valueOf(z2));
                return;
            } else if (delayedMessage2 != null) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda51
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequest$46(tLRPC$Message, z2, tLObject, delayedMessage2);
                    }
                });
                return;
            }
        }
        if (tLObject instanceof TLRPC$TL_messages_editMessage) {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda54
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequest$49(tLRPC$TL_error, tLRPC$Message, tLObject2, messageObject, str, z2, tLObject);
                }
            });
        } else {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda71
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequest$59(z2, tLRPC$TL_error, tLRPC$Message, tLObject2, messageObject, str, tLObject);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$46(TLRPC$Message tLRPC$Message, boolean z, TLObject tLObject, DelayedMessage delayedMessage) {
        removeFromSendingMessages(tLRPC$Message.id, z);
        if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
            TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = (TLRPC$TL_messages_sendMedia) tLObject;
            TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_messages_sendMedia.media;
            if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPhoto) {
                tLRPC$TL_messages_sendMedia.media = delayedMessage.inputUploadMedia;
            } else if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaDocument) {
                tLRPC$TL_messages_sendMedia.media = delayedMessage.inputUploadMedia;
            }
        } else if (tLObject instanceof TLRPC$TL_messages_editMessage) {
            TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = (TLRPC$TL_messages_editMessage) tLObject;
            TLRPC$InputMedia tLRPC$InputMedia2 = tLRPC$TL_messages_editMessage.media;
            if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaPhoto) {
                tLRPC$TL_messages_editMessage.media = delayedMessage.inputUploadMedia;
            } else if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaDocument) {
                tLRPC$TL_messages_editMessage.media = delayedMessage.inputUploadMedia;
            }
        }
        delayedMessage.performMediaUpload = true;
        performSendDelayedMessage(delayedMessage);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$49(TLRPC$TL_error tLRPC$TL_error, final TLRPC$Message tLRPC$Message, TLObject tLObject, MessageObject messageObject, String str, final boolean z, TLObject tLObject2) {
        int i = 0;
        TLRPC$Message tLRPC$Message2 = null;
        if (tLRPC$TL_error == null) {
            String str2 = tLRPC$Message.attachPath;
            final TLRPC$Updates tLRPC$Updates = (TLRPC$Updates) tLObject;
            ArrayList<TLRPC$Update> arrayList = tLRPC$Updates.updates;
            while (true) {
                if (i >= arrayList.size()) {
                    break;
                }
                TLRPC$Update tLRPC$Update = arrayList.get(i);
                if (tLRPC$Update instanceof TLRPC$TL_updateEditMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateEditMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateEditChannelMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateEditChannelMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateQuickReplyMessage) {
                    QuickRepliesController.getInstance(this.currentAccount).processUpdate(tLRPC$Update, MessageObject.getQuickReplyName(tLRPC$Message), MessageObject.getQuickReplyId(tLRPC$Message));
                    tLRPC$Message2 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update).message;
                    break;
                } else {
                    i++;
                }
            }
            TLRPC$Message tLRPC$Message3 = tLRPC$Message2;
            if (tLRPC$Message3 != null) {
                ImageLoader.saveMessageThumbs(tLRPC$Message3);
                updateMediaPaths(messageObject, tLRPC$Message3, tLRPC$Message3.id, str, false);
            }
            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda68
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequest$48(tLRPC$Updates, tLRPC$Message, z);
                }
            });
            return;
        }
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLObject2, new Object[0]);
        removeFromSendingMessages(tLRPC$Message.id, z);
        revertEditingMessageObject(messageObject);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$48(TLRPC$Updates tLRPC$Updates, final TLRPC$Message tLRPC$Message, final boolean z) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda50
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$47(tLRPC$Message, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$47(TLRPC$Message tLRPC$Message, boolean z) {
        processSentMessage(tLRPC$Message.id);
        removeFromSendingMessages(tLRPC$Message.id, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Code restructure failed: missing block: B:44:0x0115, code lost:
        r11 = r10;
        r10 = null;
     */
    /* JADX WARN: Removed duplicated region for block: B:129:0x0320  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$performSendMessageRequest$59(final boolean z, TLRPC$TL_error tLRPC$TL_error, final TLRPC$Message tLRPC$Message, TLObject tLObject, final MessageObject messageObject, String str, TLObject tLObject2) {
        boolean z2;
        boolean z3;
        int i;
        LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray;
        TLRPC$Message tLRPC$Message2;
        boolean z4;
        boolean z5;
        int i2;
        boolean z6;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray2;
        TLRPC$Message tLRPC$Message3;
        if (tLRPC$TL_error == null) {
            final int i3 = tLRPC$Message.id;
            final ArrayList arrayList = new ArrayList();
            boolean z7 = tLRPC$Message.date == 2147483646;
            if (tLObject instanceof TLRPC$TL_updateShortSentMessage) {
                final TLRPC$TL_updateShortSentMessage tLRPC$TL_updateShortSentMessage = (TLRPC$TL_updateShortSentMessage) tLObject;
                updateMediaPaths(messageObject, null, tLRPC$TL_updateShortSentMessage.id, null, false);
                int mediaExistanceFlags = messageObject.getMediaExistanceFlags();
                int i4 = tLRPC$TL_updateShortSentMessage.id;
                tLRPC$Message.id = i4;
                tLRPC$Message.local_id = i4;
                tLRPC$Message.date = tLRPC$TL_updateShortSentMessage.date;
                tLRPC$Message.entities = tLRPC$TL_updateShortSentMessage.entities;
                tLRPC$Message.out = tLRPC$TL_updateShortSentMessage.out;
                if ((tLRPC$TL_updateShortSentMessage.flags & ConnectionsManager.FileTypeVideo) != 0) {
                    tLRPC$Message.ttl_period = tLRPC$TL_updateShortSentMessage.ttl_period;
                    tLRPC$Message.flags |= ConnectionsManager.FileTypeVideo;
                }
                TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$TL_updateShortSentMessage.media;
                if (tLRPC$MessageMedia != null) {
                    tLRPC$Message.media = tLRPC$MessageMedia;
                    tLRPC$Message.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                    ImageLoader.saveMessageThumbs(tLRPC$Message);
                }
                TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$TL_updateShortSentMessage.media;
                if (((tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaGame) || (tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaInvoice)) && !TextUtils.isEmpty(tLRPC$TL_updateShortSentMessage.message)) {
                    tLRPC$Message.message = tLRPC$TL_updateShortSentMessage.message;
                }
                if (!tLRPC$Message.entities.isEmpty()) {
                    tLRPC$Message.flags |= 128;
                }
                Integer num = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message.dialog_id));
                if (num == null) {
                    num = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message.out, tLRPC$Message.dialog_id));
                    getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message.dialog_id), num);
                }
                tLRPC$Message.unread = num.intValue() < tLRPC$Message.id;
                Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda65
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequest$50(tLRPC$TL_updateShortSentMessage);
                    }
                });
                arrayList.add(tLRPC$Message);
                i = mediaExistanceFlags;
                z3 = false;
            } else if (tLObject instanceof TLRPC$Updates) {
                final TLRPC$Updates tLRPC$Updates = (TLRPC$Updates) tLObject;
                ArrayList<TLRPC$Update> arrayList2 = tLRPC$Updates.updates;
                int i5 = 0;
                while (true) {
                    if (i5 >= arrayList2.size()) {
                        longSparseArray = null;
                        tLRPC$Message2 = null;
                        break;
                    }
                    TLRPC$Update tLRPC$Update = arrayList2.get(i5);
                    if (tLRPC$Update instanceof TLRPC$TL_updateNewMessage) {
                        final TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update;
                        tLRPC$Message3 = tLRPC$TL_updateNewMessage.message;
                        if (tLRPC$Message3.action == null) {
                            arrayList.add(tLRPC$Message3);
                            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda64
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$performSendMessageRequest$51(tLRPC$TL_updateNewMessage);
                                }
                            });
                            arrayList2.remove(i5);
                            break;
                        }
                    }
                    if (tLRPC$Update instanceof TLRPC$TL_updateNewChannelMessage) {
                        final TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update;
                        final long updateChannelId = MessagesController.getUpdateChannelId(tLRPC$TL_updateNewChannelMessage);
                        TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(updateChannelId));
                        if (!(chat == null || chat.megagroup) || (tLRPC$MessageReplyHeader = tLRPC$TL_updateNewChannelMessage.message.reply_to) == null || (tLRPC$MessageReplyHeader.reply_to_top_id == 0 && tLRPC$MessageReplyHeader.reply_to_msg_id == 0)) {
                            longSparseArray = null;
                        } else {
                            LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray3 = new LongSparseArray<>();
                            long dialogId = MessageObject.getDialogId(tLRPC$TL_updateNewChannelMessage.message);
                            SparseArray<TLRPC$MessageReplies> sparseArray = longSparseArray3.get(dialogId);
                            if (sparseArray == null) {
                                sparseArray = new SparseArray<>();
                                longSparseArray3.put(dialogId, sparseArray);
                            }
                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2 = tLRPC$TL_updateNewChannelMessage.message.reply_to;
                            int i6 = tLRPC$MessageReplyHeader2.reply_to_top_id;
                            if (i6 == 0) {
                                i6 = tLRPC$MessageReplyHeader2.reply_to_msg_id;
                            }
                            TLRPC$MessageReplies tLRPC$MessageReplies = sparseArray.get(i6);
                            if (tLRPC$MessageReplies == null) {
                                tLRPC$MessageReplies = new TLRPC$TL_messageReplies();
                                sparseArray.put(i6, tLRPC$MessageReplies);
                            }
                            TLRPC$Peer tLRPC$Peer = tLRPC$TL_updateNewChannelMessage.message.from_id;
                            if (tLRPC$Peer != null) {
                                longSparseArray2 = longSparseArray3;
                                tLRPC$MessageReplies.recent_repliers.add(0, tLRPC$Peer);
                            } else {
                                longSparseArray2 = longSparseArray3;
                            }
                            tLRPC$MessageReplies.replies++;
                            longSparseArray = longSparseArray2;
                        }
                        tLRPC$Message2 = tLRPC$TL_updateNewChannelMessage.message;
                        arrayList.add(tLRPC$Message2);
                        Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda59
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$performSendMessageRequest$52(tLRPC$TL_updateNewChannelMessage);
                            }
                        });
                        arrayList2.remove(i5);
                        if (tLRPC$TL_updateNewChannelMessage.message.pinned) {
                            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda62
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$performSendMessageRequest$53(tLRPC$TL_updateNewChannelMessage, updateChannelId);
                                }
                            });
                        }
                    } else if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                        tLRPC$Message3 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                        arrayList.add(tLRPC$Message3);
                        arrayList2.remove(i5);
                        break;
                    } else if (tLRPC$Update instanceof TLRPC$TL_updateQuickReplyMessage) {
                        QuickRepliesController.getInstance(this.currentAccount).processUpdate(tLRPC$Update, messageObject.getQuickReplyName(), messageObject.getQuickReplyId());
                        tLRPC$Message3 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update).message;
                        arrayList.add(tLRPC$Message3);
                        arrayList2.remove(i5);
                        break;
                    } else {
                        i5++;
                    }
                }
                if (longSparseArray != null) {
                    getMessagesStorage().putChannelViews(null, null, longSparseArray, true);
                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.didUpdateMessagesViews, null, null, longSparseArray, Boolean.TRUE);
                }
                if (tLRPC$Message2 != null) {
                    MessageObject.getDialogId(tLRPC$Message2);
                    z4 = (!z7 || tLRPC$Message2.date == 2147483646) ? z ? 1 : 0 : false;
                    ImageLoader.saveMessageThumbs(tLRPC$Message2);
                    if (!z4) {
                        Integer num2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message2.dialog_id));
                        if (num2 == null) {
                            num2 = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message2.out, tLRPC$Message2.dialog_id));
                            getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message2.dialog_id), num2);
                        }
                        tLRPC$Message2.unread = num2.intValue() < tLRPC$Message2.id;
                    }
                    TLRPC$Message tLRPC$Message4 = messageObject.messageOwner;
                    tLRPC$Message4.post_author = tLRPC$Message2.post_author;
                    if ((tLRPC$Message2.flags & ConnectionsManager.FileTypeVideo) != 0) {
                        tLRPC$Message4.ttl_period = tLRPC$Message2.ttl_period;
                        tLRPC$Message4.flags |= ConnectionsManager.FileTypeVideo;
                    }
                    tLRPC$Message4.entities = tLRPC$Message2.entities;
                    int i7 = tLRPC$Message2.quick_reply_shortcut_id;
                    tLRPC$Message4.quick_reply_shortcut_id = i7;
                    if (i7 != 0) {
                        tLRPC$Message4.flags |= 1073741824;
                    }
                    updateMediaPaths(messageObject, tLRPC$Message2, tLRPC$Message2.id, str, false);
                    int mediaExistanceFlags2 = messageObject.getMediaExistanceFlags();
                    tLRPC$Message.id = tLRPC$Message2.id;
                    i2 = mediaExistanceFlags2;
                    z5 = false;
                } else {
                    if (BuildVars.LOGS_ENABLED) {
                        StringBuilder sb = new StringBuilder();
                        for (int i8 = 0; i8 < arrayList2.size(); i8++) {
                            sb.append(arrayList2.get(i8).getClass().getSimpleName());
                            sb.append(", ");
                        }
                        FileLog.d("can't find message in updates " + ((Object) sb));
                    }
                    z4 = z ? 1 : 0;
                    z5 = true;
                    i2 = 0;
                }
                Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda67
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequest$54(tLRPC$Updates);
                    }
                });
                z6 = z5;
                z3 = z4;
                i = i2;
                if (MessageObject.isLiveLocationMessage(tLRPC$Message) && tLRPC$Message.via_bot_id == 0 && TextUtils.isEmpty(tLRPC$Message.via_bot_name)) {
                    getLocationController().addSharingLocation(tLRPC$Message);
                }
                if (!z6) {
                    getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                    tLRPC$Message.send_state = 0;
                    if (z && !z3) {
                        ArrayList<Integer> arrayList3 = new ArrayList<>();
                        arrayList3.add(Integer.valueOf(i3));
                        getMessagesController().deleteMessages(arrayList3, null, null, tLRPC$Message.dialog_id, 0, false, 1);
                        getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda34
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$performSendMessageRequest$56(arrayList, messageObject, tLRPC$Message, i3, z);
                            }
                        });
                    } else {
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i3), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), 0L, Integer.valueOf(i), Boolean.valueOf(z));
                        final int i9 = i;
                        getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda69
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$performSendMessageRequest$58(z, tLRPC$Message, i3, arrayList, i9);
                            }
                        });
                    }
                }
                z2 = z6;
            } else {
                z3 = z ? 1 : 0;
                i = 0;
            }
            z6 = false;
            if (MessageObject.isLiveLocationMessage(tLRPC$Message)) {
                getLocationController().addSharingLocation(tLRPC$Message);
            }
            if (!z6) {
            }
            z2 = z6;
        } else {
            AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLObject2, new Object[0]);
            z2 = true;
        }
        if (z2) {
            getMessagesStorage().markMessageAsSendError(tLRPC$Message, z ? 1 : 0);
            tLRPC$Message.send_state = 2;
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
            processSentMessage(tLRPC$Message.id);
            removeFromSendingMessages(tLRPC$Message.id, z);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$50(TLRPC$TL_updateShortSentMessage tLRPC$TL_updateShortSentMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateShortSentMessage.pts, tLRPC$TL_updateShortSentMessage.date, tLRPC$TL_updateShortSentMessage.pts_count);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$51(TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$52(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage) {
        getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$TL_updateNewChannelMessage.message.peer_id.channel_id);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$53(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage, long j) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        arrayList.add(Integer.valueOf(tLRPC$TL_updateNewChannelMessage.message.id));
        getMessagesStorage().updatePinnedMessages(-j, arrayList, true, -1, 0, false, null);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$54(TLRPC$Updates tLRPC$Updates) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$56(ArrayList arrayList, final MessageObject messageObject, final TLRPC$Message tLRPC$Message, final int i, final boolean z) {
        getMessagesStorage().putMessages(arrayList, true, false, false, 0, false, 0, 0L);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda37
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$55(messageObject, tLRPC$Message, i, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$55(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, boolean z) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(new MessageObject(messageObject.currentAccount, messageObject.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message.dialog_id, arrayList, 0);
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$58(final boolean z, final TLRPC$Message tLRPC$Message, final int i, ArrayList arrayList, final int i2) {
        int i3 = (tLRPC$Message.quick_reply_shortcut_id == 0 && tLRPC$Message.quick_reply_shortcut == null) ? z ? 1 : 0 : 5;
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message.random_id, MessageObject.getPeerId(tLRPC$Message.peer_id), Integer.valueOf(i), tLRPC$Message.id, 0, false, z ? 1 : 0, tLRPC$Message.quick_reply_shortcut_id);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, i3, tLRPC$Message.quick_reply_shortcut_id);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda46
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$57(tLRPC$Message, i, i2, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$57(TLRPC$Message tLRPC$Message, int i, int i2, boolean z) {
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), 0L, Integer.valueOf(i2), Boolean.valueOf(z));
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$62(final TLRPC$Message tLRPC$Message) {
        final int i = tLRPC$Message.id;
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda45
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$61(tLRPC$Message, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$61(TLRPC$Message tLRPC$Message, int i) {
        tLRPC$Message.send_state = 0;
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByAck, Integer.valueOf(i));
    }

    /* JADX WARN: Removed duplicated region for block: B:144:0x02fa  */
    /* JADX WARN: Removed duplicated region for block: B:72:0x00fd  */
    /* JADX WARN: Removed duplicated region for block: B:73:0x0111  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void updateMediaPaths(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, String str, boolean z) {
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$FileLocation tLRPC$FileLocation;
        byte[] bArr;
        boolean z2;
        String str2;
        TLRPC$FileLocation tLRPC$FileLocation2;
        VideoEditedInfo videoEditedInfo;
        boolean z3;
        String str3;
        File file;
        TLRPC$PhotoSize closestPhotoSizeWithSize;
        TLObject tLObject;
        TLRPC$MessageMedia tLRPC$MessageMedia;
        TLRPC$WebPage tLRPC$WebPage;
        TLRPC$Document tLRPC$Document;
        TLRPC$MessageMedia tLRPC$MessageMedia2;
        TLRPC$WebPage tLRPC$WebPage2;
        TLRPC$Photo tLRPC$Photo;
        TLRPC$MessageMedia tLRPC$MessageMedia3;
        TLRPC$Document tLRPC$Document2;
        TLRPC$MessageMedia tLRPC$MessageMedia4;
        TLRPC$Photo tLRPC$Photo2;
        TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
        TLRPC$MessageMedia tLRPC$MessageMedia5 = tLRPC$Message2.media;
        if (tLRPC$MessageMedia5 != null) {
            if (tLRPC$MessageMedia5.storyItem != null) {
                tLRPC$Message.media = tLRPC$MessageMedia5;
            } else {
                if (messageObject.isLiveLocation()) {
                    TLRPC$MessageMedia tLRPC$MessageMedia6 = tLRPC$Message.media;
                    if (tLRPC$MessageMedia6 instanceof TLRPC$TL_messageMediaGeoLive) {
                        tLRPC$Message2.media.period = tLRPC$MessageMedia6.period;
                    }
                }
                if (messageObject.isDice()) {
                    ((TLRPC$TL_messageMediaDice) tLRPC$Message2.media).value = ((TLRPC$TL_messageMediaDice) tLRPC$Message.media).value;
                } else {
                    TLRPC$MessageMedia tLRPC$MessageMedia7 = tLRPC$Message2.media;
                    TLRPC$Photo tLRPC$Photo3 = tLRPC$MessageMedia7.photo;
                    if (tLRPC$Photo3 != null) {
                        closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo3.sizes, 40);
                        tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia4 = tLRPC$Message.media) == null || (tLRPC$Photo2 = tLRPC$MessageMedia4.photo) == null) ? closestPhotoSizeWithSize : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo2.sizes, 40);
                        tLObject = tLRPC$Message2.media.photo;
                    } else {
                        TLRPC$Document tLRPC$Document3 = tLRPC$MessageMedia7.document;
                        if (tLRPC$Document3 != null) {
                            closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document3.thumbs, 40);
                            tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia3 = tLRPC$Message.media) == null || (tLRPC$Document2 = tLRPC$MessageMedia3.document) == null) ? closestPhotoSizeWithSize : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document2.thumbs, 40);
                            tLObject = tLRPC$Message2.media.document;
                        } else {
                            TLRPC$WebPage tLRPC$WebPage3 = tLRPC$MessageMedia7.webpage;
                            if (tLRPC$WebPage3 != null) {
                                TLRPC$Photo tLRPC$Photo4 = tLRPC$WebPage3.photo;
                                if (tLRPC$Photo4 != null) {
                                    closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo4.sizes, 40);
                                    tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia2 = tLRPC$Message.media) == null || (tLRPC$WebPage2 = tLRPC$MessageMedia2.webpage) == null || (tLRPC$Photo = tLRPC$WebPage2.photo) == null) ? closestPhotoSizeWithSize : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo.sizes, 40);
                                    tLObject = tLRPC$Message2.media.webpage.photo;
                                } else {
                                    TLRPC$Document tLRPC$Document4 = tLRPC$WebPage3.document;
                                    if (tLRPC$Document4 != null) {
                                        closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document4.thumbs, 40);
                                        tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia = tLRPC$Message.media) == null || (tLRPC$WebPage = tLRPC$MessageMedia.webpage) == null || (tLRPC$Document = tLRPC$WebPage.document) == null) ? closestPhotoSizeWithSize : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 40);
                                        tLObject = tLRPC$Message2.media.webpage.document;
                                    }
                                }
                            }
                        }
                    }
                    if ((tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) && (closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize)) {
                        ImageLoader.getInstance().replaceImageInCache("stripped" + FileRefController.getKeyForParentObject(messageObject), tLRPC$Message == null ? "stripped" + FileRefController.getKeyForParentObject(tLRPC$Message) : "strippedmessage" + i + "_" + messageObject.getChannelId() + "_" + messageObject.scheduled, ImageLocation.getForObject(tLRPC$PhotoSize, tLObject), z);
                    }
                }
            }
            closestPhotoSizeWithSize = null;
            tLRPC$PhotoSize = null;
            tLObject = null;
            if (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) {
                if (tLRPC$Message == null) {
                }
                ImageLoader.getInstance().replaceImageInCache("stripped" + FileRefController.getKeyForParentObject(messageObject), tLRPC$Message == null ? "stripped" + FileRefController.getKeyForParentObject(tLRPC$Message) : "strippedmessage" + i + "_" + messageObject.getChannelId() + "_" + messageObject.scheduled, ImageLocation.getForObject(tLRPC$PhotoSize, tLObject), z);
            }
        } else {
            tLRPC$PhotoSize = null;
        }
        if (tLRPC$Message == null) {
            return;
        }
        TLRPC$MessageMedia tLRPC$MessageMedia8 = tLRPC$Message.media;
        int i2 = 1;
        if ((tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaPhoto) && tLRPC$MessageMedia8.photo != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia9 = tLRPC$Message2.media;
            if ((tLRPC$MessageMedia9 instanceof TLRPC$TL_messageMediaPhoto) && tLRPC$MessageMedia9.photo != null) {
                if (tLRPC$MessageMedia8.ttl_seconds == 0 && !messageObject.scheduled) {
                    getMessagesStorage().putSentFile(str, tLRPC$Message.media.photo, 0, "sent_" + tLRPC$Message.peer_id.channel_id + "_" + tLRPC$Message.id + "_" + DialogObject.getPeerDialogId(tLRPC$Message.peer_id) + "_1_" + messageObject.getSize());
                }
                if (tLRPC$Message2.media.photo.sizes.size() == 1 && (tLRPC$Message2.media.photo.sizes.get(0).location instanceof TLRPC$TL_fileLocationUnavailable)) {
                    tLRPC$Message2.media.photo.sizes = tLRPC$Message.media.photo.sizes;
                } else {
                    int i3 = 0;
                    while (i3 < tLRPC$Message2.media.photo.sizes.size()) {
                        TLRPC$PhotoSize tLRPC$PhotoSize2 = tLRPC$Message2.media.photo.sizes.get(i3);
                        if (tLRPC$PhotoSize2 != null && tLRPC$PhotoSize2.location != null && tLRPC$PhotoSize2.type != null) {
                            int i4 = 0;
                            while (i4 < tLRPC$Message.media.photo.sizes.size()) {
                                TLRPC$PhotoSize tLRPC$PhotoSize3 = tLRPC$Message.media.photo.sizes.get(i4);
                                if (tLRPC$PhotoSize3 == null || tLRPC$PhotoSize3.location == null || (tLRPC$PhotoSize3 instanceof TLRPC$TL_photoSizeEmpty) || (str3 = tLRPC$PhotoSize3.type) == null || !((tLRPC$PhotoSize2.location.volume_id == -2147483648L && str3.equals(tLRPC$PhotoSize2.type)) || (tLRPC$PhotoSize3.w == tLRPC$PhotoSize2.w && tLRPC$PhotoSize3.h == tLRPC$PhotoSize2.h))) {
                                    i4++;
                                    i2 = 1;
                                } else {
                                    String str4 = tLRPC$PhotoSize2.location.volume_id + "_" + tLRPC$PhotoSize2.location.local_id;
                                    String str5 = tLRPC$PhotoSize3.location.volume_id + "_" + tLRPC$PhotoSize3.location.local_id;
                                    if (!str4.equals(str5)) {
                                        File file2 = new File(FileLoader.getDirectory(4), str4 + ".jpg");
                                        TLRPC$MessageMedia tLRPC$MessageMedia10 = tLRPC$Message.media;
                                        if (tLRPC$MessageMedia10.ttl_seconds == 0 && (tLRPC$MessageMedia10.photo.sizes.size() == i2 || tLRPC$PhotoSize3.w > 90 || tLRPC$PhotoSize3.h > 90)) {
                                            file = FileLoader.getInstance(this.currentAccount).getPathToAttach(tLRPC$PhotoSize3);
                                        } else {
                                            file = new File(FileLoader.getDirectory(4), str5 + ".jpg");
                                        }
                                        file2.renameTo(file);
                                        ImageLoader.getInstance().replaceImageInCache(str4, str5, ImageLocation.getForPhoto(tLRPC$PhotoSize3, tLRPC$Message.media.photo), z);
                                        tLRPC$PhotoSize2.location = tLRPC$PhotoSize3.location;
                                        tLRPC$PhotoSize2.size = tLRPC$PhotoSize3.size;
                                    }
                                    z3 = true;
                                    if (!z3) {
                                        String str6 = tLRPC$PhotoSize2.location.volume_id + "_" + tLRPC$PhotoSize2.location.local_id;
                                        new File(FileLoader.getDirectory(4), str6 + ".jpg").delete();
                                        if ("s".equals(tLRPC$PhotoSize2.type) && tLRPC$PhotoSize != null) {
                                            tLRPC$Message2.media.photo.sizes.set(i3, tLRPC$PhotoSize);
                                            ImageLocation forPhoto = ImageLocation.getForPhoto(tLRPC$PhotoSize, tLRPC$Message.media.photo);
                                            ImageLoader.getInstance().replaceImageInCache(str6, forPhoto.getKey(tLRPC$Message, null, false), forPhoto, z);
                                            i3++;
                                            i2 = 1;
                                        }
                                    }
                                }
                            }
                            z3 = false;
                            if (!z3) {
                            }
                        }
                        i3++;
                        i2 = 1;
                    }
                }
                tLRPC$Message2.message = tLRPC$Message.message;
                tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                TLRPC$Photo tLRPC$Photo5 = tLRPC$Message2.media.photo;
                TLRPC$Photo tLRPC$Photo6 = tLRPC$Message.media.photo;
                tLRPC$Photo5.id = tLRPC$Photo6.id;
                tLRPC$Photo5.dc_id = tLRPC$Photo6.dc_id;
                tLRPC$Photo5.access_hash = tLRPC$Photo6.access_hash;
                return;
            }
        }
        if ((tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaDocument) && tLRPC$MessageMedia8.document != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia11 = tLRPC$Message2.media;
            if ((tLRPC$MessageMedia11 instanceof TLRPC$TL_messageMediaDocument) && tLRPC$MessageMedia11.document != null) {
                if (tLRPC$MessageMedia8.ttl_seconds == 0 && ((videoEditedInfo = messageObject.videoEditedInfo) == null || (videoEditedInfo.mediaEntities == null && TextUtils.isEmpty(videoEditedInfo.paintPath) && messageObject.videoEditedInfo.cropState == null))) {
                    boolean isVideoMessage = MessageObject.isVideoMessage(tLRPC$Message);
                    if ((isVideoMessage || MessageObject.isGifMessage(tLRPC$Message)) && MessageObject.isGifDocument(tLRPC$Message.media.document) == MessageObject.isGifDocument(tLRPC$Message2.media.document)) {
                        if (!messageObject.scheduled) {
                            MessageObject messageObject2 = new MessageObject(this.currentAccount, tLRPC$Message, false, false);
                            getMessagesStorage().putSentFile(str, tLRPC$Message.media.document, 2, "sent_" + tLRPC$Message.peer_id.channel_id + "_" + tLRPC$Message.id + "_" + DialogObject.getPeerDialogId(tLRPC$Message.peer_id) + "_" + messageObject2.type + "_" + messageObject2.getSize());
                        }
                        if (isVideoMessage) {
                            tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                        }
                    } else if (!MessageObject.isVoiceMessage(tLRPC$Message) && !MessageObject.isRoundVideoMessage(tLRPC$Message) && !messageObject.scheduled) {
                        MessageObject messageObject3 = new MessageObject(this.currentAccount, tLRPC$Message, false, false);
                        getMessagesStorage().putSentFile(str, tLRPC$Message.media.document, 1, "sent_" + tLRPC$Message.peer_id.channel_id + "_" + tLRPC$Message.id + "_" + DialogObject.getPeerDialogId(tLRPC$Message.peer_id) + "_" + messageObject3.type + "_" + messageObject3.getSize());
                    }
                }
                TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Message2.media.document.thumbs, 320);
                TLRPC$PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Message.media.document.thumbs, 320);
                if (closestPhotoSizeWithSize2 != null && (tLRPC$FileLocation2 = closestPhotoSizeWithSize2.location) != null && tLRPC$FileLocation2.volume_id == -2147483648L && closestPhotoSizeWithSize3 != null && closestPhotoSizeWithSize3.location != null && !(closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoSizeEmpty) && !(closestPhotoSizeWithSize2 instanceof TLRPC$TL_photoSizeEmpty)) {
                    String str7 = closestPhotoSizeWithSize2.location.volume_id + "_" + closestPhotoSizeWithSize2.location.local_id;
                    String str8 = closestPhotoSizeWithSize3.location.volume_id + "_" + closestPhotoSizeWithSize3.location.local_id;
                    if (!str7.equals(str8)) {
                        new File(FileLoader.getDirectory(4), str7 + ".jpg").renameTo(new File(FileLoader.getDirectory(4), str8 + ".jpg"));
                        ImageLoader.getInstance().replaceImageInCache(str7, str8, ImageLocation.getForDocument(closestPhotoSizeWithSize3, tLRPC$Message.media.document), z);
                        closestPhotoSizeWithSize2.location = closestPhotoSizeWithSize3.location;
                        closestPhotoSizeWithSize2.size = closestPhotoSizeWithSize3.size;
                    }
                } else if (closestPhotoSizeWithSize3 != null && closestPhotoSizeWithSize2 != null && MessageObject.isStickerMessage(tLRPC$Message) && (tLRPC$FileLocation = closestPhotoSizeWithSize2.location) != null) {
                    closestPhotoSizeWithSize3.location = tLRPC$FileLocation;
                } else if (closestPhotoSizeWithSize2 == null || (closestPhotoSizeWithSize2.location instanceof TLRPC$TL_fileLocationUnavailable) || (closestPhotoSizeWithSize2 instanceof TLRPC$TL_photoSizeEmpty)) {
                    tLRPC$Message2.media.document.thumbs = tLRPC$Message.media.document.thumbs;
                }
                TLRPC$Document tLRPC$Document5 = tLRPC$Message2.media.document;
                TLRPC$Document tLRPC$Document6 = tLRPC$Message.media.document;
                tLRPC$Document5.dc_id = tLRPC$Document6.dc_id;
                tLRPC$Document5.id = tLRPC$Document6.id;
                tLRPC$Document5.access_hash = tLRPC$Document6.access_hash;
                int i5 = 0;
                while (true) {
                    if (i5 >= tLRPC$Message2.media.document.attributes.size()) {
                        bArr = null;
                        break;
                    }
                    TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$Message2.media.document.attributes.get(i5);
                    if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeAudio) {
                        bArr = tLRPC$DocumentAttribute.waveform;
                        break;
                    }
                    i5++;
                }
                tLRPC$Message2.media.document.attributes = tLRPC$Message.media.document.attributes;
                if (bArr != null) {
                    for (int i6 = 0; i6 < tLRPC$Message2.media.document.attributes.size(); i6++) {
                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = tLRPC$Message2.media.document.attributes.get(i6);
                        if (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeAudio) {
                            tLRPC$DocumentAttribute2.waveform = bArr;
                            tLRPC$DocumentAttribute2.flags |= 4;
                        }
                    }
                }
                TLRPC$Document tLRPC$Document7 = tLRPC$Message2.media.document;
                TLRPC$Document tLRPC$Document8 = tLRPC$Message.media.document;
                tLRPC$Document7.size = tLRPC$Document8.size;
                tLRPC$Document7.mime_type = tLRPC$Document8.mime_type;
                if ((tLRPC$Message.flags & 4) == 0 && MessageObject.isOut(tLRPC$Message) && !MessageObject.isQuickReply(tLRPC$Message)) {
                    if (MessageObject.isNewGifDocument(tLRPC$Message.media.document)) {
                        if (MessageObject.isDocumentHasAttachedStickers(tLRPC$Message.media.document) ? getMessagesController().saveGifsWithStickers : true) {
                            getMediaDataController().addRecentGif(tLRPC$Message.media.document, tLRPC$Message.date, true);
                        }
                    } else if (MessageObject.isStickerDocument(tLRPC$Message.media.document) || MessageObject.isAnimatedStickerDocument(tLRPC$Message.media.document, true)) {
                        z2 = true;
                        getMediaDataController().addRecentSticker(0, tLRPC$Message, tLRPC$Message.media.document, tLRPC$Message.date, false);
                        str2 = tLRPC$Message2.attachPath;
                        if (str2 == null && str2.startsWith(FileLoader.getDirectory(4).getAbsolutePath()) && !MessageObject.isGifDocument(tLRPC$Message.media.document)) {
                            File file3 = new File(tLRPC$Message2.attachPath);
                            FileLoader fileLoader = FileLoader.getInstance(this.currentAccount);
                            TLRPC$MessageMedia tLRPC$MessageMedia12 = tLRPC$Message.media;
                            File pathToAttach = fileLoader.getPathToAttach(tLRPC$MessageMedia12.document, tLRPC$MessageMedia12.ttl_seconds != 0);
                            if (!file3.renameTo(pathToAttach)) {
                                if (file3.exists()) {
                                    tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                                } else {
                                    messageObject.attachPathExists = false;
                                }
                                messageObject.mediaExists = pathToAttach.exists();
                                tLRPC$Message.message = tLRPC$Message2.message;
                                return;
                            } else if (MessageObject.isVideoMessage(tLRPC$Message)) {
                                messageObject.attachPathExists = z2;
                                return;
                            } else {
                                messageObject.mediaExists = messageObject.attachPathExists;
                                messageObject.attachPathExists = false;
                                tLRPC$Message2.attachPath = "";
                                if (str == null || !str.startsWith("http")) {
                                    return;
                                }
                                getMessagesStorage().addRecentLocalFile(str, pathToAttach.toString(), tLRPC$Message2.media.document);
                                return;
                            }
                        }
                        tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                        tLRPC$Message.message = tLRPC$Message2.message;
                        return;
                    }
                }
                z2 = true;
                str2 = tLRPC$Message2.attachPath;
                if (str2 == null) {
                }
                tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                tLRPC$Message.message = tLRPC$Message2.message;
                return;
            }
        }
        if ((tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaContact) && (tLRPC$Message2.media instanceof TLRPC$TL_messageMediaContact)) {
            tLRPC$Message2.media = tLRPC$MessageMedia8;
        } else if (tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaWebPage) {
            tLRPC$Message2.media = tLRPC$MessageMedia8;
        } else if (tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaGeo) {
            TLRPC$GeoPoint tLRPC$GeoPoint = tLRPC$MessageMedia8.geo;
            TLRPC$GeoPoint tLRPC$GeoPoint2 = tLRPC$Message2.media.geo;
            tLRPC$GeoPoint.lat = tLRPC$GeoPoint2.lat;
            tLRPC$GeoPoint._long = tLRPC$GeoPoint2._long;
        } else if ((tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaGame) || (tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaInvoice)) {
            tLRPC$Message2.media = tLRPC$MessageMedia8;
            if (!TextUtils.isEmpty(tLRPC$Message.message)) {
                tLRPC$Message2.entities = tLRPC$Message.entities;
                tLRPC$Message2.message = tLRPC$Message.message;
            }
            TLRPC$ReplyMarkup tLRPC$ReplyMarkup = tLRPC$Message.reply_markup;
            if (tLRPC$ReplyMarkup != null) {
                tLRPC$Message2.reply_markup = tLRPC$ReplyMarkup;
                tLRPC$Message2.flags |= 64;
            }
        } else if (tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaPoll) {
            tLRPC$Message2.media = tLRPC$MessageMedia8;
        }
    }

    private void putToDelayedMessages(String str, DelayedMessage delayedMessage) {
        ArrayList<DelayedMessage> arrayList = this.delayedMessages.get(str);
        if (arrayList == null) {
            arrayList = new ArrayList<>();
            this.delayedMessages.put(str, arrayList);
        }
        arrayList.add(delayedMessage);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public ArrayList<DelayedMessage> getDelayedMessages(String str) {
        return this.delayedMessages.get(str);
    }

    public long getNextRandomId() {
        long j = 0;
        while (j == 0) {
            j = Utilities.random.nextLong();
        }
        return j;
    }

    public void checkUnsentMessages() {
        getMessagesStorage().getUnsentMessages(1000);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void processUnsentMessages(final ArrayList<TLRPC$Message> arrayList, final ArrayList<TLRPC$Message> arrayList2, final ArrayList<TLRPC$User> arrayList3, final ArrayList<TLRPC$Chat> arrayList4, final ArrayList<TLRPC$EncryptedChat> arrayList5) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda32
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$processUnsentMessages$63(arrayList3, arrayList4, arrayList5, arrayList, arrayList2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$processUnsentMessages$63(ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, ArrayList arrayList4, ArrayList arrayList5) {
        HashMap<String, String> hashMap;
        getMessagesController().putUsers(arrayList, true);
        getMessagesController().putChats(arrayList2, true);
        getMessagesController().putEncryptedChats(arrayList3, true);
        int size = arrayList4.size();
        for (int i = 0; i < size; i++) {
            MessageObject messageObject = new MessageObject(this.currentAccount, (TLRPC$Message) arrayList4.get(i), false, true);
            long groupId = messageObject.getGroupId();
            if (groupId != 0 && (hashMap = messageObject.messageOwner.params) != null && !hashMap.containsKey("final") && (i == size - 1 || ((TLRPC$Message) arrayList4.get(i + 1)).grouped_id != groupId)) {
                messageObject.messageOwner.params.put("final", "1");
            }
            retrySendMessage(messageObject, true);
        }
        if (arrayList5 != null) {
            for (int i2 = 0; i2 < arrayList5.size(); i2++) {
                MessageObject messageObject2 = new MessageObject(this.currentAccount, (TLRPC$Message) arrayList5.get(i2), false, true);
                messageObject2.scheduled = true;
                retrySendMessage(messageObject2, true);
            }
        }
    }

    public ImportingStickers getImportingStickers(String str) {
        return this.importingStickersMap.get(str);
    }

    public ImportingHistory getImportingHistory(long j) {
        return this.importingHistoryMap.get(j);
    }

    public boolean isImportingStickers() {
        return this.importingStickersMap.size() != 0;
    }

    public boolean isImportingHistory() {
        return this.importingHistoryMap.size() != 0;
    }

    public void prepareImportHistory(final long j, final Uri uri, final ArrayList<Uri> arrayList, final MessagesStorage.LongCallback longCallback) {
        if (this.importingHistoryMap.get(j) != null) {
            longCallback.run(0L);
            return;
        }
        if (DialogObject.isChatDialog(j)) {
            long j2 = -j;
            TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(j2));
            if (chat != null && !chat.megagroup) {
                getMessagesController().convertToMegaGroup(null, j2, null, new MessagesStorage.LongCallback() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda78
                    @Override // org.telegram.messenger.MessagesStorage.LongCallback
                    public final void run(long j3) {
                        SendMessagesHelper.this.lambda$prepareImportHistory$64(uri, arrayList, longCallback, j3);
                    }
                });
                return;
            }
        }
        new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda31
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$prepareImportHistory$69(arrayList, j, uri, longCallback);
            }
        }).start();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportHistory$64(Uri uri, ArrayList arrayList, MessagesStorage.LongCallback longCallback, long j) {
        if (j != 0) {
            prepareImportHistory(-j, uri, arrayList, longCallback);
        } else {
            longCallback.run(0L);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportHistory$69(ArrayList arrayList, final long j, Uri uri, final MessagesStorage.LongCallback longCallback) {
        ArrayList arrayList2 = arrayList != null ? arrayList : new ArrayList();
        final ImportingHistory importingHistory = new ImportingHistory();
        importingHistory.mediaPaths = arrayList2;
        importingHistory.dialogId = j;
        importingHistory.peer = getMessagesController().getInputPeer(j);
        final HashMap hashMap = new HashMap();
        int i = 0;
        int size = arrayList2.size();
        while (i < size + 1) {
            Uri uri2 = i == 0 ? uri : (Uri) arrayList2.get(i - 1);
            if (uri2 != null && !AndroidUtilities.isInternalUri(uri2)) {
                String copyFileToCache = MediaController.copyFileToCache(uri2, "txt");
                if (copyFileToCache == null) {
                    continue;
                } else {
                    File file = new File(copyFileToCache);
                    if (file.exists()) {
                        long length = file.length();
                        if (length != 0) {
                            importingHistory.totalSize += length;
                            if (i != 0) {
                                importingHistory.uploadMedia.add(copyFileToCache);
                            } else if (length > 33554432) {
                                file.delete();
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda19
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareImportHistory$67(MessagesStorage.LongCallback.this);
                                    }
                                });
                                return;
                            } else {
                                importingHistory.historyPath = copyFileToCache;
                            }
                            importingHistory.uploadSet.add(copyFileToCache);
                            hashMap.put(copyFileToCache, importingHistory);
                        }
                    }
                    if (i == 0) {
                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda18
                            @Override // java.lang.Runnable
                            public final void run() {
                                MessagesStorage.LongCallback.this.run(0L);
                            }
                        });
                        return;
                    }
                }
            } else if (i == 0) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda17
                    @Override // java.lang.Runnable
                    public final void run() {
                        MessagesStorage.LongCallback.this.run(0L);
                    }
                });
                return;
            }
            i++;
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda35
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$prepareImportHistory$68(hashMap, j, importingHistory, longCallback);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareImportHistory$67(MessagesStorage.LongCallback longCallback) {
        Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("ImportFileTooLarge", R.string.ImportFileTooLarge), 0).show();
        longCallback.run(0L);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportHistory$68(HashMap hashMap, long j, ImportingHistory importingHistory, MessagesStorage.LongCallback longCallback) {
        this.importingHistoryFiles.putAll(hashMap);
        this.importingHistoryMap.put(j, importingHistory);
        getFileLoader().uploadFile(importingHistory.historyPath, false, true, 0L, ConnectionsManager.FileTypeFile, true);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(j));
        longCallback.run(j);
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public void prepareImportStickers(final String str, final String str2, final String str3, final ArrayList<ImportingSticker> arrayList, final MessagesStorage.StringCallback stringCallback) {
        if (this.importingStickersMap.get(str2) != null) {
            stringCallback.run(null);
        } else {
            new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda28
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$prepareImportStickers$72(str, str2, str3, arrayList, stringCallback);
                }
            }).start();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportStickers$72(String str, final String str2, String str3, ArrayList arrayList, final MessagesStorage.StringCallback stringCallback) {
        final ImportingStickers importingStickers = new ImportingStickers();
        importingStickers.title = str;
        importingStickers.shortName = str2;
        importingStickers.software = str3;
        final HashMap hashMap = new HashMap();
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            ImportingSticker importingSticker = (ImportingSticker) arrayList.get(i);
            File file = new File(importingSticker.path);
            if (file.exists()) {
                long length = file.length();
                if (length != 0) {
                    importingStickers.totalSize += length;
                    importingStickers.uploadMedia.add(importingSticker);
                    importingStickers.uploadSet.put(importingSticker.path, importingSticker);
                    hashMap.put(importingSticker.path, importingStickers);
                }
            }
            if (i == 0) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda20
                    @Override // java.lang.Runnable
                    public final void run() {
                        MessagesStorage.StringCallback.this.run(null);
                    }
                });
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda40
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$prepareImportStickers$71(importingStickers, hashMap, str2, stringCallback);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportStickers$71(ImportingStickers importingStickers, HashMap hashMap, String str, MessagesStorage.StringCallback stringCallback) {
        if (importingStickers.uploadMedia.get(0).item != null) {
            importingStickers.startImport();
        } else {
            this.importingStickersFiles.putAll(hashMap);
            this.importingStickersMap.put(str, importingStickers);
            importingStickers.initImport();
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, str);
            stringCallback.run(str);
        }
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public TLRPC$TL_photo generatePhotoSizes(String str, Uri uri) {
        return generatePhotoSizes(null, str, uri);
    }

    public TLRPC$TL_photo generatePhotoSizes(TLRPC$TL_photo tLRPC$TL_photo, String str, Uri uri) {
        Bitmap loadBitmap = ImageLoader.loadBitmap(str, uri, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true);
        if (loadBitmap == null) {
            loadBitmap = ImageLoader.loadBitmap(str, uri, 800.0f, 800.0f, true);
        }
        ArrayList<TLRPC$PhotoSize> arrayList = new ArrayList<>();
        TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, true);
        if (scaleAndSaveImage != null) {
            arrayList.add(scaleAndSaveImage);
        }
        TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(loadBitmap, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true, 80, false, 101, 101);
        if (scaleAndSaveImage2 != null) {
            arrayList.add(scaleAndSaveImage2);
        }
        if (loadBitmap != null) {
            loadBitmap.recycle();
        }
        if (arrayList.isEmpty()) {
            return null;
        }
        getUserConfig().saveConfig(false);
        if (tLRPC$TL_photo == null) {
            tLRPC$TL_photo = new TLRPC$TL_photo();
        }
        tLRPC$TL_photo.date = getConnectionsManager().getCurrentTime();
        tLRPC$TL_photo.sizes = arrayList;
        tLRPC$TL_photo.file_reference = new byte[0];
        return tLRPC$TL_photo;
    }

    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Can't wrap try/catch for region: R(28:(5:245|246|247|248|(10:250|251|252|253|254|255|256|257|258|259)(1:298))|(3:269|270|(28:272|273|(25:275|263|264|265|(7:53|(1:55)|56|(1:58)|59|(1:61)|62)(1:244)|(2:64|(18:66|67|(1:237)(7:70|(1:72)(1:236)|73|(1:235)(1:77)|(1:234)(4:82|(1:84)(1:233)|85|(2:89|90))|232|90)|91|(11:93|(1:95)|96|(3:98|99|101)(1:230)|(3:111|112|(10:114|115|116|117|(1:119)|120|121|(1:197)(8:124|125|126|127|128|129|130|(3:137|(1:139)|140))|190|140))|204|121|(0)|197|190|140)(1:231)|(1:142)(1:189)|143|(1:145)|146|(1:149)|(1:151)|152|(2:154|(2:174|(2:184|(1:186)(1:187))(1:180))(4:158|(1:173)(2:(1:172)(1:165)|(2:167|(1:169)))|170|171))(1:188)|181|(0)|173|170|171)(2:(1:239)(1:242)|240))(1:243)|241|67|(0)|237|91|(0)(0)|(0)(0)|143|(0)|146|(1:149)|(0)|152|(0)(0)|181|(0)|173|170|171)|262|263|264|265|(0)(0)|(0)(0)|241|67|(0)|237|91|(0)(0)|(0)(0)|143|(0)|146|(0)|(0)|152|(0)(0)|181|(0)|173|170|171))|261|262|263|264|265|(0)(0)|(0)(0)|241|67|(0)|237|91|(0)(0)|(0)(0)|143|(0)|146|(0)|(0)|152|(0)(0)|181|(0)|173|170|171) */
    /* JADX WARN: Code restructure failed: missing block: B:32:0x0058, code lost:
        if (r3 == false) goto L330;
     */
    /* JADX WARN: Code restructure failed: missing block: B:95:0x0149, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:96:0x014a, code lost:
        org.telegram.messenger.FileLog.e(r0);
     */
    /* JADX WARN: Removed duplicated region for block: B:124:0x019f  */
    /* JADX WARN: Removed duplicated region for block: B:127:0x01b7  */
    /* JADX WARN: Removed duplicated region for block: B:132:0x01c3  */
    /* JADX WARN: Removed duplicated region for block: B:142:0x01e7  */
    /* JADX WARN: Removed duplicated region for block: B:144:0x01ea  */
    /* JADX WARN: Removed duplicated region for block: B:151:0x0228  */
    /* JADX WARN: Removed duplicated region for block: B:155:0x022e A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:185:0x02dd  */
    /* JADX WARN: Removed duplicated region for block: B:252:0x03e9 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:272:0x047f  */
    /* JADX WARN: Removed duplicated region for block: B:276:0x0491  */
    /* JADX WARN: Removed duplicated region for block: B:278:0x049b  */
    /* JADX WARN: Removed duplicated region for block: B:279:0x04a1  */
    /* JADX WARN: Removed duplicated region for block: B:282:0x04ab  */
    /* JADX WARN: Removed duplicated region for block: B:285:0x04b4 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:288:0x04bd  */
    /* JADX WARN: Removed duplicated region for block: B:291:0x04c9  */
    /* JADX WARN: Removed duplicated region for block: B:309:0x0522  */
    /* JADX WARN: Removed duplicated region for block: B:312:0x0527 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:350:0x0175 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private static int prepareSendingDocumentInternal(final AccountInstance accountInstance, String str, String str2, Uri uri, String str3, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final ArrayList<TLRPC$MessageEntity> arrayList, final MessageObject messageObject3, long[] jArr, boolean z, CharSequence charSequence, final boolean z2, final int i, Integer[] numArr, boolean z3, final String str4, final int i2) {
        String str5;
        String str6;
        String str7;
        String lowerCase;
        String str8;
        Object obj;
        Object obj2;
        AudioInfo audioInfo;
        String str9;
        int i3;
        String str10;
        String str11;
        boolean z4;
        TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio;
        String str12;
        boolean z5;
        String str13;
        boolean z6;
        String str14;
        Object obj3;
        String str15;
        Object obj4;
        String str16;
        int i4;
        MimeTypeMap mimeTypeMap;
        long j2;
        final String str17;
        TLRPC$TL_document tLRPC$TL_document;
        String str18;
        boolean z7;
        String str19;
        TLRPC$TL_document tLRPC$TL_document2;
        final HashMap hashMap;
        String str20;
        char c;
        boolean z8;
        int i5;
        int i6;
        TLRPC$PhotoSize scaleAndSaveImage;
        Bitmap loadBitmap;
        char c2;
        String str21;
        TLRPC$TL_document tLRPC$TL_document3;
        String str22;
        TLRPC$TL_document tLRPC$TL_document4;
        String str23;
        String str24;
        Throwable th;
        MediaMetadataRetriever mediaMetadataRetriever;
        MediaMetadataRetriever mediaMetadataRetriever2;
        int i7;
        String str25;
        String str26;
        String extractMetadata;
        String str27;
        String str28;
        boolean z9;
        boolean z10;
        if ((str == null || str.length() == 0) && uri == null) {
            return 1;
        }
        if (uri == null || !AndroidUtilities.isInternalUri(uri)) {
            if (str == null || !AndroidUtilities.isInternalUri(Uri.fromFile(new File(str)))) {
                MimeTypeMap singleton = MimeTypeMap.getSingleton();
                if (uri == null || str != null) {
                    str5 = str;
                } else if (checkFileSize(accountInstance, uri)) {
                    return 2;
                } else {
                    str6 = str3 != null ? singleton.getExtensionFromMimeType(str3) : null;
                    if (str6 == null) {
                        str6 = "txt";
                        z10 = false;
                    } else {
                        z10 = true;
                    }
                    String copyFileToCache = MediaController.copyFileToCache(uri, str6);
                    if (copyFileToCache == null) {
                        return 1;
                    }
                    str5 = copyFileToCache;
                }
                str6 = null;
                File file = new File(str5);
                if (!file.exists() || file.length() == 0) {
                    return 1;
                }
                if (FileLoader.checkUploadFileSize(accountInstance.getCurrentAccount(), file.length())) {
                    boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
                    String name = file.getName();
                    if (str6 == null) {
                        int lastIndexOf = str5.lastIndexOf(46);
                        if (lastIndexOf != -1) {
                            str6 = str5.substring(lastIndexOf + 1);
                        } else {
                            str7 = "";
                            lowerCase = str7.toLowerCase();
                            if (!lowerCase.equals("mp3") || lowerCase.equals("m4a")) {
                                str8 = name;
                                obj = "flac";
                                obj2 = "opus";
                                audioInfo = AudioInfo.getAudioInfo(file);
                                if (audioInfo == null) {
                                    long duration = audioInfo.getDuration();
                                    if (duration != 0) {
                                        str10 = audioInfo.getArtist();
                                        str9 = audioInfo.getTitle();
                                        i3 = (int) (duration / 1000);
                                        str11 = str10;
                                    }
                                }
                                str9 = null;
                                i3 = 0;
                                str10 = null;
                                str11 = str10;
                            } else if (lowerCase.equals("opus") || lowerCase.equals("ogg") || lowerCase.equals("flac")) {
                                try {
                                    mediaMetadataRetriever2 = new MediaMetadataRetriever();
                                    try {
                                        try {
                                            mediaMetadataRetriever2.setDataSource(file.getAbsolutePath());
                                            if (mediaMetadataRetriever2.extractMetadata(9) != null) {
                                                obj = "flac";
                                                obj2 = "opus";
                                                try {
                                                    i7 = (int) Math.ceil(((float) Long.parseLong(extractMetadata)) / 1000.0f);
                                                    try {
                                                        str25 = mediaMetadataRetriever2.extractMetadata(7);
                                                        str8 = name;
                                                    } catch (Exception e) {
                                                        e = e;
                                                        str8 = name;
                                                        str25 = null;
                                                        str26 = null;
                                                        FileLog.e(e);
                                                        if (mediaMetadataRetriever2 != null) {
                                                            try {
                                                                mediaMetadataRetriever2.release();
                                                            } catch (Exception e2) {
                                                                FileLog.e(e2);
                                                            }
                                                        }
                                                        i3 = i7;
                                                        str9 = str25;
                                                        str11 = str26;
                                                        z4 = false;
                                                        if (i3 != 0) {
                                                        }
                                                        if (str2 == null) {
                                                        }
                                                        z5 = false;
                                                        if (z5) {
                                                        }
                                                        str13 = "";
                                                        z6 = isEncryptedDialog;
                                                        str14 = str12;
                                                        obj3 = "m4a";
                                                        str15 = str5;
                                                        obj4 = obj;
                                                        str16 = str8;
                                                        i4 = -1;
                                                        mimeTypeMap = singleton;
                                                        j2 = 0;
                                                        str17 = null;
                                                        tLRPC$TL_document = null;
                                                        if (tLRPC$TL_document != null) {
                                                        }
                                                        if (charSequence != null) {
                                                        }
                                                        hashMap = new HashMap();
                                                        str20 = str14;
                                                        if (str20 != null) {
                                                        }
                                                        if (z3) {
                                                        }
                                                        if (str17 != null) {
                                                        }
                                                        int i8 = 0;
                                                        if (numArr != null) {
                                                        }
                                                        z8 = false;
                                                        if (z7) {
                                                        }
                                                        final TLRPC$TL_document tLRPC$TL_document5 = tLRPC$TL_document2;
                                                        final String str29 = str18;
                                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                            @Override // java.lang.Runnable
                                                            public final void run() {
                                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document5, str29, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                                            }
                                                        });
                                                        return 0;
                                                    }
                                                    try {
                                                        str27 = mediaMetadataRetriever2.extractMetadata(2);
                                                    } catch (Exception e3) {
                                                        e = e3;
                                                        str26 = null;
                                                        FileLog.e(e);
                                                        if (mediaMetadataRetriever2 != null) {
                                                        }
                                                        i3 = i7;
                                                        str9 = str25;
                                                        str11 = str26;
                                                        z4 = false;
                                                        if (i3 != 0) {
                                                        }
                                                        if (str2 == null) {
                                                        }
                                                        z5 = false;
                                                        if (z5) {
                                                        }
                                                        str13 = "";
                                                        z6 = isEncryptedDialog;
                                                        str14 = str12;
                                                        obj3 = "m4a";
                                                        str15 = str5;
                                                        obj4 = obj;
                                                        str16 = str8;
                                                        i4 = -1;
                                                        mimeTypeMap = singleton;
                                                        j2 = 0;
                                                        str17 = null;
                                                        tLRPC$TL_document = null;
                                                        if (tLRPC$TL_document != null) {
                                                        }
                                                        if (charSequence != null) {
                                                        }
                                                        hashMap = new HashMap();
                                                        str20 = str14;
                                                        if (str20 != null) {
                                                        }
                                                        if (z3) {
                                                        }
                                                        if (str17 != null) {
                                                        }
                                                        int i82 = 0;
                                                        if (numArr != null) {
                                                        }
                                                        z8 = false;
                                                        if (z7) {
                                                        }
                                                        final TLRPC$TL_document tLRPC$TL_document52 = tLRPC$TL_document2;
                                                        final String str292 = str18;
                                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                            @Override // java.lang.Runnable
                                                            public final void run() {
                                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document52, str292, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                                            }
                                                        });
                                                        return 0;
                                                    }
                                                } catch (Exception e4) {
                                                    e = e4;
                                                    str8 = name;
                                                    i7 = 0;
                                                    str25 = null;
                                                    str26 = null;
                                                    FileLog.e(e);
                                                    if (mediaMetadataRetriever2 != null) {
                                                    }
                                                    i3 = i7;
                                                    str9 = str25;
                                                    str11 = str26;
                                                    z4 = false;
                                                    if (i3 != 0) {
                                                    }
                                                    if (str2 == null) {
                                                    }
                                                    z5 = false;
                                                    if (z5) {
                                                    }
                                                    str13 = "";
                                                    z6 = isEncryptedDialog;
                                                    str14 = str12;
                                                    obj3 = "m4a";
                                                    str15 = str5;
                                                    obj4 = obj;
                                                    str16 = str8;
                                                    i4 = -1;
                                                    mimeTypeMap = singleton;
                                                    j2 = 0;
                                                    str17 = null;
                                                    tLRPC$TL_document = null;
                                                    if (tLRPC$TL_document != null) {
                                                    }
                                                    if (charSequence != null) {
                                                    }
                                                    hashMap = new HashMap();
                                                    str20 = str14;
                                                    if (str20 != null) {
                                                    }
                                                    if (z3) {
                                                    }
                                                    if (str17 != null) {
                                                    }
                                                    int i822 = 0;
                                                    if (numArr != null) {
                                                    }
                                                    z8 = false;
                                                    if (z7) {
                                                    }
                                                    final TLRPC$TL_document tLRPC$TL_document522 = tLRPC$TL_document2;
                                                    final String str2922 = str18;
                                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                        @Override // java.lang.Runnable
                                                        public final void run() {
                                                            SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document522, str2922, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                                        }
                                                    });
                                                    return 0;
                                                }
                                            } else {
                                                str8 = name;
                                                obj = "flac";
                                                obj2 = "opus";
                                                str27 = null;
                                                i7 = 0;
                                                str25 = null;
                                            }
                                        } catch (Throwable th2) {
                                            th = th2;
                                            mediaMetadataRetriever = mediaMetadataRetriever2;
                                            if (mediaMetadataRetriever != null) {
                                                try {
                                                    mediaMetadataRetriever.release();
                                                } catch (Exception e5) {
                                                    FileLog.e(e5);
                                                }
                                            }
                                            throw th;
                                        }
                                    } catch (Exception e6) {
                                        e = e6;
                                        str8 = name;
                                        obj = "flac";
                                        obj2 = "opus";
                                    }
                                } catch (Exception e7) {
                                    e = e7;
                                    str8 = name;
                                    obj = "flac";
                                    obj2 = "opus";
                                    mediaMetadataRetriever2 = null;
                                } catch (Throwable th3) {
                                    th = th3;
                                    mediaMetadataRetriever = null;
                                }
                                if (messageObject3 == null) {
                                    try {
                                    } catch (Exception e8) {
                                        e = e8;
                                        str26 = str27;
                                        FileLog.e(e);
                                        if (mediaMetadataRetriever2 != null) {
                                        }
                                        i3 = i7;
                                        str9 = str25;
                                        str11 = str26;
                                        z4 = false;
                                        if (i3 != 0) {
                                        }
                                        if (str2 == null) {
                                        }
                                        z5 = false;
                                        if (z5) {
                                        }
                                        str13 = "";
                                        z6 = isEncryptedDialog;
                                        str14 = str12;
                                        obj3 = "m4a";
                                        str15 = str5;
                                        obj4 = obj;
                                        str16 = str8;
                                        i4 = -1;
                                        mimeTypeMap = singleton;
                                        j2 = 0;
                                        str17 = null;
                                        tLRPC$TL_document = null;
                                        if (tLRPC$TL_document != null) {
                                        }
                                        if (charSequence != null) {
                                        }
                                        hashMap = new HashMap();
                                        str20 = str14;
                                        if (str20 != null) {
                                        }
                                        if (z3) {
                                        }
                                        if (str17 != null) {
                                        }
                                        int i8222 = 0;
                                        if (numArr != null) {
                                        }
                                        z8 = false;
                                        if (z7) {
                                        }
                                        final TLRPC$TL_document tLRPC$TL_document5222 = tLRPC$TL_document2;
                                        final String str29222 = str18;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document5222, str29222, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                            }
                                        });
                                        return 0;
                                    }
                                    if (lowerCase.equals("ogg")) {
                                        str28 = str27;
                                        if (MediaController.isOpusFile(file.getAbsolutePath()) == 1) {
                                            z9 = true;
                                            mediaMetadataRetriever2.release();
                                            str9 = str25;
                                            str11 = str28;
                                            z4 = z9;
                                            i3 = i7;
                                            if (i3 != 0) {
                                                TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio2 = new TLRPC$TL_documentAttributeAudio();
                                                tLRPC$TL_documentAttributeAudio2.duration = i3;
                                                tLRPC$TL_documentAttributeAudio2.title = str9;
                                                tLRPC$TL_documentAttributeAudio2.performer = str11;
                                                if (str9 == null) {
                                                    tLRPC$TL_documentAttributeAudio2.title = "";
                                                }
                                                int i9 = tLRPC$TL_documentAttributeAudio2.flags | 1;
                                                tLRPC$TL_documentAttributeAudio2.flags = i9;
                                                if (str11 == null) {
                                                    tLRPC$TL_documentAttributeAudio2.performer = "";
                                                }
                                                tLRPC$TL_documentAttributeAudio2.flags = i9 | 2;
                                                if (z4) {
                                                    tLRPC$TL_documentAttributeAudio2.voice = true;
                                                }
                                                tLRPC$TL_documentAttributeAudio = tLRPC$TL_documentAttributeAudio2;
                                            } else {
                                                tLRPC$TL_documentAttributeAudio = null;
                                            }
                                            if (str2 == null) {
                                                str12 = str2;
                                            } else if (str2.endsWith("attheme")) {
                                                str12 = str2;
                                                z5 = true;
                                                if (!z5 || isEncryptedDialog) {
                                                    str13 = "";
                                                    z6 = isEncryptedDialog;
                                                    str14 = str12;
                                                    obj3 = "m4a";
                                                    str15 = str5;
                                                    obj4 = obj;
                                                    str16 = str8;
                                                    i4 = -1;
                                                    mimeTypeMap = singleton;
                                                    j2 = 0;
                                                    str17 = null;
                                                    tLRPC$TL_document = null;
                                                } else {
                                                    Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str12, !isEncryptedDialog ? 1 : 4);
                                                    if (sentFile == null || !(sentFile[0] instanceof TLRPC$TL_document)) {
                                                        str21 = null;
                                                        tLRPC$TL_document3 = null;
                                                    } else {
                                                        tLRPC$TL_document3 = (TLRPC$TL_document) sentFile[0];
                                                        str21 = (String) sentFile[1];
                                                    }
                                                    if (tLRPC$TL_document3 != null || str5.equals(str12) || isEncryptedDialog) {
                                                        str22 = str21;
                                                        tLRPC$TL_document4 = tLRPC$TL_document3;
                                                    } else {
                                                        MessagesStorage messagesStorage = accountInstance.getMessagesStorage();
                                                        StringBuilder sb = new StringBuilder();
                                                        sb.append(str5);
                                                        str22 = str21;
                                                        tLRPC$TL_document4 = tLRPC$TL_document3;
                                                        sb.append(file.length());
                                                        Object[] sentFile2 = messagesStorage.getSentFile(sb.toString(), !isEncryptedDialog ? 1 : 4);
                                                        if (sentFile2 != null && (sentFile2[0] instanceof TLRPC$TL_document)) {
                                                            str23 = (String) sentFile2[1];
                                                            tLRPC$TL_document = (TLRPC$TL_document) sentFile2[0];
                                                            i4 = -1;
                                                            str13 = "";
                                                            str16 = str8;
                                                            String str30 = str5;
                                                            str15 = str5;
                                                            str14 = str12;
                                                            obj3 = "m4a";
                                                            z6 = isEncryptedDialog;
                                                            obj4 = obj;
                                                            mimeTypeMap = singleton;
                                                            j2 = 0;
                                                            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str30, null, 0L);
                                                            str17 = str23;
                                                        }
                                                    }
                                                    tLRPC$TL_document = tLRPC$TL_document4;
                                                    str23 = str22;
                                                    i4 = -1;
                                                    str13 = "";
                                                    str16 = str8;
                                                    String str302 = str5;
                                                    str15 = str5;
                                                    str14 = str12;
                                                    obj3 = "m4a";
                                                    z6 = isEncryptedDialog;
                                                    obj4 = obj;
                                                    mimeTypeMap = singleton;
                                                    j2 = 0;
                                                    ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str302, null, 0L);
                                                    str17 = str23;
                                                }
                                                if (tLRPC$TL_document != null) {
                                                    TLRPC$TL_document tLRPC$TL_document6 = new TLRPC$TL_document();
                                                    tLRPC$TL_document6.id = j2;
                                                    tLRPC$TL_document6.date = accountInstance.getConnectionsManager().getCurrentTime();
                                                    TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                                                    tLRPC$TL_documentAttributeFilename.file_name = str16;
                                                    tLRPC$TL_document6.file_reference = new byte[0];
                                                    tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeFilename);
                                                    tLRPC$TL_document6.size = file.length();
                                                    tLRPC$TL_document6.dc_id = 0;
                                                    if (tLRPC$TL_documentAttributeAudio != null) {
                                                        tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeAudio);
                                                    }
                                                    if (str7.length() != 0) {
                                                        switch (lowerCase.hashCode()) {
                                                            case 106458:
                                                                if (lowerCase.equals(obj3)) {
                                                                    c2 = 0;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 108272:
                                                                if (lowerCase.equals("mp3")) {
                                                                    c2 = 1;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 109967:
                                                                if (lowerCase.equals("ogg")) {
                                                                    c2 = 2;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 3145576:
                                                                if (lowerCase.equals(obj4)) {
                                                                    c2 = 3;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 3418175:
                                                                if (lowerCase.equals(obj2)) {
                                                                    c2 = 4;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 3645340:
                                                                if (lowerCase.equals("webp")) {
                                                                    c2 = 5;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            default:
                                                                c2 = 65535;
                                                                break;
                                                        }
                                                        switch (c2) {
                                                            case 0:
                                                                tLRPC$TL_document6.mime_type = "audio/m4a";
                                                                break;
                                                            case 1:
                                                                tLRPC$TL_document6.mime_type = "audio/mpeg";
                                                                break;
                                                            case 2:
                                                                tLRPC$TL_document6.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tLRPC$TL_document6.mime_type = "audio/flac";
                                                                break;
                                                            case 4:
                                                                tLRPC$TL_document6.mime_type = "audio/opus";
                                                                break;
                                                            case 5:
                                                                tLRPC$TL_document6.mime_type = "image/webp";
                                                                break;
                                                            default:
                                                                String mimeTypeFromExtension = mimeTypeMap.getMimeTypeFromExtension(lowerCase);
                                                                if (mimeTypeFromExtension != null) {
                                                                    tLRPC$TL_document6.mime_type = mimeTypeFromExtension;
                                                                    break;
                                                                } else {
                                                                    tLRPC$TL_document6.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                        }
                                                    } else {
                                                        tLRPC$TL_document6.mime_type = "application/octet-stream";
                                                    }
                                                    if (!z3 && tLRPC$TL_document6.mime_type.equals("image/gif") && (messageObject3 == null || messageObject3.getGroupIdForUse() == j2)) {
                                                        try {
                                                            loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                        } catch (Exception e9) {
                                                            e = e9;
                                                            z7 = z6;
                                                        }
                                                        if (loadBitmap != null) {
                                                            tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                                                            tLRPC$TL_document6.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                                            z7 = z6;
                                                            try {
                                                                TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z7);
                                                                if (scaleAndSaveImage2 != null) {
                                                                    tLRPC$TL_document6.thumbs.add(scaleAndSaveImage2);
                                                                    tLRPC$TL_document6.flags |= 1;
                                                                }
                                                                loadBitmap.recycle();
                                                            } catch (Exception e10) {
                                                                e = e10;
                                                                FileLog.e(e);
                                                                if (tLRPC$TL_document6.mime_type.equals("image/webp")) {
                                                                }
                                                                str18 = str15;
                                                                str19 = str13;
                                                                tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                if (charSequence != null) {
                                                                }
                                                                hashMap = new HashMap();
                                                                str20 = str14;
                                                                if (str20 != null) {
                                                                }
                                                                if (z3) {
                                                                }
                                                                if (str17 != null) {
                                                                }
                                                                int i82222 = 0;
                                                                if (numArr != null) {
                                                                }
                                                                z8 = false;
                                                                if (z7) {
                                                                }
                                                                final TLRPC$TL_document tLRPC$TL_document52222 = tLRPC$TL_document2;
                                                                final String str292222 = str18;
                                                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                                    @Override // java.lang.Runnable
                                                                    public final void run() {
                                                                        SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document52222, str292222, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                                                    }
                                                                });
                                                                return 0;
                                                            }
                                                            if (tLRPC$TL_document6.mime_type.equals("image/webp") || messageObject3 != null) {
                                                                str18 = str15;
                                                            } else {
                                                                BitmapFactory.Options options = new BitmapFactory.Options();
                                                                try {
                                                                    options.inJustDecodeBounds = true;
                                                                    str18 = str15;
                                                                } catch (Exception e11) {
                                                                    e = e11;
                                                                    str18 = str15;
                                                                }
                                                                try {
                                                                    RandomAccessFile randomAccessFile = new RandomAccessFile(str18, "r");
                                                                    MappedByteBuffer map = randomAccessFile.getChannel().map(FileChannel.MapMode.READ_ONLY, 0L, str18.length());
                                                                    Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                                                    randomAccessFile.close();
                                                                } catch (Exception e12) {
                                                                    e = e12;
                                                                    FileLog.e(e);
                                                                    i5 = options.outWidth;
                                                                    if (i5 != 0) {
                                                                        TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                                                        str19 = str13;
                                                                        tLRPC$TL_documentAttributeSticker.alt = str19;
                                                                        tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                        tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeSticker);
                                                                        TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize = new TLRPC$TL_documentAttributeImageSize();
                                                                        tLRPC$TL_documentAttributeImageSize.w = options.outWidth;
                                                                        tLRPC$TL_documentAttributeImageSize.h = options.outHeight;
                                                                        tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeImageSize);
                                                                        scaleAndSaveImage = ImageLoader.scaleAndSaveImage(null, ImageLoader.loadBitmap(file.getAbsolutePath(), null, 400.0f, 400.0f, true), Bitmap.CompressFormat.PNG, false, 400.0f, 400.0f, 100, z7, 0, 0, false);
                                                                        if (scaleAndSaveImage != null) {
                                                                        }
                                                                        tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                        if (charSequence != null) {
                                                                        }
                                                                        hashMap = new HashMap();
                                                                        str20 = str14;
                                                                        if (str20 != null) {
                                                                        }
                                                                        if (z3) {
                                                                        }
                                                                        if (str17 != null) {
                                                                        }
                                                                        int i822222 = 0;
                                                                        if (numArr != null) {
                                                                        }
                                                                        z8 = false;
                                                                        if (z7) {
                                                                        }
                                                                        final TLRPC$TL_document tLRPC$TL_document522222 = tLRPC$TL_document2;
                                                                        final String str2922222 = str18;
                                                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                                            @Override // java.lang.Runnable
                                                                            public final void run() {
                                                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document522222, str2922222, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                                                            }
                                                                        });
                                                                        return 0;
                                                                    }
                                                                    str19 = str13;
                                                                    tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                    if (charSequence != null) {
                                                                    }
                                                                    hashMap = new HashMap();
                                                                    str20 = str14;
                                                                    if (str20 != null) {
                                                                    }
                                                                    if (z3) {
                                                                    }
                                                                    if (str17 != null) {
                                                                    }
                                                                    int i8222222 = 0;
                                                                    if (numArr != null) {
                                                                    }
                                                                    z8 = false;
                                                                    if (z7) {
                                                                    }
                                                                    final TLRPC$TL_document tLRPC$TL_document5222222 = tLRPC$TL_document2;
                                                                    final String str29222222 = str18;
                                                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                                        @Override // java.lang.Runnable
                                                                        public final void run() {
                                                                            SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document5222222, str29222222, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                                                        }
                                                                    });
                                                                    return 0;
                                                                }
                                                                i5 = options.outWidth;
                                                                if (i5 != 0 && (i6 = options.outHeight) != 0 && i5 <= 800 && i6 <= 800) {
                                                                    TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker2 = new TLRPC$TL_documentAttributeSticker();
                                                                    str19 = str13;
                                                                    tLRPC$TL_documentAttributeSticker2.alt = str19;
                                                                    tLRPC$TL_documentAttributeSticker2.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                    tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeSticker2);
                                                                    TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize2 = new TLRPC$TL_documentAttributeImageSize();
                                                                    tLRPC$TL_documentAttributeImageSize2.w = options.outWidth;
                                                                    tLRPC$TL_documentAttributeImageSize2.h = options.outHeight;
                                                                    tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeImageSize2);
                                                                    scaleAndSaveImage = ImageLoader.scaleAndSaveImage(null, ImageLoader.loadBitmap(file.getAbsolutePath(), null, 400.0f, 400.0f, true), Bitmap.CompressFormat.PNG, false, 400.0f, 400.0f, 100, z7, 0, 0, false);
                                                                    if (scaleAndSaveImage != null) {
                                                                        tLRPC$TL_document6.thumbs.add(scaleAndSaveImage);
                                                                        tLRPC$TL_document6.flags |= 1;
                                                                    }
                                                                    tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                }
                                                            }
                                                            str19 = str13;
                                                            tLRPC$TL_document2 = tLRPC$TL_document6;
                                                        }
                                                    }
                                                    z7 = z6;
                                                    if (tLRPC$TL_document6.mime_type.equals("image/webp")) {
                                                    }
                                                    str18 = str15;
                                                    str19 = str13;
                                                    tLRPC$TL_document2 = tLRPC$TL_document6;
                                                } else {
                                                    str18 = str15;
                                                    z7 = z6;
                                                    str19 = str13;
                                                    tLRPC$TL_document2 = tLRPC$TL_document;
                                                }
                                                final String charSequence2 = charSequence != null ? charSequence.toString() : str19;
                                                hashMap = new HashMap();
                                                str20 = str14;
                                                if (str20 != null) {
                                                    hashMap.put("originalPath", str20);
                                                }
                                                if (z3 && tLRPC$TL_documentAttributeAudio == null) {
                                                    hashMap.put("forceDocument", "1");
                                                }
                                                if (str17 != null) {
                                                    hashMap.put("parentObject", str17);
                                                }
                                                int i82222222 = 0;
                                                if (numArr != null) {
                                                    i82222222 = numArr[0];
                                                    String str31 = tLRPC$TL_document2.mime_type;
                                                    if (str31 != null && str31.toLowerCase().startsWith("image/webp")) {
                                                        numArr[0] = Integer.valueOf(i4);
                                                        c = 0;
                                                        z8 = true;
                                                        if (z7 && jArr != null) {
                                                            if (numArr != null && i82222222 != null && i82222222 != numArr[c]) {
                                                                finishGroup(accountInstance, jArr[c], i);
                                                                jArr[c] = Utilities.random.nextLong();
                                                            }
                                                            if (!z8) {
                                                                hashMap.put("groupId", str19 + jArr[c]);
                                                                if (z) {
                                                                    hashMap.put("final", "1");
                                                                }
                                                            }
                                                        }
                                                        final TLRPC$TL_document tLRPC$TL_document52222222 = tLRPC$TL_document2;
                                                        final String str292222222 = str18;
                                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                            @Override // java.lang.Runnable
                                                            public final void run() {
                                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document52222222, str292222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                                            }
                                                        });
                                                        return 0;
                                                    }
                                                    String str32 = tLRPC$TL_document2.mime_type;
                                                    if ((str32 == null || !(str32.toLowerCase().startsWith("image/") || tLRPC$TL_document2.mime_type.toLowerCase().startsWith("video/mp4"))) && !MessageObject.canPreviewDocument(tLRPC$TL_document2)) {
                                                        c = 0;
                                                        if (tLRPC$TL_documentAttributeAudio != null) {
                                                            numArr[0] = 2;
                                                        } else {
                                                            numArr[0] = 0;
                                                        }
                                                    } else {
                                                        c = 0;
                                                        numArr[0] = 1;
                                                    }
                                                } else {
                                                    c = 0;
                                                }
                                                z8 = false;
                                                if (z7) {
                                                }
                                                final TLRPC$TL_document tLRPC$TL_document522222222 = tLRPC$TL_document2;
                                                final String str2922222222 = str18;
                                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                    @Override // java.lang.Runnable
                                                    public final void run() {
                                                        SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document522222222, str2922222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                                    }
                                                });
                                                return 0;
                                            } else {
                                                if (tLRPC$TL_documentAttributeAudio != null) {
                                                    str24 = str2 + MediaStreamTrack.AUDIO_TRACK_KIND + file.length();
                                                } else {
                                                    str24 = str2 + "" + file.length();
                                                }
                                                str12 = str24;
                                            }
                                            z5 = false;
                                            if (z5) {
                                            }
                                            str13 = "";
                                            z6 = isEncryptedDialog;
                                            str14 = str12;
                                            obj3 = "m4a";
                                            str15 = str5;
                                            obj4 = obj;
                                            str16 = str8;
                                            i4 = -1;
                                            mimeTypeMap = singleton;
                                            j2 = 0;
                                            str17 = null;
                                            tLRPC$TL_document = null;
                                            if (tLRPC$TL_document != null) {
                                            }
                                            if (charSequence != null) {
                                            }
                                            hashMap = new HashMap();
                                            str20 = str14;
                                            if (str20 != null) {
                                            }
                                            if (z3) {
                                                hashMap.put("forceDocument", "1");
                                            }
                                            if (str17 != null) {
                                            }
                                            int i822222222 = 0;
                                            if (numArr != null) {
                                            }
                                            z8 = false;
                                            if (z7) {
                                            }
                                            final TLRPC$TL_document tLRPC$TL_document5222222222 = tLRPC$TL_document2;
                                            final String str29222222222 = str18;
                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                @Override // java.lang.Runnable
                                                public final void run() {
                                                    SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document5222222222, str29222222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                                }
                                            });
                                            return 0;
                                        }
                                        z9 = false;
                                        mediaMetadataRetriever2.release();
                                        str9 = str25;
                                        str11 = str28;
                                        z4 = z9;
                                        i3 = i7;
                                        if (i3 != 0) {
                                        }
                                        if (str2 == null) {
                                        }
                                        z5 = false;
                                        if (z5) {
                                        }
                                        str13 = "";
                                        z6 = isEncryptedDialog;
                                        str14 = str12;
                                        obj3 = "m4a";
                                        str15 = str5;
                                        obj4 = obj;
                                        str16 = str8;
                                        i4 = -1;
                                        mimeTypeMap = singleton;
                                        j2 = 0;
                                        str17 = null;
                                        tLRPC$TL_document = null;
                                        if (tLRPC$TL_document != null) {
                                        }
                                        if (charSequence != null) {
                                        }
                                        hashMap = new HashMap();
                                        str20 = str14;
                                        if (str20 != null) {
                                        }
                                        if (z3) {
                                        }
                                        if (str17 != null) {
                                        }
                                        int i8222222222 = 0;
                                        if (numArr != null) {
                                        }
                                        z8 = false;
                                        if (z7) {
                                        }
                                        final TLRPC$TL_document tLRPC$TL_document52222222222 = tLRPC$TL_document2;
                                        final String str292222222222 = str18;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document52222222222, str292222222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                            }
                                        });
                                        return 0;
                                    }
                                }
                                str28 = str27;
                                z9 = false;
                                mediaMetadataRetriever2.release();
                                str9 = str25;
                                str11 = str28;
                                z4 = z9;
                                i3 = i7;
                                if (i3 != 0) {
                                }
                                if (str2 == null) {
                                }
                                z5 = false;
                                if (z5) {
                                }
                                str13 = "";
                                z6 = isEncryptedDialog;
                                str14 = str12;
                                obj3 = "m4a";
                                str15 = str5;
                                obj4 = obj;
                                str16 = str8;
                                i4 = -1;
                                mimeTypeMap = singleton;
                                j2 = 0;
                                str17 = null;
                                tLRPC$TL_document = null;
                                if (tLRPC$TL_document != null) {
                                }
                                if (charSequence != null) {
                                }
                                hashMap = new HashMap();
                                str20 = str14;
                                if (str20 != null) {
                                }
                                if (z3) {
                                }
                                if (str17 != null) {
                                }
                                int i82222222222 = 0;
                                if (numArr != null) {
                                }
                                z8 = false;
                                if (z7) {
                                }
                                final TLRPC$TL_document tLRPC$TL_document522222222222 = tLRPC$TL_document2;
                                final String str2922222222222 = str18;
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document522222222222, str2922222222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                    }
                                });
                                return 0;
                            } else {
                                str8 = name;
                                obj = "flac";
                                obj2 = "opus";
                                str9 = null;
                                str11 = null;
                                i3 = 0;
                            }
                            z4 = false;
                            if (i3 != 0) {
                            }
                            if (str2 == null) {
                            }
                            z5 = false;
                            if (z5) {
                            }
                            str13 = "";
                            z6 = isEncryptedDialog;
                            str14 = str12;
                            obj3 = "m4a";
                            str15 = str5;
                            obj4 = obj;
                            str16 = str8;
                            i4 = -1;
                            mimeTypeMap = singleton;
                            j2 = 0;
                            str17 = null;
                            tLRPC$TL_document = null;
                            if (tLRPC$TL_document != null) {
                            }
                            if (charSequence != null) {
                            }
                            hashMap = new HashMap();
                            str20 = str14;
                            if (str20 != null) {
                            }
                            if (z3) {
                            }
                            if (str17 != null) {
                            }
                            int i822222222222 = 0;
                            if (numArr != null) {
                            }
                            z8 = false;
                            if (z7) {
                            }
                            final TLRPC$TL_document tLRPC$TL_document5222222222222 = tLRPC$TL_document2;
                            final String str29222222222222 = str18;
                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document5222222222222, str29222222222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                                }
                            });
                            return 0;
                        }
                    }
                    str7 = str6;
                    lowerCase = str7.toLowerCase();
                    if (!lowerCase.equals("mp3")) {
                    }
                    str8 = name;
                    obj = "flac";
                    obj2 = "opus";
                    audioInfo = AudioInfo.getAudioInfo(file);
                    if (audioInfo == null) {
                    }
                    str9 = null;
                    i3 = 0;
                    str10 = null;
                    str11 = str10;
                    z4 = false;
                    if (i3 != 0) {
                    }
                    if (str2 == null) {
                    }
                    z5 = false;
                    if (z5) {
                    }
                    str13 = "";
                    z6 = isEncryptedDialog;
                    str14 = str12;
                    obj3 = "m4a";
                    str15 = str5;
                    obj4 = obj;
                    str16 = str8;
                    i4 = -1;
                    mimeTypeMap = singleton;
                    j2 = 0;
                    str17 = null;
                    tLRPC$TL_document = null;
                    if (tLRPC$TL_document != null) {
                    }
                    if (charSequence != null) {
                    }
                    hashMap = new HashMap();
                    str20 = str14;
                    if (str20 != null) {
                    }
                    if (z3) {
                    }
                    if (str17 != null) {
                    }
                    int i8222222222222 = 0;
                    if (numArr != null) {
                    }
                    z8 = false;
                    if (z7) {
                    }
                    final TLRPC$TL_document tLRPC$TL_document52222222222222 = tLRPC$TL_document2;
                    final String str292222222222222 = str18;
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.lambda$prepareSendingDocumentInternal$73(MessageObject.this, accountInstance, tLRPC$TL_document52222222222222, str292222222222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2);
                        }
                    });
                    return 0;
                }
                return 2;
            }
            return 1;
        }
        return 1;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingDocumentInternal$73(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, String str, HashMap hashMap, String str2, long j, MessageObject messageObject2, MessageObject messageObject3, String str3, ArrayList arrayList, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str4, int i2) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, str, hashMap, false, false, str2);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, null, str, j, messageObject2, messageObject3, str3, arrayList, null, hashMap, z, i, 0, str2, null, false);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str4;
        of.quick_reply_shortcut_id = i2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    private static boolean checkFileSize(AccountInstance accountInstance, Uri uri) {
        long j = 0;
        if (Build.VERSION.SDK_INT >= 19) {
            try {
                AssetFileDescriptor openAssetFileDescriptor = ApplicationLoader.applicationContext.getContentResolver().openAssetFileDescriptor(uri, "r", null);
                if (openAssetFileDescriptor != null) {
                    openAssetFileDescriptor.getLength();
                }
                Cursor query = ApplicationLoader.applicationContext.getContentResolver().query(uri, new String[]{"_size"}, null, null, null);
                int columnIndex = query.getColumnIndex("_size");
                query.moveToFirst();
                j = query.getLong(columnIndex);
                query.close();
            } catch (Exception e) {
                FileLog.e(e);
            }
        }
        return !FileLoader.checkUploadFileSize(accountInstance.getCurrentAccount(), j);
    }

    public static void prepareSendingDocument(AccountInstance accountInstance, String str, String str2, Uri uri, String str3, String str4, long j, MessageObject messageObject, MessageObject messageObject2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, MessageObject messageObject3, boolean z, int i, InputContentInfoCompat inputContentInfoCompat, String str5, int i2) {
        if ((str == null || str2 == null) && uri == null) {
            return;
        }
        ArrayList arrayList = new ArrayList();
        ArrayList arrayList2 = new ArrayList();
        ArrayList arrayList3 = null;
        if (uri != null) {
            arrayList3 = new ArrayList();
            arrayList3.add(uri);
        }
        if (str != null) {
            arrayList.add(str);
            arrayList2.add(str2);
        }
        prepareSendingDocuments(accountInstance, arrayList, arrayList2, arrayList3, str3, str4, j, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, messageObject3, z, i, inputContentInfoCompat, str5, i2);
    }

    public static void prepareSendingAudioDocuments(final AccountInstance accountInstance, final ArrayList<MessageObject> arrayList, final CharSequence charSequence, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final boolean z, final int i, final MessageObject messageObject3, final String str, final int i2) {
        new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda10
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingAudioDocuments$75(arrayList, j, accountInstance, charSequence, messageObject3, messageObject, messageObject2, z, i, tL_stories$StoryItem, str, i2);
            }
        }).start();
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:25:0x0082  */
    /* JADX WARN: Removed duplicated region for block: B:26:0x008b  */
    /* JADX WARN: Removed duplicated region for block: B:33:0x00a8  */
    /* JADX WARN: Removed duplicated region for block: B:34:0x00b3  */
    /* JADX WARN: Removed duplicated region for block: B:36:0x00b7  */
    /* JADX WARN: Removed duplicated region for block: B:39:0x00c6  */
    /* JADX WARN: Removed duplicated region for block: B:41:0x00cd  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingAudioDocuments$75(ArrayList arrayList, final long j, final AccountInstance accountInstance, CharSequence charSequence, final MessageObject messageObject, final MessageObject messageObject2, final MessageObject messageObject3, final boolean z, final int i, final TL_stories$StoryItem tL_stories$StoryItem, final String str, final int i2) {
        final String str2;
        TLRPC$TL_document tLRPC$TL_document;
        final TLRPC$TL_document tLRPC$TL_document2;
        final HashMap hashMap;
        int size = arrayList.size();
        long j2 = 0;
        int i3 = 0;
        int i4 = 0;
        while (i3 < size) {
            final MessageObject messageObject4 = (MessageObject) arrayList.get(i3);
            String str3 = messageObject4.messageOwner.attachPath;
            File file = new File(str3);
            boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
            if (!isEncryptedDialog && size > 1 && i4 % 10 == 0) {
                j2 = Utilities.random.nextLong();
                i4 = 0;
            }
            if (str3 != null) {
                str3 = str3 + MediaStreamTrack.AUDIO_TRACK_KIND + file.length();
            }
            if (!isEncryptedDialog) {
                Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str3, !isEncryptedDialog ? 1 : 4);
                if (sentFile != null && (sentFile[0] instanceof TLRPC$TL_document)) {
                    tLRPC$TL_document = (TLRPC$TL_document) sentFile[0];
                    ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str3, null, 0L);
                    str2 = (String) sentFile[1];
                    tLRPC$TL_document2 = tLRPC$TL_document != null ? (TLRPC$TL_document) messageObject4.messageOwner.media.document : tLRPC$TL_document;
                    if (!isEncryptedDialog && accountInstance.getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                        return;
                    }
                    CharSequence[] charSequenceArr = {charSequence};
                    final ArrayList<TLRPC$MessageEntity> entities = i3 != 0 ? accountInstance.getMediaDataController().getEntities(charSequenceArr, true) : null;
                    final String charSequence2 = i3 == 0 ? charSequenceArr[0].toString() : null;
                    hashMap = new HashMap();
                    if (str3 != null) {
                        hashMap.put("originalPath", str3);
                    }
                    if (str2 != null) {
                        hashMap.put("parentObject", str2);
                    }
                    i4++;
                    hashMap.put("groupId", "" + j2);
                    if (i4 != 10 || i3 == size - 1) {
                        hashMap.put("final", "1");
                    }
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda15
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.lambda$prepareSendingAudioDocuments$74(MessageObject.this, accountInstance, tLRPC$TL_document2, messageObject4, hashMap, str2, j, messageObject2, messageObject3, charSequence2, entities, z, i, tL_stories$StoryItem, str, i2);
                        }
                    });
                    i3++;
                }
            }
            str2 = null;
            tLRPC$TL_document = null;
            if (tLRPC$TL_document != null) {
            }
            if (!isEncryptedDialog) {
            }
            CharSequence[] charSequenceArr2 = {charSequence};
            if (i3 != 0) {
            }
            final String charSequence22 = i3 == 0 ? charSequenceArr2[0].toString() : null;
            hashMap = new HashMap();
            if (str3 != null) {
            }
            if (str2 != null) {
            }
            i4++;
            hashMap.put("groupId", "" + j2);
            if (i4 != 10) {
            }
            hashMap.put("final", "1");
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda15
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingAudioDocuments$74(MessageObject.this, accountInstance, tLRPC$TL_document2, messageObject4, hashMap, str2, j, messageObject2, messageObject3, charSequence22, entities, z, i, tL_stories$StoryItem, str, i2);
                }
            });
            i3++;
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingAudioDocuments$74(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, MessageObject messageObject2, HashMap hashMap, String str, long j, MessageObject messageObject3, MessageObject messageObject4, String str2, ArrayList arrayList, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, String str3, int i2) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, messageObject2.messageOwner.attachPath, hashMap, false, false, str);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, null, messageObject2.messageOwner.attachPath, j, messageObject3, messageObject4, str2, arrayList, null, hashMap, z, i, 0, str, null, false, false);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.quick_reply_shortcut = str3;
        of.quick_reply_shortcut_id = i2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    private static void finishGroup(final AccountInstance accountInstance, final long j, final int i) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda12
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$finishGroup$76(AccountInstance.this, j, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$finishGroup$76(AccountInstance accountInstance, long j, int i) {
        SendMessagesHelper sendMessagesHelper = accountInstance.getSendMessagesHelper();
        HashMap<String, ArrayList<DelayedMessage>> hashMap = sendMessagesHelper.delayedMessages;
        ArrayList<DelayedMessage> arrayList = hashMap.get("group_" + j);
        if (arrayList == null || arrayList.isEmpty()) {
            return;
        }
        DelayedMessage delayedMessage = arrayList.get(0);
        ArrayList<MessageObject> arrayList2 = delayedMessage.messageObjects;
        MessageObject messageObject = arrayList2.get(arrayList2.size() - 1);
        delayedMessage.finalGroupMessage = messageObject.getId();
        messageObject.messageOwner.params.put("final", "1");
        TLRPC$TL_messages_messages tLRPC$TL_messages_messages = new TLRPC$TL_messages_messages();
        tLRPC$TL_messages_messages.messages.add(messageObject.messageOwner);
        accountInstance.getMessagesStorage().putMessages((TLRPC$messages_Messages) tLRPC$TL_messages_messages, delayedMessage.peer, -2, 0, false, i != 0 ? 1 : 0, 0L);
        sendMessagesHelper.sendReadyToSendGroup(delayedMessage, true, true);
    }

    public static void prepareSendingDocuments(final AccountInstance accountInstance, final ArrayList<String> arrayList, final ArrayList<String> arrayList2, final ArrayList<Uri> arrayList3, final String str, final String str2, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final MessageObject messageObject3, final boolean z, final int i, final InputContentInfoCompat inputContentInfoCompat, final String str3, final int i2) {
        if (arrayList == null && arrayList2 == null && arrayList3 == null) {
            return;
        }
        if (arrayList == null || arrayList2 == null || arrayList.size() == arrayList2.size()) {
            Utilities.globalQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda3
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingDocuments$77(j, arrayList, str, accountInstance, i, arrayList2, str2, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, messageObject3, z, inputContentInfoCompat, str3, i2, arrayList3);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingDocuments$77(long j, ArrayList arrayList, String str, AccountInstance accountInstance, int i, ArrayList arrayList2, String str2, MessageObject messageObject, MessageObject messageObject2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, MessageObject messageObject3, boolean z, InputContentInfoCompat inputContentInfoCompat, String str3, int i2, ArrayList arrayList3) {
        Integer[] numArr;
        long[] jArr;
        ArrayList arrayList4;
        int i3;
        AccountInstance accountInstance2 = accountInstance;
        int i4 = i;
        int i5 = 1;
        long[] jArr2 = new long[1];
        Integer[] numArr2 = new Integer[1];
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        int i6 = 10;
        if (arrayList != null) {
            int size = arrayList.size();
            i3 = 0;
            int i7 = 0;
            int i8 = 0;
            while (i8 < size) {
                String str4 = i8 == 0 ? str : null;
                if (!isEncryptedDialog && size > i5 && i7 % 10 == 0) {
                    if (jArr2[0] != 0) {
                        finishGroup(accountInstance2, jArr2[0], i4);
                    }
                    jArr2[0] = Utilities.random.nextLong();
                    i7 = 0;
                }
                int i9 = i7 + 1;
                long j2 = jArr2[0];
                int i10 = i8;
                int i11 = size;
                Integer[] numArr3 = numArr2;
                long[] jArr3 = jArr2;
                i3 = prepareSendingDocumentInternal(accountInstance, (String) arrayList.get(i8), (String) arrayList2.get(i8), null, str2, j, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, null, messageObject3, jArr3, i9 == i6 || i8 == size + (-1), str4, z, i, numArr3, inputContentInfoCompat == null, str3, i2);
                i7 = (j2 != jArr3[0] || jArr3[0] == -1) ? 1 : i9;
                i8 = i10 + 1;
                accountInstance2 = accountInstance;
                i4 = i;
                size = i11;
                numArr2 = numArr3;
                jArr2 = jArr3;
                i6 = 10;
                i5 = 1;
            }
            numArr = numArr2;
            jArr = jArr2;
            arrayList4 = arrayList3;
        } else {
            numArr = numArr2;
            jArr = jArr2;
            arrayList4 = arrayList3;
            i3 = 0;
        }
        if (arrayList4 != null) {
            jArr[0] = 0;
            int size2 = arrayList3.size();
            int i12 = 0;
            int i13 = 0;
            while (i13 < arrayList3.size()) {
                String str5 = (i13 == 0 && (arrayList == null || arrayList.size() == 0)) ? str : null;
                if (!isEncryptedDialog) {
                    if (size2 > 1 && i12 % 10 == 0) {
                        if (jArr[0] != 0) {
                            finishGroup(accountInstance, jArr[0], i);
                        }
                        jArr[0] = Utilities.random.nextLong();
                        i12 = 0;
                    }
                }
                int i14 = i12 + 1;
                long j3 = jArr[0];
                int i15 = i13;
                int i16 = size2;
                i3 = prepareSendingDocumentInternal(accountInstance, null, null, (Uri) arrayList4.get(i13), str2, j, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, null, messageObject3, jArr, i14 == 10 || i13 == size2 + (-1), str5, z, i, numArr, inputContentInfoCompat == null, str3, i2);
                i12 = (j3 != jArr[0] || jArr[0] == -1) ? 1 : i14;
                i13 = i15 + 1;
                arrayList4 = arrayList3;
                size2 = i16;
            }
        }
        if (inputContentInfoCompat != null) {
            inputContentInfoCompat.releasePermission();
        }
        handleError(i3, accountInstance);
    }

    private static void handleError(final int i, final AccountInstance accountInstance) {
        if (i != 0) {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda2
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$handleError$78(i, accountInstance);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$handleError$78(int i, AccountInstance accountInstance) {
        try {
            if (i == 1) {
                NotificationCenter.getGlobalInstance().lambda$postNotificationNameOnUIThread$1(NotificationCenter.showBulletin, 1, LocaleController.getString("UnsupportedAttachment", R.string.UnsupportedAttachment));
            } else if (i != 2) {
            } else {
                NotificationCenter.getInstance(accountInstance.getCurrentAccount()).lambda$postNotificationNameOnUIThread$1(NotificationCenter.currentUserShowLimitReachedDialog, 6);
            }
        } catch (Exception e) {
            FileLog.e(e);
        }
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String str, Uri uri, long j, MessageObject messageObject, MessageObject messageObject2, ChatActivity.ReplyQuote replyQuote, CharSequence charSequence, ArrayList<TLRPC$MessageEntity> arrayList, ArrayList<TLRPC$InputDocument> arrayList2, InputContentInfoCompat inputContentInfoCompat, int i, MessageObject messageObject3, boolean z, int i2, int i3, String str2, int i4) {
        prepareSendingPhoto(accountInstance, str, null, uri, j, messageObject, messageObject2, null, null, arrayList, arrayList2, inputContentInfoCompat, i, messageObject3, null, z, i2, i3, false, charSequence, str2, i4);
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String str, String str2, Uri uri, long j, MessageObject messageObject, MessageObject messageObject2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, ArrayList<TLRPC$MessageEntity> arrayList, ArrayList<TLRPC$InputDocument> arrayList2, InputContentInfoCompat inputContentInfoCompat, int i, MessageObject messageObject3, VideoEditedInfo videoEditedInfo, boolean z, int i2, int i3, boolean z2, CharSequence charSequence, String str3, int i4) {
        SendingMediaInfo sendingMediaInfo = new SendingMediaInfo();
        sendingMediaInfo.path = str;
        sendingMediaInfo.thumbPath = str2;
        sendingMediaInfo.uri = uri;
        if (charSequence != null) {
            sendingMediaInfo.caption = charSequence.toString();
        }
        sendingMediaInfo.entities = arrayList;
        sendingMediaInfo.ttl = i;
        if (arrayList2 != null) {
            sendingMediaInfo.masks = new ArrayList<>(arrayList2);
        }
        sendingMediaInfo.videoEditedInfo = videoEditedInfo;
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(sendingMediaInfo);
        prepareSendingMedia(accountInstance, arrayList3, j, messageObject, messageObject2, null, replyQuote, z2, false, messageObject3, z, i2, i3, false, inputContentInfoCompat, str3, i4);
    }

    public static void prepareSendingBotContextResult(final BaseFragment baseFragment, final AccountInstance accountInstance, final TLRPC$BotInlineResult tLRPC$BotInlineResult, final HashMap<String, String> hashMap, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final boolean z, final int i, final String str, final int i2) {
        SendMessageParams of;
        if (tLRPC$BotInlineResult == null) {
            return;
        }
        TLRPC$BotInlineMessage tLRPC$BotInlineMessage = tLRPC$BotInlineResult.send_message;
        if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaAuto) {
            new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda4
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingBotContextResult$82(j, tLRPC$BotInlineResult, accountInstance, hashMap, baseFragment, messageObject, messageObject2, z, i, str, i2, tL_stories$StoryItem, replyQuote);
                }
            }).run();
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageText) {
            TLRPC$TL_webPagePending tLRPC$TL_webPagePending = null;
            if (DialogObject.isEncryptedDialog(j)) {
                int i3 = 0;
                while (true) {
                    if (i3 >= tLRPC$BotInlineResult.send_message.entities.size()) {
                        break;
                    }
                    TLRPC$MessageEntity tLRPC$MessageEntity = tLRPC$BotInlineResult.send_message.entities.get(i3);
                    if (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityUrl) {
                        tLRPC$TL_webPagePending = new TLRPC$TL_webPagePending();
                        String str2 = tLRPC$BotInlineResult.send_message.message;
                        int i4 = tLRPC$MessageEntity.offset;
                        tLRPC$TL_webPagePending.url = str2.substring(i4, tLRPC$MessageEntity.length + i4);
                        break;
                    }
                    i3++;
                }
            }
            TLRPC$TL_webPagePending tLRPC$TL_webPagePending2 = tLRPC$TL_webPagePending;
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage2 = tLRPC$BotInlineResult.send_message;
            SendMessageParams of2 = SendMessageParams.of(tLRPC$BotInlineMessage2.message, j, messageObject, messageObject2, tLRPC$TL_webPagePending2, !tLRPC$BotInlineMessage2.no_webpage, tLRPC$BotInlineMessage2.entities, tLRPC$BotInlineMessage2.reply_markup, hashMap, z, i, null, false);
            of2.quick_reply_shortcut = str;
            of2.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of2);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaVenue) {
            TLRPC$TL_messageMediaVenue tLRPC$TL_messageMediaVenue = new TLRPC$TL_messageMediaVenue();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage3 = tLRPC$BotInlineResult.send_message;
            tLRPC$TL_messageMediaVenue.geo = tLRPC$BotInlineMessage3.geo;
            tLRPC$TL_messageMediaVenue.address = tLRPC$BotInlineMessage3.address;
            tLRPC$TL_messageMediaVenue.title = tLRPC$BotInlineMessage3.title;
            tLRPC$TL_messageMediaVenue.provider = tLRPC$BotInlineMessage3.provider;
            tLRPC$TL_messageMediaVenue.venue_id = tLRPC$BotInlineMessage3.venue_id;
            String str3 = tLRPC$BotInlineMessage3.venue_type;
            tLRPC$TL_messageMediaVenue.venue_id = str3;
            tLRPC$TL_messageMediaVenue.venue_type = str3;
            if (str3 == null) {
                tLRPC$TL_messageMediaVenue.venue_type = "";
            }
            SendMessageParams of3 = SendMessageParams.of(tLRPC$TL_messageMediaVenue, j, messageObject, messageObject2, tLRPC$BotInlineMessage3.reply_markup, hashMap, z, i);
            of3.quick_reply_shortcut = str;
            of3.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of3);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaGeo) {
            if (tLRPC$BotInlineMessage.period != 0 || tLRPC$BotInlineMessage.proximity_notification_radius != 0) {
                TLRPC$TL_messageMediaGeoLive tLRPC$TL_messageMediaGeoLive = new TLRPC$TL_messageMediaGeoLive();
                TLRPC$BotInlineMessage tLRPC$BotInlineMessage4 = tLRPC$BotInlineResult.send_message;
                int i5 = tLRPC$BotInlineMessage4.period;
                if (i5 == 0) {
                    i5 = 900;
                }
                tLRPC$TL_messageMediaGeoLive.period = i5;
                tLRPC$TL_messageMediaGeoLive.geo = tLRPC$BotInlineMessage4.geo;
                tLRPC$TL_messageMediaGeoLive.heading = tLRPC$BotInlineMessage4.heading;
                tLRPC$TL_messageMediaGeoLive.proximity_notification_radius = tLRPC$BotInlineMessage4.proximity_notification_radius;
                of = SendMessageParams.of(tLRPC$TL_messageMediaGeoLive, j, messageObject, messageObject2, tLRPC$BotInlineMessage4.reply_markup, hashMap, z, i);
            } else {
                TLRPC$TL_messageMediaGeo tLRPC$TL_messageMediaGeo = new TLRPC$TL_messageMediaGeo();
                TLRPC$BotInlineMessage tLRPC$BotInlineMessage5 = tLRPC$BotInlineResult.send_message;
                tLRPC$TL_messageMediaGeo.geo = tLRPC$BotInlineMessage5.geo;
                tLRPC$TL_messageMediaGeo.heading = tLRPC$BotInlineMessage5.heading;
                of = SendMessageParams.of(tLRPC$TL_messageMediaGeo, j, messageObject, messageObject2, tLRPC$BotInlineMessage5.reply_markup, hashMap, z, i);
            }
            of.quick_reply_shortcut = str;
            of.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaContact) {
            TLRPC$TL_user tLRPC$TL_user = new TLRPC$TL_user();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage6 = tLRPC$BotInlineResult.send_message;
            tLRPC$TL_user.phone = tLRPC$BotInlineMessage6.phone_number;
            tLRPC$TL_user.first_name = tLRPC$BotInlineMessage6.first_name;
            tLRPC$TL_user.last_name = tLRPC$BotInlineMessage6.last_name;
            TLRPC$TL_restrictionReason tLRPC$TL_restrictionReason = new TLRPC$TL_restrictionReason();
            tLRPC$TL_restrictionReason.text = tLRPC$BotInlineResult.send_message.vcard;
            tLRPC$TL_restrictionReason.platform = "";
            tLRPC$TL_restrictionReason.reason = "";
            tLRPC$TL_user.restriction_reason.add(tLRPC$TL_restrictionReason);
            SendMessageParams of4 = SendMessageParams.of(tLRPC$TL_user, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
            of4.quick_reply_shortcut = str;
            of4.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of4);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaInvoice) {
            if (DialogObject.isEncryptedDialog(j)) {
                return;
            }
            TLRPC$TL_botInlineMessageMediaInvoice tLRPC$TL_botInlineMessageMediaInvoice = (TLRPC$TL_botInlineMessageMediaInvoice) tLRPC$BotInlineResult.send_message;
            TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice = new TLRPC$TL_messageMediaInvoice();
            tLRPC$TL_messageMediaInvoice.shipping_address_requested = tLRPC$TL_botInlineMessageMediaInvoice.shipping_address_requested;
            tLRPC$TL_messageMediaInvoice.test = tLRPC$TL_botInlineMessageMediaInvoice.test;
            tLRPC$TL_messageMediaInvoice.title = tLRPC$TL_botInlineMessageMediaInvoice.title;
            tLRPC$TL_messageMediaInvoice.description = tLRPC$TL_botInlineMessageMediaInvoice.description;
            TLRPC$WebDocument tLRPC$WebDocument = tLRPC$TL_botInlineMessageMediaInvoice.photo;
            if (tLRPC$WebDocument != null) {
                tLRPC$TL_messageMediaInvoice.webPhoto = tLRPC$WebDocument;
                tLRPC$TL_messageMediaInvoice.flags |= 1;
            }
            tLRPC$TL_messageMediaInvoice.currency = tLRPC$TL_botInlineMessageMediaInvoice.currency;
            tLRPC$TL_messageMediaInvoice.total_amount = tLRPC$TL_botInlineMessageMediaInvoice.total_amount;
            tLRPC$TL_messageMediaInvoice.start_param = "";
            SendMessageParams of5 = SendMessageParams.of(tLRPC$TL_messageMediaInvoice, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
            of5.quick_reply_shortcut = str;
            of5.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of5);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaWebPage) {
            TLRPC$TL_webPagePending tLRPC$TL_webPagePending3 = new TLRPC$TL_webPagePending();
            tLRPC$TL_webPagePending3.url = ((TLRPC$TL_botInlineMessageMediaWebPage) tLRPC$BotInlineMessage).url;
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage7 = tLRPC$BotInlineResult.send_message;
            SendMessageParams of6 = SendMessageParams.of(tLRPC$BotInlineMessage7.message, j, messageObject, messageObject2, tLRPC$TL_webPagePending3, !tLRPC$BotInlineMessage7.no_webpage, tLRPC$BotInlineMessage7.entities, tLRPC$BotInlineMessage7.reply_markup, hashMap, z, i, null, false);
            of6.quick_reply_shortcut = str;
            of6.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of6);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Code restructure failed: missing block: B:81:0x01c2, code lost:
        if (r0.equals("voice") == false) goto L85;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:179:0x044c  */
    /* JADX WARN: Removed duplicated region for block: B:182:0x0452  */
    /* JADX WARN: Removed duplicated region for block: B:185:0x045e  */
    /* JADX WARN: Removed duplicated region for block: B:195:0x04a8  */
    /* JADX WARN: Removed duplicated region for block: B:199:0x04ea  */
    /* JADX WARN: Removed duplicated region for block: B:202:0x04f2  */
    /* JADX WARN: Removed duplicated region for block: B:203:0x04fd  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingBotContextResult$82(final long j, final TLRPC$BotInlineResult tLRPC$BotInlineResult, final AccountInstance accountInstance, final HashMap hashMap, final BaseFragment baseFragment, final MessageObject messageObject, final MessageObject messageObject2, final boolean z, final int i, final String str, final int i2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote) {
        String str2;
        String str3;
        char c;
        TLRPC$TL_photo tLRPC$TL_photo;
        Bitmap loadBitmap;
        boolean z2;
        int i3;
        String str4;
        int lastIndexOf;
        final TLRPC$TL_photo tLRPC$TL_photo2;
        final TLRPC$TL_game tLRPC$TL_game;
        String str5;
        Object obj;
        final Bitmap[] bitmapArr;
        final String[] strArr;
        TLRPC$InputPeer inputPeer;
        TLRPC$WebDocument tLRPC$WebDocument;
        TLRPC$BotInlineResult tLRPC$BotInlineResult2 = tLRPC$BotInlineResult;
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        TLRPC$TL_document tLRPC$TL_document = null;
        if ("game".equals(tLRPC$BotInlineResult2.type)) {
            if (isEncryptedDialog) {
                return;
            }
            TLRPC$TL_game tLRPC$TL_game2 = new TLRPC$TL_game();
            tLRPC$TL_game2.title = tLRPC$BotInlineResult2.title;
            tLRPC$TL_game2.description = tLRPC$BotInlineResult2.description;
            tLRPC$TL_game2.short_name = tLRPC$BotInlineResult2.id;
            TLRPC$Photo tLRPC$Photo = tLRPC$BotInlineResult2.photo;
            tLRPC$TL_game2.photo = tLRPC$Photo;
            if (tLRPC$Photo == null) {
                tLRPC$TL_game2.photo = new TLRPC$TL_photoEmpty();
            }
            TLRPC$Document tLRPC$Document = tLRPC$BotInlineResult2.document;
            if (tLRPC$Document instanceof TLRPC$TL_document) {
                tLRPC$TL_game2.document = tLRPC$Document;
                tLRPC$TL_game2.flags |= 1;
            }
            tLRPC$TL_game = tLRPC$TL_game2;
            str5 = null;
            tLRPC$TL_photo2 = null;
        } else if (tLRPC$BotInlineResult2 instanceof TLRPC$TL_botInlineMediaResult) {
            TLRPC$Document tLRPC$Document2 = tLRPC$BotInlineResult2.document;
            if (tLRPC$Document2 != null) {
                if (tLRPC$Document2 instanceof TLRPC$TL_document) {
                    tLRPC$TL_photo2 = null;
                    tLRPC$TL_game = 0;
                    tLRPC$TL_document = (TLRPC$TL_document) tLRPC$Document2;
                    str5 = null;
                }
            } else {
                TLRPC$Photo tLRPC$Photo2 = tLRPC$BotInlineResult2.photo;
                if (tLRPC$Photo2 != null && (tLRPC$Photo2 instanceof TLRPC$TL_photo)) {
                    tLRPC$TL_photo2 = (TLRPC$TL_photo) tLRPC$Photo2;
                    str5 = null;
                    obj = null;
                    tLRPC$TL_game = obj;
                }
            }
            str5 = null;
            tLRPC$TL_document = null;
            tLRPC$TL_photo2 = null;
            tLRPC$TL_game = tLRPC$TL_photo2;
        } else {
            TLRPC$WebDocument tLRPC$WebDocument2 = tLRPC$BotInlineResult2.content;
            if (tLRPC$WebDocument2 != null) {
                String httpUrlExtension = ImageLoader.getHttpUrlExtension(tLRPC$WebDocument2.url, null);
                if (TextUtils.isEmpty(httpUrlExtension)) {
                    str2 = FileLoader.getExtensionByMimeType(tLRPC$BotInlineResult2.content.mime_type);
                } else {
                    str2 = "." + httpUrlExtension;
                }
                File file = new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult2.content.url) + str2);
                if (file.exists()) {
                    str3 = file.getAbsolutePath();
                } else {
                    str3 = tLRPC$BotInlineResult2.content.url;
                }
                String str6 = str3;
                String str7 = tLRPC$BotInlineResult2.type;
                str7.hashCode();
                char c2 = 5;
                switch (str7.hashCode()) {
                    case -1890252483:
                        if (str7.equals("sticker")) {
                            c = 0;
                            break;
                        }
                        c = 65535;
                        break;
                    case 102340:
                        if (str7.equals("gif")) {
                            c = 1;
                            break;
                        }
                        c = 65535;
                        break;
                    case 3143036:
                        if (str7.equals("file")) {
                            c = 2;
                            break;
                        }
                        c = 65535;
                        break;
                    case 93166550:
                        if (str7.equals(MediaStreamTrack.AUDIO_TRACK_KIND)) {
                            c = 3;
                            break;
                        }
                        c = 65535;
                        break;
                    case 106642994:
                        if (str7.equals("photo")) {
                            c = 4;
                            break;
                        }
                        c = 65535;
                        break;
                    case 112202875:
                        if (str7.equals(MediaStreamTrack.VIDEO_TRACK_KIND)) {
                            c = 5;
                            break;
                        }
                        c = 65535;
                        break;
                    case 112386354:
                        if (str7.equals("voice")) {
                            c = 6;
                            break;
                        }
                        c = 65535;
                        break;
                    default:
                        c = 65535;
                        break;
                }
                switch (c) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 5:
                    case 6:
                        TLRPC$TL_document tLRPC$TL_document2 = new TLRPC$TL_document();
                        tLRPC$TL_document2.id = 0L;
                        tLRPC$TL_document2.size = 0L;
                        tLRPC$TL_document2.dc_id = 0;
                        tLRPC$BotInlineResult2 = tLRPC$BotInlineResult;
                        tLRPC$TL_document2.mime_type = tLRPC$BotInlineResult2.content.mime_type;
                        tLRPC$TL_document2.file_reference = new byte[0];
                        tLRPC$TL_document2.date = accountInstance.getConnectionsManager().getCurrentTime();
                        TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                        tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeFilename);
                        String str8 = tLRPC$BotInlineResult2.type;
                        str8.hashCode();
                        switch (str8.hashCode()) {
                            case -1890252483:
                                if (str8.equals("sticker")) {
                                    c2 = 0;
                                    break;
                                }
                                c2 = 65535;
                                break;
                            case 102340:
                                if (str8.equals("gif")) {
                                    c2 = 1;
                                    break;
                                }
                                c2 = 65535;
                                break;
                            case 3143036:
                                if (str8.equals("file")) {
                                    c2 = 2;
                                    break;
                                }
                                c2 = 65535;
                                break;
                            case 93166550:
                                if (str8.equals(MediaStreamTrack.AUDIO_TRACK_KIND)) {
                                    c2 = 3;
                                    break;
                                }
                                c2 = 65535;
                                break;
                            case 112202875:
                                if (str8.equals(MediaStreamTrack.VIDEO_TRACK_KIND)) {
                                    c2 = 4;
                                    break;
                                }
                                c2 = 65535;
                                break;
                            case 112386354:
                                break;
                            default:
                                c2 = 65535;
                                break;
                        }
                        switch (c2) {
                            case 0:
                                TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                tLRPC$TL_documentAttributeSticker.alt = "";
                                tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeSticker);
                                TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize = new TLRPC$TL_documentAttributeImageSize();
                                int[] inlineResultWidthAndHeight = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                tLRPC$TL_documentAttributeImageSize.w = inlineResultWidthAndHeight[0];
                                tLRPC$TL_documentAttributeImageSize.h = inlineResultWidthAndHeight[1];
                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeImageSize);
                                tLRPC$TL_documentAttributeFilename.file_name = "sticker.webp";
                                try {
                                    if (tLRPC$BotInlineResult2.thumb != null) {
                                        tLRPC$TL_photo = null;
                                        try {
                                            Bitmap loadBitmap2 = ImageLoader.loadBitmap(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult2.thumb.url) + "." + ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult2.thumb.url, "webp")).getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            if (loadBitmap2 != null) {
                                                TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap2, 90.0f, 90.0f, 55, false);
                                                if (scaleAndSaveImage != null) {
                                                    tLRPC$TL_document2.thumbs.add(scaleAndSaveImage);
                                                    tLRPC$TL_document2.flags |= 1;
                                                }
                                                loadBitmap2.recycle();
                                            }
                                        } catch (Throwable th) {
                                            th = th;
                                            FileLog.e(th);
                                            if (tLRPC$TL_documentAttributeFilename.file_name == null) {
                                            }
                                            if (tLRPC$TL_document2.mime_type == null) {
                                            }
                                            if (tLRPC$TL_document2.thumbs.isEmpty()) {
                                            }
                                            tLRPC$TL_photo2 = tLRPC$TL_photo;
                                            tLRPC$TL_game = tLRPC$TL_photo2;
                                            str5 = str6;
                                            tLRPC$TL_document = tLRPC$TL_document2;
                                            if (hashMap != null) {
                                                hashMap.put("originalPath", tLRPC$WebDocument.url);
                                                break;
                                            }
                                            bitmapArr = new Bitmap[1];
                                            strArr = new String[1];
                                            if (!MessageObject.isGifDocument(tLRPC$TL_document)) {
                                            }
                                            if (DialogObject.isEncryptedDialog(j)) {
                                            }
                                            if (inputPeer == null) {
                                                break;
                                            }
                                            final TLRPC$TL_document tLRPC$TL_document3 = tLRPC$TL_document;
                                            final String str9 = str5;
                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda74
                                                @Override // java.lang.Runnable
                                                public final void run() {
                                                    SendMessagesHelper.lambda$prepareSendingBotContextResult$81(TLRPC$TL_document.this, bitmapArr, strArr, str9, j, messageObject, messageObject2, tLRPC$BotInlineResult, hashMap, z, i, tLRPC$TL_photo2, tLRPC$TL_game, str, i2, tL_stories$StoryItem, replyQuote, accountInstance);
                                                }
                                            });
                                        }
                                    }
                                    tLRPC$TL_photo = null;
                                } catch (Throwable th2) {
                                    th = th2;
                                    tLRPC$TL_photo = null;
                                }
                                break;
                            case 1:
                                tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                                if (str6.endsWith("mp4")) {
                                    tLRPC$TL_document2.mime_type = "video/mp4";
                                    tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                } else {
                                    tLRPC$TL_document2.mime_type = "image/gif";
                                }
                                int i4 = isEncryptedDialog ? 90 : 320;
                                try {
                                    if (str6.endsWith("mp4")) {
                                        loadBitmap = createVideoThumbnail(str6, 1);
                                        if (loadBitmap == null) {
                                            TLRPC$WebDocument tLRPC$WebDocument3 = tLRPC$BotInlineResult2.thumb;
                                            if ((tLRPC$WebDocument3 instanceof TLRPC$TL_webDocument) && "video/mp4".equals(tLRPC$WebDocument3.mime_type)) {
                                                String httpUrlExtension2 = ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult2.thumb.url, null);
                                                if (TextUtils.isEmpty(httpUrlExtension2)) {
                                                    str4 = FileLoader.getExtensionByMimeType(tLRPC$BotInlineResult2.thumb.mime_type);
                                                } else {
                                                    str4 = "." + httpUrlExtension2;
                                                }
                                                loadBitmap = createVideoThumbnail(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult2.thumb.url) + str4).getAbsolutePath(), 1);
                                            }
                                        }
                                    } else {
                                        float f = i4;
                                        loadBitmap = ImageLoader.loadBitmap(str6, null, f, f, true);
                                    }
                                    if (loadBitmap != null) {
                                        float f2 = i4;
                                        if (i4 > 90) {
                                            z2 = false;
                                            i3 = 80;
                                        } else {
                                            z2 = false;
                                            i3 = 55;
                                        }
                                        TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(loadBitmap, f2, f2, i3, z2);
                                        if (scaleAndSaveImage2 != null) {
                                            tLRPC$TL_document2.thumbs.add(scaleAndSaveImage2);
                                            tLRPC$TL_document2.flags |= 1;
                                        }
                                        loadBitmap.recycle();
                                    }
                                } catch (Throwable th3) {
                                    FileLog.e(th3);
                                }
                                tLRPC$TL_photo = null;
                                break;
                            case 2:
                                if (tLRPC$BotInlineResult2.content.mime_type.lastIndexOf(47) != -1) {
                                    tLRPC$TL_documentAttributeFilename.file_name = "file." + tLRPC$BotInlineResult2.content.mime_type.substring(lastIndexOf + 1);
                                } else {
                                    tLRPC$TL_documentAttributeFilename.file_name = "file";
                                }
                                tLRPC$TL_photo = null;
                                break;
                            case 3:
                                TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio = new TLRPC$TL_documentAttributeAudio();
                                tLRPC$TL_documentAttributeAudio.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                tLRPC$TL_documentAttributeAudio.title = tLRPC$BotInlineResult2.title;
                                int i5 = tLRPC$TL_documentAttributeAudio.flags | 1;
                                tLRPC$TL_documentAttributeAudio.flags = i5;
                                String str10 = tLRPC$BotInlineResult2.description;
                                if (str10 != null) {
                                    tLRPC$TL_documentAttributeAudio.performer = str10;
                                    tLRPC$TL_documentAttributeAudio.flags = i5 | 2;
                                }
                                tLRPC$TL_documentAttributeFilename.file_name = "audio.mp3";
                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeAudio);
                                tLRPC$TL_photo = null;
                                break;
                            case 4:
                                tLRPC$TL_documentAttributeFilename.file_name = "video.mp4";
                                TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                int[] inlineResultWidthAndHeight2 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                tLRPC$TL_documentAttributeVideo.w = inlineResultWidthAndHeight2[0];
                                tLRPC$TL_documentAttributeVideo.h = inlineResultWidthAndHeight2[1];
                                tLRPC$TL_documentAttributeVideo.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeVideo);
                                try {
                                    if (tLRPC$BotInlineResult2.thumb != null) {
                                        Bitmap loadBitmap3 = ImageLoader.loadBitmap(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult2.thumb.url) + "." + ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult2.thumb.url, "jpg")).getAbsolutePath(), null, 90.0f, 90.0f, true);
                                        if (loadBitmap3 != null) {
                                            TLRPC$PhotoSize scaleAndSaveImage3 = ImageLoader.scaleAndSaveImage(loadBitmap3, 90.0f, 90.0f, 55, false);
                                            if (scaleAndSaveImage3 != null) {
                                                tLRPC$TL_document2.thumbs.add(scaleAndSaveImage3);
                                                tLRPC$TL_document2.flags |= 1;
                                            }
                                            loadBitmap3.recycle();
                                        }
                                    }
                                } catch (Throwable th4) {
                                    FileLog.e(th4);
                                }
                                tLRPC$TL_photo = null;
                                break;
                            case 5:
                                TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio2 = new TLRPC$TL_documentAttributeAudio();
                                tLRPC$TL_documentAttributeAudio2.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                tLRPC$TL_documentAttributeAudio2.voice = true;
                                tLRPC$TL_documentAttributeFilename.file_name = "audio.ogg";
                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeAudio2);
                                tLRPC$TL_photo = null;
                                break;
                            default:
                                tLRPC$TL_photo = null;
                                break;
                        }
                        if (tLRPC$TL_documentAttributeFilename.file_name == null) {
                            tLRPC$TL_documentAttributeFilename.file_name = "file";
                        }
                        if (tLRPC$TL_document2.mime_type == null) {
                            tLRPC$TL_document2.mime_type = "application/octet-stream";
                        }
                        if (tLRPC$TL_document2.thumbs.isEmpty()) {
                            TLRPC$TL_photoSize tLRPC$TL_photoSize = new TLRPC$TL_photoSize();
                            int[] inlineResultWidthAndHeight3 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                            tLRPC$TL_photoSize.w = inlineResultWidthAndHeight3[0];
                            tLRPC$TL_photoSize.h = inlineResultWidthAndHeight3[1];
                            tLRPC$TL_photoSize.size = 0;
                            tLRPC$TL_photoSize.location = new TLRPC$TL_fileLocationUnavailable();
                            tLRPC$TL_photoSize.type = "x";
                            tLRPC$TL_document2.thumbs.add(tLRPC$TL_photoSize);
                            tLRPC$TL_document2.flags |= 1;
                        }
                        tLRPC$TL_photo2 = tLRPC$TL_photo;
                        tLRPC$TL_game = tLRPC$TL_photo2;
                        str5 = str6;
                        tLRPC$TL_document = tLRPC$TL_document2;
                        break;
                    case 4:
                        TLRPC$TL_photo generatePhotoSizes = file.exists() ? accountInstance.getSendMessagesHelper().generatePhotoSizes(str6, null) : null;
                        if (generatePhotoSizes == null) {
                            generatePhotoSizes = new TLRPC$TL_photo();
                            generatePhotoSizes.date = accountInstance.getConnectionsManager().getCurrentTime();
                            generatePhotoSizes.file_reference = new byte[0];
                            TLRPC$TL_photoSize tLRPC$TL_photoSize2 = new TLRPC$TL_photoSize();
                            int[] inlineResultWidthAndHeight4 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                            tLRPC$TL_photoSize2.w = inlineResultWidthAndHeight4[0];
                            tLRPC$TL_photoSize2.h = inlineResultWidthAndHeight4[1];
                            tLRPC$TL_photoSize2.size = 1;
                            tLRPC$TL_photoSize2.location = new TLRPC$TL_fileLocationUnavailable();
                            tLRPC$TL_photoSize2.type = "x";
                            generatePhotoSizes.sizes.add(tLRPC$TL_photoSize2);
                        }
                        tLRPC$TL_photo2 = generatePhotoSizes;
                        str5 = str6;
                        obj = null;
                        tLRPC$TL_game = obj;
                        break;
                    default:
                        str5 = str6;
                        tLRPC$TL_photo2 = null;
                        tLRPC$TL_game = tLRPC$TL_photo2;
                        break;
                }
            }
            str5 = null;
            tLRPC$TL_document = null;
            tLRPC$TL_photo2 = null;
            tLRPC$TL_game = tLRPC$TL_photo2;
        }
        if (hashMap != null && (tLRPC$WebDocument = tLRPC$BotInlineResult2.content) != null) {
            hashMap.put("originalPath", tLRPC$WebDocument.url);
        }
        bitmapArr = new Bitmap[1];
        strArr = new String[1];
        if (!MessageObject.isGifDocument(tLRPC$TL_document)) {
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_document.thumbs, 320);
            File pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document);
            if (!pathToAttach.exists()) {
                pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document, true);
            }
            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, pathToAttach.getAbsolutePath(), null, 0L);
            strArr[0] = getKeyForPhotoSize(accountInstance, closestPhotoSizeWithSize, bitmapArr, true, true);
        }
        inputPeer = DialogObject.isEncryptedDialog(j) ? accountInstance.getMessagesController().getInputPeer(j) : null;
        if (inputPeer == null && inputPeer.user_id != 0 && accountInstance.getMessagesController().getUserFull(inputPeer.user_id) != null && accountInstance.getMessagesController().getUserFull(inputPeer.user_id).voice_messages_forbidden && tLRPC$TL_document != null) {
            if (MessageObject.isVoiceDocument(tLRPC$TL_document)) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda75
                    @Override // java.lang.Runnable
                    public final void run() {
                        AlertsCreator.showSendMediaAlert(7, BaseFragment.this, null);
                    }
                });
                return;
            } else if (MessageObject.isRoundVideoDocument(tLRPC$TL_document)) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda76
                    @Override // java.lang.Runnable
                    public final void run() {
                        AlertsCreator.showSendMediaAlert(8, BaseFragment.this, null);
                    }
                });
                return;
            } else {
                return;
            }
        }
        final TLRPC$TL_document tLRPC$TL_document32 = tLRPC$TL_document;
        final String str92 = str5;
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda74
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingBotContextResult$81(TLRPC$TL_document.this, bitmapArr, strArr, str92, j, messageObject, messageObject2, tLRPC$BotInlineResult, hashMap, z, i, tLRPC$TL_photo2, tLRPC$TL_game, str, i2, tL_stories$StoryItem, replyQuote, accountInstance);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingBotContextResult$81(TLRPC$TL_document tLRPC$TL_document, Bitmap[] bitmapArr, String[] strArr, String str, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$BotInlineResult tLRPC$BotInlineResult, HashMap hashMap, boolean z, int i, TLRPC$TL_photo tLRPC$TL_photo, TLRPC$TL_game tLRPC$TL_game, String str2, int i2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, AccountInstance accountInstance) {
        SendMessageParams sendMessageParams = null;
        if (tLRPC$TL_document != null) {
            if (bitmapArr[0] != null && strArr[0] != null) {
                ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
            }
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage = tLRPC$BotInlineResult.send_message;
            sendMessageParams = SendMessageParams.of(tLRPC$TL_document, null, str, j, messageObject, messageObject2, tLRPC$BotInlineMessage.message, tLRPC$BotInlineMessage.entities, tLRPC$BotInlineMessage.reply_markup, hashMap, z, i, 0, tLRPC$BotInlineResult, null, false);
        } else if (tLRPC$TL_photo != null) {
            TLRPC$WebDocument tLRPC$WebDocument = tLRPC$BotInlineResult.content;
            String str3 = tLRPC$WebDocument != null ? tLRPC$WebDocument.url : null;
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage2 = tLRPC$BotInlineResult.send_message;
            sendMessageParams = SendMessageParams.of(tLRPC$TL_photo, str3, j, messageObject, messageObject2, tLRPC$BotInlineMessage2.message, tLRPC$BotInlineMessage2.entities, tLRPC$BotInlineMessage2.reply_markup, hashMap, z, i, 0, tLRPC$BotInlineResult, false);
        } else if (tLRPC$TL_game != null) {
            sendMessageParams = SendMessageParams.of(tLRPC$TL_game, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
        }
        if (sendMessageParams != null) {
            sendMessageParams.quick_reply_shortcut = str2;
            sendMessageParams.quick_reply_shortcut_id = i2;
            sendMessageParams.replyToStoryItem = tL_stories$StoryItem;
            sendMessageParams.replyQuote = replyQuote;
            accountInstance.getSendMessagesHelper().sendMessage(sendMessageParams);
        }
    }

    private static String getTrimmedString(String str) {
        String trim = str.trim();
        if (trim.length() == 0) {
            return trim;
        }
        while (str.startsWith("\n")) {
            str = str.substring(1);
        }
        while (str.endsWith("\n")) {
            str = str.substring(0, str.length() - 1);
        }
        return str;
    }

    public static void prepareSendingText(AccountInstance accountInstance, String str, long j, boolean z, int i) {
        prepareSendingText(accountInstance, str, j, 0L, z, i);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingText$84(final String str, final long j, final AccountInstance accountInstance, final long j2, final boolean z, final int i) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda8
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingText$83(str, j, accountInstance, j2, z, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingText$85(final String str, final long j, final AccountInstance accountInstance, final long j2, final boolean z, final int i) {
        Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda7
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingText$84(str, j, accountInstance, j2, z, i);
            }
        });
    }

    public static void prepareSendingText(final AccountInstance accountInstance, final String str, final long j, final long j2, final boolean z, final int i) {
        accountInstance.getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda9
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingText$85(str, j2, accountInstance, j, z, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:12:0x0047  */
    /* JADX WARN: Removed duplicated region for block: B:15:? A[RETURN, SYNTHETIC] */
    /* JADX WARN: Unsupported multi-entry loop pattern (BACK_EDGE: B:13:0x0079 -> B:11:0x0045). Please submit an issue!!! */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingText$83(String str, long j, AccountInstance accountInstance, long j2, boolean z, int i) {
        String trimmedString = getTrimmedString(str);
        if (trimmedString.length() == 0) {
            return;
        }
        int ceil = (int) Math.ceil(trimmedString.length() / 4096.0f);
        MessageObject messageObject = null;
        int i2 = 0;
        if (j != 0) {
            TLRPC$TL_forumTopic findTopic = accountInstance.getMessagesController().getTopicsController().findTopic(-j2, j);
            if (findTopic != null && findTopic.topicStartMessage != null) {
                messageObject = new MessageObject(accountInstance.getCurrentAccount(), findTopic.topicStartMessage, false, false);
                messageObject.isTopicMainMessage = true;
            }
            if (i2 < ceil) {
                return;
            }
            int i3 = i2 * LiteMode.FLAG_ANIMATED_EMOJI_CHAT_NOT_PREMIUM;
            i2++;
            accountInstance.getSendMessagesHelper().sendMessage(SendMessageParams.of(trimmedString.substring(i3, Math.min(i2 * LiteMode.FLAG_ANIMATED_EMOJI_CHAT_NOT_PREMIUM, trimmedString.length())), j2, messageObject, messageObject, null, true, null, null, null, z, i, null, false));
        }
        if (i2 < ceil) {
        }
    }

    public static void ensureMediaThumbExists(AccountInstance accountInstance, boolean z, TLObject tLObject, String str, Uri uri, long j) {
        TLRPC$PhotoSize scaleAndSaveImage;
        TLRPC$PhotoSize scaleAndSaveImage2;
        if (tLObject instanceof TLRPC$TL_photo) {
            TLRPC$TL_photo tLRPC$TL_photo = (TLRPC$TL_photo) tLObject;
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo.sizes, 90);
            boolean exists = ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoPathSize)) ? true : FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize, true).exists();
            TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo.sizes, AndroidUtilities.getPhotoSize());
            boolean exists2 = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize2, false).exists();
            if (exists && exists2) {
                return;
            }
            Bitmap loadBitmap = ImageLoader.loadBitmap(str, uri, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true);
            if (loadBitmap == null) {
                loadBitmap = ImageLoader.loadBitmap(str, uri, 800.0f, 800.0f, true);
            }
            Bitmap bitmap = loadBitmap;
            if (!exists2 && (scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize2, bitmap, Bitmap.CompressFormat.JPEG, true, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), 80, false, 101, 101, false)) != closestPhotoSizeWithSize2) {
                tLRPC$TL_photo.sizes.add(0, scaleAndSaveImage2);
            }
            if (!exists && (scaleAndSaveImage = ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize, bitmap, 90.0f, 90.0f, 55, true, false)) != closestPhotoSizeWithSize) {
                tLRPC$TL_photo.sizes.add(0, scaleAndSaveImage);
            }
            if (bitmap != null) {
                bitmap.recycle();
            }
        } else if (tLObject instanceof TLRPC$TL_document) {
            TLRPC$TL_document tLRPC$TL_document = (TLRPC$TL_document) tLObject;
            if ((MessageObject.isVideoDocument(tLRPC$TL_document) || MessageObject.isNewGifDocument(tLRPC$TL_document)) && MessageObject.isDocumentHasThumb(tLRPC$TL_document)) {
                TLRPC$PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_document.thumbs, 320);
                if ((closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoStrippedSize) || (closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoPathSize) || FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize3, true).exists()) {
                    return;
                }
                Bitmap createVideoThumbnailAtTime = createVideoThumbnailAtTime(str, j);
                Bitmap createVideoThumbnail = createVideoThumbnailAtTime == null ? createVideoThumbnail(str, 1) : createVideoThumbnailAtTime;
                int i = z ? 90 : 320;
                float f = i;
                tLRPC$TL_document.thumbs.set(0, ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize3, createVideoThumbnail, f, f, i > 90 ? 80 : 55, false, true));
            }
        }
    }

    public static String getKeyForPhotoSize(AccountInstance accountInstance, TLRPC$PhotoSize tLRPC$PhotoSize, Bitmap[] bitmapArr, boolean z, boolean z2) {
        if (tLRPC$PhotoSize == null || tLRPC$PhotoSize.location == null) {
            return null;
        }
        Point messageSize = ChatMessageCell.getMessageSize(tLRPC$PhotoSize.w, tLRPC$PhotoSize.h);
        if (bitmapArr != null) {
            try {
                BitmapFactory.Options options = new BitmapFactory.Options();
                options.inJustDecodeBounds = true;
                File pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$PhotoSize, z2);
                FileInputStream fileInputStream = new FileInputStream(pathToAttach);
                BitmapFactory.decodeStream(fileInputStream, null, options);
                fileInputStream.close();
                float max = Math.max(options.outWidth / messageSize.x, options.outHeight / messageSize.y);
                if (max < 1.0f) {
                    max = 1.0f;
                }
                options.inJustDecodeBounds = false;
                options.inSampleSize = (int) max;
                options.inPreferredConfig = Bitmap.Config.RGB_565;
                if (Build.VERSION.SDK_INT >= 21) {
                    FileInputStream fileInputStream2 = new FileInputStream(pathToAttach);
                    bitmapArr[0] = BitmapFactory.decodeStream(fileInputStream2, null, options);
                    fileInputStream2.close();
                }
            } catch (Throwable unused) {
            }
        }
        return String.format(Locale.US, z ? "%d_%d@%d_%d_b" : "%d_%d@%d_%d", Long.valueOf(tLRPC$PhotoSize.location.volume_id), Integer.valueOf(tLRPC$PhotoSize.location.local_id), Integer.valueOf((int) (messageSize.x / AndroidUtilities.density)), Integer.valueOf((int) (messageSize.y / AndroidUtilities.density)));
    }

    public static boolean shouldSendWebPAsSticker(String str, Uri uri) {
        BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = true;
        if (str != null) {
            try {
                RandomAccessFile randomAccessFile = new RandomAccessFile(str, "r");
                MappedByteBuffer map = randomAccessFile.getChannel().map(FileChannel.MapMode.READ_ONLY, 0L, str.length());
                Utilities.loadWebpImage(null, map, map.limit(), options, true);
                randomAccessFile.close();
            } catch (Exception e) {
                FileLog.e(e);
            }
        } else {
            try {
                InputStream openInputStream = ApplicationLoader.applicationContext.getContentResolver().openInputStream(uri);
                BitmapFactory.decodeStream(openInputStream, null, options);
                if (openInputStream != null) {
                    openInputStream.close();
                }
            } catch (Exception unused) {
            }
        }
        return options.outWidth < 800 && options.outHeight < 800;
    }

    public static void prepareSendingMedia(final AccountInstance accountInstance, final ArrayList<SendingMediaInfo> arrayList, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final boolean z, boolean z2, final MessageObject messageObject3, final boolean z3, final int i, int i2, final boolean z4, final InputContentInfoCompat inputContentInfoCompat, final String str, final int i3) {
        final boolean z5;
        if (arrayList.isEmpty()) {
            return;
        }
        int size = arrayList.size();
        int i4 = 0;
        while (true) {
            if (i4 >= size) {
                z5 = z2;
                break;
            } else if (arrayList.get(i4).ttl > 0) {
                z5 = false;
                break;
            } else {
                i4++;
            }
        }
        mediaSendQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda11
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingMedia$91(arrayList, j, z, z5, accountInstance, messageObject3, messageObject, messageObject2, z3, i, tL_stories$StoryItem, replyQuote, str, i3, inputContentInfoCompat, z4);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x005d, code lost:
        if (r4 != false) goto L81;
     */
    /* JADX WARN: Code restructure failed: missing block: B:262:0x063e, code lost:
        if (r10 != null) goto L245;
     */
    /* JADX WARN: Code restructure failed: missing block: B:289:0x067f, code lost:
        if (r5.endsWith(r14) != false) goto L266;
     */
    /* JADX WARN: Code restructure failed: missing block: B:409:0x0913, code lost:
        if (r2 == (r15 - 1)) goto L311;
     */
    /* JADX WARN: Code restructure failed: missing block: B:594:0x0d8c, code lost:
        if (r9 == (r14 - 1)) goto L598;
     */
    /* JADX WARN: Removed duplicated region for block: B:143:0x02ee A[Catch: Exception -> 0x02df, TryCatch #10 {Exception -> 0x02df, blocks: (B:134:0x02d7, B:141:0x02e4, B:143:0x02ee, B:144:0x02f9), top: B:673:0x02d7 }] */
    /* JADX WARN: Removed duplicated region for block: B:144:0x02f9 A[Catch: Exception -> 0x02df, TRY_LEAVE, TryCatch #10 {Exception -> 0x02df, blocks: (B:134:0x02d7, B:141:0x02e4, B:143:0x02ee, B:144:0x02f9), top: B:673:0x02d7 }] */
    /* JADX WARN: Removed duplicated region for block: B:162:0x0333  */
    /* JADX WARN: Removed duplicated region for block: B:163:0x035c  */
    /* JADX WARN: Removed duplicated region for block: B:168:0x036c  */
    /* JADX WARN: Removed duplicated region for block: B:169:0x036e  */
    /* JADX WARN: Removed duplicated region for block: B:172:0x0378  */
    /* JADX WARN: Removed duplicated region for block: B:189:0x0447  */
    /* JADX WARN: Removed duplicated region for block: B:312:0x06d1  */
    /* JADX WARN: Removed duplicated region for block: B:317:0x0724  */
    /* JADX WARN: Removed duplicated region for block: B:347:0x07c4  */
    /* JADX WARN: Removed duplicated region for block: B:406:0x08f5  */
    /* JADX WARN: Removed duplicated region for block: B:413:0x091e  */
    /* JADX WARN: Removed duplicated region for block: B:483:0x0b81  */
    /* JADX WARN: Removed duplicated region for block: B:529:0x0c5e  */
    /* JADX WARN: Removed duplicated region for block: B:530:0x0c64  */
    /* JADX WARN: Removed duplicated region for block: B:557:0x0cca  */
    /* JADX WARN: Removed duplicated region for block: B:560:0x0cdb  */
    /* JADX WARN: Removed duplicated region for block: B:566:0x0cf2  */
    /* JADX WARN: Removed duplicated region for block: B:572:0x0d04  */
    /* JADX WARN: Removed duplicated region for block: B:580:0x0d1e  */
    /* JADX WARN: Removed duplicated region for block: B:581:0x0d21  */
    /* JADX WARN: Removed duplicated region for block: B:585:0x0d57  */
    /* JADX WARN: Removed duplicated region for block: B:587:0x0d5c  */
    /* JADX WARN: Removed duplicated region for block: B:588:0x0d64  */
    /* JADX WARN: Removed duplicated region for block: B:58:0x00bc  */
    /* JADX WARN: Removed duplicated region for block: B:59:0x00df  */
    /* JADX WARN: Removed duplicated region for block: B:610:0x0de2 A[LOOP:4: B:608:0x0dda->B:610:0x0de2, LOOP_END] */
    /* JADX WARN: Removed duplicated region for block: B:675:0x0639 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:679:0x0306 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:691:0x0d01 A[SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:92:0x0176  */
    /* JADX WARN: Removed duplicated region for block: B:93:0x017b  */
    /* JADX WARN: Type inference failed for: r1v111 */
    /* JADX WARN: Type inference failed for: r1v17, types: [boolean, int] */
    /* JADX WARN: Type inference failed for: r1v55 */
    /* JADX WARN: Type inference failed for: r5v29 */
    /* JADX WARN: Type inference failed for: r5v32 */
    /* JADX WARN: Type inference failed for: r5v33 */
    /* JADX WARN: Type inference failed for: r8v0 */
    /* JADX WARN: Type inference failed for: r8v25, types: [boolean] */
    /* JADX WARN: Type inference failed for: r8v27 */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingMedia$91(ArrayList arrayList, final long j, boolean z, boolean z2, final AccountInstance accountInstance, final MessageObject messageObject, final MessageObject messageObject2, final MessageObject messageObject3, final boolean z3, final int i, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final String str, final int i2, InputContentInfoCompat inputContentInfoCompat, final boolean z4) {
        int i3;
        HashMap hashMap;
        int i4;
        int i5;
        ArrayList arrayList2;
        boolean z5;
        int i6;
        long j2;
        ArrayList arrayList3;
        ArrayList arrayList4;
        int i7;
        Object obj;
        boolean z6;
        HashMap hashMap2;
        long j3;
        String str2;
        String str3;
        String str4;
        ArrayList arrayList5;
        int i8;
        String str5;
        String str6;
        HashMap hashMap3;
        VideoEditedInfo videoEditedInfo;
        String str7;
        boolean z7;
        long j4;
        int i9;
        int i10;
        ArrayList arrayList6;
        ArrayList arrayList7;
        String str8;
        long j5;
        boolean z8;
        boolean z9;
        Object obj2;
        long j6;
        File file;
        String str9;
        Object obj3;
        ArrayList arrayList8;
        boolean z10;
        boolean z11;
        String str10;
        Object obj4;
        Object obj5;
        String str11;
        TLRPC$TL_document tLRPC$TL_document;
        ?? r1;
        String str12;
        final Bitmap bitmap;
        final String str13;
        final TLRPC$TL_document tLRPC$TL_document2;
        final HashMap hashMap4;
        String str14;
        long j7;
        int i11;
        int i12;
        int i13;
        ArrayList<TLRPC$InputDocument> arrayList9;
        int i14;
        int size;
        int i15;
        boolean z12;
        int i16;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo;
        int i17;
        int i18;
        TLRPC$FileLocation tLRPC$FileLocation;
        long j8;
        int i19;
        MediaController.SearchImage searchImage;
        String str15;
        String str16;
        String str17;
        String str18;
        String str19;
        boolean z13;
        Object obj6;
        String str20;
        HashMap hashMap5;
        String str21;
        boolean z14;
        String str22;
        String str23;
        ArrayList arrayList10;
        String str24;
        String str25;
        Object obj7;
        int i20;
        Object obj8;
        SendingMediaInfo sendingMediaInfo;
        TLRPC$TL_photo tLRPC$TL_photo;
        String str26;
        boolean z15;
        final TLRPC$TL_photo tLRPC$TL_photo2;
        String str27;
        Object obj9;
        String str28;
        TLRPC$TL_photo tLRPC$TL_photo3;
        int i21;
        long j9;
        int i22;
        ArrayList arrayList11;
        ArrayList arrayList12;
        ArrayList arrayList13;
        long j10;
        int i23;
        ArrayList arrayList14;
        ArrayList arrayList15;
        ArrayList arrayList16;
        Uri uri;
        InputStream inputStream;
        FileOutputStream fileOutputStream;
        Uri uri2;
        final TLRPC$TL_photo tLRPC$TL_photo4;
        final boolean z16;
        long j11;
        int i24;
        int i25;
        Uri uri3;
        boolean z17;
        File file2;
        TLRPC$TL_document tLRPC$TL_document3;
        Object obj10;
        Object obj11;
        String str29;
        File file3;
        int i26;
        Bitmap loadBitmap;
        int i27;
        String str30;
        boolean z18;
        String str31;
        SendingMediaInfo sendingMediaInfo2;
        int i28;
        String str32;
        TLRPC$TL_photo tLRPC$TL_photo5;
        String str33;
        TLRPC$TL_photo tLRPC$TL_photo6;
        String str34;
        TLRPC$TL_photo tLRPC$TL_photo7;
        Uri uri4;
        Uri uri5;
        ArrayList arrayList17 = arrayList;
        long currentTimeMillis = System.currentTimeMillis();
        int size2 = arrayList.size();
        final boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        String str35 = ".webp";
        String str36 = ".gif";
        String str37 = "_";
        Uri uri6 = null;
        ?? r8 = 1;
        if (z || !z2) {
            i3 = 1;
            hashMap = null;
        } else {
            HashMap hashMap6 = new HashMap();
            int i29 = 0;
            while (i29 < size2) {
                SendingMediaInfo sendingMediaInfo3 = (SendingMediaInfo) arrayList17.get(i29);
                if (sendingMediaInfo3.searchImage == null && !sendingMediaInfo3.isVideo && sendingMediaInfo3.videoEditedInfo == null) {
                    String str38 = sendingMediaInfo3.path;
                    if (str38 != null || (uri5 = sendingMediaInfo3.uri) == null) {
                        str30 = str38;
                    } else {
                        str38 = AndroidUtilities.getPath(uri5);
                        str30 = sendingMediaInfo3.uri.toString();
                    }
                    if (str38 == null || sendingMediaInfo3.ttl > 0) {
                        z18 = false;
                    } else {
                        if (str38.endsWith(".gif")) {
                            z18 = false;
                        } else {
                            z18 = str38.endsWith(".webp");
                        }
                        if (arrayList.size() > r8 || ((z18 && !shouldSendWebPAsSticker(str38, uri6)) || !TextUtils.isEmpty(sendingMediaInfo3.caption))) {
                            sendingMediaInfo3.forceImage = r8;
                            if (str38 == null) {
                                File file4 = new File(str38);
                                str31 = str30 + file4.length() + "_" + file4.lastModified();
                            } else {
                                str31 = null;
                            }
                            if (isEncryptedDialog && sendingMediaInfo3.ttl == 0) {
                                Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str31, !isEncryptedDialog ? 0 : 3);
                                if (sentFile == null || !(sentFile[0] instanceof TLRPC$TL_photo)) {
                                    str33 = null;
                                    tLRPC$TL_photo6 = null;
                                } else {
                                    tLRPC$TL_photo6 = (TLRPC$TL_photo) sentFile[0];
                                    str33 = (String) sentFile[1];
                                }
                                if (tLRPC$TL_photo6 == null && sendingMediaInfo3.uri != null) {
                                    Object[] sentFile2 = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(sendingMediaInfo3.uri), !isEncryptedDialog ? 0 : 3);
                                    if (sentFile2 != null) {
                                        if (sentFile2[0] instanceof TLRPC$TL_photo) {
                                            tLRPC$TL_photo7 = (TLRPC$TL_photo) sentFile2[0];
                                            str34 = (String) sentFile2[1];
                                            TLRPC$TL_photo tLRPC$TL_photo8 = tLRPC$TL_photo7;
                                            sendingMediaInfo2 = sendingMediaInfo3;
                                            i27 = i29;
                                            TLRPC$TL_photo tLRPC$TL_photo9 = tLRPC$TL_photo7;
                                            i28 = 1;
                                            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo8, sendingMediaInfo3.path, sendingMediaInfo3.uri, 0L);
                                            str32 = str34;
                                            tLRPC$TL_photo5 = tLRPC$TL_photo9;
                                        } else {
                                            str34 = str33;
                                            tLRPC$TL_photo7 = tLRPC$TL_photo6;
                                            TLRPC$TL_photo tLRPC$TL_photo82 = tLRPC$TL_photo7;
                                            sendingMediaInfo2 = sendingMediaInfo3;
                                            i27 = i29;
                                            TLRPC$TL_photo tLRPC$TL_photo92 = tLRPC$TL_photo7;
                                            i28 = 1;
                                            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo82, sendingMediaInfo3.path, sendingMediaInfo3.uri, 0L);
                                            str32 = str34;
                                            tLRPC$TL_photo5 = tLRPC$TL_photo92;
                                        }
                                    }
                                }
                                str34 = str33;
                                tLRPC$TL_photo7 = tLRPC$TL_photo6;
                                TLRPC$TL_photo tLRPC$TL_photo822 = tLRPC$TL_photo7;
                                sendingMediaInfo2 = sendingMediaInfo3;
                                i27 = i29;
                                TLRPC$TL_photo tLRPC$TL_photo922 = tLRPC$TL_photo7;
                                i28 = 1;
                                ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo822, sendingMediaInfo3.path, sendingMediaInfo3.uri, 0L);
                                str32 = str34;
                                tLRPC$TL_photo5 = tLRPC$TL_photo922;
                            } else {
                                sendingMediaInfo2 = sendingMediaInfo3;
                                i27 = i29;
                                i28 = 1;
                                str32 = null;
                                tLRPC$TL_photo5 = null;
                            }
                            final MediaSendPrepareWorker mediaSendPrepareWorker = new MediaSendPrepareWorker();
                            final SendingMediaInfo sendingMediaInfo4 = sendingMediaInfo2;
                            hashMap6.put(sendingMediaInfo4, mediaSendPrepareWorker);
                            if (tLRPC$TL_photo5 == null) {
                                mediaSendPrepareWorker.parentObject = str32;
                                mediaSendPrepareWorker.photo = tLRPC$TL_photo5;
                            } else {
                                mediaSendPrepareWorker.sync = new CountDownLatch(i28);
                                mediaSendThreadPool.execute(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda21
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingMedia$86(SendMessagesHelper.MediaSendPrepareWorker.this, accountInstance, sendingMediaInfo4, isEncryptedDialog);
                                    }
                                });
                            }
                            i29 = i27 + 1;
                            r8 = 1;
                            uri6 = null;
                        }
                    }
                    if (!ImageLoader.shouldSendImageAsDocument(sendingMediaInfo3.path, sendingMediaInfo3.uri)) {
                        if (str38 == null && (uri4 = sendingMediaInfo3.uri) != null && (MediaController.isGif(uri4) || (z18 = MediaController.isWebp(sendingMediaInfo3.uri)))) {
                            if (arrayList.size() > r8 || ((z18 && !shouldSendWebPAsSticker(null, sendingMediaInfo3.uri)) || !TextUtils.isEmpty(sendingMediaInfo3.caption))) {
                                sendingMediaInfo3.forceImage = r8;
                            }
                        }
                        if (str38 == null) {
                        }
                        if (isEncryptedDialog) {
                        }
                        sendingMediaInfo2 = sendingMediaInfo3;
                        i27 = i29;
                        i28 = 1;
                        str32 = null;
                        tLRPC$TL_photo5 = null;
                        final MediaSendPrepareWorker mediaSendPrepareWorker2 = new MediaSendPrepareWorker();
                        final SendingMediaInfo sendingMediaInfo42 = sendingMediaInfo2;
                        hashMap6.put(sendingMediaInfo42, mediaSendPrepareWorker2);
                        if (tLRPC$TL_photo5 == null) {
                        }
                        i29 = i27 + 1;
                        r8 = 1;
                        uri6 = null;
                    }
                }
                i27 = i29;
                i29 = i27 + 1;
                r8 = 1;
                uri6 = null;
            }
            i3 = 1;
            hashMap = hashMap6;
        }
        HashMap hashMap7 = hashMap;
        int i30 = 0;
        ArrayList arrayList18 = null;
        ArrayList arrayList19 = null;
        ArrayList arrayList20 = null;
        int i31 = 0;
        long j12 = 0;
        String str39 = null;
        ArrayList arrayList21 = null;
        ArrayList arrayList22 = null;
        long j13 = 0;
        while (i31 < size2) {
            final SendingMediaInfo sendingMediaInfo5 = (SendingMediaInfo) arrayList17.get(i31);
            if (z2 && size2 > i3 && i30 % 10 == 0) {
                j13 = Utilities.random.nextLong();
                j2 = j13;
                i6 = 0;
            } else {
                i6 = i30;
                j2 = j12;
            }
            MediaController.SearchImage searchImage2 = sendingMediaInfo5.searchImage;
            String str40 = str36;
            String str41 = str37;
            String str42 = str35;
            ArrayList arrayList23 = arrayList18;
            int i32 = size2;
            if (searchImage2 != null) {
                ArrayList arrayList24 = arrayList19;
                if (sendingMediaInfo5.videoEditedInfo == null) {
                    ArrayList arrayList25 = arrayList20;
                    if (searchImage2.type == 1) {
                        final HashMap hashMap8 = new HashMap();
                        TLRPC$Document tLRPC$Document = sendingMediaInfo5.searchImage.document;
                        if (tLRPC$Document instanceof TLRPC$TL_document) {
                            tLRPC$TL_document3 = (TLRPC$TL_document) tLRPC$Document;
                            file2 = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document3, true);
                        } else {
                            file2 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo5.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo5.searchImage.imageUrl, "jpg"));
                            tLRPC$TL_document3 = null;
                        }
                        if (tLRPC$TL_document3 == null) {
                            TLRPC$TL_document tLRPC$TL_document4 = new TLRPC$TL_document();
                            obj10 = "originalPath";
                            tLRPC$TL_document4.id = 0L;
                            tLRPC$TL_document4.file_reference = new byte[0];
                            tLRPC$TL_document4.date = accountInstance.getConnectionsManager().getCurrentTime();
                            TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                            tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                            tLRPC$TL_document4.attributes.add(tLRPC$TL_documentAttributeFilename);
                            tLRPC$TL_document4.size = sendingMediaInfo5.searchImage.size;
                            tLRPC$TL_document4.dc_id = 0;
                            if (!z && file2.toString().endsWith("mp4")) {
                                tLRPC$TL_document4.mime_type = "video/mp4";
                                tLRPC$TL_document4.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                            } else {
                                tLRPC$TL_document4.mime_type = "image/gif";
                            }
                            if (file2.exists()) {
                                file3 = file2;
                            } else {
                                file2 = null;
                                file3 = null;
                            }
                            if (file2 == null) {
                                file2 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo5.searchImage.thumbUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo5.searchImage.thumbUrl, "jpg"));
                                if (!file2.exists()) {
                                    file2 = null;
                                }
                            }
                            if (file2 != null) {
                                if (!isEncryptedDialog) {
                                    try {
                                        if (sendingMediaInfo5.ttl == 0) {
                                            i26 = 320;
                                            if (!file2.getAbsolutePath().endsWith("mp4")) {
                                                loadBitmap = createVideoThumbnail(file2.getAbsolutePath(), 1);
                                                obj11 = null;
                                            } else {
                                                float f = i26;
                                                obj11 = null;
                                                loadBitmap = ImageLoader.loadBitmap(file2.getAbsolutePath(), null, f, f, true);
                                            }
                                            if (loadBitmap != null) {
                                                try {
                                                    float f2 = i26;
                                                    TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap, f2, f2, i26 > 90 ? 80 : 55, isEncryptedDialog);
                                                    if (scaleAndSaveImage != null) {
                                                        tLRPC$TL_document4.thumbs.add(scaleAndSaveImage);
                                                        tLRPC$TL_document4.flags |= 1;
                                                    }
                                                    loadBitmap.recycle();
                                                } catch (Exception e) {
                                                    e = e;
                                                    FileLog.e(e);
                                                    if (tLRPC$TL_document4.thumbs.isEmpty()) {
                                                    }
                                                    tLRPC$TL_document3 = tLRPC$TL_document4;
                                                    file2 = file3;
                                                    if (file2 == null) {
                                                    }
                                                    str29 = sendingMediaInfo5.searchImage.imageUrl;
                                                    if (str29 != null) {
                                                    }
                                                    i9 = i31;
                                                    final TLRPC$TL_document tLRPC$TL_document5 = tLRPC$TL_document3;
                                                    final String str43 = r1;
                                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda14
                                                        @Override // java.lang.Runnable
                                                        public final void run() {
                                                            SendMessagesHelper.lambda$prepareSendingMedia$87(MessageObject.this, accountInstance, tLRPC$TL_document5, str43, hashMap8, sendingMediaInfo5, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2);
                                                        }
                                                    });
                                                    hashMap3 = hashMap7;
                                                    i30 = i6;
                                                    j4 = j2;
                                                    arrayList19 = arrayList24;
                                                    arrayList20 = arrayList25;
                                                    str5 = str40;
                                                    str7 = str41;
                                                    str6 = str42;
                                                    z7 = isEncryptedDialog;
                                                    i10 = i32;
                                                    arrayList18 = arrayList23;
                                                    i31 = i9 + 1;
                                                    arrayList17 = arrayList;
                                                    str35 = str6;
                                                    str36 = str5;
                                                    str37 = str7;
                                                    hashMap7 = hashMap3;
                                                    j12 = j4;
                                                    isEncryptedDialog = z7;
                                                    size2 = i10;
                                                    i3 = 1;
                                                }
                                            }
                                        }
                                    } catch (Exception e2) {
                                        e = e2;
                                        obj11 = null;
                                        FileLog.e(e);
                                        if (tLRPC$TL_document4.thumbs.isEmpty()) {
                                        }
                                        tLRPC$TL_document3 = tLRPC$TL_document4;
                                        file2 = file3;
                                        if (file2 == null) {
                                        }
                                        str29 = sendingMediaInfo5.searchImage.imageUrl;
                                        if (str29 != null) {
                                        }
                                        i9 = i31;
                                        final TLRPC$TL_document tLRPC$TL_document52 = tLRPC$TL_document3;
                                        final String str432 = r1;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda14
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingMedia$87(MessageObject.this, accountInstance, tLRPC$TL_document52, str432, hashMap8, sendingMediaInfo5, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2);
                                            }
                                        });
                                        hashMap3 = hashMap7;
                                        i30 = i6;
                                        j4 = j2;
                                        arrayList19 = arrayList24;
                                        arrayList20 = arrayList25;
                                        str5 = str40;
                                        str7 = str41;
                                        str6 = str42;
                                        z7 = isEncryptedDialog;
                                        i10 = i32;
                                        arrayList18 = arrayList23;
                                        i31 = i9 + 1;
                                        arrayList17 = arrayList;
                                        str35 = str6;
                                        str36 = str5;
                                        str37 = str7;
                                        hashMap7 = hashMap3;
                                        j12 = j4;
                                        isEncryptedDialog = z7;
                                        size2 = i10;
                                        i3 = 1;
                                    }
                                }
                                i26 = 90;
                                if (!file2.getAbsolutePath().endsWith("mp4")) {
                                }
                                if (loadBitmap != null) {
                                }
                            } else {
                                obj11 = null;
                            }
                            if (tLRPC$TL_document4.thumbs.isEmpty()) {
                                TLRPC$TL_photoSize tLRPC$TL_photoSize = new TLRPC$TL_photoSize();
                                MediaController.SearchImage searchImage3 = sendingMediaInfo5.searchImage;
                                tLRPC$TL_photoSize.w = searchImage3.width;
                                tLRPC$TL_photoSize.h = searchImage3.height;
                                tLRPC$TL_photoSize.size = 0;
                                tLRPC$TL_photoSize.location = new TLRPC$TL_fileLocationUnavailable();
                                tLRPC$TL_photoSize.type = "x";
                                tLRPC$TL_document4.thumbs.add(tLRPC$TL_photoSize);
                                tLRPC$TL_document4.flags |= 1;
                            }
                            tLRPC$TL_document3 = tLRPC$TL_document4;
                            file2 = file3;
                        } else {
                            obj10 = "originalPath";
                            obj11 = null;
                        }
                        String file5 = file2 == null ? sendingMediaInfo5.searchImage.imageUrl : file2.toString();
                        str29 = sendingMediaInfo5.searchImage.imageUrl;
                        if (str29 != null) {
                            hashMap8.put(obj10, str29);
                        }
                        i9 = i31;
                        final TLRPC$TL_document tLRPC$TL_document522 = tLRPC$TL_document3;
                        final String str4322 = file5;
                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda14
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.lambda$prepareSendingMedia$87(MessageObject.this, accountInstance, tLRPC$TL_document522, str4322, hashMap8, sendingMediaInfo5, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2);
                            }
                        });
                        hashMap3 = hashMap7;
                        i30 = i6;
                        j4 = j2;
                        arrayList19 = arrayList24;
                        arrayList20 = arrayList25;
                        str5 = str40;
                        str7 = str41;
                        str6 = str42;
                        z7 = isEncryptedDialog;
                        i10 = i32;
                        arrayList18 = arrayList23;
                        i31 = i9 + 1;
                        arrayList17 = arrayList;
                        str35 = str6;
                        str36 = str5;
                        str37 = str7;
                        hashMap7 = hashMap3;
                        j12 = j4;
                        isEncryptedDialog = z7;
                        size2 = i10;
                        i3 = 1;
                    } else {
                        int i33 = i31;
                        boolean z19 = isEncryptedDialog;
                        HashMap hashMap9 = hashMap7;
                        TLRPC$Photo tLRPC$Photo = searchImage2.photo;
                        TLRPC$TL_photo tLRPC$TL_photo10 = tLRPC$Photo instanceof TLRPC$TL_photo ? (TLRPC$TL_photo) tLRPC$Photo : null;
                        if (tLRPC$TL_photo10 == null) {
                            File file6 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo5.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo5.searchImage.imageUrl, "jpg"));
                            if (!file6.exists() || file6.length() == 0) {
                                uri3 = null;
                            } else {
                                uri3 = null;
                                tLRPC$TL_photo10 = accountInstance.getSendMessagesHelper().generatePhotoSizes(file6.toString(), null);
                                if (tLRPC$TL_photo10 != null) {
                                    z17 = false;
                                    if (tLRPC$TL_photo10 == null) {
                                        File file7 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo5.searchImage.thumbUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo5.searchImage.thumbUrl, "jpg"));
                                        if (file7.exists()) {
                                            tLRPC$TL_photo10 = accountInstance.getSendMessagesHelper().generatePhotoSizes(file7.toString(), uri3);
                                        }
                                        if (tLRPC$TL_photo10 == null) {
                                            tLRPC$TL_photo10 = new TLRPC$TL_photo();
                                            tLRPC$TL_photo10.date = accountInstance.getConnectionsManager().getCurrentTime();
                                            tLRPC$TL_photo10.file_reference = new byte[0];
                                            TLRPC$TL_photoSize tLRPC$TL_photoSize2 = new TLRPC$TL_photoSize();
                                            MediaController.SearchImage searchImage4 = sendingMediaInfo5.searchImage;
                                            tLRPC$TL_photoSize2.w = searchImage4.width;
                                            tLRPC$TL_photoSize2.h = searchImage4.height;
                                            tLRPC$TL_photoSize2.size = 0;
                                            tLRPC$TL_photoSize2.location = new TLRPC$TL_fileLocationUnavailable();
                                            tLRPC$TL_photoSize2.type = "x";
                                            tLRPC$TL_photo10.sizes.add(tLRPC$TL_photoSize2);
                                            tLRPC$TL_photo4 = tLRPC$TL_photo10;
                                            z16 = z17;
                                        }
                                    }
                                    tLRPC$TL_photo4 = tLRPC$TL_photo10;
                                    z16 = z17;
                                }
                            }
                            z17 = true;
                            if (tLRPC$TL_photo10 == null) {
                            }
                            tLRPC$TL_photo4 = tLRPC$TL_photo10;
                            z16 = z17;
                        } else {
                            tLRPC$TL_photo4 = tLRPC$TL_photo10;
                            z16 = true;
                        }
                        final HashMap hashMap10 = new HashMap();
                        String str44 = sendingMediaInfo5.searchImage.imageUrl;
                        if (str44 != null) {
                            hashMap10.put("originalPath", str44);
                        }
                        if (z2) {
                            int i34 = i6 + 1;
                            StringBuilder sb = new StringBuilder();
                            sb.append("");
                            j11 = j2;
                            sb.append(j11);
                            hashMap10.put("groupId", sb.toString());
                            if (i34 != 10) {
                                i25 = i32;
                                i24 = i33;
                                if (i24 != i25 - 1) {
                                    i6 = i34;
                                }
                            } else {
                                i24 = i33;
                                i25 = i32;
                            }
                            hashMap10.put("final", "1");
                            i6 = i34;
                            j13 = 0;
                        } else {
                            j11 = j2;
                            i24 = i33;
                            i25 = i32;
                        }
                        j3 = j11;
                        i7 = i24;
                        hashMap2 = hashMap9;
                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda16
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.lambda$prepareSendingMedia$88(MessageObject.this, accountInstance, tLRPC$TL_photo4, z16, sendingMediaInfo5, hashMap10, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, i2, str);
                            }
                        });
                        i10 = i25;
                        i30 = i6;
                        arrayList19 = arrayList24;
                        arrayList20 = arrayList25;
                        str5 = str40;
                        str7 = str41;
                        str6 = str42;
                        z7 = z19;
                        arrayList18 = arrayList23;
                        j4 = j3;
                        i9 = i7;
                        hashMap3 = hashMap2;
                        i31 = i9 + 1;
                        arrayList17 = arrayList;
                        str35 = str6;
                        str36 = str5;
                        str37 = str7;
                        hashMap7 = hashMap3;
                        j12 = j4;
                        isEncryptedDialog = z7;
                        size2 = i10;
                        i3 = 1;
                    }
                } else {
                    arrayList4 = arrayList20;
                    i7 = i31;
                    obj = "originalPath";
                    z6 = isEncryptedDialog;
                    hashMap2 = hashMap7;
                    j3 = j2;
                    str2 = str40;
                    str3 = str41;
                    str4 = str42;
                    arrayList5 = arrayList23;
                    i8 = i32;
                    arrayList3 = arrayList24;
                }
            } else {
                arrayList3 = arrayList19;
                arrayList4 = arrayList20;
                i7 = i31;
                obj = "originalPath";
                z6 = isEncryptedDialog;
                hashMap2 = hashMap7;
                j3 = j2;
                str2 = str40;
                str3 = str41;
                str4 = str42;
                arrayList5 = arrayList23;
                i8 = i32;
            }
            if (sendingMediaInfo5.isVideo || sendingMediaInfo5.videoEditedInfo != null) {
                Object obj12 = obj;
                int i35 = i8;
                ArrayList arrayList26 = arrayList4;
                str5 = str2;
                String str45 = str3;
                str6 = str4;
                boolean z20 = z6;
                long j14 = j3;
                int i36 = i7;
                hashMap3 = hashMap2;
                if (z) {
                    videoEditedInfo = null;
                } else {
                    VideoEditedInfo videoEditedInfo2 = sendingMediaInfo5.videoEditedInfo;
                    if (videoEditedInfo2 == null) {
                        videoEditedInfo2 = createCompressionSettings(sendingMediaInfo5.path);
                    }
                    videoEditedInfo = videoEditedInfo2;
                }
                if (!z && (videoEditedInfo != null || sendingMediaInfo5.path.endsWith("mp4"))) {
                    if (sendingMediaInfo5.path == null && (searchImage = sendingMediaInfo5.searchImage) != null) {
                        if (searchImage.photo instanceof TLRPC$TL_photo) {
                            sendingMediaInfo5.path = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(sendingMediaInfo5.searchImage.photo, true).getAbsolutePath();
                        } else {
                            sendingMediaInfo5.path = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo5.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo5.searchImage.imageUrl, "jpg")).getAbsolutePath();
                        }
                    }
                    String str46 = sendingMediaInfo5.path;
                    File file8 = new File(str46);
                    StringBuilder sb2 = new StringBuilder();
                    sb2.append(str46);
                    String str47 = str46;
                    sb2.append(file8.length());
                    sb2.append(str45);
                    sb2.append(file8.lastModified());
                    String sb3 = sb2.toString();
                    if (videoEditedInfo != null) {
                        boolean z21 = videoEditedInfo.muted;
                        StringBuilder sb4 = new StringBuilder();
                        sb4.append(sb3);
                        sb4.append(videoEditedInfo.estimatedDuration);
                        sb4.append(str45);
                        sb4.append(videoEditedInfo.startTime);
                        sb4.append(str45);
                        sb4.append(videoEditedInfo.endTime);
                        sb4.append(videoEditedInfo.muted ? "_m" : "");
                        String sb5 = sb4.toString();
                        if (videoEditedInfo.resultWidth != videoEditedInfo.originalWidth) {
                            sb5 = sb5 + str45 + videoEditedInfo.resultWidth;
                        }
                        String str48 = sb5;
                        j5 = videoEditedInfo.startTime;
                        if (j5 < 0) {
                            j5 = 0;
                        }
                        z9 = z21;
                        str8 = str48;
                        z8 = z20;
                    } else {
                        str8 = sb3;
                        j5 = 0;
                        z8 = z20;
                        z9 = false;
                    }
                    if (!z8 && sendingMediaInfo5.ttl == 0 && (videoEditedInfo == null || (videoEditedInfo.filterState == null && videoEditedInfo.paintPath == null && videoEditedInfo.mediaEntities == null && videoEditedInfo.cropState == null))) {
                        MessagesStorage messagesStorage = accountInstance.getMessagesStorage();
                        if (z8) {
                            j8 = j5;
                            i19 = 5;
                        } else {
                            j8 = j5;
                            i19 = 2;
                        }
                        Object[] sentFile3 = messagesStorage.getSentFile(str8, i19);
                        if (sentFile3 == null || !(sentFile3[0] instanceof TLRPC$TL_document)) {
                            obj2 = "groupId";
                            str7 = str45;
                            str9 = "video/mp4";
                            obj3 = "1";
                            arrayList8 = arrayList26;
                            j6 = j8;
                            z10 = true;
                            file = file8;
                        } else {
                            tLRPC$TL_document = (TLRPC$TL_document) sentFile3[0];
                            String str49 = (String) sentFile3[1];
                            j6 = j8;
                            file = file8;
                            arrayList8 = arrayList26;
                            z11 = z8;
                            obj4 = "final";
                            obj5 = obj12;
                            str9 = "video/mp4";
                            obj2 = "groupId";
                            str7 = str45;
                            obj3 = "1";
                            r1 = 1;
                            str10 = str8;
                            ensureMediaThumbExists(accountInstance, z8, tLRPC$TL_document, sendingMediaInfo5.path, null, j6);
                            str11 = str49;
                            if (tLRPC$TL_document != null) {
                                String str50 = sendingMediaInfo5.thumbPath;
                                Bitmap decodeFile = str50 != null ? BitmapFactory.decodeFile(str50) : null;
                                if (decodeFile == null && (decodeFile = createVideoThumbnailAtTime(sendingMediaInfo5.path, j6)) == null) {
                                    decodeFile = createVideoThumbnail(sendingMediaInfo5.path, r1);
                                }
                                if (decodeFile != null) {
                                    int max = (z11 || sendingMediaInfo5.ttl != 0) ? 90 : Math.max(decodeFile.getWidth(), decodeFile.getHeight());
                                    float f3 = max;
                                    tLRPC$PhotoSize = ImageLoader.scaleAndSaveImage(decodeFile, f3, f3, max > 90 ? 80 : 55, z11);
                                    if (tLRPC$PhotoSize == null || tLRPC$PhotoSize.location == null) {
                                        i16 = 0;
                                        str13 = null;
                                    } else {
                                        i16 = 0;
                                        str13 = getKeyForPhotoSize(accountInstance, tLRPC$PhotoSize, null, r1, false);
                                    }
                                } else {
                                    i16 = 0;
                                    tLRPC$PhotoSize = null;
                                    str13 = null;
                                }
                                TLRPC$TL_document tLRPC$TL_document6 = new TLRPC$TL_document();
                                tLRPC$TL_document6.file_reference = new byte[i16];
                                if (tLRPC$PhotoSize != null) {
                                    tLRPC$TL_document6.thumbs.add(tLRPC$PhotoSize);
                                    tLRPC$TL_document6.flags |= 1;
                                }
                                VideoEditedInfo videoEditedInfo3 = sendingMediaInfo5.videoEditedInfo;
                                if (videoEditedInfo3 != null && videoEditedInfo3.isSticker) {
                                    tLRPC$TL_document6.mime_type = "video/webm";
                                } else {
                                    tLRPC$TL_document6.mime_type = str9;
                                }
                                accountInstance.getUserConfig().saveConfig(i16);
                                VideoEditedInfo videoEditedInfo4 = sendingMediaInfo5.videoEditedInfo;
                                if (videoEditedInfo4 != null && videoEditedInfo4.isSticker) {
                                    tLRPC$TL_document6.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                    TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                    tLRPC$TL_documentAttributeSticker.alt = "👍";
                                    tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                    tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeSticker);
                                    if (tLRPC$PhotoSize != null && (tLRPC$FileLocation = tLRPC$PhotoSize.location) != null) {
                                        Locale locale = Locale.US;
                                        Object[] objArr = new Object[2];
                                        str12 = str11;
                                        objArr[i16] = Long.valueOf(tLRPC$FileLocation.volume_id);
                                        objArr[1] = Integer.valueOf(tLRPC$PhotoSize.location.local_id);
                                        str13 = String.format(locale, "%d_%d@b1", objArr);
                                        if (!z11) {
                                            tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo_layer159();
                                        } else {
                                            tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                            tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                        }
                                        tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeVideo);
                                        if (videoEditedInfo == null && (videoEditedInfo.needConvert() || !sendingMediaInfo5.isVideo)) {
                                            if (sendingMediaInfo5.isVideo && videoEditedInfo.muted) {
                                                fillVideoAttribute(sendingMediaInfo5.path, tLRPC$TL_documentAttributeVideo, videoEditedInfo);
                                                videoEditedInfo.originalWidth = tLRPC$TL_documentAttributeVideo.w;
                                                videoEditedInfo.originalHeight = tLRPC$TL_documentAttributeVideo.h;
                                            } else {
                                                tLRPC$TL_documentAttributeVideo.duration = (int) (videoEditedInfo.estimatedDuration / 1000);
                                            }
                                            int i37 = videoEditedInfo.rotationValue;
                                            MediaController.CropState cropState = videoEditedInfo.cropState;
                                            if (cropState != null) {
                                                i17 = cropState.transformWidth;
                                                i18 = cropState.transformHeight;
                                            } else {
                                                i17 = videoEditedInfo.resultWidth;
                                                i18 = videoEditedInfo.resultHeight;
                                            }
                                            if (i37 == 90 || i37 == 270) {
                                                tLRPC$TL_documentAttributeVideo.w = i18;
                                                tLRPC$TL_documentAttributeVideo.h = i17;
                                            } else {
                                                tLRPC$TL_documentAttributeVideo.w = i17;
                                                tLRPC$TL_documentAttributeVideo.h = i18;
                                            }
                                            tLRPC$TL_document6.size = videoEditedInfo.estimatedSize;
                                        } else {
                                            if (file.exists()) {
                                                tLRPC$TL_document6.size = (int) file.length();
                                            }
                                            fillVideoAttribute(sendingMediaInfo5.path, tLRPC$TL_documentAttributeVideo, null);
                                        }
                                        bitmap = decodeFile;
                                        tLRPC$TL_document2 = tLRPC$TL_document6;
                                    }
                                }
                                str12 = str11;
                                if (!z11) {
                                }
                                tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeVideo);
                                if (videoEditedInfo == null) {
                                }
                                if (file.exists()) {
                                }
                                fillVideoAttribute(sendingMediaInfo5.path, tLRPC$TL_documentAttributeVideo, null);
                                bitmap = decodeFile;
                                tLRPC$TL_document2 = tLRPC$TL_document6;
                            } else {
                                str12 = str11;
                                bitmap = null;
                                str13 = null;
                                tLRPC$TL_document2 = tLRPC$TL_document;
                            }
                            if (videoEditedInfo != null && videoEditedInfo.muted) {
                                size = tLRPC$TL_document2.attributes.size();
                                i15 = 0;
                                while (true) {
                                    if (i15 < size) {
                                        z12 = false;
                                        break;
                                    } else if (tLRPC$TL_document2.attributes.get(i15) instanceof TLRPC$TL_documentAttributeAnimated) {
                                        z12 = true;
                                        break;
                                    } else {
                                        i15++;
                                    }
                                }
                                if (!z12) {
                                    tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                }
                            }
                            if (videoEditedInfo != null && (videoEditedInfo.needConvert() || !sendingMediaInfo5.isVideo)) {
                                File file9 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + "." + (!videoEditedInfo.isSticker ? "webm" : "mp4"));
                                SharedConfig.saveConfig();
                                str47 = file9.getAbsolutePath();
                            }
                            hashMap4 = new HashMap();
                            if (str10 != null) {
                                hashMap4.put(obj5, str10);
                            }
                            if (str12 == null) {
                                str14 = str12;
                                hashMap4.put("parentObject", str14);
                            } else {
                                str14 = str12;
                            }
                            if (z9 && z2) {
                                i13 = i6 + 1;
                                StringBuilder sb6 = new StringBuilder();
                                sb6.append("");
                                j7 = j14;
                                sb6.append(j7);
                                hashMap4.put(obj2, sb6.toString());
                                if (i13 != 10) {
                                    i12 = i35;
                                    i11 = i36;
                                } else {
                                    i11 = i36;
                                    i12 = i35;
                                }
                                hashMap4.put(obj4, obj3);
                                j13 = 0;
                            } else {
                                j7 = j14;
                                i11 = i36;
                                i12 = i35;
                                i13 = i6;
                            }
                            if (!z11 && ((videoEditedInfo == null || !videoEditedInfo.isSticker) && (arrayList9 = sendingMediaInfo5.masks) != null && !arrayList9.isEmpty())) {
                                tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeHasStickers());
                                SerializedData serializedData = new SerializedData((sendingMediaInfo5.masks.size() * 20) + 4);
                                serializedData.writeInt32(sendingMediaInfo5.masks.size());
                                for (i14 = 0; i14 < sendingMediaInfo5.masks.size(); i14++) {
                                    sendingMediaInfo5.masks.get(i14).serializeToStream(serializedData);
                                }
                                hashMap4.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                serializedData.cleanup();
                            }
                            j4 = j7;
                            final VideoEditedInfo videoEditedInfo5 = videoEditedInfo;
                            final String str51 = str14;
                            int i38 = i11;
                            final String str52 = str47;
                            i10 = i12;
                            i9 = i38;
                            z7 = z11;
                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda5
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.lambda$prepareSendingMedia$89(bitmap, str13, messageObject, accountInstance, videoEditedInfo5, tLRPC$TL_document2, str52, hashMap4, sendingMediaInfo5, str51, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2);
                                }
                            });
                            i6 = i13;
                            arrayList20 = arrayList8;
                            arrayList19 = arrayList3;
                            arrayList18 = arrayList5;
                        }
                    } else {
                        obj2 = "groupId";
                        j6 = j5;
                        file = file8;
                        str7 = str45;
                        str9 = "video/mp4";
                        obj3 = "1";
                        arrayList8 = arrayList26;
                        z10 = true;
                    }
                    z11 = z8;
                    str10 = str8;
                    obj4 = "final";
                    obj5 = obj12;
                    str11 = null;
                    tLRPC$TL_document = null;
                    r1 = z10;
                    if (tLRPC$TL_document != null) {
                    }
                    if (videoEditedInfo != null) {
                        size = tLRPC$TL_document2.attributes.size();
                        i15 = 0;
                        while (true) {
                            if (i15 < size) {
                            }
                            i15++;
                        }
                        if (!z12) {
                        }
                    }
                    if (videoEditedInfo != null) {
                        if (!videoEditedInfo.isSticker) {
                        }
                        File file92 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + "." + (!videoEditedInfo.isSticker ? "webm" : "mp4"));
                        SharedConfig.saveConfig();
                        str47 = file92.getAbsolutePath();
                    }
                    hashMap4 = new HashMap();
                    if (str10 != null) {
                    }
                    if (str12 == null) {
                    }
                    if (z9) {
                    }
                    j7 = j14;
                    i11 = i36;
                    i12 = i35;
                    i13 = i6;
                    if (!z11) {
                        tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeHasStickers());
                        SerializedData serializedData2 = new SerializedData((sendingMediaInfo5.masks.size() * 20) + 4);
                        serializedData2.writeInt32(sendingMediaInfo5.masks.size());
                        while (i14 < sendingMediaInfo5.masks.size()) {
                        }
                        hashMap4.put("masks", Utilities.bytesToHex(serializedData2.toByteArray()));
                        serializedData2.cleanup();
                    }
                    j4 = j7;
                    final VideoEditedInfo videoEditedInfo52 = videoEditedInfo;
                    final String str512 = str14;
                    int i382 = i11;
                    final String str522 = str47;
                    i10 = i12;
                    i9 = i382;
                    z7 = z11;
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda5
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.lambda$prepareSendingMedia$89(bitmap, str13, messageObject, accountInstance, videoEditedInfo52, tLRPC$TL_document2, str522, hashMap4, sendingMediaInfo5, str512, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2);
                        }
                    });
                    i6 = i13;
                    arrayList20 = arrayList8;
                    arrayList19 = arrayList3;
                    arrayList18 = arrayList5;
                } else {
                    str7 = str45;
                    z7 = z20;
                    j4 = j14;
                    i9 = i36;
                    i10 = i35;
                    if (arrayList26 == null) {
                        ArrayList arrayList27 = new ArrayList();
                        arrayList19 = new ArrayList();
                        ArrayList arrayList28 = new ArrayList();
                        ArrayList arrayList29 = new ArrayList();
                        arrayList18 = new ArrayList();
                        arrayList20 = arrayList27;
                        arrayList6 = arrayList28;
                        arrayList7 = arrayList29;
                    } else {
                        arrayList20 = arrayList26;
                        arrayList6 = arrayList21;
                        arrayList7 = arrayList22;
                        arrayList19 = arrayList3;
                        arrayList18 = arrayList5;
                    }
                    arrayList20.add(sendingMediaInfo5.path);
                    arrayList19.add(sendingMediaInfo5.path);
                    arrayList18.add(sendingMediaInfo5.uri);
                    arrayList6.add(sendingMediaInfo5.caption);
                    arrayList7.add(sendingMediaInfo5.entities);
                    arrayList21 = arrayList6;
                    arrayList22 = arrayList7;
                }
                i30 = i6;
                i31 = i9 + 1;
                arrayList17 = arrayList;
                str35 = str6;
                str36 = str5;
                str37 = str7;
                hashMap7 = hashMap3;
                j12 = j4;
                isEncryptedDialog = z7;
                size2 = i10;
                i3 = 1;
            } else {
                String str53 = sendingMediaInfo5.path;
                if (str53 != null || (uri2 = sendingMediaInfo5.uri) == null) {
                    str15 = str53;
                    str16 = str15;
                } else {
                    String path = (Build.VERSION.SDK_INT < 30 || !"content".equals(uri2.getScheme())) ? AndroidUtilities.getPath(sendingMediaInfo5.uri) : null;
                    str15 = sendingMediaInfo5.uri.toString();
                    str16 = path;
                }
                if (inputContentInfoCompat == null || sendingMediaInfo5.uri == null || !inputContentInfoCompat.getDescription().hasMimeType("image/png")) {
                    str17 = str4;
                } else {
                    try {
                        BitmapFactory.Options options = new BitmapFactory.Options();
                        inputStream = ApplicationLoader.applicationContext.getContentResolver().openInputStream(sendingMediaInfo5.uri);
                        try {
                            Bitmap decodeStream = BitmapFactory.decodeStream(inputStream, null, options);
                            StringBuilder sb7 = new StringBuilder();
                            sb7.append("-2147483648_");
                            sb7.append(SharedConfig.getLastLocalId());
                            str17 = str4;
                            try {
                                sb7.append(str17);
                                File file10 = new File(FileLoader.getDirectory(4), sb7.toString());
                                fileOutputStream = new FileOutputStream(file10);
                                try {
                                    decodeStream.compress(Bitmap.CompressFormat.WEBP, 100, fileOutputStream);
                                    SharedConfig.saveConfig();
                                    sendingMediaInfo5.uri = Uri.fromFile(file10);
                                    if (inputStream != null) {
                                        try {
                                            inputStream.close();
                                        } catch (Exception unused) {
                                        }
                                    }
                                } catch (Throwable th) {
                                    th = th;
                                    try {
                                        FileLog.e(th);
                                        if (inputStream != null) {
                                            try {
                                                inputStream.close();
                                            } catch (Exception unused2) {
                                            }
                                        }
                                    } catch (Throwable th2) {
                                        if (inputStream != null) {
                                            try {
                                                inputStream.close();
                                            } catch (Exception unused3) {
                                            }
                                        }
                                        if (fileOutputStream != null) {
                                            try {
                                                fileOutputStream.close();
                                            } catch (Exception unused4) {
                                            }
                                        }
                                        throw th2;
                                    }
                                }
                            } catch (Throwable th3) {
                                th = th3;
                                fileOutputStream = null;
                                FileLog.e(th);
                                if (inputStream != null) {
                                }
                            }
                        } catch (Throwable th4) {
                            th = th4;
                            str17 = str4;
                        }
                    } catch (Throwable th5) {
                        th = th5;
                        str17 = str4;
                        inputStream = null;
                    }
                    try {
                        fileOutputStream.close();
                    } catch (Exception unused5) {
                    }
                }
                String str54 = "webp";
                if (z || ImageLoader.shouldSendImageAsDocument(sendingMediaInfo5.path, sendingMediaInfo5.uri)) {
                    str18 = str2;
                    if (str16 != null) {
                        str54 = FileLoader.getFileExtension(new File(str16));
                        str39 = str54;
                        str19 = str16;
                        z13 = true;
                        if (z13) {
                            ArrayList arrayList30 = arrayList4;
                            if (arrayList30 == null) {
                                arrayList20 = new ArrayList();
                                arrayList19 = new ArrayList();
                                ArrayList arrayList31 = new ArrayList();
                                ArrayList arrayList32 = new ArrayList();
                                arrayList16 = new ArrayList();
                                arrayList14 = arrayList31;
                                arrayList15 = arrayList32;
                            } else {
                                arrayList20 = arrayList30;
                                arrayList14 = arrayList21;
                                arrayList15 = arrayList22;
                                arrayList19 = arrayList3;
                                arrayList16 = arrayList5;
                            }
                            arrayList20.add(str19);
                            arrayList19.add(str15);
                            arrayList16.add(sendingMediaInfo5.uri);
                            arrayList14.add(sendingMediaInfo5.caption);
                            arrayList15.add(sendingMediaInfo5.entities);
                            arrayList18 = arrayList16;
                            arrayList21 = arrayList14;
                            arrayList22 = arrayList15;
                            str6 = str17;
                            str5 = str18;
                            i10 = i8;
                            i30 = i6;
                            str7 = str3;
                            z7 = z6;
                            j4 = j3;
                            i9 = i7;
                            hashMap3 = hashMap2;
                            i31 = i9 + 1;
                            arrayList17 = arrayList;
                            str35 = str6;
                            str36 = str5;
                            str37 = str7;
                            hashMap7 = hashMap3;
                            j12 = j4;
                            isEncryptedDialog = z7;
                            size2 = i10;
                            i3 = 1;
                        } else {
                            ArrayList arrayList33 = arrayList4;
                            if (str19 != null) {
                                File file11 = new File(str19);
                                StringBuilder sb8 = new StringBuilder();
                                sb8.append(str15);
                                sb8.append(file11.length());
                                str20 = str3;
                                sb8.append(str20);
                                obj6 = obj;
                                sb8.append(file11.lastModified());
                                str21 = sb8.toString();
                                hashMap5 = hashMap2;
                            } else {
                                obj6 = obj;
                                str20 = str3;
                                hashMap5 = hashMap2;
                                str21 = null;
                            }
                            if (hashMap5 != null) {
                                MediaSendPrepareWorker mediaSendPrepareWorker3 = (MediaSendPrepareWorker) hashMap5.get(sendingMediaInfo5);
                                TLRPC$TL_photo tLRPC$TL_photo11 = mediaSendPrepareWorker3.photo;
                                String str55 = mediaSendPrepareWorker3.parentObject;
                                if (tLRPC$TL_photo11 == null) {
                                    try {
                                        mediaSendPrepareWorker3.sync.await();
                                    } catch (Exception e3) {
                                        FileLog.e(e3);
                                    }
                                    tLRPC$TL_photo11 = mediaSendPrepareWorker3.photo;
                                    str55 = mediaSendPrepareWorker3.parentObject;
                                }
                                hashMap3 = hashMap5;
                                str22 = str21;
                                str23 = str20;
                                arrayList10 = arrayList33;
                                str24 = str17;
                                str25 = str18;
                                obj7 = obj6;
                                i20 = 1;
                                str27 = str55;
                                obj8 = "1";
                                sendingMediaInfo = sendingMediaInfo5;
                                z15 = z6;
                                tLRPC$TL_photo2 = tLRPC$TL_photo11;
                            } else {
                                boolean z22 = z6;
                                if (z22 || sendingMediaInfo5.ttl != 0) {
                                    z14 = z22;
                                    hashMap3 = hashMap5;
                                    str22 = str21;
                                    str23 = str20;
                                    arrayList10 = arrayList33;
                                    str24 = str17;
                                    str25 = str18;
                                    obj7 = obj6;
                                    i20 = 1;
                                    obj8 = "1";
                                    sendingMediaInfo = sendingMediaInfo5;
                                    tLRPC$TL_photo = null;
                                    str26 = null;
                                } else {
                                    Object[] sentFile4 = accountInstance.getMessagesStorage().getSentFile(str21, !z22 ? 0 : 3);
                                    HashMap hashMap11 = hashMap5;
                                    if (sentFile4 == null) {
                                        obj9 = "1";
                                    } else if (sentFile4[0] instanceof TLRPC$TL_photo) {
                                        tLRPC$TL_photo3 = (TLRPC$TL_photo) sentFile4[0];
                                        obj9 = "1";
                                        str28 = (String) sentFile4[1];
                                        if (tLRPC$TL_photo3 == null) {
                                            if (sendingMediaInfo5.uri != null) {
                                                str26 = str28;
                                                Object[] sentFile5 = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(sendingMediaInfo5.uri), !z22 ? 0 : 3);
                                                if (sentFile5 != null && (sentFile5[0] instanceof TLRPC$TL_photo)) {
                                                    tLRPC$TL_photo3 = (TLRPC$TL_photo) sentFile5[0];
                                                    str28 = (String) sentFile5[1];
                                                }
                                            } else {
                                                str26 = str28;
                                            }
                                            tLRPC$TL_photo = tLRPC$TL_photo3;
                                            z14 = z22;
                                            hashMap3 = hashMap11;
                                            obj7 = obj6;
                                            str22 = str21;
                                            str23 = str20;
                                            arrayList10 = arrayList33;
                                            str24 = str17;
                                            str25 = str18;
                                            obj8 = obj9;
                                            i20 = 1;
                                            sendingMediaInfo = sendingMediaInfo5;
                                            ensureMediaThumbExists(accountInstance, z22, tLRPC$TL_photo, sendingMediaInfo5.path, sendingMediaInfo5.uri, 0L);
                                        }
                                        str26 = str28;
                                        tLRPC$TL_photo = tLRPC$TL_photo3;
                                        z14 = z22;
                                        hashMap3 = hashMap11;
                                        obj7 = obj6;
                                        str22 = str21;
                                        str23 = str20;
                                        arrayList10 = arrayList33;
                                        str24 = str17;
                                        str25 = str18;
                                        obj8 = obj9;
                                        i20 = 1;
                                        sendingMediaInfo = sendingMediaInfo5;
                                        ensureMediaThumbExists(accountInstance, z22, tLRPC$TL_photo, sendingMediaInfo5.path, sendingMediaInfo5.uri, 0L);
                                    } else {
                                        obj9 = "1";
                                    }
                                    str28 = null;
                                    tLRPC$TL_photo3 = null;
                                    if (tLRPC$TL_photo3 == null) {
                                    }
                                    str26 = str28;
                                    tLRPC$TL_photo = tLRPC$TL_photo3;
                                    z14 = z22;
                                    hashMap3 = hashMap11;
                                    obj7 = obj6;
                                    str22 = str21;
                                    str23 = str20;
                                    arrayList10 = arrayList33;
                                    str24 = str17;
                                    str25 = str18;
                                    obj8 = obj9;
                                    i20 = 1;
                                    sendingMediaInfo = sendingMediaInfo5;
                                    ensureMediaThumbExists(accountInstance, z22, tLRPC$TL_photo, sendingMediaInfo5.path, sendingMediaInfo5.uri, 0L);
                                }
                                if (tLRPC$TL_photo == null) {
                                    tLRPC$TL_photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                    z15 = z14;
                                    if (z15 && sendingMediaInfo.canDeleteAfter) {
                                        new File(sendingMediaInfo.path).delete();
                                    }
                                } else {
                                    z15 = z14;
                                }
                                tLRPC$TL_photo2 = tLRPC$TL_photo;
                                str27 = str26;
                            }
                            if (tLRPC$TL_photo2 != null) {
                                final HashMap hashMap12 = new HashMap();
                                final Bitmap[] bitmapArr = new Bitmap[i20];
                                final String[] strArr = new String[i20];
                                ArrayList<TLRPC$InputDocument> arrayList34 = sendingMediaInfo.masks;
                                boolean z23 = (arrayList34 == null || arrayList34.isEmpty()) ? false : true;
                                tLRPC$TL_photo2.has_stickers = z23;
                                if (z23) {
                                    SerializedData serializedData3 = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                    serializedData3.writeInt32(sendingMediaInfo.masks.size());
                                    for (int i39 = 0; i39 < sendingMediaInfo.masks.size(); i39++) {
                                        sendingMediaInfo.masks.get(i39).serializeToStream(serializedData3);
                                    }
                                    hashMap12.put("masks", Utilities.bytesToHex(serializedData3.toByteArray()));
                                    serializedData3.cleanup();
                                }
                                String str56 = str22;
                                if (str56 != null) {
                                    hashMap12.put(obj7, str56);
                                }
                                if (str27 != null) {
                                    hashMap12.put("parentObject", str27);
                                }
                                if (z2) {
                                    try {
                                        if (arrayList.size() == i20) {
                                        }
                                    } catch (Exception e4) {
                                        e = e4;
                                        FileLog.e(e);
                                        if (z2) {
                                        }
                                        final String str57 = str27;
                                        final SendingMediaInfo sendingMediaInfo6 = sendingMediaInfo;
                                        j9 = j10;
                                        str6 = str24;
                                        i22 = i23;
                                        str5 = str25;
                                        i21 = i8;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda77
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingMedia$90(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo6, str57, j, messageObject2, messageObject3, z3, i, z4, tL_stories$StoryItem, replyQuote, str, i2);
                                            }
                                        });
                                        arrayList19 = arrayList3;
                                        arrayList18 = arrayList5;
                                        str7 = str23;
                                        z7 = z15;
                                        arrayList20 = arrayList10;
                                        j4 = j9;
                                        i9 = i22;
                                        i10 = i21;
                                        i31 = i9 + 1;
                                        arrayList17 = arrayList;
                                        str35 = str6;
                                        str36 = str5;
                                        str37 = str7;
                                        hashMap7 = hashMap3;
                                        j12 = j4;
                                        isEncryptedDialog = z7;
                                        size2 = i10;
                                        i3 = 1;
                                    }
                                    if (z2) {
                                        i30 = i6 + 1;
                                        StringBuilder sb9 = new StringBuilder();
                                        sb9.append("");
                                        j10 = j3;
                                        sb9.append(j10);
                                        hashMap12.put("groupId", sb9.toString());
                                        if (i30 != 10) {
                                            i23 = i7;
                                        } else {
                                            i23 = i7;
                                        }
                                        hashMap12.put("final", obj8);
                                        j13 = 0;
                                    } else {
                                        j10 = j3;
                                        i23 = i7;
                                        i30 = i6;
                                    }
                                    final String str572 = str27;
                                    final SendingMediaInfo sendingMediaInfo62 = sendingMediaInfo;
                                    j9 = j10;
                                    str6 = str24;
                                    i22 = i23;
                                    str5 = str25;
                                    i21 = i8;
                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda77
                                        @Override // java.lang.Runnable
                                        public final void run() {
                                            SendMessagesHelper.lambda$prepareSendingMedia$90(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo62, str572, j, messageObject2, messageObject3, z3, i, z4, tL_stories$StoryItem, replyQuote, str, i2);
                                        }
                                    });
                                    arrayList19 = arrayList3;
                                    arrayList18 = arrayList5;
                                    str7 = str23;
                                    z7 = z15;
                                    arrayList20 = arrayList10;
                                }
                                TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo2.sizes, AndroidUtilities.getPhotoSize());
                                if (closestPhotoSizeWithSize != null) {
                                    try {
                                        strArr[0] = getKeyForPhotoSize(accountInstance, closestPhotoSizeWithSize, bitmapArr, false, false);
                                    } catch (Exception e5) {
                                        e = e5;
                                        FileLog.e(e);
                                        if (z2) {
                                        }
                                        final String str5722 = str27;
                                        final SendingMediaInfo sendingMediaInfo622 = sendingMediaInfo;
                                        j9 = j10;
                                        str6 = str24;
                                        i22 = i23;
                                        str5 = str25;
                                        i21 = i8;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda77
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingMedia$90(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo622, str5722, j, messageObject2, messageObject3, z3, i, z4, tL_stories$StoryItem, replyQuote, str, i2);
                                            }
                                        });
                                        arrayList19 = arrayList3;
                                        arrayList18 = arrayList5;
                                        str7 = str23;
                                        z7 = z15;
                                        arrayList20 = arrayList10;
                                        j4 = j9;
                                        i9 = i22;
                                        i10 = i21;
                                        i31 = i9 + 1;
                                        arrayList17 = arrayList;
                                        str35 = str6;
                                        str36 = str5;
                                        str37 = str7;
                                        hashMap7 = hashMap3;
                                        j12 = j4;
                                        isEncryptedDialog = z7;
                                        size2 = i10;
                                        i3 = 1;
                                    }
                                    if (z2) {
                                    }
                                    final String str57222 = str27;
                                    final SendingMediaInfo sendingMediaInfo6222 = sendingMediaInfo;
                                    j9 = j10;
                                    str6 = str24;
                                    i22 = i23;
                                    str5 = str25;
                                    i21 = i8;
                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda77
                                        @Override // java.lang.Runnable
                                        public final void run() {
                                            SendMessagesHelper.lambda$prepareSendingMedia$90(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo6222, str57222, j, messageObject2, messageObject3, z3, i, z4, tL_stories$StoryItem, replyQuote, str, i2);
                                        }
                                    });
                                    arrayList19 = arrayList3;
                                    arrayList18 = arrayList5;
                                    str7 = str23;
                                    z7 = z15;
                                    arrayList20 = arrayList10;
                                }
                                if (z2) {
                                }
                                final String str572222 = str27;
                                final SendingMediaInfo sendingMediaInfo62222 = sendingMediaInfo;
                                j9 = j10;
                                str6 = str24;
                                i22 = i23;
                                str5 = str25;
                                i21 = i8;
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda77
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingMedia$90(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo62222, str572222, j, messageObject2, messageObject3, z3, i, z4, tL_stories$StoryItem, replyQuote, str, i2);
                                    }
                                });
                                arrayList19 = arrayList3;
                                arrayList18 = arrayList5;
                                str7 = str23;
                                z7 = z15;
                                arrayList20 = arrayList10;
                            } else {
                                boolean z24 = z15;
                                i21 = i8;
                                ArrayList arrayList35 = arrayList10;
                                str5 = str25;
                                str6 = str24;
                                j9 = j3;
                                i22 = i7;
                                String str58 = str22;
                                if (arrayList35 == null) {
                                    arrayList20 = new ArrayList();
                                    arrayList19 = new ArrayList();
                                    ArrayList arrayList36 = new ArrayList();
                                    ArrayList arrayList37 = new ArrayList();
                                    arrayList13 = new ArrayList();
                                    arrayList11 = arrayList36;
                                    arrayList12 = arrayList37;
                                } else {
                                    arrayList20 = arrayList35;
                                    arrayList11 = arrayList21;
                                    arrayList12 = arrayList22;
                                    arrayList19 = arrayList3;
                                    arrayList13 = arrayList5;
                                }
                                arrayList20.add(str19);
                                arrayList19.add(str58);
                                arrayList13.add(sendingMediaInfo.uri);
                                arrayList11.add(sendingMediaInfo.caption);
                                arrayList12.add(sendingMediaInfo.entities);
                                arrayList18 = arrayList13;
                                arrayList21 = arrayList11;
                                arrayList22 = arrayList12;
                                i30 = i6;
                                str7 = str23;
                                z7 = z24;
                            }
                            j4 = j9;
                            i9 = i22;
                            i10 = i21;
                            i31 = i9 + 1;
                            arrayList17 = arrayList;
                            str35 = str6;
                            str36 = str5;
                            str37 = str7;
                            hashMap7 = hashMap3;
                            j12 = j4;
                            isEncryptedDialog = z7;
                            size2 = i10;
                            i3 = 1;
                        }
                    } else {
                        str39 = "";
                        str19 = str16;
                        z13 = true;
                        if (z13) {
                        }
                    }
                } else {
                    if (sendingMediaInfo5.forceImage || str16 == null) {
                        str18 = str2;
                    } else {
                        str18 = str2;
                        if ((str16.endsWith(str18) || str16.endsWith(str17)) && sendingMediaInfo5.ttl <= 0) {
                        }
                    }
                    if (!sendingMediaInfo5.forceImage && str16 == null && (uri = sendingMediaInfo5.uri) != null) {
                        if (MediaController.isGif(uri)) {
                            str15 = sendingMediaInfo5.uri.toString();
                            str16 = MediaController.copyFileToCache(sendingMediaInfo5.uri, "gif");
                            str39 = "gif";
                            str19 = str16;
                            z13 = true;
                            if (z13) {
                            }
                        } else if (MediaController.isWebp(sendingMediaInfo5.uri)) {
                            str15 = sendingMediaInfo5.uri.toString();
                            str16 = MediaController.copyFileToCache(sendingMediaInfo5.uri, "webp");
                            str39 = str54;
                            str19 = str16;
                            z13 = true;
                            if (z13) {
                            }
                        }
                    }
                    str19 = str16;
                    z13 = false;
                    if (z13) {
                    }
                }
            }
        }
        ArrayList arrayList38 = arrayList18;
        ArrayList arrayList39 = arrayList19;
        ArrayList arrayList40 = arrayList20;
        boolean z25 = isEncryptedDialog;
        int i40 = size2;
        long j15 = j13;
        if (j15 != 0) {
            finishGroup(accountInstance, j15, i);
        }
        if (inputContentInfoCompat != null) {
            inputContentInfoCompat.releasePermission();
        }
        if (arrayList40 != null && !arrayList40.isEmpty()) {
            int i41 = 1;
            long[] jArr = new long[1];
            int size3 = arrayList40.size();
            int i42 = i30;
            int i43 = 0;
            while (i43 < size3) {
                if (!z || z25) {
                    i4 = i40;
                } else {
                    i4 = i40;
                    if (i4 > i41 && i42 % 10 == 0) {
                        jArr[0] = Utilities.random.nextLong();
                        i42 = 0;
                        i5 = i42 + 1;
                        String str59 = (String) arrayList40.get(i43);
                        ArrayList arrayList41 = arrayList39;
                        String str60 = (String) arrayList41.get(i43);
                        ArrayList arrayList42 = arrayList38;
                        Uri uri7 = (Uri) arrayList42.get(i43);
                        ArrayList arrayList43 = arrayList22;
                        ArrayList arrayList44 = (ArrayList) arrayList43.get(i43);
                        if (i5 != 10 || i43 == size3 - 1) {
                            arrayList2 = arrayList21;
                            z5 = true;
                        } else {
                            arrayList2 = arrayList21;
                            z5 = false;
                        }
                        long[] jArr2 = jArr;
                        handleError(prepareSendingDocumentInternal(accountInstance, str59, str60, uri7, str39, j, messageObject2, messageObject3, tL_stories$StoryItem, replyQuote, arrayList44, messageObject, jArr2, z5, (CharSequence) arrayList2.get(i43), z3, i, null, z, str, i2), accountInstance);
                        i43++;
                        arrayList40 = arrayList40;
                        arrayList21 = arrayList2;
                        arrayList22 = arrayList43;
                        arrayList38 = arrayList42;
                        arrayList39 = arrayList41;
                        i42 = i5;
                        i40 = i4;
                        size3 = size3;
                        jArr = jArr2;
                        i41 = 1;
                    }
                }
                i5 = i42 + 1;
                String str592 = (String) arrayList40.get(i43);
                ArrayList arrayList412 = arrayList39;
                String str602 = (String) arrayList412.get(i43);
                ArrayList arrayList422 = arrayList38;
                Uri uri72 = (Uri) arrayList422.get(i43);
                ArrayList arrayList432 = arrayList22;
                ArrayList arrayList442 = (ArrayList) arrayList432.get(i43);
                if (i5 != 10) {
                }
                arrayList2 = arrayList21;
                z5 = true;
                long[] jArr22 = jArr;
                handleError(prepareSendingDocumentInternal(accountInstance, str592, str602, uri72, str39, j, messageObject2, messageObject3, tL_stories$StoryItem, replyQuote, arrayList442, messageObject, jArr22, z5, (CharSequence) arrayList2.get(i43), z3, i, null, z, str, i2), accountInstance);
                i43++;
                arrayList40 = arrayList40;
                arrayList21 = arrayList2;
                arrayList22 = arrayList432;
                arrayList38 = arrayList422;
                arrayList39 = arrayList412;
                i42 = i5;
                i40 = i4;
                size3 = size3;
                jArr = jArr22;
                i41 = 1;
            }
        }
        if (BuildVars.LOGS_ENABLED) {
            FileLog.d("total send time = " + (System.currentTimeMillis() - currentTimeMillis));
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$86(MediaSendPrepareWorker mediaSendPrepareWorker, AccountInstance accountInstance, SendingMediaInfo sendingMediaInfo, boolean z) {
        mediaSendPrepareWorker.photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
        if (z && sendingMediaInfo.canDeleteAfter) {
            new File(sendingMediaInfo.path).delete();
        }
        mediaSendPrepareWorker.sync.countDown();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$87(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, String str, HashMap hashMap, SendingMediaInfo sendingMediaInfo, String str2, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str3, int i2) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, str, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str2);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, null, str, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, 0, str2, null, false, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str3;
        of.quick_reply_shortcut_id = i2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$88(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_photo tLRPC$TL_photo, boolean z, SendingMediaInfo sendingMediaInfo, HashMap hashMap, String str, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z2, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, int i2, String str2) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, tLRPC$TL_photo, null, null, z ? sendingMediaInfo.searchImage.imageUrl : null, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_photo, z ? sendingMediaInfo.searchImage.imageUrl : null, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z2, i, sendingMediaInfo.ttl, str, false, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut_id = i2;
        of.quick_reply_shortcut = str2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$89(Bitmap bitmap, String str, MessageObject messageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str2, HashMap hashMap, SendingMediaInfo sendingMediaInfo, String str3, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str4, int i2) {
        if (bitmap != null && str != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, videoEditedInfo, tLRPC$TL_document, str2, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str3);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, videoEditedInfo, str2, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, sendingMediaInfo.ttl, str3, null, false, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str4;
        of.quick_reply_shortcut_id = i2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$90(Bitmap[] bitmapArr, String[] strArr, MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_photo tLRPC$TL_photo, HashMap hashMap, SendingMediaInfo sendingMediaInfo, String str, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i, boolean z2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str2, int i2) {
        if (bitmapArr[0] != null && strArr[0] != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, tLRPC$TL_photo, null, null, null, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_photo, null, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, sendingMediaInfo.ttl, str, z2, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str2;
        of.quick_reply_shortcut_id = i2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX WARN: Removed duplicated region for block: B:67:0x008b A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:74:? A[RETURN, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static void fillVideoAttribute(String str, TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo, VideoEditedInfo videoEditedInfo) {
        boolean z;
        MediaMetadataRetriever mediaMetadataRetriever;
        String extractMetadata;
        MediaMetadataRetriever mediaMetadataRetriever2 = null;
        try {
            try {
                mediaMetadataRetriever = new MediaMetadataRetriever();
            } catch (Exception e) {
                e = e;
            }
        } catch (Throwable th) {
            th = th;
        }
        try {
            mediaMetadataRetriever.setDataSource(str);
            String extractMetadata2 = mediaMetadataRetriever.extractMetadata(18);
            if (extractMetadata2 != null) {
                tLRPC$TL_documentAttributeVideo.w = Integer.parseInt(extractMetadata2);
            }
            String extractMetadata3 = mediaMetadataRetriever.extractMetadata(19);
            if (extractMetadata3 != null) {
                tLRPC$TL_documentAttributeVideo.h = Integer.parseInt(extractMetadata3);
            }
            String extractMetadata4 = mediaMetadataRetriever.extractMetadata(9);
            if (extractMetadata4 != null) {
                double parseLong = Long.parseLong(extractMetadata4);
                Double.isNaN(parseLong);
                tLRPC$TL_documentAttributeVideo.duration = parseLong / 1000.0d;
            }
            if (Build.VERSION.SDK_INT >= 17 && (extractMetadata = mediaMetadataRetriever.extractMetadata(24)) != null) {
                int intValue = Utilities.parseInt((CharSequence) extractMetadata).intValue();
                if (videoEditedInfo != null) {
                    videoEditedInfo.rotationValue = intValue;
                } else if (intValue == 90 || intValue == 270) {
                    int i = tLRPC$TL_documentAttributeVideo.w;
                    tLRPC$TL_documentAttributeVideo.w = tLRPC$TL_documentAttributeVideo.h;
                    tLRPC$TL_documentAttributeVideo.h = i;
                }
            }
            z = true;
            try {
                mediaMetadataRetriever.release();
            } catch (Exception e2) {
                FileLog.e(e2);
            }
        } catch (Exception e3) {
            e = e3;
            mediaMetadataRetriever2 = mediaMetadataRetriever;
            FileLog.e(e);
            if (mediaMetadataRetriever2 != null) {
                try {
                    mediaMetadataRetriever2.release();
                } catch (Exception e4) {
                    FileLog.e(e4);
                }
            }
            z = false;
            if (z) {
            }
        } catch (Throwable th2) {
            th = th2;
            mediaMetadataRetriever2 = mediaMetadataRetriever;
            if (mediaMetadataRetriever2 != null) {
                try {
                    mediaMetadataRetriever2.release();
                } catch (Exception e5) {
                    FileLog.e(e5);
                }
            }
            throw th;
        }
        if (z) {
            try {
                MediaPlayer create = MediaPlayer.create(ApplicationLoader.applicationContext, Uri.fromFile(new File(str)));
                if (create != null) {
                    double duration = create.getDuration();
                    Double.isNaN(duration);
                    tLRPC$TL_documentAttributeVideo.duration = duration / 1000.0d;
                    tLRPC$TL_documentAttributeVideo.w = create.getVideoWidth();
                    tLRPC$TL_documentAttributeVideo.h = create.getVideoHeight();
                    create.release();
                }
            } catch (Exception e6) {
                FileLog.e(e6);
            }
        }
    }

    public static Bitmap createVideoThumbnail(String str, int i) {
        float f = i == 2 ? 1920.0f : i == 3 ? 96.0f : 512.0f;
        Bitmap createVideoThumbnailAtTime = createVideoThumbnailAtTime(str, 0L);
        if (createVideoThumbnailAtTime != null) {
            int width = createVideoThumbnailAtTime.getWidth();
            int height = createVideoThumbnailAtTime.getHeight();
            float f2 = width;
            if (f2 > f || height > f) {
                float max = Math.max(width, height) / f;
                return Bitmap.createScaledBitmap(createVideoThumbnailAtTime, (int) (f2 / max), (int) (height / max), true);
            }
            return createVideoThumbnailAtTime;
        }
        return createVideoThumbnailAtTime;
    }

    public static Bitmap createVideoThumbnailAtTime(String str, long j) {
        return createVideoThumbnailAtTime(str, j, null, false);
    }

    public static Bitmap createVideoThumbnailAtTime(String str, long j, int[] iArr, boolean z) {
        Bitmap bitmap;
        if (z) {
            AnimatedFileDrawable animatedFileDrawable = new AnimatedFileDrawable(new File(str), true, 0L, 0, null, null, null, 0L, 0, true, null);
            bitmap = animatedFileDrawable.getFrameAtTime(j, z);
            if (iArr != null) {
                iArr[0] = animatedFileDrawable.getOrientation();
            }
            animatedFileDrawable.recycle();
            if (bitmap == null) {
                return createVideoThumbnailAtTime(str, j, iArr, false);
            }
        } else {
            MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever();
            bitmap = null;
            try {
                try {
                    mediaMetadataRetriever.setDataSource(str);
                    Bitmap frameAtTime = mediaMetadataRetriever.getFrameAtTime(j, 1);
                    if (frameAtTime == null) {
                        try {
                            frameAtTime = mediaMetadataRetriever.getFrameAtTime(j, 3);
                        } catch (Exception unused) {
                        }
                    }
                    bitmap = frameAtTime;
                } finally {
                    try {
                        mediaMetadataRetriever.release();
                    } catch (Throwable unused2) {
                    }
                }
            } catch (Exception unused3) {
            }
        }
        return bitmap;
    }

    private static VideoEditedInfo createCompressionSettings(String str) {
        MediaCodecInfo selectCodec;
        int[] iArr = new int[11];
        AnimatedFileDrawable.getVideoInfo(str, iArr);
        if (iArr[0] == 0) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("video hasn't avc1 atom");
            }
            return null;
        }
        long length = new File(str).length();
        int videoBitrate = MediaController.getVideoBitrate(str);
        if (videoBitrate == -1) {
            videoBitrate = iArr[3];
        }
        float f = iArr[4];
        int i = iArr[6];
        long j = iArr[5];
        int i2 = iArr[7];
        if (Build.VERSION.SDK_INT < 18) {
            try {
                selectCodec = MediaController.selectCodec(MediaController.VIDEO_MIME_TYPE);
            } catch (Exception unused) {
            }
            if (selectCodec == null) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("no codec info for video/avc");
                }
                return null;
            }
            String name = selectCodec.getName();
            if (!name.equals("OMX.google.h264.encoder") && !name.equals("OMX.ST.VFM.H264Enc") && !name.equals("OMX.Exynos.avc.enc") && !name.equals("OMX.MARVELL.VIDEO.HW.CODA7542ENCODER") && !name.equals("OMX.MARVELL.VIDEO.H264ENCODER") && !name.equals("OMX.k3.video.encoder.avc") && !name.equals("OMX.TI.DUCATI1.VIDEO.H264E")) {
                if (MediaController.selectColorFormat(selectCodec, MediaController.VIDEO_MIME_TYPE) == 0) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("no color format for video/avc");
                    }
                    return null;
                }
            }
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("unsupported encoder = " + name);
            }
            return null;
        }
        VideoEditedInfo videoEditedInfo = new VideoEditedInfo();
        videoEditedInfo.startTime = -1L;
        videoEditedInfo.endTime = -1L;
        videoEditedInfo.bitrate = videoBitrate;
        videoEditedInfo.originalPath = str;
        videoEditedInfo.framerate = i2;
        videoEditedInfo.estimatedDuration = (long) Math.ceil(f);
        boolean z = true;
        int i3 = iArr[1];
        videoEditedInfo.originalWidth = i3;
        videoEditedInfo.resultWidth = i3;
        int i4 = iArr[2];
        videoEditedInfo.originalHeight = i4;
        videoEditedInfo.resultHeight = i4;
        videoEditedInfo.rotationValue = iArr[8];
        videoEditedInfo.originalDuration = f * 1000.0f;
        float max = Math.max(i3, i4);
        int i5 = max > 1280.0f ? 4 : max > 854.0f ? 3 : max > 640.0f ? 2 : 1;
        int round = Math.round(DownloadController.getInstance(UserConfig.selectedAccount).getMaxVideoBitrate() / (100.0f / i5));
        if (round > i5) {
            round = i5;
        }
        if (new File(str).length() < 1048576000) {
            if (round != i5 || Math.max(videoEditedInfo.originalWidth, videoEditedInfo.originalHeight) > 1280) {
                float f2 = round != 1 ? round != 2 ? round != 3 ? 1280.0f : 848.0f : 640.0f : 432.0f;
                int i6 = videoEditedInfo.originalWidth;
                int i7 = videoEditedInfo.originalHeight;
                float f3 = f2 / (i6 > i7 ? i6 : i7);
                videoEditedInfo.resultWidth = Math.round((i6 * f3) / 2.0f) * 2;
                videoEditedInfo.resultHeight = Math.round((videoEditedInfo.originalHeight * f3) / 2.0f) * 2;
            } else {
                z = false;
            }
            videoBitrate = MediaController.makeVideoBitrate(videoEditedInfo.originalHeight, videoEditedInfo.originalWidth, videoBitrate, videoEditedInfo.resultHeight, videoEditedInfo.resultWidth);
        } else {
            z = false;
        }
        if (!z) {
            videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
            videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
            videoEditedInfo.bitrate = videoBitrate;
            videoEditedInfo.estimatedSize = length;
        } else {
            videoEditedInfo.bitrate = videoBitrate;
            videoEditedInfo.estimatedSize = ((float) j) + (((f / 1000.0f) * MediaController.extractRealEncoderBitrate(videoEditedInfo.resultWidth, videoEditedInfo.resultHeight, videoBitrate, false)) / 8.0f);
        }
        if (videoEditedInfo.estimatedSize == 0) {
            videoEditedInfo.estimatedSize = 1L;
        }
        return videoEditedInfo;
    }

    public static void prepareSendingVideo(final AccountInstance accountInstance, final String str, final VideoEditedInfo videoEditedInfo, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final ArrayList<TLRPC$MessageEntity> arrayList, final int i, final MessageObject messageObject3, final boolean z, final int i2, final boolean z2, final boolean z3, final CharSequence charSequence, final String str2, final int i3) {
        if (str == null || str.length() == 0) {
            return;
        }
        new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda73
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingVideo$93(VideoEditedInfo.this, str, j, i, accountInstance, charSequence, messageObject3, z3, messageObject, messageObject2, arrayList, z, i2, tL_stories$StoryItem, replyQuote, i3, str2, z2);
            }
        }).start();
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:101:0x025e  */
    /* JADX WARN: Removed duplicated region for block: B:104:0x027a  */
    /* JADX WARN: Removed duplicated region for block: B:108:0x0293  */
    /* JADX WARN: Removed duplicated region for block: B:134:0x031a  */
    /* JADX WARN: Removed duplicated region for block: B:137:0x032a  */
    /* JADX WARN: Removed duplicated region for block: B:144:0x0369  */
    /* JADX WARN: Removed duplicated region for block: B:147:0x0372  */
    /* JADX WARN: Removed duplicated region for block: B:149:0x0379  */
    /* JADX WARN: Removed duplicated region for block: B:54:0x0128  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingVideo$93(VideoEditedInfo videoEditedInfo, String str, final long j, final int i, final AccountInstance accountInstance, CharSequence charSequence, final MessageObject messageObject, final boolean z, final MessageObject messageObject2, final MessageObject messageObject3, final ArrayList arrayList, final boolean z2, final int i2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final int i3, final String str2, boolean z3) {
        long j2;
        String str3;
        int i4;
        TLRPC$TL_document tLRPC$TL_document;
        String str4;
        final Bitmap bitmap;
        TLRPC$TL_document tLRPC$TL_document2;
        final String str5;
        String str6;
        String str7;
        TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo;
        int i5;
        int i6;
        final String str8 = str;
        VideoEditedInfo createCompressionSettings = videoEditedInfo != null ? videoEditedInfo : createCompressionSettings(str);
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        boolean z4 = createCompressionSettings != null && createCompressionSettings.roundVideo;
        if (createCompressionSettings != null || str8.endsWith("mp4") || z4) {
            File file = new File(str8);
            String str9 = str8 + file.length() + "_" + file.lastModified();
            long j3 = 0;
            if (createCompressionSettings != null) {
                if (!z4) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(str9);
                    sb.append(createCompressionSettings.estimatedDuration);
                    sb.append("_");
                    sb.append(createCompressionSettings.startTime);
                    sb.append("_");
                    sb.append(createCompressionSettings.endTime);
                    sb.append(createCompressionSettings.muted ? "_m" : "");
                    str9 = sb.toString();
                    if (createCompressionSettings.resultWidth != createCompressionSettings.originalWidth) {
                        str9 = str9 + "_" + createCompressionSettings.resultWidth;
                    }
                }
                long j4 = createCompressionSettings.startTime;
                if (j4 >= 0) {
                    j3 = j4;
                }
            }
            String str10 = str9;
            long j5 = j3;
            if (!isEncryptedDialog && i == 0 && (createCompressionSettings == null || (createCompressionSettings.filterState == null && createCompressionSettings.paintPath == null && createCompressionSettings.mediaEntities == null && createCompressionSettings.cropState == null))) {
                Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str10, !isEncryptedDialog ? 2 : 5);
                if (sentFile != null && (sentFile[0] instanceof TLRPC$TL_document)) {
                    tLRPC$TL_document = (TLRPC$TL_document) sentFile[0];
                    j2 = j5;
                    str3 = str10;
                    i4 = 2;
                    ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str, null, j2);
                    str4 = (String) sentFile[1];
                    if (tLRPC$TL_document != null) {
                        Bitmap bitmap2 = (createCompressionSettings == null || !createCompressionSettings.notReadyYet) ? null : createCompressionSettings.thumb;
                        if (bitmap2 == null) {
                            bitmap2 = createVideoThumbnailAtTime(str8, j2);
                        }
                        if (bitmap2 == null) {
                            bitmap2 = createVideoThumbnail(str8, 1);
                        }
                        int i7 = (isEncryptedDialog || i != 0) ? 90 : 320;
                        float f = i7;
                        TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(bitmap2, f, f, i7 > 90 ? 80 : 55, isEncryptedDialog);
                        if (bitmap2 != null && scaleAndSaveImage != null) {
                            if (z4) {
                                if (isEncryptedDialog) {
                                    bitmap2 = Bitmap.createScaledBitmap(bitmap2, 90, 90, true);
                                    int i8 = Build.VERSION.SDK_INT;
                                    Utilities.blurBitmap(bitmap2, 7, i8 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Utilities.blurBitmap(bitmap2, 7, i8 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Utilities.blurBitmap(bitmap2, 7, i8 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Object[] objArr = new Object[i4];
                                    objArr[0] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    objArr[1] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    str7 = String.format(scaleAndSaveImage.location.volume_id + "_" + scaleAndSaveImage.location.local_id + "@%d_%d_b2", objArr);
                                } else {
                                    Utilities.blurBitmap(bitmap2, 3, Build.VERSION.SDK_INT < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Object[] objArr2 = new Object[i4];
                                    objArr2[0] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    objArr2[1] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    str7 = String.format(scaleAndSaveImage.location.volume_id + "_" + scaleAndSaveImage.location.local_id + "@%d_%d_b", objArr2);
                                }
                                TLRPC$TL_document tLRPC$TL_document3 = new TLRPC$TL_document();
                                if (scaleAndSaveImage != null) {
                                    tLRPC$TL_document3.thumbs.add(scaleAndSaveImage);
                                    tLRPC$TL_document3.flags |= 1;
                                }
                                tLRPC$TL_document3.file_reference = new byte[0];
                                tLRPC$TL_document3.mime_type = "video/mp4";
                                accountInstance.getUserConfig().saveConfig(false);
                                if (!isEncryptedDialog) {
                                    if (accountInstance.getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                                        return;
                                    }
                                    tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo_layer159();
                                } else {
                                    tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                    tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                }
                                tLRPC$TL_documentAttributeVideo.round_message = z4;
                                tLRPC$TL_document3.attributes.add(tLRPC$TL_documentAttributeVideo);
                                if (createCompressionSettings == null && createCompressionSettings.notReadyYet) {
                                    tLRPC$TL_documentAttributeVideo.w = createCompressionSettings.resultWidth;
                                    tLRPC$TL_documentAttributeVideo.h = createCompressionSettings.resultHeight;
                                    double d = createCompressionSettings.estimatedDuration;
                                    Double.isNaN(d);
                                    tLRPC$TL_documentAttributeVideo.duration = d / 1000.0d;
                                    tLRPC$TL_document3.size = createCompressionSettings.estimatedSize;
                                } else if (createCompressionSettings == null && createCompressionSettings.needConvert()) {
                                    if (createCompressionSettings.muted) {
                                        tLRPC$TL_document3.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                        fillVideoAttribute(str8, tLRPC$TL_documentAttributeVideo, createCompressionSettings);
                                        createCompressionSettings.originalWidth = tLRPC$TL_documentAttributeVideo.w;
                                        createCompressionSettings.originalHeight = tLRPC$TL_documentAttributeVideo.h;
                                    } else {
                                        double d2 = createCompressionSettings.estimatedDuration;
                                        Double.isNaN(d2);
                                        tLRPC$TL_documentAttributeVideo.duration = d2 / 1000.0d;
                                    }
                                    int i9 = createCompressionSettings.rotationValue;
                                    MediaController.CropState cropState = createCompressionSettings.cropState;
                                    if (cropState != null) {
                                        i5 = cropState.transformWidth;
                                        i6 = cropState.transformHeight;
                                        i9 += cropState.transformRotation;
                                    } else {
                                        i5 = createCompressionSettings.resultWidth;
                                        i6 = createCompressionSettings.resultHeight;
                                    }
                                    if (i9 == 90 || i9 == 270) {
                                        tLRPC$TL_documentAttributeVideo.w = i6;
                                        tLRPC$TL_documentAttributeVideo.h = i5;
                                    } else {
                                        tLRPC$TL_documentAttributeVideo.w = i5;
                                        tLRPC$TL_documentAttributeVideo.h = i6;
                                    }
                                    tLRPC$TL_document3.size = createCompressionSettings.estimatedSize;
                                } else {
                                    if (file.exists()) {
                                        tLRPC$TL_document3.size = (int) file.length();
                                    }
                                    fillVideoAttribute(str8, tLRPC$TL_documentAttributeVideo, null);
                                }
                                bitmap = bitmap2;
                                str5 = str7;
                                tLRPC$TL_document2 = tLRPC$TL_document3;
                            } else {
                                bitmap2 = null;
                            }
                        }
                        str7 = null;
                        TLRPC$TL_document tLRPC$TL_document32 = new TLRPC$TL_document();
                        if (scaleAndSaveImage != null) {
                        }
                        tLRPC$TL_document32.file_reference = new byte[0];
                        tLRPC$TL_document32.mime_type = "video/mp4";
                        accountInstance.getUserConfig().saveConfig(false);
                        if (!isEncryptedDialog) {
                        }
                        tLRPC$TL_documentAttributeVideo.round_message = z4;
                        tLRPC$TL_document32.attributes.add(tLRPC$TL_documentAttributeVideo);
                        if (createCompressionSettings == null) {
                        }
                        if (createCompressionSettings == null) {
                        }
                        if (file.exists()) {
                        }
                        fillVideoAttribute(str8, tLRPC$TL_documentAttributeVideo, null);
                        bitmap = bitmap2;
                        str5 = str7;
                        tLRPC$TL_document2 = tLRPC$TL_document32;
                    } else {
                        bitmap = null;
                        tLRPC$TL_document2 = tLRPC$TL_document;
                        str5 = null;
                    }
                    if (createCompressionSettings != null && createCompressionSettings.needConvert()) {
                        File file2 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + ".mp4");
                        SharedConfig.saveConfig();
                        str8 = file2.getAbsolutePath();
                    }
                    final HashMap hashMap = new HashMap();
                    final String charSequence2 = charSequence != null ? charSequence.toString() : "";
                    str6 = str3;
                    if (str6 != null) {
                        hashMap.put("originalPath", str6);
                    }
                    if (str4 != null) {
                        hashMap.put("parentObject", str4);
                    }
                    final VideoEditedInfo videoEditedInfo2 = createCompressionSettings;
                    final String str11 = str4;
                    final TLRPC$TL_document tLRPC$TL_document4 = tLRPC$TL_document2;
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda6
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.lambda$prepareSendingVideo$92(bitmap, str5, messageObject, accountInstance, videoEditedInfo2, tLRPC$TL_document4, str8, hashMap, z, str11, j, messageObject2, messageObject3, charSequence2, arrayList, z2, i2, i, tL_stories$StoryItem, replyQuote, i3, str2);
                        }
                    });
                    return;
                }
            }
            j2 = j5;
            str3 = str10;
            i4 = 2;
            tLRPC$TL_document = null;
            str4 = null;
            if (tLRPC$TL_document != null) {
            }
            if (createCompressionSettings != null) {
                File file22 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + ".mp4");
                SharedConfig.saveConfig();
                str8 = file22.getAbsolutePath();
            }
            final HashMap hashMap2 = new HashMap();
            if (charSequence != null) {
            }
            str6 = str3;
            if (str6 != null) {
            }
            if (str4 != null) {
            }
            final VideoEditedInfo videoEditedInfo22 = createCompressionSettings;
            final String str112 = str4;
            final TLRPC$TL_document tLRPC$TL_document42 = tLRPC$TL_document2;
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda6
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingVideo$92(bitmap, str5, messageObject, accountInstance, videoEditedInfo22, tLRPC$TL_document42, str8, hashMap2, z, str112, j, messageObject2, messageObject3, charSequence2, arrayList, z2, i2, i, tL_stories$StoryItem, replyQuote, i3, str2);
                }
            });
            return;
        }
        prepareSendingDocumentInternal(accountInstance, str, str, null, null, j, messageObject2, messageObject3, tL_stories$StoryItem, replyQuote, arrayList, messageObject, null, false, charSequence, z2, i2, null, z3, str2, i3);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingVideo$92(Bitmap bitmap, String str, MessageObject messageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str2, HashMap hashMap, boolean z, String str3, long j, MessageObject messageObject2, MessageObject messageObject3, String str4, ArrayList arrayList, boolean z2, int i, int i2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, int i3, String str5) {
        if (bitmap != null && str != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, videoEditedInfo, tLRPC$TL_document, str2, hashMap, false, z, str3);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, videoEditedInfo, str2, j, messageObject2, messageObject3, str4, arrayList, null, hashMap, z2, i, i2, str3, null, false, z);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut_id = i3;
        of.quick_reply_shortcut = str5;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* loaded from: classes3.dex */
    public static class SendMessageParams {
        public String caption;
        public TLRPC$TL_document document;
        public ArrayList<TLRPC$MessageEntity> entities;
        public TLRPC$TL_game game;
        public boolean hasMediaSpoilers;
        public boolean invert_media;
        public TLRPC$TL_messageMediaInvoice invoice;
        public TLRPC$MessageMedia location;
        public TLRPC$TL_messageMediaWebPage mediaWebPage;
        public String message;
        public boolean notify;
        public HashMap<String, String> params;
        public Object parentObject;
        public String path;
        public long peer;
        public TLRPC$TL_photo photo;
        public TLRPC$TL_messageMediaPoll poll;
        public String quick_reply_shortcut;
        public int quick_reply_shortcut_id;
        public TLRPC$ReplyMarkup replyMarkup;
        public ChatActivity.ReplyQuote replyQuote;
        public MessageObject replyToMsg;
        public TL_stories$StoryItem replyToStoryItem;
        public MessageObject replyToTopMsg;
        public MessageObject retryMessageObject;
        public int scheduleDate;
        public boolean searchLinks = true;
        public MessageObject.SendAnimationData sendAnimationData;
        public TL_stories$StoryItem sendingStory;
        public int ttl;
        public boolean updateStickersOrder;
        public TLRPC$User user;
        public VideoEditedInfo videoEditedInfo;
        public TLRPC$WebPage webPage;

        public static SendMessageParams of(String str, long j) {
            return of(str, null, null, null, null, null, null, null, null, null, j, null, null, null, null, true, null, null, null, null, false, 0, 0, null, null, false);
        }

        public static SendMessageParams of(MessageObject messageObject) {
            long dialogId = messageObject.getDialogId();
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            SendMessageParams of = of(null, null, null, null, null, null, null, null, null, null, dialogId, tLRPC$Message.attachPath, null, null, null, true, messageObject, null, tLRPC$Message.reply_markup, tLRPC$Message.params, !tLRPC$Message.silent, messageObject.scheduled ? tLRPC$Message.date : 0, 0, null, null, false);
            TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
            if (tLRPC$Message2 != null) {
                TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut = tLRPC$Message2.quick_reply_shortcut;
                if (tLRPC$InputQuickReplyShortcut instanceof TLRPC$TL_inputQuickReplyShortcut) {
                    of.quick_reply_shortcut = ((TLRPC$TL_inputQuickReplyShortcut) tLRPC$InputQuickReplyShortcut).shortcut;
                }
                of.quick_reply_shortcut_id = messageObject.getQuickReplyId();
            }
            return of;
        }

        public static SendMessageParams of(TLRPC$User tLRPC$User, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, tLRPC$User, null, null, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, null, null, null, null, tLRPC$TL_messageMediaInvoice, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_document tLRPC$TL_document, VideoEditedInfo videoEditedInfo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z2) {
            return of(null, str2, null, null, videoEditedInfo, null, tLRPC$TL_document, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, sendAnimationData, z2);
        }

        public static SendMessageParams of(TLRPC$TL_document tLRPC$TL_document, VideoEditedInfo videoEditedInfo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z2, boolean z3) {
            return of(null, str2, null, null, videoEditedInfo, null, tLRPC$TL_document, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, sendAnimationData, z2, z3);
        }

        public static SendMessageParams of(String str, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, MessageObject.SendAnimationData sendAnimationData, boolean z3) {
            return of(str, null, null, null, null, null, null, null, null, null, j, null, messageObject, messageObject2, tLRPC$WebPage, z, null, arrayList, tLRPC$ReplyMarkup, hashMap, z2, i, 0, null, sendAnimationData, z3);
        }

        public static SendMessageParams of(TLRPC$MessageMedia tLRPC$MessageMedia, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, tLRPC$MessageMedia, null, null, null, null, null, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, null, null, null, tLRPC$TL_messageMediaPoll, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_game tLRPC$TL_game, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, null, null, tLRPC$TL_game, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_photo tLRPC$TL_photo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, boolean z2, boolean z3) {
            return of(null, str2, null, tLRPC$TL_photo, null, null, null, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, null, z2, z3);
        }

        public static SendMessageParams of(TLRPC$TL_photo tLRPC$TL_photo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, boolean z2) {
            return of(null, str2, null, tLRPC$TL_photo, null, null, null, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, null, z2);
        }

        private static SendMessageParams of(String str, String str2, TLRPC$MessageMedia tLRPC$MessageMedia, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$User tLRPC$User, TLRPC$TL_document tLRPC$TL_document, TLRPC$TL_game tLRPC$TL_game, TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, String str3, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, MessageObject messageObject3, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z3) {
            return of(str, str2, tLRPC$MessageMedia, tLRPC$TL_photo, videoEditedInfo, tLRPC$User, tLRPC$TL_document, tLRPC$TL_game, tLRPC$TL_messageMediaPoll, tLRPC$TL_messageMediaInvoice, j, str3, messageObject, messageObject2, tLRPC$WebPage, z, messageObject3, arrayList, tLRPC$ReplyMarkup, hashMap, z2, i, i2, obj, sendAnimationData, z3, false);
        }

        public static SendMessageParams of(String str, String str2, TLRPC$MessageMedia tLRPC$MessageMedia, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$User tLRPC$User, TLRPC$TL_document tLRPC$TL_document, TLRPC$TL_game tLRPC$TL_game, TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, String str3, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, MessageObject messageObject3, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z3, boolean z4) {
            SendMessageParams sendMessageParams = new SendMessageParams();
            sendMessageParams.message = str;
            sendMessageParams.caption = str2;
            sendMessageParams.location = tLRPC$MessageMedia;
            sendMessageParams.photo = tLRPC$TL_photo;
            sendMessageParams.videoEditedInfo = videoEditedInfo;
            sendMessageParams.user = tLRPC$User;
            sendMessageParams.document = tLRPC$TL_document;
            sendMessageParams.game = tLRPC$TL_game;
            sendMessageParams.poll = tLRPC$TL_messageMediaPoll;
            sendMessageParams.invoice = tLRPC$TL_messageMediaInvoice;
            sendMessageParams.peer = j;
            sendMessageParams.path = str3;
            sendMessageParams.replyToMsg = messageObject;
            sendMessageParams.replyToTopMsg = messageObject2;
            sendMessageParams.webPage = tLRPC$WebPage;
            sendMessageParams.searchLinks = z;
            sendMessageParams.retryMessageObject = messageObject3;
            sendMessageParams.entities = arrayList;
            sendMessageParams.replyMarkup = tLRPC$ReplyMarkup;
            sendMessageParams.params = hashMap;
            sendMessageParams.notify = z2;
            sendMessageParams.scheduleDate = i;
            sendMessageParams.ttl = i2;
            sendMessageParams.parentObject = obj;
            sendMessageParams.sendAnimationData = sendAnimationData;
            sendMessageParams.updateStickersOrder = z3;
            sendMessageParams.hasMediaSpoilers = z4;
            return sendMessageParams;
        }
    }
}
