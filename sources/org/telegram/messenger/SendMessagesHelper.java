package org.telegram.messenger;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.AssetFileDescriptor;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.drawable.BitmapDrawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.media.MediaCodecInfo;
import android.media.MediaMetadataRetriever;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.Spannable;
import android.text.TextUtils;
import android.util.Base64;
import android.util.SparseArray;
import android.webkit.MimeTypeMap;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.collection.LongSparseArray;
import androidx.core.view.inputmethod.InputContentInfoCompat;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.json.JSONObject;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.Utilities;
import org.telegram.messenger.audioinfo.AudioInfo;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.QuickAckDelegate;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.SerializedData;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC$BotInlineMessage;
import org.telegram.tgnet.TLRPC$BotInlineResult;
import org.telegram.tgnet.TLRPC$Chat;
import org.telegram.tgnet.TLRPC$ChatFull;
import org.telegram.tgnet.TLRPC$DecryptedMessage;
import org.telegram.tgnet.TLRPC$DecryptedMessageAction;
import org.telegram.tgnet.TLRPC$DecryptedMessageMedia;
import org.telegram.tgnet.TLRPC$Document;
import org.telegram.tgnet.TLRPC$DocumentAttribute;
import org.telegram.tgnet.TLRPC$EncryptedChat;
import org.telegram.tgnet.TLRPC$FileLocation;
import org.telegram.tgnet.TLRPC$GeoPoint;
import org.telegram.tgnet.TLRPC$InputCheckPasswordSRP;
import org.telegram.tgnet.TLRPC$InputDocument;
import org.telegram.tgnet.TLRPC$InputEncryptedFile;
import org.telegram.tgnet.TLRPC$InputFile;
import org.telegram.tgnet.TLRPC$InputMedia;
import org.telegram.tgnet.TLRPC$InputPeer;
import org.telegram.tgnet.TLRPC$InputQuickReplyShortcut;
import org.telegram.tgnet.TLRPC$InputReplyTo;
import org.telegram.tgnet.TLRPC$InputStickerSet;
import org.telegram.tgnet.TLRPC$KeyboardButton;
import org.telegram.tgnet.TLRPC$Message;
import org.telegram.tgnet.TLRPC$MessageAction;
import org.telegram.tgnet.TLRPC$MessageEntity;
import org.telegram.tgnet.TLRPC$MessageFwdHeader;
import org.telegram.tgnet.TLRPC$MessageMedia;
import org.telegram.tgnet.TLRPC$MessageReplies;
import org.telegram.tgnet.TLRPC$MessageReplyHeader;
import org.telegram.tgnet.TLRPC$PaymentForm;
import org.telegram.tgnet.TLRPC$PaymentReceipt;
import org.telegram.tgnet.TLRPC$Peer;
import org.telegram.tgnet.TLRPC$Photo;
import org.telegram.tgnet.TLRPC$PhotoSize;
import org.telegram.tgnet.TLRPC$PollAnswer;
import org.telegram.tgnet.TLRPC$PollResults;
import org.telegram.tgnet.TLRPC$ReplyMarkup;
import org.telegram.tgnet.TLRPC$TL_account_getPassword;
import org.telegram.tgnet.TLRPC$TL_botInlineMediaResult;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaAuto;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaContact;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaGeo;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageText;
import org.telegram.tgnet.TLRPC$TL_dataJSON;
import org.telegram.tgnet.TLRPC$TL_decryptedMessage;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionAbortKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionAcceptKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionCommitKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionDeleteMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionFlushHistory;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionNoop;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionNotifyLayer;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionReadMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionRequestKey;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionResend;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionScreenshotMessages;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageActionTyping;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaContact;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaGeoPoint;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo;
import org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_decryptedMessage_layer45;
import org.telegram.tgnet.TLRPC$TL_document;
import org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated;
import org.telegram.tgnet.TLRPC$TL_documentAttributeAudio;
import org.telegram.tgnet.TLRPC$TL_documentAttributeFilename;
import org.telegram.tgnet.TLRPC$TL_documentAttributeHasStickers;
import org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize;
import org.telegram.tgnet.TLRPC$TL_documentAttributeSticker;
import org.telegram.tgnet.TLRPC$TL_documentAttributeSticker_layer55;
import org.telegram.tgnet.TLRPC$TL_documentAttributeVideo;
import org.telegram.tgnet.TLRPC$TL_documentAttributeVideo_layer159;
import org.telegram.tgnet.TLRPC$TL_document_layer82;
import org.telegram.tgnet.TLRPC$TL_error;
import org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC$TL_fileLocation_layer82;
import org.telegram.tgnet.TLRPC$TL_forumTopic;
import org.telegram.tgnet.TLRPC$TL_game;
import org.telegram.tgnet.TLRPC$TL_geoPoint;
import org.telegram.tgnet.TLRPC$TL_inputCheckPasswordEmpty;
import org.telegram.tgnet.TLRPC$TL_inputDocument;
import org.telegram.tgnet.TLRPC$TL_inputEncryptedFile;
import org.telegram.tgnet.TLRPC$TL_inputGeoPoint;
import org.telegram.tgnet.TLRPC$TL_inputInvoiceMessage;
import org.telegram.tgnet.TLRPC$TL_inputMediaContact;
import org.telegram.tgnet.TLRPC$TL_inputMediaDice;
import org.telegram.tgnet.TLRPC$TL_inputMediaDocument;
import org.telegram.tgnet.TLRPC$TL_inputMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_inputMediaGame;
import org.telegram.tgnet.TLRPC$TL_inputMediaGeoLive;
import org.telegram.tgnet.TLRPC$TL_inputMediaGeoPoint;
import org.telegram.tgnet.TLRPC$TL_inputMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_inputMediaPoll;
import org.telegram.tgnet.TLRPC$TL_inputMediaStory;
import org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument;
import org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto;
import org.telegram.tgnet.TLRPC$TL_inputMediaVenue;
import org.telegram.tgnet.TLRPC$TL_inputMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_inputPeerChannel;
import org.telegram.tgnet.TLRPC$TL_inputPeerChat;
import org.telegram.tgnet.TLRPC$TL_inputPeerEmpty;
import org.telegram.tgnet.TLRPC$TL_inputPeerSelf;
import org.telegram.tgnet.TLRPC$TL_inputPeerUser;
import org.telegram.tgnet.TLRPC$TL_inputPhoto;
import org.telegram.tgnet.TLRPC$TL_inputQuickReplyShortcut;
import org.telegram.tgnet.TLRPC$TL_inputReplyToMessage;
import org.telegram.tgnet.TLRPC$TL_inputReplyToStory;
import org.telegram.tgnet.TLRPC$TL_inputSingleMedia;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetID;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetItem;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC$TL_inputUserSelf;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonRow;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonSwitchInline;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonUrl;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonUrlAuth;
import org.telegram.tgnet.TLRPC$TL_message;
import org.telegram.tgnet.TLRPC$TL_messageActionScreenshotTaken;
import org.telegram.tgnet.TLRPC$TL_messageEncryptedAction;
import org.telegram.tgnet.TLRPC$TL_messageEntityBold;
import org.telegram.tgnet.TLRPC$TL_messageEntityCode;
import org.telegram.tgnet.TLRPC$TL_messageEntityCustomEmoji;
import org.telegram.tgnet.TLRPC$TL_messageEntityItalic;
import org.telegram.tgnet.TLRPC$TL_messageEntityPre;
import org.telegram.tgnet.TLRPC$TL_messageEntitySpoiler;
import org.telegram.tgnet.TLRPC$TL_messageEntityTextUrl;
import org.telegram.tgnet.TLRPC$TL_messageEntityUrl;
import org.telegram.tgnet.TLRPC$TL_messageFwdHeader;
import org.telegram.tgnet.TLRPC$TL_messageMediaContact;
import org.telegram.tgnet.TLRPC$TL_messageMediaDice;
import org.telegram.tgnet.TLRPC$TL_messageMediaDocument;
import org.telegram.tgnet.TLRPC$TL_messageMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_messageMediaGame;
import org.telegram.tgnet.TLRPC$TL_messageMediaGeo;
import org.telegram.tgnet.TLRPC$TL_messageMediaGeoLive;
import org.telegram.tgnet.TLRPC$TL_messageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_messageMediaPoll;
import org.telegram.tgnet.TLRPC$TL_messageMediaVenue;
import org.telegram.tgnet.TLRPC$TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_messageReplies;
import org.telegram.tgnet.TLRPC$TL_messageReplyHeader;
import org.telegram.tgnet.TLRPC$TL_messageReplyStoryHeader;
import org.telegram.tgnet.TLRPC$TL_messageService;
import org.telegram.tgnet.TLRPC$TL_message_secret;
import org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer;
import org.telegram.tgnet.TLRPC$TL_messages_editMessage;
import org.telegram.tgnet.TLRPC$TL_messages_forwardMessages;
import org.telegram.tgnet.TLRPC$TL_messages_getBotCallbackAnswer;
import org.telegram.tgnet.TLRPC$TL_messages_getStickerSet;
import org.telegram.tgnet.TLRPC$TL_messages_historyImport;
import org.telegram.tgnet.TLRPC$TL_messages_initHistoryImport;
import org.telegram.tgnet.TLRPC$TL_messages_messages;
import org.telegram.tgnet.TLRPC$TL_messages_requestUrlAuth;
import org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendInlineBotResult;
import org.telegram.tgnet.TLRPC$TL_messages_sendMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendMessage;
import org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia;
import org.telegram.tgnet.TLRPC$TL_messages_sendReaction;
import org.telegram.tgnet.TLRPC$TL_messages_sendScreenshotNotification;
import org.telegram.tgnet.TLRPC$TL_messages_sendVote;
import org.telegram.tgnet.TLRPC$TL_messages_startHistoryImport;
import org.telegram.tgnet.TLRPC$TL_messages_stickerSet;
import org.telegram.tgnet.TLRPC$TL_messages_uploadImportedMedia;
import org.telegram.tgnet.TLRPC$TL_messages_uploadMedia;
import org.telegram.tgnet.TLRPC$TL_payments_getPaymentForm;
import org.telegram.tgnet.TLRPC$TL_payments_getPaymentReceipt;
import org.telegram.tgnet.TLRPC$TL_payments_paymentFormStars;
import org.telegram.tgnet.TLRPC$TL_payments_paymentReceiptStars;
import org.telegram.tgnet.TLRPC$TL_peerChannel;
import org.telegram.tgnet.TLRPC$TL_peerUser;
import org.telegram.tgnet.TLRPC$TL_photo;
import org.telegram.tgnet.TLRPC$TL_photoCachedSize;
import org.telegram.tgnet.TLRPC$TL_photoEmpty;
import org.telegram.tgnet.TLRPC$TL_photoPathSize;
import org.telegram.tgnet.TLRPC$TL_photoSize;
import org.telegram.tgnet.TLRPC$TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC$TL_photoSizeProgressive;
import org.telegram.tgnet.TLRPC$TL_photoSize_layer127;
import org.telegram.tgnet.TLRPC$TL_photoStrippedSize;
import org.telegram.tgnet.TLRPC$TL_reactionCustomEmoji;
import org.telegram.tgnet.TLRPC$TL_reactionEmoji;
import org.telegram.tgnet.TLRPC$TL_replyInlineMarkup;
import org.telegram.tgnet.TLRPC$TL_restrictionReason;
import org.telegram.tgnet.TLRPC$TL_stickers_createStickerSet;
import org.telegram.tgnet.TLRPC$TL_updateEditChannelMessage;
import org.telegram.tgnet.TLRPC$TL_updateEditMessage;
import org.telegram.tgnet.TLRPC$TL_updateMessageID;
import org.telegram.tgnet.TLRPC$TL_updateNewChannelMessage;
import org.telegram.tgnet.TLRPC$TL_updateNewMessage;
import org.telegram.tgnet.TLRPC$TL_updateNewScheduledMessage;
import org.telegram.tgnet.TLRPC$TL_updateQuickReplyMessage;
import org.telegram.tgnet.TLRPC$TL_updateShortSentMessage;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultAccepted;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultDefault;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultRequest;
import org.telegram.tgnet.TLRPC$TL_user;
import org.telegram.tgnet.TLRPC$TL_userContact_old2;
import org.telegram.tgnet.TLRPC$TL_userRequest_old2;
import org.telegram.tgnet.TLRPC$TL_webDocument;
import org.telegram.tgnet.TLRPC$TL_webPageEmpty;
import org.telegram.tgnet.TLRPC$TL_webPagePending;
import org.telegram.tgnet.TLRPC$TL_webPageUrlPending;
import org.telegram.tgnet.TLRPC$Update;
import org.telegram.tgnet.TLRPC$Updates;
import org.telegram.tgnet.TLRPC$User;
import org.telegram.tgnet.TLRPC$UserFull;
import org.telegram.tgnet.TLRPC$VideoSize;
import org.telegram.tgnet.TLRPC$WebDocument;
import org.telegram.tgnet.TLRPC$WebPage;
import org.telegram.tgnet.TLRPC$account_Password;
import org.telegram.tgnet.TLRPC$messages_Messages;
import org.telegram.tgnet.tl.TL_stories$StoryItem;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Business.QuickRepliesController;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.ChatActivity;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedEmojiSpan;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.Point;
import org.telegram.ui.Components.Reactions.ReactionsLayoutInBubble;
import org.telegram.ui.Components.Reactions.ReactionsUtils;
import org.telegram.ui.LaunchActivity;
import org.telegram.ui.PaymentFormActivity;
import org.telegram.ui.Stars.StarsController;
import org.telegram.ui.Stars.StarsIntroActivity;
import org.telegram.ui.Stories.MessageMediaStoryFull;
import org.telegram.ui.TwoStepVerificationActivity;
import org.telegram.ui.TwoStepVerificationSetupActivity;
import org.telegram.ui.bots.BotWebViewSheet;
import org.webrtc.MediaStreamTrack;
/* loaded from: classes.dex */
public class SendMessagesHelper extends BaseController implements NotificationCenter.NotificationCenterDelegate {
    private static final int ERROR_TYPE_FILE_TOO_LARGE = 2;
    private static final int ERROR_TYPE_UNSUPPORTED = 1;
    private static volatile SendMessagesHelper[] Instance = null;
    public static final int MEDIA_TYPE_DICE = 11;
    public static final int MEDIA_TYPE_STORY = 12;
    private static DispatchQueue mediaSendQueue = new DispatchQueue("mediaSendQueue");
    private static ThreadPoolExecutor mediaSendThreadPool;
    private HashMap<String, ArrayList<DelayedMessage>> delayedMessages;
    private SparseArray<TLRPC$Message> editingMessages;
    private HashMap<String, ImportingHistory> importingHistoryFiles;
    private LongSparseArray<ImportingHistory> importingHistoryMap;
    private HashMap<String, ImportingStickers> importingStickersFiles;
    private HashMap<String, ImportingStickers> importingStickersMap;
    private LocationProvider locationProvider;
    private SparseArray<TLRPC$Message> sendingMessages;
    private LongSparseArray<Integer> sendingMessagesIdDialogs;
    private SparseArray<MessageObject> unsentMessages;
    private SparseArray<TLRPC$Message> uploadMessages;
    private LongSparseArray<Integer> uploadingMessagesIdDialogs;
    private LongSparseArray<Long> voteSendTime;
    private HashMap<String, Boolean> waitingForCallback;
    private HashMap<String, List<String>> waitingForCallbackMap;
    private HashMap<String, MessageObject> waitingForLocation;
    private HashMap<String, byte[]> waitingForVote;

    /* loaded from: classes3.dex */
    public static class SendingMediaInfo {
        public boolean canDeleteAfter;
        public String caption;
        public TLRPC$VideoSize emojiMarkup;
        public ArrayList<TLRPC$MessageEntity> entities;
        public boolean forceImage;
        public boolean hasMediaSpoilers;
        public TLRPC$BotInlineResult inlineResult;
        public boolean isVideo;
        public ArrayList<TLRPC$InputDocument> masks;
        public String paintPath;
        public HashMap<String, String> params;
        public String path;
        public MediaController.SearchImage searchImage;
        public String thumbPath;
        public int ttl;
        public boolean updateStickersOrder;
        public Uri uri;
        public VideoEditedInfo videoEditedInfo;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$sendCallback$25(String str) {
    }

    public static boolean checkUpdateStickersOrder(CharSequence charSequence) {
        if (charSequence instanceof Spannable) {
            for (AnimatedEmojiSpan animatedEmojiSpan : (AnimatedEmojiSpan[]) ((Spannable) charSequence).getSpans(0, charSequence.length(), AnimatedEmojiSpan.class)) {
                if (animatedEmojiSpan.fromEmojiKeyboard) {
                    return true;
                }
            }
        }
        return false;
    }

    public TLRPC$InputReplyTo createReplyInput(TL_stories$StoryItem tL_stories$StoryItem) {
        TLRPC$TL_inputReplyToStory tLRPC$TL_inputReplyToStory = new TLRPC$TL_inputReplyToStory();
        tLRPC$TL_inputReplyToStory.story_id = tL_stories$StoryItem.id;
        tLRPC$TL_inputReplyToStory.peer = getMessagesController().getInputPeer(tL_stories$StoryItem.dialogId);
        return tLRPC$TL_inputReplyToStory;
    }

    public TLRPC$InputReplyTo createReplyInput(int i) {
        return createReplyInput(null, i, 0, null);
    }

    public TLRPC$InputReplyTo createReplyInput(TLRPC$InputPeer tLRPC$InputPeer, int i, int i2, ChatActivity.ReplyQuote replyQuote) {
        MessageObject messageObject;
        TLRPC$TL_inputReplyToMessage tLRPC$TL_inputReplyToMessage = new TLRPC$TL_inputReplyToMessage();
        tLRPC$TL_inputReplyToMessage.reply_to_msg_id = i;
        if (i2 != 0) {
            tLRPC$TL_inputReplyToMessage.flags |= 1;
            tLRPC$TL_inputReplyToMessage.top_msg_id = i2;
        }
        if (replyQuote != null) {
            String text = replyQuote.getText();
            tLRPC$TL_inputReplyToMessage.quote_text = text;
            if (!TextUtils.isEmpty(text)) {
                tLRPC$TL_inputReplyToMessage.flags |= 4;
                ArrayList<TLRPC$MessageEntity> entities = replyQuote.getEntities();
                tLRPC$TL_inputReplyToMessage.quote_entities = entities;
                if (entities != null && !entities.isEmpty()) {
                    tLRPC$TL_inputReplyToMessage.quote_entities = new ArrayList<>(tLRPC$TL_inputReplyToMessage.quote_entities);
                    tLRPC$TL_inputReplyToMessage.flags |= 8;
                }
                tLRPC$TL_inputReplyToMessage.flags |= 16;
                tLRPC$TL_inputReplyToMessage.quote_offset = replyQuote.start;
            }
        }
        if (replyQuote != null && (messageObject = replyQuote.message) != null) {
            TLRPC$InputPeer inputPeer = getMessagesController().getInputPeer(messageObject.getDialogId());
            if (inputPeer != null && !MessageObject.peersEqual(inputPeer, tLRPC$InputPeer)) {
                tLRPC$TL_inputReplyToMessage.flags |= 2;
                tLRPC$TL_inputReplyToMessage.reply_to_peer_id = inputPeer;
            }
        }
        return tLRPC$TL_inputReplyToMessage;
    }

    public TLRPC$InputReplyTo createReplyInput(TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader) {
        TLRPC$TL_inputReplyToMessage tLRPC$TL_inputReplyToMessage = new TLRPC$TL_inputReplyToMessage();
        tLRPC$TL_inputReplyToMessage.reply_to_msg_id = tLRPC$TL_messageReplyHeader.reply_to_msg_id;
        int i = tLRPC$TL_messageReplyHeader.flags;
        if ((i & 2) != 0) {
            tLRPC$TL_inputReplyToMessage.flags |= 1;
            tLRPC$TL_inputReplyToMessage.top_msg_id = tLRPC$TL_messageReplyHeader.reply_to_top_id;
        }
        if ((i & 1) != 0) {
            tLRPC$TL_inputReplyToMessage.flags |= 2;
            tLRPC$TL_inputReplyToMessage.reply_to_peer_id = MessagesController.getInstance(this.currentAccount).getInputPeer(tLRPC$TL_messageReplyHeader.reply_to_peer_id);
        }
        if (tLRPC$TL_messageReplyHeader.quote) {
            int i2 = tLRPC$TL_messageReplyHeader.flags;
            if ((i2 & 64) != 0) {
                tLRPC$TL_inputReplyToMessage.flags |= 4;
                tLRPC$TL_inputReplyToMessage.quote_text = tLRPC$TL_messageReplyHeader.quote_text;
            }
            if ((i2 & 128) != 0) {
                tLRPC$TL_inputReplyToMessage.flags |= 8;
                tLRPC$TL_inputReplyToMessage.quote_entities = tLRPC$TL_messageReplyHeader.quote_entities;
            }
            if ((i2 & 1024) != 0) {
                tLRPC$TL_inputReplyToMessage.flags |= 16;
                tLRPC$TL_inputReplyToMessage.quote_offset = tLRPC$TL_messageReplyHeader.quote_offset;
            }
        }
        return tLRPC$TL_inputReplyToMessage;
    }

    /* loaded from: classes3.dex */
    public class ImportingHistory {
        public long dialogId;
        public double estimatedUploadSpeed;
        public String historyPath;
        public long importId;
        private long lastUploadSize;
        private long lastUploadTime;
        public TLRPC$InputPeer peer;
        public long totalSize;
        public int uploadProgress;
        public long uploadedSize;
        public ArrayList<Uri> mediaPaths = new ArrayList<>();
        public HashSet<String> uploadSet = new HashSet<>();
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public ArrayList<String> uploadMedia = new ArrayList<>();
        public int timeUntilFinish = ConnectionsManager.DEFAULT_DATACENTER_ID;

        public ImportingHistory() {
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void initImport(TLRPC$InputFile tLRPC$InputFile) {
            TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport = new TLRPC$TL_messages_initHistoryImport();
            tLRPC$TL_messages_initHistoryImport.file = tLRPC$InputFile;
            tLRPC$TL_messages_initHistoryImport.media_count = this.mediaPaths.size();
            tLRPC$TL_messages_initHistoryImport.peer = this.peer;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_initHistoryImport, new 1(tLRPC$TL_messages_initHistoryImport), 2);
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 1 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_messages_initHistoryImport val$req;

            1(TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport) {
                this.val$req = tLRPC$TL_messages_initHistoryImport;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
                final TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport = this.val$req;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingHistory$1$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingHistory.1.this.lambda$run$0(tLObject, tLRPC$TL_messages_initHistoryImport, tLRPC$TL_error);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLObject tLObject, TLRPC$TL_messages_initHistoryImport tLRPC$TL_messages_initHistoryImport, TLRPC$TL_error tLRPC$TL_error) {
                if (!(tLObject instanceof TLRPC$TL_messages_historyImport)) {
                    SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), tLRPC$TL_messages_initHistoryImport, tLRPC$TL_error);
                    return;
                }
                ImportingHistory importingHistory = ImportingHistory.this;
                importingHistory.importId = ((TLRPC$TL_messages_historyImport) tLObject).id;
                importingHistory.uploadSet.remove(importingHistory.historyPath);
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                if (ImportingHistory.this.uploadSet.isEmpty()) {
                    ImportingHistory.this.startImport();
                }
                ImportingHistory.this.lastUploadTime = SystemClock.elapsedRealtime();
                int size = ImportingHistory.this.uploadMedia.size();
                for (int i = 0; i < size; i++) {
                    SendMessagesHelper.this.getFileLoader().uploadFile(ImportingHistory.this.uploadMedia.get(i), false, true, ConnectionsManager.FileTypeFile);
                }
            }
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onFileFailedToUpload(String str) {
            if (str.equals(this.historyPath)) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
                TLRPC$TL_error tLRPC$TL_error = new TLRPC$TL_error();
                tLRPC$TL_error.code = 400;
                tLRPC$TL_error.text = "IMPORT_UPLOAD_FAILED";
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId), new TLRPC$TL_messages_initHistoryImport(), tLRPC$TL_error);
                return;
            }
            this.uploadSet.remove(str);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void addUploadProgress(String str, long j, float f) {
            this.uploadProgresses.put(str, Float.valueOf(f));
            this.uploadSize.put(str, Long.valueOf(j));
            this.uploadedSize = 0L;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long elapsedRealtime = SystemClock.elapsedRealtime();
            if (!str.equals(this.historyPath)) {
                long j2 = this.uploadedSize;
                long j3 = this.lastUploadSize;
                if (j2 != j3) {
                    long j4 = this.lastUploadTime;
                    if (elapsedRealtime != j4) {
                        double d = elapsedRealtime - j4;
                        Double.isNaN(d);
                        double d2 = j2 - j3;
                        Double.isNaN(d2);
                        double d3 = d2 / (d / 1000.0d);
                        double d4 = this.estimatedUploadSpeed;
                        if (d4 == 0.0d) {
                            this.estimatedUploadSpeed = d3;
                        } else {
                            this.estimatedUploadSpeed = (d3 * 0.01d) + (0.99d * d4);
                        }
                        double d5 = (this.totalSize - j2) * 1000;
                        double d6 = this.estimatedUploadSpeed;
                        Double.isNaN(d5);
                        this.timeUntilFinish = (int) (d5 / d6);
                        this.lastUploadSize = j2;
                        this.lastUploadTime = elapsedRealtime;
                    }
                }
            }
            int uploadedCount = (int) ((((float) getUploadedCount()) / ((float) getTotalCount())) * 100.0f);
            if (this.uploadProgress != uploadedCount) {
                this.uploadProgress = uploadedCount;
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onMediaImport(String str, long j, TLRPC$InputFile tLRPC$InputFile) {
            addUploadProgress(str, j, 1.0f);
            TLRPC$TL_messages_uploadImportedMedia tLRPC$TL_messages_uploadImportedMedia = new TLRPC$TL_messages_uploadImportedMedia();
            tLRPC$TL_messages_uploadImportedMedia.peer = this.peer;
            tLRPC$TL_messages_uploadImportedMedia.import_id = this.importId;
            tLRPC$TL_messages_uploadImportedMedia.file_name = new File(str).getName();
            MimeTypeMap singleton = MimeTypeMap.getSingleton();
            int lastIndexOf = tLRPC$TL_messages_uploadImportedMedia.file_name.lastIndexOf(46);
            String lowerCase = lastIndexOf != -1 ? tLRPC$TL_messages_uploadImportedMedia.file_name.substring(lastIndexOf + 1).toLowerCase() : "txt";
            String mimeTypeFromExtension = singleton.getMimeTypeFromExtension(lowerCase);
            if (mimeTypeFromExtension == null) {
                if ("opus".equals(lowerCase)) {
                    mimeTypeFromExtension = "audio/opus";
                } else {
                    mimeTypeFromExtension = "webp".equals(lowerCase) ? "image/webp" : "text/plain";
                }
            }
            if (mimeTypeFromExtension.equals("image/jpg") || mimeTypeFromExtension.equals("image/jpeg")) {
                TLRPC$TL_inputMediaUploadedPhoto tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                tLRPC$TL_inputMediaUploadedPhoto.file = tLRPC$InputFile;
                tLRPC$TL_messages_uploadImportedMedia.media = tLRPC$TL_inputMediaUploadedPhoto;
            } else {
                TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                tLRPC$TL_inputMediaUploadedDocument.file = tLRPC$InputFile;
                tLRPC$TL_inputMediaUploadedDocument.mime_type = mimeTypeFromExtension;
                tLRPC$TL_messages_uploadImportedMedia.media = tLRPC$TL_inputMediaUploadedDocument;
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_uploadImportedMedia, new 2(str), 2);
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 2 implements RequestDelegate {
            final /* synthetic */ String val$path;

            2(String str) {
                this.val$path = str;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                final String str = this.val$path;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingHistory$2$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingHistory.2.this.lambda$run$0(str);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(String str) {
                ImportingHistory.this.uploadSet.remove(str);
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                if (ImportingHistory.this.uploadSet.isEmpty()) {
                    ImportingHistory.this.startImport();
                }
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void startImport() {
            TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport = new TLRPC$TL_messages_startHistoryImport();
            tLRPC$TL_messages_startHistoryImport.peer = this.peer;
            tLRPC$TL_messages_startHistoryImport.import_id = this.importId;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_messages_startHistoryImport, new 3(tLRPC$TL_messages_startHistoryImport));
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 3 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_messages_startHistoryImport val$req;

            3(TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport) {
                this.val$req = tLRPC$TL_messages_startHistoryImport;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
                final TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport = this.val$req;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingHistory$3$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingHistory.3.this.lambda$run$0(tLRPC$TL_error, tLRPC$TL_messages_startHistoryImport);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_messages_startHistoryImport tLRPC$TL_messages_startHistoryImport) {
                SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                if (tLRPC$TL_error == null) {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                } else {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), tLRPC$TL_messages_startHistoryImport, tLRPC$TL_error);
                }
            }
        }

        public void setImportProgress(int i) {
            if (i == 100) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
            }
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
        }
    }

    /* loaded from: classes3.dex */
    public static class ImportingSticker {
        public boolean animated;
        public String emoji;
        public TLRPC$TL_inputStickerSetItem item;
        public String mimeType;
        public String path;
        public boolean validated;
        public VideoEditedInfo videoEditedInfo;

        public void uploadMedia(int i, TLRPC$InputFile tLRPC$InputFile, Runnable runnable) {
            TLRPC$TL_messages_uploadMedia tLRPC$TL_messages_uploadMedia = new TLRPC$TL_messages_uploadMedia();
            tLRPC$TL_messages_uploadMedia.peer = new TLRPC$TL_inputPeerSelf();
            TLRPC$TL_inputMediaUploadedDocument tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
            tLRPC$TL_messages_uploadMedia.media = tLRPC$TL_inputMediaUploadedDocument;
            tLRPC$TL_inputMediaUploadedDocument.file = tLRPC$InputFile;
            tLRPC$TL_inputMediaUploadedDocument.mime_type = this.mimeType;
            ConnectionsManager.getInstance(i).sendRequest(tLRPC$TL_messages_uploadMedia, new 1(runnable), 2);
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 1 implements RequestDelegate {
            final /* synthetic */ Runnable val$onFinish;

            1(Runnable runnable) {
                this.val$onFinish = runnable;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(final TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                final Runnable runnable = this.val$onFinish;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingSticker$1$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingSticker.1.this.lambda$run$0(tLObject, runnable);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLObject tLObject, Runnable runnable) {
                if (tLObject instanceof TLRPC$TL_messageMediaDocument) {
                    ImportingSticker.this.item = new TLRPC$TL_inputStickerSetItem();
                    ImportingSticker.this.item.document = new TLRPC$TL_inputDocument();
                    ImportingSticker importingSticker = ImportingSticker.this;
                    TLRPC$TL_inputStickerSetItem tLRPC$TL_inputStickerSetItem = importingSticker.item;
                    TLRPC$InputDocument tLRPC$InputDocument = tLRPC$TL_inputStickerSetItem.document;
                    TLRPC$Document tLRPC$Document = ((TLRPC$TL_messageMediaDocument) tLObject).document;
                    tLRPC$InputDocument.id = tLRPC$Document.id;
                    tLRPC$InputDocument.access_hash = tLRPC$Document.access_hash;
                    tLRPC$InputDocument.file_reference = tLRPC$Document.file_reference;
                    String str = importingSticker.emoji;
                    if (str == null) {
                        str = "";
                    }
                    tLRPC$TL_inputStickerSetItem.emoji = str;
                    importingSticker.mimeType = tLRPC$Document.mime_type;
                } else {
                    ImportingSticker importingSticker2 = ImportingSticker.this;
                    if (importingSticker2.animated) {
                        importingSticker2.mimeType = "application/x-bad-tgsticker";
                    }
                }
                runnable.run();
            }
        }
    }

    /* loaded from: classes3.dex */
    public class ImportingStickers {
        public double estimatedUploadSpeed;
        private long lastUploadSize;
        private long lastUploadTime;
        public String shortName;
        public String software;
        public String title;
        public long totalSize;
        public int uploadProgress;
        public long uploadedSize;
        public HashMap<String, ImportingSticker> uploadSet = new HashMap<>();
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public ArrayList<ImportingSticker> uploadMedia = new ArrayList<>();
        public int timeUntilFinish = ConnectionsManager.DEFAULT_DATACENTER_ID;

        public ImportingStickers() {
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void initImport() {
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
            this.lastUploadTime = SystemClock.elapsedRealtime();
            int size = this.uploadMedia.size();
            for (int i = 0; i < size; i++) {
                SendMessagesHelper.this.getFileLoader().uploadFile(this.uploadMedia.get(i).path, false, true, ConnectionsManager.FileTypeFile);
            }
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onFileFailedToUpload(String str) {
            ImportingSticker remove = this.uploadSet.remove(str);
            if (remove != null) {
                this.uploadMedia.remove(remove);
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void addUploadProgress(String str, long j, float f) {
            this.uploadProgresses.put(str, Float.valueOf(f));
            this.uploadSize.put(str, Long.valueOf(j));
            this.uploadedSize = 0L;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long elapsedRealtime = SystemClock.elapsedRealtime();
            long j2 = this.uploadedSize;
            long j3 = this.lastUploadSize;
            if (j2 != j3) {
                long j4 = this.lastUploadTime;
                if (elapsedRealtime != j4) {
                    double d = elapsedRealtime - j4;
                    Double.isNaN(d);
                    double d2 = j2 - j3;
                    Double.isNaN(d2);
                    double d3 = d2 / (d / 1000.0d);
                    double d4 = this.estimatedUploadSpeed;
                    if (d4 == 0.0d) {
                        this.estimatedUploadSpeed = d3;
                    } else {
                        this.estimatedUploadSpeed = (d3 * 0.01d) + (0.99d * d4);
                    }
                    double d5 = (this.totalSize - j2) * 1000;
                    double d6 = this.estimatedUploadSpeed;
                    Double.isNaN(d5);
                    this.timeUntilFinish = (int) (d5 / d6);
                    this.lastUploadSize = j2;
                    this.lastUploadTime = elapsedRealtime;
                }
            }
            int uploadedCount = (int) ((((float) getUploadedCount()) / ((float) getTotalCount())) * 100.0f);
            if (this.uploadProgress != uploadedCount) {
                this.uploadProgress = uploadedCount;
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void onMediaImport(final String str, long j, TLRPC$InputFile tLRPC$InputFile) {
            addUploadProgress(str, j, 1.0f);
            ImportingSticker importingSticker = this.uploadSet.get(str);
            if (importingSticker == null) {
                return;
            }
            importingSticker.uploadMedia(SendMessagesHelper.this.currentAccount, tLRPC$InputFile, new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingStickers$$ExternalSyntheticLambda0
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.ImportingStickers.this.lambda$onMediaImport$0(str);
                }
            });
        }

        /* JADX INFO: Access modifiers changed from: private */
        public /* synthetic */ void lambda$onMediaImport$0(String str) {
            this.uploadSet.remove(str);
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
            if (this.uploadSet.isEmpty()) {
                startImport();
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void startImport() {
            TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet = new TLRPC$TL_stickers_createStickerSet();
            tLRPC$TL_stickers_createStickerSet.user_id = new TLRPC$TL_inputUserSelf();
            tLRPC$TL_stickers_createStickerSet.title = this.title;
            tLRPC$TL_stickers_createStickerSet.short_name = this.shortName;
            String str = this.software;
            if (str != null) {
                tLRPC$TL_stickers_createStickerSet.software = str;
                tLRPC$TL_stickers_createStickerSet.flags |= 8;
            }
            int size = this.uploadMedia.size();
            for (int i = 0; i < size; i++) {
                TLRPC$TL_inputStickerSetItem tLRPC$TL_inputStickerSetItem = this.uploadMedia.get(i).item;
                if (tLRPC$TL_inputStickerSetItem != null) {
                    tLRPC$TL_stickers_createStickerSet.stickers.add(tLRPC$TL_inputStickerSetItem);
                }
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(tLRPC$TL_stickers_createStickerSet, new 1(tLRPC$TL_stickers_createStickerSet));
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        /* loaded from: classes3.dex */
        public class 1 implements RequestDelegate {
            final /* synthetic */ TLRPC$TL_stickers_createStickerSet val$req;

            1(TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet) {
                this.val$req = tLRPC$TL_stickers_createStickerSet;
            }

            @Override // org.telegram.tgnet.RequestDelegate
            public void run(final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
                final TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet = this.val$req;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$ImportingStickers$1$$ExternalSyntheticLambda0
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.ImportingStickers.1.this.lambda$run$0(tLRPC$TL_error, tLRPC$TL_stickers_createStickerSet, tLObject);
                    }
                });
            }

            /* JADX INFO: Access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_stickers_createStickerSet tLRPC$TL_stickers_createStickerSet, TLObject tLObject) {
                SendMessagesHelper.this.importingStickersMap.remove(ImportingStickers.this.shortName);
                if (tLRPC$TL_error == null) {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName);
                } else {
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName, tLRPC$TL_stickers_createStickerSet, tLRPC$TL_error);
                }
                if (tLObject instanceof TLRPC$TL_messages_stickerSet) {
                    NotificationCenter notificationCenter = SendMessagesHelper.this.getNotificationCenter();
                    int i = NotificationCenter.stickersImportComplete;
                    if (notificationCenter.hasObservers(i)) {
                        SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(i, tLObject);
                    } else {
                        SendMessagesHelper.this.getMediaDataController().toggleStickerSet(null, tLObject, 2, null, false, false);
                    }
                }
            }
        }

        public void setImportProgress(int i) {
            if (i == 100) {
                SendMessagesHelper.this.importingStickersMap.remove(this.shortName);
            }
            SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.stickersImportProgressChanged, this.shortName);
        }
    }

    static {
        int availableProcessors = Build.VERSION.SDK_INT >= 17 ? Runtime.getRuntime().availableProcessors() : 2;
        mediaSendThreadPool = new ThreadPoolExecutor(availableProcessors, availableProcessors, 60L, TimeUnit.SECONDS, new LinkedBlockingQueue());
        Instance = new SendMessagesHelper[4];
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* loaded from: classes3.dex */
    public static class MediaSendPrepareWorker {
        public volatile String parentObject;
        public volatile TLRPC$TL_photo photo;
        public CountDownLatch sync;

        private MediaSendPrepareWorker() {
        }
    }

    @SuppressLint({"MissingPermission"})
    /* loaded from: classes3.dex */
    public static class LocationProvider {
        private LocationProviderDelegate delegate;
        private Location lastKnownLocation;
        private LocationManager locationManager;
        private Runnable locationQueryCancelRunnable;
        private GpsLocationListener gpsLocationListener = new GpsLocationListener();
        private GpsLocationListener networkLocationListener = new GpsLocationListener();

        /* loaded from: classes3.dex */
        public interface LocationProviderDelegate {
            void onLocationAcquired(Location location);

            void onUnableLocationAcquire();
        }

        /* JADX INFO: Access modifiers changed from: private */
        /* loaded from: classes3.dex */
        public class GpsLocationListener implements LocationListener {
            @Override // android.location.LocationListener
            public void onProviderDisabled(String str) {
            }

            @Override // android.location.LocationListener
            public void onProviderEnabled(String str) {
            }

            @Override // android.location.LocationListener
            public void onStatusChanged(String str, int i, Bundle bundle) {
            }

            private GpsLocationListener() {
            }

            @Override // android.location.LocationListener
            public void onLocationChanged(Location location) {
                if (location == null || LocationProvider.this.locationQueryCancelRunnable == null) {
                    return;
                }
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("found location " + location);
                }
                LocationProvider.this.lastKnownLocation = location;
                if (location.getAccuracy() < 100.0f) {
                    if (LocationProvider.this.delegate != null) {
                        LocationProvider.this.delegate.onLocationAcquired(location);
                    }
                    if (LocationProvider.this.locationQueryCancelRunnable != null) {
                        AndroidUtilities.cancelRunOnUIThread(LocationProvider.this.locationQueryCancelRunnable);
                    }
                    LocationProvider.this.cleanup();
                }
            }
        }

        public LocationProvider() {
        }

        public LocationProvider(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        public void setDelegate(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        /* JADX INFO: Access modifiers changed from: private */
        public void cleanup() {
            this.locationManager.removeUpdates(this.gpsLocationListener);
            this.locationManager.removeUpdates(this.networkLocationListener);
            this.lastKnownLocation = null;
            this.locationQueryCancelRunnable = null;
        }

        public void start() {
            if (this.locationManager == null) {
                this.locationManager = (LocationManager) ApplicationLoader.applicationContext.getSystemService("location");
            }
            try {
                this.locationManager.requestLocationUpdates("gps", 1L, 0.0f, this.gpsLocationListener);
            } catch (Exception e) {
                FileLog.e(e);
            }
            try {
                this.locationManager.requestLocationUpdates("network", 1L, 0.0f, this.networkLocationListener);
            } catch (Exception e2) {
                FileLog.e(e2);
            }
            try {
                Location lastKnownLocation = this.locationManager.getLastKnownLocation("gps");
                this.lastKnownLocation = lastKnownLocation;
                if (lastKnownLocation == null) {
                    this.lastKnownLocation = this.locationManager.getLastKnownLocation("network");
                }
            } catch (Exception e3) {
                FileLog.e(e3);
            }
            Runnable runnable = this.locationQueryCancelRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            Runnable runnable2 = new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.LocationProvider.this.lambda$start$0();
                }
            };
            this.locationQueryCancelRunnable = runnable2;
            AndroidUtilities.runOnUIThread(runnable2, 5000L);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public /* synthetic */ void lambda$start$0() {
            LocationProviderDelegate locationProviderDelegate = this.delegate;
            if (locationProviderDelegate != null) {
                Location location = this.lastKnownLocation;
                if (location != null) {
                    locationProviderDelegate.onLocationAcquired(location);
                } else {
                    locationProviderDelegate.onUnableLocationAcquire();
                }
            }
            cleanup();
        }

        public void stop() {
            if (this.locationManager == null) {
                return;
            }
            Runnable runnable = this.locationQueryCancelRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            cleanup();
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    /* loaded from: classes3.dex */
    public class DelayedMessageSendAfterRequest {
        public DelayedMessage delayedMessage;
        public MessageObject msgObj;
        public ArrayList<MessageObject> msgObjs;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public TLObject request;
        public boolean scheduled;

        protected DelayedMessageSendAfterRequest() {
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    /* loaded from: classes3.dex */
    public class DelayedMessage {
        public TLRPC$EncryptedChat encryptedChat;
        public HashMap<Object, Object> extraHashMap;
        public int finalGroupMessage;
        public long groupId;
        public String httpLocation;
        public ArrayList<String> httpLocations;
        public ArrayList<TLRPC$InputMedia> inputMedias;
        public TLRPC$InputMedia inputUploadMedia;
        public TLObject locationParent;
        public ArrayList<TLRPC$PhotoSize> locations;
        public ArrayList<MessageObject> messageObjects;
        public ArrayList<TLRPC$Message> messages;
        public MessageObject obj;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public long peer;
        public boolean performMediaUpload;
        public TLRPC$PhotoSize photoSize;
        ArrayList<DelayedMessageSendAfterRequest> requests;
        public boolean retriedToSend;
        public boolean scheduled;
        public TLObject sendEncryptedRequest;
        public TLObject sendRequest;
        public int topMessageId;
        public int type;
        public VideoEditedInfo videoEditedInfo;
        public ArrayList<VideoEditedInfo> videoEditedInfos;

        public DelayedMessage(long j) {
            this.peer = j;
        }

        public void initForGroup(long j) {
            this.type = 4;
            this.groupId = j;
            this.messageObjects = new ArrayList<>();
            this.messages = new ArrayList<>();
            this.inputMedias = new ArrayList<>();
            this.originalPaths = new ArrayList<>();
            this.parentObjects = new ArrayList<>();
            this.extraHashMap = new HashMap<>();
            this.locations = new ArrayList<>();
            this.httpLocations = new ArrayList<>();
            this.videoEditedInfos = new ArrayList<>();
        }

        public void addDelayedRequest(TLObject tLObject, MessageObject messageObject, String str, Object obj, DelayedMessage delayedMessage, boolean z) {
            DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = new DelayedMessageSendAfterRequest();
            delayedMessageSendAfterRequest.request = tLObject;
            delayedMessageSendAfterRequest.msgObj = messageObject;
            delayedMessageSendAfterRequest.originalPath = str;
            delayedMessageSendAfterRequest.delayedMessage = delayedMessage;
            delayedMessageSendAfterRequest.parentObject = obj;
            delayedMessageSendAfterRequest.scheduled = z;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(delayedMessageSendAfterRequest);
        }

        public void addDelayedRequest(TLObject tLObject, ArrayList<MessageObject> arrayList, ArrayList<String> arrayList2, ArrayList<Object> arrayList3, DelayedMessage delayedMessage, boolean z) {
            DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = new DelayedMessageSendAfterRequest();
            delayedMessageSendAfterRequest.request = tLObject;
            delayedMessageSendAfterRequest.msgObjs = arrayList;
            delayedMessageSendAfterRequest.originalPaths = arrayList2;
            delayedMessageSendAfterRequest.delayedMessage = delayedMessage;
            delayedMessageSendAfterRequest.parentObjects = arrayList3;
            delayedMessageSendAfterRequest.scheduled = z;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(delayedMessageSendAfterRequest);
        }

        public void sendDelayedRequests() {
            ArrayList<DelayedMessageSendAfterRequest> arrayList = this.requests;
            if (arrayList != null) {
                int i = this.type;
                if (i == 4 || i == 0) {
                    int size = arrayList.size();
                    for (int i2 = 0; i2 < size; i2++) {
                        DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = this.requests.get(i2);
                        TLObject tLObject = delayedMessageSendAfterRequest.request;
                        if (tLObject instanceof TLRPC$TL_messages_sendEncryptedMultiMedia) {
                            SendMessagesHelper.this.getSecretChatHelper().performSendEncryptedRequest((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessageSendAfterRequest.request, this);
                        } else if (!(tLObject instanceof TLRPC$TL_messages_sendMultiMedia)) {
                            SendMessagesHelper.this.performSendMessageRequest(tLObject, delayedMessageSendAfterRequest.msgObj, delayedMessageSendAfterRequest.originalPath, delayedMessageSendAfterRequest.delayedMessage, delayedMessageSendAfterRequest.parentObject, null, delayedMessageSendAfterRequest.scheduled);
                        } else {
                            SendMessagesHelper.this.performSendMessageRequestMulti((TLRPC$TL_messages_sendMultiMedia) tLObject, delayedMessageSendAfterRequest.msgObjs, delayedMessageSendAfterRequest.originalPaths, delayedMessageSendAfterRequest.parentObjects, delayedMessageSendAfterRequest.delayedMessage, delayedMessageSendAfterRequest.scheduled);
                        }
                    }
                    this.requests = null;
                }
            }
        }

        public void markAsError() {
            if (this.type == 4) {
                for (int i = 0; i < this.messageObjects.size(); i++) {
                    MessageObject messageObject = this.messageObjects.get(i);
                    SendMessagesHelper.this.getMessagesStorage().markMessageAsSendError(messageObject.messageOwner, messageObject.scheduled ? 1 : 0);
                    messageObject.messageOwner.send_state = 2;
                    SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                    SendMessagesHelper.this.processSentMessage(messageObject.getId());
                    SendMessagesHelper.this.removeFromUploadingMessages(messageObject.getId(), this.scheduled);
                }
                HashMap hashMap = SendMessagesHelper.this.delayedMessages;
                hashMap.remove("group_" + this.groupId);
            } else {
                MessagesStorage messagesStorage = SendMessagesHelper.this.getMessagesStorage();
                MessageObject messageObject2 = this.obj;
                messagesStorage.markMessageAsSendError(messageObject2.messageOwner, messageObject2.scheduled ? 1 : 0);
                this.obj.messageOwner.send_state = 2;
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(this.obj.getId()));
                SendMessagesHelper.this.processSentMessage(this.obj.getId());
                SendMessagesHelper.this.removeFromUploadingMessages(this.obj.getId(), this.scheduled);
            }
            sendDelayedRequests();
        }
    }

    public static SendMessagesHelper getInstance(int i) {
        SendMessagesHelper sendMessagesHelper = Instance[i];
        if (sendMessagesHelper == null) {
            synchronized (SendMessagesHelper.class) {
                sendMessagesHelper = Instance[i];
                if (sendMessagesHelper == null) {
                    SendMessagesHelper[] sendMessagesHelperArr = Instance;
                    SendMessagesHelper sendMessagesHelper2 = new SendMessagesHelper(i);
                    sendMessagesHelperArr[i] = sendMessagesHelper2;
                    sendMessagesHelper = sendMessagesHelper2;
                }
            }
        }
        return sendMessagesHelper;
    }

    public SendMessagesHelper(int i) {
        super(i);
        this.delayedMessages = new HashMap<>();
        this.unsentMessages = new SparseArray<>();
        this.sendingMessages = new SparseArray<>();
        this.editingMessages = new SparseArray<>();
        this.uploadMessages = new SparseArray<>();
        this.sendingMessagesIdDialogs = new LongSparseArray<>();
        this.uploadingMessagesIdDialogs = new LongSparseArray<>();
        this.waitingForLocation = new HashMap<>();
        this.waitingForCallback = new HashMap<>();
        this.waitingForCallbackMap = new HashMap<>();
        this.waitingForVote = new HashMap<>();
        this.voteSendTime = new LongSparseArray<>();
        this.importingHistoryFiles = new HashMap<>();
        this.importingHistoryMap = new LongSparseArray<>();
        this.importingStickersFiles = new HashMap<>();
        this.importingStickersMap = new HashMap<>();
        this.locationProvider = new LocationProvider(new LocationProvider.LocationProviderDelegate() { // from class: org.telegram.messenger.SendMessagesHelper.1
            @Override // org.telegram.messenger.SendMessagesHelper.LocationProvider.LocationProviderDelegate
            public void onLocationAcquired(Location location) {
                SendMessagesHelper.this.sendLocation(location);
                SendMessagesHelper.this.waitingForLocation.clear();
            }

            @Override // org.telegram.messenger.SendMessagesHelper.LocationProvider.LocationProviderDelegate
            public void onUnableLocationAcquire() {
                SendMessagesHelper.this.getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.wasUnableToFindCurrentLocation, new HashMap(SendMessagesHelper.this.waitingForLocation));
                SendMessagesHelper.this.waitingForLocation.clear();
            }
        });
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda22
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$new$0();
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$new$0() {
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadProgressChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingStarted);
        getNotificationCenter().addObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidFailedLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoadFailed);
    }

    public void cleanup() {
        this.delayedMessages.clear();
        this.unsentMessages.clear();
        this.sendingMessages.clear();
        this.editingMessages.clear();
        this.sendingMessagesIdDialogs.clear();
        this.uploadMessages.clear();
        this.uploadingMessagesIdDialogs.clear();
        this.waitingForLocation.clear();
        this.waitingForCallback.clear();
        this.waitingForVote.clear();
        this.importingHistoryFiles.clear();
        this.importingHistoryMap.clear();
        this.importingStickersFiles.clear();
        this.importingStickersMap.clear();
        this.locationProvider.stop();
    }

    @Override // org.telegram.messenger.NotificationCenter.NotificationCenterDelegate
    public void didReceivedNotification(int i, int i2, Object... objArr) {
        String str;
        ArrayList<DelayedMessage> arrayList;
        char c;
        final MessageObject messageObject;
        MessageObject messageObject2;
        String str2;
        ArrayList<DelayedMessage> arrayList2;
        ArrayList<DelayedMessage> arrayList3;
        int i3;
        int i4;
        int i5;
        TLRPC$InputMedia tLRPC$InputMedia;
        ArrayList<DelayedMessage> arrayList4;
        TLRPC$InputFile tLRPC$InputFile;
        String str3;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile;
        int i6;
        TLObject tLObject;
        TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage;
        ArrayList<DelayedMessage> arrayList5;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile2;
        int i7;
        String str4;
        int i8;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$PhotoSize tLRPC$PhotoSize2;
        MessageObject messageObject3;
        VideoEditedInfo videoEditedInfo;
        int i9 = 0;
        boolean z = true;
        if (i == NotificationCenter.fileUploadProgressChanged) {
            String str5 = (String) objArr[0];
            ImportingHistory importingHistory = this.importingHistoryFiles.get(str5);
            if (importingHistory != null) {
                Long l = (Long) objArr[1];
                importingHistory.addUploadProgress(str5, l.longValue(), ((float) l.longValue()) / ((float) ((Long) objArr[2]).longValue()));
            }
            ImportingStickers importingStickers = this.importingStickersFiles.get(str5);
            if (importingStickers != null) {
                Long l2 = (Long) objArr[1];
                importingStickers.addUploadProgress(str5, l2.longValue(), ((float) l2.longValue()) / ((float) ((Long) objArr[2]).longValue()));
            }
        } else if (i == NotificationCenter.fileUploaded) {
            String str6 = (String) objArr[0];
            TLRPC$InputFile tLRPC$InputFile2 = (TLRPC$InputFile) objArr[1];
            TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile3 = (TLRPC$InputEncryptedFile) objArr[2];
            ImportingHistory importingHistory2 = this.importingHistoryFiles.get(str6);
            if (importingHistory2 != null) {
                if (str6.equals(importingHistory2.historyPath)) {
                    importingHistory2.initImport(tLRPC$InputFile2);
                } else {
                    importingHistory2.onMediaImport(str6, ((Long) objArr[5]).longValue(), tLRPC$InputFile2);
                }
            }
            ImportingStickers importingStickers2 = this.importingStickersFiles.get(str6);
            if (importingStickers2 != null) {
                importingStickers2.onMediaImport(str6, ((Long) objArr[5]).longValue(), tLRPC$InputFile2);
            }
            ArrayList<DelayedMessage> arrayList6 = this.delayedMessages.get(str6);
            if (arrayList6 != null) {
                while (i9 < arrayList6.size()) {
                    DelayedMessage delayedMessage = arrayList6.get(i9);
                    TLObject tLObject2 = delayedMessage.sendRequest;
                    if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
                        tLRPC$InputMedia = ((TLRPC$TL_messages_sendMedia) tLObject2).media;
                    } else if (tLObject2 instanceof TLRPC$TL_messages_editMessage) {
                        tLRPC$InputMedia = ((TLRPC$TL_messages_editMessage) tLObject2).media;
                    } else {
                        tLRPC$InputMedia = tLObject2 instanceof TLRPC$TL_messages_sendMultiMedia ? (TLRPC$InputMedia) delayedMessage.extraHashMap.get(str6) : null;
                    }
                    if (tLRPC$InputFile2 == null || tLRPC$InputMedia == null) {
                        arrayList4 = arrayList6;
                        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile4 = tLRPC$InputEncryptedFile3;
                        tLRPC$InputFile = tLRPC$InputFile2;
                        str3 = str6;
                        tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile4;
                        if (tLRPC$InputEncryptedFile != null && (tLObject = delayedMessage.sendEncryptedRequest) != null) {
                            if (delayedMessage.type == 4) {
                                TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) tLObject;
                                TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile5 = (TLRPC$InputEncryptedFile) delayedMessage.extraHashMap.get(str3);
                                int indexOf = tLRPC$TL_messages_sendEncryptedMultiMedia.files.indexOf(tLRPC$InputEncryptedFile5);
                                if (indexOf >= 0) {
                                    tLRPC$TL_messages_sendEncryptedMultiMedia.files.set(indexOf, tLRPC$InputEncryptedFile);
                                    if (tLRPC$InputEncryptedFile5.id == 1) {
                                        delayedMessage.photoSize = (TLRPC$PhotoSize) delayedMessage.extraHashMap.get(str3 + "_t");
                                    }
                                    tLRPC$TL_decryptedMessage = tLRPC$TL_messages_sendEncryptedMultiMedia.messages.get(indexOf);
                                } else {
                                    tLRPC$TL_decryptedMessage = null;
                                }
                            } else {
                                tLRPC$TL_decryptedMessage = (TLRPC$TL_decryptedMessage) tLObject;
                            }
                            if (tLRPC$TL_decryptedMessage != null) {
                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                                if ((tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaVideo) || (tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaPhoto) || (tLRPC$DecryptedMessageMedia instanceof TLRPC$TL_decryptedMessageMediaDocument)) {
                                    tLRPC$TL_decryptedMessage.media.size = ((Long) objArr[5]).longValue();
                                }
                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia2 = tLRPC$TL_decryptedMessage.media;
                                tLRPC$DecryptedMessageMedia2.key = (byte[]) objArr[3];
                                tLRPC$DecryptedMessageMedia2.iv = (byte[]) objArr[4];
                                if (delayedMessage.type == 4) {
                                    uploadMultiMedia(delayedMessage, null, tLRPC$InputEncryptedFile, str3);
                                } else {
                                    SecretChatHelper secretChatHelper = getSecretChatHelper();
                                    MessageObject messageObject4 = delayedMessage.obj;
                                    secretChatHelper.performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject4.messageOwner, delayedMessage.encryptedChat, tLRPC$InputEncryptedFile, delayedMessage.originalPath, messageObject4);
                                }
                            }
                            arrayList4.remove(i9);
                            i9--;
                        }
                        i6 = 1;
                    } else {
                        int i10 = delayedMessage.type;
                        if (i10 == 0) {
                            tLRPC$InputMedia.file = tLRPC$InputFile2;
                            arrayList5 = arrayList6;
                            tLRPC$InputFile = tLRPC$InputFile2;
                            i7 = i9;
                            str4 = str6;
                            tLRPC$InputEncryptedFile2 = tLRPC$InputEncryptedFile3;
                            performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, delayedMessage, true, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                        } else {
                            arrayList5 = arrayList6;
                            tLRPC$InputEncryptedFile2 = tLRPC$InputEncryptedFile3;
                            tLRPC$InputFile = tLRPC$InputFile2;
                            i7 = i9;
                            str4 = str6;
                            if (i10 == z) {
                                if (tLRPC$InputMedia.file == null) {
                                    tLRPC$InputMedia.file = tLRPC$InputFile;
                                    if (tLRPC$InputMedia.thumb == null && (tLRPC$PhotoSize2 = delayedMessage.photoSize) != null && tLRPC$PhotoSize2.location != null && ((messageObject3 = delayedMessage.obj) == null || (videoEditedInfo = messageObject3.videoEditedInfo) == null || !videoEditedInfo.isSticker)) {
                                        performSendDelayedMessage(delayedMessage);
                                    } else {
                                        performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                    }
                                } else {
                                    tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                    tLRPC$InputMedia.flags |= 4;
                                    performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                }
                            } else if (i10 == 2) {
                                if (tLRPC$InputMedia.file == null) {
                                    tLRPC$InputMedia.file = tLRPC$InputFile;
                                    if (tLRPC$InputMedia.thumb == null && (tLRPC$PhotoSize = delayedMessage.photoSize) != null && tLRPC$PhotoSize.location != null) {
                                        performSendDelayedMessage(delayedMessage);
                                    } else {
                                        performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                    }
                                } else {
                                    tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                    tLRPC$InputMedia.flags |= 4;
                                    performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                                }
                            } else if (i10 == 3) {
                                tLRPC$InputMedia.file = tLRPC$InputFile;
                                performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, null, delayedMessage.parentObject, null, delayedMessage.scheduled);
                            } else {
                                if (i10 == 4) {
                                    if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument) {
                                        if (tLRPC$InputMedia.file == null) {
                                            tLRPC$InputMedia.file = tLRPC$InputFile;
                                            HashMap<Object, Object> hashMap = delayedMessage.extraHashMap;
                                            StringBuilder sb = new StringBuilder();
                                            str3 = str4;
                                            sb.append(str3);
                                            sb.append("_i");
                                            int indexOf2 = delayedMessage.messageObjects.indexOf((MessageObject) hashMap.get(sb.toString()));
                                            TLRPC$PhotoSize tLRPC$PhotoSize3 = (TLRPC$PhotoSize) delayedMessage.extraHashMap.get(str3 + "_t");
                                            delayedMessage.photoSize = tLRPC$PhotoSize3;
                                            if (tLRPC$InputMedia.thumb == null && tLRPC$PhotoSize3 != null && tLRPC$PhotoSize3.location != null) {
                                                delayedMessage.performMediaUpload = z;
                                                performSendDelayedMessage(delayedMessage, indexOf2);
                                            } else {
                                                uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, str3);
                                            }
                                        } else {
                                            str3 = str4;
                                            tLRPC$InputMedia.thumb = tLRPC$InputFile;
                                            tLRPC$InputMedia.flags |= 4;
                                            uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, (String) delayedMessage.extraHashMap.get(str3 + "_o"));
                                        }
                                    } else {
                                        str3 = str4;
                                        tLRPC$InputMedia.file = tLRPC$InputFile;
                                        uploadMultiMedia(delayedMessage, tLRPC$InputMedia, null, str3);
                                    }
                                    arrayList4 = arrayList5;
                                    i8 = i7;
                                    arrayList4.remove(i8);
                                    i9 = i8 - 1;
                                    tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                                    i6 = 1;
                                } else {
                                    str3 = str4;
                                }
                                arrayList4 = arrayList5;
                                i8 = i7;
                                arrayList4.remove(i8);
                                i9 = i8 - 1;
                                tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                                i6 = 1;
                            }
                        }
                        arrayList4 = arrayList5;
                        i8 = i7;
                        str3 = str4;
                        arrayList4.remove(i8);
                        i9 = i8 - 1;
                        tLRPC$InputEncryptedFile = tLRPC$InputEncryptedFile2;
                        i6 = 1;
                    }
                    i9 += i6;
                    arrayList6 = arrayList4;
                    str6 = str3;
                    tLRPC$InputFile2 = tLRPC$InputFile;
                    z = true;
                    tLRPC$InputEncryptedFile3 = tLRPC$InputEncryptedFile;
                }
                String str7 = str6;
                if (arrayList6.isEmpty()) {
                    this.delayedMessages.remove(str7);
                }
            }
        } else {
            MessageObject messageObject5 = null;
            if (i == NotificationCenter.fileUploadFailed) {
                String str8 = (String) objArr[0];
                boolean booleanValue = ((Boolean) objArr[1]).booleanValue();
                ImportingHistory importingHistory3 = this.importingHistoryFiles.get(str8);
                if (importingHistory3 != null) {
                    importingHistory3.onFileFailedToUpload(str8);
                }
                ImportingStickers importingStickers3 = this.importingStickersFiles.get(str8);
                if (importingStickers3 != null) {
                    importingStickers3.onFileFailedToUpload(str8);
                }
                ArrayList<DelayedMessage> arrayList7 = this.delayedMessages.get(str8);
                if (arrayList7 != null) {
                    while (i9 < arrayList7.size()) {
                        DelayedMessage delayedMessage2 = arrayList7.get(i9);
                        if ((booleanValue && delayedMessage2.sendEncryptedRequest != null) || (!booleanValue && delayedMessage2.sendRequest != null)) {
                            delayedMessage2.markAsError();
                            arrayList7.remove(i9);
                            i9--;
                        }
                        i9++;
                    }
                    if (arrayList7.isEmpty()) {
                        this.delayedMessages.remove(str8);
                    }
                }
            } else if (i == NotificationCenter.filePreparingStarted) {
                MessageObject messageObject6 = (MessageObject) objArr[0];
                if (messageObject6.getId() == 0) {
                    return;
                }
                String str9 = (String) objArr[1];
                ArrayList<DelayedMessage> arrayList8 = this.delayedMessages.get(messageObject6.messageOwner.attachPath);
                if (arrayList8 != null) {
                    while (true) {
                        if (i9 >= arrayList8.size()) {
                            break;
                        }
                        DelayedMessage delayedMessage3 = arrayList8.get(i9);
                        if (delayedMessage3.type == 4) {
                            int indexOf3 = delayedMessage3.messageObjects.indexOf(messageObject6);
                            delayedMessage3.photoSize = (TLRPC$PhotoSize) delayedMessage3.extraHashMap.get(messageObject6.messageOwner.attachPath + "_t");
                            delayedMessage3.performMediaUpload = true;
                            performSendDelayedMessage(delayedMessage3, indexOf3);
                            arrayList8.remove(i9);
                            break;
                        } else if (delayedMessage3.obj == messageObject6) {
                            delayedMessage3.videoEditedInfo = null;
                            performSendDelayedMessage(delayedMessage3);
                            arrayList8.remove(i9);
                            break;
                        } else {
                            i9++;
                        }
                    }
                    if (arrayList8.isEmpty()) {
                        this.delayedMessages.remove(messageObject6.messageOwner.attachPath);
                    }
                }
            } else if (i == NotificationCenter.fileNewChunkAvailable) {
                MessageObject messageObject7 = (MessageObject) objArr[0];
                if (messageObject7.getId() == 0) {
                    return;
                }
                long longValue = ((Long) objArr[2]).longValue();
                long longValue2 = ((Long) objArr[3]).longValue();
                getFileLoader().checkUploadNewDataAvailable((String) objArr[1], DialogObject.isEncryptedDialog(messageObject7.getDialogId()), longValue, longValue2, (Float) objArr[4]);
                if (longValue2 == 0 || (arrayList3 = this.delayedMessages.get(messageObject7.messageOwner.attachPath)) == null) {
                    return;
                }
                for (int i11 = 0; i11 < arrayList3.size(); i11++) {
                    DelayedMessage delayedMessage4 = arrayList3.get(i11);
                    if (delayedMessage4.type == 4) {
                        int i12 = 0;
                        while (true) {
                            if (i12 >= delayedMessage4.messageObjects.size()) {
                                break;
                            }
                            MessageObject messageObject8 = delayedMessage4.messageObjects.get(i12);
                            if (messageObject8 == messageObject7) {
                                delayedMessage4.obj.shouldRemoveVideoEditedInfo = true;
                                messageObject8.messageOwner.params.remove("ve");
                                messageObject8.messageOwner.media.document.size = longValue2;
                                ArrayList<TLRPC$Message> arrayList9 = new ArrayList<>();
                                arrayList9.add(messageObject8.messageOwner);
                                if (messageObject8.isQuickReply()) {
                                    i4 = messageObject8.getQuickReplyId();
                                    i5 = 5;
                                } else if (messageObject8.scheduled) {
                                    i4 = 0;
                                    i5 = 1;
                                } else {
                                    i4 = 0;
                                    i5 = 0;
                                }
                                getMessagesStorage().putMessages(arrayList9, false, true, false, 0, i5, i4);
                            } else {
                                i12++;
                            }
                        }
                    } else {
                        MessageObject messageObject9 = delayedMessage4.obj;
                        if (messageObject9 == messageObject7) {
                            messageObject9.shouldRemoveVideoEditedInfo = true;
                            messageObject9.messageOwner.params.remove("ve");
                            delayedMessage4.obj.messageOwner.media.document.size = longValue2;
                            ArrayList<TLRPC$Message> arrayList10 = new ArrayList<>();
                            arrayList10.add(delayedMessage4.obj.messageOwner);
                            if (delayedMessage4.obj.isQuickReply()) {
                                i9 = delayedMessage4.obj.getQuickReplyId();
                                i3 = 5;
                            } else {
                                i3 = delayedMessage4.obj.scheduled ? 1 : 0;
                            }
                            getMessagesStorage().putMessages(arrayList10, false, true, false, 0, i3, i9);
                            return;
                        }
                    }
                }
            } else if (i == NotificationCenter.filePreparingFailed) {
                MessageObject messageObject10 = (MessageObject) objArr[0];
                if (messageObject10.getId() == 0 || (arrayList2 = this.delayedMessages.get((str2 = (String) objArr[1]))) == null) {
                    return;
                }
                int i13 = 0;
                while (i13 < arrayList2.size()) {
                    DelayedMessage delayedMessage5 = arrayList2.get(i13);
                    if (delayedMessage5.type == 4) {
                        for (int i14 = 0; i14 < delayedMessage5.messages.size(); i14++) {
                            if (delayedMessage5.messageObjects.get(i14) == messageObject10) {
                                delayedMessage5.markAsError();
                                arrayList2.remove(i13);
                                i13--;
                                break;
                            }
                        }
                        i13++;
                    } else if (delayedMessage5.obj == messageObject10) {
                        delayedMessage5.markAsError();
                        arrayList2.remove(i13);
                        i13--;
                        break;
                        i13++;
                    } else {
                        i13++;
                    }
                }
                if (arrayList2.isEmpty()) {
                    this.delayedMessages.remove(str2);
                }
            } else if (i == NotificationCenter.httpFileDidLoad) {
                final String str10 = (String) objArr[0];
                ArrayList<DelayedMessage> arrayList11 = this.delayedMessages.get(str10);
                if (arrayList11 != null) {
                    int i15 = 0;
                    while (i15 < arrayList11.size()) {
                        final DelayedMessage delayedMessage6 = arrayList11.get(i15);
                        int i16 = delayedMessage6.type;
                        if (i16 == 0) {
                            messageObject = delayedMessage6.obj;
                            c = 0;
                        } else {
                            if (i16 == 2) {
                                messageObject2 = delayedMessage6.obj;
                            } else if (i16 == 4) {
                                messageObject2 = (MessageObject) delayedMessage6.extraHashMap.get(str10);
                                if (messageObject2.getDocument() == null) {
                                    messageObject = messageObject2;
                                    c = 0;
                                }
                            } else {
                                c = 65535;
                                messageObject = messageObject5;
                            }
                            messageObject = messageObject2;
                            c = 1;
                        }
                        if (c == 0) {
                            final File file = new File(FileLoader.getDirectory(4), Utilities.MD5(str10) + "." + ImageLoader.getHttpUrlExtension(str10, "file"));
                            Utilities.globalQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda26
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$didReceivedNotification$2(file, messageObject, delayedMessage6, str10);
                                }
                            });
                        } else if (c == 1) {
                            final File file2 = new File(FileLoader.getDirectory(4), Utilities.MD5(str10) + ".gif");
                            Utilities.globalQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda39
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$didReceivedNotification$4(delayedMessage6, file2, messageObject);
                                }
                            });
                            i15++;
                            messageObject5 = null;
                        }
                        i15++;
                        messageObject5 = null;
                    }
                    this.delayedMessages.remove(str10);
                }
            } else if (i == NotificationCenter.fileLoaded) {
                String str11 = (String) objArr[0];
                ArrayList<DelayedMessage> arrayList12 = this.delayedMessages.get(str11);
                if (arrayList12 != null) {
                    while (i9 < arrayList12.size()) {
                        performSendDelayedMessage(arrayList12.get(i9));
                        i9++;
                    }
                    this.delayedMessages.remove(str11);
                }
            } else if ((i == NotificationCenter.httpFileDidFailedLoad || i == NotificationCenter.fileLoadFailed) && (arrayList = this.delayedMessages.get((str = (String) objArr[0]))) != null) {
                while (i9 < arrayList.size()) {
                    arrayList.get(i9).markAsError();
                    i9++;
                }
                this.delayedMessages.remove(str);
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$2(final File file, final MessageObject messageObject, final DelayedMessage delayedMessage, final String str) {
        final TLRPC$TL_photo generatePhotoSizes = generatePhotoSizes(file.toString(), null);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda59
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$didReceivedNotification$1(generatePhotoSizes, messageObject, file, delayedMessage, str);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$1(TLRPC$TL_photo tLRPC$TL_photo, MessageObject messageObject, File file, DelayedMessage delayedMessage, String str) {
        if (tLRPC$TL_photo != null) {
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            tLRPC$Message.media.photo = tLRPC$TL_photo;
            tLRPC$Message.attachPath = file.toString();
            ArrayList<TLRPC$Message> arrayList = new ArrayList<>();
            arrayList.add(messageObject.messageOwner);
            getMessagesStorage().putMessages(arrayList, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.updateMessageMedia, messageObject.messageOwner);
            ArrayList<TLRPC$PhotoSize> arrayList2 = tLRPC$TL_photo.sizes;
            delayedMessage.photoSize = arrayList2.get(arrayList2.size() - 1);
            delayedMessage.locationParent = tLRPC$TL_photo;
            delayedMessage.httpLocation = null;
            if (delayedMessage.type == 4) {
                delayedMessage.performMediaUpload = true;
                performSendDelayedMessage(delayedMessage, delayedMessage.messageObjects.indexOf(messageObject));
                return;
            }
            performSendDelayedMessage(delayedMessage);
            return;
        }
        if (BuildVars.LOGS_ENABLED) {
            FileLog.e("can't load image " + str + " to file " + file.toString());
        }
        delayedMessage.markAsError();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$4(final DelayedMessage delayedMessage, final File file, final MessageObject messageObject) {
        final TLRPC$Document document = delayedMessage.obj.getDocument();
        if (document.thumbs.isEmpty() || (document.thumbs.get(0).location instanceof TLRPC$TL_fileLocationUnavailable)) {
            try {
                Bitmap loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                if (loadBitmap != null) {
                    document.thumbs.clear();
                    document.thumbs.add(ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, delayedMessage.sendEncryptedRequest != null));
                    loadBitmap.recycle();
                }
            } catch (Exception e) {
                document.thumbs.clear();
                FileLog.e(e);
            }
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda40
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$didReceivedNotification$3(delayedMessage, file, document, messageObject);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$didReceivedNotification$3(DelayedMessage delayedMessage, File file, TLRPC$Document tLRPC$Document, MessageObject messageObject) {
        delayedMessage.httpLocation = null;
        delayedMessage.obj.messageOwner.attachPath = file.toString();
        if (!tLRPC$Document.thumbs.isEmpty()) {
            TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$Document.thumbs.get(0);
            if (!(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                delayedMessage.photoSize = tLRPC$PhotoSize;
                delayedMessage.locationParent = tLRPC$Document;
            }
        }
        ArrayList<TLRPC$Message> arrayList = new ArrayList<>();
        arrayList.add(messageObject.messageOwner);
        getMessagesStorage().putMessages(arrayList, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
        delayedMessage.performMediaUpload = true;
        performSendDelayedMessage(delayedMessage);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.updateMessageMedia, delayedMessage.obj.messageOwner);
    }

    private void revertEditingMessageObject(MessageObject messageObject) {
        messageObject.cancelEditing = true;
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        tLRPC$Message.media = messageObject.previousMedia;
        tLRPC$Message.message = messageObject.previousMessage;
        ArrayList<TLRPC$MessageEntity> arrayList = messageObject.previousMessageEntities;
        tLRPC$Message.entities = arrayList;
        tLRPC$Message.attachPath = messageObject.previousAttachPath;
        tLRPC$Message.send_state = 0;
        if (arrayList != null) {
            tLRPC$Message.flags |= 128;
        } else {
            tLRPC$Message.flags &= -129;
        }
        messageObject.previousMedia = null;
        messageObject.previousMessage = null;
        messageObject.previousMessageEntities = null;
        messageObject.previousAttachPath = null;
        messageObject.videoEditedInfo = null;
        messageObject.type = -1;
        messageObject.setType();
        messageObject.caption = null;
        if (messageObject.type != 0) {
            messageObject.generateCaption();
        } else {
            messageObject.resetLayout();
        }
        ArrayList<TLRPC$Message> arrayList2 = new ArrayList<>();
        arrayList2.add(messageObject.messageOwner);
        getMessagesStorage().putMessages(arrayList2, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(messageObject);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.replaceMessagesObjects, Long.valueOf(messageObject.getDialogId()), arrayList3);
    }

    public void cancelSendingMessage(MessageObject messageObject) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(messageObject);
        cancelSendingMessage(arrayList);
    }

    public void cancelSendingMessage(ArrayList<MessageObject> arrayList) {
        boolean z;
        ArrayList arrayList2 = new ArrayList();
        ArrayList arrayList3 = new ArrayList();
        ArrayList<Integer> arrayList4 = new ArrayList<>();
        long j = 0;
        int i = 0;
        boolean z2 = false;
        int i2 = 0;
        int i3 = 0;
        while (i < arrayList.size()) {
            MessageObject messageObject = arrayList.get(i);
            if (messageObject.scheduled) {
                i3 = 1;
            }
            long dialogId = messageObject.getDialogId();
            arrayList4.add(Integer.valueOf(messageObject.getId()));
            if (messageObject.isQuickReply()) {
                i2 = messageObject.getQuickReplyId();
            }
            TLRPC$Message removeFromSendingMessages = removeFromSendingMessages(messageObject.getId(), messageObject.scheduled);
            if (removeFromSendingMessages != null) {
                getConnectionsManager().cancelRequest(removeFromSendingMessages.reqId, true);
            }
            for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
                ArrayList<DelayedMessage> value = entry.getValue();
                int i4 = 0;
                while (true) {
                    if (i4 >= value.size()) {
                        z = z2;
                        break;
                    }
                    DelayedMessage delayedMessage = value.get(i4);
                    z = z2;
                    if (delayedMessage.type == 4) {
                        int i5 = -1;
                        MessageObject messageObject2 = null;
                        int i6 = 0;
                        while (true) {
                            if (i6 >= delayedMessage.messageObjects.size()) {
                                break;
                            }
                            messageObject2 = delayedMessage.messageObjects.get(i6);
                            if (messageObject2.getId() == messageObject.getId()) {
                                removeFromUploadingMessages(messageObject.getId(), messageObject.scheduled);
                                i5 = i6;
                                break;
                            }
                            i6++;
                        }
                        if (i5 >= 0) {
                            delayedMessage.messageObjects.remove(i5);
                            delayedMessage.messages.remove(i5);
                            delayedMessage.originalPaths.remove(i5);
                            if (!delayedMessage.parentObjects.isEmpty()) {
                                delayedMessage.parentObjects.remove(i5);
                            }
                            TLObject tLObject = delayedMessage.sendRequest;
                            if (tLObject != null) {
                                ((TLRPC$TL_messages_sendMultiMedia) tLObject).multi_media.remove(i5);
                            } else {
                                TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                                tLRPC$TL_messages_sendEncryptedMultiMedia.messages.remove(i5);
                                tLRPC$TL_messages_sendEncryptedMultiMedia.files.remove(i5);
                            }
                            MediaController.getInstance().cancelVideoConvert(messageObject);
                            String str = (String) delayedMessage.extraHashMap.get(messageObject2);
                            if (str != null) {
                                arrayList2.add(str);
                            }
                            if (delayedMessage.messageObjects.isEmpty()) {
                                delayedMessage.sendDelayedRequests();
                            } else {
                                if (delayedMessage.finalGroupMessage == messageObject.getId()) {
                                    ArrayList<MessageObject> arrayList5 = delayedMessage.messageObjects;
                                    MessageObject messageObject3 = arrayList5.get(arrayList5.size() - 1);
                                    delayedMessage.finalGroupMessage = messageObject3.getId();
                                    messageObject3.messageOwner.params.put("final", "1");
                                    TLRPC$TL_messages_messages tLRPC$TL_messages_messages = new TLRPC$TL_messages_messages();
                                    tLRPC$TL_messages_messages.messages.add(messageObject3.messageOwner);
                                    getMessagesStorage().putMessages((TLRPC$messages_Messages) tLRPC$TL_messages_messages, delayedMessage.peer, -2, 0, false, i3, 0L);
                                }
                                if (!arrayList3.contains(delayedMessage)) {
                                    arrayList3.add(delayedMessage);
                                }
                            }
                        }
                    } else if (delayedMessage.obj.getId() == messageObject.getId()) {
                        removeFromUploadingMessages(messageObject.getId(), messageObject.scheduled);
                        value.remove(i4);
                        delayedMessage.sendDelayedRequests();
                        MediaController.getInstance().cancelVideoConvert(delayedMessage.obj);
                        if (value.size() == 0) {
                            arrayList2.add(entry.getKey());
                            if (delayedMessage.sendEncryptedRequest != null) {
                                z2 = true;
                            }
                        }
                    } else {
                        i4++;
                        z2 = z;
                    }
                }
                z2 = z;
            }
            i++;
            j = dialogId;
        }
        for (int i7 = 0; i7 < arrayList2.size(); i7++) {
            String str2 = (String) arrayList2.get(i7);
            if (str2.startsWith("http")) {
                ImageLoader.getInstance().cancelLoadHttpFile(str2);
            } else {
                getFileLoader().cancelFileUpload(str2, z2);
            }
            this.delayedMessages.remove(str2);
        }
        int size = arrayList3.size();
        for (int i8 = 0; i8 < size; i8++) {
            sendReadyToSendGroup((DelayedMessage) arrayList3.get(i8), false, true);
        }
        int i9 = 0;
        if (arrayList.size() == 1 && arrayList.get(0).isEditing() && arrayList.get(0).previousMedia != null) {
            revertEditingMessageObject(arrayList.get(0));
            return;
        }
        if (!arrayList.isEmpty() && arrayList.get(0).isQuickReply()) {
            i9 = 5;
        } else if (i3 != 0) {
            i9 = 1;
        }
        getMessagesController().deleteMessages(arrayList4, null, null, j, i2, false, i9);
    }

    public boolean retrySendMessage(MessageObject messageObject, boolean z) {
        if (messageObject.getId() >= 0) {
            if (messageObject.isEditing()) {
                editMessage(messageObject, null, null, null, null, null, true, messageObject.hasMediaSpoilers(), messageObject);
            }
            return false;
        }
        TLRPC$MessageAction tLRPC$MessageAction = messageObject.messageOwner.action;
        if (tLRPC$MessageAction instanceof TLRPC$TL_messageEncryptedAction) {
            TLRPC$EncryptedChat encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(messageObject.getDialogId())));
            if (encryptedChat == null) {
                getMessagesStorage().markMessageAsSendError(messageObject.messageOwner, messageObject.scheduled ? 1 : 0);
                messageObject.messageOwner.send_state = 2;
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                processSentMessage(messageObject.getId());
                return false;
            }
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            if (tLRPC$Message.random_id == 0) {
                tLRPC$Message.random_id = getNextRandomId();
            }
            TLRPC$DecryptedMessageAction tLRPC$DecryptedMessageAction = messageObject.messageOwner.action.encryptedAction;
            if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionSetMessageTTL) {
                getSecretChatHelper().sendTTLMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionDeleteMessages) {
                getSecretChatHelper().sendMessagesDeleteMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionFlushHistory) {
                getSecretChatHelper().sendClearHistoryMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionNotifyLayer) {
                getSecretChatHelper().sendNotifyLayerMessage(encryptedChat, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionReadMessages) {
                getSecretChatHelper().sendMessagesReadMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionScreenshotMessages) {
                getSecretChatHelper().sendScreenshotMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (!(tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionTyping)) {
                if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionResend) {
                    getSecretChatHelper().sendResendMessage(encryptedChat, 0, 0, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionCommitKey) {
                    getSecretChatHelper().sendCommitKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionAbortKey) {
                    getSecretChatHelper().sendAbortKeyMessage(encryptedChat, messageObject.messageOwner, 0L);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionRequestKey) {
                    getSecretChatHelper().sendRequestKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionAcceptKey) {
                    getSecretChatHelper().sendAcceptKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (tLRPC$DecryptedMessageAction instanceof TLRPC$TL_decryptedMessageActionNoop) {
                    getSecretChatHelper().sendNoopMessage(encryptedChat, messageObject.messageOwner);
                }
            }
            return true;
        }
        if (tLRPC$MessageAction instanceof TLRPC$TL_messageActionScreenshotTaken) {
            sendScreenshotMessage(getMessagesController().getUser(Long.valueOf(messageObject.getDialogId())), messageObject.getReplyMsgId(), messageObject.messageOwner);
        }
        if (z) {
            this.unsentMessages.put(messageObject.getId(), messageObject);
        }
        sendMessage(SendMessageParams.of(messageObject));
        return true;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void processSentMessage(int i) {
        int size = this.unsentMessages.size();
        this.unsentMessages.remove(i);
        if (size == 0 || this.unsentMessages.size() != 0) {
            return;
        }
        checkUnsentMessages();
    }

    /* JADX WARN: Removed duplicated region for block: B:27:0x0090  */
    /* JADX WARN: Removed duplicated region for block: B:28:0x00b9  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void processForwardFromMyName(MessageObject messageObject, long j) {
        HashMap hashMap;
        TLRPC$Photo tLRPC$Photo;
        if (messageObject == null) {
            return;
        }
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
        ArrayList arrayList = null;
        if (tLRPC$MessageMedia != null && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaEmpty) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGame) && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaInvoice)) {
            if (DialogObject.isEncryptedDialog(j)) {
                TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
                if (tLRPC$Message2.peer_id != null) {
                    TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$Message2.media;
                    if ((tLRPC$MessageMedia2.photo instanceof TLRPC$TL_photo) || (tLRPC$MessageMedia2.document instanceof TLRPC$TL_document)) {
                        HashMap hashMap2 = new HashMap();
                        hashMap2.put("parentObject", "sent_" + messageObject.messageOwner.peer_id.channel_id + "_" + messageObject.getId() + "_" + messageObject.getDialogId() + "_" + messageObject.type + "_" + messageObject.getSize());
                        hashMap = hashMap2;
                        TLRPC$Message tLRPC$Message3 = messageObject.messageOwner;
                        TLRPC$MessageMedia tLRPC$MessageMedia3 = tLRPC$Message3.media;
                        tLRPC$Photo = tLRPC$MessageMedia3.photo;
                        if (!(tLRPC$Photo instanceof TLRPC$TL_photo)) {
                            sendMessage(SendMessageParams.of((TLRPC$TL_photo) tLRPC$Photo, null, j, messageObject.replyMessageObject, null, tLRPC$Message3.message, tLRPC$Message3.entities, null, hashMap, true, 0, tLRPC$MessageMedia3.ttl_seconds, messageObject, false));
                            return;
                        }
                        TLRPC$Document tLRPC$Document = tLRPC$MessageMedia3.document;
                        if (tLRPC$Document instanceof TLRPC$TL_document) {
                            sendMessage(SendMessageParams.of((TLRPC$TL_document) tLRPC$Document, null, tLRPC$Message3.attachPath, j, messageObject.replyMessageObject, null, tLRPC$Message3.message, tLRPC$Message3.entities, null, hashMap, true, 0, tLRPC$MessageMedia3.ttl_seconds, messageObject, null, false));
                            return;
                        } else if ((tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaVenue) || (tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaGeo)) {
                            sendMessage(SendMessageParams.of(tLRPC$MessageMedia3, j, messageObject.replyMessageObject, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0));
                            return;
                        } else if (tLRPC$MessageMedia3.phone_number != null) {
                            TLRPC$TL_userContact_old2 tLRPC$TL_userContact_old2 = new TLRPC$TL_userContact_old2();
                            TLRPC$MessageMedia tLRPC$MessageMedia4 = messageObject.messageOwner.media;
                            tLRPC$TL_userContact_old2.phone = tLRPC$MessageMedia4.phone_number;
                            tLRPC$TL_userContact_old2.first_name = tLRPC$MessageMedia4.first_name;
                            tLRPC$TL_userContact_old2.last_name = tLRPC$MessageMedia4.last_name;
                            tLRPC$TL_userContact_old2.id = tLRPC$MessageMedia4.user_id;
                            sendMessage(SendMessageParams.of((TLRPC$User) tLRPC$TL_userContact_old2, j, messageObject.replyMessageObject, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0));
                            return;
                        } else if (DialogObject.isEncryptedDialog(j)) {
                            return;
                        } else {
                            ArrayList<MessageObject> arrayList2 = new ArrayList<>();
                            arrayList2.add(messageObject);
                            sendMessage(arrayList2, j, true, false, true, 0);
                            return;
                        }
                    }
                }
            }
            hashMap = null;
            TLRPC$Message tLRPC$Message32 = messageObject.messageOwner;
            TLRPC$MessageMedia tLRPC$MessageMedia32 = tLRPC$Message32.media;
            tLRPC$Photo = tLRPC$MessageMedia32.photo;
            if (!(tLRPC$Photo instanceof TLRPC$TL_photo)) {
            }
        } else if (tLRPC$Message.message != null) {
            TLRPC$WebPage tLRPC$WebPage = tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage ? tLRPC$MessageMedia.webpage : null;
            ArrayList<TLRPC$MessageEntity> arrayList3 = tLRPC$Message.entities;
            if (arrayList3 != null && !arrayList3.isEmpty()) {
                arrayList = new ArrayList();
                for (int i = 0; i < messageObject.messageOwner.entities.size(); i++) {
                    TLRPC$MessageEntity tLRPC$MessageEntity = messageObject.messageOwner.entities.get(i);
                    if ((tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityBold) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityItalic) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityPre) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityCode) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityTextUrl) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntitySpoiler) || (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityCustomEmoji)) {
                        arrayList.add(tLRPC$MessageEntity);
                    }
                }
            }
            sendMessage(SendMessageParams.of(messageObject.messageOwner.message, j, messageObject.replyMessageObject, null, tLRPC$WebPage, true, arrayList, null, null, true, 0, null, false));
        } else if (DialogObject.isEncryptedDialog(j)) {
            ArrayList<MessageObject> arrayList4 = new ArrayList<>();
            arrayList4.add(messageObject);
            sendMessage(arrayList4, j, true, false, true, 0);
        }
    }

    public void sendScreenshotMessage(TLRPC$User tLRPC$User, int i, TLRPC$Message tLRPC$Message) {
        TLRPC$Message tLRPC$Message2 = tLRPC$Message;
        if (tLRPC$User == null || i == 0 || tLRPC$User.id == getUserConfig().getClientUserId()) {
            return;
        }
        TLRPC$TL_messages_sendScreenshotNotification tLRPC$TL_messages_sendScreenshotNotification = new TLRPC$TL_messages_sendScreenshotNotification();
        TLRPC$TL_inputPeerUser tLRPC$TL_inputPeerUser = new TLRPC$TL_inputPeerUser();
        tLRPC$TL_messages_sendScreenshotNotification.peer = tLRPC$TL_inputPeerUser;
        tLRPC$TL_inputPeerUser.access_hash = tLRPC$User.access_hash;
        tLRPC$TL_inputPeerUser.user_id = tLRPC$User.id;
        if (tLRPC$Message2 != null) {
            tLRPC$TL_messages_sendScreenshotNotification.reply_to = createReplyInput(i);
            tLRPC$TL_messages_sendScreenshotNotification.random_id = tLRPC$Message2.random_id;
        } else {
            tLRPC$Message2 = new TLRPC$TL_messageService();
            tLRPC$Message2.random_id = getNextRandomId();
            tLRPC$Message2.dialog_id = tLRPC$User.id;
            tLRPC$Message2.unread = true;
            tLRPC$Message2.out = true;
            int newMessageId = getUserConfig().getNewMessageId();
            tLRPC$Message2.id = newMessageId;
            tLRPC$Message2.local_id = newMessageId;
            TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
            tLRPC$Message2.from_id = tLRPC$TL_peerUser;
            tLRPC$TL_peerUser.user_id = getUserConfig().getClientUserId();
            int i2 = tLRPC$Message2.flags | LiteMode.FLAG_CHAT_BLUR;
            tLRPC$Message2.flags = i2;
            tLRPC$Message2.flags = i2 | 8;
            TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
            tLRPC$Message2.reply_to = tLRPC$TL_messageReplyHeader;
            tLRPC$TL_messageReplyHeader.flags |= 16;
            tLRPC$TL_messageReplyHeader.reply_to_msg_id = i;
            TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
            tLRPC$Message2.peer_id = tLRPC$TL_peerUser2;
            tLRPC$TL_peerUser2.user_id = tLRPC$User.id;
            tLRPC$Message2.date = getConnectionsManager().getCurrentTime();
            tLRPC$Message2.action = new TLRPC$TL_messageActionScreenshotTaken();
            getUserConfig().saveConfig(false);
        }
        tLRPC$TL_messages_sendScreenshotNotification.random_id = tLRPC$Message2.random_id;
        MessageObject messageObject = new MessageObject(this.currentAccount, tLRPC$Message2, false, true);
        messageObject.messageOwner.send_state = 1;
        messageObject.wasJustSent = true;
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(messageObject);
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message2.dialog_id, arrayList, 0);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
        ArrayList<TLRPC$Message> arrayList2 = new ArrayList<>();
        arrayList2.add(tLRPC$Message2);
        getMessagesStorage().putMessages(arrayList2, false, true, false, 0, false, 0, 0L);
        performSendMessageRequest(tLRPC$TL_messages_sendScreenshotNotification, messageObject, null, null, null, null, false);
    }

    public void sendSticker(TLRPC$Document tLRPC$Document, String str, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final MessageObject.SendAnimationData sendAnimationData, final boolean z, final int i, boolean z2, final Object obj, final String str2, final int i2) {
        final TLRPC$TL_document_layer82 tLRPC$TL_document_layer82;
        HashMap hashMap;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        byte[] bArr;
        if (tLRPC$Document == null) {
            return;
        }
        if (DialogObject.isEncryptedDialog(j)) {
            if (getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                return;
            }
            TLRPC$TL_document_layer82 tLRPC$TL_document_layer822 = new TLRPC$TL_document_layer82();
            tLRPC$TL_document_layer822.id = tLRPC$Document.id;
            tLRPC$TL_document_layer822.access_hash = tLRPC$Document.access_hash;
            tLRPC$TL_document_layer822.date = tLRPC$Document.date;
            tLRPC$TL_document_layer822.mime_type = tLRPC$Document.mime_type;
            byte[] bArr2 = tLRPC$Document.file_reference;
            tLRPC$TL_document_layer822.file_reference = bArr2;
            if (bArr2 == null) {
                tLRPC$TL_document_layer822.file_reference = new byte[0];
            }
            tLRPC$TL_document_layer822.size = tLRPC$Document.size;
            tLRPC$TL_document_layer822.dc_id = tLRPC$Document.dc_id;
            tLRPC$TL_document_layer822.attributes = new ArrayList<>();
            for (int i3 = 0; i3 < tLRPC$Document.attributes.size(); i3++) {
                TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$Document.attributes.get(i3);
                if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeVideo) {
                    TLRPC$TL_documentAttributeVideo_layer159 tLRPC$TL_documentAttributeVideo_layer159 = new TLRPC$TL_documentAttributeVideo_layer159();
                    tLRPC$TL_documentAttributeVideo_layer159.flags = tLRPC$DocumentAttribute.flags;
                    tLRPC$TL_documentAttributeVideo_layer159.round_message = tLRPC$DocumentAttribute.round_message;
                    tLRPC$TL_documentAttributeVideo_layer159.supports_streaming = tLRPC$DocumentAttribute.supports_streaming;
                    tLRPC$TL_documentAttributeVideo_layer159.duration = tLRPC$DocumentAttribute.duration;
                    tLRPC$TL_documentAttributeVideo_layer159.w = tLRPC$DocumentAttribute.w;
                    tLRPC$TL_documentAttributeVideo_layer159.h = tLRPC$DocumentAttribute.h;
                    tLRPC$TL_document_layer822.attributes.add(tLRPC$TL_documentAttributeVideo_layer159);
                } else {
                    tLRPC$TL_document_layer822.attributes.add(tLRPC$DocumentAttribute);
                }
            }
            if (tLRPC$TL_document_layer822.mime_type == null) {
                tLRPC$TL_document_layer822.mime_type = "";
            }
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 10);
            if ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoSize) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoSizeProgressive) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize)) {
                File pathToAttach = FileLoader.getInstance(this.currentAccount).getPathToAttach(closestPhotoSizeWithSize, true);
                if ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize) || pathToAttach.exists()) {
                    try {
                        if (closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize) {
                            tLRPC$PhotoSize = new TLRPC$TL_photoStrippedSize();
                            bArr = closestPhotoSizeWithSize.bytes;
                        } else {
                            TLRPC$TL_photoCachedSize tLRPC$TL_photoCachedSize = new TLRPC$TL_photoCachedSize();
                            pathToAttach.length();
                            byte[] bArr3 = new byte[(int) pathToAttach.length()];
                            new RandomAccessFile(pathToAttach, "r").readFully(bArr3);
                            tLRPC$PhotoSize = tLRPC$TL_photoCachedSize;
                            bArr = bArr3;
                        }
                        TLRPC$TL_fileLocation_layer82 tLRPC$TL_fileLocation_layer82 = new TLRPC$TL_fileLocation_layer82();
                        TLRPC$FileLocation tLRPC$FileLocation = closestPhotoSizeWithSize.location;
                        tLRPC$TL_fileLocation_layer82.dc_id = tLRPC$FileLocation.dc_id;
                        tLRPC$TL_fileLocation_layer82.volume_id = tLRPC$FileLocation.volume_id;
                        tLRPC$TL_fileLocation_layer82.local_id = tLRPC$FileLocation.local_id;
                        tLRPC$TL_fileLocation_layer82.secret = tLRPC$FileLocation.secret;
                        tLRPC$PhotoSize.location = tLRPC$TL_fileLocation_layer82;
                        tLRPC$PhotoSize.size = closestPhotoSizeWithSize.size;
                        tLRPC$PhotoSize.w = closestPhotoSizeWithSize.w;
                        tLRPC$PhotoSize.h = closestPhotoSizeWithSize.h;
                        tLRPC$PhotoSize.type = closestPhotoSizeWithSize.type;
                        tLRPC$PhotoSize.bytes = bArr;
                        tLRPC$TL_document_layer822.thumbs.add(tLRPC$PhotoSize);
                        tLRPC$TL_document_layer822.flags |= 1;
                    } catch (Exception e) {
                        FileLog.e(e);
                    }
                }
            }
            if (tLRPC$TL_document_layer822.thumbs.isEmpty()) {
                TLRPC$TL_photoSizeEmpty tLRPC$TL_photoSizeEmpty = new TLRPC$TL_photoSizeEmpty();
                tLRPC$TL_photoSizeEmpty.type = "s";
                tLRPC$TL_document_layer822.thumbs.add(tLRPC$TL_photoSizeEmpty);
            }
            tLRPC$TL_document_layer82 = tLRPC$TL_document_layer822;
        } else {
            tLRPC$TL_document_layer82 = tLRPC$Document;
        }
        if (MessageObject.isGifDocument(tLRPC$TL_document_layer82)) {
            mediaSendQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda44
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$sendSticker$6(tLRPC$TL_document_layer82, j, messageObject, messageObject2, z, i, obj, sendAnimationData, tL_stories$StoryItem, replyQuote, str2, i2);
                }
            });
            return;
        }
        if (TextUtils.isEmpty(str)) {
            hashMap = null;
        } else {
            hashMap = new HashMap();
            hashMap.put("query", str);
        }
        SendMessageParams of = SendMessageParams.of((TLRPC$TL_document) tLRPC$TL_document_layer82, null, null, j, messageObject, messageObject2, null, null, null, hashMap, z, i, 0, obj, sendAnimationData, z2);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str2;
        of.quick_reply_shortcut_id = i2;
        sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendSticker$6(final TLRPC$Document tLRPC$Document, final long j, final MessageObject messageObject, final MessageObject messageObject2, final boolean z, final int i, final Object obj, final MessageObject.SendAnimationData sendAnimationData, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final String str, final int i2) {
        String str2;
        final Bitmap[] bitmapArr = new Bitmap[1];
        final String[] strArr = new String[1];
        String key = ImageLocation.getForDocument(tLRPC$Document).getKey(null, null, false);
        if ("video/mp4".equals(tLRPC$Document.mime_type)) {
            str2 = ".mp4";
        } else {
            str2 = "video/x-matroska".equals(tLRPC$Document.mime_type) ? ".mkv" : "";
        }
        File directory = FileLoader.getDirectory(3);
        File file = new File(directory, key + str2);
        if (!file.exists()) {
            File directory2 = FileLoader.getDirectory(2);
            file = new File(directory2, key + str2);
        }
        ensureMediaThumbExists(getAccountInstance(), false, tLRPC$Document, file.getAbsolutePath(), null, 0L);
        strArr[0] = getKeyForPhotoSize(getAccountInstance(), FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 320), bitmapArr, true, true);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda73
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendSticker$5(bitmapArr, strArr, tLRPC$Document, j, messageObject, messageObject2, z, i, obj, sendAnimationData, tL_stories$StoryItem, replyQuote, str, i2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendSticker$5(Bitmap[] bitmapArr, String[] strArr, TLRPC$Document tLRPC$Document, long j, MessageObject messageObject, MessageObject messageObject2, boolean z, int i, Object obj, MessageObject.SendAnimationData sendAnimationData, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str, int i2) {
        if (bitmapArr[0] != null && strArr[0] != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
        }
        SendMessageParams of = SendMessageParams.of((TLRPC$TL_document) tLRPC$Document, null, null, j, messageObject, messageObject2, null, null, null, null, z, i, 0, obj, sendAnimationData, false);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str;
        of.quick_reply_shortcut_id = i2;
        sendMessage(of);
    }

    public int sendMessage(ArrayList<MessageObject> arrayList, long j, boolean z, boolean z2, boolean z3, int i) {
        return sendMessage(arrayList, j, z, z2, z3, i, null);
    }

    /* JADX WARN: Code restructure failed: missing block: B:335:0x0773, code lost:
        if (r15.contains(java.lang.Integer.valueOf(r0.reply_to_msg_id)) != false) goto L245;
     */
    /* JADX WARN: Removed duplicated region for block: B:206:0x0466  */
    /* JADX WARN: Removed duplicated region for block: B:272:0x0607  */
    /* JADX WARN: Removed duplicated region for block: B:275:0x0611  */
    /* JADX WARN: Removed duplicated region for block: B:278:0x062a  */
    /* JADX WARN: Removed duplicated region for block: B:291:0x0684  */
    /* JADX WARN: Removed duplicated region for block: B:292:0x0696  */
    /* JADX WARN: Removed duplicated region for block: B:297:0x06b3  */
    /* JADX WARN: Removed duplicated region for block: B:300:0x06de  */
    /* JADX WARN: Removed duplicated region for block: B:301:0x06e0  */
    /* JADX WARN: Removed duplicated region for block: B:334:0x0769  */
    /* JADX WARN: Removed duplicated region for block: B:339:0x0791  */
    /* JADX WARN: Removed duplicated region for block: B:340:0x0793  */
    /* JADX WARN: Removed duplicated region for block: B:343:0x07ac  */
    /* JADX WARN: Removed duplicated region for block: B:352:0x07e5  */
    /* JADX WARN: Removed duplicated region for block: B:353:0x07e7  */
    /* JADX WARN: Removed duplicated region for block: B:356:0x07ef  */
    /* JADX WARN: Removed duplicated region for block: B:358:0x0825  */
    /* JADX WARN: Removed duplicated region for block: B:364:0x0855  */
    /* JADX WARN: Removed duplicated region for block: B:374:0x08ad  */
    /* JADX WARN: Removed duplicated region for block: B:375:0x08b0  */
    /* JADX WARN: Removed duplicated region for block: B:378:0x08bf  */
    /* JADX WARN: Removed duplicated region for block: B:379:0x08c1  */
    /* JADX WARN: Removed duplicated region for block: B:382:0x08e1  */
    /* JADX WARN: Removed duplicated region for block: B:389:0x0907  */
    /* JADX WARN: Removed duplicated region for block: B:391:0x0915  */
    /* JADX WARN: Removed duplicated region for block: B:394:0x0925  */
    /* JADX WARN: Removed duplicated region for block: B:397:0x094f  */
    /* JADX WARN: Removed duplicated region for block: B:400:0x0971  */
    /* JADX WARN: Removed duplicated region for block: B:403:0x0982 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:407:0x0990  */
    /* JADX WARN: Removed duplicated region for block: B:408:0x0993  */
    /* JADX WARN: Removed duplicated region for block: B:411:0x09ef  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public int sendMessage(ArrayList<MessageObject> arrayList, final long j, boolean z, boolean z2, boolean z3, final int i, MessageObject messageObject) {
        TLRPC$UserFull userFull;
        TLRPC$Peer tLRPC$Peer;
        long j2;
        boolean z4;
        boolean z5;
        long j3;
        boolean z6;
        String str;
        boolean z7;
        boolean z8;
        boolean z9;
        boolean z10;
        long j4;
        boolean z11;
        boolean z12;
        boolean canSendEmbed;
        boolean canSendPolls;
        boolean canSendRoundVideo;
        boolean canSendVoice;
        boolean canSendMusic;
        TLRPC$Chat tLRPC$Chat;
        String str2;
        LongSparseArray longSparseArray;
        long j5;
        final LongSparseArray longSparseArray2;
        long j6;
        String str3;
        TLRPC$Chat tLRPC$Chat2;
        int i2;
        final TLRPC$Peer tLRPC$Peer2;
        ArrayList<MessageObject> arrayList2;
        TLRPC$InputPeer tLRPC$InputPeer;
        ArrayList<Integer> arrayList3;
        final ArrayList arrayList4;
        ArrayList<Long> arrayList5;
        int i3;
        boolean z13;
        ArrayList<Long> arrayList6;
        long j7;
        LongSparseArray longSparseArray3;
        String str4;
        TLRPC$Chat tLRPC$Chat3;
        LongSparseArray longSparseArray4;
        long j8;
        long j9;
        long j10;
        TLRPC$Peer tLRPC$Peer3;
        TLRPC$Chat tLRPC$Chat4;
        long sendAsPeerId;
        String str5;
        boolean z14;
        LongSparseArray longSparseArray5;
        TLRPC$Message tLRPC$Message;
        long j11;
        ArrayList arrayList7;
        ArrayList<MessageObject> arrayList8;
        ArrayList<Long> arrayList9;
        ArrayList<Integer> arrayList10;
        int i4;
        boolean z15;
        int i5;
        boolean z16;
        TLRPC$Message tLRPC$Message2;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        TLRPC$Peer tLRPC$Peer4;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2;
        TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow;
        TLRPC$User user;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        TLRPC$Peer tLRPC$Peer5;
        int i6;
        boolean z17;
        boolean z18;
        ArrayList<MessageObject> arrayList11 = arrayList;
        long j12 = j;
        boolean z19 = z;
        boolean z20 = z2;
        if (arrayList11 == null || arrayList.isEmpty()) {
            return 0;
        }
        long clientUserId = getUserConfig().getClientUserId();
        if (!DialogObject.isEncryptedDialog(j)) {
            TLRPC$Peer peer = getMessagesController().getPeer(j12);
            if (DialogObject.isUserDialog(j)) {
                if (getMessagesController().getUser(Long.valueOf(j)) == null) {
                    return 0;
                }
                TLRPC$UserFull userFull2 = getMessagesController().getUserFull(j12);
                if (userFull2 != null) {
                    z17 = !userFull2.voice_messages_forbidden;
                    z18 = z17;
                } else {
                    z17 = true;
                    z18 = true;
                }
                canSendVoice = z17;
                canSendRoundVideo = z18;
                tLRPC$Peer = peer;
                j4 = 0;
                str2 = null;
                tLRPC$Chat = null;
                z8 = false;
                z7 = true;
                z9 = false;
                z10 = true;
                z11 = true;
                z12 = true;
                canSendEmbed = true;
                canSendPolls = true;
                canSendMusic = true;
            } else {
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(-j12));
                if (ChatObject.isChannel(chat)) {
                    z4 = chat.signatures;
                    z5 = !chat.megagroup;
                    if (z5 && chat.has_link) {
                        tLRPC$Peer = peer;
                        TLRPC$ChatFull chatFull = getMessagesController().getChatFull(chat.id);
                        if (chatFull != null) {
                            j2 = chatFull.linked_chat_id;
                        }
                    } else {
                        tLRPC$Peer = peer;
                    }
                    j2 = 0;
                } else {
                    tLRPC$Peer = peer;
                    j2 = 0;
                    z4 = false;
                    z5 = false;
                }
                if (chat != null) {
                    j3 = j2;
                    z6 = z4;
                    str = getMessagesController().getAdminRank(chat.id, clientUserId);
                } else {
                    j3 = j2;
                    z6 = z4;
                    str = null;
                }
                boolean canSendStickers = ChatObject.canSendStickers(chat);
                boolean canSendPhoto = ChatObject.canSendPhoto(chat);
                boolean canSendVideo = ChatObject.canSendVideo(chat);
                boolean canSendDocument = ChatObject.canSendDocument(chat);
                z7 = canSendStickers;
                z8 = z6;
                z9 = z5;
                z10 = canSendPhoto;
                j4 = j3;
                z11 = canSendVideo;
                z12 = canSendDocument;
                canSendEmbed = ChatObject.canSendEmbed(chat);
                canSendPolls = ChatObject.canSendPolls(chat);
                canSendRoundVideo = ChatObject.canSendRoundVideo(chat);
                canSendVoice = ChatObject.canSendVoice(chat);
                canSendMusic = ChatObject.canSendMusic(chat);
                tLRPC$Chat = chat;
                str2 = str;
            }
            LongSparseArray longSparseArray6 = new LongSparseArray();
            ArrayList<MessageObject> arrayList12 = new ArrayList<>();
            ArrayList arrayList13 = new ArrayList();
            ArrayList<Long> arrayList14 = new ArrayList<>();
            ArrayList<Integer> arrayList15 = new ArrayList<>();
            LongSparseArray longSparseArray7 = new LongSparseArray();
            TLRPC$InputPeer inputPeer = getMessagesController().getInputPeer(j12);
            boolean z21 = j12 == clientUserId;
            ArrayList arrayList16 = arrayList13;
            int i7 = 0;
            int i8 = 0;
            ArrayList<MessageObject> arrayList17 = arrayList12;
            ArrayList<Long> arrayList18 = arrayList14;
            TLRPC$InputPeer tLRPC$InputPeer2 = inputPeer;
            LongSparseArray longSparseArray8 = longSparseArray7;
            while (i7 < arrayList.size()) {
                final MessageObject messageObject2 = arrayList11.get(i7);
                if (messageObject2.getId() <= 0 || messageObject2.needDrawBluredPreview()) {
                    longSparseArray = longSparseArray6;
                    j5 = j4;
                    longSparseArray2 = longSparseArray8;
                    j6 = clientUserId;
                    str3 = str2;
                    tLRPC$Chat2 = tLRPC$Chat;
                    i2 = i7;
                    tLRPC$Peer2 = tLRPC$Peer;
                    arrayList2 = arrayList17;
                    tLRPC$InputPeer = tLRPC$InputPeer2;
                    arrayList3 = arrayList15;
                    arrayList4 = arrayList16;
                    arrayList5 = arrayList18;
                    if (messageObject2.type == 0 && !TextUtils.isEmpty(messageObject2.messageText)) {
                        TLRPC$MessageMedia tLRPC$MessageMedia = messageObject2.messageOwner.media;
                        TLRPC$WebPage tLRPC$WebPage = tLRPC$MessageMedia != null ? tLRPC$MessageMedia.webpage : null;
                        SendMessageParams of = SendMessageParams.of(messageObject2.messageText.toString(), j, null, messageObject, tLRPC$WebPage, tLRPC$WebPage != null, messageObject2.messageOwner.entities, null, null, z3, i, null, false);
                        of.quick_reply_shortcut = messageObject2.getQuickReplyName();
                        of.quick_reply_shortcut_id = messageObject2.getQuickReplyId();
                        sendMessage(of);
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    }
                    arrayList18 = arrayList5;
                    arrayList17 = arrayList2;
                    arrayList16 = arrayList4;
                    longSparseArray8 = longSparseArray2;
                    arrayList15 = arrayList3;
                } else {
                    if (messageObject2.isSticker() || messageObject2.isAnimatedSticker() || messageObject2.isGif() || messageObject2.isGame()) {
                        i3 = i7;
                        z13 = true;
                    } else {
                        i3 = i7;
                        z13 = false;
                    }
                    if (!z7 && z13) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 8) ? 4 : 1;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!z10 && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) && !messageObject2.isVideo() && !z13) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 16) ? 10 : 12;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!canSendMusic && messageObject2.isMusic()) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 18) ? 19 : 20;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!z11 && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) && messageObject2.isVideo() && !z13) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 17) ? 9 : 11;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!canSendPolls && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPoll)) {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 10) ? 6 : 3;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!canSendVoice && MessageObject.isVoiceMessage(messageObject2.messageOwner)) {
                        if (tLRPC$Chat != null) {
                            if (i8 == 0) {
                                i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 20) ? 13 : 14;
                                longSparseArray = longSparseArray6;
                                j5 = j4;
                                j6 = clientUserId;
                                str3 = str2;
                                tLRPC$Chat2 = tLRPC$Chat;
                                i8 = i6;
                                tLRPC$Peer2 = tLRPC$Peer;
                                tLRPC$InputPeer = tLRPC$InputPeer2;
                                i2 = i3;
                            }
                        } else if (i8 == 0) {
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                            i8 = 7;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (!canSendRoundVideo && MessageObject.isRoundVideoMessage(messageObject2.messageOwner)) {
                        if (tLRPC$Chat != null) {
                            if (i8 == 0) {
                                i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 21) ? 15 : 16;
                                longSparseArray = longSparseArray6;
                                j5 = j4;
                                j6 = clientUserId;
                                str3 = str2;
                                tLRPC$Chat2 = tLRPC$Chat;
                                i8 = i6;
                                tLRPC$Peer2 = tLRPC$Peer;
                                tLRPC$InputPeer = tLRPC$InputPeer2;
                                i2 = i3;
                            }
                        } else if (i8 == 0) {
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                            i8 = 8;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else if (z12 || !(messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaDocument) || z13) {
                        TLRPC$TL_message tLRPC$TL_message = new TLRPC$TL_message();
                        if (z19) {
                            arrayList6 = arrayList18;
                            j7 = j4;
                            longSparseArray3 = longSparseArray8;
                            str4 = str2;
                            tLRPC$Chat3 = tLRPC$Chat;
                            longSparseArray4 = longSparseArray6;
                        } else {
                            boolean z22 = messageObject2.getDialogId() == clientUserId && messageObject2.isFromUser() && messageObject2.messageOwner.from_id.user_id == clientUserId;
                            if (messageObject2.isForwarded()) {
                                TLRPC$TL_messageFwdHeader tLRPC$TL_messageFwdHeader = new TLRPC$TL_messageFwdHeader();
                                tLRPC$TL_message.fwd_from = tLRPC$TL_messageFwdHeader;
                                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2 = messageObject2.messageOwner.fwd_from;
                                longSparseArray3 = longSparseArray8;
                                if ((tLRPC$MessageFwdHeader2.flags & 1) != 0) {
                                    tLRPC$TL_messageFwdHeader.flags |= 1;
                                    tLRPC$TL_messageFwdHeader.from_id = tLRPC$MessageFwdHeader2.from_id;
                                }
                                if ((tLRPC$MessageFwdHeader2.flags & 32) != 0) {
                                    tLRPC$TL_messageFwdHeader.flags |= 32;
                                    tLRPC$TL_messageFwdHeader.from_name = tLRPC$MessageFwdHeader2.from_name;
                                }
                                if ((tLRPC$MessageFwdHeader2.flags & 4) != 0) {
                                    tLRPC$TL_messageFwdHeader.flags |= 4;
                                    tLRPC$TL_messageFwdHeader.channel_post = tLRPC$MessageFwdHeader2.channel_post;
                                }
                                if ((tLRPC$MessageFwdHeader2.flags & 8) != 0) {
                                    tLRPC$TL_messageFwdHeader.flags |= 8;
                                    tLRPC$TL_messageFwdHeader.post_author = tLRPC$MessageFwdHeader2.post_author;
                                }
                                if ((j12 == clientUserId || z9) && (tLRPC$MessageFwdHeader2.flags & 16) != 0 && !UserObject.isReplyUser(messageObject2.getDialogId())) {
                                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader3 = tLRPC$TL_message.fwd_from;
                                    tLRPC$MessageFwdHeader3.flags |= 16;
                                    TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader4 = messageObject2.messageOwner.fwd_from;
                                    tLRPC$MessageFwdHeader3.saved_from_peer = tLRPC$MessageFwdHeader4.saved_from_peer;
                                    tLRPC$MessageFwdHeader3.saved_from_msg_id = tLRPC$MessageFwdHeader4.saved_from_msg_id;
                                }
                                tLRPC$TL_message.fwd_from.date = messageObject2.messageOwner.fwd_from.date;
                                tLRPC$TL_message.flags = 4;
                            } else {
                                longSparseArray3 = longSparseArray8;
                                if (!z22) {
                                    long fromChatId = messageObject2.getFromChatId();
                                    TLRPC$TL_messageFwdHeader tLRPC$TL_messageFwdHeader2 = new TLRPC$TL_messageFwdHeader();
                                    tLRPC$TL_message.fwd_from = tLRPC$TL_messageFwdHeader2;
                                    arrayList6 = arrayList18;
                                    tLRPC$TL_messageFwdHeader2.channel_post = messageObject2.getId();
                                    tLRPC$TL_message.fwd_from.flags |= 4;
                                    if (messageObject2.isFromUser()) {
                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader5 = tLRPC$TL_message.fwd_from;
                                        tLRPC$MessageFwdHeader5.from_id = messageObject2.messageOwner.from_id;
                                        tLRPC$MessageFwdHeader5.flags |= 1;
                                        j7 = j4;
                                        str4 = str2;
                                        tLRPC$Chat3 = tLRPC$Chat;
                                        longSparseArray4 = longSparseArray6;
                                    } else {
                                        tLRPC$TL_message.fwd_from.from_id = new TLRPC$TL_peerChannel();
                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader6 = tLRPC$TL_message.fwd_from;
                                        TLRPC$Peer tLRPC$Peer6 = tLRPC$MessageFwdHeader6.from_id;
                                        str4 = str2;
                                        TLRPC$Message tLRPC$Message3 = messageObject2.messageOwner;
                                        tLRPC$Chat3 = tLRPC$Chat;
                                        TLRPC$Peer tLRPC$Peer7 = tLRPC$Message3.peer_id;
                                        j7 = j4;
                                        longSparseArray4 = longSparseArray6;
                                        tLRPC$Peer6.channel_id = tLRPC$Peer7.channel_id;
                                        tLRPC$MessageFwdHeader6.flags |= 1;
                                        if (tLRPC$Message3.post && fromChatId > 0) {
                                            TLRPC$Peer tLRPC$Peer8 = tLRPC$Message3.from_id;
                                            if (tLRPC$Peer8 != null) {
                                                tLRPC$Peer7 = tLRPC$Peer8;
                                            }
                                            tLRPC$MessageFwdHeader6.from_id = tLRPC$Peer7;
                                        }
                                    }
                                    if (messageObject2.messageOwner.post_author == null && !messageObject2.isOutOwner() && fromChatId > 0 && messageObject2.messageOwner.post && (user = getMessagesController().getUser(Long.valueOf(fromChatId))) != null) {
                                        tLRPC$TL_message.fwd_from.post_author = ContactsController.formatName(user.first_name, user.last_name);
                                        tLRPC$TL_message.fwd_from.flags |= 8;
                                    }
                                    tLRPC$TL_message.date = messageObject2.messageOwner.date;
                                    tLRPC$TL_message.flags = 4;
                                    if (j12 == clientUserId && (tLRPC$MessageFwdHeader = tLRPC$TL_message.fwd_from) != null) {
                                        tLRPC$MessageFwdHeader.flags |= 16;
                                        tLRPC$MessageFwdHeader.saved_from_msg_id = messageObject2.getId();
                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader7 = tLRPC$TL_message.fwd_from;
                                        tLRPC$Peer5 = messageObject2.messageOwner.peer_id;
                                        tLRPC$MessageFwdHeader7.saved_from_peer = tLRPC$Peer5;
                                        if (tLRPC$Peer5.user_id == clientUserId) {
                                            tLRPC$Peer5.user_id = messageObject2.getDialogId();
                                        }
                                    }
                                }
                            }
                            arrayList6 = arrayList18;
                            j7 = j4;
                            str4 = str2;
                            tLRPC$Chat3 = tLRPC$Chat;
                            longSparseArray4 = longSparseArray6;
                            if (j12 == clientUserId) {
                                tLRPC$MessageFwdHeader.flags |= 16;
                                tLRPC$MessageFwdHeader.saved_from_msg_id = messageObject2.getId();
                                TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader72 = tLRPC$TL_message.fwd_from;
                                tLRPC$Peer5 = messageObject2.messageOwner.peer_id;
                                tLRPC$MessageFwdHeader72.saved_from_peer = tLRPC$Peer5;
                                if (tLRPC$Peer5.user_id == clientUserId) {
                                }
                            }
                        }
                        HashMap<String, String> hashMap = new HashMap<>();
                        tLRPC$TL_message.params = hashMap;
                        hashMap.put("fwd_id", "" + messageObject2.getId());
                        tLRPC$TL_message.params.put("fwd_peer", "" + messageObject2.getDialogId());
                        if (!messageObject2.messageOwner.restriction_reason.isEmpty()) {
                            tLRPC$TL_message.restriction_reason = messageObject2.messageOwner.restriction_reason;
                            tLRPC$TL_message.flags |= 4194304;
                        }
                        if (!canSendEmbed && (messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaWebPage)) {
                            tLRPC$TL_message.media = new TLRPC$TL_messageMediaEmpty();
                        } else {
                            tLRPC$TL_message.media = messageObject2.messageOwner.media;
                        }
                        TLRPC$Message tLRPC$Message4 = messageObject2.messageOwner;
                        tLRPC$TL_message.invert_media = tLRPC$Message4.invert_media;
                        if (tLRPC$TL_message.media != null) {
                            tLRPC$TL_message.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                        }
                        long j13 = tLRPC$Message4.via_bot_id;
                        if (j13 != 0) {
                            tLRPC$TL_message.via_bot_id = j13;
                            tLRPC$TL_message.flags |= 2048;
                        }
                        if (j7 != 0) {
                            TLRPC$TL_messageReplies tLRPC$TL_messageReplies = new TLRPC$TL_messageReplies();
                            tLRPC$TL_message.replies = tLRPC$TL_messageReplies;
                            tLRPC$TL_messageReplies.comments = true;
                            j8 = j7;
                            tLRPC$TL_messageReplies.channel_id = j8;
                            tLRPC$TL_messageReplies.flags |= 1;
                            tLRPC$TL_message.flags |= 8388608;
                        } else {
                            j8 = j7;
                        }
                        if (!z20 || tLRPC$TL_message.media == null) {
                            tLRPC$TL_message.message = messageObject2.messageOwner.message;
                        }
                        if (tLRPC$TL_message.message == null) {
                            tLRPC$TL_message.message = "";
                        }
                        tLRPC$TL_message.fwd_msg_id = messageObject2.getId();
                        TLRPC$Message tLRPC$Message5 = messageObject2.messageOwner;
                        tLRPC$TL_message.attachPath = tLRPC$Message5.attachPath;
                        tLRPC$TL_message.entities = tLRPC$Message5.entities;
                        if (tLRPC$Message5.reply_markup instanceof TLRPC$TL_replyInlineMarkup) {
                            tLRPC$TL_message.reply_markup = new TLRPC$TL_replyInlineMarkup();
                            int size = messageObject2.messageOwner.reply_markup.rows.size();
                            int i9 = 0;
                            boolean z23 = false;
                            while (true) {
                                if (i9 >= size) {
                                    j9 = j8;
                                    break;
                                }
                                TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow2 = messageObject2.messageOwner.reply_markup.rows.get(i9);
                                int size2 = tLRPC$TL_keyboardButtonRow2.buttons.size();
                                int i10 = size;
                                int i11 = 0;
                                TLRPC$TL_keyboardButtonRow tLRPC$TL_keyboardButtonRow3 = null;
                                while (true) {
                                    boolean z24 = z23;
                                    if (i11 >= size2) {
                                        j9 = j8;
                                        break;
                                    }
                                    TLRPC$KeyboardButton tLRPC$KeyboardButton = tLRPC$TL_keyboardButtonRow2.buttons.get(i11);
                                    j9 = j8;
                                    boolean z25 = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth;
                                    if (!z25 && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrl) && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonSwitchInline) && !(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy)) {
                                        z23 = true;
                                        break;
                                    }
                                    if (z25) {
                                        TLRPC$TL_keyboardButtonUrlAuth tLRPC$TL_keyboardButtonUrlAuth = new TLRPC$TL_keyboardButtonUrlAuth();
                                        tLRPC$TL_keyboardButtonUrlAuth.flags = tLRPC$KeyboardButton.flags;
                                        String str6 = tLRPC$KeyboardButton.fwd_text;
                                        if (str6 != null) {
                                            tLRPC$TL_keyboardButtonUrlAuth.fwd_text = str6;
                                            tLRPC$TL_keyboardButtonUrlAuth.text = str6;
                                        } else {
                                            tLRPC$TL_keyboardButtonUrlAuth.text = tLRPC$KeyboardButton.text;
                                        }
                                        tLRPC$TL_keyboardButtonUrlAuth.url = tLRPC$KeyboardButton.url;
                                        tLRPC$TL_keyboardButtonUrlAuth.button_id = tLRPC$KeyboardButton.button_id;
                                        tLRPC$KeyboardButton = tLRPC$TL_keyboardButtonUrlAuth;
                                    }
                                    if (tLRPC$TL_keyboardButtonRow3 == null) {
                                        tLRPC$TL_keyboardButtonRow = new TLRPC$TL_keyboardButtonRow();
                                        tLRPC$TL_message.reply_markup.rows.add(tLRPC$TL_keyboardButtonRow);
                                    } else {
                                        tLRPC$TL_keyboardButtonRow = tLRPC$TL_keyboardButtonRow3;
                                    }
                                    tLRPC$TL_keyboardButtonRow.buttons.add(tLRPC$KeyboardButton);
                                    i11++;
                                    tLRPC$TL_keyboardButtonRow3 = tLRPC$TL_keyboardButtonRow;
                                    z23 = z24;
                                    j8 = j9;
                                }
                                if (z23) {
                                    break;
                                }
                                i9++;
                                size = i10;
                                j8 = j9;
                            }
                            if (z23) {
                                messageObject2.messageOwner.reply_markup = null;
                                tLRPC$TL_message.flags &= -65;
                                if (!tLRPC$TL_message.entities.isEmpty()) {
                                    tLRPC$TL_message.flags |= 128;
                                }
                                if (tLRPC$TL_message.attachPath == null) {
                                    tLRPC$TL_message.attachPath = "";
                                }
                                int newMessageId = getUserConfig().getNewMessageId();
                                tLRPC$TL_message.id = newMessageId;
                                tLRPC$TL_message.local_id = newMessageId;
                                tLRPC$TL_message.out = true;
                                j10 = messageObject2.messageOwner.grouped_id;
                                if (j10 != 0) {
                                    Long l = (Long) longSparseArray4.get(j10);
                                    if (l == null) {
                                        l = Long.valueOf(Utilities.random.nextLong());
                                        longSparseArray4.put(messageObject2.messageOwner.grouped_id, l);
                                    }
                                    tLRPC$TL_message.grouped_id = l.longValue();
                                    tLRPC$TL_message.flags |= 131072;
                                }
                                tLRPC$Peer3 = tLRPC$Peer;
                                if (tLRPC$Peer3.channel_id == 0 && z9) {
                                    if (z8) {
                                        TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
                                        tLRPC$TL_message.from_id = tLRPC$TL_peerUser;
                                        tLRPC$TL_peerUser.user_id = clientUserId;
                                    } else {
                                        tLRPC$TL_message.from_id = tLRPC$Peer3;
                                    }
                                    tLRPC$TL_message.post = true;
                                    str5 = str4;
                                    tLRPC$Chat4 = tLRPC$Chat3;
                                } else {
                                    tLRPC$Chat4 = tLRPC$Chat3;
                                    sendAsPeerId = ChatObject.getSendAsPeerId(tLRPC$Chat4, getMessagesController().getChatFull(-j12), true);
                                    if (sendAsPeerId != clientUserId) {
                                        TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
                                        tLRPC$TL_message.from_id = tLRPC$TL_peerUser2;
                                        tLRPC$TL_peerUser2.user_id = clientUserId;
                                        tLRPC$TL_message.flags |= LiteMode.FLAG_CHAT_BLUR;
                                        str5 = str4;
                                    } else {
                                        tLRPC$TL_message.from_id = getMessagesController().getPeer(sendAsPeerId);
                                        str5 = str4;
                                        if (str4 != null) {
                                            tLRPC$TL_message.post_author = str5;
                                            tLRPC$TL_message.flags |= 65536;
                                        }
                                    }
                                }
                                if (tLRPC$TL_message.random_id == 0) {
                                    tLRPC$TL_message.random_id = getNextRandomId();
                                }
                                ArrayList<Long> arrayList19 = arrayList6;
                                arrayList19.add(Long.valueOf(tLRPC$TL_message.random_id));
                                LongSparseArray longSparseArray9 = longSparseArray3;
                                longSparseArray9.put(tLRPC$TL_message.random_id, tLRPC$TL_message);
                                ArrayList<Integer> arrayList20 = arrayList15;
                                arrayList20.add(Integer.valueOf(tLRPC$TL_message.fwd_msg_id));
                                tLRPC$Chat2 = tLRPC$Chat4;
                                int i12 = i3;
                                tLRPC$TL_message.date = i == 0 ? i : getConnectionsManager().getCurrentTime();
                                TLRPC$InputPeer tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                z14 = tLRPC$InputPeer3 instanceof TLRPC$TL_inputPeerChannel;
                                if (z14 || !z9) {
                                    longSparseArray5 = longSparseArray4;
                                    tLRPC$Message = messageObject2.messageOwner;
                                    j11 = clientUserId;
                                    if ((tLRPC$Message.flags & 1024) != 0 && i == 0) {
                                        tLRPC$TL_message.views = tLRPC$Message.views;
                                        tLRPC$TL_message.flags |= 1024;
                                    }
                                    tLRPC$TL_message.unread = true;
                                } else {
                                    longSparseArray5 = longSparseArray4;
                                    if (i == 0) {
                                        tLRPC$TL_message.views = 1;
                                        tLRPC$TL_message.flags |= 1024;
                                    }
                                    j11 = clientUserId;
                                }
                                tLRPC$TL_message.dialog_id = j12;
                                tLRPC$TL_message.peer_id = tLRPC$Peer3;
                                if (!MessageObject.isVoiceMessage(tLRPC$TL_message) || MessageObject.isRoundVideoMessage(tLRPC$TL_message)) {
                                    if (!z14 && messageObject2.getChannelId() != 0) {
                                        tLRPC$TL_message.media_unread = messageObject2.isContentUnread();
                                    } else {
                                        tLRPC$TL_message.media_unread = true;
                                    }
                                }
                                if (messageObject == null && (tLRPC$MessageReplyHeader = (tLRPC$Message2 = messageObject2.messageOwner).reply_to) != null) {
                                    tLRPC$Peer4 = tLRPC$MessageReplyHeader.reply_to_peer_id;
                                    if (tLRPC$Peer4 != null || MessageObject.peersEqual(tLRPC$Peer4, tLRPC$Message2.peer_id)) {
                                        tLRPC$MessageReplyHeader2 = messageObject2.messageOwner.reply_to;
                                        if ((tLRPC$MessageReplyHeader2.flags & 16) != 0) {
                                        }
                                    }
                                    tLRPC$TL_message.flags |= 8;
                                    tLRPC$TL_message.reply_to = messageObject2.messageOwner.reply_to;
                                }
                                ArrayList<Integer> arrayList21 = arrayList20;
                                MessageObject messageObject3 = new MessageObject(this.currentAccount, tLRPC$TL_message, true, true);
                                messageObject3.scheduled = i == 0;
                                messageObject3.messageOwner.send_state = 1;
                                messageObject3.wasJustSent = true;
                                ArrayList<MessageObject> arrayList22 = arrayList17;
                                arrayList22.add(messageObject3);
                                arrayList7 = arrayList16;
                                arrayList7.add(tLRPC$TL_message);
                                String str7 = str5;
                                if (messageObject2.replyMessageObject != null) {
                                    int i13 = 0;
                                    while (i13 < arrayList.size()) {
                                        arrayList8 = arrayList;
                                        arrayList10 = arrayList21;
                                        arrayList9 = arrayList19;
                                        if (arrayList8.get(i13).getId() == messageObject2.replyMessageObject.getId()) {
                                            TLRPC$Message tLRPC$Message6 = messageObject3.messageOwner;
                                            MessageObject messageObject4 = messageObject2.replyMessageObject;
                                            tLRPC$Message6.replyMessage = messageObject4.messageOwner;
                                            messageObject3.replyMessageObject = messageObject4;
                                            break;
                                        }
                                        i13++;
                                        arrayList21 = arrayList10;
                                        arrayList19 = arrayList9;
                                    }
                                }
                                arrayList8 = arrayList;
                                arrayList9 = arrayList19;
                                arrayList10 = arrayList21;
                                putToSendingMessages(tLRPC$TL_message, i == 0);
                                if (BuildVars.LOGS_ENABLED) {
                                    FileLog.d("forward message user_id = " + tLRPC$InputPeer3.user_id + " chat_id = " + tLRPC$InputPeer3.chat_id + " channel_id = " + tLRPC$InputPeer3.channel_id + " access_hash = " + tLRPC$InputPeer3.access_hash);
                                }
                                if (messageObject != null) {
                                    TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
                                    tLRPC$TL_message.reply_to = tLRPC$TL_messageReplyHeader;
                                    tLRPC$TL_messageReplyHeader.flags |= 16;
                                    tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject.getId();
                                    if (messageObject.isTopicMainMessage) {
                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader3 = tLRPC$TL_message.reply_to;
                                        i4 = 1;
                                        tLRPC$MessageReplyHeader3.forum_topic = true;
                                        tLRPC$MessageReplyHeader3.flags |= 8;
                                        if (arrayList7.size() == 100 && i12 != arrayList.size() - i4 && (i12 == arrayList.size() - i4 || arrayList8.get(i12 + 1).getDialogId() == messageObject2.getDialogId())) {
                                            tLRPC$InputPeer = tLRPC$InputPeer3;
                                            arrayList2 = arrayList22;
                                            arrayList4 = arrayList7;
                                            i2 = i12;
                                            longSparseArray = longSparseArray5;
                                            j6 = j11;
                                            longSparseArray2 = longSparseArray9;
                                            arrayList3 = arrayList10;
                                            arrayList5 = arrayList9;
                                            str3 = str7;
                                            j5 = j9;
                                            tLRPC$Peer2 = tLRPC$Peer3;
                                            arrayList18 = arrayList5;
                                            arrayList17 = arrayList2;
                                            arrayList16 = arrayList4;
                                            longSparseArray8 = longSparseArray2;
                                            arrayList15 = arrayList3;
                                        } else {
                                            getMessagesStorage().putMessages(new ArrayList<>(arrayList7), false, true, false, 0, i != 0 ? 1 : 0, 0L);
                                            getMessagesController().updateInterfaceWithMessages(j12, arrayList22, i != 0 ? 1 : 0);
                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                                            getUserConfig().saveConfig(false);
                                            final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages = new TLRPC$TL_messages_forwardMessages();
                                            tLRPC$TL_messages_forwardMessages.to_peer = tLRPC$InputPeer3;
                                            if (z3) {
                                                if (!MessagesController.getNotificationsSettings(this.currentAccount).getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + j12, false)) {
                                                    z15 = false;
                                                    tLRPC$TL_messages_forwardMessages.silent = z15;
                                                    if (messageObject != null) {
                                                        tLRPC$TL_messages_forwardMessages.top_msg_id = messageObject.getId();
                                                        tLRPC$TL_messages_forwardMessages.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                    }
                                                    if (i != 0) {
                                                        tLRPC$TL_messages_forwardMessages.schedule_date = i;
                                                        tLRPC$TL_messages_forwardMessages.flags |= 1024;
                                                    }
                                                    if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                                        TLRPC$Chat chat2 = getMessagesController().getChat(Long.valueOf(messageObject2.messageOwner.peer_id.channel_id));
                                                        TLRPC$TL_inputPeerChannel tLRPC$TL_inputPeerChannel = new TLRPC$TL_inputPeerChannel();
                                                        tLRPC$TL_messages_forwardMessages.from_peer = tLRPC$TL_inputPeerChannel;
                                                        i5 = i12;
                                                        tLRPC$TL_inputPeerChannel.channel_id = messageObject2.messageOwner.peer_id.channel_id;
                                                        if (chat2 != null) {
                                                            tLRPC$TL_inputPeerChannel.access_hash = chat2.access_hash;
                                                        }
                                                    } else {
                                                        i5 = i12;
                                                        tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                    }
                                                    ArrayList<Long> arrayList23 = arrayList9;
                                                    tLRPC$TL_messages_forwardMessages.random_id = arrayList23;
                                                    ArrayList<Integer> arrayList24 = arrayList10;
                                                    tLRPC$TL_messages_forwardMessages.id = arrayList24;
                                                    tLRPC$TL_messages_forwardMessages.drop_author = z;
                                                    tLRPC$TL_messages_forwardMessages.drop_media_captions = z2;
                                                    if (arrayList.size() == 1 && arrayList8.get(0).messageOwner.with_my_score) {
                                                        z16 = true;
                                                        tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                                        final ArrayList arrayList25 = new ArrayList(arrayList22);
                                                        arrayList5 = arrayList23;
                                                        arrayList2 = arrayList22;
                                                        longSparseArray = longSparseArray5;
                                                        arrayList4 = arrayList7;
                                                        j5 = j9;
                                                        tLRPC$Peer2 = tLRPC$Peer3;
                                                        tLRPC$InputPeer = tLRPC$InputPeer3;
                                                        longSparseArray2 = longSparseArray9;
                                                        arrayList3 = arrayList24;
                                                        j6 = j11;
                                                        final boolean z26 = i != 2147483646;
                                                        final boolean z27 = z21;
                                                        str3 = str7;
                                                        getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda83
                                                            @Override // org.telegram.tgnet.RequestDelegate
                                                            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                                SendMessagesHelper.this.lambda$sendMessage$14(j, i, z26, z27, longSparseArray2, arrayList4, arrayList25, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                            }
                                                        }, 68);
                                                        i2 = i5;
                                                        if (i2 != arrayList.size() - 1) {
                                                            arrayList17 = new ArrayList<>();
                                                            arrayList16 = new ArrayList();
                                                            arrayList18 = new ArrayList<>();
                                                            arrayList15 = new ArrayList<>();
                                                            longSparseArray8 = new LongSparseArray();
                                                        }
                                                        arrayList18 = arrayList5;
                                                        arrayList17 = arrayList2;
                                                        arrayList16 = arrayList4;
                                                        longSparseArray8 = longSparseArray2;
                                                        arrayList15 = arrayList3;
                                                    }
                                                    z16 = false;
                                                    tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                                    final ArrayList arrayList252 = new ArrayList(arrayList22);
                                                    arrayList5 = arrayList23;
                                                    arrayList2 = arrayList22;
                                                    longSparseArray = longSparseArray5;
                                                    arrayList4 = arrayList7;
                                                    j5 = j9;
                                                    tLRPC$Peer2 = tLRPC$Peer3;
                                                    tLRPC$InputPeer = tLRPC$InputPeer3;
                                                    longSparseArray2 = longSparseArray9;
                                                    arrayList3 = arrayList24;
                                                    j6 = j11;
                                                    final boolean z262 = i != 2147483646;
                                                    final boolean z272 = z21;
                                                    str3 = str7;
                                                    getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda83
                                                        @Override // org.telegram.tgnet.RequestDelegate
                                                        public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                            SendMessagesHelper.this.lambda$sendMessage$14(j, i, z262, z272, longSparseArray2, arrayList4, arrayList252, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                        }
                                                    }, 68);
                                                    i2 = i5;
                                                    if (i2 != arrayList.size() - 1) {
                                                    }
                                                    arrayList18 = arrayList5;
                                                    arrayList17 = arrayList2;
                                                    arrayList16 = arrayList4;
                                                    longSparseArray8 = longSparseArray2;
                                                    arrayList15 = arrayList3;
                                                }
                                            }
                                            z15 = true;
                                            tLRPC$TL_messages_forwardMessages.silent = z15;
                                            if (messageObject != null) {
                                            }
                                            if (i != 0) {
                                            }
                                            if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                            }
                                            ArrayList<Long> arrayList232 = arrayList9;
                                            tLRPC$TL_messages_forwardMessages.random_id = arrayList232;
                                            ArrayList<Integer> arrayList242 = arrayList10;
                                            tLRPC$TL_messages_forwardMessages.id = arrayList242;
                                            tLRPC$TL_messages_forwardMessages.drop_author = z;
                                            tLRPC$TL_messages_forwardMessages.drop_media_captions = z2;
                                            if (arrayList.size() == 1) {
                                                z16 = true;
                                                tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                                final ArrayList arrayList2522 = new ArrayList(arrayList22);
                                                arrayList5 = arrayList232;
                                                arrayList2 = arrayList22;
                                                longSparseArray = longSparseArray5;
                                                arrayList4 = arrayList7;
                                                j5 = j9;
                                                tLRPC$Peer2 = tLRPC$Peer3;
                                                tLRPC$InputPeer = tLRPC$InputPeer3;
                                                longSparseArray2 = longSparseArray9;
                                                arrayList3 = arrayList242;
                                                j6 = j11;
                                                final boolean z2622 = i != 2147483646;
                                                final boolean z2722 = z21;
                                                str3 = str7;
                                                getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda83
                                                    @Override // org.telegram.tgnet.RequestDelegate
                                                    public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                        SendMessagesHelper.this.lambda$sendMessage$14(j, i, z2622, z2722, longSparseArray2, arrayList4, arrayList2522, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                    }
                                                }, 68);
                                                i2 = i5;
                                                if (i2 != arrayList.size() - 1) {
                                                }
                                                arrayList18 = arrayList5;
                                                arrayList17 = arrayList2;
                                                arrayList16 = arrayList4;
                                                longSparseArray8 = longSparseArray2;
                                                arrayList15 = arrayList3;
                                            }
                                            z16 = false;
                                            tLRPC$TL_messages_forwardMessages.with_my_score = z16;
                                            final ArrayList arrayList25222 = new ArrayList(arrayList22);
                                            arrayList5 = arrayList232;
                                            arrayList2 = arrayList22;
                                            longSparseArray = longSparseArray5;
                                            arrayList4 = arrayList7;
                                            j5 = j9;
                                            tLRPC$Peer2 = tLRPC$Peer3;
                                            tLRPC$InputPeer = tLRPC$InputPeer3;
                                            longSparseArray2 = longSparseArray9;
                                            arrayList3 = arrayList242;
                                            j6 = j11;
                                            final boolean z26222 = i != 2147483646;
                                            final boolean z27222 = z21;
                                            str3 = str7;
                                            getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda83
                                                @Override // org.telegram.tgnet.RequestDelegate
                                                public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                                    SendMessagesHelper.this.lambda$sendMessage$14(j, i, z26222, z27222, longSparseArray2, arrayList4, arrayList25222, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages, tLObject, tLRPC$TL_error);
                                                }
                                            }, 68);
                                            i2 = i5;
                                            if (i2 != arrayList.size() - 1) {
                                            }
                                            arrayList18 = arrayList5;
                                            arrayList17 = arrayList2;
                                            arrayList16 = arrayList4;
                                            longSparseArray8 = longSparseArray2;
                                            arrayList15 = arrayList3;
                                        }
                                    }
                                }
                                i4 = 1;
                                if (arrayList7.size() == 100) {
                                }
                                getMessagesStorage().putMessages(new ArrayList<>(arrayList7), false, true, false, 0, i != 0 ? 1 : 0, 0L);
                                getMessagesController().updateInterfaceWithMessages(j12, arrayList22, i != 0 ? 1 : 0);
                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                                getUserConfig().saveConfig(false);
                                final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages2 = new TLRPC$TL_messages_forwardMessages();
                                tLRPC$TL_messages_forwardMessages2.to_peer = tLRPC$InputPeer3;
                                if (z3) {
                                }
                                z15 = true;
                                tLRPC$TL_messages_forwardMessages2.silent = z15;
                                if (messageObject != null) {
                                }
                                if (i != 0) {
                                }
                                if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                                }
                                ArrayList<Long> arrayList2322 = arrayList9;
                                tLRPC$TL_messages_forwardMessages2.random_id = arrayList2322;
                                ArrayList<Integer> arrayList2422 = arrayList10;
                                tLRPC$TL_messages_forwardMessages2.id = arrayList2422;
                                tLRPC$TL_messages_forwardMessages2.drop_author = z;
                                tLRPC$TL_messages_forwardMessages2.drop_media_captions = z2;
                                if (arrayList.size() == 1) {
                                }
                                z16 = false;
                                tLRPC$TL_messages_forwardMessages2.with_my_score = z16;
                                final ArrayList arrayList252222 = new ArrayList(arrayList22);
                                arrayList5 = arrayList2322;
                                arrayList2 = arrayList22;
                                longSparseArray = longSparseArray5;
                                arrayList4 = arrayList7;
                                j5 = j9;
                                tLRPC$Peer2 = tLRPC$Peer3;
                                tLRPC$InputPeer = tLRPC$InputPeer3;
                                longSparseArray2 = longSparseArray9;
                                arrayList3 = arrayList2422;
                                j6 = j11;
                                final boolean z262222 = i != 2147483646;
                                final boolean z272222 = z21;
                                str3 = str7;
                                getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages2, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda83
                                    @Override // org.telegram.tgnet.RequestDelegate
                                    public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                        SendMessagesHelper.this.lambda$sendMessage$14(j, i, z262222, z272222, longSparseArray2, arrayList4, arrayList252222, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages2, tLObject, tLRPC$TL_error);
                                    }
                                }, 68);
                                i2 = i5;
                                if (i2 != arrayList.size() - 1) {
                                }
                                arrayList18 = arrayList5;
                                arrayList17 = arrayList2;
                                arrayList16 = arrayList4;
                                longSparseArray8 = longSparseArray2;
                                arrayList15 = arrayList3;
                            } else {
                                tLRPC$TL_message.flags |= 64;
                            }
                        } else {
                            j9 = j8;
                        }
                        if (!tLRPC$TL_message.entities.isEmpty()) {
                        }
                        if (tLRPC$TL_message.attachPath == null) {
                        }
                        int newMessageId2 = getUserConfig().getNewMessageId();
                        tLRPC$TL_message.id = newMessageId2;
                        tLRPC$TL_message.local_id = newMessageId2;
                        tLRPC$TL_message.out = true;
                        j10 = messageObject2.messageOwner.grouped_id;
                        if (j10 != 0) {
                        }
                        tLRPC$Peer3 = tLRPC$Peer;
                        if (tLRPC$Peer3.channel_id == 0) {
                        }
                        tLRPC$Chat4 = tLRPC$Chat3;
                        sendAsPeerId = ChatObject.getSendAsPeerId(tLRPC$Chat4, getMessagesController().getChatFull(-j12), true);
                        if (sendAsPeerId != clientUserId) {
                        }
                        if (tLRPC$TL_message.random_id == 0) {
                        }
                        ArrayList<Long> arrayList192 = arrayList6;
                        arrayList192.add(Long.valueOf(tLRPC$TL_message.random_id));
                        LongSparseArray longSparseArray92 = longSparseArray3;
                        longSparseArray92.put(tLRPC$TL_message.random_id, tLRPC$TL_message);
                        ArrayList<Integer> arrayList202 = arrayList15;
                        arrayList202.add(Integer.valueOf(tLRPC$TL_message.fwd_msg_id));
                        tLRPC$Chat2 = tLRPC$Chat4;
                        int i122 = i3;
                        tLRPC$TL_message.date = i == 0 ? i : getConnectionsManager().getCurrentTime();
                        TLRPC$InputPeer tLRPC$InputPeer32 = tLRPC$InputPeer2;
                        z14 = tLRPC$InputPeer32 instanceof TLRPC$TL_inputPeerChannel;
                        if (z14) {
                        }
                        longSparseArray5 = longSparseArray4;
                        tLRPC$Message = messageObject2.messageOwner;
                        j11 = clientUserId;
                        if ((tLRPC$Message.flags & 1024) != 0) {
                            tLRPC$TL_message.views = tLRPC$Message.views;
                            tLRPC$TL_message.flags |= 1024;
                        }
                        tLRPC$TL_message.unread = true;
                        tLRPC$TL_message.dialog_id = j12;
                        tLRPC$TL_message.peer_id = tLRPC$Peer3;
                        if (!MessageObject.isVoiceMessage(tLRPC$TL_message)) {
                        }
                        if (!z14) {
                        }
                        tLRPC$TL_message.media_unread = true;
                        if (messageObject == null) {
                            tLRPC$Peer4 = tLRPC$MessageReplyHeader.reply_to_peer_id;
                            if (tLRPC$Peer4 != null) {
                            }
                            tLRPC$MessageReplyHeader2 = messageObject2.messageOwner.reply_to;
                            if ((tLRPC$MessageReplyHeader2.flags & 16) != 0) {
                            }
                        }
                        ArrayList<Integer> arrayList212 = arrayList202;
                        MessageObject messageObject32 = new MessageObject(this.currentAccount, tLRPC$TL_message, true, true);
                        messageObject32.scheduled = i == 0;
                        messageObject32.messageOwner.send_state = 1;
                        messageObject32.wasJustSent = true;
                        ArrayList<MessageObject> arrayList222 = arrayList17;
                        arrayList222.add(messageObject32);
                        arrayList7 = arrayList16;
                        arrayList7.add(tLRPC$TL_message);
                        String str72 = str5;
                        if (messageObject2.replyMessageObject != null) {
                        }
                        arrayList8 = arrayList;
                        arrayList9 = arrayList192;
                        arrayList10 = arrayList212;
                        putToSendingMessages(tLRPC$TL_message, i == 0);
                        if (BuildVars.LOGS_ENABLED) {
                        }
                        if (messageObject != null) {
                        }
                        i4 = 1;
                        if (arrayList7.size() == 100) {
                        }
                        getMessagesStorage().putMessages(new ArrayList<>(arrayList7), false, true, false, 0, i != 0 ? 1 : 0, 0L);
                        getMessagesController().updateInterfaceWithMessages(j12, arrayList222, i != 0 ? 1 : 0);
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                        getUserConfig().saveConfig(false);
                        final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages22 = new TLRPC$TL_messages_forwardMessages();
                        tLRPC$TL_messages_forwardMessages22.to_peer = tLRPC$InputPeer32;
                        if (z3) {
                        }
                        z15 = true;
                        tLRPC$TL_messages_forwardMessages22.silent = z15;
                        if (messageObject != null) {
                        }
                        if (i != 0) {
                        }
                        if (!(messageObject2.messageOwner.peer_id instanceof TLRPC$TL_peerChannel)) {
                        }
                        ArrayList<Long> arrayList23222 = arrayList9;
                        tLRPC$TL_messages_forwardMessages22.random_id = arrayList23222;
                        ArrayList<Integer> arrayList24222 = arrayList10;
                        tLRPC$TL_messages_forwardMessages22.id = arrayList24222;
                        tLRPC$TL_messages_forwardMessages22.drop_author = z;
                        tLRPC$TL_messages_forwardMessages22.drop_media_captions = z2;
                        if (arrayList.size() == 1) {
                        }
                        z16 = false;
                        tLRPC$TL_messages_forwardMessages22.with_my_score = z16;
                        final ArrayList arrayList2522222 = new ArrayList(arrayList222);
                        arrayList5 = arrayList23222;
                        arrayList2 = arrayList222;
                        longSparseArray = longSparseArray5;
                        arrayList4 = arrayList7;
                        j5 = j9;
                        tLRPC$Peer2 = tLRPC$Peer3;
                        tLRPC$InputPeer = tLRPC$InputPeer32;
                        longSparseArray2 = longSparseArray92;
                        arrayList3 = arrayList24222;
                        j6 = j11;
                        final boolean z2622222 = i != 2147483646;
                        final boolean z2722222 = z21;
                        str3 = str72;
                        getConnectionsManager().sendRequest(tLRPC$TL_messages_forwardMessages22, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda83
                            @Override // org.telegram.tgnet.RequestDelegate
                            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                SendMessagesHelper.this.lambda$sendMessage$14(j, i, z2622222, z2722222, longSparseArray2, arrayList4, arrayList2522222, messageObject2, tLRPC$Peer2, tLRPC$TL_messages_forwardMessages22, tLObject, tLRPC$TL_error);
                            }
                        }, 68);
                        i2 = i5;
                        if (i2 != arrayList.size() - 1) {
                        }
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    } else {
                        if (i8 == 0) {
                            i6 = ChatObject.isActionBannedByDefault(tLRPC$Chat, 19) ? 17 : 18;
                            longSparseArray = longSparseArray6;
                            j5 = j4;
                            j6 = clientUserId;
                            str3 = str2;
                            tLRPC$Chat2 = tLRPC$Chat;
                            i8 = i6;
                            tLRPC$Peer2 = tLRPC$Peer;
                            tLRPC$InputPeer = tLRPC$InputPeer2;
                            i2 = i3;
                        }
                        longSparseArray = longSparseArray6;
                        j5 = j4;
                        longSparseArray2 = longSparseArray8;
                        j6 = clientUserId;
                        str3 = str2;
                        tLRPC$Chat2 = tLRPC$Chat;
                        tLRPC$Peer2 = tLRPC$Peer;
                        arrayList2 = arrayList17;
                        tLRPC$InputPeer = tLRPC$InputPeer2;
                        arrayList3 = arrayList15;
                        i2 = i3;
                        arrayList4 = arrayList16;
                        arrayList5 = arrayList18;
                        arrayList18 = arrayList5;
                        arrayList17 = arrayList2;
                        arrayList16 = arrayList4;
                        longSparseArray8 = longSparseArray2;
                        arrayList15 = arrayList3;
                    }
                }
                i7 = i2 + 1;
                arrayList11 = arrayList;
                j12 = j;
                z19 = z;
                z20 = z2;
                tLRPC$Chat = tLRPC$Chat2;
                longSparseArray6 = longSparseArray;
                tLRPC$Peer = tLRPC$Peer2;
                j4 = j5;
                tLRPC$InputPeer2 = tLRPC$InputPeer;
                clientUserId = j6;
                str2 = str3;
            }
            return i8;
        }
        long j14 = getMessagesController().getEncryptedChat(Integer.valueOf((int) j)).user_id;
        boolean z28 = (!DialogObject.isUserDialog(j14) || getMessagesController().getUser(Long.valueOf(j14)) == null || (userFull = getMessagesController().getUserFull(j14)) == null) ? true : !userFull.voice_messages_forbidden;
        int i14 = 0;
        for (int i15 = 0; i15 < arrayList.size(); i15++) {
            MessageObject messageObject5 = arrayList.get(i15);
            if (z28 || !MessageObject.isVoiceMessage(messageObject5.messageOwner)) {
                if (!z28 && MessageObject.isRoundVideoMessage(messageObject5.messageOwner) && i14 == 0) {
                    i14 = 8;
                }
            } else if (i14 == 0) {
                i14 = 7;
            }
        }
        if (i14 == 0) {
            for (int i16 = 0; i16 < arrayList.size(); i16++) {
                processForwardFromMyName(arrayList.get(i16), j);
            }
        }
        return i14;
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:51:0x0108  */
    /* JADX WARN: Removed duplicated region for block: B:57:0x0117  */
    /* JADX WARN: Removed duplicated region for block: B:58:0x0120  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$sendMessage$14(final long j, final int i, boolean z, boolean z2, LongSparseArray longSparseArray, ArrayList arrayList, ArrayList arrayList2, final MessageObject messageObject, final TLRPC$Peer tLRPC$Peer, final TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages, TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        final SendMessagesHelper sendMessagesHelper;
        TLRPC$Message tLRPC$Message;
        TLRPC$Message tLRPC$Message2;
        TLRPC$Message tLRPC$Message3;
        boolean z3;
        long j2;
        int i2;
        SparseLongArray sparseLongArray;
        TLRPC$Updates tLRPC$Updates;
        final TLRPC$Message tLRPC$Message4;
        int indexOf;
        SendMessagesHelper sendMessagesHelper2 = this;
        int i3 = i;
        ArrayList arrayList3 = arrayList2;
        int i4 = 0;
        if (tLRPC$TL_error == null) {
            SparseLongArray sparseLongArray2 = new SparseLongArray();
            TLRPC$Updates tLRPC$Updates2 = (TLRPC$Updates) tLObject;
            int i5 = 0;
            while (i5 < tLRPC$Updates2.updates.size()) {
                TLRPC$Update tLRPC$Update = tLRPC$Updates2.updates.get(i5);
                if (tLRPC$Update instanceof TLRPC$TL_updateMessageID) {
                    TLRPC$TL_updateMessageID tLRPC$TL_updateMessageID = (TLRPC$TL_updateMessageID) tLRPC$Update;
                    sparseLongArray2.put(tLRPC$TL_updateMessageID.id, tLRPC$TL_updateMessageID.random_id);
                    tLRPC$Updates2.updates.remove(i5);
                    i5--;
                }
                i5++;
            }
            getNotificationCenter().postNotificationNameOnUIThread(NotificationCenter.savedMessagesForwarded, sparseLongArray2);
            Integer num = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(j));
            if (num == null) {
                num = Integer.valueOf(getMessagesStorage().getDialogReadMax(true, j));
                getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(j), num);
            }
            Integer num2 = num;
            int i6 = 0;
            int i7 = 0;
            while (i6 < tLRPC$Updates2.updates.size()) {
                TLRPC$Update tLRPC$Update2 = tLRPC$Updates2.updates.get(i6);
                boolean z4 = tLRPC$Update2 instanceof TLRPC$TL_updateNewMessage;
                if (z4 || (tLRPC$Update2 instanceof TLRPC$TL_updateNewChannelMessage) || (tLRPC$Update2 instanceof TLRPC$TL_updateNewScheduledMessage) || (tLRPC$Update2 instanceof TLRPC$TL_updateQuickReplyMessage)) {
                    boolean z5 = i3 != 0;
                    tLRPC$Updates2.updates.remove(i6);
                    int i8 = i6 - 1;
                    if (z4) {
                        TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update2;
                        tLRPC$Message = tLRPC$TL_updateNewMessage.message;
                        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
                    } else {
                        if (tLRPC$Update2 instanceof TLRPC$TL_updateNewScheduledMessage) {
                            tLRPC$Message2 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update2).message;
                        } else if (tLRPC$Update2 instanceof TLRPC$TL_updateQuickReplyMessage) {
                            QuickRepliesController.getInstance(sendMessagesHelper2.currentAccount).processUpdate(tLRPC$Update2, null, i4);
                            tLRPC$Message2 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update2).message;
                        } else {
                            TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update2;
                            tLRPC$Message = tLRPC$TL_updateNewChannelMessage.message;
                            getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$Message.peer_id.channel_id);
                        }
                        tLRPC$Message3 = tLRPC$Message2;
                        z3 = (z || tLRPC$Message3.date == 2147483646) ? z5 : false;
                        ImageLoader.saveMessageThumbs(tLRPC$Message3);
                        if (!z3) {
                            tLRPC$Message3.unread = num2.intValue() < tLRPC$Message3.id;
                        }
                        if (!z2) {
                            tLRPC$Message3.out = true;
                            tLRPC$Message3.unread = false;
                            tLRPC$Message3.media_unread = false;
                        }
                        j2 = sparseLongArray2.get(tLRPC$Message3.id);
                        if (j2 != 0 || (tLRPC$Message4 = (TLRPC$Message) longSparseArray.get(j2)) == null || (indexOf = arrayList.indexOf(tLRPC$Message4)) == -1) {
                            i2 = i7;
                        } else {
                            MessageObject messageObject2 = (MessageObject) arrayList3.get(indexOf);
                            arrayList.remove(indexOf);
                            arrayList3.remove(indexOf);
                            final int i9 = tLRPC$Message4.id;
                            final ArrayList arrayList4 = new ArrayList();
                            arrayList4.add(tLRPC$Message3);
                            TLRPC$Message tLRPC$Message5 = messageObject2.messageOwner;
                            tLRPC$Message5.post_author = tLRPC$Message3.post_author;
                            if ((tLRPC$Message3.flags & ConnectionsManager.FileTypeVideo) != 0) {
                                tLRPC$Message5.ttl_period = tLRPC$Message3.ttl_period;
                                tLRPC$Message5.flags |= ConnectionsManager.FileTypeVideo;
                            }
                            updateMediaPaths(messageObject2, tLRPC$Message3, tLRPC$Message3.id, null, true);
                            final int mediaExistanceFlags = messageObject2.getMediaExistanceFlags();
                            tLRPC$Message4.id = tLRPC$Message3.id;
                            i2 = i7 + 1;
                            if (i3 != 0 && !z3) {
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda23
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.this.lambda$sendMessage$9(i9, tLRPC$Message4, arrayList4, messageObject, i);
                                    }
                                });
                            } else {
                                final TLRPC$Message tLRPC$Message6 = tLRPC$Message3;
                                sparseLongArray = sparseLongArray2;
                                tLRPC$Updates = tLRPC$Updates2;
                                getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda24
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.this.lambda$sendMessage$11(i, tLRPC$Message6, tLRPC$Message4, tLRPC$Peer, i9, arrayList4, j, mediaExistanceFlags);
                                    }
                                });
                                i7 = i2;
                                i6 = i8;
                            }
                        }
                        sparseLongArray = sparseLongArray2;
                        tLRPC$Updates = tLRPC$Updates2;
                        i7 = i2;
                        i6 = i8;
                    }
                    tLRPC$Message3 = tLRPC$Message;
                    if (z) {
                    }
                    ImageLoader.saveMessageThumbs(tLRPC$Message3);
                    if (!z3) {
                    }
                    if (!z2) {
                    }
                    j2 = sparseLongArray2.get(tLRPC$Message3.id);
                    if (j2 != 0) {
                    }
                    i2 = i7;
                    sparseLongArray = sparseLongArray2;
                    tLRPC$Updates = tLRPC$Updates2;
                    i7 = i2;
                    i6 = i8;
                } else {
                    sparseLongArray = sparseLongArray2;
                    tLRPC$Updates = tLRPC$Updates2;
                }
                i6++;
                i4 = 0;
                sendMessagesHelper2 = this;
                i3 = i;
                tLRPC$Updates2 = tLRPC$Updates;
                sparseLongArray2 = sparseLongArray;
                arrayList3 = arrayList2;
            }
            int i10 = i7;
            TLRPC$Updates tLRPC$Updates3 = tLRPC$Updates2;
            if (!tLRPC$Updates3.updates.isEmpty()) {
                getMessagesController().processUpdates(tLRPC$Updates3, false);
            }
            getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, i10);
            sendMessagesHelper = this;
        } else {
            sendMessagesHelper = this;
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda56
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$sendMessage$12(tLRPC$TL_error, tLRPC$TL_messages_forwardMessages);
                }
            });
        }
        for (int i11 = 0; i11 < arrayList.size(); i11++) {
            final TLRPC$Message tLRPC$Message7 = (TLRPC$Message) arrayList.get(i11);
            getMessagesStorage().markMessageAsSendError(tLRPC$Message7, i != 0 ? 1 : 0);
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda45
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$sendMessage$13(tLRPC$Message7, i);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$9(final int i, final TLRPC$Message tLRPC$Message, final ArrayList arrayList, final MessageObject messageObject, final int i2) {
        ArrayList<Integer> arrayList2 = new ArrayList<>();
        arrayList2.add(Integer.valueOf(i));
        getMessagesController().deleteMessages(arrayList2, null, null, tLRPC$Message.dialog_id, tLRPC$Message.quick_reply_shortcut_id, false, 1);
        getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda34
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendMessage$8(arrayList, messageObject, tLRPC$Message, i, i2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$8(ArrayList arrayList, final MessageObject messageObject, final TLRPC$Message tLRPC$Message, final int i, final int i2) {
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, 0, 0L);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda37
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendMessage$7(messageObject, tLRPC$Message, i, i2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$7(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, int i2) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(new MessageObject(messageObject.currentAccount, messageObject.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message.dialog_id, arrayList, 0);
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        processSentMessage(i);
        removeFromSendingMessages(i, i2 != 0);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$11(final int i, final TLRPC$Message tLRPC$Message, final TLRPC$Message tLRPC$Message2, TLRPC$Peer tLRPC$Peer, final int i2, ArrayList arrayList, final long j, final int i3) {
        int i4 = (tLRPC$Message.quick_reply_shortcut_id == 0 && tLRPC$Message.quick_reply_shortcut == null) ? i != 0 ? 1 : 0 : 5;
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message2.random_id, MessageObject.getPeerId(tLRPC$Peer), Integer.valueOf(i2), tLRPC$Message2.id, 0, false, i != 0 ? 1 : 0, tLRPC$Message.quick_reply_shortcut_id);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, i4, tLRPC$Message.quick_reply_shortcut_id);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda49
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendMessage$10(tLRPC$Message2, j, i2, tLRPC$Message, i3, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$10(TLRPC$Message tLRPC$Message, long j, int i, TLRPC$Message tLRPC$Message2, int i2, int i3) {
        tLRPC$Message.send_state = 0;
        getMediaDataController().increasePeerRaiting(j);
        NotificationCenter notificationCenter = getNotificationCenter();
        int i4 = NotificationCenter.messageReceivedByServer;
        Object[] objArr = new Object[7];
        objArr[0] = Integer.valueOf(i);
        objArr[1] = Integer.valueOf(tLRPC$Message2.id);
        objArr[2] = tLRPC$Message2;
        objArr[3] = Long.valueOf(j);
        objArr[4] = 0L;
        objArr[5] = Integer.valueOf(i2);
        objArr[6] = Boolean.valueOf(i3 != 0);
        notificationCenter.lambda$postNotificationNameOnUIThread$1(i4, objArr);
        NotificationCenter notificationCenter2 = getNotificationCenter();
        int i5 = NotificationCenter.messageReceivedByServer2;
        Object[] objArr2 = new Object[7];
        objArr2[0] = Integer.valueOf(i);
        objArr2[1] = Integer.valueOf(tLRPC$Message2.id);
        objArr2[2] = tLRPC$Message2;
        objArr2[3] = Long.valueOf(j);
        objArr2[4] = 0L;
        objArr2[5] = Integer.valueOf(i2);
        objArr2[6] = Boolean.valueOf(i3 != 0);
        notificationCenter2.lambda$postNotificationNameOnUIThread$1(i5, objArr2);
        processSentMessage(i);
        removeFromSendingMessages(i, i3 != 0);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$12(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages) {
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLRPC$TL_messages_forwardMessages, new Object[0]);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendMessage$13(TLRPC$Message tLRPC$Message, int i) {
        tLRPC$Message.send_state = 2;
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
        processSentMessage(tLRPC$Message.id);
        removeFromSendingMessages(tLRPC$Message.id, i != 0);
    }

    public static int canSendMessageToChat(TLRPC$Chat tLRPC$Chat, MessageObject messageObject) {
        boolean canSendStickers = ChatObject.canSendStickers(tLRPC$Chat);
        boolean canSendPhoto = ChatObject.canSendPhoto(tLRPC$Chat);
        boolean canSendVideo = ChatObject.canSendVideo(tLRPC$Chat);
        boolean canSendDocument = ChatObject.canSendDocument(tLRPC$Chat);
        ChatObject.canSendEmbed(tLRPC$Chat);
        boolean canSendPolls = ChatObject.canSendPolls(tLRPC$Chat);
        boolean canSendRoundVideo = ChatObject.canSendRoundVideo(tLRPC$Chat);
        boolean canSendVoice = ChatObject.canSendVoice(tLRPC$Chat);
        boolean canSendMusic = ChatObject.canSendMusic(tLRPC$Chat);
        boolean z = messageObject.isSticker() || messageObject.isAnimatedSticker() || messageObject.isGif() || messageObject.isGame();
        if (!canSendStickers && z) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 8) ? 4 : 1;
        } else if (!canSendPhoto && (messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) && !messageObject.isVideo() && !z) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 16) ? 10 : 12;
        } else if (!canSendMusic && messageObject.isMusic()) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 18) ? 19 : 20;
        } else if (!canSendVideo && messageObject.isVideo() && !z) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 17) ? 9 : 11;
        } else if (!canSendPolls && (messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaPoll)) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 10) ? 6 : 3;
        } else if (!canSendVoice && MessageObject.isVoiceMessage(messageObject.messageOwner)) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 20) ? 13 : 14;
        } else if (!canSendRoundVideo && MessageObject.isRoundVideoMessage(messageObject.messageOwner)) {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 21) ? 15 : 16;
        } else if (canSendDocument || !(messageObject.messageOwner.media instanceof TLRPC$TL_messageMediaDocument) || z) {
            return 0;
        } else {
            return ChatObject.isActionBannedByDefault(tLRPC$Chat, 19) ? 17 : 18;
        }
    }

    private void writePreviousMessageData(TLRPC$Message tLRPC$Message, SerializedData serializedData) {
        TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
        if (tLRPC$MessageMedia == null) {
            new TLRPC$TL_messageMediaEmpty().serializeToStream(serializedData);
        } else {
            tLRPC$MessageMedia.serializeToStream(serializedData);
        }
        String str = tLRPC$Message.message;
        if (str == null) {
            str = "";
        }
        serializedData.writeString(str);
        String str2 = tLRPC$Message.attachPath;
        serializedData.writeString(str2 != null ? str2 : "");
        int size = tLRPC$Message.entities.size();
        serializedData.writeInt32(size);
        for (int i = 0; i < size; i++) {
            tLRPC$Message.entities.get(i).serializeToStream(serializedData);
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:241:0x04f9 A[Catch: Exception -> 0x0626, TryCatch #0 {Exception -> 0x0626, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016e, B:76:0x0172, B:77:0x0176, B:85:0x0190, B:90:0x0199, B:92:0x019d, B:94:0x01ad, B:96:0x01b1, B:113:0x020a, B:117:0x0227, B:119:0x0242, B:121:0x024a, B:124:0x024f, B:125:0x0256, B:126:0x0259, B:129:0x0288, B:131:0x0290, B:141:0x02a8, B:143:0x02ac, B:146:0x02b2, B:153:0x02c6, B:155:0x02ca, B:239:0x04dc, B:241:0x04f9, B:242:0x0501, B:244:0x0505, B:245:0x0511, B:247:0x0518, B:248:0x0523, B:250:0x0527, B:254:0x053a, B:256:0x0540, B:263:0x056d, B:258:0x0549, B:260:0x055d, B:262:0x0563, B:265:0x0573, B:268:0x0578, B:272:0x0595, B:273:0x059a, B:277:0x05b2, B:278:0x05b7, B:281:0x05d1, B:285:0x05ec, B:286:0x05f0, B:290:0x060c, B:291:0x0610, B:148:0x02b8, B:150:0x02bc, B:159:0x02e7, B:161:0x02f0, B:163:0x02f8, B:165:0x0309, B:166:0x0322, B:168:0x0330, B:175:0x035e, B:177:0x0372, B:179:0x0378, B:181:0x0381, B:182:0x0384, B:171:0x033a, B:173:0x0355, B:174:0x035a, B:186:0x03a1, B:188:0x03ac, B:190:0x03b4, B:192:0x03c5, B:193:0x03d6, B:194:0x03df, B:197:0x03f1, B:201:0x03fa, B:203:0x0401, B:205:0x0409, B:212:0x0434, B:214:0x044e, B:216:0x045b, B:217:0x045f, B:208:0x0412, B:210:0x042c, B:211:0x0431, B:220:0x046c, B:227:0x04a6, B:230:0x04bc, B:232:0x04c0, B:234:0x04cd, B:235:0x04d1, B:223:0x0484, B:225:0x049e, B:226:0x04a3, B:97:0x01ba, B:99:0x01c0, B:100:0x01c7, B:102:0x01cb, B:111:0x0204, B:103:0x01d4, B:105:0x01e7, B:107:0x01ed, B:108:0x01f6, B:110:0x01fe, B:82:0x0185, B:84:0x018d, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0162, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015e), top: B:296:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:244:0x0505 A[Catch: Exception -> 0x0626, TryCatch #0 {Exception -> 0x0626, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016e, B:76:0x0172, B:77:0x0176, B:85:0x0190, B:90:0x0199, B:92:0x019d, B:94:0x01ad, B:96:0x01b1, B:113:0x020a, B:117:0x0227, B:119:0x0242, B:121:0x024a, B:124:0x024f, B:125:0x0256, B:126:0x0259, B:129:0x0288, B:131:0x0290, B:141:0x02a8, B:143:0x02ac, B:146:0x02b2, B:153:0x02c6, B:155:0x02ca, B:239:0x04dc, B:241:0x04f9, B:242:0x0501, B:244:0x0505, B:245:0x0511, B:247:0x0518, B:248:0x0523, B:250:0x0527, B:254:0x053a, B:256:0x0540, B:263:0x056d, B:258:0x0549, B:260:0x055d, B:262:0x0563, B:265:0x0573, B:268:0x0578, B:272:0x0595, B:273:0x059a, B:277:0x05b2, B:278:0x05b7, B:281:0x05d1, B:285:0x05ec, B:286:0x05f0, B:290:0x060c, B:291:0x0610, B:148:0x02b8, B:150:0x02bc, B:159:0x02e7, B:161:0x02f0, B:163:0x02f8, B:165:0x0309, B:166:0x0322, B:168:0x0330, B:175:0x035e, B:177:0x0372, B:179:0x0378, B:181:0x0381, B:182:0x0384, B:171:0x033a, B:173:0x0355, B:174:0x035a, B:186:0x03a1, B:188:0x03ac, B:190:0x03b4, B:192:0x03c5, B:193:0x03d6, B:194:0x03df, B:197:0x03f1, B:201:0x03fa, B:203:0x0401, B:205:0x0409, B:212:0x0434, B:214:0x044e, B:216:0x045b, B:217:0x045f, B:208:0x0412, B:210:0x042c, B:211:0x0431, B:220:0x046c, B:227:0x04a6, B:230:0x04bc, B:232:0x04c0, B:234:0x04cd, B:235:0x04d1, B:223:0x0484, B:225:0x049e, B:226:0x04a3, B:97:0x01ba, B:99:0x01c0, B:100:0x01c7, B:102:0x01cb, B:111:0x0204, B:103:0x01d4, B:105:0x01e7, B:107:0x01ed, B:108:0x01f6, B:110:0x01fe, B:82:0x0185, B:84:0x018d, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0162, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015e), top: B:296:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:247:0x0518 A[Catch: Exception -> 0x0626, TryCatch #0 {Exception -> 0x0626, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016e, B:76:0x0172, B:77:0x0176, B:85:0x0190, B:90:0x0199, B:92:0x019d, B:94:0x01ad, B:96:0x01b1, B:113:0x020a, B:117:0x0227, B:119:0x0242, B:121:0x024a, B:124:0x024f, B:125:0x0256, B:126:0x0259, B:129:0x0288, B:131:0x0290, B:141:0x02a8, B:143:0x02ac, B:146:0x02b2, B:153:0x02c6, B:155:0x02ca, B:239:0x04dc, B:241:0x04f9, B:242:0x0501, B:244:0x0505, B:245:0x0511, B:247:0x0518, B:248:0x0523, B:250:0x0527, B:254:0x053a, B:256:0x0540, B:263:0x056d, B:258:0x0549, B:260:0x055d, B:262:0x0563, B:265:0x0573, B:268:0x0578, B:272:0x0595, B:273:0x059a, B:277:0x05b2, B:278:0x05b7, B:281:0x05d1, B:285:0x05ec, B:286:0x05f0, B:290:0x060c, B:291:0x0610, B:148:0x02b8, B:150:0x02bc, B:159:0x02e7, B:161:0x02f0, B:163:0x02f8, B:165:0x0309, B:166:0x0322, B:168:0x0330, B:175:0x035e, B:177:0x0372, B:179:0x0378, B:181:0x0381, B:182:0x0384, B:171:0x033a, B:173:0x0355, B:174:0x035a, B:186:0x03a1, B:188:0x03ac, B:190:0x03b4, B:192:0x03c5, B:193:0x03d6, B:194:0x03df, B:197:0x03f1, B:201:0x03fa, B:203:0x0401, B:205:0x0409, B:212:0x0434, B:214:0x044e, B:216:0x045b, B:217:0x045f, B:208:0x0412, B:210:0x042c, B:211:0x0431, B:220:0x046c, B:227:0x04a6, B:230:0x04bc, B:232:0x04c0, B:234:0x04cd, B:235:0x04d1, B:223:0x0484, B:225:0x049e, B:226:0x04a3, B:97:0x01ba, B:99:0x01c0, B:100:0x01c7, B:102:0x01cb, B:111:0x0204, B:103:0x01d4, B:105:0x01e7, B:107:0x01ed, B:108:0x01f6, B:110:0x01fe, B:82:0x0185, B:84:0x018d, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0162, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015e), top: B:296:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:250:0x0527 A[Catch: Exception -> 0x0626, TryCatch #0 {Exception -> 0x0626, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016e, B:76:0x0172, B:77:0x0176, B:85:0x0190, B:90:0x0199, B:92:0x019d, B:94:0x01ad, B:96:0x01b1, B:113:0x020a, B:117:0x0227, B:119:0x0242, B:121:0x024a, B:124:0x024f, B:125:0x0256, B:126:0x0259, B:129:0x0288, B:131:0x0290, B:141:0x02a8, B:143:0x02ac, B:146:0x02b2, B:153:0x02c6, B:155:0x02ca, B:239:0x04dc, B:241:0x04f9, B:242:0x0501, B:244:0x0505, B:245:0x0511, B:247:0x0518, B:248:0x0523, B:250:0x0527, B:254:0x053a, B:256:0x0540, B:263:0x056d, B:258:0x0549, B:260:0x055d, B:262:0x0563, B:265:0x0573, B:268:0x0578, B:272:0x0595, B:273:0x059a, B:277:0x05b2, B:278:0x05b7, B:281:0x05d1, B:285:0x05ec, B:286:0x05f0, B:290:0x060c, B:291:0x0610, B:148:0x02b8, B:150:0x02bc, B:159:0x02e7, B:161:0x02f0, B:163:0x02f8, B:165:0x0309, B:166:0x0322, B:168:0x0330, B:175:0x035e, B:177:0x0372, B:179:0x0378, B:181:0x0381, B:182:0x0384, B:171:0x033a, B:173:0x0355, B:174:0x035a, B:186:0x03a1, B:188:0x03ac, B:190:0x03b4, B:192:0x03c5, B:193:0x03d6, B:194:0x03df, B:197:0x03f1, B:201:0x03fa, B:203:0x0401, B:205:0x0409, B:212:0x0434, B:214:0x044e, B:216:0x045b, B:217:0x045f, B:208:0x0412, B:210:0x042c, B:211:0x0431, B:220:0x046c, B:227:0x04a6, B:230:0x04bc, B:232:0x04c0, B:234:0x04cd, B:235:0x04d1, B:223:0x0484, B:225:0x049e, B:226:0x04a3, B:97:0x01ba, B:99:0x01c0, B:100:0x01c7, B:102:0x01cb, B:111:0x0204, B:103:0x01d4, B:105:0x01e7, B:107:0x01ed, B:108:0x01f6, B:110:0x01fe, B:82:0x0185, B:84:0x018d, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0162, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015e), top: B:296:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:265:0x0573 A[Catch: Exception -> 0x0626, TryCatch #0 {Exception -> 0x0626, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016e, B:76:0x0172, B:77:0x0176, B:85:0x0190, B:90:0x0199, B:92:0x019d, B:94:0x01ad, B:96:0x01b1, B:113:0x020a, B:117:0x0227, B:119:0x0242, B:121:0x024a, B:124:0x024f, B:125:0x0256, B:126:0x0259, B:129:0x0288, B:131:0x0290, B:141:0x02a8, B:143:0x02ac, B:146:0x02b2, B:153:0x02c6, B:155:0x02ca, B:239:0x04dc, B:241:0x04f9, B:242:0x0501, B:244:0x0505, B:245:0x0511, B:247:0x0518, B:248:0x0523, B:250:0x0527, B:254:0x053a, B:256:0x0540, B:263:0x056d, B:258:0x0549, B:260:0x055d, B:262:0x0563, B:265:0x0573, B:268:0x0578, B:272:0x0595, B:273:0x059a, B:277:0x05b2, B:278:0x05b7, B:281:0x05d1, B:285:0x05ec, B:286:0x05f0, B:290:0x060c, B:291:0x0610, B:148:0x02b8, B:150:0x02bc, B:159:0x02e7, B:161:0x02f0, B:163:0x02f8, B:165:0x0309, B:166:0x0322, B:168:0x0330, B:175:0x035e, B:177:0x0372, B:179:0x0378, B:181:0x0381, B:182:0x0384, B:171:0x033a, B:173:0x0355, B:174:0x035a, B:186:0x03a1, B:188:0x03ac, B:190:0x03b4, B:192:0x03c5, B:193:0x03d6, B:194:0x03df, B:197:0x03f1, B:201:0x03fa, B:203:0x0401, B:205:0x0409, B:212:0x0434, B:214:0x044e, B:216:0x045b, B:217:0x045f, B:208:0x0412, B:210:0x042c, B:211:0x0431, B:220:0x046c, B:227:0x04a6, B:230:0x04bc, B:232:0x04c0, B:234:0x04cd, B:235:0x04d1, B:223:0x0484, B:225:0x049e, B:226:0x04a3, B:97:0x01ba, B:99:0x01c0, B:100:0x01c7, B:102:0x01cb, B:111:0x0204, B:103:0x01d4, B:105:0x01e7, B:107:0x01ed, B:108:0x01f6, B:110:0x01fe, B:82:0x0185, B:84:0x018d, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0162, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015e), top: B:296:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:268:0x0578 A[Catch: Exception -> 0x0626, TryCatch #0 {Exception -> 0x0626, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016e, B:76:0x0172, B:77:0x0176, B:85:0x0190, B:90:0x0199, B:92:0x019d, B:94:0x01ad, B:96:0x01b1, B:113:0x020a, B:117:0x0227, B:119:0x0242, B:121:0x024a, B:124:0x024f, B:125:0x0256, B:126:0x0259, B:129:0x0288, B:131:0x0290, B:141:0x02a8, B:143:0x02ac, B:146:0x02b2, B:153:0x02c6, B:155:0x02ca, B:239:0x04dc, B:241:0x04f9, B:242:0x0501, B:244:0x0505, B:245:0x0511, B:247:0x0518, B:248:0x0523, B:250:0x0527, B:254:0x053a, B:256:0x0540, B:263:0x056d, B:258:0x0549, B:260:0x055d, B:262:0x0563, B:265:0x0573, B:268:0x0578, B:272:0x0595, B:273:0x059a, B:277:0x05b2, B:278:0x05b7, B:281:0x05d1, B:285:0x05ec, B:286:0x05f0, B:290:0x060c, B:291:0x0610, B:148:0x02b8, B:150:0x02bc, B:159:0x02e7, B:161:0x02f0, B:163:0x02f8, B:165:0x0309, B:166:0x0322, B:168:0x0330, B:175:0x035e, B:177:0x0372, B:179:0x0378, B:181:0x0381, B:182:0x0384, B:171:0x033a, B:173:0x0355, B:174:0x035a, B:186:0x03a1, B:188:0x03ac, B:190:0x03b4, B:192:0x03c5, B:193:0x03d6, B:194:0x03df, B:197:0x03f1, B:201:0x03fa, B:203:0x0401, B:205:0x0409, B:212:0x0434, B:214:0x044e, B:216:0x045b, B:217:0x045f, B:208:0x0412, B:210:0x042c, B:211:0x0431, B:220:0x046c, B:227:0x04a6, B:230:0x04bc, B:232:0x04c0, B:234:0x04cd, B:235:0x04d1, B:223:0x0484, B:225:0x049e, B:226:0x04a3, B:97:0x01ba, B:99:0x01c0, B:100:0x01c7, B:102:0x01cb, B:111:0x0204, B:103:0x01d4, B:105:0x01e7, B:107:0x01ed, B:108:0x01f6, B:110:0x01fe, B:82:0x0185, B:84:0x018d, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0162, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015e), top: B:296:0x0022 }] */
    /* JADX WARN: Removed duplicated region for block: B:269:0x0590  */
    /* JADX WARN: Removed duplicated region for block: B:70:0x0154 A[Catch: Exception -> 0x0626, TryCatch #0 {Exception -> 0x0626, blocks: (B:9:0x0022, B:11:0x002c, B:13:0x003e, B:20:0x004f, B:23:0x0059, B:26:0x005e, B:28:0x0062, B:40:0x0088, B:43:0x008e, B:45:0x0094, B:47:0x009b, B:74:0x016e, B:76:0x0172, B:77:0x0176, B:85:0x0190, B:90:0x0199, B:92:0x019d, B:94:0x01ad, B:96:0x01b1, B:113:0x020a, B:117:0x0227, B:119:0x0242, B:121:0x024a, B:124:0x024f, B:125:0x0256, B:126:0x0259, B:129:0x0288, B:131:0x0290, B:141:0x02a8, B:143:0x02ac, B:146:0x02b2, B:153:0x02c6, B:155:0x02ca, B:239:0x04dc, B:241:0x04f9, B:242:0x0501, B:244:0x0505, B:245:0x0511, B:247:0x0518, B:248:0x0523, B:250:0x0527, B:254:0x053a, B:256:0x0540, B:263:0x056d, B:258:0x0549, B:260:0x055d, B:262:0x0563, B:265:0x0573, B:268:0x0578, B:272:0x0595, B:273:0x059a, B:277:0x05b2, B:278:0x05b7, B:281:0x05d1, B:285:0x05ec, B:286:0x05f0, B:290:0x060c, B:291:0x0610, B:148:0x02b8, B:150:0x02bc, B:159:0x02e7, B:161:0x02f0, B:163:0x02f8, B:165:0x0309, B:166:0x0322, B:168:0x0330, B:175:0x035e, B:177:0x0372, B:179:0x0378, B:181:0x0381, B:182:0x0384, B:171:0x033a, B:173:0x0355, B:174:0x035a, B:186:0x03a1, B:188:0x03ac, B:190:0x03b4, B:192:0x03c5, B:193:0x03d6, B:194:0x03df, B:197:0x03f1, B:201:0x03fa, B:203:0x0401, B:205:0x0409, B:212:0x0434, B:214:0x044e, B:216:0x045b, B:217:0x045f, B:208:0x0412, B:210:0x042c, B:211:0x0431, B:220:0x046c, B:227:0x04a6, B:230:0x04bc, B:232:0x04c0, B:234:0x04cd, B:235:0x04d1, B:223:0x0484, B:225:0x049e, B:226:0x04a3, B:97:0x01ba, B:99:0x01c0, B:100:0x01c7, B:102:0x01cb, B:111:0x0204, B:103:0x01d4, B:105:0x01e7, B:107:0x01ed, B:108:0x01f6, B:110:0x01fe, B:82:0x0185, B:84:0x018d, B:29:0x006a, B:31:0x006e, B:37:0x007e, B:48:0x00ae, B:50:0x00c0, B:51:0x00c5, B:53:0x00ef, B:55:0x0102, B:57:0x0108, B:59:0x010e, B:73:0x0162, B:60:0x0111, B:63:0x0135, B:70:0x0154, B:71:0x015e), top: B:296:0x0022 }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void editMessage(MessageObject messageObject, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str, HashMap<String, String> hashMap, boolean z, boolean z2, Object obj) {
        Object obj2;
        char c;
        Object obj3;
        String str2;
        char c2;
        HashMap<String, String> hashMap2;
        VideoEditedInfo videoEditedInfo2;
        VideoEditedInfo videoEditedInfo3;
        boolean z3;
        String str3;
        String str4;
        boolean z4;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument;
        DelayedMessage delayedMessage;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$InputMedia tLRPC$InputMedia2;
        VideoEditedInfo videoEditedInfo4;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument2;
        String str5;
        HashMap<String, String> hashMap3;
        String str6;
        TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto;
        boolean z5;
        String str7;
        TLRPC$InputMedia tLRPC$InputMedia3;
        TLRPC$Message tLRPC$Message;
        CharSequence charSequence;
        TLRPC$TL_inputMediaWebPage tLRPC$TL_inputMediaWebPage;
        TLRPC$EncryptedChat encryptedChat;
        TLRPC$TL_photo tLRPC$TL_photo2 = tLRPC$TL_photo;
        TLRPC$TL_document tLRPC$TL_document2 = tLRPC$TL_document;
        if (messageObject == null) {
            return;
        }
        HashMap<String, String> hashMap4 = hashMap == null ? new HashMap<>() : hashMap;
        TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
        messageObject.cancelEditing = false;
        try {
            long dialogId = messageObject.getDialogId();
            boolean z6 = !DialogObject.isEncryptedDialog(dialogId) || ((encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(dialogId)))) != null && AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 101);
            if (z) {
                TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
                if (!(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) && tLRPC$MessageMedia != null && !(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaEmpty)) {
                    if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto) {
                        tLRPC$TL_photo2 = (TLRPC$TL_photo) tLRPC$MessageMedia.photo;
                        videoEditedInfo2 = videoEditedInfo;
                        c2 = 2;
                    } else if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument) {
                        tLRPC$TL_document2 = (TLRPC$TL_document) tLRPC$MessageMedia.document;
                        if (!MessageObject.isVideoDocument(tLRPC$TL_document2) && videoEditedInfo == null) {
                            c2 = 7;
                            videoEditedInfo2 = messageObject.videoEditedInfo;
                        }
                        c2 = 3;
                        videoEditedInfo2 = messageObject.videoEditedInfo;
                    } else {
                        videoEditedInfo2 = videoEditedInfo;
                        c2 = 65535;
                    }
                    HashMap<String, String> hashMap5 = tLRPC$Message2.params;
                    Object obj4 = (obj == null || hashMap5 == null || !hashMap5.containsKey("parentObject")) ? obj : hashMap5.get("parentObject");
                    messageObject.editingMessage = tLRPC$Message2.message;
                    messageObject.editingMessageEntities = tLRPC$Message2.entities;
                    str2 = tLRPC$Message2.attachPath;
                    obj2 = "originalPath";
                    obj3 = obj4;
                    hashMap2 = hashMap5;
                }
                videoEditedInfo2 = videoEditedInfo;
                c2 = 1;
                HashMap<String, String> hashMap52 = tLRPC$Message2.params;
                if (obj == null) {
                }
                messageObject.editingMessage = tLRPC$Message2.message;
                messageObject.editingMessageEntities = tLRPC$Message2.entities;
                str2 = tLRPC$Message2.attachPath;
                obj2 = "originalPath";
                obj3 = obj4;
                hashMap2 = hashMap52;
            } else {
                TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$Message2.media;
                messageObject.previousMedia = tLRPC$MessageMedia2;
                messageObject.previousMessage = tLRPC$Message2.message;
                messageObject.previousMessageEntities = tLRPC$Message2.entities;
                messageObject.previousAttachPath = tLRPC$Message2.attachPath;
                if (tLRPC$MessageMedia2 == null) {
                    new TLRPC$TL_messageMediaEmpty();
                }
                SerializedData serializedData = new SerializedData(true);
                writePreviousMessageData(tLRPC$Message2, serializedData);
                SerializedData serializedData2 = new SerializedData(serializedData.length());
                writePreviousMessageData(tLRPC$Message2, serializedData2);
                obj2 = "originalPath";
                hashMap4.put("prevMedia", Base64.encodeToString(serializedData2.toByteArray(), 0));
                serializedData2.cleanup();
                if (tLRPC$TL_photo2 != null) {
                    TLRPC$TL_messageMediaPhoto tLRPC$TL_messageMediaPhoto = new TLRPC$TL_messageMediaPhoto();
                    tLRPC$Message2.media = tLRPC$TL_messageMediaPhoto;
                    tLRPC$TL_messageMediaPhoto.flags |= 3;
                    tLRPC$TL_messageMediaPhoto.photo = tLRPC$TL_photo2;
                    tLRPC$TL_messageMediaPhoto.spoiler = z2;
                    if (str != null && str.length() > 0 && str.startsWith("http")) {
                        tLRPC$Message2.attachPath = str;
                    } else {
                        ArrayList<TLRPC$PhotoSize> arrayList = tLRPC$TL_photo2.sizes;
                        tLRPC$Message2.attachPath = FileLoader.getInstance(this.currentAccount).getPathToAttach(arrayList.get(arrayList.size() - 1).location, true).toString();
                    }
                    c = 2;
                } else if (tLRPC$TL_document2 != null) {
                    TLRPC$TL_messageMediaDocument tLRPC$TL_messageMediaDocument = new TLRPC$TL_messageMediaDocument();
                    tLRPC$Message2.media = tLRPC$TL_messageMediaDocument;
                    tLRPC$TL_messageMediaDocument.flags |= 3;
                    tLRPC$TL_messageMediaDocument.document = tLRPC$TL_document2;
                    tLRPC$TL_messageMediaDocument.spoiler = z2;
                    if (!MessageObject.isVideoDocument(tLRPC$TL_document) && videoEditedInfo == null) {
                        c = 7;
                        if (videoEditedInfo != null) {
                            hashMap4.put("ve", videoEditedInfo.getString());
                        }
                        tLRPC$Message2.attachPath = str;
                    }
                    c = 3;
                    if (videoEditedInfo != null) {
                    }
                    tLRPC$Message2.attachPath = str;
                } else {
                    c = 1;
                }
                tLRPC$Message2.params = hashMap4;
                tLRPC$Message2.send_state = 3;
                obj3 = obj;
                str2 = str;
                c2 = c;
                hashMap2 = hashMap4;
                videoEditedInfo2 = videoEditedInfo;
            }
            if (tLRPC$Message2.attachPath == null) {
                tLRPC$Message2.attachPath = "";
            }
            tLRPC$Message2.local_id = 0;
            int i = messageObject.type;
            TLRPC$TL_document tLRPC$TL_document3 = tLRPC$TL_document2;
            if ((i == 3 || videoEditedInfo2 != null || i == 2) && !TextUtils.isEmpty(tLRPC$Message2.attachPath)) {
                messageObject.attachPathExists = true;
            }
            VideoEditedInfo videoEditedInfo5 = messageObject.videoEditedInfo;
            if (videoEditedInfo5 != null && videoEditedInfo2 == null) {
                videoEditedInfo2 = videoEditedInfo5;
            }
            if (z) {
                videoEditedInfo3 = videoEditedInfo2;
                z3 = z6;
                str3 = "http";
            } else {
                CharSequence charSequence2 = messageObject.editingMessage;
                if (charSequence2 != null) {
                    String str8 = tLRPC$Message2.message;
                    String charSequence3 = charSequence2.toString();
                    tLRPC$Message2.message = charSequence3;
                    videoEditedInfo3 = videoEditedInfo2;
                    messageObject.caption = null;
                    if (c2 == 1) {
                        ArrayList<TLRPC$MessageEntity> arrayList2 = messageObject.editingMessageEntities;
                        if (arrayList2 != null) {
                            tLRPC$Message2.entities = arrayList2;
                            tLRPC$Message2.flags |= 128;
                        } else if (!TextUtils.equals(str8, charSequence3)) {
                            tLRPC$Message2.flags &= -129;
                        }
                    } else {
                        ArrayList<TLRPC$MessageEntity> arrayList3 = messageObject.editingMessageEntities;
                        if (arrayList3 != null) {
                            tLRPC$Message2.entities = arrayList3;
                            tLRPC$Message2.flags |= 128;
                        } else {
                            ArrayList<TLRPC$MessageEntity> entities = getMediaDataController().getEntities(new CharSequence[]{messageObject.editingMessage}, z6);
                            if (entities != null && !entities.isEmpty()) {
                                tLRPC$Message2.entities = entities;
                                tLRPC$Message2.flags |= 128;
                            } else if (!TextUtils.equals(str8, tLRPC$Message2.message)) {
                                tLRPC$Message2.flags &= -129;
                            }
                        }
                        messageObject.generateCaption();
                    }
                } else {
                    videoEditedInfo3 = videoEditedInfo2;
                }
                ArrayList<TLRPC$Message> arrayList4 = new ArrayList<>();
                arrayList4.add(tLRPC$Message2);
                getMessagesStorage().putMessages(arrayList4, false, true, false, 0, messageObject.scheduled ? 1 : 0, 0L);
                getMessagesController().getTopicsController().processEditedMessage(tLRPC$Message2);
                messageObject.type = -1;
                messageObject.setType();
                if (c2 == 1) {
                    TLRPC$MessageMedia tLRPC$MessageMedia3 = messageObject.messageOwner.media;
                    if (!(tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaPhoto) && !(tLRPC$MessageMedia3 instanceof TLRPC$TL_messageMediaDocument)) {
                        messageObject.resetLayout();
                        messageObject.checkLayout();
                    }
                    messageObject.generateCaption();
                }
                messageObject.createMessageSendInfo();
                ArrayList arrayList5 = new ArrayList();
                arrayList5.add(messageObject);
                z3 = z6;
                str3 = "http";
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.replaceMessagesObjects, Long.valueOf(dialogId), arrayList5);
            }
            if (hashMap2 != null) {
                Object obj5 = obj2;
                if (hashMap2.containsKey(obj5)) {
                    str4 = hashMap2.get(obj5);
                    if ((c2 >= 1 || c2 > 3) && (c2 < 5 || c2 > '\b')) {
                        return;
                    }
                    if (c2 == 1) {
                        TLRPC$MessageMedia tLRPC$MessageMedia4 = tLRPC$Message2.media;
                        if ((tLRPC$MessageMedia4 == null || (tLRPC$MessageMedia4 instanceof TLRPC$TL_messageMediaEmpty) || (tLRPC$MessageMedia4 != null && (tLRPC$MessageMedia4.webpage instanceof TLRPC$TL_webPageEmpty))) && !messageObject.editingMessageSearchWebPage) {
                            tLRPC$TL_inputMediaWebPage = new TLRPC$TL_inputMediaEmpty();
                        } else if (tLRPC$MessageMedia4 != null && tLRPC$MessageMedia4.webpage != null) {
                            TLRPC$TL_inputMediaWebPage tLRPC$TL_inputMediaWebPage2 = new TLRPC$TL_inputMediaWebPage();
                            TLRPC$MessageMedia tLRPC$MessageMedia5 = tLRPC$Message2.media;
                            tLRPC$TL_inputMediaWebPage2.url = tLRPC$MessageMedia5.webpage.url;
                            tLRPC$TL_inputMediaWebPage2.force_small_media = tLRPC$MessageMedia5.force_small_media;
                            tLRPC$TL_inputMediaWebPage2.force_large_media = tLRPC$MessageMedia5.force_large_media;
                            tLRPC$TL_inputMediaWebPage = tLRPC$TL_inputMediaWebPage2;
                        }
                        z4 = false;
                        tLRPC$InputMedia3 = tLRPC$TL_inputMediaWebPage;
                        delayedMessage = null;
                        tLRPC$InputMedia2 = tLRPC$InputMedia3;
                        TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = new TLRPC$TL_messages_editMessage();
                        tLRPC$TL_messages_editMessage.id = messageObject.getId();
                        tLRPC$TL_messages_editMessage.peer = getMessagesController().getInputPeer(dialogId);
                        tLRPC$Message = messageObject.messageOwner;
                        tLRPC$TL_messages_editMessage.invert_media = tLRPC$Message.invert_media;
                        if (tLRPC$InputMedia2 != null) {
                            tLRPC$TL_messages_editMessage.flags |= LiteMode.FLAG_ANIMATED_EMOJI_KEYBOARD_NOT_PREMIUM;
                            tLRPC$TL_messages_editMessage.media = tLRPC$InputMedia2;
                        }
                        if (messageObject.scheduled) {
                            tLRPC$TL_messages_editMessage.schedule_date = tLRPC$Message.date;
                            tLRPC$TL_messages_editMessage.flags |= LiteMode.FLAG_CHAT_SCALE;
                        }
                        if ((tLRPC$Message.flags & 1073741824) != 0) {
                            tLRPC$TL_messages_editMessage.quick_reply_shortcut_id = tLRPC$Message.quick_reply_shortcut_id;
                            tLRPC$TL_messages_editMessage.flags |= 131072;
                        }
                        charSequence = messageObject.editingMessage;
                        if (charSequence != null) {
                            tLRPC$TL_messages_editMessage.message = charSequence.toString();
                            int i2 = tLRPC$TL_messages_editMessage.flags | 2048;
                            tLRPC$TL_messages_editMessage.flags = i2;
                            tLRPC$TL_messages_editMessage.no_webpage = !messageObject.editingMessageSearchWebPage;
                            ArrayList<TLRPC$MessageEntity> arrayList6 = messageObject.editingMessageEntities;
                            if (arrayList6 != null) {
                                tLRPC$TL_messages_editMessage.entities = arrayList6;
                                tLRPC$TL_messages_editMessage.flags = i2 | 8;
                            } else {
                                ArrayList<TLRPC$MessageEntity> entities2 = getMediaDataController().getEntities(new CharSequence[]{messageObject.editingMessage}, z3);
                                if (entities2 != null && !entities2.isEmpty()) {
                                    tLRPC$TL_messages_editMessage.entities = entities2;
                                    tLRPC$TL_messages_editMessage.flags |= 8;
                                }
                            }
                            messageObject.editingMessage = null;
                            messageObject.editingMessageEntities = null;
                        }
                        if (delayedMessage != null) {
                            delayedMessage.sendRequest = tLRPC$TL_messages_editMessage;
                        }
                        if (c2 == 1) {
                            performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, null, delayedMessage, obj3, hashMap2, messageObject.scheduled);
                            return;
                        } else if (c2 == 2) {
                            if (z4) {
                                performSendDelayedMessage(delayedMessage);
                                return;
                            } else {
                                performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str4, null, true, delayedMessage, obj3, hashMap2, messageObject.scheduled);
                                return;
                            }
                        } else {
                            HashMap<String, String> hashMap6 = hashMap2;
                            if (c2 == 3) {
                                if (z4) {
                                    performSendDelayedMessage(delayedMessage);
                                    return;
                                } else {
                                    performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str4, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                    return;
                                }
                            } else if (c2 == 6) {
                                performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str4, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                return;
                            } else if (c2 == 7) {
                                if (z4) {
                                    performSendDelayedMessage(delayedMessage);
                                    return;
                                } else {
                                    performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str4, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                    return;
                                }
                            } else if (c2 == '\b') {
                                if (z4) {
                                    performSendDelayedMessage(delayedMessage);
                                    return;
                                } else {
                                    performSendMessageRequest(tLRPC$TL_messages_editMessage, messageObject, str4, delayedMessage, obj3, hashMap6, messageObject.scheduled);
                                    return;
                                }
                            } else {
                                return;
                            }
                        }
                    }
                    if (c2 == 2) {
                        TLRPC$InputMedia tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                        tLRPC$TL_inputMediaUploadedPhoto.spoiler = z2;
                        if (hashMap2 == null || (str7 = hashMap2.get("masks")) == null) {
                            hashMap3 = hashMap2;
                        } else {
                            SerializedData serializedData3 = new SerializedData(Utilities.hexToBytes(str7));
                            boolean z7 = false;
                            int readInt32 = serializedData3.readInt32(false);
                            int i3 = 0;
                            while (i3 < readInt32) {
                                tLRPC$TL_inputMediaUploadedPhoto.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData3, serializedData3.readInt32(z7), z7));
                                i3++;
                                readInt32 = readInt32;
                                hashMap2 = hashMap2;
                                z7 = false;
                            }
                            hashMap3 = hashMap2;
                            tLRPC$TL_inputMediaUploadedPhoto.flags |= 1;
                            serializedData3.cleanup();
                        }
                        if (tLRPC$TL_photo2.access_hash == 0) {
                            tLRPC$TL_inputMediaPhoto = tLRPC$TL_inputMediaUploadedPhoto;
                            str6 = str2;
                            z5 = true;
                        } else {
                            TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto2 = new TLRPC$TL_inputMediaPhoto();
                            TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                            tLRPC$TL_inputMediaPhoto2.id = tLRPC$TL_inputPhoto;
                            str6 = str2;
                            tLRPC$TL_inputPhoto.id = tLRPC$TL_photo2.id;
                            tLRPC$TL_inputPhoto.access_hash = tLRPC$TL_photo2.access_hash;
                            byte[] bArr = tLRPC$TL_photo2.file_reference;
                            tLRPC$TL_inputPhoto.file_reference = bArr;
                            if (bArr == null) {
                                tLRPC$TL_inputPhoto.file_reference = new byte[0];
                            }
                            tLRPC$TL_inputMediaPhoto2.spoiler = z2;
                            tLRPC$TL_inputMediaPhoto = tLRPC$TL_inputMediaPhoto2;
                            z5 = false;
                        }
                        DelayedMessage delayedMessage2 = new DelayedMessage(dialogId);
                        delayedMessage2.type = 0;
                        delayedMessage2.obj = messageObject;
                        delayedMessage2.originalPath = str4;
                        delayedMessage2.parentObject = obj3;
                        delayedMessage2.inputUploadMedia = tLRPC$TL_inputMediaUploadedPhoto;
                        delayedMessage2.performMediaUpload = z5;
                        if (str6 != null && str6.length() > 0) {
                            String str9 = str6;
                            if (str9.startsWith(str3)) {
                                delayedMessage2.httpLocation = str9;
                                hashMap2 = hashMap3;
                                delayedMessage = delayedMessage2;
                                z4 = z5;
                                tLRPC$InputMedia2 = tLRPC$TL_inputMediaPhoto;
                            }
                        }
                        ArrayList<TLRPC$PhotoSize> arrayList7 = tLRPC$TL_photo2.sizes;
                        delayedMessage2.photoSize = arrayList7.get(arrayList7.size() - 1);
                        delayedMessage2.locationParent = tLRPC$TL_photo2;
                        hashMap2 = hashMap3;
                        delayedMessage = delayedMessage2;
                        z4 = z5;
                        tLRPC$InputMedia2 = tLRPC$TL_inputMediaPhoto;
                    } else {
                        HashMap<String, String> hashMap7 = hashMap2;
                        if (c2 == 3) {
                            TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                            tLRPC$TL_inputMediaUploadedDocument.spoiler = z2;
                            hashMap2 = hashMap7;
                            if (hashMap7 != null && (str5 = hashMap2.get("masks")) != null) {
                                SerializedData serializedData4 = new SerializedData(Utilities.hexToBytes(str5));
                                boolean z8 = false;
                                int readInt322 = serializedData4.readInt32(false);
                                int i4 = 0;
                                while (i4 < readInt322) {
                                    tLRPC$TL_inputMediaUploadedDocument.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData4, serializedData4.readInt32(z8), z8));
                                    i4++;
                                    z8 = false;
                                }
                                tLRPC$TL_inputMediaUploadedDocument.flags |= 1;
                                serializedData4.cleanup();
                            }
                            tLRPC$TL_inputMediaUploadedDocument.mime_type = tLRPC$TL_document3.mime_type;
                            tLRPC$TL_inputMediaUploadedDocument.attributes = tLRPC$TL_document3.attributes;
                            if (messageObject.isGif()) {
                                videoEditedInfo4 = videoEditedInfo3;
                            } else {
                                if (videoEditedInfo3 != null) {
                                    videoEditedInfo4 = videoEditedInfo3;
                                    if (!videoEditedInfo4.muted) {
                                    }
                                } else {
                                    videoEditedInfo4 = videoEditedInfo3;
                                }
                                tLRPC$TL_inputMediaUploadedDocument.nosound_video = true;
                                if (BuildVars.DEBUG_VERSION) {
                                    FileLog.d("nosound_video = true");
                                }
                            }
                            if (tLRPC$TL_document3.access_hash == 0) {
                                tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaUploadedDocument;
                                z4 = true;
                            } else {
                                TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument3 = new TLRPC$TL_inputMediaDocument();
                                TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                                tLRPC$TL_inputMediaDocument3.id = tLRPC$TL_inputDocument;
                                tLRPC$TL_inputDocument.id = tLRPC$TL_document3.id;
                                tLRPC$TL_inputDocument.access_hash = tLRPC$TL_document3.access_hash;
                                byte[] bArr2 = tLRPC$TL_document3.file_reference;
                                tLRPC$TL_inputDocument.file_reference = bArr2;
                                if (bArr2 == null) {
                                    tLRPC$TL_inputDocument.file_reference = new byte[0];
                                }
                                tLRPC$TL_inputMediaDocument3.spoiler = z2;
                                z4 = false;
                                tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaDocument3;
                            }
                            delayedMessage = new DelayedMessage(dialogId);
                            delayedMessage.type = 1;
                            delayedMessage.obj = messageObject;
                            delayedMessage.originalPath = str4;
                            delayedMessage.parentObject = obj3;
                            delayedMessage.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument;
                            delayedMessage.performMediaUpload = z4;
                            if (!tLRPC$TL_document3.thumbs.isEmpty()) {
                                TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$TL_document3.thumbs.get(0);
                                if (!(tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                                    delayedMessage.photoSize = tLRPC$PhotoSize;
                                    delayedMessage.locationParent = tLRPC$TL_document3;
                                }
                            }
                            delayedMessage.videoEditedInfo = videoEditedInfo4;
                            tLRPC$InputMedia = tLRPC$TL_inputMediaDocument2;
                        } else {
                            VideoEditedInfo videoEditedInfo6 = videoEditedInfo3;
                            hashMap2 = hashMap7;
                            if (c2 == 7) {
                                TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument2 = new TLRPC$TL_inputMediaUploadedDocument();
                                tLRPC$TL_inputMediaUploadedDocument2.mime_type = tLRPC$TL_document3.mime_type;
                                tLRPC$TL_inputMediaUploadedDocument2.attributes = tLRPC$TL_document3.attributes;
                                tLRPC$TL_inputMediaUploadedDocument2.spoiler = z2;
                                if (tLRPC$TL_document3.access_hash == 0) {
                                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaUploadedDocument2;
                                    z4 = true;
                                } else {
                                    TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument4 = new TLRPC$TL_inputMediaDocument();
                                    TLRPC$TL_inputDocument tLRPC$TL_inputDocument2 = new TLRPC$TL_inputDocument();
                                    tLRPC$TL_inputMediaDocument4.id = tLRPC$TL_inputDocument2;
                                    tLRPC$TL_inputDocument2.id = tLRPC$TL_document3.id;
                                    tLRPC$TL_inputDocument2.access_hash = tLRPC$TL_document3.access_hash;
                                    byte[] bArr3 = tLRPC$TL_document3.file_reference;
                                    tLRPC$TL_inputDocument2.file_reference = bArr3;
                                    if (bArr3 == null) {
                                        tLRPC$TL_inputDocument2.file_reference = new byte[0];
                                    }
                                    tLRPC$TL_inputMediaDocument4.spoiler = z2;
                                    z4 = false;
                                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument4;
                                }
                                delayedMessage = new DelayedMessage(dialogId);
                                delayedMessage.originalPath = str4;
                                delayedMessage.type = 2;
                                delayedMessage.obj = messageObject;
                                if (!tLRPC$TL_document3.thumbs.isEmpty() && (videoEditedInfo6 == null || !videoEditedInfo6.isSticker)) {
                                    TLRPC$PhotoSize tLRPC$PhotoSize2 = tLRPC$TL_document3.thumbs.get(0);
                                    if (!(tLRPC$PhotoSize2 instanceof TLRPC$TL_photoStrippedSize)) {
                                        delayedMessage.photoSize = tLRPC$PhotoSize2;
                                        delayedMessage.locationParent = tLRPC$TL_document3;
                                    }
                                }
                                delayedMessage.parentObject = obj3;
                                delayedMessage.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument2;
                                delayedMessage.performMediaUpload = z4;
                                tLRPC$InputMedia = tLRPC$TL_inputMediaDocument;
                            }
                        }
                        tLRPC$InputMedia2 = tLRPC$InputMedia;
                    }
                    TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage2 = new TLRPC$TL_messages_editMessage();
                    tLRPC$TL_messages_editMessage2.id = messageObject.getId();
                    tLRPC$TL_messages_editMessage2.peer = getMessagesController().getInputPeer(dialogId);
                    tLRPC$Message = messageObject.messageOwner;
                    tLRPC$TL_messages_editMessage2.invert_media = tLRPC$Message.invert_media;
                    if (tLRPC$InputMedia2 != null) {
                    }
                    if (messageObject.scheduled) {
                    }
                    if ((tLRPC$Message.flags & 1073741824) != 0) {
                    }
                    charSequence = messageObject.editingMessage;
                    if (charSequence != null) {
                    }
                    if (delayedMessage != null) {
                    }
                    if (c2 == 1) {
                    }
                    z4 = false;
                    tLRPC$InputMedia3 = null;
                    delayedMessage = null;
                    tLRPC$InputMedia2 = tLRPC$InputMedia3;
                    TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage22 = new TLRPC$TL_messages_editMessage();
                    tLRPC$TL_messages_editMessage22.id = messageObject.getId();
                    tLRPC$TL_messages_editMessage22.peer = getMessagesController().getInputPeer(dialogId);
                    tLRPC$Message = messageObject.messageOwner;
                    tLRPC$TL_messages_editMessage22.invert_media = tLRPC$Message.invert_media;
                    if (tLRPC$InputMedia2 != null) {
                    }
                    if (messageObject.scheduled) {
                    }
                    if ((tLRPC$Message.flags & 1073741824) != 0) {
                    }
                    charSequence = messageObject.editingMessage;
                    if (charSequence != null) {
                    }
                    if (delayedMessage != null) {
                    }
                    if (c2 == 1) {
                    }
                }
            }
            str4 = null;
            if (c2 >= 1) {
            }
        } catch (Exception e) {
            FileLog.e(e);
            revertEditingMessageObject(messageObject);
        }
    }

    public int editMessage(MessageObject messageObject, String str, boolean z, final BaseFragment baseFragment, ArrayList<TLRPC$MessageEntity> arrayList, int i) {
        if (baseFragment == null || baseFragment.getParentActivity() == null) {
            return 0;
        }
        final TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = new TLRPC$TL_messages_editMessage();
        tLRPC$TL_messages_editMessage.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (str != null) {
            tLRPC$TL_messages_editMessage.message = str;
            tLRPC$TL_messages_editMessage.flags |= 2048;
            tLRPC$TL_messages_editMessage.no_webpage = !z;
        }
        tLRPC$TL_messages_editMessage.id = messageObject.getId();
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        if (tLRPC$Message != null && (tLRPC$Message.flags & 1073741824) != 0) {
            tLRPC$TL_messages_editMessage.quick_reply_shortcut_id = tLRPC$Message.quick_reply_shortcut_id;
            tLRPC$TL_messages_editMessage.flags |= 131072;
        }
        if (arrayList != null) {
            tLRPC$TL_messages_editMessage.entities = arrayList;
            tLRPC$TL_messages_editMessage.flags |= 8;
        }
        if (i != 0) {
            tLRPC$TL_messages_editMessage.schedule_date = i;
            tLRPC$TL_messages_editMessage.flags |= LiteMode.FLAG_CHAT_SCALE;
        }
        return getConnectionsManager().sendRequest(tLRPC$TL_messages_editMessage, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda92
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$editMessage$16(baseFragment, tLRPC$TL_messages_editMessage, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$editMessage$16(final BaseFragment baseFragment, final TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage, TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
        } else {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda57
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$editMessage$15(tLRPC$TL_error, baseFragment, tLRPC$TL_messages_editMessage);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$editMessage$15(TLRPC$TL_error tLRPC$TL_error, BaseFragment baseFragment, TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage) {
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, baseFragment, tLRPC$TL_messages_editMessage, new Object[0]);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void sendLocation(Location location) {
        TLRPC$TL_messageMediaGeo tLRPC$TL_messageMediaGeo = new TLRPC$TL_messageMediaGeo();
        TLRPC$TL_geoPoint tLRPC$TL_geoPoint = new TLRPC$TL_geoPoint();
        tLRPC$TL_messageMediaGeo.geo = tLRPC$TL_geoPoint;
        tLRPC$TL_geoPoint.lat = AndroidUtilities.fixLocationCoord(location.getLatitude());
        tLRPC$TL_messageMediaGeo.geo._long = AndroidUtilities.fixLocationCoord(location.getLongitude());
        for (Map.Entry<String, MessageObject> entry : this.waitingForLocation.entrySet()) {
            MessageObject value = entry.getValue();
            sendMessage(SendMessageParams.of((TLRPC$MessageMedia) tLRPC$TL_messageMediaGeo, value.getDialogId(), value, (MessageObject) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0));
        }
    }

    public void sendCurrentLocation(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(messageObject.getDialogId());
        sb.append("_");
        sb.append(messageObject.getId());
        sb.append("_");
        sb.append(Utilities.bytesToHex(tLRPC$KeyboardButton.data));
        sb.append("_");
        sb.append(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame ? "1" : "0");
        this.waitingForLocation.put(sb.toString(), messageObject);
        this.locationProvider.start();
    }

    public boolean isSendingCurrentLocation(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return false;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(messageObject.getDialogId());
        sb.append("_");
        sb.append(messageObject.getId());
        sb.append("_");
        sb.append(Utilities.bytesToHex(tLRPC$KeyboardButton.data));
        sb.append("_");
        sb.append(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame ? "1" : "0");
        return this.waitingForLocation.containsKey(sb.toString());
    }

    public void sendNotificationCallback(final long j, final int i, final byte[] bArr) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda25
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendNotificationCallback$19(j, i, bArr);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendNotificationCallback$19(long j, int i, byte[] bArr) {
        TLRPC$Chat chatSync;
        TLRPC$User userSync;
        final String str = j + "_" + i + "_" + Utilities.bytesToHex(bArr) + "_0";
        this.waitingForCallback.put(str, Boolean.TRUE);
        final List<String> list = this.waitingForCallbackMap.get(j + "_" + i);
        if (list == null) {
            ArrayList arrayList = new ArrayList();
            this.waitingForCallbackMap.put(j + "_" + i, arrayList);
            list = arrayList;
        }
        list.add(str);
        if (DialogObject.isUserDialog(j)) {
            if (getMessagesController().getUser(Long.valueOf(j)) == null && (userSync = getMessagesStorage().getUserSync(j)) != null) {
                getMessagesController().putUser(userSync, true);
            }
        } else {
            long j2 = -j;
            if (getMessagesController().getChat(Long.valueOf(j2)) == null && (chatSync = getMessagesStorage().getChatSync(j2)) != null) {
                getMessagesController().putChat(chatSync, true);
            }
        }
        TLRPC$TL_messages_getBotCallbackAnswer tLRPC$TL_messages_getBotCallbackAnswer = new TLRPC$TL_messages_getBotCallbackAnswer();
        tLRPC$TL_messages_getBotCallbackAnswer.peer = getMessagesController().getInputPeer(j);
        tLRPC$TL_messages_getBotCallbackAnswer.msg_id = i;
        tLRPC$TL_messages_getBotCallbackAnswer.game = false;
        if (bArr != null) {
            tLRPC$TL_messages_getBotCallbackAnswer.flags |= 1;
            tLRPC$TL_messages_getBotCallbackAnswer.data = bArr;
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_getBotCallbackAnswer, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda85
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendNotificationCallback$18(str, list, tLObject, tLRPC$TL_error);
            }
        }, 2);
        getMessagesController().markDialogAsRead(j, i, i, 0, false, 0L, 0, true, 0);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendNotificationCallback$18(final String str, final List list, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda30
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendNotificationCallback$17(str, list);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendNotificationCallback$17(String str, List list) {
        this.waitingForCallback.remove(str);
        list.remove(str);
    }

    public void onMessageEdited(TLRPC$Message tLRPC$Message) {
        if (tLRPC$Message == null || tLRPC$Message.reply_markup == null) {
            return;
        }
        HashMap<String, List<String>> hashMap = this.waitingForCallbackMap;
        List<String> remove = hashMap.remove(tLRPC$Message.dialog_id + "_" + tLRPC$Message.id);
        if (remove != null) {
            for (String str : remove) {
                this.waitingForCallback.remove(str);
            }
        }
    }

    public byte[] isSendingVote(MessageObject messageObject) {
        if (messageObject == null) {
            return null;
        }
        return this.waitingForVote.get("poll_" + messageObject.getPollId());
    }

    public int sendVote(final MessageObject messageObject, ArrayList<TLRPC$PollAnswer> arrayList, final Runnable runnable) {
        byte[] bArr;
        if (messageObject == null) {
            return 0;
        }
        final String str = "poll_" + messageObject.getPollId();
        if (this.waitingForCallback.containsKey(str)) {
            return 0;
        }
        TLRPC$TL_messages_sendVote tLRPC$TL_messages_sendVote = new TLRPC$TL_messages_sendVote();
        tLRPC$TL_messages_sendVote.msg_id = messageObject.getId();
        tLRPC$TL_messages_sendVote.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (arrayList != null) {
            bArr = new byte[arrayList.size()];
            for (int i = 0; i < arrayList.size(); i++) {
                TLRPC$PollAnswer tLRPC$PollAnswer = arrayList.get(i);
                tLRPC$TL_messages_sendVote.options.add(tLRPC$PollAnswer.option);
                bArr[i] = tLRPC$PollAnswer.option[0];
            }
        } else {
            bArr = new byte[0];
        }
        this.waitingForVote.put(str, bArr);
        return getConnectionsManager().sendRequest(tLRPC$TL_messages_sendVote, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda88
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendVote$21(messageObject, str, runnable, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendVote$21(MessageObject messageObject, final String str, final Runnable runnable, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            this.voteSendTime.put(messageObject.getPollId(), 0L);
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
            this.voteSendTime.put(messageObject.getPollId(), Long.valueOf(SystemClock.elapsedRealtime()));
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda27
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendVote$20(str, runnable);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendVote$20(String str, Runnable runnable) {
        this.waitingForVote.remove(str);
        if (runnable != null) {
            runnable.run();
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public long getVoteSendTime(long j) {
        return this.voteSendTime.get(j, 0L).longValue();
    }

    public void sendReaction(MessageObject messageObject, ArrayList<ReactionsLayoutInBubble.VisibleReaction> arrayList, ReactionsLayoutInBubble.VisibleReaction visibleReaction, boolean z, boolean z2, BaseFragment baseFragment, final Runnable runnable) {
        if (messageObject == null || baseFragment == null) {
            return;
        }
        TLRPC$TL_messages_sendReaction tLRPC$TL_messages_sendReaction = new TLRPC$TL_messages_sendReaction();
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        if (tLRPC$Message.isThreadMessage && tLRPC$Message.fwd_from != null) {
            tLRPC$TL_messages_sendReaction.peer = getMessagesController().getInputPeer(messageObject.getFromChatId());
            tLRPC$TL_messages_sendReaction.msg_id = messageObject.messageOwner.fwd_from.saved_from_msg_id;
        } else {
            tLRPC$TL_messages_sendReaction.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
            tLRPC$TL_messages_sendReaction.msg_id = messageObject.getId();
        }
        tLRPC$TL_messages_sendReaction.add_to_recent = z2;
        if (z2 && visibleReaction != null) {
            MediaDataController.getInstance(this.currentAccount).recentReactions.add(0, ReactionsUtils.toTLReaction(visibleReaction));
        }
        if (arrayList != null && !arrayList.isEmpty()) {
            for (int i = 0; i < arrayList.size(); i++) {
                ReactionsLayoutInBubble.VisibleReaction visibleReaction2 = arrayList.get(i);
                if (visibleReaction2.documentId != 0) {
                    TLRPC$TL_reactionCustomEmoji tLRPC$TL_reactionCustomEmoji = new TLRPC$TL_reactionCustomEmoji();
                    tLRPC$TL_reactionCustomEmoji.document_id = visibleReaction2.documentId;
                    tLRPC$TL_messages_sendReaction.reaction.add(tLRPC$TL_reactionCustomEmoji);
                    tLRPC$TL_messages_sendReaction.flags |= 1;
                } else if (visibleReaction2.emojicon != null) {
                    TLRPC$TL_reactionEmoji tLRPC$TL_reactionEmoji = new TLRPC$TL_reactionEmoji();
                    tLRPC$TL_reactionEmoji.emoticon = visibleReaction2.emojicon;
                    tLRPC$TL_messages_sendReaction.reaction.add(tLRPC$TL_reactionEmoji);
                    tLRPC$TL_messages_sendReaction.flags |= 1;
                }
            }
        }
        if (z) {
            tLRPC$TL_messages_sendReaction.flags |= 2;
            tLRPC$TL_messages_sendReaction.big = true;
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendReaction, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda84
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendReaction$22(runnable, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendReaction$22(Runnable runnable, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLObject != null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
            if (runnable != null) {
                AndroidUtilities.runOnUIThread(runnable);
            }
        }
    }

    public void requestUrlAuth(final String str, final ChatActivity chatActivity, final boolean z) {
        final TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth = new TLRPC$TL_messages_requestUrlAuth();
        tLRPC$TL_messages_requestUrlAuth.url = str;
        tLRPC$TL_messages_requestUrlAuth.flags |= 4;
        getConnectionsManager().sendRequest(tLRPC$TL_messages_requestUrlAuth, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda94
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.lambda$requestUrlAuth$23(ChatActivity.this, tLRPC$TL_messages_requestUrlAuth, str, z, tLObject, tLRPC$TL_error);
            }
        }, 2);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$requestUrlAuth$23(ChatActivity chatActivity, TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth, String str, boolean z, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLObject != null) {
            if (tLObject instanceof TLRPC$TL_urlAuthResultRequest) {
                chatActivity.showRequestUrlAlert((TLRPC$TL_urlAuthResultRequest) tLObject, tLRPC$TL_messages_requestUrlAuth, str, z);
                return;
            } else if (tLObject instanceof TLRPC$TL_urlAuthResultAccepted) {
                AlertsCreator.showOpenUrlAlert(chatActivity, ((TLRPC$TL_urlAuthResultAccepted) tLObject).url, false, false);
                return;
            } else if (tLObject instanceof TLRPC$TL_urlAuthResultDefault) {
                AlertsCreator.showOpenUrlAlert(chatActivity, str, false, z);
                return;
            } else {
                return;
            }
        }
        AlertsCreator.showOpenUrlAlert(chatActivity, str, false, z);
    }

    public void sendCallback(boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity) {
        lambda$sendCallback$26(z, messageObject, tLRPC$KeyboardButton, null, null, chatActivity);
    }

    /* JADX WARN: Removed duplicated region for block: B:20:0x0084  */
    /* JADX WARN: Removed duplicated region for block: B:21:0x00aa  */
    /* JADX WARN: Removed duplicated region for block: B:24:0x00d1  */
    /* JADX WARN: Removed duplicated region for block: B:25:0x00da  */
    /* renamed from: sendCallback */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void lambda$sendCallback$26(final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, final TwoStepVerificationActivity twoStepVerificationActivity, final ChatActivity chatActivity) {
        boolean z2;
        int i;
        List<String> list;
        final ArrayList arrayList;
        if (messageObject == null || tLRPC$KeyboardButton == null || chatActivity == null) {
            return;
        }
        boolean z3 = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth;
        if (z3) {
            i = 3;
        } else if (!(tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame)) {
            if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                z2 = z;
                i = 2;
            } else {
                z2 = z;
                i = 0;
            }
            final String str = messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i;
            this.waitingForCallback.put(str, Boolean.TRUE);
            list = this.waitingForCallbackMap.get(messageObject.getDialogId() + "_" + messageObject.getId());
            if (list != null) {
                ArrayList arrayList2 = new ArrayList();
                this.waitingForCallbackMap.put(messageObject.getDialogId() + "_" + messageObject.getId(), arrayList2);
                arrayList = arrayList2;
            } else {
                arrayList = list;
            }
            arrayList.add(str);
            final TLObject[] tLObjectArr = new TLObject[1];
            final boolean z4 = z2;
            RequestDelegate requestDelegate = new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda86
                @Override // org.telegram.tgnet.RequestDelegate
                public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                    SendMessagesHelper.this.lambda$sendCallback$32(str, arrayList, z4, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr, tLRPC$InputCheckPasswordSRP, z, tLObject, tLRPC$TL_error);
                }
            };
            if (!z2) {
                getMessagesStorage().getBotCache(str, requestDelegate);
                return;
            } else if (z3) {
                TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth = new TLRPC$TL_messages_requestUrlAuth();
                tLRPC$TL_messages_requestUrlAuth.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                tLRPC$TL_messages_requestUrlAuth.msg_id = messageObject.getId();
                tLRPC$TL_messages_requestUrlAuth.button_id = tLRPC$KeyboardButton.button_id;
                tLRPC$TL_messages_requestUrlAuth.flags |= 2;
                tLObjectArr[0] = tLRPC$TL_messages_requestUrlAuth;
                getConnectionsManager().sendRequest(tLRPC$TL_messages_requestUrlAuth, requestDelegate, 2);
                return;
            } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                if ((messageObject.messageOwner.media.flags & 4) == 0) {
                    TLRPC$TL_payments_getPaymentForm tLRPC$TL_payments_getPaymentForm = new TLRPC$TL_payments_getPaymentForm();
                    TLRPC$TL_inputInvoiceMessage tLRPC$TL_inputInvoiceMessage = new TLRPC$TL_inputInvoiceMessage();
                    tLRPC$TL_inputInvoiceMessage.msg_id = messageObject.getId();
                    tLRPC$TL_inputInvoiceMessage.peer = getMessagesController().getInputPeer(messageObject.messageOwner.peer_id);
                    tLRPC$TL_payments_getPaymentForm.invoice = tLRPC$TL_inputInvoiceMessage;
                    JSONObject makeThemeParams = BotWebViewSheet.makeThemeParams(null);
                    if (makeThemeParams != null) {
                        TLRPC$TL_dataJSON tLRPC$TL_dataJSON = new TLRPC$TL_dataJSON();
                        tLRPC$TL_payments_getPaymentForm.theme_params = tLRPC$TL_dataJSON;
                        tLRPC$TL_dataJSON.data = makeThemeParams.toString();
                        tLRPC$TL_payments_getPaymentForm.flags |= 1;
                    }
                    tLObjectArr[0] = tLRPC$TL_payments_getPaymentForm;
                    getConnectionsManager().sendRequest(tLRPC$TL_payments_getPaymentForm, requestDelegate, 2);
                    return;
                }
                TLRPC$TL_payments_getPaymentReceipt tLRPC$TL_payments_getPaymentReceipt = new TLRPC$TL_payments_getPaymentReceipt();
                tLRPC$TL_payments_getPaymentReceipt.msg_id = messageObject.messageOwner.media.receipt_msg_id;
                tLRPC$TL_payments_getPaymentReceipt.peer = getMessagesController().getInputPeer(messageObject.messageOwner.peer_id);
                tLObjectArr[0] = tLRPC$TL_payments_getPaymentReceipt;
                getConnectionsManager().sendRequest(tLRPC$TL_payments_getPaymentReceipt, requestDelegate, 2);
                return;
            } else {
                TLRPC$TL_messages_getBotCallbackAnswer tLRPC$TL_messages_getBotCallbackAnswer = new TLRPC$TL_messages_getBotCallbackAnswer();
                tLRPC$TL_messages_getBotCallbackAnswer.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                tLRPC$TL_messages_getBotCallbackAnswer.msg_id = messageObject.getId();
                tLRPC$TL_messages_getBotCallbackAnswer.game = tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame;
                if (tLRPC$KeyboardButton.requires_password) {
                    TLRPC$InputCheckPasswordSRP tLRPC$TL_inputCheckPasswordEmpty = tLRPC$InputCheckPasswordSRP != null ? tLRPC$InputCheckPasswordSRP : new TLRPC$TL_inputCheckPasswordEmpty();
                    tLRPC$TL_messages_getBotCallbackAnswer.password = tLRPC$TL_inputCheckPasswordEmpty;
                    tLRPC$TL_messages_getBotCallbackAnswer.password = tLRPC$TL_inputCheckPasswordEmpty;
                    tLRPC$TL_messages_getBotCallbackAnswer.flags |= 4;
                }
                byte[] bArr = tLRPC$KeyboardButton.data;
                if (bArr != null) {
                    tLRPC$TL_messages_getBotCallbackAnswer.flags |= 1;
                    tLRPC$TL_messages_getBotCallbackAnswer.data = bArr;
                }
                getConnectionsManager().sendRequest(tLRPC$TL_messages_getBotCallbackAnswer, requestDelegate, 2);
                return;
            }
        } else {
            i = 1;
        }
        z2 = false;
        final String str2 = messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i;
        this.waitingForCallback.put(str2, Boolean.TRUE);
        list = this.waitingForCallbackMap.get(messageObject.getDialogId() + "_" + messageObject.getId());
        if (list != null) {
        }
        arrayList.add(str2);
        final TLObject[] tLObjectArr2 = new TLObject[1];
        final boolean z42 = z2;
        RequestDelegate requestDelegate2 = new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda86
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendCallback$32(str2, arrayList, z42, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr2, tLRPC$InputCheckPasswordSRP, z, tLObject, tLRPC$TL_error);
            }
        };
        if (!z2) {
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$32(final String str, final List list, final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, final TwoStepVerificationActivity twoStepVerificationActivity, final TLObject[] tLObjectArr, final TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, final boolean z2, final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda31
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendCallback$31(str, list, z, tLObject, messageObject, tLRPC$KeyboardButton, chatActivity, twoStepVerificationActivity, tLObjectArr, tLRPC$TL_error, tLRPC$InputCheckPasswordSRP, z2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$31(final String str, final List list, boolean z, TLObject tLObject, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, final TwoStepVerificationActivity twoStepVerificationActivity, TLObject[] tLObjectArr, TLRPC$TL_error tLRPC$TL_error, TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP, final boolean z2) {
        String str2;
        this.waitingForCallback.remove(str);
        list.remove(str);
        boolean z3 = false;
        if (z && tLObject == null) {
            sendCallback(false, messageObject, tLRPC$KeyboardButton, chatActivity);
            return;
        }
        if (tLObject != null) {
            if (twoStepVerificationActivity != null) {
                twoStepVerificationActivity.needHideProgress();
                twoStepVerificationActivity.finishFragment();
            }
            long fromChatId = messageObject.getFromChatId();
            long j = messageObject.messageOwner.via_bot_id;
            if (j != 0) {
                fromChatId = j;
            }
            if (fromChatId > 0) {
                TLRPC$User user = getMessagesController().getUser(Long.valueOf(fromChatId));
                if (user != null) {
                    str2 = ContactsController.formatName(user.first_name, user.last_name);
                }
                str2 = null;
            } else {
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(-fromChatId));
                if (chat != null) {
                    str2 = chat.title;
                }
                str2 = null;
            }
            if (str2 == null) {
                str2 = "bot";
            }
            if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth) {
                if (tLObject instanceof TLRPC$TL_urlAuthResultRequest) {
                    chatActivity.showRequestUrlAlert((TLRPC$TL_urlAuthResultRequest) tLObject, (TLRPC$TL_messages_requestUrlAuth) tLObjectArr[0], tLRPC$KeyboardButton.url, false);
                } else if (tLObject instanceof TLRPC$TL_urlAuthResultAccepted) {
                    AlertsCreator.showOpenUrlAlert(chatActivity, ((TLRPC$TL_urlAuthResultAccepted) tLObject).url, false, false);
                } else if (tLObject instanceof TLRPC$TL_urlAuthResultDefault) {
                    TLRPC$TL_urlAuthResultDefault tLRPC$TL_urlAuthResultDefault = (TLRPC$TL_urlAuthResultDefault) tLObject;
                    AlertsCreator.showOpenUrlAlert(chatActivity, tLRPC$KeyboardButton.url, false, true);
                }
            } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
                if (tLObject instanceof TLRPC$TL_payments_paymentFormStars) {
                    StarsController.getInstance(this.currentAccount).openPaymentForm(((TLRPC$TL_payments_getPaymentForm) tLObjectArr[0]).invoice, (TLRPC$TL_payments_paymentFormStars) tLObject, new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda29
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.this.lambda$sendCallback$24(str, list);
                        }
                    }, new Utilities.Callback() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda80
                        @Override // org.telegram.messenger.Utilities.Callback
                        public final void run(Object obj) {
                            SendMessagesHelper.lambda$sendCallback$25((String) obj);
                        }
                    });
                } else if (tLObject instanceof TLRPC$PaymentForm) {
                    TLRPC$PaymentForm tLRPC$PaymentForm = (TLRPC$PaymentForm) tLObject;
                    getMessagesController().putUsers(tLRPC$PaymentForm.users, false);
                    chatActivity.presentFragment(new PaymentFormActivity(tLRPC$PaymentForm, messageObject, chatActivity));
                } else if (tLObject instanceof TLRPC$TL_payments_paymentReceiptStars) {
                    Context context = LaunchActivity.instance;
                    if (context == null) {
                        context = ApplicationLoader.applicationContext;
                    }
                    StarsIntroActivity.showTransactionSheet(context, this.currentAccount, (TLRPC$TL_payments_paymentReceiptStars) tLObject, (Theme.ResourcesProvider) null);
                } else if (tLObject instanceof TLRPC$PaymentReceipt) {
                    chatActivity.presentFragment(new PaymentFormActivity((TLRPC$PaymentReceipt) tLObject));
                }
            } else {
                TLRPC$TL_messages_botCallbackAnswer tLRPC$TL_messages_botCallbackAnswer = (TLRPC$TL_messages_botCallbackAnswer) tLObject;
                if (!z && tLRPC$TL_messages_botCallbackAnswer.cache_time != 0 && !tLRPC$KeyboardButton.requires_password) {
                    getMessagesStorage().saveBotCache(str, tLRPC$TL_messages_botCallbackAnswer);
                }
                String str3 = tLRPC$TL_messages_botCallbackAnswer.message;
                if (str3 != null) {
                    if (tLRPC$TL_messages_botCallbackAnswer.alert) {
                        if (chatActivity.getParentActivity() == null) {
                            return;
                        }
                        AlertDialog.Builder builder = new AlertDialog.Builder(chatActivity.getParentActivity());
                        builder.setTitle(str2);
                        builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
                        builder.setMessage(tLRPC$TL_messages_botCallbackAnswer.message);
                        chatActivity.showDialog(builder.create());
                        return;
                    }
                    chatActivity.showAlert(str2, str3);
                } else if (tLRPC$TL_messages_botCallbackAnswer.url == null || chatActivity.getParentActivity() == null) {
                } else {
                    TLRPC$User user2 = getMessagesController().getUser(Long.valueOf(fromChatId));
                    boolean z4 = user2 != null && user2.verified;
                    if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame) {
                        TLRPC$MessageMedia tLRPC$MessageMedia = messageObject.messageOwner.media;
                        TLRPC$TL_game tLRPC$TL_game = tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGame ? tLRPC$MessageMedia.game : null;
                        if (tLRPC$TL_game == null) {
                            return;
                        }
                        String str4 = tLRPC$TL_messages_botCallbackAnswer.url;
                        if (!z4) {
                            if (MessagesController.getNotificationsSettings(this.currentAccount).getBoolean("askgame_" + fromChatId, true)) {
                                z3 = true;
                            }
                        }
                        chatActivity.showOpenGameAlert(tLRPC$TL_game, messageObject, str4, z3, fromChatId);
                        return;
                    }
                    AlertsCreator.showOpenUrlAlert(chatActivity, tLRPC$TL_messages_botCallbackAnswer.url, false, false);
                }
            }
        } else if (tLRPC$TL_error == null || chatActivity.getParentActivity() == null) {
        } else {
            if ("PASSWORD_HASH_INVALID".equals(tLRPC$TL_error.text)) {
                if (tLRPC$InputCheckPasswordSRP == null) {
                    AlertDialog.Builder builder2 = new AlertDialog.Builder(chatActivity.getParentActivity());
                    builder2.setTitle(LocaleController.getString("BotOwnershipTransfer", R.string.BotOwnershipTransfer));
                    builder2.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferReadyAlertText", R.string.BotOwnershipTransferReadyAlertText, new Object[0])));
                    builder2.setPositiveButton(LocaleController.getString("BotOwnershipTransferChangeOwner", R.string.BotOwnershipTransferChangeOwner), new DialogInterface.OnClickListener() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda0
                        @Override // android.content.DialogInterface.OnClickListener
                        public final void onClick(DialogInterface dialogInterface, int i) {
                            SendMessagesHelper.this.lambda$sendCallback$27(z2, messageObject, tLRPC$KeyboardButton, chatActivity, dialogInterface, i);
                        }
                    });
                    builder2.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                    chatActivity.showDialog(builder2.create());
                }
            } else if ("PASSWORD_MISSING".equals(tLRPC$TL_error.text) || tLRPC$TL_error.text.startsWith("PASSWORD_TOO_FRESH_") || tLRPC$TL_error.text.startsWith("SESSION_TOO_FRESH_")) {
                if (twoStepVerificationActivity != null) {
                    twoStepVerificationActivity.needHideProgress();
                }
                AlertDialog.Builder builder3 = new AlertDialog.Builder(chatActivity.getParentActivity());
                builder3.setTitle(LocaleController.getString("EditAdminTransferAlertTitle", R.string.EditAdminTransferAlertTitle));
                LinearLayout linearLayout = new LinearLayout(chatActivity.getParentActivity());
                linearLayout.setPadding(AndroidUtilities.dp(24.0f), AndroidUtilities.dp(2.0f), AndroidUtilities.dp(24.0f), 0);
                linearLayout.setOrientation(1);
                builder3.setView(linearLayout);
                TextView textView = new TextView(chatActivity.getParentActivity());
                int i = Theme.key_dialogTextBlack;
                textView.setTextColor(Theme.getColor(i));
                textView.setTextSize(1, 16.0f);
                textView.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView.setText(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferAlertText", R.string.BotOwnershipTransferAlertText, new Object[0])));
                linearLayout.addView(textView, LayoutHelper.createLinear(-1, -2));
                LinearLayout linearLayout2 = new LinearLayout(chatActivity.getParentActivity());
                linearLayout2.setOrientation(0);
                linearLayout.addView(linearLayout2, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView imageView = new ImageView(chatActivity.getParentActivity());
                int i2 = R.drawable.list_circle;
                imageView.setImageResource(i2);
                imageView.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                imageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor(i), PorterDuff.Mode.MULTIPLY));
                TextView textView2 = new TextView(chatActivity.getParentActivity());
                textView2.setTextColor(Theme.getColor(i));
                textView2.setTextSize(1, 16.0f);
                textView2.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView2.setText(AndroidUtilities.replaceTags(LocaleController.getString("EditAdminTransferAlertText1", R.string.EditAdminTransferAlertText1)));
                if (LocaleController.isRTL) {
                    linearLayout2.addView(textView2, LayoutHelper.createLinear(-1, -2));
                    linearLayout2.addView(imageView, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout2.addView(imageView, LayoutHelper.createLinear(-2, -2));
                    linearLayout2.addView(textView2, LayoutHelper.createLinear(-1, -2));
                }
                LinearLayout linearLayout3 = new LinearLayout(chatActivity.getParentActivity());
                linearLayout3.setOrientation(0);
                linearLayout.addView(linearLayout3, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView imageView2 = new ImageView(chatActivity.getParentActivity());
                imageView2.setImageResource(i2);
                imageView2.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                imageView2.setColorFilter(new PorterDuffColorFilter(Theme.getColor(i), PorterDuff.Mode.MULTIPLY));
                TextView textView3 = new TextView(chatActivity.getParentActivity());
                textView3.setTextColor(Theme.getColor(i));
                textView3.setTextSize(1, 16.0f);
                textView3.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                textView3.setText(AndroidUtilities.replaceTags(LocaleController.getString("EditAdminTransferAlertText2", R.string.EditAdminTransferAlertText2)));
                if (LocaleController.isRTL) {
                    linearLayout3.addView(textView3, LayoutHelper.createLinear(-1, -2));
                    linearLayout3.addView(imageView2, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout3.addView(imageView2, LayoutHelper.createLinear(-2, -2));
                    linearLayout3.addView(textView3, LayoutHelper.createLinear(-1, -2));
                }
                if ("PASSWORD_MISSING".equals(tLRPC$TL_error.text)) {
                    builder3.setPositiveButton(LocaleController.getString("EditAdminTransferSetPassword", R.string.EditAdminTransferSetPassword), new DialogInterface.OnClickListener() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda1
                        @Override // android.content.DialogInterface.OnClickListener
                        public final void onClick(DialogInterface dialogInterface, int i3) {
                            SendMessagesHelper.lambda$sendCallback$28(ChatActivity.this, dialogInterface, i3);
                        }
                    });
                    builder3.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                } else {
                    TextView textView4 = new TextView(chatActivity.getParentActivity());
                    textView4.setTextColor(Theme.getColor(i));
                    textView4.setTextSize(1, 16.0f);
                    textView4.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                    textView4.setText(LocaleController.getString("EditAdminTransferAlertText3", R.string.EditAdminTransferAlertText3));
                    linearLayout.addView(textView4, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                    builder3.setNegativeButton(LocaleController.getString("OK", R.string.OK), null);
                }
                chatActivity.showDialog(builder3.create());
            } else if ("SRP_ID_INVALID".equals(tLRPC$TL_error.text)) {
                ConnectionsManager.getInstance(this.currentAccount).sendRequest(new TLRPC$TL_account_getPassword(), new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda93
                    @Override // org.telegram.tgnet.RequestDelegate
                    public final void run(TLObject tLObject2, TLRPC$TL_error tLRPC$TL_error2) {
                        SendMessagesHelper.this.lambda$sendCallback$30(twoStepVerificationActivity, z2, messageObject, tLRPC$KeyboardButton, chatActivity, tLObject2, tLRPC$TL_error2);
                    }
                }, 8);
            } else if (twoStepVerificationActivity != null) {
                twoStepVerificationActivity.needHideProgress();
                twoStepVerificationActivity.finishFragment();
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$24(String str, List list) {
        this.waitingForCallback.remove(str);
        list.remove(str);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$27(final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, DialogInterface dialogInterface, int i) {
        final TwoStepVerificationActivity twoStepVerificationActivity = new TwoStepVerificationActivity();
        twoStepVerificationActivity.setDelegate(0, new TwoStepVerificationActivity.TwoStepVerificationActivityDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda95
            @Override // org.telegram.ui.TwoStepVerificationActivity.TwoStepVerificationActivityDelegate
            public final void didEnterPassword(TLRPC$InputCheckPasswordSRP tLRPC$InputCheckPasswordSRP) {
                SendMessagesHelper.this.lambda$sendCallback$26(z, messageObject, tLRPC$KeyboardButton, twoStepVerificationActivity, chatActivity, tLRPC$InputCheckPasswordSRP);
            }
        });
        chatActivity.presentFragment(twoStepVerificationActivity);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$sendCallback$28(ChatActivity chatActivity, DialogInterface dialogInterface, int i) {
        chatActivity.presentFragment(new TwoStepVerificationSetupActivity(6, null));
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$30(final TwoStepVerificationActivity twoStepVerificationActivity, final boolean z, final MessageObject messageObject, final TLRPC$KeyboardButton tLRPC$KeyboardButton, final ChatActivity chatActivity, final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda54
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$sendCallback$29(tLRPC$TL_error, tLObject, twoStepVerificationActivity, z, messageObject, tLRPC$KeyboardButton, chatActivity);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendCallback$29(TLRPC$TL_error tLRPC$TL_error, TLObject tLObject, TwoStepVerificationActivity twoStepVerificationActivity, boolean z, MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton, ChatActivity chatActivity) {
        if (tLRPC$TL_error == null) {
            TLRPC$account_Password tLRPC$account_Password = (TLRPC$account_Password) tLObject;
            twoStepVerificationActivity.setCurrentPasswordInfo(null, tLRPC$account_Password);
            TwoStepVerificationActivity.initPasswordNewAlgo(tLRPC$account_Password);
            lambda$sendCallback$26(z, messageObject, tLRPC$KeyboardButton, twoStepVerificationActivity.getNewSrpPassword(), twoStepVerificationActivity, chatActivity);
        }
    }

    public boolean isSendingCallback(MessageObject messageObject, TLRPC$KeyboardButton tLRPC$KeyboardButton) {
        int i = 0;
        if (messageObject == null || tLRPC$KeyboardButton == null) {
            return false;
        }
        if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonUrlAuth) {
            i = 3;
        } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonGame) {
            i = 1;
        } else if (tLRPC$KeyboardButton instanceof TLRPC$TL_keyboardButtonBuy) {
            i = 2;
        }
        return this.waitingForCallback.containsKey(messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(tLRPC$KeyboardButton.data) + "_" + i);
    }

    public void sendGame(TLRPC$InputPeer tLRPC$InputPeer, TLRPC$TL_inputMediaGame tLRPC$TL_inputMediaGame, long j, final long j2) {
        NativeByteBuffer nativeByteBuffer;
        if (tLRPC$InputPeer == null || tLRPC$TL_inputMediaGame == null) {
            return;
        }
        TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = new TLRPC$TL_messages_sendMedia();
        tLRPC$TL_messages_sendMedia.peer = tLRPC$InputPeer;
        if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChannel) {
            SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings.getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + (-tLRPC$InputPeer.channel_id), false);
        } else if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChat) {
            SharedPreferences notificationsSettings2 = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings2.getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + (-tLRPC$InputPeer.chat_id), false);
        } else {
            SharedPreferences notificationsSettings3 = MessagesController.getNotificationsSettings(this.currentAccount);
            tLRPC$TL_messages_sendMedia.silent = notificationsSettings3.getBoolean(NotificationsSettingsFacade.PROPERTY_SILENT + tLRPC$InputPeer.user_id, false);
        }
        tLRPC$TL_messages_sendMedia.random_id = j != 0 ? j : getNextRandomId();
        tLRPC$TL_messages_sendMedia.message = "";
        tLRPC$TL_messages_sendMedia.media = tLRPC$TL_inputMediaGame;
        long sendAsPeerId = ChatObject.getSendAsPeerId(getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer.chat_id)), getMessagesController().getChatFull(tLRPC$InputPeer.chat_id));
        if (sendAsPeerId != UserConfig.getInstance(this.currentAccount).getClientUserId()) {
            tLRPC$TL_messages_sendMedia.send_as = getMessagesController().getInputPeer(sendAsPeerId);
        }
        if (j2 == 0) {
            NativeByteBuffer nativeByteBuffer2 = null;
            try {
                nativeByteBuffer = new NativeByteBuffer(tLRPC$InputPeer.getObjectSize() + tLRPC$TL_inputMediaGame.getObjectSize() + 4 + 8);
                try {
                    nativeByteBuffer.writeInt32(3);
                    nativeByteBuffer.writeInt64(j);
                    tLRPC$InputPeer.serializeToStream(nativeByteBuffer);
                    tLRPC$TL_inputMediaGame.serializeToStream(nativeByteBuffer);
                } catch (Exception e) {
                    e = e;
                    nativeByteBuffer2 = nativeByteBuffer;
                    FileLog.e(e);
                    nativeByteBuffer = nativeByteBuffer2;
                    j2 = getMessagesStorage().createPendingTask(nativeByteBuffer);
                    getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda82
                        @Override // org.telegram.tgnet.RequestDelegate
                        public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                            SendMessagesHelper.this.lambda$sendGame$33(j2, tLObject, tLRPC$TL_error);
                        }
                    });
                }
            } catch (Exception e2) {
                e = e2;
            }
            j2 = getMessagesStorage().createPendingTask(nativeByteBuffer);
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda82
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$sendGame$33(j2, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$sendGame$33(long j, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
        }
        if (j != 0) {
            getMessagesStorage().removePendingTask(j);
        }
    }

    /* JADX WARN: Can't wrap try/catch for region: R(83:10|(1:13)|14|(1:19)|(1:1783)(1:23)|24|(1:26)(1:1782)|27|(2:29|(1:(2:32|33)(1:34))(1:35))(2:1768|(77:1770|(1:1772)(1:1780)|(1:1779)(1:1777)|1778|37|38|(5:40|(3:43|44|(1:46))|60|(7:66|(1:68)(5:1413|(2:1418|(1:1420)(2:1421|(3:1423|(1:1425)|1426)(5:1427|(2:1434|(1:1436)(5:1437|(2:1448|(3:1450|(1:1452)|1453)(2:1454|(1:1456)(1:1457)))|1458|(1:1460)|1461))|1462|(1:1464)|1465)))|1466|(1:1468)(1:1470)|1469)|(1:72)|73|74|(1:76)(1:1411)|77)|1471)(6:1472|1473|1474|(1:1476)(1:1762)|1477|(3:(1:1480)(1:1545)|(3:1536|1537|(2:1539|(1:1541)(1:1542)))|(14:(1:1523)(2:1532|(1:1534)(1:1535))|(1:1531)(1:1527)|1528|1529|1530|(1:1521)(1:1497)|(1:1499)(3:1517|1518|(1:1520))|1500|(1:1502)|1503|(2:1513|(1:1515)(3:1516|1508|1509))(1:1506)|1507|1508|1509)(10:1493|(1:1495)|1521|(0)(0)|1500|(0)|1503|(0)|1513|(0)(0)))(14:1546|1547|(4:(1:1550)(1:1555)|1551|1552|1553)(2:1556|(5:(1:1559)(1:1568)|1560|1561|(1:1567)(1:1565)|1566)(13:1569|(14:(1:1572)(1:1604)|1573|1574|(1:1576)|1577|(1:1579)|1580|(1:1603)(1:1584)|(1:1602)(2:1588|(2:1590|1591))|1594|1595|1596|1597|1591)(12:1605|1606|(4:1608|1609|(1:1611)|1614)(1:(5:1616|1617|1618|(1:1620)|1614)(2:(9:(1:1624)(1:1644)|1625|(1:1643)(1:1629)|1630|(1:1632)|1633|(1:1635)|(1:1642)(1:1639)|1640)(2:1645|(12:(1:1648)(1:1745)|1649|1650|(1:1742)(5:1653|1654|(2:1656|(3:1659|1660|1661)(1:1658))|1739|1740)|1741|1662|(1:1664)|1665|(3:1725|(2:1728|(1:1730)(1:1731))|1738)(1:1669)|(3:1671|(1:1673)|1674)|(1:1724)(1:1684)|(1:1723)(4:1691|(2:1692|(5:1694|1695|1696|1697|(3:1700|1701|(4:1703|(1:1705)(1:1716)|1706|(1:1708)(3:1711|(1:1713)(1:1715)|1714))(1:1717))(1:1699))(2:1720|1721))|1709|1710))(3:1746|(2:(1:1749)(1:1752)|1750)(1:1753)|1751))|1641))|(0)|1521|(0)(0)|1500|(0)|1503|(0)|1513|(0)(0))|1592|1593|(0)|1521|(0)(0)|1500|(0)|1503|(0)|1513|(0)(0)))|1554|1530|(0)|1521|(0)(0)|1500|(0)|1503|(0)|1513|(0)(0)))|(4:79|80|81|(69:83|84|85|86|(1:88)|(59:92|93|94|(1:96)|97|(2:(2:102|(1:104))(1:106)|105)|107|(3:109|110|(1:112)(48:1393|131|(1:133)(2:1339|(53:1341|(1:1344)|1346|(2:1348|(47:1350|1351|(2:1373|(1:1375))(2:1356|(1:1358))|(2:1360|(44:1362|(1:1372)(4:1366|1367|1368|1369)|137|(1:139)(1:1338)|(2:142|(1:144))|145|146|(3:148|(2:150|(2:152|153)(2:154|(1:156)))|157)(6:1289|1290|(1:1292)(1:1334)|(2:1294|1295)(3:1328|1329|(2:1331|(1:1333)))|1296|(2:1298|(2:1300|(3:1302|(2:1303|(2:1305|(2:1308|1309)(1:1307))(2:1311|1312))|1310)(5:1313|(1:1315)|1317|(2:1318|(2:1320|(2:1323|1324)(1:1322))(2:1326|1327))|1325))))|(2:162|(48:164|(1:166)(1:1287)|167|(1:1286)(1:171)|(2:177|(44:181|(42:183|184|(1:186)(1:1283)|(2:190|(38:192|(34:196|(2:(1:199)|(6:201|(1:205)|206|(1:208)|209|(1:211)))|212|(2:1279|1280)|216|(1:218)|219|220|221|(4:223|(1:225)(1:1277)|226|(17:228|(1:1275)(1:234)|235|236|237|238|(1:240)(1:1270)|241|(3:1261|1262|(1:1269))|243|(2:(3:1255|1256|(1:1258))(1:1260)|1259)|246|(5:248|(1:250)(1:(1:1236)(1:1237))|251|(1:253)(1:1234)|254)(7:1238|1239|(2:1241|1242)|(3:1244|(1:1246)(1:1252)|1247)(1:1253)|1248|1249|(1:1251))|255|(1:1232)(1:258)|259|(3:1059|1060|(1:(23:1127|1128|(1:1130)(1:1197)|1131|(1:1133)(2:1194|(1:1196))|(1:1137)|1138|(1:1140)|(1:1144)|(3:1146|1147|1148)(1:1192)|1149|1150|(1:1152)|1153|1154|(1:1156)|1158|1159|(1:1161)(1:1186)|1162|1163|1164|(6:1166|(3:1176|1177|1178)(1:1168)|1169|1170|1171|1173)(1:1183))(25:1063|1064|1065|(1:1067)(1:1124)|1068|1069|(1:1071)(2:1119|(1:1121))|1072|(1:1074)|(1:1078)|1079|(1:1081)|(1:1083)|(1:1087)|(1:1089)|1090|1091|(1:1093)|1095|1096|(1:1098)(1:1117)|1099|1100|1101|(5:1103|(2:1105|1106)(1:1110)|1107|1108|1109)(1:1112)))(9:1200|(1:1204)|1205|(2:1207|(1:1209))|(1:1213)|1214|(1:1228)(1:1218)|1219|(4:1221|(1:1223)(1:1226)|1224|1225)(1:1227)))(5:265|266|(2:946|(13:1008|1009|(1:1011)|(1:1054)(3:1015|(2:1017|(1:1019)(1:1052))(1:1053)|1020)|1021|(3:1023|1024|1025)(1:1047)|1026|1027|(1:1029)(2:1036|(1:1038)(2:1039|(1:1041)))|1030|(1:1032)(1:1035)|1033|1034)(2:948|(20:950|951|(2:1003|1004)|953|(1:955)|956|(1:958)(1:1002)|959|(2:961|962)(2:999|(1:1001))|963|(1:965)|966|967|(6:969|970|(2:972|973)(1:996)|974|975|976)(1:997)|977|(1:979)(1:987)|980|981|982|984)(1:1007)))(10:270|(7:272|273|(5:275|276|(1:278)(2:423|(4:425|(1:427)|428|(1:430))(1:431))|279|280)(2:432|(13:629|630|631|(1:633)|(1:668)(4:637|(1:639)|640|641)|642|643|(1:645)(4:662|(2:664|665)|666|667)|(3:647|(1:649)(1:651)|650)|652|(2:654|(2:656|(2:658|659)))|660|659)(3:437|438|(16:564|565|(11:567|(1:(2:570|(1:572)))(1:622)|(1:579)|(2:581|(12:583|584|585|(3:587|588|589)|591|592|593|(1:595)(4:609|(1:611)|(1:615)|616)|(3:597|(1:599)(1:607)|600)(1:608)|601|(2:603|(1:605))|606))|621|593|(0)(0)|(0)(0)|601|(0)|606)|623|574|575|(1:577)|(0)|(0)|621|593|(0)(0)|(0)(0)|601|(0)|606)(2:440|(3:442|(1:448)(1:446)|447)(2:449|(11:512|(1:563)(2:515|(1:517)(5:562|534|(1:536)(4:552|(1:554)|(1:558)|559)|(3:(3:539|(1:541)(1:549)|542)(1:550)|543|(2:545|(1:547)))(1:551)|548))|518|(1:520)|(1:561)|(1:560)(1:532)|533|534|(0)(0)|(0)(0)|548)(3:453|(8:484|485|(3:487|488|489)(1:507)|490|(1:492)(4:498|(1:500)|(1:504)|505)|493|(1:495)(1:497)|496)(4:455|(4:457|(2:459|(2:461|(4:463|(2:466|464)|467|468)))|469|(2:471|(1:473)))(2:477|(1:479)(2:480|(1:482)(2:483|475)))|474|475)|476)))))|281|(6:283|(1:285)(8:366|(1:368)(2:380|(1:382))|(2:370|371)(1:379)|372|(1:374)|375|(1:377)|378)|286|(1:290)|291|292)(19:383|384|385|(1:387)|(1:389)(2:416|(1:418))|390|391|(1:393)|394|(1:398)|(1:400)|(1:404)|405|(1:407)|408|409|(1:411)|412|(1:414))|293|(2:295|296)(2:297|(4:299|(1:301)(1:307)|302|303)(5:308|309|(1:(1:312)(4:313|(1:315)(1:321)|316|317))(2:322|(1:(1:325)(2:(1:327)(1:329)|328))(2:330|(2:(1:333)(1:335)|334)(2:336|(1:(2:(1:342)(1:344)|343)(1:340))(2:345|(1:(1:348)(2:(1:350)(1:352)|351))(2:353|(2:(1:361)(1:363)|362)(1:359))))))|318|319)))(21:676|677|678|679|(3:925|926|(1:928)(1:929))(2:681|682)|683|(1:687)|688|689|(2:691|(1:693))|694|695|(3:697|698|(1:700))|701|702|703|(3:705|(1:707)(1:753)|708)(11:754|(6:760|(11:762|(9:767|(1:804)(1:771)|772|(2:773|(2:775|(2:778|779)(1:777))(1:803))|780|(1:785)|802|797|(1:799))|805|(1:810)(1:809)|772|(3:773|(0)(0)|777)|780|(2:782|785)|802|797|(0))(3:811|(1:813)(5:815|(2:821|(5:823|(1:825)(1:831)|826|(1:828)(1:830)|829))|832|833|(10:849|(2:851|(1:853)(1:881))(1:882)|854|(4:859|710|(10:733|734|(1:736)(1:750)|737|738|739|740|(2:745|746)|747|746)(1:712)|(6:714|715|(2:717|718)(1:726)|719|720|721)(1:732))|(1:877)|878|(1:880)|710|(0)(0)|(0)(0))(4:839|(1:841)(1:848)|(2:843|(1:845))(1:847)|846))|814)|786|710|(0)(0)|(0)(0))|883|884|885|(3:887|888|889)(2:918|919)|890|(5:(6:896|(2:898|(4:900|901|(1:903)(1:905)|904))|906|901|(0)(0)|904)|907|(2:915|916)(1:911)|912|(1:914))(1:894)|710|(0)(0)|(0)(0))|709|710|(0)(0)|(0)(0))|628|511|51|(1:53)(1:59)|54|(1:56)|57|58)|304|306)))(1:1278)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(1:261)|1059|1060|(0)(0))|1281|(0)|212|(1:214)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0)))|1282|(36:196|(0)|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0))|1281|(0)|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0))|1284|184|(0)(0)|(3:188|190|(0))|1282|(0)|1281|(0)|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0)))|1285|1284|184|(0)(0)|(0)|1282|(0)|1281|(0)|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0)))|1288|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0)))|136|137|(0)(0)|(2:142|(0))|145|146|(0)(0)|(3:160|162|(0))|1288|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0)))(1:1377)|1376|1351|(0)|1373|(0)|(0)|136|137|(0)(0)|(0)|145|146|(0)(0)|(0)|1288|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0)))|134|135|136|137|(0)(0)|(0)|145|146|(0)(0)|(0)|1288|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0)))(1:1394)|(2:114|115)(1:(3:1385|1386|1387)(52:1390|1391|1392|117|(3:(2:121|122)|123|(2:125|(1:127)(2:128|(1:130))))(2:1381|1382)|131|(0)(0)|134|135|136|137|(0)(0)|(0)|145|146|(0)(0)|(0)|1288|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0)))|116|117|(0)(0)|131|(0)(0)|134|135|136|137|(0)(0)|(0)|145|146|(0)(0)|(0)|1288|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0))|1403|1404|1399|(1:1401)|1402|93|94|(0)|97|(3:99|(0)(0)|105)|107|(0)(0)|(0)(0)|116|117|(0)(0)|131|(0)(0)|134|135|136|137|(0)(0)|(0)|145|146|(0)(0)|(0)|1288|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0)))(1:1410)|1407|84|85|86|(0)|(59:92|93|94|(0)|97|(0)|107|(0)(0)|(0)(0)|116|117|(0)(0)|131|(0)(0)|134|135|136|137|(0)(0)|(0)|145|146|(0)(0)|(0)|1288|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0))|1403|1404|1399|(0)|1402|93|94|(0)|97|(0)|107|(0)(0)|(0)(0)|116|117|(0)(0)|131|(0)(0)|134|135|136|137|(0)(0)|(0)|145|146|(0)(0)|(0)|1288|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0))(1:1781))|36|37|38|(0)(0)|(0)(0)|1407|84|85|86|(0)|(0)|1403|1404|1399|(0)|1402|93|94|(0)|97|(0)|107|(0)(0)|(0)(0)|116|117|(0)(0)|131|(0)(0)|134|135|136|137|(0)(0)|(0)|145|146|(0)(0)|(0)|1288|212|(0)|1279|1280|216|(0)|219|220|221|(0)(0)|1276|(0)|1275|235|236|237|238|(0)(0)|241|(0)|243|(0)|(0)(0)|1259|246|(0)(0)|255|(0)|1232|259|(0)|1059|1060|(0)(0)) */
    /* JADX WARN: Code restructure failed: missing block: B:1179:0x17fd, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1368:0x1b6c, code lost:
        r8 = r68;
        r1 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r12, r8);
        r1.encryptedChat = r4;
        r1.type = 1;
        r1.sendEncryptedRequest = r6;
        r5 = r42;
        r1.originalPath = r5;
        r1.obj = r10;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1369:0x1b80, code lost:
        if (r13 == null) goto L801;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1370:0x1b82, code lost:
        r10 = r58;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1371:0x1b88, code lost:
        if (r13.containsKey(r10) == false) goto L801;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1372:0x1b8a, code lost:
        r1.parentObject = r13.get(r10);
     */
    /* JADX WARN: Code restructure failed: missing block: B:1373:0x1b91, code lost:
        r1.parentObject = r20;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1374:0x1b95, code lost:
        r1.performMediaUpload = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1375:0x1b98, code lost:
        if (r45 == 0) goto L800;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1376:0x1b9a, code lost:
        r2 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1377:0x1b9c, code lost:
        r2 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1378:0x1b9d, code lost:
        r1.scheduled = r2;
        r7 = r19;
     */
    /* JADX WARN: Code restructure failed: missing block: B:142:0x034d, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1438:0x1d8e, code lost:
        r1 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r12, r8);
        r1.encryptedChat = r4;
        r1.type = 2;
        r1.sendEncryptedRequest = r6;
        r1.originalPath = r5;
        r1.obj = r10;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1439:0x1d9e, code lost:
        if (r13 == null) goto L871;
     */
    /* JADX WARN: Code restructure failed: missing block: B:143:0x034e, code lost:
        r12 = r81;
        r1 = r0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1441:0x1da6, code lost:
        if (r13.containsKey(r10) == false) goto L871;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1442:0x1da8, code lost:
        r1.parentObject = r13.get(r10);
     */
    /* JADX WARN: Code restructure failed: missing block: B:1443:0x1daf, code lost:
        r1.parentObject = r13;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1444:0x1db1, code lost:
        r1.performMediaUpload = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1445:0x1db4, code lost:
        if (r45 == 0) goto L870;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1446:0x1db6, code lost:
        r2 = true;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1447:0x1db8, code lost:
        r2 = false;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1448:0x1db9, code lost:
        r1.scheduled = r2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1549:0x1fb8, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1692:0x21e7, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1694:0x21e9, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1695:0x21ea, code lost:
        r12 = r3;
        r11 = r8;
        r3 = r45;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1697:0x21f0, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1698:0x21f1, code lost:
        r12 = r3;
        r11 = r8;
        r3 = r45;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1701:0x21fb, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:1702:0x21fc, code lost:
        r12 = r3;
        r11 = r8;
        r3 = r4;
     */
    /* JADX WARN: Code restructure failed: missing block: B:251:0x05db, code lost:
        if (r5.containsKey("query_id") != false) goto L1613;
     */
    /* JADX WARN: Code restructure failed: missing block: B:263:0x05fa, code lost:
        if (r5.containsKey("query_id") != false) goto L1613;
     */
    /* JADX WARN: Code restructure failed: missing block: B:264:0x05fc, code lost:
        r20 = r5;
        r19 = r13;
        r62 = r17;
        r8 = r34;
        r5 = r40;
        r7 = null;
        r41 = '\t';
        r3 = r3;
     */
    /* JADX WARN: Code restructure failed: missing block: B:440:0x098d, code lost:
        r2 = new org.telegram.tgnet.TLRPC$TL_inputQuickReplyShortcutId();
        r6 = r48;
        r2.shortcut_id = r6;
        r8.quick_reply_shortcut = r2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:441:0x0998, code lost:
        r7 = r4;
     */
    /* JADX WARN: Code restructure failed: missing block: B:508:0x0acc, code lost:
        if (r9.getId() != 1) goto L1346;
     */
    /* JADX WARN: Code restructure failed: missing block: B:598:0x0c8e, code lost:
        if (org.telegram.messenger.MessageObject.isRoundVideoMessage(r8) != false) goto L1317;
     */
    /* JADX WARN: Code restructure failed: missing block: B:935:0x12a4, code lost:
        if (r9.roundVideo == false) goto L574;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:1084:0x15c7 A[Catch: Exception -> 0x1676, TryCatch #4 {Exception -> 0x1676, blocks: (B:1152:0x1730, B:1154:0x1734, B:1155:0x1739, B:1157:0x174a, B:1158:0x1759, B:1160:0x175f, B:1008:0x1442, B:1010:0x144d, B:1021:0x1497, B:1025:0x14ad, B:1013:0x145b, B:1015:0x1478, B:1017:0x147f, B:1019:0x1485, B:1020:0x1493, B:1030:0x14c4, B:1032:0x14d1, B:1034:0x14d9, B:1037:0x14e9, B:1039:0x14ec, B:1040:0x14fc, B:1041:0x1502, B:1043:0x1506, B:1045:0x150e, B:1048:0x1523, B:1052:0x1537, B:1059:0x1567, B:1064:0x1576, B:1066:0x157f, B:1068:0x158b, B:1070:0x1591, B:1073:0x159f, B:1077:0x15ac, B:1081:0x15b7, B:1082:0x15c1, B:1084:0x15c7, B:1095:0x160c, B:1099:0x1623, B:1101:0x162a, B:1103:0x1636, B:1105:0x1643, B:1085:0x15cd, B:1087:0x15e9, B:1089:0x15f0, B:1091:0x15f6, B:1092:0x1604, B:1075:0x15a7, B:1112:0x166b, B:1116:0x167b, B:1118:0x1685, B:1120:0x1696, B:1121:0x16af, B:1135:0x16ec, B:1139:0x16fd, B:1142:0x1705, B:1144:0x170b, B:1146:0x1715, B:1131:0x16e3), top: B:1726:0x11e7 }] */
    /* JADX WARN: Removed duplicated region for block: B:1085:0x15cd A[Catch: Exception -> 0x1676, TryCatch #4 {Exception -> 0x1676, blocks: (B:1152:0x1730, B:1154:0x1734, B:1155:0x1739, B:1157:0x174a, B:1158:0x1759, B:1160:0x175f, B:1008:0x1442, B:1010:0x144d, B:1021:0x1497, B:1025:0x14ad, B:1013:0x145b, B:1015:0x1478, B:1017:0x147f, B:1019:0x1485, B:1020:0x1493, B:1030:0x14c4, B:1032:0x14d1, B:1034:0x14d9, B:1037:0x14e9, B:1039:0x14ec, B:1040:0x14fc, B:1041:0x1502, B:1043:0x1506, B:1045:0x150e, B:1048:0x1523, B:1052:0x1537, B:1059:0x1567, B:1064:0x1576, B:1066:0x157f, B:1068:0x158b, B:1070:0x1591, B:1073:0x159f, B:1077:0x15ac, B:1081:0x15b7, B:1082:0x15c1, B:1084:0x15c7, B:1095:0x160c, B:1099:0x1623, B:1101:0x162a, B:1103:0x1636, B:1105:0x1643, B:1085:0x15cd, B:1087:0x15e9, B:1089:0x15f0, B:1091:0x15f6, B:1092:0x1604, B:1075:0x15a7, B:1112:0x166b, B:1116:0x167b, B:1118:0x1685, B:1120:0x1696, B:1121:0x16af, B:1135:0x16ec, B:1139:0x16fd, B:1142:0x1705, B:1144:0x170b, B:1146:0x1715, B:1131:0x16e3), top: B:1726:0x11e7 }] */
    /* JADX WARN: Removed duplicated region for block: B:1094:0x160a  */
    /* JADX WARN: Removed duplicated region for block: B:1107:0x1648  */
    /* JADX WARN: Removed duplicated region for block: B:1357:0x1b05 A[Catch: Exception -> 0x19e2, TryCatch #15 {Exception -> 0x19e2, blocks: (B:1293:0x19c5, B:1295:0x19ce, B:1305:0x19f6, B:1307:0x19fc, B:1311:0x1a0a, B:1313:0x1a10, B:1318:0x1a29, B:1320:0x1a2f, B:1324:0x1a46, B:1326:0x1a4a, B:1328:0x1a69, B:1327:0x1a62, B:1337:0x1aa2, B:1339:0x1ab1, B:1342:0x1ab8, B:1344:0x1ac1, B:1346:0x1ac5, B:1354:0x1aef, B:1355:0x1afd, B:1357:0x1b05, B:1359:0x1b11, B:1360:0x1b21, B:1361:0x1b24, B:1366:0x1b37, B:1368:0x1b6c, B:1370:0x1b82, B:1372:0x1b8a, B:1374:0x1b95, B:1378:0x1b9d, B:1380:0x1baa, B:1382:0x1bb0, B:1373:0x1b91, B:1347:0x1aca, B:1348:0x1ad2, B:1350:0x1adf, B:1352:0x1ae3, B:1353:0x1ae8, B:1386:0x1bc4, B:1395:0x1c02, B:1399:0x1c1a, B:1401:0x1c31, B:1403:0x1c54, B:1402:0x1c46), top: B:1744:0x19c5 }] */
    /* JADX WARN: Removed duplicated region for block: B:1382:0x1bb0 A[Catch: Exception -> 0x19e2, TryCatch #15 {Exception -> 0x19e2, blocks: (B:1293:0x19c5, B:1295:0x19ce, B:1305:0x19f6, B:1307:0x19fc, B:1311:0x1a0a, B:1313:0x1a10, B:1318:0x1a29, B:1320:0x1a2f, B:1324:0x1a46, B:1326:0x1a4a, B:1328:0x1a69, B:1327:0x1a62, B:1337:0x1aa2, B:1339:0x1ab1, B:1342:0x1ab8, B:1344:0x1ac1, B:1346:0x1ac5, B:1354:0x1aef, B:1355:0x1afd, B:1357:0x1b05, B:1359:0x1b11, B:1360:0x1b21, B:1361:0x1b24, B:1366:0x1b37, B:1368:0x1b6c, B:1370:0x1b82, B:1372:0x1b8a, B:1374:0x1b95, B:1378:0x1b9d, B:1380:0x1baa, B:1382:0x1bb0, B:1373:0x1b91, B:1347:0x1aca, B:1348:0x1ad2, B:1350:0x1adf, B:1352:0x1ae3, B:1353:0x1ae8, B:1386:0x1bc4, B:1395:0x1c02, B:1399:0x1c1a, B:1401:0x1c31, B:1403:0x1c54, B:1402:0x1c46), top: B:1744:0x19c5 }] */
    /* JADX WARN: Removed duplicated region for block: B:145:0x0355  */
    /* JADX WARN: Removed duplicated region for block: B:1484:0x1eab  */
    /* JADX WARN: Removed duplicated region for block: B:1485:0x1ead  */
    /* JADX WARN: Removed duplicated region for block: B:1519:0x1f2e  */
    /* JADX WARN: Removed duplicated region for block: B:1540:0x1f76  */
    /* JADX WARN: Removed duplicated region for block: B:1664:0x2145 A[Catch: Exception -> 0x21e7, TryCatch #10 {Exception -> 0x21e7, blocks: (B:1658:0x2139, B:1664:0x2145, B:1666:0x2155, B:1668:0x215b, B:1669:0x2163, B:1671:0x2167, B:1673:0x216d, B:1675:0x2178, B:1677:0x217e, B:1678:0x218c, B:1680:0x219a, B:1682:0x219e, B:1684:0x21b7, B:1686:0x21ce, B:1688:0x21d4, B:1690:0x21de, B:1683:0x21b0), top: B:1736:0x1f74 }] */
    /* JADX WARN: Removed duplicated region for block: B:1711:0x221c  */
    /* JADX WARN: Removed duplicated region for block: B:1712:0x221e  */
    /* JADX WARN: Removed duplicated region for block: B:1715:0x2224  */
    /* JADX WARN: Removed duplicated region for block: B:1724:0x0e61 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1767:0x08bc A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1783:0x1ee2 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1792:0x1f32 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1815:0x1b24 A[EDGE_INSN: B:1815:0x1b24->B:1361:0x1b24 ?: BREAK  , SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:1830:? A[RETURN, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:397:0x08a4 A[Catch: Exception -> 0x05de, TryCatch #7 {Exception -> 0x05de, blocks: (B:397:0x08a4, B:399:0x08aa, B:402:0x08b9, B:409:0x08c6, B:413:0x08db, B:416:0x08f5, B:406:0x08c0, B:248:0x05ca, B:250:0x05d7, B:260:0x05f2, B:262:0x05f6, B:272:0x062b, B:274:0x064e, B:276:0x0661, B:278:0x0675, B:280:0x067b, B:281:0x067f, B:283:0x0683, B:285:0x0689, B:277:0x0671, B:299:0x06cd, B:301:0x06d6, B:303:0x06e2, B:311:0x0709, B:314:0x0717, B:332:0x0747, B:334:0x074d, B:335:0x0752, B:337:0x075a, B:339:0x075e, B:341:0x0764, B:343:0x076b, B:345:0x0771, B:352:0x078d, B:326:0x0737, B:322:0x072e, B:393:0x086b), top: B:1731:0x0374 }] */
    /* JADX WARN: Removed duplicated region for block: B:402:0x08b9 A[Catch: Exception -> 0x05de, TRY_LEAVE, TryCatch #7 {Exception -> 0x05de, blocks: (B:397:0x08a4, B:399:0x08aa, B:402:0x08b9, B:409:0x08c6, B:413:0x08db, B:416:0x08f5, B:406:0x08c0, B:248:0x05ca, B:250:0x05d7, B:260:0x05f2, B:262:0x05f6, B:272:0x062b, B:274:0x064e, B:276:0x0661, B:278:0x0675, B:280:0x067b, B:281:0x067f, B:283:0x0683, B:285:0x0689, B:277:0x0671, B:299:0x06cd, B:301:0x06d6, B:303:0x06e2, B:311:0x0709, B:314:0x0717, B:332:0x0747, B:334:0x074d, B:335:0x0752, B:337:0x075a, B:339:0x075e, B:341:0x0764, B:343:0x076b, B:345:0x0771, B:352:0x078d, B:326:0x0737, B:322:0x072e, B:393:0x086b), top: B:1731:0x0374 }] */
    /* JADX WARN: Removed duplicated region for block: B:409:0x08c6 A[Catch: Exception -> 0x05de, TRY_ENTER, TRY_LEAVE, TryCatch #7 {Exception -> 0x05de, blocks: (B:397:0x08a4, B:399:0x08aa, B:402:0x08b9, B:409:0x08c6, B:413:0x08db, B:416:0x08f5, B:406:0x08c0, B:248:0x05ca, B:250:0x05d7, B:260:0x05f2, B:262:0x05f6, B:272:0x062b, B:274:0x064e, B:276:0x0661, B:278:0x0675, B:280:0x067b, B:281:0x067f, B:283:0x0683, B:285:0x0689, B:277:0x0671, B:299:0x06cd, B:301:0x06d6, B:303:0x06e2, B:311:0x0709, B:314:0x0717, B:332:0x0747, B:334:0x074d, B:335:0x0752, B:337:0x075a, B:339:0x075e, B:341:0x0764, B:343:0x076b, B:345:0x0771, B:352:0x078d, B:326:0x0737, B:322:0x072e, B:393:0x086b), top: B:1731:0x0374 }] */
    /* JADX WARN: Removed duplicated region for block: B:412:0x08d9 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:416:0x08f5 A[Catch: Exception -> 0x05de, TRY_LEAVE, TryCatch #7 {Exception -> 0x05de, blocks: (B:397:0x08a4, B:399:0x08aa, B:402:0x08b9, B:409:0x08c6, B:413:0x08db, B:416:0x08f5, B:406:0x08c0, B:248:0x05ca, B:250:0x05d7, B:260:0x05f2, B:262:0x05f6, B:272:0x062b, B:274:0x064e, B:276:0x0661, B:278:0x0675, B:280:0x067b, B:281:0x067f, B:283:0x0683, B:285:0x0689, B:277:0x0671, B:299:0x06cd, B:301:0x06d6, B:303:0x06e2, B:311:0x0709, B:314:0x0717, B:332:0x0747, B:334:0x074d, B:335:0x0752, B:337:0x075a, B:339:0x075e, B:341:0x0764, B:343:0x076b, B:345:0x0771, B:352:0x078d, B:326:0x0737, B:322:0x072e, B:393:0x086b), top: B:1731:0x0374 }] */
    /* JADX WARN: Removed duplicated region for block: B:418:0x08fe A[Catch: Exception -> 0x2203, TRY_ENTER, TryCatch #28 {Exception -> 0x2203, blocks: (B:407:0x08c2, B:410:0x08c8, B:419:0x0911, B:418:0x08fe, B:404:0x08bc), top: B:1767:0x08bc }] */
    /* JADX WARN: Removed duplicated region for block: B:422:0x093c  */
    /* JADX WARN: Removed duplicated region for block: B:429:0x0969  */
    /* JADX WARN: Removed duplicated region for block: B:434:0x0978 A[Catch: Exception -> 0x0963, TRY_ENTER, TryCatch #13 {Exception -> 0x0963, blocks: (B:423:0x093e, B:434:0x0978, B:451:0x09be, B:454:0x09cc, B:457:0x09d6, B:459:0x09e0, B:461:0x09f5, B:460:0x09e3, B:465:0x0a01, B:471:0x0a12, B:440:0x098d, B:446:0x09ac), top: B:1740:0x093e }] */
    /* JADX WARN: Removed duplicated region for block: B:436:0x0980 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:446:0x09ac A[Catch: Exception -> 0x0963, TRY_ENTER, TRY_LEAVE, TryCatch #13 {Exception -> 0x0963, blocks: (B:423:0x093e, B:434:0x0978, B:451:0x09be, B:454:0x09cc, B:457:0x09d6, B:459:0x09e0, B:461:0x09f5, B:460:0x09e3, B:465:0x0a01, B:471:0x0a12, B:440:0x098d, B:446:0x09ac), top: B:1740:0x093e }] */
    /* JADX WARN: Removed duplicated region for block: B:451:0x09be A[Catch: Exception -> 0x0963, TRY_ENTER, TRY_LEAVE, TryCatch #13 {Exception -> 0x0963, blocks: (B:423:0x093e, B:434:0x0978, B:451:0x09be, B:454:0x09cc, B:457:0x09d6, B:459:0x09e0, B:461:0x09f5, B:460:0x09e3, B:465:0x0a01, B:471:0x0a12, B:440:0x098d, B:446:0x09ac), top: B:1740:0x093e }] */
    /* JADX WARN: Removed duplicated region for block: B:454:0x09cc A[Catch: Exception -> 0x0963, TRY_ENTER, TryCatch #13 {Exception -> 0x0963, blocks: (B:423:0x093e, B:434:0x0978, B:451:0x09be, B:454:0x09cc, B:457:0x09d6, B:459:0x09e0, B:461:0x09f5, B:460:0x09e3, B:465:0x0a01, B:471:0x0a12, B:440:0x098d, B:446:0x09ac), top: B:1740:0x093e }] */
    /* JADX WARN: Removed duplicated region for block: B:457:0x09d6 A[Catch: Exception -> 0x0963, TryCatch #13 {Exception -> 0x0963, blocks: (B:423:0x093e, B:434:0x0978, B:451:0x09be, B:454:0x09cc, B:457:0x09d6, B:459:0x09e0, B:461:0x09f5, B:460:0x09e3, B:465:0x0a01, B:471:0x0a12, B:440:0x098d, B:446:0x09ac), top: B:1740:0x093e }] */
    /* JADX WARN: Removed duplicated region for block: B:460:0x09e3 A[Catch: Exception -> 0x0963, TryCatch #13 {Exception -> 0x0963, blocks: (B:423:0x093e, B:434:0x0978, B:451:0x09be, B:454:0x09cc, B:457:0x09d6, B:459:0x09e0, B:461:0x09f5, B:460:0x09e3, B:465:0x0a01, B:471:0x0a12, B:440:0x098d, B:446:0x09ac), top: B:1740:0x093e }] */
    /* JADX WARN: Removed duplicated region for block: B:464:0x09ff  */
    /* JADX WARN: Removed duplicated region for block: B:469:0x0a0e  */
    /* JADX WARN: Removed duplicated region for block: B:471:0x0a12 A[Catch: Exception -> 0x0963, TRY_LEAVE, TryCatch #13 {Exception -> 0x0963, blocks: (B:423:0x093e, B:434:0x0978, B:451:0x09be, B:454:0x09cc, B:457:0x09d6, B:459:0x09e0, B:461:0x09f5, B:460:0x09e3, B:465:0x0a01, B:471:0x0a12, B:440:0x098d, B:446:0x09ac), top: B:1740:0x093e }] */
    /* JADX WARN: Removed duplicated region for block: B:474:0x0a1a  */
    /* JADX WARN: Removed duplicated region for block: B:484:0x0a3a  */
    /* JADX WARN: Removed duplicated region for block: B:497:0x0a72  */
    /* JADX WARN: Removed duplicated region for block: B:501:0x0a87 A[Catch: Exception -> 0x0a21, TRY_ENTER, TryCatch #41 {Exception -> 0x0a21, blocks: (B:487:0x0a3f, B:488:0x0a47, B:490:0x0a59, B:492:0x0a5d, B:493:0x0a61, B:495:0x0a68, B:501:0x0a87, B:507:0x0ac7, B:509:0x0ace, B:511:0x0ad7, B:513:0x0ae1, B:516:0x0af4, B:519:0x0b04, B:521:0x0b0b, B:523:0x0b1f, B:528:0x0b3a, B:530:0x0b4c, B:532:0x0b6d, B:534:0x0b73, B:524:0x0b28, B:526:0x0b2c, B:515:0x0aed, B:476:0x0a1e), top: B:1787:0x0a1e }] */
    /* JADX WARN: Removed duplicated region for block: B:502:0x0ab3  */
    /* JADX WARN: Removed duplicated region for block: B:526:0x0b2c A[Catch: Exception -> 0x0a21, TryCatch #41 {Exception -> 0x0a21, blocks: (B:487:0x0a3f, B:488:0x0a47, B:490:0x0a59, B:492:0x0a5d, B:493:0x0a61, B:495:0x0a68, B:501:0x0a87, B:507:0x0ac7, B:509:0x0ace, B:511:0x0ad7, B:513:0x0ae1, B:516:0x0af4, B:519:0x0b04, B:521:0x0b0b, B:523:0x0b1f, B:528:0x0b3a, B:530:0x0b4c, B:532:0x0b6d, B:534:0x0b73, B:524:0x0b28, B:526:0x0b2c, B:515:0x0aed, B:476:0x0a1e), top: B:1787:0x0a1e }] */
    /* JADX WARN: Removed duplicated region for block: B:528:0x0b3a A[Catch: Exception -> 0x0a21, TryCatch #41 {Exception -> 0x0a21, blocks: (B:487:0x0a3f, B:488:0x0a47, B:490:0x0a59, B:492:0x0a5d, B:493:0x0a61, B:495:0x0a68, B:501:0x0a87, B:507:0x0ac7, B:509:0x0ace, B:511:0x0ad7, B:513:0x0ae1, B:516:0x0af4, B:519:0x0b04, B:521:0x0b0b, B:523:0x0b1f, B:528:0x0b3a, B:530:0x0b4c, B:532:0x0b6d, B:534:0x0b73, B:524:0x0b28, B:526:0x0b2c, B:515:0x0aed, B:476:0x0a1e), top: B:1787:0x0a1e }] */
    /* JADX WARN: Removed duplicated region for block: B:543:0x0b9c A[Catch: Exception -> 0x0bb9, TryCatch #53 {Exception -> 0x0bb9, blocks: (B:543:0x0b9c, B:549:0x0bc6, B:551:0x0bda, B:554:0x0be6, B:556:0x0bf6, B:558:0x0c04, B:560:0x0c0a, B:562:0x0c0e, B:610:0x0cc3, B:612:0x0cc7, B:614:0x0cd1, B:616:0x0cdd, B:618:0x0ce6, B:620:0x0cec, B:625:0x0d05, B:627:0x0d0b, B:629:0x0d11, B:631:0x0d19, B:633:0x0d1d, B:635:0x0d27, B:638:0x0d36, B:643:0x0d58, B:645:0x0d62, B:656:0x0d8d, B:658:0x0d98, B:660:0x0d9c, B:662:0x0da0, B:663:0x0daa, B:665:0x0db0, B:666:0x0dca, B:668:0x0dd0, B:673:0x0de9, B:679:0x0df6, B:684:0x0e01, B:686:0x0e0b, B:688:0x0e1d, B:695:0x0e2e, B:653:0x0d7e, B:617:0x0ce2, B:567:0x0c22, B:572:0x0c2d, B:582:0x0c48, B:584:0x0c4e, B:587:0x0c55, B:589:0x0c61, B:591:0x0c71, B:594:0x0c79, B:592:0x0c75, B:595:0x0c84, B:597:0x0c8a, B:600:0x0c91, B:602:0x0c9d, B:604:0x0cad, B:607:0x0cb5, B:605:0x0cb1, B:577:0x0c38, B:579:0x0c3c, B:536:0x0b79), top: B:1809:0x0b79 }] */
    /* JADX WARN: Removed duplicated region for block: B:546:0x0bc1  */
    /* JADX WARN: Removed duplicated region for block: B:548:0x0bc4 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:54:0x017b A[Catch: Exception -> 0x034d, TRY_ENTER, TRY_LEAVE, TryCatch #45 {Exception -> 0x034d, blocks: (B:54:0x017b, B:148:0x035d, B:152:0x0378, B:153:0x037e, B:191:0x045a, B:192:0x0460, B:204:0x04a2, B:205:0x04a8, B:217:0x0509, B:218:0x050f), top: B:1794:0x0179 }] */
    /* JADX WARN: Removed duplicated region for block: B:551:0x0bda A[Catch: Exception -> 0x0bb9, TRY_LEAVE, TryCatch #53 {Exception -> 0x0bb9, blocks: (B:543:0x0b9c, B:549:0x0bc6, B:551:0x0bda, B:554:0x0be6, B:556:0x0bf6, B:558:0x0c04, B:560:0x0c0a, B:562:0x0c0e, B:610:0x0cc3, B:612:0x0cc7, B:614:0x0cd1, B:616:0x0cdd, B:618:0x0ce6, B:620:0x0cec, B:625:0x0d05, B:627:0x0d0b, B:629:0x0d11, B:631:0x0d19, B:633:0x0d1d, B:635:0x0d27, B:638:0x0d36, B:643:0x0d58, B:645:0x0d62, B:656:0x0d8d, B:658:0x0d98, B:660:0x0d9c, B:662:0x0da0, B:663:0x0daa, B:665:0x0db0, B:666:0x0dca, B:668:0x0dd0, B:673:0x0de9, B:679:0x0df6, B:684:0x0e01, B:686:0x0e0b, B:688:0x0e1d, B:695:0x0e2e, B:653:0x0d7e, B:617:0x0ce2, B:567:0x0c22, B:572:0x0c2d, B:582:0x0c48, B:584:0x0c4e, B:587:0x0c55, B:589:0x0c61, B:591:0x0c71, B:594:0x0c79, B:592:0x0c75, B:595:0x0c84, B:597:0x0c8a, B:600:0x0c91, B:602:0x0c9d, B:604:0x0cad, B:607:0x0cb5, B:605:0x0cb1, B:577:0x0c38, B:579:0x0c3c, B:536:0x0b79), top: B:1809:0x0b79 }] */
    /* JADX WARN: Removed duplicated region for block: B:554:0x0be6 A[Catch: Exception -> 0x0bb9, TRY_ENTER, TryCatch #53 {Exception -> 0x0bb9, blocks: (B:543:0x0b9c, B:549:0x0bc6, B:551:0x0bda, B:554:0x0be6, B:556:0x0bf6, B:558:0x0c04, B:560:0x0c0a, B:562:0x0c0e, B:610:0x0cc3, B:612:0x0cc7, B:614:0x0cd1, B:616:0x0cdd, B:618:0x0ce6, B:620:0x0cec, B:625:0x0d05, B:627:0x0d0b, B:629:0x0d11, B:631:0x0d19, B:633:0x0d1d, B:635:0x0d27, B:638:0x0d36, B:643:0x0d58, B:645:0x0d62, B:656:0x0d8d, B:658:0x0d98, B:660:0x0d9c, B:662:0x0da0, B:663:0x0daa, B:665:0x0db0, B:666:0x0dca, B:668:0x0dd0, B:673:0x0de9, B:679:0x0df6, B:684:0x0e01, B:686:0x0e0b, B:688:0x0e1d, B:695:0x0e2e, B:653:0x0d7e, B:617:0x0ce2, B:567:0x0c22, B:572:0x0c2d, B:582:0x0c48, B:584:0x0c4e, B:587:0x0c55, B:589:0x0c61, B:591:0x0c71, B:594:0x0c79, B:592:0x0c75, B:595:0x0c84, B:597:0x0c8a, B:600:0x0c91, B:602:0x0c9d, B:604:0x0cad, B:607:0x0cb5, B:605:0x0cb1, B:577:0x0c38, B:579:0x0c3c, B:536:0x0b79), top: B:1809:0x0b79 }] */
    /* JADX WARN: Removed duplicated region for block: B:564:0x0c15 A[Catch: Exception -> 0x21f0, TRY_ENTER, TRY_LEAVE, TryCatch #0 {Exception -> 0x21f0, blocks: (B:552:0x0be0, B:671:0x0de3, B:677:0x0df2, B:681:0x0dfb, B:701:0x0e3c, B:676:0x0df0, B:564:0x0c15, B:580:0x0c44, B:575:0x0c32, B:569:0x0c27), top: B:1718:0x0be0 }] */
    /* JADX WARN: Removed duplicated region for block: B:609:0x0cc1 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:614:0x0cd1 A[Catch: Exception -> 0x0bb9, TryCatch #53 {Exception -> 0x0bb9, blocks: (B:543:0x0b9c, B:549:0x0bc6, B:551:0x0bda, B:554:0x0be6, B:556:0x0bf6, B:558:0x0c04, B:560:0x0c0a, B:562:0x0c0e, B:610:0x0cc3, B:612:0x0cc7, B:614:0x0cd1, B:616:0x0cdd, B:618:0x0ce6, B:620:0x0cec, B:625:0x0d05, B:627:0x0d0b, B:629:0x0d11, B:631:0x0d19, B:633:0x0d1d, B:635:0x0d27, B:638:0x0d36, B:643:0x0d58, B:645:0x0d62, B:656:0x0d8d, B:658:0x0d98, B:660:0x0d9c, B:662:0x0da0, B:663:0x0daa, B:665:0x0db0, B:666:0x0dca, B:668:0x0dd0, B:673:0x0de9, B:679:0x0df6, B:684:0x0e01, B:686:0x0e0b, B:688:0x0e1d, B:695:0x0e2e, B:653:0x0d7e, B:617:0x0ce2, B:567:0x0c22, B:572:0x0c2d, B:582:0x0c48, B:584:0x0c4e, B:587:0x0c55, B:589:0x0c61, B:591:0x0c71, B:594:0x0c79, B:592:0x0c75, B:595:0x0c84, B:597:0x0c8a, B:600:0x0c91, B:602:0x0c9d, B:604:0x0cad, B:607:0x0cb5, B:605:0x0cb1, B:577:0x0c38, B:579:0x0c3c, B:536:0x0b79), top: B:1809:0x0b79 }] */
    /* JADX WARN: Removed duplicated region for block: B:640:0x0d53  */
    /* JADX WARN: Removed duplicated region for block: B:641:0x0d55  */
    /* JADX WARN: Removed duplicated region for block: B:643:0x0d58 A[Catch: Exception -> 0x0bb9, TryCatch #53 {Exception -> 0x0bb9, blocks: (B:543:0x0b9c, B:549:0x0bc6, B:551:0x0bda, B:554:0x0be6, B:556:0x0bf6, B:558:0x0c04, B:560:0x0c0a, B:562:0x0c0e, B:610:0x0cc3, B:612:0x0cc7, B:614:0x0cd1, B:616:0x0cdd, B:618:0x0ce6, B:620:0x0cec, B:625:0x0d05, B:627:0x0d0b, B:629:0x0d11, B:631:0x0d19, B:633:0x0d1d, B:635:0x0d27, B:638:0x0d36, B:643:0x0d58, B:645:0x0d62, B:656:0x0d8d, B:658:0x0d98, B:660:0x0d9c, B:662:0x0da0, B:663:0x0daa, B:665:0x0db0, B:666:0x0dca, B:668:0x0dd0, B:673:0x0de9, B:679:0x0df6, B:684:0x0e01, B:686:0x0e0b, B:688:0x0e1d, B:695:0x0e2e, B:653:0x0d7e, B:617:0x0ce2, B:567:0x0c22, B:572:0x0c2d, B:582:0x0c48, B:584:0x0c4e, B:587:0x0c55, B:589:0x0c61, B:591:0x0c71, B:594:0x0c79, B:592:0x0c75, B:595:0x0c84, B:597:0x0c8a, B:600:0x0c91, B:602:0x0c9d, B:604:0x0cad, B:607:0x0cb5, B:605:0x0cb1, B:577:0x0c38, B:579:0x0c3c, B:536:0x0b79), top: B:1809:0x0b79 }] */
    /* JADX WARN: Removed duplicated region for block: B:647:0x0d74  */
    /* JADX WARN: Removed duplicated region for block: B:650:0x0d79 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:655:0x0d8b  */
    /* JADX WARN: Removed duplicated region for block: B:673:0x0de9 A[Catch: Exception -> 0x0bb9, TRY_ENTER, TRY_LEAVE, TryCatch #53 {Exception -> 0x0bb9, blocks: (B:543:0x0b9c, B:549:0x0bc6, B:551:0x0bda, B:554:0x0be6, B:556:0x0bf6, B:558:0x0c04, B:560:0x0c0a, B:562:0x0c0e, B:610:0x0cc3, B:612:0x0cc7, B:614:0x0cd1, B:616:0x0cdd, B:618:0x0ce6, B:620:0x0cec, B:625:0x0d05, B:627:0x0d0b, B:629:0x0d11, B:631:0x0d19, B:633:0x0d1d, B:635:0x0d27, B:638:0x0d36, B:643:0x0d58, B:645:0x0d62, B:656:0x0d8d, B:658:0x0d98, B:660:0x0d9c, B:662:0x0da0, B:663:0x0daa, B:665:0x0db0, B:666:0x0dca, B:668:0x0dd0, B:673:0x0de9, B:679:0x0df6, B:684:0x0e01, B:686:0x0e0b, B:688:0x0e1d, B:695:0x0e2e, B:653:0x0d7e, B:617:0x0ce2, B:567:0x0c22, B:572:0x0c2d, B:582:0x0c48, B:584:0x0c4e, B:587:0x0c55, B:589:0x0c61, B:591:0x0c71, B:594:0x0c79, B:592:0x0c75, B:595:0x0c84, B:597:0x0c8a, B:600:0x0c91, B:602:0x0c9d, B:604:0x0cad, B:607:0x0cb5, B:605:0x0cb1, B:577:0x0c38, B:579:0x0c3c, B:536:0x0b79), top: B:1809:0x0b79 }] */
    /* JADX WARN: Removed duplicated region for block: B:679:0x0df6 A[Catch: Exception -> 0x0bb9, TRY_ENTER, TRY_LEAVE, TryCatch #53 {Exception -> 0x0bb9, blocks: (B:543:0x0b9c, B:549:0x0bc6, B:551:0x0bda, B:554:0x0be6, B:556:0x0bf6, B:558:0x0c04, B:560:0x0c0a, B:562:0x0c0e, B:610:0x0cc3, B:612:0x0cc7, B:614:0x0cd1, B:616:0x0cdd, B:618:0x0ce6, B:620:0x0cec, B:625:0x0d05, B:627:0x0d0b, B:629:0x0d11, B:631:0x0d19, B:633:0x0d1d, B:635:0x0d27, B:638:0x0d36, B:643:0x0d58, B:645:0x0d62, B:656:0x0d8d, B:658:0x0d98, B:660:0x0d9c, B:662:0x0da0, B:663:0x0daa, B:665:0x0db0, B:666:0x0dca, B:668:0x0dd0, B:673:0x0de9, B:679:0x0df6, B:684:0x0e01, B:686:0x0e0b, B:688:0x0e1d, B:695:0x0e2e, B:653:0x0d7e, B:617:0x0ce2, B:567:0x0c22, B:572:0x0c2d, B:582:0x0c48, B:584:0x0c4e, B:587:0x0c55, B:589:0x0c61, B:591:0x0c71, B:594:0x0c79, B:592:0x0c75, B:595:0x0c84, B:597:0x0c8a, B:600:0x0c91, B:602:0x0c9d, B:604:0x0cad, B:607:0x0cb5, B:605:0x0cb1, B:577:0x0c38, B:579:0x0c3c, B:536:0x0b79), top: B:1809:0x0b79 }] */
    /* JADX WARN: Removed duplicated region for block: B:684:0x0e01 A[Catch: Exception -> 0x0bb9, TRY_ENTER, TryCatch #53 {Exception -> 0x0bb9, blocks: (B:543:0x0b9c, B:549:0x0bc6, B:551:0x0bda, B:554:0x0be6, B:556:0x0bf6, B:558:0x0c04, B:560:0x0c0a, B:562:0x0c0e, B:610:0x0cc3, B:612:0x0cc7, B:614:0x0cd1, B:616:0x0cdd, B:618:0x0ce6, B:620:0x0cec, B:625:0x0d05, B:627:0x0d0b, B:629:0x0d11, B:631:0x0d19, B:633:0x0d1d, B:635:0x0d27, B:638:0x0d36, B:643:0x0d58, B:645:0x0d62, B:656:0x0d8d, B:658:0x0d98, B:660:0x0d9c, B:662:0x0da0, B:663:0x0daa, B:665:0x0db0, B:666:0x0dca, B:668:0x0dd0, B:673:0x0de9, B:679:0x0df6, B:684:0x0e01, B:686:0x0e0b, B:688:0x0e1d, B:695:0x0e2e, B:653:0x0d7e, B:617:0x0ce2, B:567:0x0c22, B:572:0x0c2d, B:582:0x0c48, B:584:0x0c4e, B:587:0x0c55, B:589:0x0c61, B:591:0x0c71, B:594:0x0c79, B:592:0x0c75, B:595:0x0c84, B:597:0x0c8a, B:600:0x0c91, B:602:0x0c9d, B:604:0x0cad, B:607:0x0cb5, B:605:0x0cb1, B:577:0x0c38, B:579:0x0c3c, B:536:0x0b79), top: B:1809:0x0b79 }] */
    /* JADX WARN: Removed duplicated region for block: B:691:0x0e27  */
    /* JADX WARN: Removed duplicated region for block: B:694:0x0e2c A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:705:0x0e56  */
    /* JADX WARN: Removed duplicated region for block: B:706:0x0e58  */
    /* JADX WARN: Removed duplicated region for block: B:723:0x0e83 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:726:0x0e88  */
    /* JADX WARN: Removed duplicated region for block: B:730:0x0e91  */
    /* JADX WARN: Removed duplicated region for block: B:734:0x0e98 A[Catch: Exception -> 0x0e77, TryCatch #3 {Exception -> 0x0e77, blocks: (B:709:0x0e61, B:714:0x0e6b, B:716:0x0e73, B:734:0x0e98, B:740:0x0ec0, B:742:0x0ee7, B:766:0x0f54, B:799:0x100c, B:801:0x101a, B:803:0x1022, B:805:0x1049, B:807:0x105c, B:810:0x107b, B:808:0x106c, B:809:0x1074, B:738:0x0eb2, B:750:0x0f20, B:752:0x0f2a, B:756:0x0f39, B:762:0x0f4a, B:727:0x0e8a, B:729:0x0e8e), top: B:1724:0x0e61 }] */
    /* JADX WARN: Removed duplicated region for block: B:746:0x0efe  */
    /* JADX WARN: Removed duplicated region for block: B:765:0x0f52 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:770:0x0fc1  */
    /* JADX WARN: Removed duplicated region for block: B:944:0x12c2 A[Catch: Exception -> 0x1261, TRY_LEAVE, TryCatch #16 {Exception -> 0x1261, blocks: (B:902:0x11eb, B:904:0x11ef, B:914:0x1239, B:905:0x1209, B:907:0x120d, B:909:0x1220, B:910:0x1226, B:912:0x122a, B:913:0x1234, B:929:0x1290, B:932:0x1298, B:934:0x12a2, B:942:0x12bb, B:944:0x12c2), top: B:1726:0x11e7 }] */
    /* JADX WARN: Removed duplicated region for block: B:946:0x12d2 A[Catch: Exception -> 0x13b0, TRY_ENTER, TRY_LEAVE, TryCatch #29 {Exception -> 0x13b0, blocks: (B:927:0x127b, B:940:0x12b5, B:946:0x12d2), top: B:1769:0x127b }] */
    /* JADX WARN: Removed duplicated region for block: B:960:0x132c  */
    /* JADX WARN: Removed duplicated region for block: B:961:0x132f A[Catch: Exception -> 0x141a, TryCatch #37 {Exception -> 0x141a, blocks: (B:953:0x12f9, B:954:0x130d, B:958:0x1326, B:970:0x136a, B:974:0x1381, B:976:0x1388, B:978:0x1394, B:980:0x13a1, B:981:0x13a5, B:961:0x132f, B:963:0x1349, B:965:0x1350, B:967:0x1356, B:968:0x1364, B:987:0x13d2, B:989:0x13ed, B:991:0x1400, B:992:0x140e), top: B:1781:0x1279 }] */
    /* JADX WARN: Removed duplicated region for block: B:970:0x136a A[Catch: Exception -> 0x141a, TryCatch #37 {Exception -> 0x141a, blocks: (B:953:0x12f9, B:954:0x130d, B:958:0x1326, B:970:0x136a, B:974:0x1381, B:976:0x1388, B:978:0x1394, B:980:0x13a1, B:981:0x13a5, B:961:0x132f, B:963:0x1349, B:965:0x1350, B:967:0x1356, B:968:0x1364, B:987:0x13d2, B:989:0x13ed, B:991:0x1400, B:992:0x140e), top: B:1781:0x1279 }] */
    /* JADX WARN: Removed duplicated region for block: B:975:0x1384  */
    /* JADX WARN: Removed duplicated region for block: B:978:0x1394 A[Catch: Exception -> 0x141a, TryCatch #37 {Exception -> 0x141a, blocks: (B:953:0x12f9, B:954:0x130d, B:958:0x1326, B:970:0x136a, B:974:0x1381, B:976:0x1388, B:978:0x1394, B:980:0x13a1, B:981:0x13a5, B:961:0x132f, B:963:0x1349, B:965:0x1350, B:967:0x1356, B:968:0x1364, B:987:0x13d2, B:989:0x13ed, B:991:0x1400, B:992:0x140e), top: B:1781:0x1279 }] */
    /* JADX WARN: Type inference failed for: r10v2, types: [java.lang.Object] */
    /* JADX WARN: Type inference failed for: r11v140, types: [android.content.SharedPreferences] */
    /* JADX WARN: Type inference failed for: r11v141, types: [boolean] */
    /* JADX WARN: Type inference failed for: r11v174 */
    /* JADX WARN: Type inference failed for: r11v175 */
    /* JADX WARN: Type inference failed for: r11v67 */
    /* JADX WARN: Type inference failed for: r11v68 */
    /* JADX WARN: Type inference failed for: r11v91 */
    /* JADX WARN: Type inference failed for: r12v127, types: [java.lang.StringBuilder] */
    /* JADX WARN: Type inference failed for: r12v128, types: [java.lang.String] */
    /* JADX WARN: Type inference failed for: r12v138 */
    /* JADX WARN: Type inference failed for: r12v18 */
    /* JADX WARN: Type inference failed for: r12v70 */
    /* JADX WARN: Type inference failed for: r13v116, types: [org.telegram.tgnet.TLRPC$Peer] */
    /* JADX WARN: Type inference failed for: r13v117 */
    /* JADX WARN: Type inference failed for: r13v118 */
    /* JADX WARN: Type inference failed for: r13v121, types: [long] */
    /* JADX WARN: Type inference failed for: r13v130, types: [long] */
    /* JADX WARN: Type inference failed for: r13v135 */
    /* JADX WARN: Type inference failed for: r13v136 */
    /* JADX WARN: Type inference failed for: r13v137 */
    /* JADX WARN: Type inference failed for: r13v139, types: [org.telegram.tgnet.TLRPC$TL_messageReplyStoryHeader, org.telegram.tgnet.TLRPC$MessageReplyHeader] */
    /* JADX WARN: Type inference failed for: r13v156 */
    /* JADX WARN: Type inference failed for: r13v157 */
    /* JADX WARN: Type inference failed for: r13v158 */
    /* JADX WARN: Type inference failed for: r13v159 */
    /* JADX WARN: Type inference failed for: r13v160 */
    /* JADX WARN: Type inference failed for: r13v161 */
    /* JADX WARN: Type inference failed for: r13v162 */
    /* JADX WARN: Type inference failed for: r13v167 */
    /* JADX WARN: Type inference failed for: r13v168 */
    /* JADX WARN: Type inference failed for: r13v169 */
    /* JADX WARN: Type inference failed for: r13v171 */
    /* JADX WARN: Type inference failed for: r13v43 */
    /* JADX WARN: Type inference failed for: r13v44 */
    /* JADX WARN: Type inference failed for: r13v53 */
    /* JADX WARN: Type inference failed for: r13v56 */
    /* JADX WARN: Type inference failed for: r13v58 */
    /* JADX WARN: Type inference failed for: r13v59 */
    /* JADX WARN: Type inference failed for: r13v61 */
    /* JADX WARN: Type inference failed for: r13v62 */
    /* JADX WARN: Type inference failed for: r13v63 */
    /* JADX WARN: Type inference failed for: r13v66 */
    /* JADX WARN: Type inference failed for: r13v69 */
    /* JADX WARN: Type inference failed for: r13v70 */
    /* JADX WARN: Type inference failed for: r13v71 */
    /* JADX WARN: Type inference failed for: r14v60, types: [int] */
    /* JADX WARN: Type inference failed for: r14v7, types: [org.telegram.tgnet.TLRPC$InputPeer] */
    /* JADX WARN: Type inference failed for: r14v9 */
    /* JADX WARN: Type inference failed for: r14v96 */
    /* JADX WARN: Type inference failed for: r15v16, types: [byte[]] */
    /* JADX WARN: Type inference failed for: r15v25, types: [org.telegram.tgnet.AbstractSerializedData, org.telegram.tgnet.SerializedData] */
    /* JADX WARN: Type inference failed for: r15v30, types: [byte[]] */
    /* JADX WARN: Type inference failed for: r15v46 */
    /* JADX WARN: Type inference failed for: r15v47 */
    /* JADX WARN: Type inference failed for: r15v49 */
    /* JADX WARN: Type inference failed for: r21v0 */
    /* JADX WARN: Type inference failed for: r21v1 */
    /* JADX WARN: Type inference failed for: r2v233, types: [java.lang.StringBuilder] */
    /* JADX WARN: Type inference failed for: r3v133, types: [org.telegram.tgnet.TLRPC$TL_inputMediaDice] */
    /* JADX WARN: Type inference failed for: r3v136, types: [org.telegram.tgnet.TLRPC$TL_inputMediaPoll, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r3v26 */
    /* JADX WARN: Type inference failed for: r3v36 */
    /* JADX WARN: Type inference failed for: r3v37 */
    /* JADX WARN: Type inference failed for: r3v44 */
    /* JADX WARN: Type inference failed for: r4v64, types: [org.telegram.tgnet.TLRPC$TL_inputMediaPhoto, org.telegram.tgnet.TLRPC$InputMedia] */
    /* JADX WARN: Type inference failed for: r6v131 */
    /* JADX WARN: Type inference failed for: r6v132 */
    /* JADX WARN: Type inference failed for: r6v133 */
    /* JADX WARN: Type inference failed for: r6v35, types: [long] */
    /* JADX WARN: Type inference failed for: r6v36 */
    /* JADX WARN: Type inference failed for: r6v66 */
    /* JADX WARN: Type inference failed for: r6v70 */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public void sendMessage(SendMessageParams sendMessageParams) {
        String str;
        TLRPC$InputPeer tLRPC$InputPeer;
        int i;
        TLRPC$InputPeer tLRPC$InputPeer2;
        long j;
        long j2;
        TLRPC$Peer tLRPC$Peer;
        TLRPC$EncryptedChat tLRPC$EncryptedChat;
        boolean z;
        long j3;
        long j4;
        SendMessagesHelper sendMessagesHelper;
        Exception exc;
        int i2;
        MessageObject messageObject;
        TLRPC$Message tLRPC$Message;
        SendMessagesHelper sendMessagesHelper2;
        int i3;
        Object obj;
        MessageObject messageObject2;
        boolean z2;
        TLRPC$Message tLRPC$Message2;
        SendMessagesHelper sendMessagesHelper3;
        SendMessagesHelper sendMessagesHelper4;
        TLRPC$TL_message tLRPC$TL_message;
        String str2;
        TLRPC$MessageMedia tLRPC$MessageMedia;
        TLRPC$WebPage tLRPC$WebPage;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll;
        TLRPC$InputPeer tLRPC$InputPeer3;
        boolean z3;
        TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage;
        int i4;
        TLRPC$Peer tLRPC$Peer2;
        MessageObject messageObject3;
        String str3;
        TLRPC$TL_photo tLRPC$TL_photo;
        ArrayList<TLRPC$MessageEntity> arrayList;
        TLRPC$TL_document tLRPC$TL_document;
        String str4;
        boolean z4;
        TL_stories$StoryItem tL_stories$StoryItem;
        HashMap<String, String> hashMap;
        String str5;
        TLRPC$Message tLRPC$Message3;
        DelayedMessage delayedMessage;
        boolean z5;
        TLRPC$Message tLRPC$TL_message2;
        TLRPC$Message tLRPC$Message4;
        TLRPC$TL_document tLRPC$TL_document2;
        boolean z6;
        DelayedMessage delayedMessage2;
        String stickerSetName;
        SendMessagesHelper sendMessagesHelper5;
        TLRPC$TL_message_secret tLRPC$TL_message_secret;
        ArrayList<TLRPC$PhotoSize> arrayList2;
        SendMessagesHelper sendMessagesHelper6;
        SendMessagesHelper sendMessagesHelper7;
        TLRPC$Message tLRPC$TL_message3;
        TLRPC$Message tLRPC$TL_message4;
        SendMessagesHelper sendMessagesHelper8;
        ArrayList<TLRPC$MessageEntity> arrayList3;
        SendMessagesHelper sendMessagesHelper9;
        int i5;
        TLRPC$Message tLRPC$Message5;
        DelayedMessage delayedMessage3;
        int i6;
        long j5;
        TLRPC$Message tLRPC$Message6;
        TLRPC$MessageMedia tLRPC$MessageMedia2;
        TLRPC$WebPage tLRPC$WebPage2;
        TLRPC$User tLRPC$User;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll2;
        boolean z7;
        boolean z8;
        DelayedMessage delayedMessage4;
        TLRPC$TL_photo tLRPC$TL_photo2;
        int i7;
        TLRPC$TL_document tLRPC$TL_document3;
        String str6;
        ArrayList<TLRPC$MessageEntity> arrayList4;
        char c;
        MessageObject messageObject4;
        TLRPC$Message tLRPC$TL_message5;
        TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage2;
        String str7;
        Object obj2;
        TLRPC$MessageMedia tLRPC$MessageMedia3;
        boolean z9;
        int i8;
        String str8;
        SendMessageParams sendMessageParams2;
        int i9;
        long j6;
        long j7;
        MessageObject messageObject5;
        int i10;
        Object obj3;
        String str9;
        long j8;
        int i11;
        String str10;
        MessageObject messageObject6;
        TL_stories$StoryItem tL_stories$StoryItem2;
        char c2;
        MessageObject messageObject7;
        MessageObject messageObject8;
        TLRPC$InputPeer tLRPC$InputPeer4;
        char c3;
        char c4;
        ChatActivity.ReplyQuote replyQuote;
        int i12;
        char c5;
        TL_stories$StoryItem tL_stories$StoryItem3;
        ?? r13;
        int i13;
        ?? r132;
        int i14;
        long j9;
        int i15;
        long j10;
        boolean z10;
        long j11;
        boolean z11;
        long j12;
        TLRPC$Message tLRPC$Message7;
        SendMessagesHelper sendMessagesHelper10;
        TLRPC$Message tLRPC$Message8;
        VideoEditedInfo videoEditedInfo;
        VideoEditedInfo videoEditedInfo2;
        VideoEditedInfo videoEditedInfo3;
        int i16;
        DelayedMessage delayedMessage5;
        TLRPC$Message tLRPC$Message9;
        ?? r6;
        long j13;
        TLRPC$InputPeer tLRPC$InputPeer5;
        int i17;
        SendMessagesHelper sendMessagesHelper11;
        TLRPC$Message tLRPC$Message10;
        int i18;
        SendMessagesHelper sendMessagesHelper12;
        TLRPC$Message tLRPC$Message11;
        int i19;
        MessageObject messageObject9;
        long id;
        TLRPC$TL_messages_sendMessage tLRPC$TL_messages_sendMessage;
        SendMessagesHelper sendMessagesHelper13;
        char c6;
        int i20;
        SendMessagesHelper sendMessagesHelper14;
        TLRPC$Message tLRPC$Message12;
        SendMessagesHelper sendMessagesHelper15;
        TLRPC$Message tLRPC$Message13;
        int i21;
        TLRPC$Message tLRPC$Message14;
        int i22;
        TLRPC$TL_messages_sendInlineBotResult tLRPC$TL_messages_sendInlineBotResult;
        SendMessagesHelper sendMessagesHelper16;
        TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage;
        DelayedMessage delayedMessage6;
        long j14;
        char c7;
        TLRPC$Message tLRPC$Message15;
        SendMessageParams sendMessageParams3;
        DelayedMessage delayedMessage7;
        String str11;
        Object obj4;
        long j15;
        ArrayList<TLRPC$PhotoSize> arrayList5;
        SendMessageParams sendMessageParams4;
        Object obj5;
        TLRPC$Message tLRPC$Message16;
        byte[] bArr;
        int i23;
        byte[] bArr2;
        TLRPC$Message tLRPC$Message17;
        TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia;
        long j16;
        TLRPC$Message tLRPC$Message18;
        TL_stories$StoryItem tL_stories$StoryItem4;
        char c8;
        MessageObject messageObject10;
        TLRPC$InputPeer tLRPC$InputPeer6;
        SendMessageParams sendMessageParams5;
        String str12;
        HashMap<String, String> hashMap2;
        int i24;
        boolean z12;
        TLRPC$Message tLRPC$Message19;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$Message tLRPC$Message20;
        DelayedMessage delayedMessage8;
        TLRPC$InputMedia tLRPC$InputMedia2;
        String str13;
        TLRPC$Message tLRPC$Message21;
        VideoEditedInfo videoEditedInfo4;
        VideoEditedInfo videoEditedInfo5;
        TLRPC$Message tLRPC$Message22;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument;
        SendMessageParams sendMessageParams6;
        SendMessageParams sendMessageParams7;
        TLRPC$InputMedia tLRPC$InputMedia3;
        SendMessageParams sendMessageParams8;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument2;
        SendMessageParams sendMessageParams9;
        TLRPC$Message tLRPC$Message23;
        String str14;
        SendMessageParams sendMessageParams10;
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument3;
        char c9;
        TLRPC$Message tLRPC$Message24;
        TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory;
        TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory2;
        char c10;
        SendMessageParams sendMessageParams11;
        TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory3;
        TLRPC$Message tLRPC$Message25;
        TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia;
        String str15;
        SendMessageParams sendMessageParams12;
        MessageObject messageObject11;
        int i25;
        int i26;
        TLRPC$Message tLRPC$Message26;
        int i27;
        TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia;
        TLRPC$InputMedia tLRPC$TL_inputMediaGeoPoint;
        ArrayList<MessageObject> arrayList6;
        long j17;
        int i28;
        long j18;
        TLRPC$Peer tLRPC$Peer3;
        TLRPC$Peer tLRPC$Peer4;
        boolean z13;
        MessagesController messagesController;
        ?? r133;
        boolean z14;
        boolean z15;
        TLRPC$MessageMedia tLRPC$MessageMedia4;
        long topicId;
        TLRPC$Peer tLRPC$Peer5;
        String str16;
        boolean z16;
        SharedPreferences notificationsSettings;
        StringBuilder sb;
        String str17;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll3;
        TLRPC$User tLRPC$User2;
        MessageObject messageObject12;
        String str18 = sendMessageParams.message;
        String str19 = sendMessageParams.caption;
        TLRPC$MessageMedia tLRPC$MessageMedia5 = sendMessageParams.location;
        TLRPC$TL_photo tLRPC$TL_photo3 = sendMessageParams.photo;
        VideoEditedInfo videoEditedInfo6 = sendMessageParams.videoEditedInfo;
        TLRPC$User tLRPC$User3 = sendMessageParams.user;
        TLRPC$TL_document tLRPC$TL_document4 = sendMessageParams.document;
        TLRPC$TL_game tLRPC$TL_game = sendMessageParams.game;
        TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll4 = sendMessageParams.poll;
        TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice = sendMessageParams.invoice;
        long j19 = sendMessageParams.peer;
        String str20 = sendMessageParams.path;
        MessageObject messageObject13 = sendMessageParams.replyToMsg;
        TLRPC$TL_document tLRPC$TL_document5 = tLRPC$TL_document4;
        MessageObject messageObject14 = sendMessageParams.replyToTopMsg;
        TLRPC$WebPage tLRPC$WebPage3 = sendMessageParams.webPage;
        TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage3 = sendMessageParams.mediaWebPage;
        TLRPC$Message tLRPC$Message27 = sendMessageParams.searchLinks;
        MessageObject messageObject15 = sendMessageParams.retryMessageObject;
        ArrayList<TLRPC$MessageEntity> arrayList7 = sendMessageParams.entities;
        TLRPC$TL_photo tLRPC$TL_photo4 = tLRPC$TL_photo3;
        TLRPC$ReplyMarkup tLRPC$ReplyMarkup = sendMessageParams.replyMarkup;
        HashMap<String, String> hashMap3 = sendMessageParams.params;
        TLRPC$MessageMedia tLRPC$MessageMedia6 = tLRPC$MessageMedia5;
        boolean z17 = sendMessageParams.notify;
        int i29 = sendMessageParams.scheduleDate;
        int i30 = sendMessageParams.ttl;
        ?? r10 = sendMessageParams.parentObject;
        MessageObject.SendAnimationData sendAnimationData = sendMessageParams.sendAnimationData;
        boolean z18 = sendMessageParams.updateStickersOrder;
        boolean z19 = sendMessageParams.hasMediaSpoilers;
        TL_stories$StoryItem tL_stories$StoryItem5 = sendMessageParams.replyToStoryItem;
        TL_stories$StoryItem tL_stories$StoryItem6 = sendMessageParams.sendingStory;
        ChatActivity.ReplyQuote replyQuote2 = sendMessageParams.replyQuote;
        boolean z20 = sendMessageParams.invert_media;
        String str21 = sendMessageParams.quick_reply_shortcut;
        int i31 = sendMessageParams.quick_reply_shortcut_id;
        if ((tLRPC$User3 != null && tLRPC$User3.phone == null) || j19 == 0) {
            return;
        }
        if (str18 == null && str19 == null) {
            str19 = "";
        }
        String str22 = str19;
        if (replyQuote2 != null && (messageObject12 = replyQuote2.message) != null && messageObject13 != null) {
            messageObject13 = messageObject12;
        }
        String str23 = (hashMap3 == null || !hashMap3.containsKey("originalPath")) ? null : hashMap3.get("originalPath");
        char c11 = 65535;
        if (DialogObject.isEncryptedDialog(j19)) {
            str = str23;
            tLRPC$InputPeer = null;
        } else {
            str = str23;
            tLRPC$InputPeer = getMessagesController().getInputPeer(j19);
        }
        MessageObject messageObject16 = messageObject13;
        TLRPC$User tLRPC$User4 = tLRPC$User3;
        long clientUserId = getUserConfig().getClientUserId();
        if (DialogObject.isEncryptedDialog(j19)) {
            i = i31;
            tLRPC$EncryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j19)));
            if (tLRPC$EncryptedChat == null) {
                if (messageObject15 != null) {
                    getMessagesStorage().markMessageAsSendError(messageObject15.messageOwner, messageObject15.scheduled ? 1 : 0);
                    messageObject15.messageOwner.send_state = 2;
                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(messageObject15.getId()));
                    processSentMessage(messageObject15.getId());
                    return;
                }
                return;
            }
            tLRPC$InputPeer2 = tLRPC$InputPeer;
            j = clientUserId;
            j2 = 0;
            tLRPC$Peer = null;
        } else {
            i = i31;
            if (tLRPC$InputPeer instanceof TLRPC$TL_inputPeerChannel) {
                j = clientUserId;
                TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer.channel_id));
                TLRPC$ChatFull chatFull = getMessagesController().getChatFull(chat.id);
                boolean z21 = !chat.megagroup;
                if (z21 && chat.has_link && chatFull != null) {
                    j3 = chatFull.linked_chat_id;
                    z = z21;
                } else {
                    z = z21;
                    j3 = 0;
                }
                tLRPC$InputPeer2 = tLRPC$InputPeer;
                tLRPC$Peer = getMessagesController().getPeer(ChatObject.getSendAsPeerId(chat, chatFull, true));
                j2 = j3;
                tLRPC$EncryptedChat = null;
                j4 = j2;
                if (messageObject15 == null) {
                    TLRPC$Message tLRPC$Message28 = messageObject15.messageOwner;
                    String str24 = r10;
                    str24 = r10;
                    if (r10 == 0 && hashMap3 != null) {
                        try {
                            str24 = r10;
                            if (hashMap3.containsKey("parentObject")) {
                                str24 = hashMap3.get("parentObject");
                            }
                        } catch (Exception e) {
                            sendMessagesHelper3 = this;
                            exc = e;
                            tLRPC$Message2 = tLRPC$Message28;
                            i5 = i29;
                            tLRPC$Message5 = tLRPC$Message2;
                            sendMessagesHelper9 = sendMessagesHelper3;
                            messageObject = null;
                            i3 = i5;
                            tLRPC$Message = tLRPC$Message5;
                            sendMessagesHelper2 = sendMessagesHelper9;
                            FileLog.e(exc);
                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                            if (messageObject != null) {
                            }
                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                            return;
                        }
                    }
                    if (!messageObject15.isForwarded() && (hashMap3 == null || !hashMap3.containsKey("fwd_id"))) {
                        if (messageObject15.isDice()) {
                            str18 = messageObject15.getDiceEmoji();
                            str22 = "";
                            str17 = str24;
                            obj = "parentObject";
                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                            tLRPC$User2 = tLRPC$User4;
                            c11 = 11;
                        } else {
                            if (messageObject15.type != 0 && !messageObject15.isAnimatedEmoji()) {
                                int i32 = messageObject15.type;
                                str17 = str24;
                                if (i32 == 4) {
                                    tLRPC$MessageMedia6 = tLRPC$Message28.media;
                                    obj = "parentObject";
                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                    tLRPC$User2 = tLRPC$User4;
                                    c11 = 1;
                                } else if (i32 == 1) {
                                    TLRPC$TL_photo tLRPC$TL_photo5 = (TLRPC$TL_photo) tLRPC$Message28.media.photo;
                                    String str25 = messageObject15.messageOwner.message;
                                    if (str25 != null) {
                                        str22 = str25;
                                    }
                                    tLRPC$TL_photo4 = tLRPC$TL_photo5;
                                    obj = "parentObject";
                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                    tLRPC$User2 = tLRPC$User4;
                                    c11 = 2;
                                } else {
                                    if (i32 != 3 && i32 != 5 && messageObject15.videoEditedInfo == null) {
                                        if (i32 == 12) {
                                            tLRPC$User2 = new TLRPC$TL_userRequest_old2();
                                            TLRPC$MessageMedia tLRPC$MessageMedia7 = tLRPC$Message28.media;
                                            obj = "parentObject";
                                            tLRPC$User2.phone = tLRPC$MessageMedia7.phone_number;
                                            tLRPC$User2.first_name = tLRPC$MessageMedia7.first_name;
                                            tLRPC$User2.last_name = tLRPC$MessageMedia7.last_name;
                                            TLRPC$TL_restrictionReason tLRPC$TL_restrictionReason = new TLRPC$TL_restrictionReason();
                                            tLRPC$TL_restrictionReason.platform = "";
                                            tLRPC$TL_restrictionReason.reason = "";
                                            tLRPC$TL_restrictionReason.text = tLRPC$Message28.media.vcard;
                                            tLRPC$User2.restriction_reason.add(tLRPC$TL_restrictionReason);
                                            tLRPC$User2.id = tLRPC$Message28.media.user_id;
                                            c11 = 6;
                                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                        } else {
                                            obj = "parentObject";
                                            if (i32 != 8 && i32 != 9 && i32 != 13 && i32 != 14 && i32 != 15) {
                                                if (i32 == 2) {
                                                    String str26 = messageObject15.messageOwner.message;
                                                    tLRPC$TL_document5 = (TLRPC$TL_document) tLRPC$Message28.media.document;
                                                    if (str26 != null) {
                                                        str22 = str26;
                                                    }
                                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                                    tLRPC$User2 = tLRPC$User4;
                                                    c11 = '\b';
                                                } else if (i32 == 17) {
                                                    tLRPC$TL_messageMediaPoll3 = (TLRPC$TL_messageMediaPoll) tLRPC$Message28.media;
                                                    tLRPC$User2 = tLRPC$User4;
                                                    c11 = '\n';
                                                } else {
                                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                                    tLRPC$User2 = tLRPC$User4;
                                                }
                                            }
                                            String str27 = messageObject15.messageOwner.message;
                                            tLRPC$TL_document5 = (TLRPC$TL_document) tLRPC$Message28.media.document;
                                            if (str27 != null) {
                                                str22 = str27;
                                            }
                                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                            tLRPC$User2 = tLRPC$User4;
                                            c11 = 7;
                                        }
                                    }
                                    obj = "parentObject";
                                    String str28 = messageObject15.messageOwner.message;
                                    tLRPC$TL_document5 = (TLRPC$TL_document) tLRPC$Message28.media.document;
                                    if (str28 != null) {
                                        str22 = str28;
                                    }
                                    tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                                    tLRPC$User2 = tLRPC$User4;
                                    c11 = 3;
                                }
                            }
                            str17 = str24;
                            obj = "parentObject";
                            if (!(messageObject15.messageOwner.media instanceof TLRPC$TL_messageMediaGame)) {
                                str18 = tLRPC$Message28.message;
                            }
                            tLRPC$TL_messageMediaPoll3 = tLRPC$TL_messageMediaPoll4;
                            tLRPC$User2 = tLRPC$User4;
                            c11 = 0;
                        }
                        if (hashMap3 != null && hashMap3.containsKey("query_id")) {
                            c11 = '\t';
                        }
                        int i33 = tLRPC$Message28.media.ttl_seconds;
                        tLRPC$User = tLRPC$User2;
                        tLRPC$WebPage2 = tLRPC$WebPage3;
                        tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll3;
                        if (i33 > 0) {
                            tLRPC$TL_document3 = tLRPC$TL_document5;
                            messageObject4 = str17;
                            str4 = str20;
                            tLRPC$MessageMedia2 = tLRPC$MessageMedia6;
                            z8 = z19;
                            str6 = str22;
                            delayedMessage4 = null;
                            z7 = false;
                            tLRPC$Message6 = tLRPC$Message28;
                            arrayList4 = arrayList7;
                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                            sendMessagesHelper8 = this;
                            i7 = i33;
                            tLRPC$TL_photo2 = tLRPC$TL_photo4;
                            j5 = j;
                        } else {
                            messageObject4 = str17;
                            tLRPC$MessageMedia2 = tLRPC$MessageMedia6;
                            z8 = z19;
                            j5 = j;
                            delayedMessage4 = null;
                            tLRPC$Message6 = tLRPC$Message28;
                            arrayList4 = arrayList7;
                            i7 = i30;
                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                            sendMessagesHelper8 = this;
                            tLRPC$TL_document3 = tLRPC$TL_document5;
                            str4 = str20;
                            tLRPC$TL_photo2 = tLRPC$TL_photo4;
                            str6 = str22;
                            z7 = false;
                        }
                        messageObject3 = messageObject15;
                        c = c11;
                    }
                    obj = "parentObject";
                    tLRPC$WebPage2 = tLRPC$WebPage3;
                    messageObject4 = str24;
                    tLRPC$MessageMedia2 = tLRPC$MessageMedia6;
                    tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll4;
                    z8 = z19;
                    tLRPC$User = tLRPC$User4;
                    j5 = j;
                    delayedMessage4 = null;
                    tLRPC$Message6 = tLRPC$Message28;
                    arrayList4 = arrayList7;
                    i7 = i30;
                    tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                    sendMessagesHelper8 = this;
                    tLRPC$TL_document3 = tLRPC$TL_document5;
                    str4 = str20;
                    tLRPC$TL_photo2 = tLRPC$TL_photo4;
                    str6 = str22;
                    z7 = false;
                    messageObject3 = messageObject15;
                    c = 4;
                } else {
                    obj = "parentObject";
                    try {
                        if (DialogObject.isChatDialog(j19)) {
                            messageObject2 = r10;
                            z2 = ChatObject.canSendStickers(getMessagesController().getChat(Long.valueOf(-j19)));
                        } else {
                            messageObject2 = r10;
                            z2 = true;
                        }
                        try {
                            if (str18 != null) {
                                if (tLRPC$EncryptedChat != null) {
                                    tLRPC$TL_message5 = new TLRPC$TL_message_secret();
                                } else {
                                    tLRPC$TL_message5 = new TLRPC$TL_message();
                                }
                                if (tLRPC$EncryptedChat != null) {
                                    try {
                                        if (tLRPC$WebPage3 instanceof TLRPC$TL_webPagePending) {
                                            if (tLRPC$WebPage3.url != null) {
                                                TLRPC$TL_webPageUrlPending tLRPC$TL_webPageUrlPending = new TLRPC$TL_webPageUrlPending();
                                                tLRPC$TL_webPageUrlPending.url = tLRPC$WebPage3.url;
                                                tLRPC$WebPage3 = tLRPC$TL_webPageUrlPending;
                                            } else {
                                                tLRPC$WebPage3 = null;
                                            }
                                        }
                                    } catch (Exception e2) {
                                        sendMessagesHelper3 = this;
                                        exc = e2;
                                        tLRPC$Message2 = tLRPC$TL_message5;
                                        i5 = i29;
                                        tLRPC$Message5 = tLRPC$Message2;
                                        sendMessagesHelper9 = sendMessagesHelper3;
                                        messageObject = null;
                                        i3 = i5;
                                        tLRPC$Message = tLRPC$Message5;
                                        sendMessagesHelper2 = sendMessagesHelper9;
                                        FileLog.e(exc);
                                        getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                        if (messageObject != null) {
                                        }
                                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                        sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                        return;
                                    }
                                }
                                if (z2 && str18.length() < 30 && tLRPC$WebPage3 == null && ((arrayList7 == null || arrayList7.isEmpty()) && getMessagesController().diceEmojies.contains(str18.replace("️", "")) && tLRPC$EncryptedChat == null && i29 == 0)) {
                                    TLRPC$TL_messageMediaDice tLRPC$TL_messageMediaDice = new TLRPC$TL_messageMediaDice();
                                    tLRPC$TL_messageMediaDice.emoticon = str18;
                                    tLRPC$TL_messageMediaDice.value = -1;
                                    tLRPC$TL_message5.media = tLRPC$TL_messageMediaDice;
                                    hashMap = hashMap3;
                                    tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                    arrayList = arrayList7;
                                    tLRPC$TL_document = tLRPC$TL_document5;
                                    str4 = str20;
                                    tLRPC$TL_photo = tLRPC$TL_photo4;
                                    tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                    i4 = i30;
                                    z4 = z19;
                                    delayedMessage = null;
                                    c11 = 11;
                                    z5 = false;
                                    str5 = "";
                                    tLRPC$Peer2 = tLRPC$Peer;
                                    messageObject3 = messageObject15;
                                    tLRPC$MessageMedia = tLRPC$MessageMedia6;
                                    tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                    sendMessagesHelper8 = this;
                                    str2 = str18;
                                    tLRPC$WebPage = tLRPC$WebPage3;
                                    tLRPC$Message3 = tLRPC$TL_message5;
                                    tL_stories$StoryItem = tL_stories$StoryItem6;
                                    if (arrayList != null) {
                                    }
                                    arrayList3 = arrayList;
                                    if (str5 != null) {
                                    }
                                    if (tLRPC$Message3.attachPath == null) {
                                    }
                                    int newMessageId = getUserConfig().getNewMessageId();
                                    tLRPC$Message3.id = newMessageId;
                                    tLRPC$Message3.local_id = newMessageId;
                                    tLRPC$Message3.out = true;
                                    if (z) {
                                    }
                                    delayedMessage3 = delayedMessage;
                                    tL_stories$StoryItem6 = tL_stories$StoryItem;
                                    tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                    if (tLRPC$Peer2 != null) {
                                    }
                                } else {
                                    if (tLRPC$TL_messageMediaWebPage3 != null) {
                                        tLRPC$TL_messageMediaWebPage2 = tLRPC$TL_messageMediaWebPage3;
                                        tLRPC$TL_message5.media = tLRPC$TL_messageMediaWebPage2;
                                    } else {
                                        tLRPC$TL_messageMediaWebPage2 = tLRPC$TL_messageMediaWebPage3;
                                        if (tLRPC$WebPage3 == null) {
                                            tLRPC$TL_message5.media = new TLRPC$TL_messageMediaEmpty();
                                        } else {
                                            TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage4 = new TLRPC$TL_messageMediaWebPage();
                                            tLRPC$TL_message5.media = tLRPC$TL_messageMediaWebPage4;
                                            tLRPC$TL_messageMediaWebPage4.webpage = tLRPC$WebPage3;
                                        }
                                    }
                                    c11 = (hashMap3 == null || !hashMap3.containsKey("query_id")) ? (char) 0 : '\t';
                                    tLRPC$TL_message5.message = str18;
                                    hashMap = hashMap3;
                                    tLRPC$WebPage = tLRPC$WebPage3;
                                    tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                    arrayList = arrayList7;
                                    tLRPC$TL_document = tLRPC$TL_document5;
                                    str4 = str20;
                                    tLRPC$TL_photo = tLRPC$TL_photo4;
                                    tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                    z4 = z19;
                                    tL_stories$StoryItem = tL_stories$StoryItem6;
                                    str5 = str22;
                                    delayedMessage = null;
                                    z5 = false;
                                    messageObject3 = messageObject15;
                                    tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage2;
                                    tLRPC$MessageMedia = tLRPC$MessageMedia6;
                                    i4 = i30;
                                    str2 = str18;
                                    tLRPC$Peer2 = tLRPC$Peer;
                                    tLRPC$Message3 = tLRPC$TL_message5;
                                    sendMessagesHelper8 = this;
                                    if (arrayList != null || arrayList.isEmpty()) {
                                        arrayList3 = arrayList;
                                    } else {
                                        arrayList3 = arrayList;
                                        tLRPC$Message3.entities = arrayList3;
                                        tLRPC$Message3.flags |= 128;
                                    }
                                    if (str5 != null) {
                                        tLRPC$Message3.message = str5;
                                    } else {
                                        try {
                                            if (tLRPC$Message3.message == null) {
                                                tLRPC$Message3.message = "";
                                            }
                                        } catch (Exception e3) {
                                            sendMessagesHelper9 = sendMessagesHelper8;
                                            i5 = i29;
                                            exc = e3;
                                            tLRPC$Message5 = tLRPC$Message3;
                                            messageObject = null;
                                            i3 = i5;
                                            tLRPC$Message = tLRPC$Message5;
                                            sendMessagesHelper2 = sendMessagesHelper9;
                                            FileLog.e(exc);
                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                            if (messageObject != null) {
                                            }
                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                            return;
                                        }
                                    }
                                    if (tLRPC$Message3.attachPath == null) {
                                        tLRPC$Message3.attachPath = "";
                                    }
                                    int newMessageId2 = getUserConfig().getNewMessageId();
                                    tLRPC$Message3.id = newMessageId2;
                                    tLRPC$Message3.local_id = newMessageId2;
                                    tLRPC$Message3.out = true;
                                    if (z || tLRPC$InputPeer3 == null) {
                                        delayedMessage3 = delayedMessage;
                                        tL_stories$StoryItem6 = tL_stories$StoryItem;
                                        tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                        if (tLRPC$Peer2 != null) {
                                            tLRPC$Message3.from_id = tLRPC$Peer2;
                                        } else {
                                            TLRPC$TL_peerUser tLRPC$TL_peerUser = new TLRPC$TL_peerUser();
                                            tLRPC$Message3.from_id = tLRPC$TL_peerUser;
                                            i6 = i4;
                                            j5 = j;
                                            tLRPC$TL_peerUser.user_id = j5;
                                            tLRPC$Message3.flags |= LiteMode.FLAG_CHAT_BLUR;
                                            getUserConfig().saveConfig(false);
                                            tLRPC$Message6 = tLRPC$Message3;
                                            str18 = str2;
                                            tLRPC$MessageMedia2 = tLRPC$MessageMedia;
                                            tLRPC$WebPage2 = tLRPC$WebPage;
                                            tLRPC$User = tLRPC$User4;
                                            tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll;
                                            z7 = z5;
                                            z8 = z4;
                                            delayedMessage4 = delayedMessage3;
                                            tLRPC$TL_photo2 = tLRPC$TL_photo;
                                            i7 = i6;
                                            tLRPC$TL_document3 = tLRPC$TL_document;
                                            str6 = str5;
                                            arrayList4 = arrayList3;
                                            hashMap3 = hashMap;
                                            c = c11;
                                            messageObject4 = messageObject2;
                                        }
                                    } else {
                                        TLRPC$TL_peerChannel tLRPC$TL_peerChannel = new TLRPC$TL_peerChannel();
                                        tLRPC$Message3.from_id = tLRPC$TL_peerChannel;
                                        delayedMessage3 = delayedMessage;
                                        tL_stories$StoryItem6 = tL_stories$StoryItem;
                                        tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                        tLRPC$TL_peerChannel.channel_id = tLRPC$InputPeer2.channel_id;
                                    }
                                    i6 = i4;
                                    j5 = j;
                                    getUserConfig().saveConfig(false);
                                    tLRPC$Message6 = tLRPC$Message3;
                                    str18 = str2;
                                    tLRPC$MessageMedia2 = tLRPC$MessageMedia;
                                    tLRPC$WebPage2 = tLRPC$WebPage;
                                    tLRPC$User = tLRPC$User4;
                                    tLRPC$TL_messageMediaPoll2 = tLRPC$TL_messageMediaPoll;
                                    z7 = z5;
                                    z8 = z4;
                                    delayedMessage4 = delayedMessage3;
                                    tLRPC$TL_photo2 = tLRPC$TL_photo;
                                    i7 = i6;
                                    tLRPC$TL_document3 = tLRPC$TL_document;
                                    str6 = str5;
                                    arrayList4 = arrayList3;
                                    hashMap3 = hashMap;
                                    c = c11;
                                    messageObject4 = messageObject2;
                                }
                            } else {
                                try {
                                    if (tLRPC$TL_messageMediaPoll4 != null) {
                                        if (tLRPC$EncryptedChat != null) {
                                            tLRPC$TL_message4 = new TLRPC$TL_message_secret();
                                        } else {
                                            tLRPC$TL_message4 = new TLRPC$TL_message();
                                        }
                                        tLRPC$TL_message4.media = tLRPC$TL_messageMediaPoll4;
                                        hashMap = hashMap3;
                                        tLRPC$WebPage = tLRPC$WebPage3;
                                        tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                        tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                        arrayList = arrayList7;
                                        tLRPC$TL_document = tLRPC$TL_document5;
                                        str4 = str20;
                                        tLRPC$TL_photo = tLRPC$TL_photo4;
                                        tLRPC$MessageMedia = tLRPC$MessageMedia6;
                                        z4 = z19;
                                        tL_stories$StoryItem = tL_stories$StoryItem6;
                                        str5 = str22;
                                        c11 = '\n';
                                        z5 = false;
                                        str2 = str18;
                                        tLRPC$Message3 = tLRPC$TL_message4;
                                        messageObject3 = messageObject15;
                                        tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                        i4 = i30;
                                        delayedMessage = null;
                                    } else if (tLRPC$MessageMedia6 != null) {
                                        if (tLRPC$EncryptedChat != null) {
                                            tLRPC$TL_message3 = new TLRPC$TL_message_secret();
                                        } else {
                                            tLRPC$TL_message3 = new TLRPC$TL_message();
                                        }
                                        str2 = str18;
                                        tLRPC$TL_message3.media = tLRPC$MessageMedia6;
                                        if (hashMap3 == null || !hashMap3.containsKey("query_id")) {
                                            tLRPC$MessageMedia = tLRPC$MessageMedia6;
                                            hashMap = hashMap3;
                                            tLRPC$Message3 = tLRPC$TL_message3;
                                            tLRPC$WebPage = tLRPC$WebPage3;
                                            tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                            tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                            arrayList = arrayList7;
                                            tLRPC$TL_document = tLRPC$TL_document5;
                                            str4 = str20;
                                            tLRPC$TL_photo = tLRPC$TL_photo4;
                                            z4 = z19;
                                            tL_stories$StoryItem = tL_stories$StoryItem6;
                                            str5 = str22;
                                            delayedMessage = null;
                                            c11 = 1;
                                        } else {
                                            tLRPC$MessageMedia = tLRPC$MessageMedia6;
                                            hashMap = hashMap3;
                                            tLRPC$Message3 = tLRPC$TL_message3;
                                            tLRPC$WebPage = tLRPC$WebPage3;
                                            tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                            tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                            arrayList = arrayList7;
                                            tLRPC$TL_document = tLRPC$TL_document5;
                                            str4 = str20;
                                            tLRPC$TL_photo = tLRPC$TL_photo4;
                                            z4 = z19;
                                            tL_stories$StoryItem = tL_stories$StoryItem6;
                                            str5 = str22;
                                            delayedMessage = null;
                                            c11 = '\t';
                                        }
                                        z5 = false;
                                        messageObject3 = messageObject15;
                                        tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                        i4 = i30;
                                    } else {
                                        str2 = str18;
                                        if (tLRPC$TL_photo4 != null) {
                                            if (tLRPC$EncryptedChat != null) {
                                                tLRPC$TL_message_secret = new TLRPC$TL_message_secret();
                                            } else {
                                                tLRPC$TL_message_secret = new TLRPC$TL_message();
                                            }
                                            tLRPC$MessageMedia = tLRPC$MessageMedia6;
                                            TLRPC$TL_messageMediaPhoto tLRPC$TL_messageMediaPhoto = new TLRPC$TL_messageMediaPhoto();
                                            tLRPC$TL_message_secret.media = tLRPC$TL_messageMediaPhoto;
                                            tLRPC$WebPage = tLRPC$WebPage3;
                                            int i34 = tLRPC$TL_messageMediaPhoto.flags | 3;
                                            tLRPC$TL_messageMediaPhoto.flags = i34;
                                            tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                            z3 = z19;
                                            tLRPC$TL_messageMediaPhoto.spoiler = z3;
                                            if (arrayList7 != null) {
                                                tLRPC$TL_message_secret.entities = arrayList7;
                                            }
                                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                            i4 = i30;
                                            if (i30 != 0) {
                                                tLRPC$TL_messageMediaPhoto.ttl_seconds = i4;
                                                tLRPC$TL_message_secret.ttl = i4;
                                                tLRPC$TL_messageMediaPhoto.flags = i34 | 4;
                                            }
                                            tLRPC$TL_messageMediaPhoto.photo = tLRPC$TL_photo4;
                                            c11 = (hashMap3 == null || !hashMap3.containsKey("query_id")) ? (char) 2 : '\t';
                                            try {
                                                if (str20 == null || str20.length() <= 0) {
                                                    messageObject3 = messageObject15;
                                                    str3 = str20;
                                                } else {
                                                    messageObject3 = messageObject15;
                                                    str3 = str20;
                                                    if (str3.startsWith("http")) {
                                                        tLRPC$TL_message_secret.attachPath = str3;
                                                        tLRPC$Peer2 = tLRPC$Peer;
                                                        tLRPC$TL_photo = tLRPC$TL_photo4;
                                                        tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                                        sendMessagesHelper7 = this;
                                                        hashMap = hashMap3;
                                                        tLRPC$Message3 = tLRPC$TL_message_secret;
                                                        sendMessagesHelper5 = sendMessagesHelper7;
                                                    }
                                                }
                                                tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                                tLRPC$TL_message_secret.attachPath = FileLoader.getInstance(sendMessagesHelper6.currentAccount).getPathToAttach(tLRPC$TL_photo4.sizes.get(arrayList2.size() - 1).location, true).toString();
                                                sendMessagesHelper7 = sendMessagesHelper6;
                                                hashMap = hashMap3;
                                                tLRPC$Message3 = tLRPC$TL_message_secret;
                                                sendMessagesHelper5 = sendMessagesHelper7;
                                            } catch (Exception e4) {
                                                exc = e4;
                                                sendMessagesHelper4 = sendMessagesHelper6;
                                                tLRPC$TL_message = tLRPC$TL_message_secret;
                                                tLRPC$Message2 = tLRPC$TL_message;
                                                sendMessagesHelper3 = sendMessagesHelper4;
                                                i5 = i29;
                                                tLRPC$Message5 = tLRPC$Message2;
                                                sendMessagesHelper9 = sendMessagesHelper3;
                                                messageObject = null;
                                                i3 = i5;
                                                tLRPC$Message = tLRPC$Message5;
                                                sendMessagesHelper2 = sendMessagesHelper9;
                                                FileLog.e(exc);
                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                if (messageObject != null) {
                                                }
                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                return;
                                            }
                                            tLRPC$Peer2 = tLRPC$Peer;
                                            tLRPC$TL_photo = tLRPC$TL_photo4;
                                            sendMessagesHelper6 = this;
                                        } else {
                                            tLRPC$MessageMedia = tLRPC$MessageMedia6;
                                            tLRPC$WebPage = tLRPC$WebPage3;
                                            tLRPC$TL_messageMediaPoll = tLRPC$TL_messageMediaPoll4;
                                            tLRPC$InputPeer3 = tLRPC$InputPeer2;
                                            z3 = z19;
                                            tLRPC$TL_messageMediaWebPage = tLRPC$TL_messageMediaWebPage3;
                                            i4 = i30;
                                            tLRPC$Peer2 = tLRPC$Peer;
                                            SendMessagesHelper sendMessagesHelper17 = this;
                                            messageObject3 = messageObject15;
                                            str3 = str20;
                                            tLRPC$TL_photo = tLRPC$TL_photo4;
                                            try {
                                                if (tLRPC$TL_game != null) {
                                                    tLRPC$Message3 = new TLRPC$TL_message();
                                                    TLRPC$TL_messageMediaGame tLRPC$TL_messageMediaGame = new TLRPC$TL_messageMediaGame();
                                                    tLRPC$Message3.media = tLRPC$TL_messageMediaGame;
                                                    tLRPC$TL_messageMediaGame.game = tLRPC$TL_game;
                                                    if (hashMap3 != null) {
                                                    }
                                                    hashMap = hashMap3;
                                                    sendMessagesHelper5 = sendMessagesHelper17;
                                                } else if (tLRPC$TL_messageMediaInvoice != null) {
                                                    tLRPC$Message3 = new TLRPC$TL_message();
                                                    tLRPC$Message3.media = tLRPC$TL_messageMediaInvoice;
                                                    if (hashMap3 != null) {
                                                    }
                                                    hashMap = hashMap3;
                                                    sendMessagesHelper5 = sendMessagesHelper17;
                                                } else {
                                                    if (tLRPC$User4 != null) {
                                                        if (tLRPC$EncryptedChat != null) {
                                                            tLRPC$Message3 = new TLRPC$TL_message_secret();
                                                        } else {
                                                            tLRPC$Message3 = new TLRPC$TL_message();
                                                        }
                                                        TLRPC$TL_messageMediaContact tLRPC$TL_messageMediaContact = new TLRPC$TL_messageMediaContact();
                                                        tLRPC$Message3.media = tLRPC$TL_messageMediaContact;
                                                        tLRPC$TL_messageMediaContact.phone_number = tLRPC$User4.phone;
                                                        tLRPC$TL_messageMediaContact.first_name = tLRPC$User4.first_name;
                                                        tLRPC$TL_messageMediaContact.last_name = tLRPC$User4.last_name;
                                                        arrayList = arrayList7;
                                                        tLRPC$TL_messageMediaContact.user_id = tLRPC$User4.id;
                                                        if (!tLRPC$User4.restriction_reason.isEmpty() && tLRPC$User4.restriction_reason.get(0).text.startsWith("BEGIN:VCARD")) {
                                                            tLRPC$Message3.media.vcard = tLRPC$User4.restriction_reason.get(0).text;
                                                        } else {
                                                            tLRPC$Message3.media.vcard = "";
                                                        }
                                                        TLRPC$MessageMedia tLRPC$MessageMedia8 = tLRPC$Message3.media;
                                                        if (tLRPC$MessageMedia8.first_name == null) {
                                                            tLRPC$MessageMedia8.first_name = "";
                                                            tLRPC$User4.first_name = "";
                                                        }
                                                        if (tLRPC$MessageMedia8.last_name == null) {
                                                            tLRPC$MessageMedia8.last_name = "";
                                                            tLRPC$User4.last_name = "";
                                                        }
                                                        if (hashMap3 == null || !hashMap3.containsKey("query_id")) {
                                                            c11 = 6;
                                                            hashMap = hashMap3;
                                                            tLRPC$User4 = tLRPC$User4;
                                                            z4 = z3;
                                                            tLRPC$TL_document = tLRPC$TL_document5;
                                                            tL_stories$StoryItem = tL_stories$StoryItem6;
                                                            str5 = str22;
                                                            delayedMessage = null;
                                                        } else {
                                                            hashMap = hashMap3;
                                                            tLRPC$User4 = tLRPC$User4;
                                                            z4 = z3;
                                                            tLRPC$TL_document = tLRPC$TL_document5;
                                                            tL_stories$StoryItem = tL_stories$StoryItem6;
                                                            str5 = str22;
                                                            delayedMessage = null;
                                                            c11 = '\t';
                                                        }
                                                        z5 = false;
                                                    } else {
                                                        arrayList = arrayList7;
                                                        TLRPC$User tLRPC$User5 = tLRPC$User4;
                                                        if (tLRPC$TL_document5 != null) {
                                                            if (tLRPC$EncryptedChat != null) {
                                                                tLRPC$TL_message2 = new TLRPC$TL_message_secret();
                                                            } else {
                                                                tLRPC$TL_message2 = new TLRPC$TL_message();
                                                            }
                                                            try {
                                                                if (!DialogObject.isChatDialog(j19) || z2) {
                                                                    tLRPC$User4 = tLRPC$User5;
                                                                    tLRPC$TL_document2 = tLRPC$TL_document5;
                                                                } else {
                                                                    tLRPC$TL_document2 = tLRPC$TL_document5;
                                                                    int size = tLRPC$TL_document2.attributes.size();
                                                                    int i35 = 0;
                                                                    while (i35 < size) {
                                                                        tLRPC$User4 = tLRPC$User5;
                                                                        if (tLRPC$TL_document2.attributes.get(i35) instanceof TLRPC$TL_documentAttributeAnimated) {
                                                                            tLRPC$TL_document2.attributes.remove(i35);
                                                                            z6 = true;
                                                                            break;
                                                                        }
                                                                        i35++;
                                                                        tLRPC$User5 = tLRPC$User4;
                                                                    }
                                                                    tLRPC$User4 = tLRPC$User5;
                                                                }
                                                                z6 = false;
                                                                TLRPC$TL_messageMediaDocument tLRPC$TL_messageMediaDocument = new TLRPC$TL_messageMediaDocument();
                                                                tLRPC$TL_message2.media = tLRPC$TL_messageMediaDocument;
                                                                int i36 = tLRPC$TL_messageMediaDocument.flags | 3;
                                                                tLRPC$TL_messageMediaDocument.flags = i36;
                                                                tLRPC$TL_messageMediaDocument.spoiler = z3;
                                                                if (i4 != 0) {
                                                                    tLRPC$TL_messageMediaDocument.ttl_seconds = i4;
                                                                    tLRPC$TL_message2.ttl = i4;
                                                                    tLRPC$TL_messageMediaDocument.flags = i36 | 4;
                                                                }
                                                                tLRPC$TL_messageMediaDocument.document = tLRPC$TL_document2;
                                                                if (hashMap3 == null || !hashMap3.containsKey("query_id")) {
                                                                    if ((MessageObject.isVideoSticker(tLRPC$TL_document2) && videoEditedInfo6 == null) || (!MessageObject.isVideoDocument(tLRPC$TL_document2) && !MessageObject.isRoundVideoDocument(tLRPC$TL_document2) && videoEditedInfo6 == null)) {
                                                                        c11 = MessageObject.isVoiceDocument(tLRPC$TL_document2) ? '\b' : (char) 7;
                                                                    }
                                                                    c11 = 3;
                                                                } else {
                                                                    c11 = '\t';
                                                                }
                                                                if (videoEditedInfo6 != null) {
                                                                    String string = videoEditedInfo6.getString();
                                                                    if (hashMap3 == null) {
                                                                        hashMap3 = new HashMap<>();
                                                                    }
                                                                    hashMap3.put("ve", string);
                                                                }
                                                                if (tLRPC$EncryptedChat != null && tLRPC$TL_document2.dc_id > 0 && !MessageObject.isStickerDocument(tLRPC$TL_document2) && !MessageObject.isAnimatedStickerDocument(tLRPC$TL_document2, true) && !MessageObject.isGifDocument(tLRPC$TL_document2)) {
                                                                    tLRPC$TL_message2.attachPath = FileLoader.getInstance(sendMessagesHelper17.currentAccount).getPathToAttach(tLRPC$TL_document2).toString();
                                                                } else {
                                                                    tLRPC$TL_message2.attachPath = str3;
                                                                }
                                                                if (tLRPC$EncryptedChat == null || !(MessageObject.isStickerDocument(tLRPC$TL_document2) || MessageObject.isAnimatedStickerDocument(tLRPC$TL_document2, true))) {
                                                                    hashMap = hashMap3;
                                                                    tLRPC$TL_document = tLRPC$TL_document2;
                                                                    z5 = z6;
                                                                    z4 = z3;
                                                                    tLRPC$Message3 = tLRPC$TL_message2;
                                                                    tL_stories$StoryItem = tL_stories$StoryItem6;
                                                                    str5 = str22;
                                                                    delayedMessage = null;
                                                                } else {
                                                                    int i37 = 0;
                                                                    while (true) {
                                                                        if (i37 >= tLRPC$TL_document2.attributes.size()) {
                                                                            tLRPC$Message4 = tLRPC$TL_message2;
                                                                            hashMap = hashMap3;
                                                                            tLRPC$TL_document = tLRPC$TL_document2;
                                                                            z5 = z6;
                                                                            break;
                                                                        }
                                                                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$TL_document2.attributes.get(i37);
                                                                        tLRPC$Message4 = tLRPC$TL_message2;
                                                                        try {
                                                                            if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeSticker) {
                                                                                tLRPC$TL_document2.attributes.remove(i37);
                                                                                TLRPC$TL_documentAttributeSticker_layer55 tLRPC$TL_documentAttributeSticker_layer55 = new TLRPC$TL_documentAttributeSticker_layer55();
                                                                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeSticker_layer55);
                                                                                tLRPC$TL_documentAttributeSticker_layer55.alt = tLRPC$DocumentAttribute.alt;
                                                                                TLRPC$InputStickerSet tLRPC$InputStickerSet = tLRPC$DocumentAttribute.stickerset;
                                                                                if (tLRPC$InputStickerSet != null) {
                                                                                    hashMap = hashMap3;
                                                                                    if (tLRPC$InputStickerSet instanceof TLRPC$TL_inputStickerSetShortName) {
                                                                                        stickerSetName = tLRPC$InputStickerSet.short_name;
                                                                                        tLRPC$TL_document = tLRPC$TL_document2;
                                                                                        z5 = z6;
                                                                                    } else {
                                                                                        tLRPC$TL_document = tLRPC$TL_document2;
                                                                                        z5 = z6;
                                                                                        stickerSetName = getMediaDataController().getStickerSetName(tLRPC$DocumentAttribute.stickerset.id);
                                                                                    }
                                                                                    if (!TextUtils.isEmpty(stickerSetName)) {
                                                                                        TLRPC$TL_inputStickerSetShortName tLRPC$TL_inputStickerSetShortName = new TLRPC$TL_inputStickerSetShortName();
                                                                                        tLRPC$TL_documentAttributeSticker_layer55.stickerset = tLRPC$TL_inputStickerSetShortName;
                                                                                        tLRPC$TL_inputStickerSetShortName.short_name = stickerSetName;
                                                                                    } else {
                                                                                        if (tLRPC$DocumentAttribute.stickerset instanceof TLRPC$TL_inputStickerSetID) {
                                                                                            delayedMessage2 = new DelayedMessage(j19);
                                                                                            delayedMessage2.encryptedChat = tLRPC$EncryptedChat;
                                                                                            delayedMessage2.locationParent = tLRPC$TL_documentAttributeSticker_layer55;
                                                                                            delayedMessage2.type = 5;
                                                                                            delayedMessage2.parentObject = tLRPC$DocumentAttribute.stickerset;
                                                                                        } else {
                                                                                            delayedMessage2 = null;
                                                                                        }
                                                                                        tLRPC$TL_documentAttributeSticker_layer55.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                                    }
                                                                                } else {
                                                                                    hashMap = hashMap3;
                                                                                    tLRPC$TL_document = tLRPC$TL_document2;
                                                                                    z5 = z6;
                                                                                    tLRPC$TL_documentAttributeSticker_layer55.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                                }
                                                                            } else {
                                                                                i37++;
                                                                                tLRPC$TL_message2 = tLRPC$Message4;
                                                                            }
                                                                        } catch (Exception e5) {
                                                                            e = e5;
                                                                            exc = e;
                                                                            sendMessagesHelper3 = sendMessagesHelper17;
                                                                            tLRPC$Message2 = tLRPC$Message4;
                                                                            i5 = i29;
                                                                            tLRPC$Message5 = tLRPC$Message2;
                                                                            sendMessagesHelper9 = sendMessagesHelper3;
                                                                            messageObject = null;
                                                                            i3 = i5;
                                                                            tLRPC$Message = tLRPC$Message5;
                                                                            sendMessagesHelper2 = sendMessagesHelper9;
                                                                            FileLog.e(exc);
                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                            if (messageObject != null) {
                                                                            }
                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                            return;
                                                                        }
                                                                    }
                                                                    delayedMessage2 = null;
                                                                    delayedMessage = delayedMessage2;
                                                                    z4 = z3;
                                                                    tLRPC$Message3 = tLRPC$Message4;
                                                                    tL_stories$StoryItem = tL_stories$StoryItem6;
                                                                    str5 = str22;
                                                                }
                                                            } catch (Exception e6) {
                                                                e = e6;
                                                                tLRPC$Message4 = tLRPC$TL_message2;
                                                            }
                                                        } else {
                                                            tLRPC$User4 = tLRPC$User5;
                                                            tLRPC$TL_document = tLRPC$TL_document5;
                                                            if (tL_stories$StoryItem6 != null) {
                                                                if (tLRPC$EncryptedChat != null) {
                                                                    tLRPC$Message3 = new TLRPC$TL_message_secret();
                                                                } else {
                                                                    tLRPC$Message3 = new TLRPC$TL_message();
                                                                }
                                                                MessageMediaStoryFull messageMediaStoryFull = new MessageMediaStoryFull();
                                                                tL_stories$StoryItem = tL_stories$StoryItem6;
                                                                messageMediaStoryFull.id = tL_stories$StoryItem.id;
                                                                messageMediaStoryFull.user_id = tL_stories$StoryItem.dialogId;
                                                                str4 = str3;
                                                                z4 = z3;
                                                                messageMediaStoryFull.peer = getMessagesController().getPeer(tL_stories$StoryItem.dialogId);
                                                                messageMediaStoryFull.storyItem = tL_stories$StoryItem;
                                                                tLRPC$Message3.media = messageMediaStoryFull;
                                                                hashMap = hashMap3;
                                                                str5 = str22;
                                                                delayedMessage = null;
                                                                c11 = '\f';
                                                            } else {
                                                                str4 = str3;
                                                                z4 = z3;
                                                                tL_stories$StoryItem = tL_stories$StoryItem6;
                                                                hashMap = hashMap3;
                                                                str5 = str22;
                                                                tLRPC$Message3 = null;
                                                                delayedMessage = null;
                                                            }
                                                            z5 = false;
                                                            sendMessagesHelper8 = sendMessagesHelper17;
                                                        }
                                                    }
                                                    str4 = str3;
                                                    sendMessagesHelper8 = sendMessagesHelper17;
                                                }
                                                if (arrayList != null) {
                                                }
                                                arrayList3 = arrayList;
                                                if (str5 != null) {
                                                }
                                                if (tLRPC$Message3.attachPath == null) {
                                                }
                                                int newMessageId22 = getUserConfig().getNewMessageId();
                                                tLRPC$Message3.id = newMessageId22;
                                                tLRPC$Message3.local_id = newMessageId22;
                                                tLRPC$Message3.out = true;
                                                if (z) {
                                                }
                                                delayedMessage3 = delayedMessage;
                                                tL_stories$StoryItem6 = tL_stories$StoryItem;
                                                tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                                if (tLRPC$Peer2 != null) {
                                                }
                                            } catch (Exception e7) {
                                                exc = e7;
                                                sendMessagesHelper = sendMessagesHelper17;
                                                i2 = i29;
                                                messageObject = null;
                                                tLRPC$Message = null;
                                                i3 = i2;
                                                sendMessagesHelper2 = sendMessagesHelper;
                                                FileLog.e(exc);
                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                if (messageObject != null) {
                                                }
                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                return;
                                            }
                                        }
                                        arrayList = arrayList7;
                                        tLRPC$TL_document = tLRPC$TL_document5;
                                        tL_stories$StoryItem = tL_stories$StoryItem6;
                                        str5 = str22;
                                        delayedMessage = null;
                                        SendMessagesHelper sendMessagesHelper18 = sendMessagesHelper5;
                                        z5 = false;
                                        str4 = str3;
                                        z4 = z3;
                                        sendMessagesHelper8 = sendMessagesHelper18;
                                        if (arrayList != null) {
                                        }
                                        arrayList3 = arrayList;
                                        if (str5 != null) {
                                        }
                                        if (tLRPC$Message3.attachPath == null) {
                                        }
                                        int newMessageId222 = getUserConfig().getNewMessageId();
                                        tLRPC$Message3.id = newMessageId222;
                                        tLRPC$Message3.local_id = newMessageId222;
                                        tLRPC$Message3.out = true;
                                        if (z) {
                                        }
                                        delayedMessage3 = delayedMessage;
                                        tL_stories$StoryItem6 = tL_stories$StoryItem;
                                        tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                        if (tLRPC$Peer2 != null) {
                                        }
                                    }
                                    tLRPC$Peer2 = tLRPC$Peer;
                                    sendMessagesHelper8 = this;
                                    if (arrayList != null) {
                                    }
                                    arrayList3 = arrayList;
                                    if (str5 != null) {
                                    }
                                    if (tLRPC$Message3.attachPath == null) {
                                    }
                                    int newMessageId2222 = getUserConfig().getNewMessageId();
                                    tLRPC$Message3.id = newMessageId2222;
                                    tLRPC$Message3.local_id = newMessageId2222;
                                    tLRPC$Message3.out = true;
                                    if (z) {
                                    }
                                    delayedMessage3 = delayedMessage;
                                    tL_stories$StoryItem6 = tL_stories$StoryItem;
                                    tLRPC$InputPeer2 = tLRPC$InputPeer3;
                                    if (tLRPC$Peer2 != null) {
                                    }
                                } catch (Exception e8) {
                                    sendMessagesHelper4 = this;
                                    exc = e8;
                                    tLRPC$TL_message = z2;
                                }
                            }
                        } catch (Exception e9) {
                            exc = e9;
                            tLRPC$Message2 = str18;
                            sendMessagesHelper3 = tLRPC$Peer;
                        }
                    } catch (Exception e10) {
                        sendMessagesHelper = this;
                        i2 = i29;
                        exc = e10;
                        messageObject = null;
                        tLRPC$Message = null;
                        i3 = i2;
                        sendMessagesHelper2 = sendMessagesHelper;
                        FileLog.e(exc);
                        getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                        if (messageObject != null) {
                        }
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                        sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                        return;
                    }
                }
                if (z17) {
                    str7 = str18;
                    obj2 = "query_id";
                    tLRPC$MessageMedia3 = tLRPC$MessageMedia2;
                } else {
                    tLRPC$MessageMedia3 = tLRPC$MessageMedia2;
                    try {
                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper8.currentAccount);
                        obj2 = "query_id";
                        sb = new StringBuilder();
                        str7 = str18;
                        sb.append(NotificationsSettingsFacade.PROPERTY_SILENT);
                        sb.append(j19);
                    } catch (Exception e11) {
                        exc = e11;
                        sendMessagesHelper3 = sendMessagesHelper8;
                        tLRPC$Message2 = tLRPC$Message6;
                        i5 = i29;
                        tLRPC$Message5 = tLRPC$Message2;
                        sendMessagesHelper9 = sendMessagesHelper3;
                        messageObject = null;
                        i3 = i5;
                        tLRPC$Message = tLRPC$Message5;
                        sendMessagesHelper2 = sendMessagesHelper9;
                        FileLog.e(exc);
                        getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                        if (messageObject != null) {
                        }
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                        sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                        return;
                    }
                    if (!notificationsSettings.getBoolean(sb.toString(), false)) {
                        z9 = false;
                        tLRPC$Message6.silent = z9;
                        if (tLRPC$Message6.random_id == 0) {
                            tLRPC$Message6.random_id = getNextRandomId();
                        }
                        if (str21 == null && i == 0) {
                            sendMessageParams2 = sendMessageParams;
                            i9 = i7;
                            j6 = j19;
                            str8 = str21;
                            j7 = sendMessageParams2.effect_id;
                            if (j7 != 0) {
                                tLRPC$Message6.flags2 |= 4;
                                tLRPC$Message6.effect = j7;
                            }
                            if (hashMap3 != null && hashMap3.containsKey("bot")) {
                                if (tLRPC$EncryptedChat == null) {
                                    String str29 = hashMap3.get("bot_name");
                                    tLRPC$Message6.via_bot_name = str29;
                                    if (str29 == null) {
                                        tLRPC$Message6.via_bot_name = "";
                                    }
                                } else {
                                    tLRPC$Message6.via_bot_id = Utilities.parseLong(hashMap3.get("bot")).longValue();
                                }
                                tLRPC$Message6.flags |= 2048;
                            }
                            tLRPC$Message6.params = hashMap3;
                            if (messageObject3 != null) {
                                messageObject5 = messageObject3;
                                if (messageObject5.resendAsIs) {
                                    str9 = "";
                                    i10 = i29;
                                    obj3 = "bot_name";
                                    tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                    j8 = j6;
                                    tLRPC$Message6.dialog_id = j8;
                                    boolean z22 = z20;
                                    tLRPC$Message6.invert_media = z22;
                                    if (tL_stories$StoryItem5 != null) {
                                        ?? tLRPC$TL_messageReplyStoryHeader = new TLRPC$TL_messageReplyStoryHeader();
                                        tLRPC$Message6.reply_to = tLRPC$TL_messageReplyStoryHeader;
                                        messageObject6 = messageObject5;
                                        tL_stories$StoryItem2 = tL_stories$StoryItem5;
                                        c2 = c;
                                        tLRPC$TL_messageReplyStoryHeader.story_id = tL_stories$StoryItem2.id;
                                        i11 = i9;
                                        str10 = str8;
                                        tLRPC$TL_messageReplyStoryHeader.peer = getMessagesController().getPeer(tL_stories$StoryItem2.dialogId);
                                        tLRPC$Message6.replyStory = tL_stories$StoryItem2;
                                        tLRPC$Message6.flags |= 8;
                                        z16 = tLRPC$TL_messageReplyStoryHeader;
                                    } else {
                                        i11 = i9;
                                        str10 = str8;
                                        messageObject6 = messageObject5;
                                        tL_stories$StoryItem2 = tL_stories$StoryItem5;
                                        c2 = c;
                                        z16 = z22;
                                        if (messageObject16 != null) {
                                            messageObject7 = messageObject14;
                                            messageObject8 = messageObject16;
                                            c4 = (messageObject14 != null && messageObject8 == messageObject7) ? 1 : 1;
                                            TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = new TLRPC$TL_messageReplyHeader();
                                            tLRPC$Message6.reply_to = tLRPC$TL_messageReplyHeader;
                                            if (tLRPC$EncryptedChat != null) {
                                                tLRPC$InputPeer4 = tLRPC$InputPeer2;
                                                long j20 = messageObject8.messageOwner.random_id;
                                                if (j20 != 0) {
                                                    tLRPC$TL_messageReplyHeader.reply_to_random_id = j20;
                                                    c3 = '\b';
                                                    tLRPC$Message6.flags |= 8;
                                                    tLRPC$TL_messageReplyHeader.flags |= 16;
                                                    tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject8.getId();
                                                    if (messageObject7 == null && messageObject7 != messageObject8 && messageObject7.getId() != 1) {
                                                        tLRPC$Message6.reply_to.reply_to_top_id = messageObject7.getId();
                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader = tLRPC$Message6.reply_to;
                                                        int i38 = tLRPC$MessageReplyHeader.flags | 2;
                                                        tLRPC$MessageReplyHeader.flags = i38;
                                                        boolean z23 = messageObject7.isTopicMainMessage;
                                                        c4 = z23;
                                                        if (z23) {
                                                            tLRPC$MessageReplyHeader.forum_topic = true;
                                                            c4 = 8;
                                                            tLRPC$MessageReplyHeader.flags = i38 | 8;
                                                        }
                                                    } else {
                                                        c4 = c3;
                                                        if (messageObject8.isTopicMainMessage) {
                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2 = tLRPC$Message6.reply_to;
                                                            tLRPC$MessageReplyHeader2.forum_topic = true;
                                                            c4 = 8;
                                                            tLRPC$MessageReplyHeader2.flags |= 8;
                                                        }
                                                    }
                                                    if (replyQuote2 != null) {
                                                        tLRPC$Message6.reply_to.quote_text = replyQuote2.getText();
                                                        if (!TextUtils.isEmpty(tLRPC$Message6.reply_to.quote_text)) {
                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader3 = tLRPC$Message6.reply_to;
                                                            tLRPC$MessageReplyHeader3.quote = true;
                                                            int i39 = tLRPC$MessageReplyHeader3.flags | 64;
                                                            tLRPC$MessageReplyHeader3.flags = i39;
                                                            tLRPC$MessageReplyHeader3.flags = i39 | 1024;
                                                            replyQuote = replyQuote2;
                                                            tLRPC$MessageReplyHeader3.quote_offset = replyQuote.start;
                                                            ArrayList<TLRPC$MessageEntity> entities = replyQuote.getEntities();
                                                            tLRPC$MessageReplyHeader3.quote_entities = entities;
                                                            ArrayList<TLRPC$MessageEntity> arrayList8 = tLRPC$Message6.reply_to.quote_entities;
                                                            if (arrayList8 == null || arrayList8.isEmpty()) {
                                                                i12 = i10;
                                                                c5 = entities;
                                                            } else {
                                                                i12 = i10;
                                                                try {
                                                                    tLRPC$Message6.reply_to.quote_entities = new ArrayList<>(tLRPC$Message6.reply_to.quote_entities);
                                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader4 = tLRPC$Message6.reply_to;
                                                                    int i40 = tLRPC$MessageReplyHeader4.flags | 128;
                                                                    tLRPC$MessageReplyHeader4.flags = i40;
                                                                    c5 = i40;
                                                                } catch (Exception e12) {
                                                                    exc = e12;
                                                                    sendMessagesHelper9 = sendMessagesHelper8;
                                                                    tLRPC$Message5 = tLRPC$Message6;
                                                                    i5 = i12;
                                                                    messageObject = null;
                                                                    i3 = i5;
                                                                    tLRPC$Message = tLRPC$Message5;
                                                                    sendMessagesHelper2 = sendMessagesHelper9;
                                                                    FileLog.e(exc);
                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                    if (messageObject != null) {
                                                                    }
                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                    sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                    return;
                                                                }
                                                            }
                                                            if (j4 == 0) {
                                                                TLRPC$TL_messageReplies tLRPC$TL_messageReplies = new TLRPC$TL_messageReplies();
                                                                tLRPC$Message6.replies = tLRPC$TL_messageReplies;
                                                                tLRPC$TL_messageReplies.comments = true;
                                                                tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                                                tLRPC$TL_messageReplies.channel_id = j4;
                                                                tLRPC$TL_messageReplies.flags |= 1;
                                                                r13 = 8388608;
                                                                tLRPC$Message6.flags |= 8388608;
                                                            } else {
                                                                tL_stories$StoryItem3 = tL_stories$StoryItem2;
                                                                r13 = c5;
                                                            }
                                                            if (tLRPC$ReplyMarkup != null && tLRPC$EncryptedChat == null) {
                                                                tLRPC$Message6.flags |= 64;
                                                                tLRPC$Message6.reply_markup = tLRPC$ReplyMarkup;
                                                                str16 = hashMap3.get("bot");
                                                                if (str16 != null) {
                                                                    r13 = Long.parseLong(str16);
                                                                    tLRPC$Message6.via_bot_id = r13;
                                                                }
                                                            }
                                                            if (DialogObject.isEncryptedDialog(j8)) {
                                                                tLRPC$Message6.peer_id = getMessagesController().getPeer(j8);
                                                                if (DialogObject.isUserDialog(j8)) {
                                                                    TLRPC$User user = getMessagesController().getUser(Long.valueOf(j8));
                                                                    if (user == null) {
                                                                        sendMessagesHelper8.processSentMessage(tLRPC$Message6.id);
                                                                        return;
                                                                    } else if (user.bot) {
                                                                        tLRPC$Message6.unread = false;
                                                                    }
                                                                }
                                                                i13 = i11;
                                                                j9 = r13;
                                                            } else {
                                                                TLRPC$TL_peerUser tLRPC$TL_peerUser2 = new TLRPC$TL_peerUser();
                                                                tLRPC$Message6.peer_id = tLRPC$TL_peerUser2;
                                                                long j21 = tLRPC$EncryptedChat.participant_id;
                                                                if (j21 == j5) {
                                                                    tLRPC$TL_peerUser2.user_id = tLRPC$EncryptedChat.admin_id;
                                                                } else {
                                                                    tLRPC$TL_peerUser2.user_id = j21;
                                                                }
                                                                if (i11 != 0) {
                                                                    i13 = i11;
                                                                    tLRPC$Message6.ttl = i13;
                                                                    r132 = j21;
                                                                } else {
                                                                    i13 = i11;
                                                                    int i41 = tLRPC$EncryptedChat.ttl;
                                                                    tLRPC$Message6.ttl = i41;
                                                                    r132 = j21;
                                                                    if (i41 != 0) {
                                                                        TLRPC$MessageMedia tLRPC$MessageMedia9 = tLRPC$Message6.media;
                                                                        r132 = j21;
                                                                        if (tLRPC$MessageMedia9 != null) {
                                                                            tLRPC$MessageMedia9.ttl_seconds = i41;
                                                                            r132 = 4;
                                                                            tLRPC$MessageMedia9.flags |= 4;
                                                                        }
                                                                    }
                                                                }
                                                                j9 = r132;
                                                                if (tLRPC$Message6.ttl != 0) {
                                                                    j9 = r132;
                                                                    if (tLRPC$Message6.media.document != null) {
                                                                        if (MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                                                            int i42 = 0;
                                                                            while (true) {
                                                                                if (i42 >= tLRPC$Message6.media.document.attributes.size()) {
                                                                                    i15 = 0;
                                                                                    break;
                                                                                }
                                                                                TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = tLRPC$Message6.media.document.attributes.get(i42);
                                                                                if (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeAudio) {
                                                                                    i15 = (int) tLRPC$DocumentAttribute2.duration;
                                                                                    break;
                                                                                }
                                                                                i42++;
                                                                            }
                                                                            j9 = 1;
                                                                            tLRPC$Message6.ttl = Math.max(tLRPC$Message6.ttl, i15 + 1);
                                                                        } else {
                                                                            if (!MessageObject.isVideoMessage(tLRPC$Message6)) {
                                                                                j9 = r132;
                                                                            }
                                                                            int i43 = 0;
                                                                            while (true) {
                                                                                if (i43 >= tLRPC$Message6.media.document.attributes.size()) {
                                                                                    i14 = 0;
                                                                                    break;
                                                                                }
                                                                                TLRPC$DocumentAttribute tLRPC$DocumentAttribute3 = tLRPC$Message6.media.document.attributes.get(i43);
                                                                                if (tLRPC$DocumentAttribute3 instanceof TLRPC$TL_documentAttributeVideo) {
                                                                                    i14 = (int) tLRPC$DocumentAttribute3.duration;
                                                                                    break;
                                                                                }
                                                                                i43++;
                                                                            }
                                                                            j9 = 1;
                                                                            tLRPC$Message6.ttl = Math.max(tLRPC$Message6.ttl, i14 + 1);
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            if (messageObject8 != null && tL_stories$StoryItem3 == null && tLRPC$Message6.reply_to != null) {
                                                                j9 = messageObject8.getDialogId();
                                                                if (!DialogObject.isEncryptedDialog(j9)) {
                                                                    TLRPC$Peer peer = getMessagesController().getPeer(messageObject8.getDialogId() > 0 ? messageObject8.getSenderId() : messageObject8.getDialogId());
                                                                    boolean z24 = (peer == null || MessageObject.peersEqual(getMessagesController().getPeer(messageObject8.getDialogId()), tLRPC$Message6.peer_id)) ? false : true;
                                                                    if (z24 && messageObject8.isForwarded() && !messageObject8.isImportedForward()) {
                                                                        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = messageObject8.messageOwner.fwd_from;
                                                                        if (tLRPC$MessageFwdHeader.saved_from_peer == null && (tLRPC$Peer5 = tLRPC$MessageFwdHeader.from_id) != null) {
                                                                            tLRPC$Peer3 = peer;
                                                                            if ((tLRPC$MessageFwdHeader.flags & 4) != 0) {
                                                                                tLRPC$Message6.reply_to.reply_to_msg_id = tLRPC$MessageFwdHeader.channel_post;
                                                                                tLRPC$Peer4 = tLRPC$Peer5;
                                                                                z24 = true;
                                                                                z13 = true;
                                                                                messagesController = getMessagesController();
                                                                                z10 = z13;
                                                                                r133 = tLRPC$Message6.peer_id;
                                                                                j10 = j8;
                                                                                if ((ChatObject.isForum(messagesController.getChat(Long.valueOf(-DialogObject.getPeerDialogId((TLRPC$Peer) r133))))) && messageObject7.getId() != messageObject8.getId()) {
                                                                                    topicId = MessageObject.getTopicId(sendMessagesHelper8.currentAccount, messageObject8.messageOwner, true);
                                                                                    r133 = messageObject7.getId();
                                                                                    if (topicId != r133) {
                                                                                        z14 = true;
                                                                                        j9 = r133;
                                                                                        if (!z24 && !z14) {
                                                                                            z15 = false;
                                                                                            if (z15) {
                                                                                                if (replyQuote == null) {
                                                                                                    tLRPC$Message6.reply_to.quote = false;
                                                                                                    replyQuote = ChatActivity.ReplyQuote.from(messageObject8);
                                                                                                }
                                                                                                if (replyQuote != null) {
                                                                                                    TLRPC$Message tLRPC$Message29 = messageObject8.messageOwner;
                                                                                                    if (tLRPC$Message29 != null && (tLRPC$MessageMedia4 = tLRPC$Message29.media) != null) {
                                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader5 = tLRPC$Message6.reply_to;
                                                                                                        tLRPC$MessageReplyHeader5.flags |= LiteMode.FLAG_CHAT_BLUR;
                                                                                                        tLRPC$MessageReplyHeader5.reply_media = tLRPC$MessageMedia4;
                                                                                                    }
                                                                                                    if (replyQuote.getText() != null) {
                                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader6 = tLRPC$Message6.reply_to;
                                                                                                        tLRPC$MessageReplyHeader6.flags |= 64;
                                                                                                        tLRPC$MessageReplyHeader6.quote_text = replyQuote.getText();
                                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader7 = tLRPC$Message6.reply_to;
                                                                                                        tLRPC$MessageReplyHeader7.flags |= 1024;
                                                                                                        tLRPC$MessageReplyHeader7.quote_offset = replyQuote.start;
                                                                                                    }
                                                                                                    if (replyQuote.getEntities() != null) {
                                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader8 = tLRPC$Message6.reply_to;
                                                                                                        tLRPC$MessageReplyHeader8.flags |= 128;
                                                                                                        tLRPC$MessageReplyHeader8.quote_entities = replyQuote.getEntities();
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            if (!MessageObject.isVoiceMessage(tLRPC$Message6) || MessageObject.isRoundVideoMessage(tLRPC$Message6)) {
                                                                                                tLRPC$Message6.media_unread = true;
                                                                                            }
                                                                                            if (tLRPC$Message6.from_id == null) {
                                                                                                tLRPC$Message6.from_id = tLRPC$Message6.peer_id;
                                                                                            }
                                                                                            tLRPC$Message6.send_state = 1;
                                                                                            if (hashMap3 == null) {
                                                                                                String str30 = hashMap3.get("groupId");
                                                                                                if (str30 != null) {
                                                                                                    long longValue = Utilities.parseLong(str30).longValue();
                                                                                                    tLRPC$Message6.grouped_id = longValue;
                                                                                                    tLRPC$Message6.flags |= 131072;
                                                                                                    j18 = longValue;
                                                                                                } else {
                                                                                                    j18 = 0;
                                                                                                }
                                                                                                j11 = j18;
                                                                                                if (hashMap3.get("final") != null) {
                                                                                                    z11 = true;
                                                                                                    j12 = j18;
                                                                                                    messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                                                                                    messageObject.sendAnimationData = sendAnimationData;
                                                                                                    messageObject.wasJustSent = true;
                                                                                                    messageObject.scheduled = i12 != 0;
                                                                                                    if (!messageObject.isForwarded()) {
                                                                                                        try {
                                                                                                            int i44 = messageObject.type;
                                                                                                            if ((i44 == 3 || videoEditedInfo6 != null || i44 == 2) && !TextUtils.isEmpty(tLRPC$Message6.attachPath)) {
                                                                                                                messageObject.attachPathExists = true;
                                                                                                            }
                                                                                                        } catch (Exception e13) {
                                                                                                            exc = e13;
                                                                                                            sendMessagesHelper10 = sendMessagesHelper8;
                                                                                                            tLRPC$Message8 = tLRPC$Message6;
                                                                                                        }
                                                                                                    }
                                                                                                    videoEditedInfo = messageObject.videoEditedInfo;
                                                                                                    if (videoEditedInfo != null || videoEditedInfo6 != null) {
                                                                                                        if (videoEditedInfo6 != null) {
                                                                                                            videoEditedInfo2 = videoEditedInfo6;
                                                                                                            boolean z25 = videoEditedInfo2.notReadyYet;
                                                                                                            if (z25) {
                                                                                                                videoEditedInfo.notReadyYet = z25;
                                                                                                            }
                                                                                                        } else {
                                                                                                            videoEditedInfo2 = videoEditedInfo6;
                                                                                                        }
                                                                                                        videoEditedInfo = videoEditedInfo2;
                                                                                                    }
                                                                                                    if (j12 == 0) {
                                                                                                        ArrayList<MessageObject> arrayList9 = new ArrayList<>();
                                                                                                        arrayList9.add(messageObject);
                                                                                                        ArrayList<TLRPC$Message> arrayList10 = new ArrayList<>();
                                                                                                        arrayList10.add(tLRPC$Message6);
                                                                                                        if (i12 != 0) {
                                                                                                            arrayList6 = arrayList9;
                                                                                                            j17 = 0;
                                                                                                            i28 = 1;
                                                                                                        } else if (str10 != null) {
                                                                                                            arrayList6 = arrayList9;
                                                                                                            j17 = tLRPC$Message6.quick_reply_shortcut_id;
                                                                                                            i28 = 5;
                                                                                                        } else {
                                                                                                            arrayList6 = arrayList9;
                                                                                                            j17 = 0;
                                                                                                            i28 = 0;
                                                                                                        }
                                                                                                        MessagesStorage.getInstance(sendMessagesHelper8.currentAccount).putMessages(arrayList10, false, true, false, 0, i28, j17);
                                                                                                        VideoEditedInfo videoEditedInfo7 = videoEditedInfo;
                                                                                                        i16 = i13;
                                                                                                        long j22 = j10;
                                                                                                        MessagesController.getInstance(sendMessagesHelper8.currentAccount).updateInterfaceWithMessages(j22, arrayList6, i28);
                                                                                                        if (i12 == 0) {
                                                                                                            videoEditedInfo3 = videoEditedInfo7;
                                                                                                            NotificationCenter.getInstance(sendMessagesHelper8.currentAccount).lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                                                        } else {
                                                                                                            videoEditedInfo3 = videoEditedInfo7;
                                                                                                        }
                                                                                                        delayedMessage5 = delayedMessage4;
                                                                                                        tLRPC$Message9 = null;
                                                                                                        r6 = j22;
                                                                                                    } else {
                                                                                                        videoEditedInfo3 = videoEditedInfo;
                                                                                                        i16 = i13;
                                                                                                        long j23 = j10;
                                                                                                        ArrayList<DelayedMessage> arrayList11 = sendMessagesHelper8.delayedMessages.get("group_" + j12);
                                                                                                        if (arrayList11 != null) {
                                                                                                            delayedMessage4 = arrayList11.get(0);
                                                                                                        }
                                                                                                        if (delayedMessage4 == null) {
                                                                                                            delayedMessage5 = new DelayedMessage(j23);
                                                                                                            delayedMessage5.initForGroup(j12);
                                                                                                            delayedMessage5.encryptedChat = tLRPC$EncryptedChat;
                                                                                                            delayedMessage5.scheduled = i12 != 0;
                                                                                                        } else {
                                                                                                            delayedMessage5 = delayedMessage4;
                                                                                                        }
                                                                                                        delayedMessage5.performMediaUpload = false;
                                                                                                        tLRPC$Message9 = null;
                                                                                                        tLRPC$Message9 = null;
                                                                                                        delayedMessage5.photoSize = null;
                                                                                                        delayedMessage5.videoEditedInfo = null;
                                                                                                        delayedMessage5.httpLocation = null;
                                                                                                        r6 = j23;
                                                                                                        if (z11) {
                                                                                                            delayedMessage5.finalGroupMessage = tLRPC$Message6.id;
                                                                                                            r6 = j23;
                                                                                                        }
                                                                                                    }
                                                                                                    if (BuildVars.LOGS_ENABLED || tLRPC$InputPeer4 == null) {
                                                                                                        j13 = j12;
                                                                                                        tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                                        tLRPC$Message10 = tLRPC$Message9;
                                                                                                        sendMessagesHelper11 = j12;
                                                                                                        i17 = j9;
                                                                                                    } else {
                                                                                                        ?? sb2 = new StringBuilder();
                                                                                                        sb2.append("send message user_id = ");
                                                                                                        j13 = j12;
                                                                                                        TLRPC$InputPeer tLRPC$InputPeer7 = tLRPC$InputPeer4;
                                                                                                        sb2.append(tLRPC$InputPeer7.user_id);
                                                                                                        sb2.append(" chat_id = ");
                                                                                                        sb2.append(tLRPC$InputPeer7.chat_id);
                                                                                                        sb2.append(" channel_id = ");
                                                                                                        sb2.append(tLRPC$InputPeer7.channel_id);
                                                                                                        sb2.append(" access_hash = ");
                                                                                                        sb2.append(tLRPC$InputPeer7.access_hash);
                                                                                                        sb2.append(" notify = ");
                                                                                                        sb2.append(z17);
                                                                                                        sb2.append(" silent = ");
                                                                                                        ?? r12 = NotificationsSettingsFacade.PROPERTY_SILENT + r6;
                                                                                                        i17 = 0;
                                                                                                        ?? r11 = MessagesController.getNotificationsSettings(sendMessagesHelper8.currentAccount).getBoolean(r12, false);
                                                                                                        sb2.append(r11);
                                                                                                        FileLog.d(sb2.toString());
                                                                                                        tLRPC$Message10 = r11;
                                                                                                        sendMessagesHelper11 = r12;
                                                                                                        tLRPC$InputPeer5 = tLRPC$InputPeer7;
                                                                                                    }
                                                                                                    if (c2 == 0 && ((c6 = c2) != '\t' || str7 == null || tLRPC$EncryptedChat == null)) {
                                                                                                        TLRPC$Message tLRPC$Message30 = 1;
                                                                                                        try {
                                                                                                        } catch (Exception e14) {
                                                                                                            exc = e14;
                                                                                                            tLRPC$Message12 = tLRPC$Message30;
                                                                                                            sendMessagesHelper14 = sendMessagesHelper11;
                                                                                                            i20 = i17;
                                                                                                        }
                                                                                                        if ((c6 >= 1 && c6 <= 3) || ((c6 >= 5 && c6 <= '\b') || ((c6 == '\t' && tLRPC$EncryptedChat != null) || c6 == '\n' || c6 == 11 || c6 == '\f'))) {
                                                                                                            sendMessagesHelper11 = sendMessagesHelper8;
                                                                                                            HashMap<String, String> hashMap4 = hashMap3;
                                                                                                            TL_stories$StoryItem tL_stories$StoryItem7 = tL_stories$StoryItem3;
                                                                                                            MessageObject messageObject17 = messageObject6;
                                                                                                            TLRPC$Message tLRPC$Message31 = tLRPC$Message6;
                                                                                                            int i45 = i12;
                                                                                                            if (tLRPC$EncryptedChat != null) {
                                                                                                                i12 = i45;
                                                                                                                MessageObject messageObject18 = messageObject7;
                                                                                                                ArrayList<TLRPC$MessageEntity> arrayList12 = arrayList4;
                                                                                                                String str31 = str6;
                                                                                                                VideoEditedInfo videoEditedInfo8 = videoEditedInfo3;
                                                                                                                TLRPC$TL_document tLRPC$TL_document6 = tLRPC$TL_document3;
                                                                                                                TLRPC$MessageMedia tLRPC$MessageMedia10 = tLRPC$MessageMedia3;
                                                                                                                String str32 = str4;
                                                                                                                TLRPC$TL_photo tLRPC$TL_photo6 = tLRPC$TL_photo2;
                                                                                                                TLRPC$User tLRPC$User6 = tLRPC$User;
                                                                                                                String str33 = str9;
                                                                                                                tLRPC$Message10 = tLRPC$Message31;
                                                                                                                try {
                                                                                                                    long j24 = r6;
                                                                                                                    if (AndroidUtilities.getPeerLayerVersion(tLRPC$EncryptedChat.layer) >= 73) {
                                                                                                                        try {
                                                                                                                            tLRPC$TL_decryptedMessage = new TLRPC$TL_decryptedMessage();
                                                                                                                            if (j13 != 0) {
                                                                                                                                j14 = j13;
                                                                                                                                tLRPC$TL_decryptedMessage.grouped_id = j14;
                                                                                                                                delayedMessage6 = delayedMessage5;
                                                                                                                                tLRPC$TL_decryptedMessage.flags |= 131072;
                                                                                                                            } else {
                                                                                                                                delayedMessage6 = delayedMessage5;
                                                                                                                                j14 = j13;
                                                                                                                            }
                                                                                                                        } catch (Exception e15) {
                                                                                                                            exc = e15;
                                                                                                                            messageObject = messageObject;
                                                                                                                            tLRPC$Message8 = tLRPC$Message10;
                                                                                                                            sendMessagesHelper10 = sendMessagesHelper11;
                                                                                                                            i3 = i12;
                                                                                                                            tLRPC$Message = tLRPC$Message8;
                                                                                                                            sendMessagesHelper2 = sendMessagesHelper10;
                                                                                                                            FileLog.e(exc);
                                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                            if (messageObject != null) {
                                                                                                                            }
                                                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                            return;
                                                                                                                        }
                                                                                                                    } else {
                                                                                                                        delayedMessage6 = delayedMessage5;
                                                                                                                        j14 = j13;
                                                                                                                        tLRPC$TL_decryptedMessage = new TLRPC$TL_decryptedMessage_layer45();
                                                                                                                    }
                                                                                                                    tLRPC$TL_decryptedMessage.ttl = tLRPC$Message10.ttl;
                                                                                                                    if (arrayList12 != null && !arrayList12.isEmpty()) {
                                                                                                                        tLRPC$TL_decryptedMessage.entities = arrayList12;
                                                                                                                        tLRPC$TL_decryptedMessage.flags |= 128;
                                                                                                                    }
                                                                                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader9 = tLRPC$Message10.reply_to;
                                                                                                                    long j25 = j14;
                                                                                                                    if (tLRPC$MessageReplyHeader9 != null) {
                                                                                                                        long j26 = tLRPC$MessageReplyHeader9.reply_to_random_id;
                                                                                                                        if (j26 != 0) {
                                                                                                                            tLRPC$TL_decryptedMessage.reply_to_random_id = j26;
                                                                                                                            tLRPC$TL_decryptedMessage.flags |= 8;
                                                                                                                        }
                                                                                                                    }
                                                                                                                    tLRPC$TL_decryptedMessage.silent = tLRPC$Message10.silent;
                                                                                                                    tLRPC$TL_decryptedMessage.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                                                                                    if (hashMap4 != null) {
                                                                                                                        Object obj6 = obj3;
                                                                                                                        if (hashMap4.get(obj6) != null) {
                                                                                                                            tLRPC$TL_decryptedMessage.via_bot_name = hashMap4.get(obj6);
                                                                                                                            tLRPC$TL_decryptedMessage.flags |= 2048;
                                                                                                                        }
                                                                                                                    }
                                                                                                                    tLRPC$TL_decryptedMessage.random_id = tLRPC$Message10.random_id;
                                                                                                                    tLRPC$TL_decryptedMessage.message = str33;
                                                                                                                    try {
                                                                                                                        if (c6 == 1) {
                                                                                                                            if (tLRPC$MessageMedia10 instanceof TLRPC$TL_messageMediaVenue) {
                                                                                                                                TLRPC$TL_decryptedMessageMediaVenue tLRPC$TL_decryptedMessageMediaVenue = new TLRPC$TL_decryptedMessageMediaVenue();
                                                                                                                                tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaVenue;
                                                                                                                                tLRPC$TL_decryptedMessageMediaVenue.address = tLRPC$MessageMedia10.address;
                                                                                                                                tLRPC$TL_decryptedMessageMediaVenue.title = tLRPC$MessageMedia10.title;
                                                                                                                                tLRPC$TL_decryptedMessageMediaVenue.provider = tLRPC$MessageMedia10.provider;
                                                                                                                                tLRPC$TL_decryptedMessageMediaVenue.venue_id = tLRPC$MessageMedia10.venue_id;
                                                                                                                            } else {
                                                                                                                                tLRPC$TL_decryptedMessage.media = new TLRPC$TL_decryptedMessageMediaGeoPoint();
                                                                                                                            }
                                                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                                                                                                                            TLRPC$GeoPoint tLRPC$GeoPoint = tLRPC$MessageMedia10.geo;
                                                                                                                            tLRPC$DecryptedMessageMedia.lat = tLRPC$GeoPoint.lat;
                                                                                                                            tLRPC$DecryptedMessageMedia._long = tLRPC$GeoPoint._long;
                                                                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, null, null, messageObject);
                                                                                                                            tLRPC$Message16 = tLRPC$Message10;
                                                                                                                            delayedMessage7 = delayedMessage6;
                                                                                                                            str11 = str;
                                                                                                                            j15 = j24;
                                                                                                                        } else {
                                                                                                                            try {
                                                                                                                                if (c6 != 2 && (c6 != '\t' || tLRPC$TL_photo6 == null)) {
                                                                                                                                    if (c6 == 3) {
                                                                                                                                        TLRPC$PhotoSize thumbForSecretChat = sendMessagesHelper11.getThumbForSecretChat(tLRPC$TL_document6.thumbs);
                                                                                                                                        ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat);
                                                                                                                                        if (!MessageObject.isNewGifDocument(tLRPC$TL_document6) && !MessageObject.isRoundVideoDocument(tLRPC$TL_document6)) {
                                                                                                                                            TLRPC$TL_decryptedMessageMediaVideo tLRPC$TL_decryptedMessageMediaVideo = new TLRPC$TL_decryptedMessageMediaVideo();
                                                                                                                                            tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaVideo;
                                                                                                                                            if (thumbForSecretChat != null && (bArr2 = thumbForSecretChat.bytes) != null) {
                                                                                                                                                tLRPC$TL_decryptedMessageMediaVideo.thumb = bArr2;
                                                                                                                                            } else {
                                                                                                                                                tLRPC$TL_decryptedMessageMediaVideo.thumb = new byte[0];
                                                                                                                                            }
                                                                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia2 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                            tLRPC$DecryptedMessageMedia2.caption = str31;
                                                                                                                                            tLRPC$DecryptedMessageMedia2.mime_type = "video/mp4";
                                                                                                                                            tLRPC$DecryptedMessageMedia2.size = tLRPC$TL_document6.size;
                                                                                                                                            i23 = 0;
                                                                                                                                            while (true) {
                                                                                                                                                if (i23 < tLRPC$TL_document6.attributes.size()) {
                                                                                                                                                    break;
                                                                                                                                                }
                                                                                                                                                TLRPC$DocumentAttribute tLRPC$DocumentAttribute4 = tLRPC$TL_document6.attributes.get(i23);
                                                                                                                                                if (tLRPC$DocumentAttribute4 instanceof TLRPC$TL_documentAttributeVideo) {
                                                                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia3 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                                    tLRPC$DecryptedMessageMedia3.w = tLRPC$DocumentAttribute4.w;
                                                                                                                                                    tLRPC$DecryptedMessageMedia3.h = tLRPC$DocumentAttribute4.h;
                                                                                                                                                    tLRPC$DecryptedMessageMedia3.duration = (int) tLRPC$DocumentAttribute4.duration;
                                                                                                                                                    break;
                                                                                                                                                }
                                                                                                                                                i23++;
                                                                                                                                            }
                                                                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia4 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                            tLRPC$DecryptedMessageMedia4.thumb_h = thumbForSecretChat.h;
                                                                                                                                            tLRPC$DecryptedMessageMedia4.thumb_w = thumbForSecretChat.w;
                                                                                                                                            if (tLRPC$TL_document6.key != null && j25 == 0) {
                                                                                                                                                TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                                                                                    @Override // org.telegram.tgnet.TLObject
                                                                                                                                                    public void readParams(AbstractSerializedData abstractSerializedData, boolean z26) {
                                                                                                                                                        this.id = abstractSerializedData.readInt64(z26);
                                                                                                                                                        this.access_hash = abstractSerializedData.readInt64(z26);
                                                                                                                                                    }

                                                                                                                                                    @Override // org.telegram.tgnet.TLObject
                                                                                                                                                    public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                                                                                        abstractSerializedData.writeInt32(1511503333);
                                                                                                                                                        abstractSerializedData.writeInt64(this.id);
                                                                                                                                                        abstractSerializedData.writeInt64(this.access_hash);
                                                                                                                                                    }
                                                                                                                                                };
                                                                                                                                                tLRPC$InputEncryptedFile.id = tLRPC$TL_document6.id;
                                                                                                                                                tLRPC$InputEncryptedFile.access_hash = tLRPC$TL_document6.access_hash;
                                                                                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia5 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                                tLRPC$DecryptedMessageMedia5.key = tLRPC$TL_document6.key;
                                                                                                                                                tLRPC$DecryptedMessageMedia5.iv = tLRPC$TL_document6.iv;
                                                                                                                                                getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile, null, messageObject);
                                                                                                                                                delayedMessage7 = delayedMessage6;
                                                                                                                                                str11 = str;
                                                                                                                                                j15 = j24;
                                                                                                                                            }
                                                                                                                                            str11 = str;
                                                                                                                                            j15 = j24;
                                                                                                                                            VideoEditedInfo videoEditedInfo9 = videoEditedInfo8;
                                                                                                                                            delayedMessage7 = delayedMessage6;
                                                                                                                                            delayedMessage7.videoEditedInfo = videoEditedInfo9;
                                                                                                                                            if (j25 == 0) {
                                                                                                                                                sendMessagesHelper11.performSendDelayedMessage(delayedMessage7);
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                                                                        tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument;
                                                                                                                                        tLRPC$TL_decryptedMessageMediaDocument.attributes = tLRPC$TL_document6.attributes;
                                                                                                                                        if (thumbForSecretChat != null && (bArr = thumbForSecretChat.bytes) != null) {
                                                                                                                                            tLRPC$TL_decryptedMessageMediaDocument.thumb = bArr;
                                                                                                                                        } else {
                                                                                                                                            tLRPC$TL_decryptedMessageMediaDocument.thumb = new byte[0];
                                                                                                                                        }
                                                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia22 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                        tLRPC$DecryptedMessageMedia22.caption = str31;
                                                                                                                                        tLRPC$DecryptedMessageMedia22.mime_type = "video/mp4";
                                                                                                                                        tLRPC$DecryptedMessageMedia22.size = tLRPC$TL_document6.size;
                                                                                                                                        i23 = 0;
                                                                                                                                        while (true) {
                                                                                                                                            if (i23 < tLRPC$TL_document6.attributes.size()) {
                                                                                                                                            }
                                                                                                                                            i23++;
                                                                                                                                        }
                                                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia42 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                        tLRPC$DecryptedMessageMedia42.thumb_h = thumbForSecretChat.h;
                                                                                                                                        tLRPC$DecryptedMessageMedia42.thumb_w = thumbForSecretChat.w;
                                                                                                                                        if (tLRPC$TL_document6.key != null) {
                                                                                                                                            TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile2 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                                                                                @Override // org.telegram.tgnet.TLObject
                                                                                                                                                public void readParams(AbstractSerializedData abstractSerializedData, boolean z26) {
                                                                                                                                                    this.id = abstractSerializedData.readInt64(z26);
                                                                                                                                                    this.access_hash = abstractSerializedData.readInt64(z26);
                                                                                                                                                }

                                                                                                                                                @Override // org.telegram.tgnet.TLObject
                                                                                                                                                public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                                                                                    abstractSerializedData.writeInt32(1511503333);
                                                                                                                                                    abstractSerializedData.writeInt64(this.id);
                                                                                                                                                    abstractSerializedData.writeInt64(this.access_hash);
                                                                                                                                                }
                                                                                                                                            };
                                                                                                                                            tLRPC$InputEncryptedFile2.id = tLRPC$TL_document6.id;
                                                                                                                                            tLRPC$InputEncryptedFile2.access_hash = tLRPC$TL_document6.access_hash;
                                                                                                                                            TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia52 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                            tLRPC$DecryptedMessageMedia52.key = tLRPC$TL_document6.key;
                                                                                                                                            tLRPC$DecryptedMessageMedia52.iv = tLRPC$TL_document6.iv;
                                                                                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile2, null, messageObject);
                                                                                                                                            delayedMessage7 = delayedMessage6;
                                                                                                                                            str11 = str;
                                                                                                                                            j15 = j24;
                                                                                                                                        }
                                                                                                                                        str11 = str;
                                                                                                                                        j15 = j24;
                                                                                                                                        VideoEditedInfo videoEditedInfo92 = videoEditedInfo8;
                                                                                                                                        delayedMessage7 = delayedMessage6;
                                                                                                                                        delayedMessage7.videoEditedInfo = videoEditedInfo92;
                                                                                                                                        if (j25 == 0) {
                                                                                                                                        }
                                                                                                                                    } else {
                                                                                                                                        SendMessageParams sendMessageParams13 = messageObject4;
                                                                                                                                        str11 = str;
                                                                                                                                        Object obj7 = obj;
                                                                                                                                        j15 = j24;
                                                                                                                                        if (c6 == 6) {
                                                                                                                                            TLRPC$TL_decryptedMessageMediaContact tLRPC$TL_decryptedMessageMediaContact = new TLRPC$TL_decryptedMessageMediaContact();
                                                                                                                                            tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaContact;
                                                                                                                                            tLRPC$TL_decryptedMessageMediaContact.phone_number = tLRPC$User6.phone;
                                                                                                                                            tLRPC$TL_decryptedMessageMediaContact.first_name = tLRPC$User6.first_name;
                                                                                                                                            tLRPC$TL_decryptedMessageMediaContact.last_name = tLRPC$User6.last_name;
                                                                                                                                            tLRPC$TL_decryptedMessageMediaContact.user_id = tLRPC$User6.id;
                                                                                                                                            getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, null, null, messageObject);
                                                                                                                                        } else {
                                                                                                                                            if (c6 != 7 && (c6 != '\t' || tLRPC$TL_document6 == null)) {
                                                                                                                                                if (c6 == '\b') {
                                                                                                                                                    delayedMessage7 = new DelayedMessage(j15);
                                                                                                                                                    delayedMessage7.encryptedChat = tLRPC$EncryptedChat;
                                                                                                                                                    delayedMessage7.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                                                                                    delayedMessage7.obj = messageObject;
                                                                                                                                                    delayedMessage7.type = 3;
                                                                                                                                                    delayedMessage7.parentObject = sendMessageParams13;
                                                                                                                                                    delayedMessage7.performMediaUpload = true;
                                                                                                                                                    delayedMessage7.scheduled = i12 != 0;
                                                                                                                                                    TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument2 = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                                                                                    tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument2;
                                                                                                                                                    tLRPC$TL_decryptedMessageMediaDocument2.attributes = tLRPC$TL_document6.attributes;
                                                                                                                                                    tLRPC$TL_decryptedMessageMediaDocument2.caption = str31;
                                                                                                                                                    TLRPC$PhotoSize thumbForSecretChat2 = sendMessagesHelper11.getThumbForSecretChat(tLRPC$TL_document6.thumbs);
                                                                                                                                                    if (thumbForSecretChat2 != null) {
                                                                                                                                                        ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat2);
                                                                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia6 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                                        ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia6).thumb = thumbForSecretChat2.bytes;
                                                                                                                                                        tLRPC$DecryptedMessageMedia6.thumb_h = thumbForSecretChat2.h;
                                                                                                                                                        tLRPC$DecryptedMessageMedia6.thumb_w = thumbForSecretChat2.w;
                                                                                                                                                    } else {
                                                                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia7 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                                        ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia7).thumb = new byte[0];
                                                                                                                                                        tLRPC$DecryptedMessageMedia7.thumb_h = 0;
                                                                                                                                                        tLRPC$DecryptedMessageMedia7.thumb_w = 0;
                                                                                                                                                    }
                                                                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia8 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                                    tLRPC$DecryptedMessageMedia8.mime_type = tLRPC$TL_document6.mime_type;
                                                                                                                                                    tLRPC$DecryptedMessageMedia8.size = tLRPC$TL_document6.size;
                                                                                                                                                    delayedMessage7.originalPath = str11;
                                                                                                                                                    sendMessagesHelper11.performSendDelayedMessage(delayedMessage7);
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            tLRPC$Message16 = tLRPC$Message10;
                                                                                                                                            if (tLRPC$TL_document6.access_hash != 0 && (MessageObject.isStickerDocument(tLRPC$TL_document6) || MessageObject.isAnimatedStickerDocument(tLRPC$TL_document6, true))) {
                                                                                                                                                TLRPC$TL_decryptedMessageMediaExternalDocument tLRPC$TL_decryptedMessageMediaExternalDocument = new TLRPC$TL_decryptedMessageMediaExternalDocument();
                                                                                                                                                tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaExternalDocument;
                                                                                                                                                tLRPC$TL_decryptedMessageMediaExternalDocument.id = tLRPC$TL_document6.id;
                                                                                                                                                tLRPC$TL_decryptedMessageMediaExternalDocument.date = tLRPC$TL_document6.date;
                                                                                                                                                tLRPC$TL_decryptedMessageMediaExternalDocument.access_hash = tLRPC$TL_document6.access_hash;
                                                                                                                                                tLRPC$TL_decryptedMessageMediaExternalDocument.mime_type = tLRPC$TL_document6.mime_type;
                                                                                                                                                tLRPC$TL_decryptedMessageMediaExternalDocument.size = tLRPC$TL_document6.size;
                                                                                                                                                tLRPC$TL_decryptedMessageMediaExternalDocument.dc_id = tLRPC$TL_document6.dc_id;
                                                                                                                                                tLRPC$TL_decryptedMessageMediaExternalDocument.attributes = tLRPC$TL_document6.attributes;
                                                                                                                                                TLRPC$PhotoSize thumbForSecretChat3 = sendMessagesHelper11.getThumbForSecretChat(tLRPC$TL_document6.thumbs);
                                                                                                                                                if (thumbForSecretChat3 != null) {
                                                                                                                                                    ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb = thumbForSecretChat3;
                                                                                                                                                } else {
                                                                                                                                                    ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb = new TLRPC$TL_photoSizeEmpty();
                                                                                                                                                    ((TLRPC$TL_decryptedMessageMediaExternalDocument) tLRPC$TL_decryptedMessage.media).thumb.type = "s";
                                                                                                                                                }
                                                                                                                                                if (delayedMessage6 != null) {
                                                                                                                                                    delayedMessage7 = delayedMessage6;
                                                                                                                                                    if (delayedMessage7.type == 5) {
                                                                                                                                                        delayedMessage7.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                                                                                        delayedMessage7.obj = messageObject;
                                                                                                                                                        sendMessagesHelper11.performSendDelayedMessage(delayedMessage7);
                                                                                                                                                    }
                                                                                                                                                } else {
                                                                                                                                                    delayedMessage7 = delayedMessage6;
                                                                                                                                                }
                                                                                                                                                getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, null, null, messageObject);
                                                                                                                                            } else {
                                                                                                                                                delayedMessage7 = delayedMessage6;
                                                                                                                                                TLRPC$TL_decryptedMessageMediaDocument tLRPC$TL_decryptedMessageMediaDocument3 = new TLRPC$TL_decryptedMessageMediaDocument();
                                                                                                                                                tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaDocument3;
                                                                                                                                                tLRPC$TL_decryptedMessageMediaDocument3.attributes = tLRPC$TL_document6.attributes;
                                                                                                                                                tLRPC$TL_decryptedMessageMediaDocument3.caption = str31;
                                                                                                                                                TLRPC$PhotoSize thumbForSecretChat4 = sendMessagesHelper11.getThumbForSecretChat(tLRPC$TL_document6.thumbs);
                                                                                                                                                if (thumbForSecretChat4 != null) {
                                                                                                                                                    if (thumbForSecretChat4 instanceof TLRPC$TL_photoStrippedSize) {
                                                                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia9 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                                        c7 = c6;
                                                                                                                                                        ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia9).thumb = thumbForSecretChat4.bytes;
                                                                                                                                                        tLRPC$DecryptedMessageMedia9.thumb_h = thumbForSecretChat4.h;
                                                                                                                                                        tLRPC$DecryptedMessageMedia9.thumb_w = thumbForSecretChat4.w;
                                                                                                                                                    } else {
                                                                                                                                                        c7 = c6;
                                                                                                                                                        ImageLoader.fillPhotoSizeWithBytes(thumbForSecretChat4);
                                                                                                                                                        TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia10 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                                        ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia10).thumb = thumbForSecretChat4.bytes;
                                                                                                                                                        tLRPC$DecryptedMessageMedia10.thumb_h = thumbForSecretChat4.h;
                                                                                                                                                        tLRPC$DecryptedMessageMedia10.thumb_w = thumbForSecretChat4.w;
                                                                                                                                                    }
                                                                                                                                                } else {
                                                                                                                                                    c7 = c6;
                                                                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia11 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                                    ((TLRPC$TL_decryptedMessageMediaDocument) tLRPC$DecryptedMessageMedia11).thumb = new byte[0];
                                                                                                                                                    tLRPC$DecryptedMessageMedia11.thumb_h = 0;
                                                                                                                                                    tLRPC$DecryptedMessageMedia11.thumb_w = 0;
                                                                                                                                                }
                                                                                                                                                TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia12 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                                tLRPC$DecryptedMessageMedia12.size = tLRPC$TL_document6.size;
                                                                                                                                                tLRPC$DecryptedMessageMedia12.mime_type = tLRPC$TL_document6.mime_type;
                                                                                                                                                if (tLRPC$TL_document6.key != null && j25 == 0) {
                                                                                                                                                    TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile3 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                                                                                        @Override // org.telegram.tgnet.TLObject
                                                                                                                                                        public void readParams(AbstractSerializedData abstractSerializedData, boolean z26) {
                                                                                                                                                            this.id = abstractSerializedData.readInt64(z26);
                                                                                                                                                            this.access_hash = abstractSerializedData.readInt64(z26);
                                                                                                                                                        }

                                                                                                                                                        @Override // org.telegram.tgnet.TLObject
                                                                                                                                                        public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                                                                                            abstractSerializedData.writeInt32(1511503333);
                                                                                                                                                            abstractSerializedData.writeInt64(this.id);
                                                                                                                                                            abstractSerializedData.writeInt64(this.access_hash);
                                                                                                                                                        }
                                                                                                                                                    };
                                                                                                                                                    tLRPC$InputEncryptedFile3.id = tLRPC$TL_document6.id;
                                                                                                                                                    tLRPC$InputEncryptedFile3.access_hash = tLRPC$TL_document6.access_hash;
                                                                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia13 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                                    tLRPC$DecryptedMessageMedia13.key = tLRPC$TL_document6.key;
                                                                                                                                                    tLRPC$DecryptedMessageMedia13.iv = tLRPC$TL_document6.iv;
                                                                                                                                                    getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile3, null, messageObject);
                                                                                                                                                    tLRPC$Message27 = tLRPC$Message16;
                                                                                                                                                    if (j25 != 0) {
                                                                                                                                                        try {
                                                                                                                                                            TLObject tLObject = delayedMessage7.sendEncryptedRequest;
                                                                                                                                                            if (tLObject != null) {
                                                                                                                                                                tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) tLObject;
                                                                                                                                                            } else {
                                                                                                                                                                tLRPC$TL_messages_sendEncryptedMultiMedia = new TLRPC$TL_messages_sendEncryptedMultiMedia();
                                                                                                                                                                delayedMessage7.sendEncryptedRequest = tLRPC$TL_messages_sendEncryptedMultiMedia;
                                                                                                                                                            }
                                                                                                                                                            delayedMessage7.messageObjects.add(messageObject);
                                                                                                                                                            tLRPC$Message17 = tLRPC$Message27;
                                                                                                                                                        } catch (Exception e16) {
                                                                                                                                                            e = e16;
                                                                                                                                                            tLRPC$Message17 = tLRPC$Message27;
                                                                                                                                                            exc = e;
                                                                                                                                                            tLRPC$Message10 = tLRPC$Message17;
                                                                                                                                                            messageObject = messageObject;
                                                                                                                                                            tLRPC$Message8 = tLRPC$Message10;
                                                                                                                                                            sendMessagesHelper10 = sendMessagesHelper11;
                                                                                                                                                            i3 = i12;
                                                                                                                                                            tLRPC$Message = tLRPC$Message8;
                                                                                                                                                            sendMessagesHelper2 = sendMessagesHelper10;
                                                                                                                                                            FileLog.e(exc);
                                                                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                                                            if (messageObject != null) {
                                                                                                                                                            }
                                                                                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                                                            return;
                                                                                                                                                        }
                                                                                                                                                        try {
                                                                                                                                                            delayedMessage7.messages.add(tLRPC$Message17);
                                                                                                                                                            delayedMessage7.originalPaths.add(str11);
                                                                                                                                                            delayedMessage7.performMediaUpload = true;
                                                                                                                                                            tLRPC$TL_messages_sendEncryptedMultiMedia.messages.add(tLRPC$TL_decryptedMessage);
                                                                                                                                                            TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile4 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                                                                                                @Override // org.telegram.tgnet.TLObject
                                                                                                                                                                public void readParams(AbstractSerializedData abstractSerializedData, boolean z26) {
                                                                                                                                                                    this.id = abstractSerializedData.readInt64(z26);
                                                                                                                                                                    this.access_hash = abstractSerializedData.readInt64(z26);
                                                                                                                                                                }

                                                                                                                                                                @Override // org.telegram.tgnet.TLObject
                                                                                                                                                                public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                                                                                                    abstractSerializedData.writeInt32(1511503333);
                                                                                                                                                                    abstractSerializedData.writeInt64(this.id);
                                                                                                                                                                    abstractSerializedData.writeInt64(this.access_hash);
                                                                                                                                                                }
                                                                                                                                                            };
                                                                                                                                                            char c12 = c7;
                                                                                                                                                            if (c12 != 3 && c12 != 7) {
                                                                                                                                                                j16 = 0;
                                                                                                                                                                tLRPC$InputEncryptedFile4.id = j16;
                                                                                                                                                                tLRPC$TL_messages_sendEncryptedMultiMedia.files.add(tLRPC$InputEncryptedFile4);
                                                                                                                                                                sendMessagesHelper11.performSendDelayedMessage(delayedMessage7);
                                                                                                                                                            }
                                                                                                                                                            j16 = 1;
                                                                                                                                                            tLRPC$InputEncryptedFile4.id = j16;
                                                                                                                                                            tLRPC$TL_messages_sendEncryptedMultiMedia.files.add(tLRPC$InputEncryptedFile4);
                                                                                                                                                            sendMessagesHelper11.performSendDelayedMessage(delayedMessage7);
                                                                                                                                                        } catch (Exception e17) {
                                                                                                                                                            e = e17;
                                                                                                                                                            exc = e;
                                                                                                                                                            tLRPC$Message10 = tLRPC$Message17;
                                                                                                                                                            messageObject = messageObject;
                                                                                                                                                            tLRPC$Message8 = tLRPC$Message10;
                                                                                                                                                            sendMessagesHelper10 = sendMessagesHelper11;
                                                                                                                                                            i3 = i12;
                                                                                                                                                            tLRPC$Message = tLRPC$Message8;
                                                                                                                                                            sendMessagesHelper2 = sendMessagesHelper10;
                                                                                                                                                            FileLog.e(exc);
                                                                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                                                            if (messageObject != null) {
                                                                                                                                                            }
                                                                                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                                                            return;
                                                                                                                                                        }
                                                                                                                                                    } else {
                                                                                                                                                        tLRPC$Message17 = tLRPC$Message27;
                                                                                                                                                    }
                                                                                                                                                    if (messageObject17 == null) {
                                                                                                                                                        try {
                                                                                                                                                            getMediaDataController().cleanDraft(j15, messageObject18 != null ? messageObject18.getId() : 0L, false);
                                                                                                                                                            return;
                                                                                                                                                        } catch (Exception e18) {
                                                                                                                                                            e = e18;
                                                                                                                                                            tLRPC$Message10 = tLRPC$Message17;
                                                                                                                                                            r6 = messageObject;
                                                                                                                                                            exc = e;
                                                                                                                                                            messageObject = r6;
                                                                                                                                                            tLRPC$Message8 = tLRPC$Message10;
                                                                                                                                                            sendMessagesHelper10 = sendMessagesHelper11;
                                                                                                                                                            i3 = i12;
                                                                                                                                                            tLRPC$Message = tLRPC$Message8;
                                                                                                                                                            sendMessagesHelper2 = sendMessagesHelper10;
                                                                                                                                                            FileLog.e(exc);
                                                                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                                                            if (messageObject != null) {
                                                                                                                                                            }
                                                                                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                                                            return;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                    return;
                                                                                                                                                }
                                                                                                                                                if (str32 != null && str32.length() > 0 && str32.startsWith("http")) {
                                                                                                                                                    delayedMessage7.httpLocation = str32;
                                                                                                                                                }
                                                                                                                                                tLRPC$Message27 = tLRPC$Message16;
                                                                                                                                                if (j25 == 0) {
                                                                                                                                                    sendMessagesHelper11.performSendDelayedMessage(delayedMessage7);
                                                                                                                                                    tLRPC$Message27 = tLRPC$Message16;
                                                                                                                                                }
                                                                                                                                                if (j25 != 0) {
                                                                                                                                                }
                                                                                                                                                if (messageObject17 == null) {
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        tLRPC$Message16 = tLRPC$Message10;
                                                                                                                                        delayedMessage7 = delayedMessage6;
                                                                                                                                    }
                                                                                                                                    c7 = c6;
                                                                                                                                    tLRPC$Message27 = tLRPC$Message10;
                                                                                                                                    if (j25 != 0) {
                                                                                                                                    }
                                                                                                                                    if (messageObject17 == null) {
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                TLRPC$PhotoSize tLRPC$PhotoSize = tLRPC$TL_photo6.sizes.get(0);
                                                                                                                                TLRPC$PhotoSize tLRPC$PhotoSize2 = tLRPC$TL_photo6.sizes.get(arrayList5.size() - 1);
                                                                                                                                ImageLoader.fillPhotoSizeWithBytes(tLRPC$PhotoSize);
                                                                                                                                TLRPC$TL_decryptedMessageMediaPhoto tLRPC$TL_decryptedMessageMediaPhoto = new TLRPC$TL_decryptedMessageMediaPhoto();
                                                                                                                                tLRPC$TL_decryptedMessage.media = tLRPC$TL_decryptedMessageMediaPhoto;
                                                                                                                                tLRPC$TL_decryptedMessageMediaPhoto.caption = str31;
                                                                                                                                byte[] bArr3 = tLRPC$PhotoSize.bytes;
                                                                                                                                if (bArr3 != null) {
                                                                                                                                    sendMessageParams4 = sendMessageParams3;
                                                                                                                                    tLRPC$TL_decryptedMessageMediaPhoto.thumb = bArr3;
                                                                                                                                    obj5 = obj4;
                                                                                                                                } else {
                                                                                                                                    sendMessageParams4 = sendMessageParams3;
                                                                                                                                    obj5 = obj4;
                                                                                                                                    tLRPC$TL_decryptedMessageMediaPhoto.thumb = new byte[0];
                                                                                                                                }
                                                                                                                                tLRPC$TL_decryptedMessageMediaPhoto.thumb_h = tLRPC$PhotoSize.h;
                                                                                                                                tLRPC$TL_decryptedMessageMediaPhoto.thumb_w = tLRPC$PhotoSize.w;
                                                                                                                                tLRPC$TL_decryptedMessageMediaPhoto.w = tLRPC$PhotoSize2.w;
                                                                                                                                tLRPC$TL_decryptedMessageMediaPhoto.h = tLRPC$PhotoSize2.h;
                                                                                                                                tLRPC$TL_decryptedMessageMediaPhoto.size = tLRPC$PhotoSize2.size;
                                                                                                                                if (tLRPC$PhotoSize2.location.key == null || j25 != 0) {
                                                                                                                                    if (delayedMessage7 == null) {
                                                                                                                                        delayedMessage7 = new DelayedMessage(j15);
                                                                                                                                        delayedMessage7.encryptedChat = tLRPC$EncryptedChat;
                                                                                                                                        delayedMessage7.type = 0;
                                                                                                                                        delayedMessage7.originalPath = str11;
                                                                                                                                        delayedMessage7.sendEncryptedRequest = tLRPC$TL_decryptedMessage;
                                                                                                                                        delayedMessage7.obj = messageObject;
                                                                                                                                        if (hashMap4 != null) {
                                                                                                                                            Object obj8 = obj5;
                                                                                                                                            if (hashMap4.containsKey(obj8)) {
                                                                                                                                                delayedMessage7.parentObject = hashMap4.get(obj8);
                                                                                                                                                delayedMessage7.performMediaUpload = true;
                                                                                                                                                delayedMessage7.scheduled = i12 == 0;
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        delayedMessage7.parentObject = sendMessageParams4;
                                                                                                                                        delayedMessage7.performMediaUpload = true;
                                                                                                                                        delayedMessage7.scheduled = i12 == 0;
                                                                                                                                    }
                                                                                                                                    if (!TextUtils.isEmpty(str32) && str32.startsWith("http")) {
                                                                                                                                        delayedMessage7.httpLocation = str32;
                                                                                                                                    } else {
                                                                                                                                        ArrayList<TLRPC$PhotoSize> arrayList13 = tLRPC$TL_photo6.sizes;
                                                                                                                                        delayedMessage7.photoSize = arrayList13.get(arrayList13.size() - 1);
                                                                                                                                        delayedMessage7.locationParent = tLRPC$TL_photo6;
                                                                                                                                    }
                                                                                                                                    tLRPC$Message27 = tLRPC$Message15;
                                                                                                                                    if (j25 == 0) {
                                                                                                                                        sendMessagesHelper11.performSendDelayedMessage(delayedMessage7);
                                                                                                                                        tLRPC$Message27 = tLRPC$Message15;
                                                                                                                                    }
                                                                                                                                } else {
                                                                                                                                    TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile5 = new TLRPC$InputEncryptedFile() { // from class: org.telegram.tgnet.TLRPC$TL_inputEncryptedFile
                                                                                                                                        @Override // org.telegram.tgnet.TLObject
                                                                                                                                        public void readParams(AbstractSerializedData abstractSerializedData, boolean z26) {
                                                                                                                                            this.id = abstractSerializedData.readInt64(z26);
                                                                                                                                            this.access_hash = abstractSerializedData.readInt64(z26);
                                                                                                                                        }

                                                                                                                                        @Override // org.telegram.tgnet.TLObject
                                                                                                                                        public void serializeToStream(AbstractSerializedData abstractSerializedData) {
                                                                                                                                            abstractSerializedData.writeInt32(1511503333);
                                                                                                                                            abstractSerializedData.writeInt64(this.id);
                                                                                                                                            abstractSerializedData.writeInt64(this.access_hash);
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    TLRPC$FileLocation tLRPC$FileLocation = tLRPC$PhotoSize2.location;
                                                                                                                                    tLRPC$InputEncryptedFile5.id = tLRPC$FileLocation.volume_id;
                                                                                                                                    tLRPC$InputEncryptedFile5.access_hash = tLRPC$FileLocation.secret;
                                                                                                                                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia14 = tLRPC$TL_decryptedMessage.media;
                                                                                                                                    tLRPC$DecryptedMessageMedia14.key = tLRPC$FileLocation.key;
                                                                                                                                    tLRPC$DecryptedMessageMedia14.iv = tLRPC$FileLocation.iv;
                                                                                                                                    getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject.messageOwner, tLRPC$EncryptedChat, tLRPC$InputEncryptedFile5, null, messageObject);
                                                                                                                                    tLRPC$Message27 = tLRPC$Message15;
                                                                                                                                }
                                                                                                                                if (j25 != 0) {
                                                                                                                                }
                                                                                                                                if (messageObject17 == null) {
                                                                                                                                }
                                                                                                                            } catch (Exception e19) {
                                                                                                                                e = e19;
                                                                                                                                r6 = messageObject;
                                                                                                                                tLRPC$Message10 = tLRPC$Message15;
                                                                                                                                exc = e;
                                                                                                                                messageObject = r6;
                                                                                                                                tLRPC$Message8 = tLRPC$Message10;
                                                                                                                                sendMessagesHelper10 = sendMessagesHelper11;
                                                                                                                                i3 = i12;
                                                                                                                                tLRPC$Message = tLRPC$Message8;
                                                                                                                                sendMessagesHelper2 = sendMessagesHelper10;
                                                                                                                                FileLog.e(exc);
                                                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                                if (messageObject != null) {
                                                                                                                                }
                                                                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                                return;
                                                                                                                            }
                                                                                                                            c7 = c6;
                                                                                                                            tLRPC$Message15 = tLRPC$Message10;
                                                                                                                            sendMessageParams3 = messageObject4;
                                                                                                                            delayedMessage7 = delayedMessage6;
                                                                                                                            str11 = str;
                                                                                                                            obj4 = obj;
                                                                                                                            j15 = j24;
                                                                                                                        }
                                                                                                                        c7 = c6;
                                                                                                                        tLRPC$Message27 = tLRPC$Message16;
                                                                                                                        if (j25 != 0) {
                                                                                                                        }
                                                                                                                        if (messageObject17 == null) {
                                                                                                                        }
                                                                                                                    } catch (Exception e20) {
                                                                                                                        exc = e20;
                                                                                                                        messageObject = messageObject;
                                                                                                                        tLRPC$Message18 = tLRPC$Message27;
                                                                                                                    }
                                                                                                                } catch (Exception e21) {
                                                                                                                    e = e21;
                                                                                                                }
                                                                                                            } else {
                                                                                                                try {
                                                                                                                    try {
                                                                                                                        if (c6 == 1) {
                                                                                                                            TLRPC$MessageMedia tLRPC$MessageMedia11 = tLRPC$MessageMedia3;
                                                                                                                            if (tLRPC$MessageMedia11 instanceof TLRPC$TL_messageMediaVenue) {
                                                                                                                                tLRPC$TL_inputMediaGeoPoint = new TLRPC$TL_inputMediaVenue();
                                                                                                                                tLRPC$TL_inputMediaGeoPoint.address = tLRPC$MessageMedia11.address;
                                                                                                                                tLRPC$TL_inputMediaGeoPoint.title = tLRPC$MessageMedia11.title;
                                                                                                                                tLRPC$TL_inputMediaGeoPoint.provider = tLRPC$MessageMedia11.provider;
                                                                                                                                tLRPC$TL_inputMediaGeoPoint.venue_id = tLRPC$MessageMedia11.venue_id;
                                                                                                                                tLRPC$TL_inputMediaGeoPoint.venue_type = str9;
                                                                                                                            } else if (tLRPC$MessageMedia11 instanceof TLRPC$TL_messageMediaGeoLive) {
                                                                                                                                tLRPC$TL_inputMediaGeoPoint = new TLRPC$TL_inputMediaGeoLive();
                                                                                                                                tLRPC$TL_inputMediaGeoPoint.period = tLRPC$MessageMedia11.period;
                                                                                                                                int i46 = tLRPC$TL_inputMediaGeoPoint.flags | 2;
                                                                                                                                tLRPC$TL_inputMediaGeoPoint.flags = i46;
                                                                                                                                int i47 = tLRPC$MessageMedia11.heading;
                                                                                                                                if (i47 != 0) {
                                                                                                                                    tLRPC$TL_inputMediaGeoPoint.heading = i47;
                                                                                                                                    tLRPC$TL_inputMediaGeoPoint.flags = i46 | 4;
                                                                                                                                }
                                                                                                                                int i48 = tLRPC$MessageMedia11.proximity_notification_radius;
                                                                                                                                if (i48 != 0) {
                                                                                                                                    tLRPC$TL_inputMediaGeoPoint.proximity_notification_radius = i48;
                                                                                                                                    tLRPC$TL_inputMediaGeoPoint.flags |= 8;
                                                                                                                                }
                                                                                                                            } else {
                                                                                                                                tLRPC$TL_inputMediaGeoPoint = new TLRPC$TL_inputMediaGeoPoint();
                                                                                                                            }
                                                                                                                            TLRPC$TL_inputGeoPoint tLRPC$TL_inputGeoPoint = new TLRPC$TL_inputGeoPoint();
                                                                                                                            tLRPC$TL_inputMediaGeoPoint.geo_point = tLRPC$TL_inputGeoPoint;
                                                                                                                            TLRPC$GeoPoint tLRPC$GeoPoint2 = tLRPC$MessageMedia11.geo;
                                                                                                                            tL_stories$StoryItem4 = tL_stories$StoryItem7;
                                                                                                                            TLRPC$InputMedia tLRPC$InputMedia4 = tLRPC$TL_inputMediaGeoPoint;
                                                                                                                            tLRPC$TL_inputGeoPoint.lat = tLRPC$GeoPoint2.lat;
                                                                                                                            tLRPC$TL_inputGeoPoint._long = tLRPC$GeoPoint2._long;
                                                                                                                            c8 = c6;
                                                                                                                            tLRPC$InputMedia2 = tLRPC$InputMedia4;
                                                                                                                            i12 = i45;
                                                                                                                            messageObject10 = messageObject7;
                                                                                                                            hashMap2 = hashMap4;
                                                                                                                            tLRPC$InputPeer6 = tLRPC$InputPeer5;
                                                                                                                            tLRPC$Message10 = tLRPC$Message31;
                                                                                                                            sendMessageParams5 = messageObject4;
                                                                                                                            str12 = str;
                                                                                                                            z12 = false;
                                                                                                                            delayedMessage8 = delayedMessage5;
                                                                                                                            tLRPC$Message25 = tLRPC$Message31;
                                                                                                                        } else {
                                                                                                                            tL_stories$StoryItem4 = tL_stories$StoryItem7;
                                                                                                                            String str34 = str9;
                                                                                                                            if (c6 == 2 || (c6 == '\t' && tLRPC$TL_photo2 != null)) {
                                                                                                                                c8 = c6;
                                                                                                                                i12 = i45;
                                                                                                                                messageObject10 = messageObject7;
                                                                                                                                tLRPC$InputPeer6 = tLRPC$InputPeer5;
                                                                                                                                TLRPC$Message tLRPC$Message32 = tLRPC$Message31;
                                                                                                                                sendMessageParams5 = messageObject4;
                                                                                                                                boolean z26 = z8;
                                                                                                                                str12 = str;
                                                                                                                                int i49 = i16;
                                                                                                                                try {
                                                                                                                                    TLRPC$InputMedia tLRPC$TL_inputMediaUploadedPhoto = new TLRPC$TL_inputMediaUploadedPhoto();
                                                                                                                                    tLRPC$TL_inputMediaUploadedPhoto.spoiler = z26;
                                                                                                                                    if (i49 != 0) {
                                                                                                                                        tLRPC$TL_inputMediaUploadedPhoto.ttl_seconds = i49;
                                                                                                                                        tLRPC$Message32.ttl = i49;
                                                                                                                                        tLRPC$TL_inputMediaUploadedPhoto.flags |= 2;
                                                                                                                                    }
                                                                                                                                    if (hashMap4 == null || (str13 = hashMap4.get("masks")) == null) {
                                                                                                                                        hashMap2 = hashMap4;
                                                                                                                                        i24 = tLRPC$Message31;
                                                                                                                                    } else {
                                                                                                                                        SerializedData serializedData = new SerializedData(Utilities.hexToBytes(str13));
                                                                                                                                        boolean z27 = false;
                                                                                                                                        int readInt32 = serializedData.readInt32(false);
                                                                                                                                        int i50 = 0;
                                                                                                                                        while (i50 < readInt32) {
                                                                                                                                            tLRPC$TL_inputMediaUploadedPhoto.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData, serializedData.readInt32(z27), z27));
                                                                                                                                            readInt32 = readInt32;
                                                                                                                                            hashMap4 = hashMap4;
                                                                                                                                            z27 = false;
                                                                                                                                            i50++;
                                                                                                                                        }
                                                                                                                                        hashMap2 = hashMap4;
                                                                                                                                        tLRPC$TL_inputMediaUploadedPhoto.flags |= 1;
                                                                                                                                        serializedData.cleanup();
                                                                                                                                        i24 = i50;
                                                                                                                                    }
                                                                                                                                    TLRPC$TL_photo tLRPC$TL_photo7 = tLRPC$TL_photo2;
                                                                                                                                    if (tLRPC$TL_photo7.access_hash == 0) {
                                                                                                                                        tLRPC$InputMedia = tLRPC$TL_inputMediaUploadedPhoto;
                                                                                                                                        z12 = true;
                                                                                                                                        tLRPC$Message19 = i24;
                                                                                                                                    } else {
                                                                                                                                        ?? tLRPC$TL_inputMediaPhoto = new TLRPC$TL_inputMediaPhoto();
                                                                                                                                        TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                                                                                                                                        tLRPC$TL_inputMediaPhoto.id = tLRPC$TL_inputPhoto;
                                                                                                                                        tLRPC$TL_inputPhoto.id = tLRPC$TL_photo7.id;
                                                                                                                                        tLRPC$TL_inputPhoto.access_hash = tLRPC$TL_photo7.access_hash;
                                                                                                                                        byte[] bArr4 = tLRPC$TL_photo7.file_reference;
                                                                                                                                        tLRPC$TL_inputPhoto.file_reference = bArr4;
                                                                                                                                        TLRPC$Message tLRPC$Message33 = i24;
                                                                                                                                        if (bArr4 == null) {
                                                                                                                                            ?? r15 = new byte[0];
                                                                                                                                            tLRPC$TL_inputPhoto.file_reference = r15;
                                                                                                                                            tLRPC$Message33 = r15;
                                                                                                                                        }
                                                                                                                                        tLRPC$TL_inputMediaPhoto.spoiler = z26;
                                                                                                                                        z12 = false;
                                                                                                                                        tLRPC$InputMedia = tLRPC$TL_inputMediaPhoto;
                                                                                                                                        tLRPC$Message19 = tLRPC$Message33;
                                                                                                                                    }
                                                                                                                                    if (delayedMessage5 == null) {
                                                                                                                                        delayedMessage5 = new DelayedMessage(r6);
                                                                                                                                        delayedMessage5.type = 0;
                                                                                                                                        delayedMessage5.obj = messageObject;
                                                                                                                                        delayedMessage5.originalPath = str12;
                                                                                                                                        delayedMessage5.scheduled = i12 != 0;
                                                                                                                                    }
                                                                                                                                    delayedMessage5.inputUploadMedia = tLRPC$TL_inputMediaUploadedPhoto;
                                                                                                                                    delayedMessage5.performMediaUpload = z12;
                                                                                                                                    TLRPC$Message tLRPC$Message34 = tLRPC$Message19;
                                                                                                                                    if (str4 != null) {
                                                                                                                                        tLRPC$Message34 = tLRPC$Message19;
                                                                                                                                        if (str4.length() > 0) {
                                                                                                                                            String str35 = str4;
                                                                                                                                            boolean startsWith = str35.startsWith("http");
                                                                                                                                            tLRPC$Message34 = str35;
                                                                                                                                            if (startsWith) {
                                                                                                                                                delayedMessage5.httpLocation = str35;
                                                                                                                                                tLRPC$Message20 = str35;
                                                                                                                                                delayedMessage8 = delayedMessage5;
                                                                                                                                                tLRPC$InputMedia2 = tLRPC$InputMedia;
                                                                                                                                                tLRPC$Message10 = tLRPC$Message32;
                                                                                                                                                tLRPC$Message25 = tLRPC$Message20;
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    ArrayList<TLRPC$PhotoSize> arrayList14 = tLRPC$TL_photo7.sizes;
                                                                                                                                    delayedMessage5.photoSize = arrayList14.get(arrayList14.size() - 1);
                                                                                                                                    delayedMessage5.locationParent = tLRPC$TL_photo7;
                                                                                                                                    tLRPC$Message20 = tLRPC$Message34;
                                                                                                                                    delayedMessage8 = delayedMessage5;
                                                                                                                                    tLRPC$InputMedia2 = tLRPC$InputMedia;
                                                                                                                                    tLRPC$Message10 = tLRPC$Message32;
                                                                                                                                    tLRPC$Message25 = tLRPC$Message20;
                                                                                                                                } catch (Exception e22) {
                                                                                                                                    e = e22;
                                                                                                                                    tLRPC$Message13 = tLRPC$Message32;
                                                                                                                                    sendMessagesHelper15 = sendMessagesHelper11;
                                                                                                                                    exc = e;
                                                                                                                                    tLRPC$Message8 = tLRPC$Message13;
                                                                                                                                    sendMessagesHelper10 = sendMessagesHelper15;
                                                                                                                                    i3 = i12;
                                                                                                                                    tLRPC$Message = tLRPC$Message8;
                                                                                                                                    sendMessagesHelper2 = sendMessagesHelper10;
                                                                                                                                    FileLog.e(exc);
                                                                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                                    if (messageObject != null) {
                                                                                                                                    }
                                                                                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                                    sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                                    return;
                                                                                                                                }
                                                                                                                            } else {
                                                                                                                                try {
                                                                                                                                    if (c6 == 3) {
                                                                                                                                        try {
                                                                                                                                            TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument = new TLRPC$TL_inputMediaUploadedDocument();
                                                                                                                                            TLRPC$TL_document tLRPC$TL_document7 = tLRPC$TL_document3;
                                                                                                                                            tLRPC$TL_inputMediaUploadedDocument.mime_type = tLRPC$TL_document7.mime_type;
                                                                                                                                            tLRPC$TL_inputMediaUploadedDocument.attributes = tLRPC$TL_document7.attributes;
                                                                                                                                            boolean z28 = z8;
                                                                                                                                            tLRPC$TL_inputMediaUploadedDocument.spoiler = z28;
                                                                                                                                            if (!z7) {
                                                                                                                                                if (MessageObject.isRoundVideoDocument(tLRPC$TL_document7)) {
                                                                                                                                                    messageObject10 = messageObject7;
                                                                                                                                                    tLRPC$InputPeer6 = tLRPC$InputPeer5;
                                                                                                                                                    videoEditedInfo4 = videoEditedInfo3;
                                                                                                                                                } else if (videoEditedInfo3 != null) {
                                                                                                                                                    messageObject10 = messageObject7;
                                                                                                                                                    tLRPC$InputPeer6 = tLRPC$InputPeer5;
                                                                                                                                                    videoEditedInfo4 = videoEditedInfo3;
                                                                                                                                                    if (!videoEditedInfo4.muted) {
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (i16 != 0) {
                                                                                                                                                    int i51 = i16;
                                                                                                                                                    tLRPC$TL_inputMediaUploadedDocument.ttl_seconds = i51;
                                                                                                                                                    tLRPC$Message31.ttl = i51;
                                                                                                                                                    tLRPC$TL_inputMediaUploadedDocument.flags |= 2;
                                                                                                                                                }
                                                                                                                                                if (hashMap4 != null) {
                                                                                                                                                    String str36 = hashMap4.get("masks");
                                                                                                                                                    if (str36 != null) {
                                                                                                                                                        tLRPC$Message21 = tLRPC$Message31;
                                                                                                                                                        try {
                                                                                                                                                            ?? serializedData2 = new SerializedData(Utilities.hexToBytes(str36));
                                                                                                                                                            c8 = c6;
                                                                                                                                                            int i52 = 0;
                                                                                                                                                            int readInt322 = serializedData2.readInt32(false);
                                                                                                                                                            while (i52 < readInt322) {
                                                                                                                                                                int i53 = readInt322;
                                                                                                                                                                int i54 = i45;
                                                                                                                                                                VideoEditedInfo videoEditedInfo10 = videoEditedInfo4;
                                                                                                                                                                tLRPC$TL_inputMediaUploadedDocument.stickers.add(TLRPC$InputDocument.TLdeserialize(serializedData2, serializedData2.readInt32(false), false));
                                                                                                                                                                i52++;
                                                                                                                                                                readInt322 = i53;
                                                                                                                                                                videoEditedInfo4 = videoEditedInfo10;
                                                                                                                                                                i45 = i54;
                                                                                                                                                            }
                                                                                                                                                            i12 = i45;
                                                                                                                                                            videoEditedInfo5 = videoEditedInfo4;
                                                                                                                                                            tLRPC$TL_inputMediaUploadedDocument.flags |= 1;
                                                                                                                                                            serializedData2.cleanup();
                                                                                                                                                            tLRPC$Message22 = serializedData2;
                                                                                                                                                            if (tLRPC$TL_document7.access_hash == 0) {
                                                                                                                                                                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaUploadedDocument;
                                                                                                                                                                z12 = true;
                                                                                                                                                            } else {
                                                                                                                                                                TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument4 = new TLRPC$TL_inputMediaDocument();
                                                                                                                                                                TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                                                                                                                                                                tLRPC$TL_inputMediaDocument4.id = tLRPC$TL_inputDocument;
                                                                                                                                                                tLRPC$TL_inputDocument.id = tLRPC$TL_document7.id;
                                                                                                                                                                tLRPC$TL_inputDocument.access_hash = tLRPC$TL_document7.access_hash;
                                                                                                                                                                byte[] bArr5 = tLRPC$TL_document7.file_reference;
                                                                                                                                                                tLRPC$TL_inputDocument.file_reference = bArr5;
                                                                                                                                                                if (bArr5 == null) {
                                                                                                                                                                    tLRPC$TL_inputDocument.file_reference = new byte[0];
                                                                                                                                                                }
                                                                                                                                                                if (hashMap4 != null && hashMap4.containsKey("query")) {
                                                                                                                                                                    tLRPC$TL_inputMediaDocument4.query = hashMap4.get("query");
                                                                                                                                                                    tLRPC$TL_inputMediaDocument4.flags |= 2;
                                                                                                                                                                }
                                                                                                                                                                tLRPC$TL_inputMediaDocument4.spoiler = z28;
                                                                                                                                                                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument4;
                                                                                                                                                                z12 = false;
                                                                                                                                                            }
                                                                                                                                                            if (delayedMessage5 == null) {
                                                                                                                                                                delayedMessage5 = new DelayedMessage(r6);
                                                                                                                                                                delayedMessage5.type = 1;
                                                                                                                                                                delayedMessage5.obj = messageObject;
                                                                                                                                                                str12 = str;
                                                                                                                                                                delayedMessage5.originalPath = str12;
                                                                                                                                                                sendMessageParams5 = messageObject4;
                                                                                                                                                                delayedMessage5.parentObject = sendMessageParams5;
                                                                                                                                                                delayedMessage5.scheduled = i12 != 0;
                                                                                                                                                            } else {
                                                                                                                                                                sendMessageParams5 = messageObject4;
                                                                                                                                                                str12 = str;
                                                                                                                                                            }
                                                                                                                                                            delayedMessage5.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument;
                                                                                                                                                            delayedMessage5.performMediaUpload = z12;
                                                                                                                                                            if (!tLRPC$TL_document7.thumbs.isEmpty()) {
                                                                                                                                                                TLRPC$PhotoSize tLRPC$PhotoSize3 = tLRPC$TL_document7.thumbs.get(0);
                                                                                                                                                                if (!(tLRPC$PhotoSize3 instanceof TLRPC$TL_photoStrippedSize)) {
                                                                                                                                                                    delayedMessage5.photoSize = tLRPC$PhotoSize3;
                                                                                                                                                                    delayedMessage5.locationParent = tLRPC$TL_document7;
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                            delayedMessage5.videoEditedInfo = videoEditedInfo5;
                                                                                                                                                            delayedMessage8 = delayedMessage5;
                                                                                                                                                            hashMap2 = hashMap4;
                                                                                                                                                            tLRPC$Message10 = tLRPC$Message21;
                                                                                                                                                            tLRPC$InputMedia2 = tLRPC$TL_inputMediaDocument;
                                                                                                                                                            tLRPC$Message25 = tLRPC$Message22;
                                                                                                                                                        } catch (Exception e23) {
                                                                                                                                                            e = e23;
                                                                                                                                                            exc = e;
                                                                                                                                                            i3 = i45;
                                                                                                                                                            tLRPC$Message = tLRPC$Message21;
                                                                                                                                                            sendMessagesHelper2 = sendMessagesHelper11;
                                                                                                                                                            FileLog.e(exc);
                                                                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                                                            if (messageObject != null) {
                                                                                                                                                            }
                                                                                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                                                            return;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                c8 = c6;
                                                                                                                                                i12 = i45;
                                                                                                                                                videoEditedInfo5 = videoEditedInfo4;
                                                                                                                                                tLRPC$Message21 = tLRPC$Message31;
                                                                                                                                                tLRPC$Message22 = tLRPC$Message31;
                                                                                                                                                if (tLRPC$TL_document7.access_hash == 0) {
                                                                                                                                                }
                                                                                                                                                if (delayedMessage5 == null) {
                                                                                                                                                }
                                                                                                                                                delayedMessage5.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument;
                                                                                                                                                delayedMessage5.performMediaUpload = z12;
                                                                                                                                                if (!tLRPC$TL_document7.thumbs.isEmpty()) {
                                                                                                                                                }
                                                                                                                                                delayedMessage5.videoEditedInfo = videoEditedInfo5;
                                                                                                                                                delayedMessage8 = delayedMessage5;
                                                                                                                                                hashMap2 = hashMap4;
                                                                                                                                                tLRPC$Message10 = tLRPC$Message21;
                                                                                                                                                tLRPC$InputMedia2 = tLRPC$TL_inputMediaDocument;
                                                                                                                                                tLRPC$Message25 = tLRPC$Message22;
                                                                                                                                            }
                                                                                                                                            messageObject10 = messageObject7;
                                                                                                                                            tLRPC$InputPeer6 = tLRPC$InputPeer5;
                                                                                                                                            videoEditedInfo4 = videoEditedInfo3;
                                                                                                                                            tLRPC$TL_inputMediaUploadedDocument.nosound_video = true;
                                                                                                                                            if (BuildVars.DEBUG_VERSION) {
                                                                                                                                                FileLog.d("nosound_video = true");
                                                                                                                                            }
                                                                                                                                            if (i16 != 0) {
                                                                                                                                            }
                                                                                                                                            if (hashMap4 != null) {
                                                                                                                                            }
                                                                                                                                            c8 = c6;
                                                                                                                                            i12 = i45;
                                                                                                                                            videoEditedInfo5 = videoEditedInfo4;
                                                                                                                                            tLRPC$Message21 = tLRPC$Message31;
                                                                                                                                            tLRPC$Message22 = tLRPC$Message31;
                                                                                                                                            if (tLRPC$TL_document7.access_hash == 0) {
                                                                                                                                            }
                                                                                                                                            if (delayedMessage5 == null) {
                                                                                                                                            }
                                                                                                                                            delayedMessage5.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument;
                                                                                                                                            delayedMessage5.performMediaUpload = z12;
                                                                                                                                            if (!tLRPC$TL_document7.thumbs.isEmpty()) {
                                                                                                                                            }
                                                                                                                                            delayedMessage5.videoEditedInfo = videoEditedInfo5;
                                                                                                                                            delayedMessage8 = delayedMessage5;
                                                                                                                                            hashMap2 = hashMap4;
                                                                                                                                            tLRPC$Message10 = tLRPC$Message21;
                                                                                                                                            tLRPC$InputMedia2 = tLRPC$TL_inputMediaDocument;
                                                                                                                                            tLRPC$Message25 = tLRPC$Message22;
                                                                                                                                        } catch (Exception e24) {
                                                                                                                                            e = e24;
                                                                                                                                            tLRPC$Message21 = tLRPC$Message31;
                                                                                                                                        }
                                                                                                                                    } else {
                                                                                                                                        i12 = i45;
                                                                                                                                        messageObject10 = messageObject7;
                                                                                                                                        tLRPC$InputPeer6 = tLRPC$InputPeer5;
                                                                                                                                        sendMessageParams5 = messageObject4;
                                                                                                                                        boolean z29 = z8;
                                                                                                                                        TLRPC$TL_document tLRPC$TL_document8 = tLRPC$TL_document3;
                                                                                                                                        str12 = str;
                                                                                                                                        int i55 = i16;
                                                                                                                                        char c13 = c6;
                                                                                                                                        if (c13 == 6) {
                                                                                                                                            TLRPC$InputMedia tLRPC$TL_inputMediaContact = new TLRPC$TL_inputMediaContact();
                                                                                                                                            TLRPC$User tLRPC$User7 = tLRPC$User;
                                                                                                                                            tLRPC$TL_inputMediaContact.phone_number = tLRPC$User7.phone;
                                                                                                                                            tLRPC$TL_inputMediaContact.first_name = tLRPC$User7.first_name;
                                                                                                                                            tLRPC$TL_inputMediaContact.last_name = tLRPC$User7.last_name;
                                                                                                                                            if (!tLRPC$User7.restriction_reason.isEmpty() && tLRPC$User7.restriction_reason.get(0).text.startsWith("BEGIN:VCARD")) {
                                                                                                                                                tLRPC$TL_inputMediaContact.vcard = tLRPC$User7.restriction_reason.get(0).text;
                                                                                                                                            } else {
                                                                                                                                                tLRPC$TL_inputMediaContact.vcard = str34;
                                                                                                                                            }
                                                                                                                                            delayedMessage8 = delayedMessage5;
                                                                                                                                            hashMap2 = hashMap4;
                                                                                                                                            c8 = c13;
                                                                                                                                            tLRPC$Message10 = tLRPC$Message31;
                                                                                                                                            z12 = false;
                                                                                                                                            tLRPC$InputMedia2 = tLRPC$TL_inputMediaContact;
                                                                                                                                            tLRPC$Message25 = c13;
                                                                                                                                        } else if (c13 == 7 || c13 == '\t') {
                                                                                                                                            TLRPC$Message tLRPC$Message35 = tLRPC$Message31;
                                                                                                                                            if (str12 == null && str4 == null) {
                                                                                                                                                SendMessageParams sendMessageParams14 = sendMessageParams5;
                                                                                                                                                c8 = c13;
                                                                                                                                                if (tLRPC$TL_document8.access_hash == 0) {
                                                                                                                                                    sendMessageParams6 = sendMessageParams14;
                                                                                                                                                } else {
                                                                                                                                                    tLRPC$InputMedia3 = null;
                                                                                                                                                    sendMessageParams7 = sendMessageParams14;
                                                                                                                                                    if (tLRPC$TL_document8.access_hash != 0) {
                                                                                                                                                        z12 = tLRPC$InputMedia3 instanceof TLRPC$TL_inputMediaUploadedDocument;
                                                                                                                                                        tLRPC$TL_inputMediaDocument2 = tLRPC$InputMedia3;
                                                                                                                                                        sendMessageParams8 = sendMessageParams7;
                                                                                                                                                        sendMessageParams9 = sendMessageParams7;
                                                                                                                                                    } else {
                                                                                                                                                        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument5 = new TLRPC$TL_inputMediaDocument();
                                                                                                                                                        TLRPC$TL_inputDocument tLRPC$TL_inputDocument2 = new TLRPC$TL_inputDocument();
                                                                                                                                                        tLRPC$TL_inputMediaDocument5.id = tLRPC$TL_inputDocument2;
                                                                                                                                                        sendMessageParams8 = sendMessageParams7;
                                                                                                                                                        tLRPC$TL_inputDocument2.id = tLRPC$TL_document8.id;
                                                                                                                                                        tLRPC$TL_inputDocument2.access_hash = tLRPC$TL_document8.access_hash;
                                                                                                                                                        byte[] bArr6 = tLRPC$TL_document8.file_reference;
                                                                                                                                                        tLRPC$TL_inputDocument2.file_reference = bArr6;
                                                                                                                                                        SendMessageParams sendMessageParams15 = sendMessageParams7;
                                                                                                                                                        if (bArr6 == null) {
                                                                                                                                                            ?? r152 = new byte[0];
                                                                                                                                                            tLRPC$TL_inputDocument2.file_reference = r152;
                                                                                                                                                            sendMessageParams15 = r152;
                                                                                                                                                        }
                                                                                                                                                        if (hashMap4 != null && hashMap4.containsKey("query")) {
                                                                                                                                                            tLRPC$TL_inputMediaDocument5.query = hashMap4.get("query");
                                                                                                                                                            tLRPC$TL_inputMediaDocument5.flags |= 2;
                                                                                                                                                        }
                                                                                                                                                        tLRPC$TL_inputMediaDocument5.spoiler = z29;
                                                                                                                                                        tLRPC$TL_inputMediaDocument2 = tLRPC$TL_inputMediaDocument5;
                                                                                                                                                        z12 = false;
                                                                                                                                                        sendMessageParams9 = sendMessageParams15;
                                                                                                                                                    }
                                                                                                                                                    if (tLRPC$InputMedia3 == null) {
                                                                                                                                                        if (delayedMessage5 == null) {
                                                                                                                                                            delayedMessage5 = new DelayedMessage(r6);
                                                                                                                                                            delayedMessage5.type = 2;
                                                                                                                                                            delayedMessage5.obj = messageObject;
                                                                                                                                                            str12 = str12;
                                                                                                                                                            delayedMessage5.originalPath = str12;
                                                                                                                                                            sendMessageParams5 = sendMessageParams8;
                                                                                                                                                            delayedMessage5.parentObject = sendMessageParams5;
                                                                                                                                                            delayedMessage5.scheduled = i12 != 0;
                                                                                                                                                        } else {
                                                                                                                                                            sendMessageParams5 = sendMessageParams8;
                                                                                                                                                            str12 = str12;
                                                                                                                                                        }
                                                                                                                                                        delayedMessage5.inputUploadMedia = tLRPC$InputMedia3;
                                                                                                                                                        delayedMessage5.performMediaUpload = z12;
                                                                                                                                                        if (!tLRPC$TL_document8.thumbs.isEmpty()) {
                                                                                                                                                            TLRPC$PhotoSize tLRPC$PhotoSize4 = tLRPC$TL_document8.thumbs.get(0);
                                                                                                                                                            if (!(tLRPC$PhotoSize4 instanceof TLRPC$TL_photoStrippedSize)) {
                                                                                                                                                                delayedMessage5.photoSize = tLRPC$PhotoSize4;
                                                                                                                                                                delayedMessage5.locationParent = tLRPC$TL_document8;
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    } else {
                                                                                                                                                        sendMessageParams5 = sendMessageParams8;
                                                                                                                                                        str12 = str12;
                                                                                                                                                    }
                                                                                                                                                    delayedMessage8 = delayedMessage5;
                                                                                                                                                    hashMap2 = hashMap4;
                                                                                                                                                    tLRPC$InputMedia2 = tLRPC$TL_inputMediaDocument2;
                                                                                                                                                    tLRPC$Message10 = tLRPC$Message35;
                                                                                                                                                    tLRPC$Message25 = sendMessageParams9;
                                                                                                                                                }
                                                                                                                                            } else {
                                                                                                                                                sendMessageParams6 = sendMessageParams5;
                                                                                                                                                c8 = c13;
                                                                                                                                            }
                                                                                                                                            tLRPC$InputMedia3 = new TLRPC$TL_inputMediaUploadedDocument();
                                                                                                                                            tLRPC$InputMedia3.spoiler = z29;
                                                                                                                                            if (i55 != 0) {
                                                                                                                                                tLRPC$InputMedia3.ttl_seconds = i55;
                                                                                                                                                tLRPC$Message35.ttl = i55;
                                                                                                                                                tLRPC$InputMedia3.flags |= 2;
                                                                                                                                            }
                                                                                                                                            if (z7 || (!TextUtils.isEmpty(str4) && str4.toLowerCase().endsWith("mp4") && (hashMap4 == null || hashMap4.containsKey("forceDocument")))) {
                                                                                                                                                tLRPC$InputMedia3.nosound_video = true;
                                                                                                                                            }
                                                                                                                                            tLRPC$InputMedia3.force_file = hashMap4 != null && hashMap4.containsKey("forceDocument");
                                                                                                                                            tLRPC$InputMedia3.mime_type = tLRPC$TL_document8.mime_type;
                                                                                                                                            tLRPC$InputMedia3.attributes = tLRPC$TL_document8.attributes;
                                                                                                                                            sendMessageParams7 = sendMessageParams6;
                                                                                                                                            if (tLRPC$TL_document8.access_hash != 0) {
                                                                                                                                            }
                                                                                                                                            if (tLRPC$InputMedia3 == null) {
                                                                                                                                            }
                                                                                                                                            delayedMessage8 = delayedMessage5;
                                                                                                                                            hashMap2 = hashMap4;
                                                                                                                                            tLRPC$InputMedia2 = tLRPC$TL_inputMediaDocument2;
                                                                                                                                            tLRPC$Message10 = tLRPC$Message35;
                                                                                                                                            tLRPC$Message25 = sendMessageParams9;
                                                                                                                                        } else {
                                                                                                                                            if (c13 == '\b') {
                                                                                                                                                try {
                                                                                                                                                    TLRPC$InputMedia tLRPC$TL_inputMediaUploadedDocument2 = new TLRPC$TL_inputMediaUploadedDocument();
                                                                                                                                                    tLRPC$TL_inputMediaUploadedDocument2.mime_type = tLRPC$TL_document8.mime_type;
                                                                                                                                                    tLRPC$TL_inputMediaUploadedDocument2.attributes = tLRPC$TL_document8.attributes;
                                                                                                                                                    tLRPC$TL_inputMediaUploadedDocument2.spoiler = z29;
                                                                                                                                                    if (i55 != 0) {
                                                                                                                                                        tLRPC$TL_inputMediaUploadedDocument2.ttl_seconds = i55;
                                                                                                                                                        TLRPC$Message tLRPC$Message36 = tLRPC$Message31;
                                                                                                                                                        tLRPC$Message36.ttl = i55;
                                                                                                                                                        tLRPC$TL_inputMediaUploadedDocument2.flags |= 2;
                                                                                                                                                        tLRPC$Message23 = tLRPC$Message36;
                                                                                                                                                    } else {
                                                                                                                                                        tLRPC$Message23 = tLRPC$Message31;
                                                                                                                                                    }
                                                                                                                                                    c8 = c13;
                                                                                                                                                    if (tLRPC$TL_document8.access_hash == 0) {
                                                                                                                                                        tLRPC$TL_inputMediaDocument3 = tLRPC$TL_inputMediaUploadedDocument2;
                                                                                                                                                        str14 = str12;
                                                                                                                                                        sendMessageParams10 = sendMessageParams5;
                                                                                                                                                        z12 = true;
                                                                                                                                                    } else {
                                                                                                                                                        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument6 = new TLRPC$TL_inputMediaDocument();
                                                                                                                                                        TLRPC$TL_inputDocument tLRPC$TL_inputDocument3 = new TLRPC$TL_inputDocument();
                                                                                                                                                        tLRPC$TL_inputMediaDocument6.id = tLRPC$TL_inputDocument3;
                                                                                                                                                        str14 = str12;
                                                                                                                                                        sendMessageParams10 = sendMessageParams5;
                                                                                                                                                        tLRPC$TL_inputDocument3.id = tLRPC$TL_document8.id;
                                                                                                                                                        tLRPC$TL_inputDocument3.access_hash = tLRPC$TL_document8.access_hash;
                                                                                                                                                        byte[] bArr7 = tLRPC$TL_document8.file_reference;
                                                                                                                                                        tLRPC$TL_inputDocument3.file_reference = bArr7;
                                                                                                                                                        if (bArr7 == null) {
                                                                                                                                                            tLRPC$TL_inputDocument3.file_reference = new byte[0];
                                                                                                                                                        }
                                                                                                                                                        if (hashMap4 != null && hashMap4.containsKey("query")) {
                                                                                                                                                            tLRPC$TL_inputMediaDocument6.query = hashMap4.get("query");
                                                                                                                                                            tLRPC$TL_inputMediaDocument6.flags |= 2;
                                                                                                                                                        }
                                                                                                                                                        tLRPC$TL_inputMediaDocument6.spoiler = z29;
                                                                                                                                                        tLRPC$TL_inputMediaDocument3 = tLRPC$TL_inputMediaDocument6;
                                                                                                                                                        z12 = false;
                                                                                                                                                    }
                                                                                                                                                    DelayedMessage delayedMessage9 = new DelayedMessage(r6);
                                                                                                                                                    delayedMessage9.type = 3;
                                                                                                                                                    delayedMessage9.obj = messageObject;
                                                                                                                                                    SendMessageParams sendMessageParams16 = sendMessageParams10;
                                                                                                                                                    delayedMessage9.parentObject = sendMessageParams16;
                                                                                                                                                    delayedMessage9.inputUploadMedia = tLRPC$TL_inputMediaUploadedDocument2;
                                                                                                                                                    delayedMessage9.performMediaUpload = z12;
                                                                                                                                                    delayedMessage9.scheduled = i12 != 0;
                                                                                                                                                    delayedMessage8 = delayedMessage9;
                                                                                                                                                    sendMessageParams5 = sendMessageParams16;
                                                                                                                                                    hashMap2 = hashMap4;
                                                                                                                                                    tLRPC$TL_inputMediaStory = tLRPC$TL_inputMediaDocument3;
                                                                                                                                                    tLRPC$Message24 = tLRPC$Message23;
                                                                                                                                                    c9 = sendMessageParams10;
                                                                                                                                                } catch (Exception e25) {
                                                                                                                                                    e = e25;
                                                                                                                                                    tLRPC$Message13 = tLRPC$Message31;
                                                                                                                                                    sendMessagesHelper15 = sendMessagesHelper11;
                                                                                                                                                    exc = e;
                                                                                                                                                    tLRPC$Message8 = tLRPC$Message13;
                                                                                                                                                    sendMessagesHelper10 = sendMessagesHelper15;
                                                                                                                                                    i3 = i12;
                                                                                                                                                    tLRPC$Message = tLRPC$Message8;
                                                                                                                                                    sendMessagesHelper2 = sendMessagesHelper10;
                                                                                                                                                    FileLog.e(exc);
                                                                                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                                                    if (messageObject != null) {
                                                                                                                                                    }
                                                                                                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                                                    sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                                                    return;
                                                                                                                                                }
                                                                                                                                            } else {
                                                                                                                                                str14 = str12;
                                                                                                                                                tLRPC$Message24 = tLRPC$Message31;
                                                                                                                                                if (c13 == '\n') {
                                                                                                                                                    ?? tLRPC$TL_inputMediaPoll = new TLRPC$TL_inputMediaPoll();
                                                                                                                                                    TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll5 = tLRPC$TL_messageMediaPoll2;
                                                                                                                                                    tLRPC$TL_inputMediaPoll.poll = tLRPC$TL_messageMediaPoll5.poll;
                                                                                                                                                    SendMessageParams sendMessageParams17 = c13;
                                                                                                                                                    if (hashMap4 != null) {
                                                                                                                                                        sendMessageParams17 = c13;
                                                                                                                                                        if (hashMap4.containsKey("answers")) {
                                                                                                                                                            byte[] hexToBytes = Utilities.hexToBytes(hashMap4.get("answers"));
                                                                                                                                                            sendMessageParams17 = c13;
                                                                                                                                                            if (hexToBytes.length > 0) {
                                                                                                                                                                SendMessageParams sendMessageParams18 = c13;
                                                                                                                                                                for (int i56 = 0; i56 < hexToBytes.length; i56++) {
                                                                                                                                                                    sendMessageParams18 = null;
                                                                                                                                                                    tLRPC$TL_inputMediaPoll.correct_answers.add(new byte[]{hexToBytes[i56]});
                                                                                                                                                                }
                                                                                                                                                                tLRPC$TL_inputMediaPoll.flags |= 1;
                                                                                                                                                                sendMessageParams17 = sendMessageParams18;
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                    TLRPC$PollResults tLRPC$PollResults = tLRPC$TL_messageMediaPoll5.results;
                                                                                                                                                    tLRPC$TL_inputMediaStory3 = tLRPC$TL_inputMediaPoll;
                                                                                                                                                    sendMessageParams11 = sendMessageParams17;
                                                                                                                                                    if (tLRPC$PollResults != null) {
                                                                                                                                                        tLRPC$TL_inputMediaStory3 = tLRPC$TL_inputMediaPoll;
                                                                                                                                                        sendMessageParams11 = sendMessageParams17;
                                                                                                                                                        if (!TextUtils.isEmpty(tLRPC$PollResults.solution)) {
                                                                                                                                                            TLRPC$PollResults tLRPC$PollResults2 = tLRPC$TL_messageMediaPoll5.results;
                                                                                                                                                            tLRPC$TL_inputMediaPoll.solution = tLRPC$PollResults2.solution;
                                                                                                                                                            tLRPC$TL_inputMediaPoll.solution_entities = tLRPC$PollResults2.solution_entities;
                                                                                                                                                            tLRPC$TL_inputMediaPoll.flags |= 2;
                                                                                                                                                            tLRPC$TL_inputMediaStory3 = tLRPC$TL_inputMediaPoll;
                                                                                                                                                            sendMessageParams11 = sendMessageParams17;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                } else if (c13 == 11) {
                                                                                                                                                    ?? tLRPC$TL_inputMediaDice = new TLRPC$TL_inputMediaDice();
                                                                                                                                                    tLRPC$TL_inputMediaDice.emoticon = str7;
                                                                                                                                                    tLRPC$TL_inputMediaStory3 = tLRPC$TL_inputMediaDice;
                                                                                                                                                    sendMessageParams11 = c13;
                                                                                                                                                } else if (c13 == '\f') {
                                                                                                                                                    TLRPC$TL_inputMediaStory tLRPC$TL_inputMediaStory4 = new TLRPC$TL_inputMediaStory();
                                                                                                                                                    TL_stories$StoryItem tL_stories$StoryItem8 = tL_stories$StoryItem6;
                                                                                                                                                    tLRPC$TL_inputMediaStory4.id = tL_stories$StoryItem8.id;
                                                                                                                                                    tLRPC$TL_inputMediaStory4.peer = MessagesController.getInstance(sendMessagesHelper11.currentAccount).getInputPeer(tL_stories$StoryItem8.dialogId);
                                                                                                                                                    tLRPC$TL_inputMediaStory3 = tLRPC$TL_inputMediaStory4;
                                                                                                                                                    sendMessageParams11 = c13;
                                                                                                                                                } else {
                                                                                                                                                    delayedMessage8 = delayedMessage5;
                                                                                                                                                    c8 = c13;
                                                                                                                                                    hashMap2 = hashMap4;
                                                                                                                                                    z12 = false;
                                                                                                                                                    tLRPC$TL_inputMediaStory2 = null;
                                                                                                                                                    c10 = c13;
                                                                                                                                                    sendMessageParams5 = sendMessageParams5;
                                                                                                                                                    tLRPC$TL_inputMediaStory = tLRPC$TL_inputMediaStory2;
                                                                                                                                                    c9 = c10;
                                                                                                                                                }
                                                                                                                                                delayedMessage8 = delayedMessage5;
                                                                                                                                                c8 = c13;
                                                                                                                                                hashMap2 = hashMap4;
                                                                                                                                                z12 = false;
                                                                                                                                                tLRPC$TL_inputMediaStory2 = tLRPC$TL_inputMediaStory3;
                                                                                                                                                c10 = sendMessageParams11;
                                                                                                                                                sendMessageParams5 = sendMessageParams5;
                                                                                                                                                tLRPC$TL_inputMediaStory = tLRPC$TL_inputMediaStory2;
                                                                                                                                                c9 = c10;
                                                                                                                                            }
                                                                                                                                            str12 = str14;
                                                                                                                                            tLRPC$InputMedia2 = tLRPC$TL_inputMediaStory;
                                                                                                                                            tLRPC$Message10 = tLRPC$Message24;
                                                                                                                                            tLRPC$Message25 = c9;
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                } catch (Exception e26) {
                                                                                                                                    exc = e26;
                                                                                                                                    tLRPC$Message18 = tLRPC$Message27;
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (j13 != 0) {
                                                                                                                            TLObject tLObject2 = delayedMessage8.sendRequest;
                                                                                                                            if (tLObject2 != null) {
                                                                                                                                i27 = i12;
                                                                                                                                tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) tLObject2;
                                                                                                                                tLRPC$Message26 = tLRPC$Message25;
                                                                                                                            } else {
                                                                                                                                TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia2 = new TLRPC$TL_messages_sendMultiMedia();
                                                                                                                                tLRPC$TL_messages_sendMultiMedia2.peer = tLRPC$InputPeer6;
                                                                                                                                tLRPC$TL_messages_sendMultiMedia2.silent = tLRPC$Message10.silent;
                                                                                                                                if (tLRPC$Message10.replyStory != null) {
                                                                                                                                    tLRPC$TL_messages_sendMultiMedia2.flags |= 1;
                                                                                                                                    tLRPC$TL_messages_sendMultiMedia2.reply_to = sendMessagesHelper11.createReplyInput(tL_stories$StoryItem4);
                                                                                                                                } else {
                                                                                                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader10 = tLRPC$Message10.reply_to;
                                                                                                                                    if (tLRPC$MessageReplyHeader10 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                                                                        tLRPC$TL_messages_sendMultiMedia2.flags |= 1;
                                                                                                                                        tLRPC$TL_messages_sendMultiMedia2.reply_to = sendMessagesHelper11.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader10);
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (i12 != 0) {
                                                                                                                                    i26 = i12;
                                                                                                                                    tLRPC$TL_messages_sendMultiMedia2.schedule_date = i26;
                                                                                                                                    tLRPC$TL_messages_sendMultiMedia2.flags |= 1024;
                                                                                                                                } else {
                                                                                                                                    i26 = i12;
                                                                                                                                }
                                                                                                                                TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut = tLRPC$Message10.quick_reply_shortcut;
                                                                                                                                if (tLRPC$InputQuickReplyShortcut != null) {
                                                                                                                                    tLRPC$TL_messages_sendMultiMedia2.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut;
                                                                                                                                    tLRPC$TL_messages_sendMultiMedia2.flags |= 131072;
                                                                                                                                }
                                                                                                                                long j27 = tLRPC$Message10.effect;
                                                                                                                                if (j27 != 0) {
                                                                                                                                    tLRPC$TL_messages_sendMultiMedia2.flags |= 262144;
                                                                                                                                    tLRPC$TL_messages_sendMultiMedia2.effect = j27;
                                                                                                                                }
                                                                                                                                SendMessageParams sendMessageParams19 = sendMessageParams;
                                                                                                                                tLRPC$TL_messages_sendMultiMedia2.invert_media = sendMessageParams19.invert_media;
                                                                                                                                delayedMessage8.sendRequest = tLRPC$TL_messages_sendMultiMedia2;
                                                                                                                                tLRPC$TL_messages_sendMultiMedia = tLRPC$TL_messages_sendMultiMedia2;
                                                                                                                                i27 = i26;
                                                                                                                                tLRPC$Message26 = sendMessageParams19;
                                                                                                                            }
                                                                                                                            delayedMessage8.messageObjects.add(messageObject);
                                                                                                                            delayedMessage8.parentObjects.add(sendMessageParams5);
                                                                                                                            delayedMessage8.locations.add(delayedMessage8.photoSize);
                                                                                                                            delayedMessage8.videoEditedInfos.add(delayedMessage8.videoEditedInfo);
                                                                                                                            delayedMessage8.httpLocations.add(delayedMessage8.httpLocation);
                                                                                                                            delayedMessage8.inputMedias.add(delayedMessage8.inputUploadMedia);
                                                                                                                            delayedMessage8.messages.add(tLRPC$Message10);
                                                                                                                            delayedMessage8.originalPaths.add(str12);
                                                                                                                            TLRPC$TL_inputSingleMedia tLRPC$TL_inputSingleMedia = new TLRPC$TL_inputSingleMedia();
                                                                                                                            tLRPC$TL_inputSingleMedia.random_id = tLRPC$Message10.random_id;
                                                                                                                            tLRPC$TL_inputSingleMedia.media = tLRPC$InputMedia2;
                                                                                                                            tLRPC$TL_inputSingleMedia.message = str6;
                                                                                                                            if (arrayList4 != null && !arrayList4.isEmpty()) {
                                                                                                                                tLRPC$TL_inputSingleMedia.entities = arrayList4;
                                                                                                                                tLRPC$TL_inputSingleMedia.flags |= 1;
                                                                                                                            }
                                                                                                                            tLRPC$TL_messages_sendMultiMedia.multi_media.add(tLRPC$TL_inputSingleMedia);
                                                                                                                            tLRPC$TL_messages_sendMedia = tLRPC$TL_messages_sendMultiMedia;
                                                                                                                            str15 = str12;
                                                                                                                            sendMessageParams12 = sendMessageParams5;
                                                                                                                            i25 = i27;
                                                                                                                            messageObject11 = tLRPC$Message26;
                                                                                                                        } else {
                                                                                                                            SendMessageParams sendMessageParams20 = sendMessageParams;
                                                                                                                            ArrayList<TLRPC$MessageEntity> arrayList15 = arrayList4;
                                                                                                                            String str37 = str6;
                                                                                                                            TL_stories$StoryItem tL_stories$StoryItem9 = tL_stories$StoryItem4;
                                                                                                                            tLRPC$InputPeer5 = i12;
                                                                                                                            TLRPC$InputPeer tLRPC$InputPeer8 = tLRPC$InputPeer6;
                                                                                                                            try {
                                                                                                                                tLRPC$TL_messages_sendMedia = new TLRPC$TL_messages_sendMedia();
                                                                                                                                tLRPC$TL_messages_sendMedia.peer = tLRPC$InputPeer8;
                                                                                                                                tLRPC$TL_messages_sendMedia.silent = tLRPC$Message10.silent;
                                                                                                                                if (messageObject10 != null) {
                                                                                                                                    messageObject10.getId();
                                                                                                                                }
                                                                                                                                if (tL_stories$StoryItem9 != null) {
                                                                                                                                    tLRPC$TL_messages_sendMedia.reply_to = sendMessagesHelper11.createReplyInput(tL_stories$StoryItem9);
                                                                                                                                    tLRPC$TL_messages_sendMedia.flags |= 1;
                                                                                                                                } else {
                                                                                                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader11 = tLRPC$Message10.reply_to;
                                                                                                                                    if (tLRPC$MessageReplyHeader11 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                                                                        tLRPC$TL_messages_sendMedia.flags |= 1;
                                                                                                                                        tLRPC$TL_messages_sendMedia.reply_to = sendMessagesHelper11.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader11);
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                str15 = str12;
                                                                                                                                sendMessageParams12 = sendMessageParams5;
                                                                                                                                tLRPC$TL_messages_sendMedia.random_id = tLRPC$Message10.random_id;
                                                                                                                                if (tLRPC$Message10.from_id != null) {
                                                                                                                                    tLRPC$TL_messages_sendMedia.send_as = getMessagesController().getInputPeer(tLRPC$Message10.from_id);
                                                                                                                                }
                                                                                                                                tLRPC$TL_messages_sendMedia.media = tLRPC$InputMedia2;
                                                                                                                                tLRPC$TL_messages_sendMedia.message = str37;
                                                                                                                                if (arrayList15 != null && !arrayList15.isEmpty()) {
                                                                                                                                    tLRPC$TL_messages_sendMedia.entities = arrayList15;
                                                                                                                                    tLRPC$TL_messages_sendMedia.flags |= 8;
                                                                                                                                }
                                                                                                                                if (tLRPC$InputPeer5 != 0) {
                                                                                                                                    tLRPC$TL_messages_sendMedia.schedule_date = tLRPC$InputPeer5;
                                                                                                                                    tLRPC$TL_messages_sendMedia.flags |= 1024;
                                                                                                                                }
                                                                                                                                if (z18 && SharedConfig.updateStickersOrderOnSend) {
                                                                                                                                    tLRPC$TL_messages_sendMedia.update_stickersets_order = true;
                                                                                                                                }
                                                                                                                                TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut2 = tLRPC$Message10.quick_reply_shortcut;
                                                                                                                                if (tLRPC$InputQuickReplyShortcut2 != null) {
                                                                                                                                    tLRPC$TL_messages_sendMedia.flags |= 131072;
                                                                                                                                    tLRPC$TL_messages_sendMedia.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut2;
                                                                                                                                }
                                                                                                                                long j28 = sendMessageParams20.effect_id;
                                                                                                                                if (j28 != 0) {
                                                                                                                                    tLRPC$TL_messages_sendMedia.flags |= 262144;
                                                                                                                                    tLRPC$TL_messages_sendMedia.effect = j28;
                                                                                                                                }
                                                                                                                                tLRPC$TL_messages_sendMedia.invert_media = tLRPC$Message10.invert_media;
                                                                                                                                i25 = tLRPC$InputPeer5;
                                                                                                                                messageObject11 = sendMessageParams20;
                                                                                                                                if (delayedMessage8 != null) {
                                                                                                                                    delayedMessage8.sendRequest = tLRPC$TL_messages_sendMedia;
                                                                                                                                    i25 = tLRPC$InputPeer5;
                                                                                                                                    messageObject11 = sendMessageParams20;
                                                                                                                                }
                                                                                                                            } catch (Exception e27) {
                                                                                                                                e = e27;
                                                                                                                                exc = e;
                                                                                                                                tLRPC$Message11 = tLRPC$Message10;
                                                                                                                                sendMessagesHelper12 = sendMessagesHelper11;
                                                                                                                                i18 = tLRPC$InputPeer5;
                                                                                                                                i3 = i18;
                                                                                                                                tLRPC$Message = tLRPC$Message11;
                                                                                                                                sendMessagesHelper2 = sendMessagesHelper12;
                                                                                                                                FileLog.e(exc);
                                                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                                if (messageObject != null) {
                                                                                                                                }
                                                                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                                return;
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (j13 != 0) {
                                                                                                                            sendMessagesHelper11.performSendDelayedMessage(delayedMessage8);
                                                                                                                            return;
                                                                                                                        }
                                                                                                                        char c14 = c8;
                                                                                                                        if (c14 == 1) {
                                                                                                                            i17 = i25;
                                                                                                                            performSendMessageRequest(tLRPC$TL_messages_sendMedia, messageObject, null, delayedMessage8, sendMessageParams12, hashMap2, i25 != 0);
                                                                                                                            tLRPC$Message30 = tLRPC$Message10;
                                                                                                                            sendMessagesHelper11 = sendMessagesHelper11;
                                                                                                                        } else {
                                                                                                                            int i57 = i25;
                                                                                                                            try {
                                                                                                                                if (c14 != 2) {
                                                                                                                                    messageObject11 = messageObject;
                                                                                                                                    String str38 = str15;
                                                                                                                                    if (c14 == 3) {
                                                                                                                                        if (z12) {
                                                                                                                                            sendMessagesHelper11.performSendDelayedMessage(delayedMessage8);
                                                                                                                                        } else {
                                                                                                                                            performSendMessageRequest(tLRPC$TL_messages_sendMedia, messageObject11, str38, delayedMessage8, sendMessageParams12, hashMap2, i57 != 0);
                                                                                                                                        }
                                                                                                                                    } else if (c14 == 6) {
                                                                                                                                        performSendMessageRequest(tLRPC$TL_messages_sendMedia, messageObject11, str38, delayedMessage8, sendMessageParams12, hashMap2, i57 != 0);
                                                                                                                                    } else if (c14 == 7) {
                                                                                                                                        if (z12 && delayedMessage8 != null) {
                                                                                                                                            sendMessagesHelper11.performSendDelayedMessage(delayedMessage8);
                                                                                                                                        } else {
                                                                                                                                            performSendMessageRequest(tLRPC$TL_messages_sendMedia, messageObject11, str38, delayedMessage8, sendMessageParams12, hashMap2, i57 != 0);
                                                                                                                                        }
                                                                                                                                    } else if (c14 == '\b') {
                                                                                                                                        if (z12) {
                                                                                                                                            sendMessagesHelper11.performSendDelayedMessage(delayedMessage8);
                                                                                                                                        } else {
                                                                                                                                            performSendMessageRequest(tLRPC$TL_messages_sendMedia, messageObject11, str38, delayedMessage8, sendMessageParams12, hashMap2, i57 != 0);
                                                                                                                                        }
                                                                                                                                    } else if (c14 != '\n' && c14 != 11 && c14 != '\f') {
                                                                                                                                        return;
                                                                                                                                    } else {
                                                                                                                                        performSendMessageRequest(tLRPC$TL_messages_sendMedia, messageObject11, str38, delayedMessage8, sendMessageParams12, hashMap2, i57 != 0);
                                                                                                                                    }
                                                                                                                                } else if (z12) {
                                                                                                                                    sendMessagesHelper11.performSendDelayedMessage(delayedMessage8);
                                                                                                                                    tLRPC$Message30 = tLRPC$Message10;
                                                                                                                                    sendMessagesHelper11 = sendMessagesHelper11;
                                                                                                                                    i17 = i57;
                                                                                                                                } else {
                                                                                                                                    messageObject11 = messageObject;
                                                                                                                                    performSendMessageRequest(tLRPC$TL_messages_sendMedia, messageObject, str15, null, true, delayedMessage8, sendMessageParams12, hashMap2, i57 != 0);
                                                                                                                                }
                                                                                                                                return;
                                                                                                                            } catch (Exception e28) {
                                                                                                                                exc = e28;
                                                                                                                                i3 = i57;
                                                                                                                                messageObject = messageObject11;
                                                                                                                                tLRPC$Message = tLRPC$Message10;
                                                                                                                                sendMessagesHelper2 = sendMessagesHelper11;
                                                                                                                            }
                                                                                                                        }
                                                                                                                    } catch (Exception e29) {
                                                                                                                        e = e29;
                                                                                                                        tLRPC$Message13 = messageObject17;
                                                                                                                        sendMessagesHelper15 = sendMessagesHelper11;
                                                                                                                    }
                                                                                                                } catch (Exception e30) {
                                                                                                                    exc = e30;
                                                                                                                    i22 = i45;
                                                                                                                    sendMessagesHelper16 = sendMessagesHelper11;
                                                                                                                    tLRPC$Message14 = tLRPC$Message31;
                                                                                                                    tLRPC$Message = tLRPC$Message14;
                                                                                                                    i3 = i22;
                                                                                                                    sendMessagesHelper2 = sendMessagesHelper16;
                                                                                                                    FileLog.e(exc);
                                                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                    if (messageObject != null) {
                                                                                                                    }
                                                                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                    sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                    return;
                                                                                                                }
                                                                                                            }
                                                                                                            tLRPC$Message8 = tLRPC$Message18;
                                                                                                            sendMessagesHelper10 = sendMessagesHelper11;
                                                                                                            i3 = i12;
                                                                                                            tLRPC$Message = tLRPC$Message8;
                                                                                                            sendMessagesHelper2 = sendMessagesHelper10;
                                                                                                            FileLog.e(exc);
                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                            if (messageObject != null) {
                                                                                                                messageObject.messageOwner.send_state = 2;
                                                                                                            }
                                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                            return;
                                                                                                        } else if (c6 != 4) {
                                                                                                            SendMessagesHelper sendMessagesHelper19 = sendMessagesHelper8;
                                                                                                            MessageObject messageObject19 = messageObject6;
                                                                                                            int i58 = i12;
                                                                                                            if (c6 == '\t') {
                                                                                                                try {
                                                                                                                    tLRPC$TL_messages_sendInlineBotResult = new TLRPC$TL_messages_sendInlineBotResult();
                                                                                                                    tLRPC$TL_messages_sendInlineBotResult.peer = tLRPC$InputPeer5;
                                                                                                                    tLRPC$TL_messages_sendInlineBotResult.random_id = tLRPC$Message6.random_id;
                                                                                                                    TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut3 = tLRPC$Message6.quick_reply_shortcut;
                                                                                                                    if (tLRPC$InputQuickReplyShortcut3 != null) {
                                                                                                                        try {
                                                                                                                            tLRPC$TL_messages_sendInlineBotResult.flags |= 131072;
                                                                                                                            tLRPC$TL_messages_sendInlineBotResult.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut3;
                                                                                                                        } catch (Exception e31) {
                                                                                                                            exc = e31;
                                                                                                                            tLRPC$Message12 = tLRPC$Message6;
                                                                                                                            sendMessagesHelper14 = sendMessagesHelper19;
                                                                                                                            i20 = i58;
                                                                                                                            i3 = i20;
                                                                                                                            tLRPC$Message = tLRPC$Message12;
                                                                                                                            sendMessagesHelper2 = sendMessagesHelper14;
                                                                                                                            FileLog.e(exc);
                                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                            if (messageObject != null) {
                                                                                                                            }
                                                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                            return;
                                                                                                                        }
                                                                                                                    }
                                                                                                                    if (tLRPC$Message6.from_id != null) {
                                                                                                                        tLRPC$TL_messages_sendInlineBotResult.send_as = getMessagesController().getInputPeer(tLRPC$Message6.from_id);
                                                                                                                    }
                                                                                                                    tLRPC$TL_messages_sendInlineBotResult.hide_via = !hashMap3.containsKey("bot");
                                                                                                                    if (tL_stories$StoryItem3 != null) {
                                                                                                                        tLRPC$TL_messages_sendInlineBotResult.reply_to = sendMessagesHelper19.createReplyInput(tL_stories$StoryItem3);
                                                                                                                        tLRPC$TL_messages_sendInlineBotResult.flags |= 1;
                                                                                                                    } else {
                                                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader12 = tLRPC$Message6.reply_to;
                                                                                                                        if (tLRPC$MessageReplyHeader12 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                                                            tLRPC$TL_messages_sendInlineBotResult.flags |= 1;
                                                                                                                            tLRPC$TL_messages_sendInlineBotResult.reply_to = sendMessagesHelper19.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader12);
                                                                                                                        }
                                                                                                                    }
                                                                                                                    tLRPC$TL_messages_sendInlineBotResult.silent = tLRPC$Message6.silent;
                                                                                                                    if (i58 != 0) {
                                                                                                                        tLRPC$TL_messages_sendInlineBotResult.schedule_date = i58;
                                                                                                                        tLRPC$TL_messages_sendInlineBotResult.flags |= 1024;
                                                                                                                    }
                                                                                                                    tLRPC$TL_messages_sendInlineBotResult.query_id = Utilities.parseLong(hashMap3.get(obj2)).longValue();
                                                                                                                    tLRPC$TL_messages_sendInlineBotResult.id = hashMap3.get("id");
                                                                                                                    if (messageObject19 == null) {
                                                                                                                        tLRPC$TL_messages_sendInlineBotResult.clear_draft = true;
                                                                                                                        MediaDataController mediaDataController = getMediaDataController();
                                                                                                                        long id2 = messageObject7 != null ? messageObject7.getId() : 0L;
                                                                                                                        i19 = i58;
                                                                                                                        try {
                                                                                                                            mediaDataController.cleanDraft(r6, id2, false);
                                                                                                                        } catch (Exception e32) {
                                                                                                                            exc = e32;
                                                                                                                            tLRPC$Message7 = tLRPC$Message6;
                                                                                                                            sendMessagesHelper13 = sendMessagesHelper19;
                                                                                                                            i3 = i19;
                                                                                                                            tLRPC$Message = tLRPC$Message7;
                                                                                                                            sendMessagesHelper2 = sendMessagesHelper13;
                                                                                                                            FileLog.e(exc);
                                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                            if (messageObject != null) {
                                                                                                                            }
                                                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                            return;
                                                                                                                        }
                                                                                                                    } else {
                                                                                                                        i19 = i58;
                                                                                                                    }
                                                                                                                    tLRPC$Message14 = tLRPC$Message6;
                                                                                                                } catch (Exception e33) {
                                                                                                                    tLRPC$Message14 = tLRPC$Message6;
                                                                                                                    exc = e33;
                                                                                                                    i22 = i58;
                                                                                                                    sendMessagesHelper16 = sendMessagesHelper19;
                                                                                                                }
                                                                                                                try {
                                                                                                                    performSendMessageRequest(tLRPC$TL_messages_sendInlineBotResult, messageObject, null, null, messageObject4, hashMap3, i19 != 0);
                                                                                                                    return;
                                                                                                                } catch (Exception e34) {
                                                                                                                    exc = e34;
                                                                                                                    i22 = i19;
                                                                                                                    sendMessagesHelper16 = sendMessagesHelper19;
                                                                                                                    tLRPC$Message = tLRPC$Message14;
                                                                                                                    i3 = i22;
                                                                                                                    sendMessagesHelper2 = sendMessagesHelper16;
                                                                                                                    FileLog.e(exc);
                                                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                    if (messageObject != null) {
                                                                                                                    }
                                                                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                    sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                    return;
                                                                                                                }
                                                                                                            }
                                                                                                            return;
                                                                                                        } else {
                                                                                                            try {
                                                                                                                TLRPC$TL_messages_forwardMessages tLRPC$TL_messages_forwardMessages = new TLRPC$TL_messages_forwardMessages();
                                                                                                                tLRPC$TL_messages_forwardMessages.to_peer = tLRPC$InputPeer5;
                                                                                                                MessageObject messageObject20 = messageObject6;
                                                                                                                tLRPC$TL_messages_forwardMessages.with_my_score = messageObject20.messageOwner.with_my_score;
                                                                                                                if (messageObject7 != null) {
                                                                                                                    tLRPC$TL_messages_forwardMessages.top_msg_id = messageObject7.getId();
                                                                                                                    tLRPC$TL_messages_forwardMessages.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                                                                                }
                                                                                                                if (hashMap3 != null && hashMap3.containsKey("fwd_id")) {
                                                                                                                    int intValue = Utilities.parseInt((CharSequence) hashMap3.get("fwd_id")).intValue();
                                                                                                                    tLRPC$TL_messages_forwardMessages.drop_author = true;
                                                                                                                    long longValue2 = Utilities.parseLong(hashMap3.get("fwd_peer")).longValue();
                                                                                                                    if (longValue2 < 0) {
                                                                                                                        TLRPC$Chat chat2 = getMessagesController().getChat(Long.valueOf(-longValue2));
                                                                                                                        if (ChatObject.isChannel(chat2)) {
                                                                                                                            TLRPC$TL_inputPeerChannel tLRPC$TL_inputPeerChannel = new TLRPC$TL_inputPeerChannel();
                                                                                                                            tLRPC$TL_messages_forwardMessages.from_peer = tLRPC$TL_inputPeerChannel;
                                                                                                                            tLRPC$TL_inputPeerChannel.channel_id = chat2.id;
                                                                                                                            tLRPC$TL_inputPeerChannel.access_hash = chat2.access_hash;
                                                                                                                        } else {
                                                                                                                            tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                                                                        }
                                                                                                                    } else {
                                                                                                                        tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                                                                    }
                                                                                                                    tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(intValue));
                                                                                                                } else {
                                                                                                                    tLRPC$TL_messages_forwardMessages.from_peer = new TLRPC$TL_inputPeerEmpty();
                                                                                                                }
                                                                                                                tLRPC$TL_messages_forwardMessages.silent = tLRPC$Message6.silent;
                                                                                                                if (i12 != 0) {
                                                                                                                    i21 = i12;
                                                                                                                    try {
                                                                                                                        tLRPC$TL_messages_forwardMessages.schedule_date = i21;
                                                                                                                        tLRPC$TL_messages_forwardMessages.flags |= 1024;
                                                                                                                    } catch (Exception e35) {
                                                                                                                        exc = e35;
                                                                                                                        sendMessagesHelper2 = sendMessagesHelper8;
                                                                                                                        i3 = i21;
                                                                                                                        tLRPC$Message = tLRPC$Message6;
                                                                                                                    }
                                                                                                                } else {
                                                                                                                    i21 = i12;
                                                                                                                }
                                                                                                                try {
                                                                                                                    tLRPC$TL_messages_forwardMessages.random_id.add(Long.valueOf(tLRPC$Message6.random_id));
                                                                                                                    if (messageObject20.getId() >= 0) {
                                                                                                                        tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(messageObject20.getId()));
                                                                                                                    } else {
                                                                                                                        TLRPC$Message tLRPC$Message37 = messageObject20.messageOwner;
                                                                                                                        int i59 = tLRPC$Message37.fwd_msg_id;
                                                                                                                        if (i59 != 0) {
                                                                                                                            tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(i59));
                                                                                                                        } else {
                                                                                                                            TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader2 = tLRPC$Message37.fwd_from;
                                                                                                                            if (tLRPC$MessageFwdHeader2 != null) {
                                                                                                                                tLRPC$TL_messages_forwardMessages.id.add(Integer.valueOf(tLRPC$MessageFwdHeader2.channel_post));
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                    sendMessagesHelper11 = sendMessagesHelper8;
                                                                                                                    i17 = i21;
                                                                                                                    tLRPC$Message30 = tLRPC$Message6;
                                                                                                                    performSendMessageRequest(tLRPC$TL_messages_forwardMessages, messageObject, null, null, messageObject4, hashMap3, i21 != 0);
                                                                                                                } catch (Exception e36) {
                                                                                                                    sendMessagesHelper2 = sendMessagesHelper8;
                                                                                                                    tLRPC$Message = tLRPC$Message6;
                                                                                                                    exc = e36;
                                                                                                                    i3 = i21;
                                                                                                                }
                                                                                                            } catch (Exception e37) {
                                                                                                                e = e37;
                                                                                                                sendMessagesHelper15 = sendMessagesHelper8;
                                                                                                                tLRPC$Message13 = tLRPC$Message6;
                                                                                                                exc = e;
                                                                                                                tLRPC$Message8 = tLRPC$Message13;
                                                                                                                sendMessagesHelper10 = sendMessagesHelper15;
                                                                                                                i3 = i12;
                                                                                                                tLRPC$Message = tLRPC$Message8;
                                                                                                                sendMessagesHelper2 = sendMessagesHelper10;
                                                                                                                FileLog.e(exc);
                                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                if (messageObject != null) {
                                                                                                                }
                                                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                return;
                                                                                                            }
                                                                                                        }
                                                                                                        return;
                                                                                                    }
                                                                                                    SendMessagesHelper sendMessagesHelper20 = sendMessagesHelper8;
                                                                                                    tLRPC$Message7 = tLRPC$Message6;
                                                                                                    MessageObject messageObject21 = messageObject7;
                                                                                                    TL_stories$StoryItem tL_stories$StoryItem10 = tL_stories$StoryItem3;
                                                                                                    ArrayList<TLRPC$MessageEntity> arrayList16 = arrayList4;
                                                                                                    Object obj9 = obj3;
                                                                                                    MessageObject messageObject22 = messageObject6;
                                                                                                    String str39 = str7;
                                                                                                    long j29 = r6;
                                                                                                    HashMap<String, String> hashMap5 = hashMap3;
                                                                                                    TLRPC$InputPeer tLRPC$InputPeer9 = tLRPC$InputPeer5;
                                                                                                    messageObject = messageObject4;
                                                                                                    if (tLRPC$EncryptedChat != null) {
                                                                                                        TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage2 = new TLRPC$TL_decryptedMessage();
                                                                                                        tLRPC$TL_decryptedMessage2.ttl = tLRPC$Message7.ttl;
                                                                                                        if (arrayList16 != null && !arrayList16.isEmpty()) {
                                                                                                            tLRPC$TL_decryptedMessage2.entities = arrayList16;
                                                                                                            tLRPC$TL_decryptedMessage2.flags |= 128;
                                                                                                        }
                                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader13 = tLRPC$Message7.reply_to;
                                                                                                        if (tLRPC$MessageReplyHeader13 != null) {
                                                                                                            long j30 = tLRPC$MessageReplyHeader13.reply_to_random_id;
                                                                                                            if (j30 != 0) {
                                                                                                                tLRPC$TL_decryptedMessage2.reply_to_random_id = j30;
                                                                                                                tLRPC$TL_decryptedMessage2.flags |= 8;
                                                                                                            }
                                                                                                        }
                                                                                                        if (hashMap5 != null && hashMap5.get(obj9) != null) {
                                                                                                            tLRPC$TL_decryptedMessage2.via_bot_name = hashMap5.get(obj9);
                                                                                                            tLRPC$TL_decryptedMessage2.flags |= 2048;
                                                                                                        }
                                                                                                        tLRPC$TL_decryptedMessage2.silent = tLRPC$Message7.silent;
                                                                                                        tLRPC$TL_decryptedMessage2.random_id = tLRPC$Message7.random_id;
                                                                                                        tLRPC$TL_decryptedMessage2.message = str39;
                                                                                                        TLRPC$WebPage tLRPC$WebPage4 = tLRPC$WebPage2;
                                                                                                        if (tLRPC$WebPage4 != null && tLRPC$WebPage4.url != null) {
                                                                                                            TLRPC$TL_decryptedMessageMediaWebPage tLRPC$TL_decryptedMessageMediaWebPage = new TLRPC$TL_decryptedMessageMediaWebPage();
                                                                                                            tLRPC$TL_decryptedMessage2.media = tLRPC$TL_decryptedMessageMediaWebPage;
                                                                                                            tLRPC$TL_decryptedMessageMediaWebPage.url = tLRPC$WebPage4.url;
                                                                                                            tLRPC$TL_decryptedMessage2.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                                                                                        } else {
                                                                                                            tLRPC$TL_decryptedMessage2.media = new TLRPC$TL_decryptedMessageMediaEmpty();
                                                                                                        }
                                                                                                        getSecretChatHelper().performSendEncryptedRequest(tLRPC$TL_decryptedMessage2, messageObject.messageOwner, tLRPC$EncryptedChat, null, null, messageObject);
                                                                                                        if (messageObject22 == null) {
                                                                                                            getMediaDataController().cleanDraft(j29, messageObject21 != null ? messageObject21.getId() : 0L, false);
                                                                                                            return;
                                                                                                        }
                                                                                                        return;
                                                                                                    } else if (tLRPC$TL_messageMediaWebPage != null) {
                                                                                                        try {
                                                                                                            TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia2 = new TLRPC$TL_messages_sendMedia();
                                                                                                            tLRPC$TL_messages_sendMedia2.message = str39;
                                                                                                            tLRPC$TL_messages_sendMedia2.clear_draft = messageObject22 == null;
                                                                                                            tLRPC$TL_messages_sendMedia2.silent = tLRPC$Message7.silent;
                                                                                                            tLRPC$TL_messages_sendMedia2.peer = tLRPC$InputPeer9;
                                                                                                            tLRPC$TL_messages_sendMedia2.random_id = tLRPC$Message7.random_id;
                                                                                                            TLRPC$TL_inputMediaWebPage tLRPC$TL_inputMediaWebPage = new TLRPC$TL_inputMediaWebPage();
                                                                                                            TLRPC$TL_messageMediaWebPage tLRPC$TL_messageMediaWebPage5 = tLRPC$TL_messageMediaWebPage;
                                                                                                            tLRPC$TL_inputMediaWebPage.url = tLRPC$TL_messageMediaWebPage5.webpage.url;
                                                                                                            tLRPC$TL_inputMediaWebPage.force_large_media = tLRPC$TL_messageMediaWebPage5.force_large_media;
                                                                                                            tLRPC$TL_inputMediaWebPage.force_small_media = tLRPC$TL_messageMediaWebPage5.force_small_media;
                                                                                                            tLRPC$TL_inputMediaWebPage.optional = true;
                                                                                                            tLRPC$TL_messages_sendMedia2.media = tLRPC$TL_inputMediaWebPage;
                                                                                                            if (tL_stories$StoryItem10 != null) {
                                                                                                                tLRPC$TL_messages_sendMedia2.reply_to = sendMessagesHelper20.createReplyInput(tL_stories$StoryItem10);
                                                                                                                tLRPC$TL_messages_sendMedia2.flags |= 1;
                                                                                                            } else {
                                                                                                                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader14 = tLRPC$Message7.reply_to;
                                                                                                                if (tLRPC$MessageReplyHeader14 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                                                    tLRPC$TL_messages_sendMedia2.reply_to = sendMessagesHelper20.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader14);
                                                                                                                    tLRPC$TL_messages_sendMedia2.flags |= 1;
                                                                                                                }
                                                                                                            }
                                                                                                            if (z18 && SharedConfig.updateStickersOrderOnSend) {
                                                                                                                tLRPC$TL_messages_sendMedia2.update_stickersets_order = true;
                                                                                                            }
                                                                                                            if (tLRPC$Message7.from_id != null) {
                                                                                                                tLRPC$TL_messages_sendMedia2.send_as = getMessagesController().getInputPeer(tLRPC$Message7.from_id);
                                                                                                            }
                                                                                                            if (arrayList16 != null && !arrayList16.isEmpty()) {
                                                                                                                tLRPC$TL_messages_sendMedia2.entities = arrayList16;
                                                                                                                tLRPC$TL_messages_sendMedia2.flags |= 8;
                                                                                                            }
                                                                                                            if (i12 != 0) {
                                                                                                                i19 = i12;
                                                                                                                try {
                                                                                                                    tLRPC$TL_messages_sendMedia2.schedule_date = i19;
                                                                                                                    tLRPC$TL_messages_sendMedia2.flags |= 1024;
                                                                                                                } catch (Exception e38) {
                                                                                                                    exc = e38;
                                                                                                                    messageObject = messageObject;
                                                                                                                    sendMessagesHelper13 = sendMessagesHelper20;
                                                                                                                    i3 = i19;
                                                                                                                    tLRPC$Message = tLRPC$Message7;
                                                                                                                    sendMessagesHelper2 = sendMessagesHelper13;
                                                                                                                    FileLog.e(exc);
                                                                                                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                    if (messageObject != null) {
                                                                                                                    }
                                                                                                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                    sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                    return;
                                                                                                                }
                                                                                                            } else {
                                                                                                                i19 = i12;
                                                                                                            }
                                                                                                            try {
                                                                                                                TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut4 = tLRPC$Message7.quick_reply_shortcut;
                                                                                                                if (tLRPC$InputQuickReplyShortcut4 != null) {
                                                                                                                    tLRPC$TL_messages_sendMedia2.flags |= 131072;
                                                                                                                    tLRPC$TL_messages_sendMedia2.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut4;
                                                                                                                }
                                                                                                                long j31 = sendMessageParams.effect_id;
                                                                                                                if (j31 != 0) {
                                                                                                                    tLRPC$TL_messages_sendMedia2.flags |= 262144;
                                                                                                                    tLRPC$TL_messages_sendMedia2.effect = j31;
                                                                                                                }
                                                                                                                tLRPC$TL_messages_sendMedia2.invert_media = tLRPC$Message7.invert_media;
                                                                                                                try {
                                                                                                                    performSendMessageRequest(tLRPC$TL_messages_sendMedia2, messageObject, null, null, messageObject, hashMap5, i19 != 0);
                                                                                                                    if (messageObject22 == null) {
                                                                                                                        MediaDataController mediaDataController2 = getMediaDataController();
                                                                                                                        if (messageObject21 != null) {
                                                                                                                            try {
                                                                                                                                id = messageObject21.getId();
                                                                                                                            } catch (Exception e39) {
                                                                                                                                exc = e39;
                                                                                                                                i3 = i19;
                                                                                                                                messageObject = messageObject;
                                                                                                                                tLRPC$Message = tLRPC$Message7;
                                                                                                                                sendMessagesHelper2 = sendMessagesHelper20;
                                                                                                                            }
                                                                                                                        } else {
                                                                                                                            id = 0;
                                                                                                                        }
                                                                                                                        messageObject9 = messageObject;
                                                                                                                        try {
                                                                                                                            mediaDataController2.cleanDraft(j29, id, false);
                                                                                                                            return;
                                                                                                                        } catch (Exception e40) {
                                                                                                                            e = e40;
                                                                                                                            exc = e;
                                                                                                                            messageObject = messageObject9;
                                                                                                                            sendMessagesHelper13 = sendMessagesHelper20;
                                                                                                                            i3 = i19;
                                                                                                                            tLRPC$Message = tLRPC$Message7;
                                                                                                                            sendMessagesHelper2 = sendMessagesHelper13;
                                                                                                                            FileLog.e(exc);
                                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                            if (messageObject != null) {
                                                                                                                            }
                                                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                            return;
                                                                                                                        }
                                                                                                                    }
                                                                                                                    return;
                                                                                                                } catch (Exception e41) {
                                                                                                                    e = e41;
                                                                                                                    messageObject9 = messageObject;
                                                                                                                }
                                                                                                            } catch (Exception e42) {
                                                                                                                e = e42;
                                                                                                                messageObject9 = messageObject;
                                                                                                            }
                                                                                                        } catch (Exception e43) {
                                                                                                            exc = e43;
                                                                                                            messageObject = messageObject;
                                                                                                            tLRPC$Message8 = tLRPC$Message7;
                                                                                                            sendMessagesHelper10 = sendMessagesHelper20;
                                                                                                        }
                                                                                                    } else {
                                                                                                        int i60 = i12;
                                                                                                        try {
                                                                                                            tLRPC$TL_messages_sendMessage = new TLRPC$TL_messages_sendMessage();
                                                                                                            tLRPC$TL_messages_sendMessage.message = str39;
                                                                                                            tLRPC$TL_messages_sendMessage.clear_draft = messageObject22 == null;
                                                                                                            tLRPC$TL_messages_sendMessage.silent = tLRPC$Message7.silent;
                                                                                                            tLRPC$TL_messages_sendMessage.peer = tLRPC$InputPeer9;
                                                                                                            tLRPC$TL_messages_sendMessage.random_id = tLRPC$Message7.random_id;
                                                                                                            try {
                                                                                                                if (tL_stories$StoryItem10 != null) {
                                                                                                                    tLRPC$TL_messages_sendMessage.reply_to = sendMessagesHelper20.createReplyInput(tL_stories$StoryItem10);
                                                                                                                    tLRPC$TL_messages_sendMessage.flags |= 1;
                                                                                                                } else {
                                                                                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader15 = tLRPC$Message7.reply_to;
                                                                                                                    if (tLRPC$MessageReplyHeader15 instanceof TLRPC$TL_messageReplyHeader) {
                                                                                                                        tLRPC$TL_messages_sendMessage.reply_to = sendMessagesHelper20.createReplyInput((TLRPC$TL_messageReplyHeader) tLRPC$MessageReplyHeader15);
                                                                                                                        tLRPC$TL_messages_sendMessage.flags |= 1;
                                                                                                                    }
                                                                                                                }
                                                                                                                TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut5 = tLRPC$Message7.quick_reply_shortcut;
                                                                                                                if (tLRPC$InputQuickReplyShortcut5 != null) {
                                                                                                                    tLRPC$TL_messages_sendMessage.flags |= 131072;
                                                                                                                    tLRPC$TL_messages_sendMessage.quick_reply_shortcut = tLRPC$InputQuickReplyShortcut5;
                                                                                                                }
                                                                                                                if (z18 && SharedConfig.updateStickersOrderOnSend) {
                                                                                                                    tLRPC$TL_messages_sendMessage.update_stickersets_order = true;
                                                                                                                }
                                                                                                                if (tLRPC$Message7.from_id != null) {
                                                                                                                    tLRPC$TL_messages_sendMessage.send_as = getMessagesController().getInputPeer(tLRPC$Message7.from_id);
                                                                                                                }
                                                                                                                if (tLRPC$Message27 == 0) {
                                                                                                                    tLRPC$TL_messages_sendMessage.no_webpage = true;
                                                                                                                }
                                                                                                                if (arrayList16 != null && !arrayList16.isEmpty()) {
                                                                                                                    tLRPC$TL_messages_sendMessage.entities = arrayList16;
                                                                                                                    tLRPC$TL_messages_sendMessage.flags |= 8;
                                                                                                                }
                                                                                                                if (i60 != 0) {
                                                                                                                    tLRPC$TL_messages_sendMessage.schedule_date = i60;
                                                                                                                    tLRPC$TL_messages_sendMessage.flags |= 1024;
                                                                                                                }
                                                                                                                long j32 = sendMessageParams.effect_id;
                                                                                                                if (j32 != 0) {
                                                                                                                    tLRPC$TL_messages_sendMessage.flags |= 262144;
                                                                                                                    tLRPC$TL_messages_sendMessage.effect = j32;
                                                                                                                }
                                                                                                                tLRPC$TL_messages_sendMessage.invert_media = tLRPC$Message7.invert_media;
                                                                                                                messageObject = messageObject;
                                                                                                            } catch (Exception e44) {
                                                                                                                exc = e44;
                                                                                                                messageObject = messageObject;
                                                                                                                tLRPC$Message11 = tLRPC$Message7;
                                                                                                                sendMessagesHelper12 = sendMessagesHelper20;
                                                                                                                i18 = i60;
                                                                                                                i3 = i18;
                                                                                                                tLRPC$Message = tLRPC$Message11;
                                                                                                                sendMessagesHelper2 = sendMessagesHelper12;
                                                                                                                FileLog.e(exc);
                                                                                                                getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                                if (messageObject != null) {
                                                                                                                }
                                                                                                                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                                sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                                return;
                                                                                                            }
                                                                                                        } catch (Exception e45) {
                                                                                                            e = e45;
                                                                                                            messageObject = messageObject;
                                                                                                        }
                                                                                                        try {
                                                                                                            performSendMessageRequest(tLRPC$TL_messages_sendMessage, messageObject, null, null, messageObject, hashMap5, i60 != 0);
                                                                                                            if (messageObject22 == null) {
                                                                                                                getMediaDataController().cleanDraft(j29, messageObject21 != null ? messageObject21.getId() : 0L, false);
                                                                                                                return;
                                                                                                            }
                                                                                                            return;
                                                                                                        } catch (Exception e46) {
                                                                                                            e = e46;
                                                                                                            sendMessagesHelper8 = i60;
                                                                                                            exc = e;
                                                                                                            i3 = sendMessagesHelper8;
                                                                                                            tLRPC$Message = tLRPC$Message7;
                                                                                                            sendMessagesHelper2 = sendMessagesHelper20;
                                                                                                            FileLog.e(exc);
                                                                                                            getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                                                                                            if (messageObject != null) {
                                                                                                            }
                                                                                                            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                                                                                            sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                                                                                            return;
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            } else {
                                                                                                j11 = 0;
                                                                                            }
                                                                                            z11 = false;
                                                                                            j12 = j11;
                                                                                            messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                                                                            messageObject.sendAnimationData = sendAnimationData;
                                                                                            messageObject.wasJustSent = true;
                                                                                            messageObject.scheduled = i12 != 0;
                                                                                            if (!messageObject.isForwarded()) {
                                                                                            }
                                                                                            videoEditedInfo = messageObject.videoEditedInfo;
                                                                                            if (videoEditedInfo != null) {
                                                                                            }
                                                                                            if (videoEditedInfo6 != null) {
                                                                                            }
                                                                                            videoEditedInfo = videoEditedInfo2;
                                                                                            if (j12 == 0) {
                                                                                            }
                                                                                            if (BuildVars.LOGS_ENABLED) {
                                                                                            }
                                                                                            j13 = j12;
                                                                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                            tLRPC$Message10 = tLRPC$Message9;
                                                                                            sendMessagesHelper11 = j12;
                                                                                            i17 = j9;
                                                                                            if (c2 == 0) {
                                                                                            }
                                                                                            SendMessagesHelper sendMessagesHelper202 = sendMessagesHelper8;
                                                                                            tLRPC$Message7 = tLRPC$Message6;
                                                                                            MessageObject messageObject212 = messageObject7;
                                                                                            TL_stories$StoryItem tL_stories$StoryItem102 = tL_stories$StoryItem3;
                                                                                            ArrayList<TLRPC$MessageEntity> arrayList162 = arrayList4;
                                                                                            Object obj92 = obj3;
                                                                                            MessageObject messageObject222 = messageObject6;
                                                                                            String str392 = str7;
                                                                                            long j292 = r6;
                                                                                            HashMap<String, String> hashMap52 = hashMap3;
                                                                                            TLRPC$InputPeer tLRPC$InputPeer92 = tLRPC$InputPeer5;
                                                                                            messageObject = messageObject4;
                                                                                            if (tLRPC$EncryptedChat != null) {
                                                                                            }
                                                                                        }
                                                                                        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader16 = tLRPC$Message6.reply_to;
                                                                                        tLRPC$MessageReplyHeader16.flags |= 1;
                                                                                        tLRPC$MessageReplyHeader16.reply_to_peer_id = tLRPC$Peer4;
                                                                                        z15 = true;
                                                                                        if (z15) {
                                                                                        }
                                                                                        if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                                                                        }
                                                                                        tLRPC$Message6.media_unread = true;
                                                                                        if (tLRPC$Message6.from_id == null) {
                                                                                        }
                                                                                        tLRPC$Message6.send_state = 1;
                                                                                        if (hashMap3 == null) {
                                                                                        }
                                                                                        z11 = false;
                                                                                        j12 = j11;
                                                                                        messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                                                                        messageObject.sendAnimationData = sendAnimationData;
                                                                                        messageObject.wasJustSent = true;
                                                                                        messageObject.scheduled = i12 != 0;
                                                                                        if (!messageObject.isForwarded()) {
                                                                                        }
                                                                                        videoEditedInfo = messageObject.videoEditedInfo;
                                                                                        if (videoEditedInfo != null) {
                                                                                        }
                                                                                        if (videoEditedInfo6 != null) {
                                                                                        }
                                                                                        videoEditedInfo = videoEditedInfo2;
                                                                                        if (j12 == 0) {
                                                                                        }
                                                                                        if (BuildVars.LOGS_ENABLED) {
                                                                                        }
                                                                                        j13 = j12;
                                                                                        tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                        tLRPC$Message10 = tLRPC$Message9;
                                                                                        sendMessagesHelper11 = j12;
                                                                                        i17 = j9;
                                                                                        if (c2 == 0) {
                                                                                        }
                                                                                        SendMessagesHelper sendMessagesHelper2022 = sendMessagesHelper8;
                                                                                        tLRPC$Message7 = tLRPC$Message6;
                                                                                        MessageObject messageObject2122 = messageObject7;
                                                                                        TL_stories$StoryItem tL_stories$StoryItem1022 = tL_stories$StoryItem3;
                                                                                        ArrayList<TLRPC$MessageEntity> arrayList1622 = arrayList4;
                                                                                        Object obj922 = obj3;
                                                                                        MessageObject messageObject2222 = messageObject6;
                                                                                        String str3922 = str7;
                                                                                        long j2922 = r6;
                                                                                        HashMap<String, String> hashMap522 = hashMap3;
                                                                                        TLRPC$InputPeer tLRPC$InputPeer922 = tLRPC$InputPeer5;
                                                                                        messageObject = messageObject4;
                                                                                        if (tLRPC$EncryptedChat != null) {
                                                                                        }
                                                                                    }
                                                                                }
                                                                                z14 = false;
                                                                                j9 = r133;
                                                                                if (!z24) {
                                                                                    z15 = false;
                                                                                    if (z15) {
                                                                                    }
                                                                                    if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                                                                    }
                                                                                    tLRPC$Message6.media_unread = true;
                                                                                    if (tLRPC$Message6.from_id == null) {
                                                                                    }
                                                                                    tLRPC$Message6.send_state = 1;
                                                                                    if (hashMap3 == null) {
                                                                                    }
                                                                                    z11 = false;
                                                                                    j12 = j11;
                                                                                    messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                                                                    messageObject.sendAnimationData = sendAnimationData;
                                                                                    messageObject.wasJustSent = true;
                                                                                    messageObject.scheduled = i12 != 0;
                                                                                    if (!messageObject.isForwarded()) {
                                                                                    }
                                                                                    videoEditedInfo = messageObject.videoEditedInfo;
                                                                                    if (videoEditedInfo != null) {
                                                                                    }
                                                                                    if (videoEditedInfo6 != null) {
                                                                                    }
                                                                                    videoEditedInfo = videoEditedInfo2;
                                                                                    if (j12 == 0) {
                                                                                    }
                                                                                    if (BuildVars.LOGS_ENABLED) {
                                                                                    }
                                                                                    j13 = j12;
                                                                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                    tLRPC$Message10 = tLRPC$Message9;
                                                                                    sendMessagesHelper11 = j12;
                                                                                    i17 = j9;
                                                                                    if (c2 == 0) {
                                                                                    }
                                                                                    SendMessagesHelper sendMessagesHelper20222 = sendMessagesHelper8;
                                                                                    tLRPC$Message7 = tLRPC$Message6;
                                                                                    MessageObject messageObject21222 = messageObject7;
                                                                                    TL_stories$StoryItem tL_stories$StoryItem10222 = tL_stories$StoryItem3;
                                                                                    ArrayList<TLRPC$MessageEntity> arrayList16222 = arrayList4;
                                                                                    Object obj9222 = obj3;
                                                                                    MessageObject messageObject22222 = messageObject6;
                                                                                    String str39222 = str7;
                                                                                    long j29222 = r6;
                                                                                    HashMap<String, String> hashMap5222 = hashMap3;
                                                                                    TLRPC$InputPeer tLRPC$InputPeer9222 = tLRPC$InputPeer5;
                                                                                    messageObject = messageObject4;
                                                                                    if (tLRPC$EncryptedChat != null) {
                                                                                    }
                                                                                }
                                                                                TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader162 = tLRPC$Message6.reply_to;
                                                                                tLRPC$MessageReplyHeader162.flags |= 1;
                                                                                tLRPC$MessageReplyHeader162.reply_to_peer_id = tLRPC$Peer4;
                                                                                z15 = true;
                                                                                if (z15) {
                                                                                }
                                                                                if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                                                                }
                                                                                tLRPC$Message6.media_unread = true;
                                                                                if (tLRPC$Message6.from_id == null) {
                                                                                }
                                                                                tLRPC$Message6.send_state = 1;
                                                                                if (hashMap3 == null) {
                                                                                }
                                                                                z11 = false;
                                                                                j12 = j11;
                                                                                messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                                                                messageObject.sendAnimationData = sendAnimationData;
                                                                                messageObject.wasJustSent = true;
                                                                                messageObject.scheduled = i12 != 0;
                                                                                if (!messageObject.isForwarded()) {
                                                                                }
                                                                                videoEditedInfo = messageObject.videoEditedInfo;
                                                                                if (videoEditedInfo != null) {
                                                                                }
                                                                                if (videoEditedInfo6 != null) {
                                                                                }
                                                                                videoEditedInfo = videoEditedInfo2;
                                                                                if (j12 == 0) {
                                                                                }
                                                                                if (BuildVars.LOGS_ENABLED) {
                                                                                }
                                                                                j13 = j12;
                                                                                tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                                tLRPC$Message10 = tLRPC$Message9;
                                                                                sendMessagesHelper11 = j12;
                                                                                i17 = j9;
                                                                                if (c2 == 0) {
                                                                                }
                                                                                SendMessagesHelper sendMessagesHelper202222 = sendMessagesHelper8;
                                                                                tLRPC$Message7 = tLRPC$Message6;
                                                                                MessageObject messageObject212222 = messageObject7;
                                                                                TL_stories$StoryItem tL_stories$StoryItem102222 = tL_stories$StoryItem3;
                                                                                ArrayList<TLRPC$MessageEntity> arrayList162222 = arrayList4;
                                                                                Object obj92222 = obj3;
                                                                                MessageObject messageObject222222 = messageObject6;
                                                                                String str392222 = str7;
                                                                                long j292222 = r6;
                                                                                HashMap<String, String> hashMap52222 = hashMap3;
                                                                                TLRPC$InputPeer tLRPC$InputPeer92222 = tLRPC$InputPeer5;
                                                                                messageObject = messageObject4;
                                                                                if (tLRPC$EncryptedChat != null) {
                                                                                }
                                                                            }
                                                                            tLRPC$Peer4 = tLRPC$Peer3;
                                                                            z13 = false;
                                                                            messagesController = getMessagesController();
                                                                            z10 = z13;
                                                                            r133 = tLRPC$Message6.peer_id;
                                                                            j10 = j8;
                                                                            if (ChatObject.isForum(messagesController.getChat(Long.valueOf(-DialogObject.getPeerDialogId((TLRPC$Peer) r133))))) {
                                                                                topicId = MessageObject.getTopicId(sendMessagesHelper8.currentAccount, messageObject8.messageOwner, true);
                                                                                r133 = messageObject7.getId();
                                                                                if (topicId != r133) {
                                                                                }
                                                                            }
                                                                            z14 = false;
                                                                            j9 = r133;
                                                                            if (!z24) {
                                                                            }
                                                                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader1622 = tLRPC$Message6.reply_to;
                                                                            tLRPC$MessageReplyHeader1622.flags |= 1;
                                                                            tLRPC$MessageReplyHeader1622.reply_to_peer_id = tLRPC$Peer4;
                                                                            z15 = true;
                                                                            if (z15) {
                                                                            }
                                                                            if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                                                            }
                                                                            tLRPC$Message6.media_unread = true;
                                                                            if (tLRPC$Message6.from_id == null) {
                                                                            }
                                                                            tLRPC$Message6.send_state = 1;
                                                                            if (hashMap3 == null) {
                                                                            }
                                                                            z11 = false;
                                                                            j12 = j11;
                                                                            messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                                                            messageObject.sendAnimationData = sendAnimationData;
                                                                            messageObject.wasJustSent = true;
                                                                            messageObject.scheduled = i12 != 0;
                                                                            if (!messageObject.isForwarded()) {
                                                                            }
                                                                            videoEditedInfo = messageObject.videoEditedInfo;
                                                                            if (videoEditedInfo != null) {
                                                                            }
                                                                            if (videoEditedInfo6 != null) {
                                                                            }
                                                                            videoEditedInfo = videoEditedInfo2;
                                                                            if (j12 == 0) {
                                                                            }
                                                                            if (BuildVars.LOGS_ENABLED) {
                                                                            }
                                                                            j13 = j12;
                                                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                            tLRPC$Message10 = tLRPC$Message9;
                                                                            sendMessagesHelper11 = j12;
                                                                            i17 = j9;
                                                                            if (c2 == 0) {
                                                                            }
                                                                            SendMessagesHelper sendMessagesHelper2022222 = sendMessagesHelper8;
                                                                            tLRPC$Message7 = tLRPC$Message6;
                                                                            MessageObject messageObject2122222 = messageObject7;
                                                                            TL_stories$StoryItem tL_stories$StoryItem1022222 = tL_stories$StoryItem3;
                                                                            ArrayList<TLRPC$MessageEntity> arrayList1622222 = arrayList4;
                                                                            Object obj922222 = obj3;
                                                                            MessageObject messageObject2222222 = messageObject6;
                                                                            String str3922222 = str7;
                                                                            long j2922222 = r6;
                                                                            HashMap<String, String> hashMap522222 = hashMap3;
                                                                            TLRPC$InputPeer tLRPC$InputPeer922222 = tLRPC$InputPeer5;
                                                                            messageObject = messageObject4;
                                                                            if (tLRPC$EncryptedChat != null) {
                                                                            }
                                                                        }
                                                                    }
                                                                    tLRPC$Peer3 = peer;
                                                                    tLRPC$Peer4 = tLRPC$Peer3;
                                                                    z13 = false;
                                                                    messagesController = getMessagesController();
                                                                    z10 = z13;
                                                                    r133 = tLRPC$Message6.peer_id;
                                                                    j10 = j8;
                                                                    if (ChatObject.isForum(messagesController.getChat(Long.valueOf(-DialogObject.getPeerDialogId((TLRPC$Peer) r133))))) {
                                                                    }
                                                                    z14 = false;
                                                                    j9 = r133;
                                                                    if (!z24) {
                                                                    }
                                                                    TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader16222 = tLRPC$Message6.reply_to;
                                                                    tLRPC$MessageReplyHeader16222.flags |= 1;
                                                                    tLRPC$MessageReplyHeader16222.reply_to_peer_id = tLRPC$Peer4;
                                                                    z15 = true;
                                                                    if (z15) {
                                                                    }
                                                                    if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                                                    }
                                                                    tLRPC$Message6.media_unread = true;
                                                                    if (tLRPC$Message6.from_id == null) {
                                                                    }
                                                                    tLRPC$Message6.send_state = 1;
                                                                    if (hashMap3 == null) {
                                                                    }
                                                                    z11 = false;
                                                                    j12 = j11;
                                                                    messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                                                    messageObject.sendAnimationData = sendAnimationData;
                                                                    messageObject.wasJustSent = true;
                                                                    messageObject.scheduled = i12 != 0;
                                                                    if (!messageObject.isForwarded()) {
                                                                    }
                                                                    videoEditedInfo = messageObject.videoEditedInfo;
                                                                    if (videoEditedInfo != null) {
                                                                    }
                                                                    if (videoEditedInfo6 != null) {
                                                                    }
                                                                    videoEditedInfo = videoEditedInfo2;
                                                                    if (j12 == 0) {
                                                                    }
                                                                    if (BuildVars.LOGS_ENABLED) {
                                                                    }
                                                                    j13 = j12;
                                                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                                    tLRPC$Message10 = tLRPC$Message9;
                                                                    sendMessagesHelper11 = j12;
                                                                    i17 = j9;
                                                                    if (c2 == 0) {
                                                                    }
                                                                    SendMessagesHelper sendMessagesHelper20222222 = sendMessagesHelper8;
                                                                    tLRPC$Message7 = tLRPC$Message6;
                                                                    MessageObject messageObject21222222 = messageObject7;
                                                                    TL_stories$StoryItem tL_stories$StoryItem10222222 = tL_stories$StoryItem3;
                                                                    ArrayList<TLRPC$MessageEntity> arrayList16222222 = arrayList4;
                                                                    Object obj9222222 = obj3;
                                                                    MessageObject messageObject22222222 = messageObject6;
                                                                    String str39222222 = str7;
                                                                    long j29222222 = r6;
                                                                    HashMap<String, String> hashMap5222222 = hashMap3;
                                                                    TLRPC$InputPeer tLRPC$InputPeer9222222 = tLRPC$InputPeer5;
                                                                    messageObject = messageObject4;
                                                                    if (tLRPC$EncryptedChat != null) {
                                                                    }
                                                                }
                                                            }
                                                            j10 = j8;
                                                            z10 = false;
                                                            if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                                            }
                                                            tLRPC$Message6.media_unread = true;
                                                            if (tLRPC$Message6.from_id == null) {
                                                            }
                                                            tLRPC$Message6.send_state = 1;
                                                            if (hashMap3 == null) {
                                                            }
                                                            z11 = false;
                                                            j12 = j11;
                                                            messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                                            messageObject.sendAnimationData = sendAnimationData;
                                                            messageObject.wasJustSent = true;
                                                            messageObject.scheduled = i12 != 0;
                                                            if (!messageObject.isForwarded()) {
                                                            }
                                                            videoEditedInfo = messageObject.videoEditedInfo;
                                                            if (videoEditedInfo != null) {
                                                            }
                                                            if (videoEditedInfo6 != null) {
                                                            }
                                                            videoEditedInfo = videoEditedInfo2;
                                                            if (j12 == 0) {
                                                            }
                                                            if (BuildVars.LOGS_ENABLED) {
                                                            }
                                                            j13 = j12;
                                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                            tLRPC$Message10 = tLRPC$Message9;
                                                            sendMessagesHelper11 = j12;
                                                            i17 = j9;
                                                            if (c2 == 0) {
                                                            }
                                                            SendMessagesHelper sendMessagesHelper202222222 = sendMessagesHelper8;
                                                            tLRPC$Message7 = tLRPC$Message6;
                                                            MessageObject messageObject212222222 = messageObject7;
                                                            TL_stories$StoryItem tL_stories$StoryItem102222222 = tL_stories$StoryItem3;
                                                            ArrayList<TLRPC$MessageEntity> arrayList162222222 = arrayList4;
                                                            Object obj92222222 = obj3;
                                                            MessageObject messageObject222222222 = messageObject6;
                                                            String str392222222 = str7;
                                                            long j292222222 = r6;
                                                            HashMap<String, String> hashMap52222222 = hashMap3;
                                                            TLRPC$InputPeer tLRPC$InputPeer92222222 = tLRPC$InputPeer5;
                                                            messageObject = messageObject4;
                                                            if (tLRPC$EncryptedChat != null) {
                                                            }
                                                        }
                                                    }
                                                    i12 = i10;
                                                    replyQuote = replyQuote2;
                                                    c5 = c4;
                                                    if (j4 == 0) {
                                                    }
                                                    if (tLRPC$ReplyMarkup != null) {
                                                        tLRPC$Message6.flags |= 64;
                                                        tLRPC$Message6.reply_markup = tLRPC$ReplyMarkup;
                                                        str16 = hashMap3.get("bot");
                                                        if (str16 != null) {
                                                        }
                                                    }
                                                    if (DialogObject.isEncryptedDialog(j8)) {
                                                    }
                                                    if (messageObject8 != null) {
                                                        j9 = messageObject8.getDialogId();
                                                        if (!DialogObject.isEncryptedDialog(j9)) {
                                                        }
                                                    }
                                                    j10 = j8;
                                                    z10 = false;
                                                    if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                                    }
                                                    tLRPC$Message6.media_unread = true;
                                                    if (tLRPC$Message6.from_id == null) {
                                                    }
                                                    tLRPC$Message6.send_state = 1;
                                                    if (hashMap3 == null) {
                                                    }
                                                    z11 = false;
                                                    j12 = j11;
                                                    messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                                    messageObject.sendAnimationData = sendAnimationData;
                                                    messageObject.wasJustSent = true;
                                                    messageObject.scheduled = i12 != 0;
                                                    if (!messageObject.isForwarded()) {
                                                    }
                                                    videoEditedInfo = messageObject.videoEditedInfo;
                                                    if (videoEditedInfo != null) {
                                                    }
                                                    if (videoEditedInfo6 != null) {
                                                    }
                                                    videoEditedInfo = videoEditedInfo2;
                                                    if (j12 == 0) {
                                                    }
                                                    if (BuildVars.LOGS_ENABLED) {
                                                    }
                                                    j13 = j12;
                                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                                    tLRPC$Message10 = tLRPC$Message9;
                                                    sendMessagesHelper11 = j12;
                                                    i17 = j9;
                                                    if (c2 == 0) {
                                                    }
                                                    SendMessagesHelper sendMessagesHelper2022222222 = sendMessagesHelper8;
                                                    tLRPC$Message7 = tLRPC$Message6;
                                                    MessageObject messageObject2122222222 = messageObject7;
                                                    TL_stories$StoryItem tL_stories$StoryItem1022222222 = tL_stories$StoryItem3;
                                                    ArrayList<TLRPC$MessageEntity> arrayList1622222222 = arrayList4;
                                                    Object obj922222222 = obj3;
                                                    MessageObject messageObject2222222222 = messageObject6;
                                                    String str3922222222 = str7;
                                                    long j2922222222 = r6;
                                                    HashMap<String, String> hashMap522222222 = hashMap3;
                                                    TLRPC$InputPeer tLRPC$InputPeer922222222 = tLRPC$InputPeer5;
                                                    messageObject = messageObject4;
                                                    if (tLRPC$EncryptedChat != null) {
                                                    }
                                                }
                                            } else {
                                                tLRPC$InputPeer4 = tLRPC$InputPeer2;
                                            }
                                            c3 = '\b';
                                            tLRPC$Message6.flags |= 8;
                                            tLRPC$TL_messageReplyHeader.flags |= 16;
                                            tLRPC$TL_messageReplyHeader.reply_to_msg_id = messageObject8.getId();
                                            if (messageObject7 == null) {
                                            }
                                            c4 = c3;
                                            if (messageObject8.isTopicMainMessage) {
                                            }
                                            if (replyQuote2 != null) {
                                            }
                                            i12 = i10;
                                            replyQuote = replyQuote2;
                                            c5 = c4;
                                            if (j4 == 0) {
                                            }
                                            if (tLRPC$ReplyMarkup != null) {
                                            }
                                            if (DialogObject.isEncryptedDialog(j8)) {
                                            }
                                            if (messageObject8 != null) {
                                            }
                                            j10 = j8;
                                            z10 = false;
                                            if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                            }
                                            tLRPC$Message6.media_unread = true;
                                            if (tLRPC$Message6.from_id == null) {
                                            }
                                            tLRPC$Message6.send_state = 1;
                                            if (hashMap3 == null) {
                                            }
                                            z11 = false;
                                            j12 = j11;
                                            messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                            messageObject.sendAnimationData = sendAnimationData;
                                            messageObject.wasJustSent = true;
                                            messageObject.scheduled = i12 != 0;
                                            if (!messageObject.isForwarded()) {
                                            }
                                            videoEditedInfo = messageObject.videoEditedInfo;
                                            if (videoEditedInfo != null) {
                                            }
                                            if (videoEditedInfo6 != null) {
                                            }
                                            videoEditedInfo = videoEditedInfo2;
                                            if (j12 == 0) {
                                            }
                                            if (BuildVars.LOGS_ENABLED) {
                                            }
                                            j13 = j12;
                                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                            tLRPC$Message10 = tLRPC$Message9;
                                            sendMessagesHelper11 = j12;
                                            i17 = j9;
                                            if (c2 == 0) {
                                            }
                                            SendMessagesHelper sendMessagesHelper20222222222 = sendMessagesHelper8;
                                            tLRPC$Message7 = tLRPC$Message6;
                                            MessageObject messageObject21222222222 = messageObject7;
                                            TL_stories$StoryItem tL_stories$StoryItem10222222222 = tL_stories$StoryItem3;
                                            ArrayList<TLRPC$MessageEntity> arrayList16222222222 = arrayList4;
                                            Object obj9222222222 = obj3;
                                            MessageObject messageObject22222222222 = messageObject6;
                                            String str39222222222 = str7;
                                            long j29222222222 = r6;
                                            HashMap<String, String> hashMap5222222222 = hashMap3;
                                            TLRPC$InputPeer tLRPC$InputPeer9222222222 = tLRPC$InputPeer5;
                                            messageObject = messageObject4;
                                            if (tLRPC$EncryptedChat != null) {
                                            }
                                        }
                                    }
                                    messageObject7 = messageObject14;
                                    messageObject8 = messageObject16;
                                    c4 = z16;
                                    tLRPC$InputPeer4 = tLRPC$InputPeer2;
                                    i12 = i10;
                                    replyQuote = replyQuote2;
                                    c5 = c4;
                                    if (j4 == 0) {
                                    }
                                    if (tLRPC$ReplyMarkup != null) {
                                    }
                                    if (DialogObject.isEncryptedDialog(j8)) {
                                    }
                                    if (messageObject8 != null) {
                                    }
                                    j10 = j8;
                                    z10 = false;
                                    if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                    }
                                    tLRPC$Message6.media_unread = true;
                                    if (tLRPC$Message6.from_id == null) {
                                    }
                                    tLRPC$Message6.send_state = 1;
                                    if (hashMap3 == null) {
                                    }
                                    z11 = false;
                                    j12 = j11;
                                    messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                    messageObject.sendAnimationData = sendAnimationData;
                                    messageObject.wasJustSent = true;
                                    messageObject.scheduled = i12 != 0;
                                    if (!messageObject.isForwarded()) {
                                    }
                                    videoEditedInfo = messageObject.videoEditedInfo;
                                    if (videoEditedInfo != null) {
                                    }
                                    if (videoEditedInfo6 != null) {
                                    }
                                    videoEditedInfo = videoEditedInfo2;
                                    if (j12 == 0) {
                                    }
                                    if (BuildVars.LOGS_ENABLED) {
                                    }
                                    j13 = j12;
                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                    tLRPC$Message10 = tLRPC$Message9;
                                    sendMessagesHelper11 = j12;
                                    i17 = j9;
                                    if (c2 == 0) {
                                    }
                                    SendMessagesHelper sendMessagesHelper202222222222 = sendMessagesHelper8;
                                    tLRPC$Message7 = tLRPC$Message6;
                                    MessageObject messageObject212222222222 = messageObject7;
                                    TL_stories$StoryItem tL_stories$StoryItem102222222222 = tL_stories$StoryItem3;
                                    ArrayList<TLRPC$MessageEntity> arrayList162222222222 = arrayList4;
                                    Object obj92222222222 = obj3;
                                    MessageObject messageObject222222222222 = messageObject6;
                                    String str392222222222 = str7;
                                    long j292222222222 = r6;
                                    HashMap<String, String> hashMap52222222222 = hashMap3;
                                    TLRPC$InputPeer tLRPC$InputPeer92222222222 = tLRPC$InputPeer5;
                                    messageObject = messageObject4;
                                    if (tLRPC$EncryptedChat != null) {
                                    }
                                }
                            } else {
                                messageObject5 = messageObject3;
                            }
                            if (str8 != null) {
                                tLRPC$Message6.date = 0;
                                i10 = i29;
                            } else if (i29 != 0) {
                                i10 = i29;
                                try {
                                    tLRPC$Message6.date = i10;
                                } catch (Exception e47) {
                                    exc = e47;
                                    sendMessagesHelper9 = sendMessagesHelper8;
                                    tLRPC$Message5 = tLRPC$Message6;
                                    i5 = i10;
                                    messageObject = null;
                                    i3 = i5;
                                    tLRPC$Message = tLRPC$Message5;
                                    sendMessagesHelper2 = sendMessagesHelper9;
                                    FileLog.e(exc);
                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                    if (messageObject != null) {
                                    }
                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                    sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                    return;
                                }
                            } else {
                                i10 = i29;
                                try {
                                    obj3 = "bot_name";
                                    tLRPC$Message6.date = getConnectionsManager().getCurrentTime();
                                    if (!(tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel)) {
                                        if (i10 == 0 && z) {
                                            tLRPC$Message6.views = 1;
                                            tLRPC$Message6.flags |= 1024;
                                        }
                                        str9 = "";
                                        TLRPC$Chat chat3 = getMessagesController().getChat(Long.valueOf(tLRPC$InputPeer2.channel_id));
                                        if (chat3 != null) {
                                            if (chat3.megagroup) {
                                                tLRPC$Message6.unread = true;
                                            } else {
                                                tLRPC$Message6.post = true;
                                                if (chat3.signatures) {
                                                    TLRPC$TL_peerUser tLRPC$TL_peerUser3 = new TLRPC$TL_peerUser();
                                                    tLRPC$Message6.from_id = tLRPC$TL_peerUser3;
                                                    tLRPC$TL_peerUser3.user_id = j5;
                                                }
                                            }
                                        }
                                    } else {
                                        str9 = "";
                                        tLRPC$Message6.unread = true;
                                    }
                                    tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                                    j8 = j6;
                                    tLRPC$Message6.dialog_id = j8;
                                    boolean z222 = z20;
                                    tLRPC$Message6.invert_media = z222;
                                    if (tL_stories$StoryItem5 != null) {
                                    }
                                    messageObject7 = messageObject14;
                                    messageObject8 = messageObject16;
                                    c4 = z16;
                                    tLRPC$InputPeer4 = tLRPC$InputPeer2;
                                    i12 = i10;
                                    replyQuote = replyQuote2;
                                    c5 = c4;
                                    if (j4 == 0) {
                                    }
                                    if (tLRPC$ReplyMarkup != null) {
                                    }
                                    if (DialogObject.isEncryptedDialog(j8)) {
                                    }
                                    if (messageObject8 != null) {
                                    }
                                    j10 = j8;
                                    z10 = false;
                                    if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                                    }
                                    tLRPC$Message6.media_unread = true;
                                    if (tLRPC$Message6.from_id == null) {
                                    }
                                    tLRPC$Message6.send_state = 1;
                                    if (hashMap3 == null) {
                                    }
                                    z11 = false;
                                    j12 = j11;
                                    messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                                    messageObject.sendAnimationData = sendAnimationData;
                                    messageObject.wasJustSent = true;
                                    messageObject.scheduled = i12 != 0;
                                    if (!messageObject.isForwarded()) {
                                    }
                                    videoEditedInfo = messageObject.videoEditedInfo;
                                    if (videoEditedInfo != null) {
                                    }
                                    if (videoEditedInfo6 != null) {
                                    }
                                    videoEditedInfo = videoEditedInfo2;
                                    if (j12 == 0) {
                                    }
                                    if (BuildVars.LOGS_ENABLED) {
                                    }
                                    j13 = j12;
                                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                                    tLRPC$Message10 = tLRPC$Message9;
                                    sendMessagesHelper11 = j12;
                                    i17 = j9;
                                    if (c2 == 0) {
                                    }
                                    SendMessagesHelper sendMessagesHelper2022222222222 = sendMessagesHelper8;
                                    tLRPC$Message7 = tLRPC$Message6;
                                    MessageObject messageObject2122222222222 = messageObject7;
                                    TL_stories$StoryItem tL_stories$StoryItem1022222222222 = tL_stories$StoryItem3;
                                    ArrayList<TLRPC$MessageEntity> arrayList1622222222222 = arrayList4;
                                    Object obj922222222222 = obj3;
                                    MessageObject messageObject2222222222222 = messageObject6;
                                    String str3922222222222 = str7;
                                    long j2922222222222 = r6;
                                    HashMap<String, String> hashMap522222222222 = hashMap3;
                                    TLRPC$InputPeer tLRPC$InputPeer922222222222 = tLRPC$InputPeer5;
                                    messageObject = messageObject4;
                                    if (tLRPC$EncryptedChat != null) {
                                    }
                                } catch (Exception e48) {
                                    e = e48;
                                    SendMessagesHelper sendMessagesHelper21 = sendMessagesHelper8;
                                    TLRPC$Message tLRPC$Message38 = tLRPC$Message6;
                                    int i61 = i10;
                                    exc = e;
                                    i5 = i61;
                                    tLRPC$Message5 = tLRPC$Message38;
                                    sendMessagesHelper9 = sendMessagesHelper21;
                                    messageObject = null;
                                    i3 = i5;
                                    tLRPC$Message = tLRPC$Message5;
                                    sendMessagesHelper2 = sendMessagesHelper9;
                                    FileLog.e(exc);
                                    getMessagesStorage().markMessageAsSendError(tLRPC$Message, i3 != 0 ? 1 : 0);
                                    if (messageObject != null) {
                                    }
                                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
                                    sendMessagesHelper2.processSentMessage(tLRPC$Message.id);
                                    return;
                                }
                            }
                            obj3 = "bot_name";
                            if (!(tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel)) {
                            }
                            tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                            j8 = j6;
                            tLRPC$Message6.dialog_id = j8;
                            boolean z2222 = z20;
                            tLRPC$Message6.invert_media = z2222;
                            if (tL_stories$StoryItem5 != null) {
                            }
                            messageObject7 = messageObject14;
                            messageObject8 = messageObject16;
                            c4 = z16;
                            tLRPC$InputPeer4 = tLRPC$InputPeer2;
                            i12 = i10;
                            replyQuote = replyQuote2;
                            c5 = c4;
                            if (j4 == 0) {
                            }
                            if (tLRPC$ReplyMarkup != null) {
                            }
                            if (DialogObject.isEncryptedDialog(j8)) {
                            }
                            if (messageObject8 != null) {
                            }
                            j10 = j8;
                            z10 = false;
                            if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                            }
                            tLRPC$Message6.media_unread = true;
                            if (tLRPC$Message6.from_id == null) {
                            }
                            tLRPC$Message6.send_state = 1;
                            if (hashMap3 == null) {
                            }
                            z11 = false;
                            j12 = j11;
                            messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                            messageObject.sendAnimationData = sendAnimationData;
                            messageObject.wasJustSent = true;
                            messageObject.scheduled = i12 != 0;
                            if (!messageObject.isForwarded()) {
                            }
                            videoEditedInfo = messageObject.videoEditedInfo;
                            if (videoEditedInfo != null) {
                            }
                            if (videoEditedInfo6 != null) {
                            }
                            videoEditedInfo = videoEditedInfo2;
                            if (j12 == 0) {
                            }
                            if (BuildVars.LOGS_ENABLED) {
                            }
                            j13 = j12;
                            tLRPC$InputPeer5 = tLRPC$InputPeer4;
                            tLRPC$Message10 = tLRPC$Message9;
                            sendMessagesHelper11 = j12;
                            i17 = j9;
                            if (c2 == 0) {
                            }
                            SendMessagesHelper sendMessagesHelper20222222222222 = sendMessagesHelper8;
                            tLRPC$Message7 = tLRPC$Message6;
                            MessageObject messageObject21222222222222 = messageObject7;
                            TL_stories$StoryItem tL_stories$StoryItem10222222222222 = tL_stories$StoryItem3;
                            ArrayList<TLRPC$MessageEntity> arrayList16222222222222 = arrayList4;
                            Object obj9222222222222 = obj3;
                            MessageObject messageObject22222222222222 = messageObject6;
                            String str39222222222222 = str7;
                            long j29222222222222 = r6;
                            HashMap<String, String> hashMap5222222222222 = hashMap3;
                            TLRPC$InputPeer tLRPC$InputPeer9222222222222 = tLRPC$InputPeer5;
                            messageObject = messageObject4;
                            if (tLRPC$EncryptedChat != null) {
                            }
                        }
                        i8 = i;
                        TLRPC$TL_inputQuickReplyShortcut tLRPC$TL_inputQuickReplyShortcut = new TLRPC$TL_inputQuickReplyShortcut();
                        str8 = str21;
                        tLRPC$TL_inputQuickReplyShortcut.shortcut = str8;
                        tLRPC$Message6.quick_reply_shortcut = tLRPC$TL_inputQuickReplyShortcut;
                        tLRPC$Message6.quick_reply_shortcut_id = i8;
                        if (i8 != 0) {
                            tLRPC$Message6.flags |= 1073741824;
                        }
                        sendMessageParams2 = sendMessageParams;
                        i9 = i7;
                        j6 = j19;
                        j7 = sendMessageParams2.effect_id;
                        if (j7 != 0) {
                        }
                        if (hashMap3 != null) {
                            if (tLRPC$EncryptedChat == null) {
                            }
                            tLRPC$Message6.flags |= 2048;
                        }
                        tLRPC$Message6.params = hashMap3;
                        if (messageObject3 != null) {
                        }
                        if (str8 != null) {
                        }
                        obj3 = "bot_name";
                        if (!(tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel)) {
                        }
                        tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                        j8 = j6;
                        tLRPC$Message6.dialog_id = j8;
                        boolean z22222 = z20;
                        tLRPC$Message6.invert_media = z22222;
                        if (tL_stories$StoryItem5 != null) {
                        }
                        messageObject7 = messageObject14;
                        messageObject8 = messageObject16;
                        c4 = z16;
                        tLRPC$InputPeer4 = tLRPC$InputPeer2;
                        i12 = i10;
                        replyQuote = replyQuote2;
                        c5 = c4;
                        if (j4 == 0) {
                        }
                        if (tLRPC$ReplyMarkup != null) {
                        }
                        if (DialogObject.isEncryptedDialog(j8)) {
                        }
                        if (messageObject8 != null) {
                        }
                        j10 = j8;
                        z10 = false;
                        if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                        }
                        tLRPC$Message6.media_unread = true;
                        if (tLRPC$Message6.from_id == null) {
                        }
                        tLRPC$Message6.send_state = 1;
                        if (hashMap3 == null) {
                        }
                        z11 = false;
                        j12 = j11;
                        messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                        messageObject.sendAnimationData = sendAnimationData;
                        messageObject.wasJustSent = true;
                        messageObject.scheduled = i12 != 0;
                        if (!messageObject.isForwarded()) {
                        }
                        videoEditedInfo = messageObject.videoEditedInfo;
                        if (videoEditedInfo != null) {
                        }
                        if (videoEditedInfo6 != null) {
                        }
                        videoEditedInfo = videoEditedInfo2;
                        if (j12 == 0) {
                        }
                        if (BuildVars.LOGS_ENABLED) {
                        }
                        j13 = j12;
                        tLRPC$InputPeer5 = tLRPC$InputPeer4;
                        tLRPC$Message10 = tLRPC$Message9;
                        sendMessagesHelper11 = j12;
                        i17 = j9;
                        if (c2 == 0) {
                        }
                        SendMessagesHelper sendMessagesHelper202222222222222 = sendMessagesHelper8;
                        tLRPC$Message7 = tLRPC$Message6;
                        MessageObject messageObject212222222222222 = messageObject7;
                        TL_stories$StoryItem tL_stories$StoryItem102222222222222 = tL_stories$StoryItem3;
                        ArrayList<TLRPC$MessageEntity> arrayList162222222222222 = arrayList4;
                        Object obj92222222222222 = obj3;
                        MessageObject messageObject222222222222222 = messageObject6;
                        String str392222222222222 = str7;
                        long j292222222222222 = r6;
                        HashMap<String, String> hashMap52222222222222 = hashMap3;
                        TLRPC$InputPeer tLRPC$InputPeer92222222222222 = tLRPC$InputPeer5;
                        messageObject = messageObject4;
                        if (tLRPC$EncryptedChat != null) {
                        }
                    }
                }
                z9 = true;
                tLRPC$Message6.silent = z9;
                if (tLRPC$Message6.random_id == 0) {
                }
                if (str21 == null) {
                    sendMessageParams2 = sendMessageParams;
                    i9 = i7;
                    j6 = j19;
                    str8 = str21;
                    j7 = sendMessageParams2.effect_id;
                    if (j7 != 0) {
                    }
                    if (hashMap3 != null) {
                    }
                    tLRPC$Message6.params = hashMap3;
                    if (messageObject3 != null) {
                    }
                    if (str8 != null) {
                    }
                    obj3 = "bot_name";
                    if (!(tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel)) {
                    }
                    tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                    j8 = j6;
                    tLRPC$Message6.dialog_id = j8;
                    boolean z222222 = z20;
                    tLRPC$Message6.invert_media = z222222;
                    if (tL_stories$StoryItem5 != null) {
                    }
                    messageObject7 = messageObject14;
                    messageObject8 = messageObject16;
                    c4 = z16;
                    tLRPC$InputPeer4 = tLRPC$InputPeer2;
                    i12 = i10;
                    replyQuote = replyQuote2;
                    c5 = c4;
                    if (j4 == 0) {
                    }
                    if (tLRPC$ReplyMarkup != null) {
                    }
                    if (DialogObject.isEncryptedDialog(j8)) {
                    }
                    if (messageObject8 != null) {
                    }
                    j10 = j8;
                    z10 = false;
                    if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                    }
                    tLRPC$Message6.media_unread = true;
                    if (tLRPC$Message6.from_id == null) {
                    }
                    tLRPC$Message6.send_state = 1;
                    if (hashMap3 == null) {
                    }
                    z11 = false;
                    j12 = j11;
                    messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                    messageObject.sendAnimationData = sendAnimationData;
                    messageObject.wasJustSent = true;
                    messageObject.scheduled = i12 != 0;
                    if (!messageObject.isForwarded()) {
                    }
                    videoEditedInfo = messageObject.videoEditedInfo;
                    if (videoEditedInfo != null) {
                    }
                    if (videoEditedInfo6 != null) {
                    }
                    videoEditedInfo = videoEditedInfo2;
                    if (j12 == 0) {
                    }
                    if (BuildVars.LOGS_ENABLED) {
                    }
                    j13 = j12;
                    tLRPC$InputPeer5 = tLRPC$InputPeer4;
                    tLRPC$Message10 = tLRPC$Message9;
                    sendMessagesHelper11 = j12;
                    i17 = j9;
                    if (c2 == 0) {
                    }
                    SendMessagesHelper sendMessagesHelper2022222222222222 = sendMessagesHelper8;
                    tLRPC$Message7 = tLRPC$Message6;
                    MessageObject messageObject2122222222222222 = messageObject7;
                    TL_stories$StoryItem tL_stories$StoryItem1022222222222222 = tL_stories$StoryItem3;
                    ArrayList<TLRPC$MessageEntity> arrayList1622222222222222 = arrayList4;
                    Object obj922222222222222 = obj3;
                    MessageObject messageObject2222222222222222 = messageObject6;
                    String str3922222222222222 = str7;
                    long j2922222222222222 = r6;
                    HashMap<String, String> hashMap522222222222222 = hashMap3;
                    TLRPC$InputPeer tLRPC$InputPeer922222222222222 = tLRPC$InputPeer5;
                    messageObject = messageObject4;
                    if (tLRPC$EncryptedChat != null) {
                    }
                }
                i8 = i;
                TLRPC$TL_inputQuickReplyShortcut tLRPC$TL_inputQuickReplyShortcut2 = new TLRPC$TL_inputQuickReplyShortcut();
                str8 = str21;
                tLRPC$TL_inputQuickReplyShortcut2.shortcut = str8;
                tLRPC$Message6.quick_reply_shortcut = tLRPC$TL_inputQuickReplyShortcut2;
                tLRPC$Message6.quick_reply_shortcut_id = i8;
                if (i8 != 0) {
                }
                sendMessageParams2 = sendMessageParams;
                i9 = i7;
                j6 = j19;
                j7 = sendMessageParams2.effect_id;
                if (j7 != 0) {
                }
                if (hashMap3 != null) {
                }
                tLRPC$Message6.params = hashMap3;
                if (messageObject3 != null) {
                }
                if (str8 != null) {
                }
                obj3 = "bot_name";
                if (!(tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel)) {
                }
                tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                j8 = j6;
                tLRPC$Message6.dialog_id = j8;
                boolean z2222222 = z20;
                tLRPC$Message6.invert_media = z2222222;
                if (tL_stories$StoryItem5 != null) {
                }
                messageObject7 = messageObject14;
                messageObject8 = messageObject16;
                c4 = z16;
                tLRPC$InputPeer4 = tLRPC$InputPeer2;
                i12 = i10;
                replyQuote = replyQuote2;
                c5 = c4;
                if (j4 == 0) {
                }
                if (tLRPC$ReplyMarkup != null) {
                }
                if (DialogObject.isEncryptedDialog(j8)) {
                }
                if (messageObject8 != null) {
                }
                j10 = j8;
                z10 = false;
                if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
                }
                tLRPC$Message6.media_unread = true;
                if (tLRPC$Message6.from_id == null) {
                }
                tLRPC$Message6.send_state = 1;
                if (hashMap3 == null) {
                }
                z11 = false;
                j12 = j11;
                messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
                messageObject.sendAnimationData = sendAnimationData;
                messageObject.wasJustSent = true;
                messageObject.scheduled = i12 != 0;
                if (!messageObject.isForwarded()) {
                }
                videoEditedInfo = messageObject.videoEditedInfo;
                if (videoEditedInfo != null) {
                }
                if (videoEditedInfo6 != null) {
                }
                videoEditedInfo = videoEditedInfo2;
                if (j12 == 0) {
                }
                if (BuildVars.LOGS_ENABLED) {
                }
                j13 = j12;
                tLRPC$InputPeer5 = tLRPC$InputPeer4;
                tLRPC$Message10 = tLRPC$Message9;
                sendMessagesHelper11 = j12;
                i17 = j9;
                if (c2 == 0) {
                }
                SendMessagesHelper sendMessagesHelper20222222222222222 = sendMessagesHelper8;
                tLRPC$Message7 = tLRPC$Message6;
                MessageObject messageObject21222222222222222 = messageObject7;
                TL_stories$StoryItem tL_stories$StoryItem10222222222222222 = tL_stories$StoryItem3;
                ArrayList<TLRPC$MessageEntity> arrayList16222222222222222 = arrayList4;
                Object obj9222222222222222 = obj3;
                MessageObject messageObject22222222222222222 = messageObject6;
                String str39222222222222222 = str7;
                long j29222222222222222 = r6;
                HashMap<String, String> hashMap5222222222222222 = hashMap3;
                TLRPC$InputPeer tLRPC$InputPeer9222222222222222 = tLRPC$InputPeer5;
                messageObject = messageObject4;
                if (tLRPC$EncryptedChat != null) {
                }
            } else {
                tLRPC$InputPeer2 = tLRPC$InputPeer;
                j = clientUserId;
                j2 = 0;
                tLRPC$Peer = null;
                tLRPC$EncryptedChat = null;
            }
        }
        z = false;
        j4 = j2;
        if (messageObject15 == null) {
        }
        if (z17) {
        }
        z9 = true;
        tLRPC$Message6.silent = z9;
        if (tLRPC$Message6.random_id == 0) {
        }
        if (str21 == null) {
        }
        i8 = i;
        TLRPC$TL_inputQuickReplyShortcut tLRPC$TL_inputQuickReplyShortcut22 = new TLRPC$TL_inputQuickReplyShortcut();
        str8 = str21;
        tLRPC$TL_inputQuickReplyShortcut22.shortcut = str8;
        tLRPC$Message6.quick_reply_shortcut = tLRPC$TL_inputQuickReplyShortcut22;
        tLRPC$Message6.quick_reply_shortcut_id = i8;
        if (i8 != 0) {
        }
        sendMessageParams2 = sendMessageParams;
        i9 = i7;
        j6 = j19;
        j7 = sendMessageParams2.effect_id;
        if (j7 != 0) {
        }
        if (hashMap3 != null) {
        }
        tLRPC$Message6.params = hashMap3;
        if (messageObject3 != null) {
        }
        if (str8 != null) {
        }
        obj3 = "bot_name";
        if (!(tLRPC$InputPeer2 instanceof TLRPC$TL_inputPeerChannel)) {
        }
        tLRPC$Message6.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
        j8 = j6;
        tLRPC$Message6.dialog_id = j8;
        boolean z22222222 = z20;
        tLRPC$Message6.invert_media = z22222222;
        if (tL_stories$StoryItem5 != null) {
        }
        messageObject7 = messageObject14;
        messageObject8 = messageObject16;
        c4 = z16;
        tLRPC$InputPeer4 = tLRPC$InputPeer2;
        i12 = i10;
        replyQuote = replyQuote2;
        c5 = c4;
        if (j4 == 0) {
        }
        if (tLRPC$ReplyMarkup != null) {
        }
        if (DialogObject.isEncryptedDialog(j8)) {
        }
        if (messageObject8 != null) {
        }
        j10 = j8;
        z10 = false;
        if (!MessageObject.isVoiceMessage(tLRPC$Message6)) {
        }
        tLRPC$Message6.media_unread = true;
        if (tLRPC$Message6.from_id == null) {
        }
        tLRPC$Message6.send_state = 1;
        if (hashMap3 == null) {
        }
        z11 = false;
        j12 = j11;
        messageObject = new MessageObject(sendMessagesHelper8.currentAccount, tLRPC$Message6, ((messageObject7 == null && messageObject7 == messageObject8 && messageObject7.getId() == 1) || z10) ? null : messageObject8, true, true);
        messageObject.sendAnimationData = sendAnimationData;
        messageObject.wasJustSent = true;
        messageObject.scheduled = i12 != 0;
        if (!messageObject.isForwarded()) {
        }
        videoEditedInfo = messageObject.videoEditedInfo;
        if (videoEditedInfo != null) {
        }
        if (videoEditedInfo6 != null) {
        }
        videoEditedInfo = videoEditedInfo2;
        if (j12 == 0) {
        }
        if (BuildVars.LOGS_ENABLED) {
        }
        j13 = j12;
        tLRPC$InputPeer5 = tLRPC$InputPeer4;
        tLRPC$Message10 = tLRPC$Message9;
        sendMessagesHelper11 = j12;
        i17 = j9;
        if (c2 == 0) {
        }
        SendMessagesHelper sendMessagesHelper202222222222222222 = sendMessagesHelper8;
        tLRPC$Message7 = tLRPC$Message6;
        MessageObject messageObject212222222222222222 = messageObject7;
        TL_stories$StoryItem tL_stories$StoryItem102222222222222222 = tL_stories$StoryItem3;
        ArrayList<TLRPC$MessageEntity> arrayList162222222222222222 = arrayList4;
        Object obj92222222222222222 = obj3;
        MessageObject messageObject222222222222222222 = messageObject6;
        String str392222222222222222 = str7;
        long j292222222222222222 = r6;
        HashMap<String, String> hashMap52222222222222222 = hashMap3;
        TLRPC$InputPeer tLRPC$InputPeer92222222222222222 = tLRPC$InputPeer5;
        messageObject = messageObject4;
        if (tLRPC$EncryptedChat != null) {
        }
    }

    private void performSendDelayedMessage(DelayedMessage delayedMessage) {
        performSendDelayedMessage(delayedMessage, -1);
    }

    private TLRPC$PhotoSize getThumbForSecretChat(ArrayList<TLRPC$PhotoSize> arrayList) {
        if (arrayList != null && !arrayList.isEmpty()) {
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                TLRPC$PhotoSize tLRPC$PhotoSize = arrayList.get(i);
                if (tLRPC$PhotoSize != null && !(tLRPC$PhotoSize instanceof TLRPC$TL_photoPathSize) && !(tLRPC$PhotoSize instanceof TLRPC$TL_photoSizeEmpty) && tLRPC$PhotoSize.location != null) {
                    if (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) {
                        return tLRPC$PhotoSize;
                    }
                    TLRPC$TL_photoSize_layer127 tLRPC$TL_photoSize_layer127 = new TLRPC$TL_photoSize_layer127();
                    tLRPC$TL_photoSize_layer127.type = tLRPC$PhotoSize.type;
                    tLRPC$TL_photoSize_layer127.w = tLRPC$PhotoSize.w;
                    tLRPC$TL_photoSize_layer127.h = tLRPC$PhotoSize.h;
                    tLRPC$TL_photoSize_layer127.size = tLRPC$PhotoSize.size;
                    byte[] bArr = tLRPC$PhotoSize.bytes;
                    tLRPC$TL_photoSize_layer127.bytes = bArr;
                    if (bArr == null) {
                        tLRPC$TL_photoSize_layer127.bytes = new byte[0];
                    }
                    TLRPC$TL_fileLocation_layer82 tLRPC$TL_fileLocation_layer82 = new TLRPC$TL_fileLocation_layer82();
                    tLRPC$TL_photoSize_layer127.location = tLRPC$TL_fileLocation_layer82;
                    TLRPC$FileLocation tLRPC$FileLocation = tLRPC$PhotoSize.location;
                    tLRPC$TL_fileLocation_layer82.dc_id = tLRPC$FileLocation.dc_id;
                    tLRPC$TL_fileLocation_layer82.volume_id = tLRPC$FileLocation.volume_id;
                    tLRPC$TL_fileLocation_layer82.local_id = tLRPC$FileLocation.local_id;
                    tLRPC$TL_fileLocation_layer82.secret = tLRPC$FileLocation.secret;
                    return tLRPC$TL_photoSize_layer127;
                }
            }
        }
        return null;
    }

    private void performSendDelayedMessage(final DelayedMessage delayedMessage, int i) {
        boolean z;
        TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile;
        boolean z2;
        String str;
        TLRPC$InputMedia tLRPC$InputMedia;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$InputMedia tLRPC$InputMedia2;
        VideoEditedInfo videoEditedInfo;
        TLRPC$InputMedia tLRPC$InputMedia3;
        int i2 = delayedMessage.type;
        if (i2 == 0) {
            String str2 = delayedMessage.httpLocation;
            if (str2 != null) {
                putToDelayedMessages(str2, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
            } else if (delayedMessage.sendRequest != null) {
                String file = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                putToDelayedMessages(file, delayedMessage);
                getFileLoader().uploadFile(file, false, true, ConnectionsManager.FileTypePhoto);
                putToUploadingMessages(delayedMessage.obj);
            } else {
                String file2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                if (delayedMessage.sendEncryptedRequest != null && delayedMessage.photoSize.location.dc_id != 0) {
                    File file3 = new File(file2);
                    if (!file3.exists()) {
                        file2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize, true).toString();
                        file3 = new File(file2);
                    }
                    if (!file3.exists()) {
                        putToDelayedMessages(FileLoader.getAttachFileName(delayedMessage.photoSize), delayedMessage);
                        getFileLoader().loadFile(ImageLocation.getForObject(delayedMessage.photoSize, delayedMessage.locationParent), delayedMessage.parentObject, "jpg", 3, 0);
                        return;
                    }
                }
                putToDelayedMessages(file2, delayedMessage);
                getFileLoader().uploadFile(file2, true, true, ConnectionsManager.FileTypePhoto);
                putToUploadingMessages(delayedMessage.obj);
            }
        } else if (i2 == 1) {
            VideoEditedInfo videoEditedInfo2 = delayedMessage.videoEditedInfo;
            if (videoEditedInfo2 != null && videoEditedInfo2.needConvert()) {
                MessageObject messageObject = delayedMessage.obj;
                String str3 = messageObject.messageOwner.attachPath;
                TLRPC$Document document = messageObject.getDocument();
                if (str3 == null) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(FileLoader.getDirectory(4));
                    sb.append("/");
                    sb.append(document.id);
                    sb.append(".");
                    sb.append(delayedMessage.videoEditedInfo.isSticker ? "webm" : "mp4");
                    str3 = sb.toString();
                }
                putToDelayedMessages(str3, delayedMessage);
                if (!delayedMessage.videoEditedInfo.alreadyScheduledConverting) {
                    MediaController.getInstance().scheduleVideoConvert(delayedMessage.obj);
                }
                putToUploadingMessages(delayedMessage.obj);
                return;
            }
            VideoEditedInfo videoEditedInfo3 = delayedMessage.videoEditedInfo;
            if (videoEditedInfo3 != null) {
                TLRPC$InputFile tLRPC$InputFile = videoEditedInfo3.file;
                if (tLRPC$InputFile != null) {
                    TLObject tLObject = delayedMessage.sendRequest;
                    if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
                        tLRPC$InputMedia3 = ((TLRPC$TL_messages_sendMedia) tLObject).media;
                    } else {
                        tLRPC$InputMedia3 = ((TLRPC$TL_messages_editMessage) tLObject).media;
                    }
                    tLRPC$InputMedia3.file = tLRPC$InputFile;
                    videoEditedInfo3.file = null;
                } else if (videoEditedInfo3.encryptedFile != null) {
                    TLRPC$TL_decryptedMessage tLRPC$TL_decryptedMessage = (TLRPC$TL_decryptedMessage) delayedMessage.sendEncryptedRequest;
                    TLRPC$DecryptedMessageMedia tLRPC$DecryptedMessageMedia = tLRPC$TL_decryptedMessage.media;
                    tLRPC$DecryptedMessageMedia.size = videoEditedInfo3.estimatedSize;
                    tLRPC$DecryptedMessageMedia.key = videoEditedInfo3.key;
                    tLRPC$DecryptedMessageMedia.iv = videoEditedInfo3.iv;
                    SecretChatHelper secretChatHelper = getSecretChatHelper();
                    MessageObject messageObject2 = delayedMessage.obj;
                    secretChatHelper.performSendEncryptedRequest(tLRPC$TL_decryptedMessage, messageObject2.messageOwner, delayedMessage.encryptedChat, delayedMessage.videoEditedInfo.encryptedFile, delayedMessage.originalPath, messageObject2);
                    delayedMessage.videoEditedInfo.encryptedFile = null;
                    return;
                }
            }
            TLObject tLObject2 = delayedMessage.sendRequest;
            if (tLObject2 != null) {
                if (tLObject2 instanceof TLRPC$TL_messages_sendMedia) {
                    tLRPC$InputMedia2 = ((TLRPC$TL_messages_sendMedia) tLObject2).media;
                } else {
                    tLRPC$InputMedia2 = ((TLRPC$TL_messages_editMessage) tLObject2).media;
                }
                if (tLRPC$InputMedia2.file == null) {
                    MessageObject messageObject3 = delayedMessage.obj;
                    String str4 = messageObject3.messageOwner.attachPath;
                    TLRPC$Document document2 = messageObject3.getDocument();
                    if (str4 == null) {
                        str4 = FileLoader.getDirectory(4) + "/" + document2.id + ".mp4";
                    }
                    String str5 = str4;
                    putToDelayedMessages(str5, delayedMessage);
                    VideoEditedInfo videoEditedInfo4 = delayedMessage.obj.videoEditedInfo;
                    if (videoEditedInfo4 == null || !videoEditedInfo4.notReadyYet) {
                        if (videoEditedInfo4 != null && videoEditedInfo4.needConvert()) {
                            getFileLoader().uploadFile(str5, false, false, document2.size, ConnectionsManager.FileTypeVideo, false);
                        } else {
                            getFileLoader().uploadFile(str5, false, false, ConnectionsManager.FileTypeVideo);
                        }
                    }
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                }
                MessageObject messageObject4 = delayedMessage.obj;
                String str6 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + "." + ((messageObject4 == null || (videoEditedInfo = messageObject4.videoEditedInfo) == null || !videoEditedInfo.isSticker) ? "jpg" : "webp");
                putToDelayedMessages(str6, delayedMessage);
                getFileLoader().uploadFile(str6, false, true, ConnectionsManager.FileTypePhoto);
                putToUploadingMessages(delayedMessage.obj);
                return;
            }
            MessageObject messageObject5 = delayedMessage.obj;
            String str7 = messageObject5.messageOwner.attachPath;
            TLRPC$Document document3 = messageObject5.getDocument();
            if (str7 == null) {
                str7 = FileLoader.getDirectory(4) + "/" + document3.id + ".mp4";
            }
            if (delayedMessage.sendEncryptedRequest != null && document3.dc_id != 0) {
                File file4 = new File(str7);
                if (!file4.exists() && (file4 = getFileLoader().getPathToMessage(delayedMessage.obj.messageOwner)) != null && file4.exists()) {
                    TLRPC$Message tLRPC$Message = delayedMessage.obj.messageOwner;
                    String absolutePath = file4.getAbsolutePath();
                    tLRPC$Message.attachPath = absolutePath;
                    delayedMessage.obj.attachPathExists = true;
                    str7 = absolutePath;
                }
                if ((file4 == null || (!file4.exists() && delayedMessage.obj.getDocument() != null)) && (file4 = getFileLoader().getPathToAttach(delayedMessage.obj.getDocument(), false)) != null && file4.exists()) {
                    TLRPC$Message tLRPC$Message2 = delayedMessage.obj.messageOwner;
                    String absolutePath2 = file4.getAbsolutePath();
                    tLRPC$Message2.attachPath = absolutePath2;
                    delayedMessage.obj.attachPathExists = true;
                    str7 = absolutePath2;
                }
                if (file4 == null || !file4.exists()) {
                    putToDelayedMessages(FileLoader.getAttachFileName(document3), delayedMessage);
                    getFileLoader().loadFile(document3, delayedMessage.parentObject, 3, 0);
                    return;
                }
            }
            String str8 = str7;
            putToDelayedMessages(str8, delayedMessage);
            VideoEditedInfo videoEditedInfo5 = delayedMessage.obj.videoEditedInfo;
            if (videoEditedInfo5 == null || !videoEditedInfo5.notReadyYet) {
                if (videoEditedInfo5 != null && videoEditedInfo5.needConvert()) {
                    getFileLoader().uploadFile(str8, true, false, document3.size, ConnectionsManager.FileTypeVideo, false);
                } else {
                    getFileLoader().uploadFile(str8, true, false, ConnectionsManager.FileTypeVideo);
                }
            }
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 == 2) {
            String str9 = delayedMessage.httpLocation;
            if (str9 != null) {
                putToDelayedMessages(str9, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "gif", this.currentAccount);
                return;
            }
            TLObject tLObject3 = delayedMessage.sendRequest;
            if (tLObject3 != null) {
                if (tLObject3 instanceof TLRPC$TL_messages_sendMedia) {
                    tLRPC$InputMedia = ((TLRPC$TL_messages_sendMedia) tLObject3).media;
                } else {
                    tLRPC$InputMedia = ((TLRPC$TL_messages_editMessage) tLObject3).media;
                }
                if (tLRPC$InputMedia.file == null) {
                    String str10 = delayedMessage.obj.messageOwner.attachPath;
                    putToDelayedMessages(str10, delayedMessage);
                    getFileLoader().uploadFile(str10, delayedMessage.sendRequest == null, false, ConnectionsManager.FileTypeFile);
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                } else if (tLRPC$InputMedia.thumb != null || (tLRPC$PhotoSize = delayedMessage.photoSize) == null || (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize)) {
                    return;
                } else {
                    String str11 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                    putToDelayedMessages(str11, delayedMessage);
                    getFileLoader().uploadFile(str11, false, true, ConnectionsManager.FileTypePhoto);
                    putToUploadingMessages(delayedMessage.obj);
                    return;
                }
            }
            MessageObject messageObject6 = delayedMessage.obj;
            String str12 = messageObject6.messageOwner.attachPath;
            TLRPC$Document document4 = messageObject6.getDocument();
            if (delayedMessage.sendEncryptedRequest != null && document4.dc_id != 0) {
                File file5 = new File(str12);
                if (!file5.exists() && (file5 = getFileLoader().getPathToMessage(delayedMessage.obj.messageOwner)) != null && file5.exists()) {
                    TLRPC$Message tLRPC$Message3 = delayedMessage.obj.messageOwner;
                    String absolutePath3 = file5.getAbsolutePath();
                    tLRPC$Message3.attachPath = absolutePath3;
                    delayedMessage.obj.attachPathExists = true;
                    str12 = absolutePath3;
                }
                if ((file5 == null || (!file5.exists() && delayedMessage.obj.getDocument() != null)) && (file5 = getFileLoader().getPathToAttach(delayedMessage.obj.getDocument(), false)) != null && file5.exists()) {
                    TLRPC$Message tLRPC$Message4 = delayedMessage.obj.messageOwner;
                    String absolutePath4 = file5.getAbsolutePath();
                    tLRPC$Message4.attachPath = absolutePath4;
                    delayedMessage.obj.attachPathExists = true;
                    str12 = absolutePath4;
                }
                if (file5 == null || !file5.exists()) {
                    putToDelayedMessages(FileLoader.getAttachFileName(document4), delayedMessage);
                    getFileLoader().loadFile(document4, delayedMessage.parentObject, 3, 0);
                    return;
                }
            }
            putToDelayedMessages(str12, delayedMessage);
            getFileLoader().uploadFile(str12, true, false, ConnectionsManager.FileTypeFile);
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 == 3) {
            String str13 = delayedMessage.obj.messageOwner.attachPath;
            putToDelayedMessages(str13, delayedMessage);
            getFileLoader().uploadFile(str13, delayedMessage.sendRequest == null, true, ConnectionsManager.FileTypeAudio);
            putToUploadingMessages(delayedMessage.obj);
        } else if (i2 != 4) {
            if (i2 == 5) {
                final String str14 = "stickerset_" + delayedMessage.obj.getId();
                TLRPC$TL_messages_getStickerSet tLRPC$TL_messages_getStickerSet = new TLRPC$TL_messages_getStickerSet();
                tLRPC$TL_messages_getStickerSet.stickerset = (TLRPC$InputStickerSet) delayedMessage.parentObject;
                getConnectionsManager().sendRequest(tLRPC$TL_messages_getStickerSet, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda89
                    @Override // org.telegram.tgnet.RequestDelegate
                    public final void run(TLObject tLObject4, TLRPC$TL_error tLRPC$TL_error) {
                        SendMessagesHelper.this.lambda$performSendDelayedMessage$35(delayedMessage, str14, tLObject4, tLRPC$TL_error);
                    }
                });
                putToDelayedMessages(str14, delayedMessage);
            }
        } else {
            boolean z3 = i < 0;
            if (delayedMessage.performMediaUpload) {
                int size = i < 0 ? delayedMessage.messageObjects.size() - 1 : i;
                MessageObject messageObject7 = delayedMessage.messageObjects.get(size);
                if (messageObject7.getDocument() != null) {
                    if (delayedMessage.videoEditedInfo != null) {
                        String str15 = messageObject7.messageOwner.attachPath;
                        TLRPC$Document document5 = messageObject7.getDocument();
                        if (str15 == null) {
                            str15 = FileLoader.getDirectory(4) + "/" + document5.id + ".mp4";
                        }
                        putToDelayedMessages(str15, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject7, str15);
                        delayedMessage.extraHashMap.put(str15 + "_i", messageObject7);
                        TLRPC$PhotoSize tLRPC$PhotoSize2 = delayedMessage.photoSize;
                        if (tLRPC$PhotoSize2 != null && tLRPC$PhotoSize2.location != null) {
                            delayedMessage.extraHashMap.put(str15 + "_t", delayedMessage.photoSize);
                        }
                        if (!delayedMessage.videoEditedInfo.alreadyScheduledConverting) {
                            MediaController.getInstance().scheduleVideoConvert(messageObject7);
                        }
                        delayedMessage.obj = messageObject7;
                        putToUploadingMessages(messageObject7);
                    } else {
                        TLRPC$Document document6 = messageObject7.getDocument();
                        String str16 = messageObject7.messageOwner.attachPath;
                        if (str16 == null) {
                            StringBuilder sb2 = new StringBuilder();
                            sb2.append(FileLoader.getDirectory(4));
                            sb2.append("/");
                            str = ".jpg";
                            sb2.append(document6.id);
                            sb2.append(".mp4");
                            str16 = sb2.toString();
                        } else {
                            str = ".jpg";
                        }
                        TLObject tLObject4 = delayedMessage.sendRequest;
                        if (tLObject4 != null) {
                            TLRPC$InputMedia tLRPC$InputMedia4 = ((TLRPC$TL_messages_sendMultiMedia) tLObject4).multi_media.get(size).media;
                            if (tLRPC$InputMedia4.file == null) {
                                putToDelayedMessages(str16, delayedMessage);
                                delayedMessage.extraHashMap.put(messageObject7, str16);
                                delayedMessage.extraHashMap.put(str16, tLRPC$InputMedia4);
                                delayedMessage.extraHashMap.put(str16 + "_i", messageObject7);
                                TLRPC$PhotoSize tLRPC$PhotoSize3 = delayedMessage.photoSize;
                                if (tLRPC$PhotoSize3 != null && tLRPC$PhotoSize3.location != null) {
                                    delayedMessage.extraHashMap.put(str16 + "_t", delayedMessage.photoSize);
                                }
                                VideoEditedInfo videoEditedInfo6 = messageObject7.videoEditedInfo;
                                if (videoEditedInfo6 != null && videoEditedInfo6.needConvert()) {
                                    getFileLoader().uploadFile(str16, false, false, document6.size, ConnectionsManager.FileTypeVideo, false);
                                } else {
                                    getFileLoader().uploadFile(str16, false, false, ConnectionsManager.FileTypeVideo);
                                }
                                putToUploadingMessages(messageObject7);
                            } else if (delayedMessage.photoSize != null) {
                                String str17 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + str;
                                putToDelayedMessages(str17, delayedMessage);
                                delayedMessage.extraHashMap.put(str17 + "_o", str16);
                                delayedMessage.extraHashMap.put(messageObject7, str17);
                                delayedMessage.extraHashMap.put(str17, tLRPC$InputMedia4);
                                getFileLoader().uploadFile(str17, false, true, ConnectionsManager.FileTypePhoto);
                                putToUploadingMessages(messageObject7);
                            }
                        } else {
                            putToDelayedMessages(str16, delayedMessage);
                            delayedMessage.extraHashMap.put(messageObject7, str16);
                            delayedMessage.extraHashMap.put(str16, ((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(size));
                            delayedMessage.extraHashMap.put(str16 + "_i", messageObject7);
                            TLRPC$PhotoSize tLRPC$PhotoSize4 = delayedMessage.photoSize;
                            if (tLRPC$PhotoSize4 != null && tLRPC$PhotoSize4.location != null) {
                                delayedMessage.extraHashMap.put(str16 + "_t", delayedMessage.photoSize);
                            }
                            VideoEditedInfo videoEditedInfo7 = messageObject7.videoEditedInfo;
                            if (videoEditedInfo7 != null && videoEditedInfo7.needConvert()) {
                                getFileLoader().uploadFile(str16, true, false, document6.size, ConnectionsManager.FileTypeVideo, false);
                            } else {
                                getFileLoader().uploadFile(str16, true, false, ConnectionsManager.FileTypeVideo);
                            }
                            putToUploadingMessages(messageObject7);
                        }
                    }
                    delayedMessage.videoEditedInfo = null;
                    delayedMessage.photoSize = null;
                } else {
                    String str18 = delayedMessage.httpLocation;
                    if (str18 != null) {
                        putToDelayedMessages(str18, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject7, delayedMessage.httpLocation);
                        delayedMessage.extraHashMap.put(delayedMessage.httpLocation, messageObject7);
                        ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
                        delayedMessage.httpLocation = null;
                    } else {
                        TLObject tLObject5 = delayedMessage.sendRequest;
                        if (tLObject5 != null) {
                            tLRPC$InputEncryptedFile = ((TLRPC$TL_messages_sendMultiMedia) tLObject5).multi_media.get(size).media;
                        } else {
                            tLRPC$InputEncryptedFile = ((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(size);
                        }
                        String file6 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                        putToDelayedMessages(file6, delayedMessage);
                        delayedMessage.extraHashMap.put(file6, tLRPC$InputEncryptedFile);
                        delayedMessage.extraHashMap.put(messageObject7, file6);
                        z = true;
                        getFileLoader().uploadFile(file6, delayedMessage.sendEncryptedRequest != null, true, ConnectionsManager.FileTypePhoto);
                        putToUploadingMessages(messageObject7);
                        delayedMessage.photoSize = null;
                        z2 = false;
                        delayedMessage.performMediaUpload = z2;
                    }
                }
                z2 = false;
                z = true;
                delayedMessage.performMediaUpload = z2;
            } else {
                z = true;
                if (!delayedMessage.messageObjects.isEmpty()) {
                    ArrayList<MessageObject> arrayList = delayedMessage.messageObjects;
                    putToSendingMessages(arrayList.get(arrayList.size() - 1).messageOwner, delayedMessage.finalGroupMessage != 0);
                }
            }
            sendReadyToSendGroup(delayedMessage, z3, z);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendDelayedMessage$35(final DelayedMessage delayedMessage, final String str, final TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda42
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendDelayedMessage$34(tLObject, delayedMessage, str);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendDelayedMessage$34(TLObject tLObject, DelayedMessage delayedMessage, String str) {
        boolean z;
        if (tLObject != null) {
            TLRPC$TL_messages_stickerSet tLRPC$TL_messages_stickerSet = (TLRPC$TL_messages_stickerSet) tLObject;
            getMediaDataController().storeTempStickerSet(tLRPC$TL_messages_stickerSet);
            TLRPC$TL_inputStickerSetShortName tLRPC$TL_inputStickerSetShortName = new TLRPC$TL_inputStickerSetShortName();
            ((TLRPC$TL_documentAttributeSticker_layer55) delayedMessage.locationParent).stickerset = tLRPC$TL_inputStickerSetShortName;
            tLRPC$TL_inputStickerSetShortName.short_name = tLRPC$TL_messages_stickerSet.set.short_name;
            z = true;
        } else {
            z = false;
        }
        ArrayList<DelayedMessage> remove = this.delayedMessages.remove(str);
        if (remove == null || remove.isEmpty()) {
            return;
        }
        if (z) {
            getMessagesStorage().replaceMessageIfExists(remove.get(0).obj.messageOwner, null, null, false);
        }
        MessageObject messageObject = delayedMessage.obj;
        getSecretChatHelper().performSendEncryptedRequest((TLRPC$DecryptedMessage) delayedMessage.sendEncryptedRequest, messageObject.messageOwner, delayedMessage.encryptedChat, null, null, messageObject);
    }

    private void uploadMultiMedia(final DelayedMessage delayedMessage, final TLRPC$InputMedia tLRPC$InputMedia, TLRPC$InputEncryptedFile tLRPC$InputEncryptedFile, String str) {
        if (tLRPC$InputMedia == null) {
            if (tLRPC$InputEncryptedFile != null) {
                TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                int i = 0;
                while (true) {
                    if (i >= tLRPC$TL_messages_sendEncryptedMultiMedia.files.size()) {
                        break;
                    } else if (tLRPC$TL_messages_sendEncryptedMultiMedia.files.get(i) == tLRPC$InputEncryptedFile) {
                        putToSendingMessages(delayedMessage.messages.get(i), delayedMessage.scheduled);
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.fileUploadProgressChanged, str, -1L, -1L, Boolean.FALSE);
                        break;
                    } else {
                        i++;
                    }
                }
                sendReadyToSendGroup(delayedMessage, false, true);
                return;
            }
            return;
        }
        TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) delayedMessage.sendRequest;
        int i2 = 0;
        while (true) {
            if (i2 >= tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                break;
            } else if (tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media == tLRPC$InputMedia) {
                putToSendingMessages(delayedMessage.messages.get(i2), delayedMessage.scheduled);
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.fileUploadProgressChanged, str, -1L, -1L, Boolean.FALSE);
                break;
            } else {
                i2++;
            }
        }
        TLRPC$TL_messages_uploadMedia tLRPC$TL_messages_uploadMedia = new TLRPC$TL_messages_uploadMedia();
        tLRPC$TL_messages_uploadMedia.media = tLRPC$InputMedia;
        tLRPC$TL_messages_uploadMedia.peer = ((TLRPC$TL_messages_sendMultiMedia) delayedMessage.sendRequest).peer;
        getConnectionsManager().sendRequest(tLRPC$TL_messages_uploadMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda91
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$uploadMultiMedia$37(tLRPC$InputMedia, delayedMessage, tLObject, tLRPC$TL_error);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$uploadMultiMedia$37(final TLRPC$InputMedia tLRPC$InputMedia, final DelayedMessage delayedMessage, final TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda43
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$uploadMultiMedia$36(tLObject, tLRPC$InputMedia, delayedMessage);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:19:0x0067  */
    /* JADX WARN: Removed duplicated region for block: B:30:0x009f  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$uploadMultiMedia$36(TLObject tLObject, TLRPC$InputMedia tLRPC$InputMedia, DelayedMessage delayedMessage) {
        TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument;
        if (tLObject != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia = (TLRPC$MessageMedia) tLObject;
            if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedPhoto) && (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto)) {
                TLRPC$TL_inputMediaPhoto tLRPC$TL_inputMediaPhoto = new TLRPC$TL_inputMediaPhoto();
                TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                tLRPC$TL_inputMediaPhoto.id = tLRPC$TL_inputPhoto;
                TLRPC$Photo tLRPC$Photo = tLRPC$MessageMedia.photo;
                tLRPC$TL_inputPhoto.id = tLRPC$Photo.id;
                tLRPC$TL_inputPhoto.access_hash = tLRPC$Photo.access_hash;
                tLRPC$TL_inputPhoto.file_reference = tLRPC$Photo.file_reference;
                tLRPC$TL_inputMediaPhoto.spoiler = tLRPC$InputMedia.spoiler;
                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaPhoto;
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("set uploaded photo");
                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaPhoto;
                }
            } else if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument) && (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument)) {
                TLRPC$TL_inputMediaDocument tLRPC$TL_inputMediaDocument2 = new TLRPC$TL_inputMediaDocument();
                TLRPC$TL_inputDocument tLRPC$TL_inputDocument = new TLRPC$TL_inputDocument();
                tLRPC$TL_inputMediaDocument2.id = tLRPC$TL_inputDocument;
                TLRPC$Document tLRPC$Document = tLRPC$MessageMedia.document;
                tLRPC$TL_inputDocument.id = tLRPC$Document.id;
                tLRPC$TL_inputDocument.access_hash = tLRPC$Document.access_hash;
                tLRPC$TL_inputDocument.file_reference = tLRPC$Document.file_reference;
                tLRPC$TL_inputMediaDocument2.spoiler = tLRPC$InputMedia.spoiler;
                tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument2;
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("set uploaded document");
                    tLRPC$TL_inputMediaDocument = tLRPC$TL_inputMediaDocument2;
                }
            }
            if (tLRPC$TL_inputMediaDocument == null) {
                int i = tLRPC$InputMedia.ttl_seconds;
                if (i != 0) {
                    tLRPC$TL_inputMediaDocument.ttl_seconds = i;
                    tLRPC$TL_inputMediaDocument.flags |= 1;
                }
                TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) delayedMessage.sendRequest;
                int i2 = 0;
                while (true) {
                    if (i2 >= tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                        break;
                    } else if (tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media == tLRPC$InputMedia) {
                        tLRPC$TL_messages_sendMultiMedia.multi_media.get(i2).media = tLRPC$TL_inputMediaDocument;
                        break;
                    } else {
                        i2++;
                    }
                }
                sendReadyToSendGroup(delayedMessage, false, true);
                return;
            }
            delayedMessage.markAsError();
            return;
        }
        tLRPC$TL_inputMediaDocument = null;
        if (tLRPC$TL_inputMediaDocument == null) {
        }
    }

    private void sendReadyToSendGroup(DelayedMessage delayedMessage, boolean z, boolean z2) {
        DelayedMessage findMaxDelayedMessageForMessageId;
        ArrayList<MessageObject> arrayList;
        if (delayedMessage.messageObjects.isEmpty()) {
            delayedMessage.markAsError();
            return;
        }
        String str = "group_" + delayedMessage.groupId;
        int i = delayedMessage.finalGroupMessage;
        ArrayList<MessageObject> arrayList2 = delayedMessage.messageObjects;
        int i2 = 1;
        if (i != arrayList2.get(arrayList2.size() - 1).getId()) {
            if (z) {
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("final message not added, add");
                }
                putToDelayedMessages(str, delayedMessage);
                return;
            } else if (BuildVars.DEBUG_VERSION) {
                FileLog.d("final message not added");
                return;
            } else {
                return;
            }
        }
        int i3 = 0;
        if (z) {
            this.delayedMessages.remove(str);
            if (!delayedMessage.scheduled) {
                MessageObject messageObject = delayedMessage.obj;
                i2 = ((messageObject == null || !messageObject.isQuickReply()) && ((arrayList = delayedMessage.messageObjects) == null || arrayList.isEmpty() || !delayedMessage.messageObjects.get(0).isQuickReply())) ? 0 : 5;
            }
            getMessagesStorage().putMessages(delayedMessage.messages, false, true, false, 0, i2, 0L);
            getMessagesController().updateInterfaceWithMessages(delayedMessage.peer, delayedMessage.messageObjects, i2);
            if (!delayedMessage.scheduled) {
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.dialogsNeedReload, new Object[0]);
            }
            if (BuildVars.DEBUG_VERSION) {
                FileLog.d("add message");
            }
        }
        TLObject tLObject = delayedMessage.sendRequest;
        if (tLObject instanceof TLRPC$TL_messages_sendMultiMedia) {
            TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia = (TLRPC$TL_messages_sendMultiMedia) tLObject;
            while (i3 < tLRPC$TL_messages_sendMultiMedia.multi_media.size()) {
                TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_messages_sendMultiMedia.multi_media.get(i3).media;
                if ((tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedPhoto) || (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaUploadedDocument)) {
                    if (BuildVars.DEBUG_VERSION) {
                        FileLog.d("multi media not ready");
                        return;
                    }
                    return;
                }
                i3++;
            }
            if (z2 && (findMaxDelayedMessageForMessageId = findMaxDelayedMessageForMessageId(delayedMessage.finalGroupMessage, delayedMessage.peer)) != null) {
                findMaxDelayedMessageForMessageId.addDelayedRequest(delayedMessage.sendRequest, delayedMessage.messageObjects, delayedMessage.originalPaths, delayedMessage.parentObjects, delayedMessage, delayedMessage.scheduled);
                ArrayList<DelayedMessageSendAfterRequest> arrayList3 = delayedMessage.requests;
                if (arrayList3 != null) {
                    findMaxDelayedMessageForMessageId.requests.addAll(arrayList3);
                }
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("has maxDelayedMessage, delay");
                    return;
                }
                return;
            }
        } else {
            TLRPC$TL_messages_sendEncryptedMultiMedia tLRPC$TL_messages_sendEncryptedMultiMedia = (TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
            while (i3 < tLRPC$TL_messages_sendEncryptedMultiMedia.files.size()) {
                if (tLRPC$TL_messages_sendEncryptedMultiMedia.files.get(i3) instanceof TLRPC$TL_inputEncryptedFile) {
                    return;
                }
                i3++;
            }
        }
        TLObject tLObject2 = delayedMessage.sendRequest;
        if (tLObject2 instanceof TLRPC$TL_messages_sendMultiMedia) {
            performSendMessageRequestMulti((TLRPC$TL_messages_sendMultiMedia) tLObject2, delayedMessage.messageObjects, delayedMessage.originalPaths, delayedMessage.parentObjects, delayedMessage, delayedMessage.scheduled);
        } else {
            getSecretChatHelper().performSendEncryptedRequest((TLRPC$TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest, delayedMessage);
        }
        delayedMessage.sendDelayedRequests();
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void putToSendingMessages(final TLRPC$Message tLRPC$Message, final boolean z) {
        if (Thread.currentThread() != ApplicationLoader.applicationHandler.getLooper().getThread()) {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda51
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$putToSendingMessages$38(tLRPC$Message, z);
                }
            });
        } else {
            putToSendingMessages(tLRPC$Message, z, true);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$putToSendingMessages$38(TLRPC$Message tLRPC$Message, boolean z) {
        putToSendingMessages(tLRPC$Message, z, true);
    }

    protected void putToSendingMessages(TLRPC$Message tLRPC$Message, boolean z, boolean z2) {
        if (tLRPC$Message == null) {
            return;
        }
        int i = tLRPC$Message.id;
        if (i > 0) {
            this.editingMessages.put(i, tLRPC$Message);
            return;
        }
        boolean z3 = this.sendingMessages.indexOfKey(i) >= 0;
        removeFromUploadingMessages(tLRPC$Message.id, z);
        this.sendingMessages.put(tLRPC$Message.id, tLRPC$Message);
        if (z || z3) {
            return;
        }
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        LongSparseArray<Integer> longSparseArray = this.sendingMessagesIdDialogs;
        longSparseArray.put(dialogId, Integer.valueOf(longSparseArray.get(dialogId, 0).intValue() + 1));
        if (z2) {
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public TLRPC$Message removeFromSendingMessages(int i, boolean z) {
        long dialogId;
        Integer num;
        if (i > 0) {
            TLRPC$Message tLRPC$Message = this.editingMessages.get(i);
            if (tLRPC$Message != null) {
                this.editingMessages.remove(i);
                return tLRPC$Message;
            }
            return tLRPC$Message;
        }
        TLRPC$Message tLRPC$Message2 = this.sendingMessages.get(i);
        if (tLRPC$Message2 != null) {
            this.sendingMessages.remove(i);
            if (!z && (num = this.sendingMessagesIdDialogs.get((dialogId = MessageObject.getDialogId(tLRPC$Message2)))) != null) {
                int intValue = num.intValue() - 1;
                if (intValue <= 0) {
                    this.sendingMessagesIdDialogs.remove(dialogId);
                } else {
                    this.sendingMessagesIdDialogs.put(dialogId, Integer.valueOf(intValue));
                }
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
            }
        }
        return tLRPC$Message2;
    }

    public int getSendingMessageId(long j) {
        for (int i = 0; i < this.sendingMessages.size(); i++) {
            TLRPC$Message valueAt = this.sendingMessages.valueAt(i);
            if (valueAt.dialog_id == j) {
                return valueAt.id;
            }
        }
        for (int i2 = 0; i2 < this.uploadMessages.size(); i2++) {
            TLRPC$Message valueAt2 = this.uploadMessages.valueAt(i2);
            if (valueAt2.dialog_id == j) {
                return valueAt2.id;
            }
        }
        return 0;
    }

    protected void putToUploadingMessages(MessageObject messageObject) {
        if (messageObject == null || messageObject.getId() > 0 || messageObject.scheduled) {
            return;
        }
        TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        boolean z = this.uploadMessages.indexOfKey(tLRPC$Message.id) >= 0;
        this.uploadMessages.put(tLRPC$Message.id, tLRPC$Message);
        if (z) {
            return;
        }
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        LongSparseArray<Integer> longSparseArray = this.uploadingMessagesIdDialogs;
        longSparseArray.put(dialogId, Integer.valueOf(longSparseArray.get(dialogId, 0).intValue() + 1));
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
    }

    protected void removeFromUploadingMessages(int i, boolean z) {
        TLRPC$Message tLRPC$Message;
        if (i > 0 || z || (tLRPC$Message = this.uploadMessages.get(i)) == null) {
            return;
        }
        this.uploadMessages.remove(i);
        long dialogId = MessageObject.getDialogId(tLRPC$Message);
        Integer num = this.uploadingMessagesIdDialogs.get(dialogId);
        if (num != null) {
            int intValue = num.intValue() - 1;
            if (intValue <= 0) {
                this.uploadingMessagesIdDialogs.remove(dialogId);
            } else {
                this.uploadingMessagesIdDialogs.put(dialogId, Integer.valueOf(intValue));
            }
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.sendingMessagesChanged, new Object[0]);
        }
    }

    public boolean isSendingMessage(int i) {
        return this.sendingMessages.indexOfKey(i) >= 0 || this.editingMessages.indexOfKey(i) >= 0;
    }

    public boolean isSendingMessageIdDialog(long j) {
        return this.sendingMessagesIdDialogs.get(j, 0).intValue() > 0;
    }

    public boolean isUploadingMessageIdDialog(long j) {
        return this.uploadingMessagesIdDialogs.get(j, 0).intValue() > 0;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void performSendMessageRequestMulti(final TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia, final ArrayList<MessageObject> arrayList, final ArrayList<String> arrayList2, final ArrayList<Object> arrayList3, final DelayedMessage delayedMessage, final boolean z) {
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            putToSendingMessages(arrayList.get(i).messageOwner, z);
        }
        getConnectionsManager().sendRequest(tLRPC$TL_messages_sendMultiMedia, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda87
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$47(arrayList3, tLRPC$TL_messages_sendMultiMedia, arrayList, arrayList2, delayedMessage, z, tLObject, tLRPC$TL_error);
            }
        }, (QuickAckDelegate) null, 68);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$47(ArrayList arrayList, final TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia, final ArrayList arrayList2, final ArrayList arrayList3, final DelayedMessage delayedMessage, final boolean z, final TLObject tLObject, final TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error != null && FileRefController.isFileRefError(tLRPC$TL_error.text)) {
            if (arrayList != null) {
                ArrayList arrayList4 = new ArrayList(arrayList);
                getFileRefController().requestReference(arrayList4, tLRPC$TL_messages_sendMultiMedia, arrayList2, arrayList3, arrayList4, delayedMessage, Boolean.valueOf(z));
                return;
            } else if (delayedMessage != null && !delayedMessage.retriedToSend) {
                delayedMessage.retriedToSend = true;
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda58
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequestMulti$39(tLRPC$TL_messages_sendMultiMedia, delayedMessage, arrayList2, z);
                    }
                });
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda53
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$46(tLRPC$TL_error, tLObject, arrayList2, arrayList3, z, tLRPC$TL_messages_sendMultiMedia);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$39(TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia, DelayedMessage delayedMessage, ArrayList arrayList, boolean z) {
        int size = tLRPC$TL_messages_sendMultiMedia.multi_media.size();
        boolean z2 = false;
        for (int i = 0; i < size; i++) {
            if (delayedMessage.parentObjects.get(i) != null) {
                removeFromSendingMessages(((MessageObject) arrayList.get(i)).getId(), z);
                TLRPC$TL_inputSingleMedia tLRPC$TL_inputSingleMedia = tLRPC$TL_messages_sendMultiMedia.multi_media.get(i);
                TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_inputSingleMedia.media;
                if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPhoto) {
                    tLRPC$TL_inputSingleMedia.media = delayedMessage.inputMedias.get(i);
                } else if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaDocument) {
                    tLRPC$TL_inputSingleMedia.media = delayedMessage.inputMedias.get(i);
                }
                delayedMessage.videoEditedInfo = delayedMessage.videoEditedInfos.get(i);
                delayedMessage.httpLocation = delayedMessage.httpLocations.get(i);
                TLRPC$PhotoSize tLRPC$PhotoSize = delayedMessage.locations.get(i);
                delayedMessage.photoSize = tLRPC$PhotoSize;
                delayedMessage.performMediaUpload = true;
                z2 = (tLRPC$TL_inputSingleMedia.media.file == null || tLRPC$PhotoSize != null) ? true : true;
                performSendDelayedMessage(delayedMessage, i);
            }
        }
        if (z2) {
            return;
        }
        for (int i2 = 0; i2 < arrayList.size(); i2++) {
            TLRPC$Message tLRPC$Message = ((MessageObject) arrayList.get(i2)).messageOwner;
            getMessagesStorage().markMessageAsSendError(tLRPC$Message, z ? 1 : 0);
            tLRPC$Message.send_state = 2;
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
            processSentMessage(tLRPC$Message.id);
            removeFromSendingMessages(tLRPC$Message.id, z);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$46(TLRPC$TL_error tLRPC$TL_error, TLObject tLObject, ArrayList arrayList, ArrayList arrayList2, final boolean z, TLRPC$TL_messages_sendMultiMedia tLRPC$TL_messages_sendMultiMedia) {
        final SendMessagesHelper sendMessagesHelper;
        boolean z2;
        final TLRPC$Updates tLRPC$Updates;
        boolean z3;
        TLRPC$Message tLRPC$Message;
        TLRPC$Updates tLRPC$Updates2;
        int i;
        int i2;
        int i3;
        String quickReplyName;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        int i4;
        if (tLRPC$TL_error == null) {
            SparseArray sparseArray = new SparseArray();
            LongSparseArray longSparseArray = new LongSparseArray();
            TLRPC$Updates tLRPC$Updates3 = (TLRPC$Updates) tLObject;
            ArrayList<TLRPC$Update> arrayList3 = tLRPC$Updates3.updates;
            int i5 = 0;
            LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray2 = null;
            while (i5 < arrayList3.size()) {
                TLRPC$Update tLRPC$Update = arrayList3.get(i5);
                if (tLRPC$Update instanceof TLRPC$TL_updateMessageID) {
                    TLRPC$TL_updateMessageID tLRPC$TL_updateMessageID = (TLRPC$TL_updateMessageID) tLRPC$Update;
                    longSparseArray.put(tLRPC$TL_updateMessageID.random_id, Integer.valueOf(tLRPC$TL_updateMessageID.id));
                    arrayList3.remove(i5);
                } else if (tLRPC$Update instanceof TLRPC$TL_updateNewMessage) {
                    final TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update;
                    TLRPC$Message tLRPC$Message2 = tLRPC$TL_updateNewMessage.message;
                    sparseArray.put(tLRPC$Message2.id, tLRPC$Message2);
                    Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda65
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.this.lambda$performSendMessageRequestMulti$40(tLRPC$TL_updateNewMessage);
                        }
                    });
                    arrayList3.remove(i5);
                } else {
                    if (tLRPC$Update instanceof TLRPC$TL_updateNewChannelMessage) {
                        final TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update;
                        final long updateChannelId = MessagesController.getUpdateChannelId(tLRPC$TL_updateNewChannelMessage);
                        TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(updateChannelId));
                        if (!(chat == null || chat.megagroup) || (tLRPC$MessageReplyHeader = tLRPC$TL_updateNewChannelMessage.message.reply_to) == null || (tLRPC$MessageReplyHeader.reply_to_top_id == 0 && tLRPC$MessageReplyHeader.reply_to_msg_id == 0)) {
                            i4 = i5;
                        } else {
                            if (longSparseArray2 == null) {
                                longSparseArray2 = new LongSparseArray<>();
                            }
                            i4 = i5;
                            long dialogId = MessageObject.getDialogId(tLRPC$TL_updateNewChannelMessage.message);
                            SparseArray<TLRPC$MessageReplies> sparseArray2 = longSparseArray2.get(dialogId);
                            if (sparseArray2 == null) {
                                sparseArray2 = new SparseArray<>();
                                longSparseArray2.put(dialogId, sparseArray2);
                            }
                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2 = tLRPC$TL_updateNewChannelMessage.message.reply_to;
                            int i6 = tLRPC$MessageReplyHeader2.reply_to_top_id;
                            if (i6 == 0) {
                                i6 = tLRPC$MessageReplyHeader2.reply_to_msg_id;
                            }
                            TLRPC$MessageReplies tLRPC$MessageReplies = sparseArray2.get(i6);
                            if (tLRPC$MessageReplies == null) {
                                tLRPC$MessageReplies = new TLRPC$TL_messageReplies();
                                sparseArray2.put(i6, tLRPC$MessageReplies);
                            }
                            TLRPC$Peer tLRPC$Peer = tLRPC$TL_updateNewChannelMessage.message.from_id;
                            if (tLRPC$Peer != null) {
                                tLRPC$MessageReplies.recent_repliers.add(0, tLRPC$Peer);
                            }
                            tLRPC$MessageReplies.replies++;
                        }
                        TLRPC$Message tLRPC$Message3 = tLRPC$TL_updateNewChannelMessage.message;
                        sparseArray.put(tLRPC$Message3.id, tLRPC$Message3);
                        Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda60
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$41(tLRPC$TL_updateNewChannelMessage);
                            }
                        });
                        int i7 = i4;
                        arrayList3.remove(i7);
                        i2 = i7 - 1;
                        if (tLRPC$TL_updateNewChannelMessage.message.pinned) {
                            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda62
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$performSendMessageRequestMulti$42(tLRPC$TL_updateNewChannelMessage, updateChannelId);
                                }
                            });
                        }
                    } else {
                        int i8 = i5;
                        if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                            TLRPC$Message tLRPC$Message4 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                            sparseArray.put(tLRPC$Message4.id, tLRPC$Message4);
                            arrayList3.remove(i8);
                        } else if (tLRPC$Update instanceof TLRPC$TL_updateQuickReplyMessage) {
                            QuickRepliesController quickRepliesController = QuickRepliesController.getInstance(this.currentAccount);
                            if (arrayList.isEmpty()) {
                                i3 = 0;
                                quickReplyName = null;
                            } else {
                                i3 = 0;
                                quickReplyName = ((MessageObject) arrayList.get(0)).getQuickReplyName();
                            }
                            quickRepliesController.processUpdate(tLRPC$Update, quickReplyName, (arrayList.isEmpty() ? null : Integer.valueOf(((MessageObject) arrayList.get(i3)).getQuickReplyId())).intValue());
                            TLRPC$Message tLRPC$Message5 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update).message;
                            sparseArray.put(tLRPC$Message5.id, tLRPC$Message5);
                            arrayList3.remove(i8);
                        } else {
                            i2 = i8;
                        }
                        i2 = i8 - 1;
                    }
                    i5 = i2 + 1;
                }
                i2 = i5 - 1;
                i5 = i2 + 1;
            }
            if (longSparseArray2 != null) {
                getMessagesStorage().putChannelViews(null, null, longSparseArray2, true);
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.didUpdateMessagesViews, null, null, longSparseArray2, Boolean.TRUE);
            }
            int i9 = 0;
            while (i9 < arrayList.size()) {
                MessageObject messageObject = (MessageObject) arrayList.get(i9);
                String str = (String) arrayList2.get(i9);
                final TLRPC$Message tLRPC$Message6 = messageObject.messageOwner;
                final int i10 = tLRPC$Message6.id;
                final ArrayList arrayList4 = new ArrayList();
                Integer num = (Integer) longSparseArray.get(tLRPC$Message6.random_id);
                if (num == null || (tLRPC$Message = (TLRPC$Message) sparseArray.get(num.intValue())) == null) {
                    tLRPC$Updates = tLRPC$Updates3;
                    z3 = true;
                    break;
                }
                MessageObject.getDialogId(tLRPC$Message);
                arrayList4.add(tLRPC$Message);
                if ((tLRPC$Message.flags & ConnectionsManager.FileTypeVideo) != 0) {
                    TLRPC$Message tLRPC$Message7 = messageObject.messageOwner;
                    tLRPC$Message7.ttl_period = tLRPC$Message.ttl_period;
                    tLRPC$Message7.flags = 33554432 | tLRPC$Message7.flags;
                }
                updateMediaPaths(messageObject, tLRPC$Message, tLRPC$Message.id, str, false);
                final int mediaExistanceFlags = messageObject.getMediaExistanceFlags();
                tLRPC$Message6.id = tLRPC$Message.id;
                int i11 = tLRPC$Message.quick_reply_shortcut_id;
                tLRPC$Message6.quick_reply_shortcut_id = i11;
                if (i11 != 0) {
                    tLRPC$Message6.flags |= 1073741824;
                }
                final long j = tLRPC$Message.grouped_id;
                if (z) {
                    tLRPC$Updates2 = tLRPC$Updates3;
                    i = i9;
                } else {
                    Integer num2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message.dialog_id));
                    if (num2 == null) {
                        tLRPC$Updates2 = tLRPC$Updates3;
                        i = i9;
                        num2 = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message.out, tLRPC$Message.dialog_id));
                        getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message.dialog_id), num2);
                    } else {
                        tLRPC$Updates2 = tLRPC$Updates3;
                        i = i9;
                    }
                    tLRPC$Message.unread = num2.intValue() < tLRPC$Message.id;
                }
                getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                tLRPC$Message6.send_state = 0;
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i10), Integer.valueOf(tLRPC$Message6.id), tLRPC$Message6, Long.valueOf(tLRPC$Message6.dialog_id), Long.valueOf(j), Integer.valueOf(mediaExistanceFlags), Boolean.valueOf(z));
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer2, Integer.valueOf(i10), Integer.valueOf(tLRPC$Message6.id), tLRPC$Message6, Long.valueOf(tLRPC$Message6.dialog_id), Long.valueOf(j), Integer.valueOf(mediaExistanceFlags), Boolean.valueOf(z));
                getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda71
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequestMulti$44(z, tLRPC$Message6, i10, arrayList4, j, mediaExistanceFlags);
                    }
                });
                i9 = i + 1;
                tLRPC$Updates3 = tLRPC$Updates2;
                longSparseArray = longSparseArray;
            }
            tLRPC$Updates = tLRPC$Updates3;
            z3 = false;
            sendMessagesHelper = this;
            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda67
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequestMulti$45(tLRPC$Updates);
                }
            });
            z2 = z3;
        } else {
            sendMessagesHelper = this;
            AlertsCreator.processError(sendMessagesHelper.currentAccount, tLRPC$TL_error, null, tLRPC$TL_messages_sendMultiMedia, new Object[0]);
            z2 = true;
        }
        if (z2) {
            for (int i12 = 0; i12 < arrayList.size(); i12++) {
                TLRPC$Message tLRPC$Message8 = ((MessageObject) arrayList.get(i12)).messageOwner;
                getMessagesStorage().markMessageAsSendError(tLRPC$Message8, z ? 1 : 0);
                tLRPC$Message8.send_state = 2;
                getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message8.id));
                sendMessagesHelper.processSentMessage(tLRPC$Message8.id);
                sendMessagesHelper.removeFromSendingMessages(tLRPC$Message8.id, z);
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$40(TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$41(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage) {
        getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$TL_updateNewChannelMessage.message.peer_id.channel_id);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$42(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage, long j) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        arrayList.add(Integer.valueOf(tLRPC$TL_updateNewChannelMessage.message.id));
        getMessagesStorage().updatePinnedMessages(-j, arrayList, true, -1, 0, false, null);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$44(final boolean z, final TLRPC$Message tLRPC$Message, final int i, ArrayList arrayList, final long j, final int i2) {
        int i3 = (tLRPC$Message.quick_reply_shortcut_id == 0 && tLRPC$Message.quick_reply_shortcut == null) ? z ? 1 : 0 : 5;
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message.random_id, MessageObject.getPeerId(tLRPC$Message.peer_id), Integer.valueOf(i), tLRPC$Message.id, 0, false, z ? 1 : 0, tLRPC$Message.quick_reply_shortcut_id);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, i3, tLRPC$Message.quick_reply_shortcut_id);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda48
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequestMulti$43(tLRPC$Message, i, j, i2, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$43(TLRPC$Message tLRPC$Message, int i, long j, int i2, boolean z) {
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), Long.valueOf(j), Integer.valueOf(i2), Boolean.valueOf(z));
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer2, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), Long.valueOf(j), Integer.valueOf(i2), Boolean.valueOf(z));
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequestMulti$45(TLRPC$Updates tLRPC$Updates) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void performSendMessageRequest(TLObject tLObject, MessageObject messageObject, String str, DelayedMessage delayedMessage, Object obj, HashMap<String, String> hashMap, boolean z) {
        performSendMessageRequest(tLObject, messageObject, str, null, false, delayedMessage, obj, hashMap, z);
    }

    private DelayedMessage findMaxDelayedMessageForMessageId(int i, long j) {
        int i2;
        DelayedMessage delayedMessage = null;
        int i3 = Integer.MIN_VALUE;
        for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
            ArrayList<DelayedMessage> value = entry.getValue();
            int size = value.size();
            for (int i4 = 0; i4 < size; i4++) {
                DelayedMessage delayedMessage2 = value.get(i4);
                int i5 = delayedMessage2.type;
                if ((i5 == 4 || i5 == 0) && delayedMessage2.peer == j) {
                    MessageObject messageObject = delayedMessage2.obj;
                    if (messageObject != null) {
                        i2 = messageObject.getId();
                    } else {
                        ArrayList<MessageObject> arrayList = delayedMessage2.messageObjects;
                        if (arrayList == null || arrayList.isEmpty()) {
                            i2 = 0;
                        } else {
                            ArrayList<MessageObject> arrayList2 = delayedMessage2.messageObjects;
                            i2 = arrayList2.get(arrayList2.size() - 1).getId();
                        }
                    }
                    if (i2 != 0 && i2 > i && delayedMessage == null && i3 < i2) {
                        delayedMessage = delayedMessage2;
                        i3 = i2;
                    }
                }
            }
        }
        return delayedMessage;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void performSendMessageRequest(final TLObject tLObject, final MessageObject messageObject, final String str, final DelayedMessage delayedMessage, final boolean z, final DelayedMessage delayedMessage2, final Object obj, HashMap<String, String> hashMap, final boolean z2) {
        DelayedMessage findMaxDelayedMessageForMessageId;
        ArrayList<DelayedMessageSendAfterRequest> arrayList;
        if (!(tLObject instanceof TLRPC$TL_messages_editMessage) && z && (findMaxDelayedMessageForMessageId = findMaxDelayedMessageForMessageId(messageObject.getId(), messageObject.getDialogId())) != null) {
            findMaxDelayedMessageForMessageId.addDelayedRequest(tLObject, messageObject, str, obj, delayedMessage2, delayedMessage != null ? delayedMessage.scheduled : false);
            if (delayedMessage == null || (arrayList = delayedMessage.requests) == null) {
                return;
            }
            findMaxDelayedMessageForMessageId.requests.addAll(arrayList);
            return;
        }
        final TLRPC$Message tLRPC$Message = messageObject.messageOwner;
        putToSendingMessages(tLRPC$Message, z2);
        tLRPC$Message.reqId = getConnectionsManager().sendRequest(tLObject, new RequestDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda90
            @Override // org.telegram.tgnet.RequestDelegate
            public final void run(TLObject tLObject2, TLRPC$TL_error tLRPC$TL_error) {
                SendMessagesHelper.this.lambda$performSendMessageRequest$62(tLObject, obj, messageObject, str, delayedMessage, z, delayedMessage2, z2, tLRPC$Message, tLObject2, tLRPC$TL_error);
            }
        }, new QuickAckDelegate() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda81
            @Override // org.telegram.tgnet.QuickAckDelegate
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$64(tLRPC$Message);
            }
        }, (tLObject instanceof TLRPC$TL_messages_sendMessage ? 128 : 0) | 68);
        if (delayedMessage != null) {
            delayedMessage.sendDelayedRequests();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$62(final TLObject tLObject, Object obj, final MessageObject messageObject, final String str, DelayedMessage delayedMessage, boolean z, final DelayedMessage delayedMessage2, final boolean z2, final TLRPC$Message tLRPC$Message, final TLObject tLObject2, final TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error != null && (((tLObject instanceof TLRPC$TL_messages_sendMedia) || (tLObject instanceof TLRPC$TL_messages_editMessage)) && FileRefController.isFileRefError(tLRPC$TL_error.text))) {
            if (obj != null) {
                getFileRefController().requestReference(obj, tLObject, messageObject, str, delayedMessage, Boolean.valueOf(z), delayedMessage2, Boolean.valueOf(z2));
                return;
            } else if (delayedMessage2 != null) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda52
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequest$48(tLRPC$Message, z2, tLObject, delayedMessage2);
                    }
                });
                return;
            }
        }
        if (tLObject instanceof TLRPC$TL_messages_editMessage) {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda55
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequest$51(tLRPC$TL_error, tLRPC$Message, tLObject2, messageObject, str, z2, tLObject);
                }
            });
        } else {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda72
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequest$61(z2, tLRPC$TL_error, tLRPC$Message, tLObject2, messageObject, str, tLObject);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$48(TLRPC$Message tLRPC$Message, boolean z, TLObject tLObject, DelayedMessage delayedMessage) {
        removeFromSendingMessages(tLRPC$Message.id, z);
        if (tLObject instanceof TLRPC$TL_messages_sendMedia) {
            TLRPC$TL_messages_sendMedia tLRPC$TL_messages_sendMedia = (TLRPC$TL_messages_sendMedia) tLObject;
            TLRPC$InputMedia tLRPC$InputMedia = tLRPC$TL_messages_sendMedia.media;
            if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaPhoto) {
                tLRPC$TL_messages_sendMedia.media = delayedMessage.inputUploadMedia;
            } else if (tLRPC$InputMedia instanceof TLRPC$TL_inputMediaDocument) {
                tLRPC$TL_messages_sendMedia.media = delayedMessage.inputUploadMedia;
            }
        } else if (tLObject instanceof TLRPC$TL_messages_editMessage) {
            TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = (TLRPC$TL_messages_editMessage) tLObject;
            TLRPC$InputMedia tLRPC$InputMedia2 = tLRPC$TL_messages_editMessage.media;
            if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaPhoto) {
                tLRPC$TL_messages_editMessage.media = delayedMessage.inputUploadMedia;
            } else if (tLRPC$InputMedia2 instanceof TLRPC$TL_inputMediaDocument) {
                tLRPC$TL_messages_editMessage.media = delayedMessage.inputUploadMedia;
            }
        }
        delayedMessage.performMediaUpload = true;
        performSendDelayedMessage(delayedMessage);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$51(TLRPC$TL_error tLRPC$TL_error, final TLRPC$Message tLRPC$Message, TLObject tLObject, MessageObject messageObject, String str, final boolean z, TLObject tLObject2) {
        int i = 0;
        TLRPC$Message tLRPC$Message2 = null;
        if (tLRPC$TL_error == null) {
            String str2 = tLRPC$Message.attachPath;
            final TLRPC$Updates tLRPC$Updates = (TLRPC$Updates) tLObject;
            ArrayList<TLRPC$Update> arrayList = tLRPC$Updates.updates;
            while (true) {
                if (i >= arrayList.size()) {
                    break;
                }
                TLRPC$Update tLRPC$Update = arrayList.get(i);
                if (tLRPC$Update instanceof TLRPC$TL_updateEditMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateEditMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateEditChannelMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateEditChannelMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                    tLRPC$Message2 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                    break;
                } else if (tLRPC$Update instanceof TLRPC$TL_updateQuickReplyMessage) {
                    QuickRepliesController.getInstance(this.currentAccount).processUpdate(tLRPC$Update, MessageObject.getQuickReplyName(tLRPC$Message), MessageObject.getQuickReplyId(tLRPC$Message));
                    tLRPC$Message2 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update).message;
                    break;
                } else {
                    i++;
                }
            }
            TLRPC$Message tLRPC$Message3 = tLRPC$Message2;
            if (tLRPC$Message3 != null) {
                ImageLoader.saveMessageThumbs(tLRPC$Message3);
                updateMediaPaths(messageObject, tLRPC$Message3, tLRPC$Message3.id, str, false);
            }
            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda69
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$performSendMessageRequest$50(tLRPC$Updates, tLRPC$Message, z);
                }
            });
            return;
        }
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLObject2, new Object[0]);
        removeFromSendingMessages(tLRPC$Message.id, z);
        revertEditingMessageObject(messageObject);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$50(TLRPC$Updates tLRPC$Updates, final TLRPC$Message tLRPC$Message, final boolean z) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda50
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$49(tLRPC$Message, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$49(TLRPC$Message tLRPC$Message, boolean z) {
        processSentMessage(tLRPC$Message.id);
        removeFromSendingMessages(tLRPC$Message.id, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Code restructure failed: missing block: B:44:0x0115, code lost:
        r11 = r10;
        r10 = null;
     */
    /* JADX WARN: Removed duplicated region for block: B:129:0x0320  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public /* synthetic */ void lambda$performSendMessageRequest$61(final boolean z, TLRPC$TL_error tLRPC$TL_error, final TLRPC$Message tLRPC$Message, TLObject tLObject, final MessageObject messageObject, String str, TLObject tLObject2) {
        boolean z2;
        boolean z3;
        int i;
        LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray;
        TLRPC$Message tLRPC$Message2;
        boolean z4;
        boolean z5;
        int i2;
        boolean z6;
        TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader;
        LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray2;
        TLRPC$Message tLRPC$Message3;
        if (tLRPC$TL_error == null) {
            final int i3 = tLRPC$Message.id;
            final ArrayList arrayList = new ArrayList();
            boolean z7 = tLRPC$Message.date == 2147483646;
            if (tLObject instanceof TLRPC$TL_updateShortSentMessage) {
                final TLRPC$TL_updateShortSentMessage tLRPC$TL_updateShortSentMessage = (TLRPC$TL_updateShortSentMessage) tLObject;
                updateMediaPaths(messageObject, null, tLRPC$TL_updateShortSentMessage.id, null, false);
                int mediaExistanceFlags = messageObject.getMediaExistanceFlags();
                int i4 = tLRPC$TL_updateShortSentMessage.id;
                tLRPC$Message.id = i4;
                tLRPC$Message.local_id = i4;
                tLRPC$Message.date = tLRPC$TL_updateShortSentMessage.date;
                tLRPC$Message.entities = tLRPC$TL_updateShortSentMessage.entities;
                tLRPC$Message.out = tLRPC$TL_updateShortSentMessage.out;
                if ((tLRPC$TL_updateShortSentMessage.flags & ConnectionsManager.FileTypeVideo) != 0) {
                    tLRPC$Message.ttl_period = tLRPC$TL_updateShortSentMessage.ttl_period;
                    tLRPC$Message.flags |= ConnectionsManager.FileTypeVideo;
                }
                TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$TL_updateShortSentMessage.media;
                if (tLRPC$MessageMedia != null) {
                    tLRPC$Message.media = tLRPC$MessageMedia;
                    tLRPC$Message.flags |= LiteMode.FLAG_CALLS_ANIMATIONS;
                    ImageLoader.saveMessageThumbs(tLRPC$Message);
                }
                TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$TL_updateShortSentMessage.media;
                if (((tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaGame) || (tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaInvoice)) && !TextUtils.isEmpty(tLRPC$TL_updateShortSentMessage.message)) {
                    tLRPC$Message.message = tLRPC$TL_updateShortSentMessage.message;
                }
                if (!tLRPC$Message.entities.isEmpty()) {
                    tLRPC$Message.flags |= 128;
                }
                Integer num = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message.dialog_id));
                if (num == null) {
                    num = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message.out, tLRPC$Message.dialog_id));
                    getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message.dialog_id), num);
                }
                tLRPC$Message.unread = num.intValue() < tLRPC$Message.id;
                Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda66
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequest$52(tLRPC$TL_updateShortSentMessage);
                    }
                });
                arrayList.add(tLRPC$Message);
                i = mediaExistanceFlags;
                z3 = false;
            } else if (tLObject instanceof TLRPC$Updates) {
                final TLRPC$Updates tLRPC$Updates = (TLRPC$Updates) tLObject;
                ArrayList<TLRPC$Update> arrayList2 = tLRPC$Updates.updates;
                int i5 = 0;
                while (true) {
                    if (i5 >= arrayList2.size()) {
                        longSparseArray = null;
                        tLRPC$Message2 = null;
                        break;
                    }
                    TLRPC$Update tLRPC$Update = arrayList2.get(i5);
                    if (tLRPC$Update instanceof TLRPC$TL_updateNewMessage) {
                        final TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage = (TLRPC$TL_updateNewMessage) tLRPC$Update;
                        tLRPC$Message3 = tLRPC$TL_updateNewMessage.message;
                        if (tLRPC$Message3.action == null) {
                            arrayList.add(tLRPC$Message3);
                            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda64
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$performSendMessageRequest$53(tLRPC$TL_updateNewMessage);
                                }
                            });
                            arrayList2.remove(i5);
                            break;
                        }
                    }
                    if (tLRPC$Update instanceof TLRPC$TL_updateNewChannelMessage) {
                        final TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage = (TLRPC$TL_updateNewChannelMessage) tLRPC$Update;
                        final long updateChannelId = MessagesController.getUpdateChannelId(tLRPC$TL_updateNewChannelMessage);
                        TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(updateChannelId));
                        if (!(chat == null || chat.megagroup) || (tLRPC$MessageReplyHeader = tLRPC$TL_updateNewChannelMessage.message.reply_to) == null || (tLRPC$MessageReplyHeader.reply_to_top_id == 0 && tLRPC$MessageReplyHeader.reply_to_msg_id == 0)) {
                            longSparseArray = null;
                        } else {
                            LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray3 = new LongSparseArray<>();
                            long dialogId = MessageObject.getDialogId(tLRPC$TL_updateNewChannelMessage.message);
                            SparseArray<TLRPC$MessageReplies> sparseArray = longSparseArray3.get(dialogId);
                            if (sparseArray == null) {
                                sparseArray = new SparseArray<>();
                                longSparseArray3.put(dialogId, sparseArray);
                            }
                            TLRPC$MessageReplyHeader tLRPC$MessageReplyHeader2 = tLRPC$TL_updateNewChannelMessage.message.reply_to;
                            int i6 = tLRPC$MessageReplyHeader2.reply_to_top_id;
                            if (i6 == 0) {
                                i6 = tLRPC$MessageReplyHeader2.reply_to_msg_id;
                            }
                            TLRPC$MessageReplies tLRPC$MessageReplies = sparseArray.get(i6);
                            if (tLRPC$MessageReplies == null) {
                                tLRPC$MessageReplies = new TLRPC$TL_messageReplies();
                                sparseArray.put(i6, tLRPC$MessageReplies);
                            }
                            TLRPC$Peer tLRPC$Peer = tLRPC$TL_updateNewChannelMessage.message.from_id;
                            if (tLRPC$Peer != null) {
                                longSparseArray2 = longSparseArray3;
                                tLRPC$MessageReplies.recent_repliers.add(0, tLRPC$Peer);
                            } else {
                                longSparseArray2 = longSparseArray3;
                            }
                            tLRPC$MessageReplies.replies++;
                            longSparseArray = longSparseArray2;
                        }
                        tLRPC$Message2 = tLRPC$TL_updateNewChannelMessage.message;
                        arrayList.add(tLRPC$Message2);
                        Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda61
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$performSendMessageRequest$54(tLRPC$TL_updateNewChannelMessage);
                            }
                        });
                        arrayList2.remove(i5);
                        if (tLRPC$TL_updateNewChannelMessage.message.pinned) {
                            Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda63
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.this.lambda$performSendMessageRequest$55(tLRPC$TL_updateNewChannelMessage, updateChannelId);
                                }
                            });
                        }
                    } else if (tLRPC$Update instanceof TLRPC$TL_updateNewScheduledMessage) {
                        tLRPC$Message3 = ((TLRPC$TL_updateNewScheduledMessage) tLRPC$Update).message;
                        arrayList.add(tLRPC$Message3);
                        arrayList2.remove(i5);
                        break;
                    } else if (tLRPC$Update instanceof TLRPC$TL_updateQuickReplyMessage) {
                        QuickRepliesController.getInstance(this.currentAccount).processUpdate(tLRPC$Update, messageObject.getQuickReplyName(), messageObject.getQuickReplyId());
                        tLRPC$Message3 = ((TLRPC$TL_updateQuickReplyMessage) tLRPC$Update).message;
                        arrayList.add(tLRPC$Message3);
                        arrayList2.remove(i5);
                        break;
                    } else {
                        i5++;
                    }
                }
                if (longSparseArray != null) {
                    getMessagesStorage().putChannelViews(null, null, longSparseArray, true);
                    getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.didUpdateMessagesViews, null, null, longSparseArray, Boolean.TRUE);
                }
                if (tLRPC$Message2 != null) {
                    MessageObject.getDialogId(tLRPC$Message2);
                    z4 = (!z7 || tLRPC$Message2.date == 2147483646) ? z ? 1 : 0 : false;
                    ImageLoader.saveMessageThumbs(tLRPC$Message2);
                    if (!z4) {
                        Integer num2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(tLRPC$Message2.dialog_id));
                        if (num2 == null) {
                            num2 = Integer.valueOf(getMessagesStorage().getDialogReadMax(tLRPC$Message2.out, tLRPC$Message2.dialog_id));
                            getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(tLRPC$Message2.dialog_id), num2);
                        }
                        tLRPC$Message2.unread = num2.intValue() < tLRPC$Message2.id;
                    }
                    TLRPC$Message tLRPC$Message4 = messageObject.messageOwner;
                    tLRPC$Message4.post_author = tLRPC$Message2.post_author;
                    if ((tLRPC$Message2.flags & ConnectionsManager.FileTypeVideo) != 0) {
                        tLRPC$Message4.ttl_period = tLRPC$Message2.ttl_period;
                        tLRPC$Message4.flags |= ConnectionsManager.FileTypeVideo;
                    }
                    tLRPC$Message4.entities = tLRPC$Message2.entities;
                    int i7 = tLRPC$Message2.quick_reply_shortcut_id;
                    tLRPC$Message4.quick_reply_shortcut_id = i7;
                    if (i7 != 0) {
                        tLRPC$Message4.flags |= 1073741824;
                    }
                    updateMediaPaths(messageObject, tLRPC$Message2, tLRPC$Message2.id, str, false);
                    int mediaExistanceFlags2 = messageObject.getMediaExistanceFlags();
                    tLRPC$Message.id = tLRPC$Message2.id;
                    i2 = mediaExistanceFlags2;
                    z5 = false;
                } else {
                    if (BuildVars.LOGS_ENABLED) {
                        StringBuilder sb = new StringBuilder();
                        for (int i8 = 0; i8 < arrayList2.size(); i8++) {
                            sb.append(arrayList2.get(i8).getClass().getSimpleName());
                            sb.append(", ");
                        }
                        FileLog.d("can't find message in updates " + ((Object) sb));
                    }
                    z4 = z ? 1 : 0;
                    z5 = true;
                    i2 = 0;
                }
                Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda68
                    @Override // java.lang.Runnable
                    public final void run() {
                        SendMessagesHelper.this.lambda$performSendMessageRequest$56(tLRPC$Updates);
                    }
                });
                z6 = z5;
                z3 = z4;
                i = i2;
                if (MessageObject.isLiveLocationMessage(tLRPC$Message) && tLRPC$Message.via_bot_id == 0 && TextUtils.isEmpty(tLRPC$Message.via_bot_name)) {
                    getLocationController().addSharingLocation(tLRPC$Message);
                }
                if (!z6) {
                    getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                    tLRPC$Message.send_state = 0;
                    if (z && !z3) {
                        ArrayList<Integer> arrayList3 = new ArrayList<>();
                        arrayList3.add(Integer.valueOf(i3));
                        getMessagesController().deleteMessages(arrayList3, null, null, tLRPC$Message.dialog_id, 0, false, 1);
                        getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda35
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$performSendMessageRequest$58(arrayList, messageObject, tLRPC$Message, i3, z);
                            }
                        });
                    } else {
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i3), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), 0L, Integer.valueOf(i), Boolean.valueOf(z));
                        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer2, Integer.valueOf(i3), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), 0L, Integer.valueOf(i), Boolean.valueOf(z));
                        final int i9 = i;
                        getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda70
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.this.lambda$performSendMessageRequest$60(z, tLRPC$Message, i3, arrayList, i9);
                            }
                        });
                    }
                }
                z2 = z6;
            } else {
                z3 = z ? 1 : 0;
                i = 0;
            }
            z6 = false;
            if (MessageObject.isLiveLocationMessage(tLRPC$Message)) {
                getLocationController().addSharingLocation(tLRPC$Message);
            }
            if (!z6) {
            }
            z2 = z6;
        } else {
            AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, null, tLObject2, new Object[0]);
            z2 = true;
        }
        if (z2) {
            getMessagesStorage().markMessageAsSendError(tLRPC$Message, z ? 1 : 0);
            tLRPC$Message.send_state = 2;
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageSendError, Integer.valueOf(tLRPC$Message.id));
            processSentMessage(tLRPC$Message.id);
            removeFromSendingMessages(tLRPC$Message.id, z);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$52(TLRPC$TL_updateShortSentMessage tLRPC$TL_updateShortSentMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateShortSentMessage.pts, tLRPC$TL_updateShortSentMessage.date, tLRPC$TL_updateShortSentMessage.pts_count);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$53(TLRPC$TL_updateNewMessage tLRPC$TL_updateNewMessage) {
        getMessagesController().processNewDifferenceParams(-1, tLRPC$TL_updateNewMessage.pts, -1, tLRPC$TL_updateNewMessage.pts_count);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$54(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage) {
        getMessagesController().processNewChannelDifferenceParams(tLRPC$TL_updateNewChannelMessage.pts, tLRPC$TL_updateNewChannelMessage.pts_count, tLRPC$TL_updateNewChannelMessage.message.peer_id.channel_id);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$55(TLRPC$TL_updateNewChannelMessage tLRPC$TL_updateNewChannelMessage, long j) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        arrayList.add(Integer.valueOf(tLRPC$TL_updateNewChannelMessage.message.id));
        getMessagesStorage().updatePinnedMessages(-j, arrayList, true, -1, 0, false, null);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$56(TLRPC$Updates tLRPC$Updates) {
        getMessagesController().processUpdates(tLRPC$Updates, false);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$58(ArrayList arrayList, final MessageObject messageObject, final TLRPC$Message tLRPC$Message, final int i, final boolean z) {
        getMessagesStorage().putMessages(arrayList, true, false, false, 0, false, 0, 0L);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda38
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$57(messageObject, tLRPC$Message, i, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$57(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, boolean z) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(new MessageObject(messageObject.currentAccount, messageObject.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(tLRPC$Message.dialog_id, arrayList, 0);
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$60(final boolean z, final TLRPC$Message tLRPC$Message, final int i, ArrayList arrayList, final int i2) {
        int i3 = (tLRPC$Message.quick_reply_shortcut_id == 0 && tLRPC$Message.quick_reply_shortcut == null) ? z ? 1 : 0 : 5;
        getMessagesStorage().updateMessageStateAndId(tLRPC$Message.random_id, MessageObject.getPeerId(tLRPC$Message.peer_id), Integer.valueOf(i), tLRPC$Message.id, 0, false, z ? 1 : 0, tLRPC$Message.quick_reply_shortcut_id);
        getMessagesStorage().putMessages((ArrayList<TLRPC$Message>) arrayList, true, false, false, 0, i3, tLRPC$Message.quick_reply_shortcut_id);
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda47
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$59(tLRPC$Message, i, i2, z);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$59(TLRPC$Message tLRPC$Message, int i, int i2, boolean z) {
        getMediaDataController().increasePeerRaiting(tLRPC$Message.dialog_id);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), 0L, Integer.valueOf(i2), Boolean.valueOf(z));
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByServer2, Integer.valueOf(i), Integer.valueOf(tLRPC$Message.id), tLRPC$Message, Long.valueOf(tLRPC$Message.dialog_id), 0L, Integer.valueOf(i2), Boolean.valueOf(z));
        processSentMessage(i);
        removeFromSendingMessages(i, z);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$64(final TLRPC$Message tLRPC$Message) {
        final int i = tLRPC$Message.id;
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda46
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$performSendMessageRequest$63(tLRPC$Message, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$performSendMessageRequest$63(TLRPC$Message tLRPC$Message, int i) {
        tLRPC$Message.send_state = 0;
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.messageReceivedByAck, Integer.valueOf(i));
    }

    /* JADX WARN: Removed duplicated region for block: B:144:0x02fa  */
    /* JADX WARN: Removed duplicated region for block: B:72:0x00fd  */
    /* JADX WARN: Removed duplicated region for block: B:73:0x0111  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private void updateMediaPaths(MessageObject messageObject, TLRPC$Message tLRPC$Message, int i, String str, boolean z) {
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$FileLocation tLRPC$FileLocation;
        byte[] bArr;
        boolean z2;
        String str2;
        TLRPC$FileLocation tLRPC$FileLocation2;
        VideoEditedInfo videoEditedInfo;
        boolean z3;
        String str3;
        File file;
        TLRPC$PhotoSize closestPhotoSizeWithSize;
        TLObject tLObject;
        TLRPC$MessageMedia tLRPC$MessageMedia;
        TLRPC$WebPage tLRPC$WebPage;
        TLRPC$Document tLRPC$Document;
        TLRPC$MessageMedia tLRPC$MessageMedia2;
        TLRPC$WebPage tLRPC$WebPage2;
        TLRPC$Photo tLRPC$Photo;
        TLRPC$MessageMedia tLRPC$MessageMedia3;
        TLRPC$Document tLRPC$Document2;
        TLRPC$MessageMedia tLRPC$MessageMedia4;
        TLRPC$Photo tLRPC$Photo2;
        TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
        TLRPC$MessageMedia tLRPC$MessageMedia5 = tLRPC$Message2.media;
        if (tLRPC$MessageMedia5 != null) {
            if (tLRPC$MessageMedia5.storyItem != null) {
                tLRPC$Message.media = tLRPC$MessageMedia5;
            } else {
                if (messageObject.isLiveLocation()) {
                    TLRPC$MessageMedia tLRPC$MessageMedia6 = tLRPC$Message.media;
                    if (tLRPC$MessageMedia6 instanceof TLRPC$TL_messageMediaGeoLive) {
                        tLRPC$Message2.media.period = tLRPC$MessageMedia6.period;
                    }
                }
                if (messageObject.isDice()) {
                    ((TLRPC$TL_messageMediaDice) tLRPC$Message2.media).value = ((TLRPC$TL_messageMediaDice) tLRPC$Message.media).value;
                } else {
                    TLRPC$MessageMedia tLRPC$MessageMedia7 = tLRPC$Message2.media;
                    TLRPC$Photo tLRPC$Photo3 = tLRPC$MessageMedia7.photo;
                    if (tLRPC$Photo3 != null) {
                        closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo3.sizes, 40);
                        tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia4 = tLRPC$Message.media) == null || (tLRPC$Photo2 = tLRPC$MessageMedia4.photo) == null) ? closestPhotoSizeWithSize : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo2.sizes, 40);
                        tLObject = tLRPC$Message2.media.photo;
                    } else {
                        TLRPC$Document tLRPC$Document3 = tLRPC$MessageMedia7.document;
                        if (tLRPC$Document3 != null) {
                            closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document3.thumbs, 40);
                            tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia3 = tLRPC$Message.media) == null || (tLRPC$Document2 = tLRPC$MessageMedia3.document) == null) ? closestPhotoSizeWithSize : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document2.thumbs, 40);
                            tLObject = tLRPC$Message2.media.document;
                        } else {
                            TLRPC$WebPage tLRPC$WebPage3 = tLRPC$MessageMedia7.webpage;
                            if (tLRPC$WebPage3 != null) {
                                TLRPC$Photo tLRPC$Photo4 = tLRPC$WebPage3.photo;
                                if (tLRPC$Photo4 != null) {
                                    closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo4.sizes, 40);
                                    tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia2 = tLRPC$Message.media) == null || (tLRPC$WebPage2 = tLRPC$MessageMedia2.webpage) == null || (tLRPC$Photo = tLRPC$WebPage2.photo) == null) ? closestPhotoSizeWithSize : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo.sizes, 40);
                                    tLObject = tLRPC$Message2.media.webpage.photo;
                                } else {
                                    TLRPC$Document tLRPC$Document4 = tLRPC$WebPage3.document;
                                    if (tLRPC$Document4 != null) {
                                        closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document4.thumbs, 40);
                                        tLRPC$PhotoSize = (tLRPC$Message == null || (tLRPC$MessageMedia = tLRPC$Message.media) == null || (tLRPC$WebPage = tLRPC$MessageMedia.webpage) == null || (tLRPC$Document = tLRPC$WebPage.document) == null) ? closestPhotoSizeWithSize : FileLoader.getClosestPhotoSizeWithSize(tLRPC$Document.thumbs, 40);
                                        tLObject = tLRPC$Message2.media.webpage.document;
                                    }
                                }
                            }
                        }
                    }
                    if ((tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) && (closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize)) {
                        ImageLoader.getInstance().replaceImageInCache("stripped" + FileRefController.getKeyForParentObject(messageObject), tLRPC$Message == null ? "stripped" + FileRefController.getKeyForParentObject(tLRPC$Message) : "strippedmessage" + i + "_" + messageObject.getChannelId() + "_" + messageObject.scheduled, ImageLocation.getForObject(tLRPC$PhotoSize, tLObject), z);
                    }
                }
            }
            closestPhotoSizeWithSize = null;
            tLRPC$PhotoSize = null;
            tLObject = null;
            if (tLRPC$PhotoSize instanceof TLRPC$TL_photoStrippedSize) {
                if (tLRPC$Message == null) {
                }
                ImageLoader.getInstance().replaceImageInCache("stripped" + FileRefController.getKeyForParentObject(messageObject), tLRPC$Message == null ? "stripped" + FileRefController.getKeyForParentObject(tLRPC$Message) : "strippedmessage" + i + "_" + messageObject.getChannelId() + "_" + messageObject.scheduled, ImageLocation.getForObject(tLRPC$PhotoSize, tLObject), z);
            }
        } else {
            tLRPC$PhotoSize = null;
        }
        if (tLRPC$Message == null) {
            return;
        }
        TLRPC$MessageMedia tLRPC$MessageMedia8 = tLRPC$Message.media;
        int i2 = 1;
        if ((tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaPhoto) && tLRPC$MessageMedia8.photo != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia9 = tLRPC$Message2.media;
            if ((tLRPC$MessageMedia9 instanceof TLRPC$TL_messageMediaPhoto) && tLRPC$MessageMedia9.photo != null) {
                if (tLRPC$MessageMedia8.ttl_seconds == 0 && !messageObject.scheduled) {
                    getMessagesStorage().putSentFile(str, tLRPC$Message.media.photo, 0, "sent_" + tLRPC$Message.peer_id.channel_id + "_" + tLRPC$Message.id + "_" + DialogObject.getPeerDialogId(tLRPC$Message.peer_id) + "_1_" + messageObject.getSize());
                }
                if (tLRPC$Message2.media.photo.sizes.size() == 1 && (tLRPC$Message2.media.photo.sizes.get(0).location instanceof TLRPC$TL_fileLocationUnavailable)) {
                    tLRPC$Message2.media.photo.sizes = tLRPC$Message.media.photo.sizes;
                } else {
                    int i3 = 0;
                    while (i3 < tLRPC$Message2.media.photo.sizes.size()) {
                        TLRPC$PhotoSize tLRPC$PhotoSize2 = tLRPC$Message2.media.photo.sizes.get(i3);
                        if (tLRPC$PhotoSize2 != null && tLRPC$PhotoSize2.location != null && tLRPC$PhotoSize2.type != null) {
                            int i4 = 0;
                            while (i4 < tLRPC$Message.media.photo.sizes.size()) {
                                TLRPC$PhotoSize tLRPC$PhotoSize3 = tLRPC$Message.media.photo.sizes.get(i4);
                                if (tLRPC$PhotoSize3 == null || tLRPC$PhotoSize3.location == null || (tLRPC$PhotoSize3 instanceof TLRPC$TL_photoSizeEmpty) || (str3 = tLRPC$PhotoSize3.type) == null || !((tLRPC$PhotoSize2.location.volume_id == -2147483648L && str3.equals(tLRPC$PhotoSize2.type)) || (tLRPC$PhotoSize3.w == tLRPC$PhotoSize2.w && tLRPC$PhotoSize3.h == tLRPC$PhotoSize2.h))) {
                                    i4++;
                                    i2 = 1;
                                } else {
                                    String str4 = tLRPC$PhotoSize2.location.volume_id + "_" + tLRPC$PhotoSize2.location.local_id;
                                    String str5 = tLRPC$PhotoSize3.location.volume_id + "_" + tLRPC$PhotoSize3.location.local_id;
                                    if (!str4.equals(str5)) {
                                        File file2 = new File(FileLoader.getDirectory(4), str4 + ".jpg");
                                        TLRPC$MessageMedia tLRPC$MessageMedia10 = tLRPC$Message.media;
                                        if (tLRPC$MessageMedia10.ttl_seconds == 0 && (tLRPC$MessageMedia10.photo.sizes.size() == i2 || tLRPC$PhotoSize3.w > 90 || tLRPC$PhotoSize3.h > 90)) {
                                            file = FileLoader.getInstance(this.currentAccount).getPathToAttach(tLRPC$PhotoSize3);
                                        } else {
                                            file = new File(FileLoader.getDirectory(4), str5 + ".jpg");
                                        }
                                        file2.renameTo(file);
                                        ImageLoader.getInstance().replaceImageInCache(str4, str5, ImageLocation.getForPhoto(tLRPC$PhotoSize3, tLRPC$Message.media.photo), z);
                                        tLRPC$PhotoSize2.location = tLRPC$PhotoSize3.location;
                                        tLRPC$PhotoSize2.size = tLRPC$PhotoSize3.size;
                                    }
                                    z3 = true;
                                    if (!z3) {
                                        String str6 = tLRPC$PhotoSize2.location.volume_id + "_" + tLRPC$PhotoSize2.location.local_id;
                                        new File(FileLoader.getDirectory(4), str6 + ".jpg").delete();
                                        if ("s".equals(tLRPC$PhotoSize2.type) && tLRPC$PhotoSize != null) {
                                            tLRPC$Message2.media.photo.sizes.set(i3, tLRPC$PhotoSize);
                                            ImageLocation forPhoto = ImageLocation.getForPhoto(tLRPC$PhotoSize, tLRPC$Message.media.photo);
                                            ImageLoader.getInstance().replaceImageInCache(str6, forPhoto.getKey(tLRPC$Message, null, false), forPhoto, z);
                                            i3++;
                                            i2 = 1;
                                        }
                                    }
                                }
                            }
                            z3 = false;
                            if (!z3) {
                            }
                        }
                        i3++;
                        i2 = 1;
                    }
                }
                tLRPC$Message2.message = tLRPC$Message.message;
                tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                TLRPC$Photo tLRPC$Photo5 = tLRPC$Message2.media.photo;
                TLRPC$Photo tLRPC$Photo6 = tLRPC$Message.media.photo;
                tLRPC$Photo5.id = tLRPC$Photo6.id;
                tLRPC$Photo5.dc_id = tLRPC$Photo6.dc_id;
                tLRPC$Photo5.access_hash = tLRPC$Photo6.access_hash;
                return;
            }
        }
        if ((tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaDocument) && tLRPC$MessageMedia8.document != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia11 = tLRPC$Message2.media;
            if ((tLRPC$MessageMedia11 instanceof TLRPC$TL_messageMediaDocument) && tLRPC$MessageMedia11.document != null) {
                if (tLRPC$MessageMedia8.ttl_seconds == 0 && ((videoEditedInfo = messageObject.videoEditedInfo) == null || (videoEditedInfo.mediaEntities == null && TextUtils.isEmpty(videoEditedInfo.paintPath) && messageObject.videoEditedInfo.cropState == null))) {
                    boolean isVideoMessage = MessageObject.isVideoMessage(tLRPC$Message);
                    if ((isVideoMessage || MessageObject.isGifMessage(tLRPC$Message)) && MessageObject.isGifDocument(tLRPC$Message.media.document) == MessageObject.isGifDocument(tLRPC$Message2.media.document)) {
                        if (!messageObject.scheduled) {
                            MessageObject messageObject2 = new MessageObject(this.currentAccount, tLRPC$Message, false, false);
                            getMessagesStorage().putSentFile(str, tLRPC$Message.media.document, 2, "sent_" + tLRPC$Message.peer_id.channel_id + "_" + tLRPC$Message.id + "_" + DialogObject.getPeerDialogId(tLRPC$Message.peer_id) + "_" + messageObject2.type + "_" + messageObject2.getSize());
                        }
                        if (isVideoMessage) {
                            tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                        }
                    } else if (!MessageObject.isVoiceMessage(tLRPC$Message) && !MessageObject.isRoundVideoMessage(tLRPC$Message) && !messageObject.scheduled) {
                        MessageObject messageObject3 = new MessageObject(this.currentAccount, tLRPC$Message, false, false);
                        getMessagesStorage().putSentFile(str, tLRPC$Message.media.document, 1, "sent_" + tLRPC$Message.peer_id.channel_id + "_" + tLRPC$Message.id + "_" + DialogObject.getPeerDialogId(tLRPC$Message.peer_id) + "_" + messageObject3.type + "_" + messageObject3.getSize());
                    }
                }
                TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Message2.media.document.thumbs, 320);
                TLRPC$PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$Message.media.document.thumbs, 320);
                if (closestPhotoSizeWithSize2 != null && (tLRPC$FileLocation2 = closestPhotoSizeWithSize2.location) != null && tLRPC$FileLocation2.volume_id == -2147483648L && closestPhotoSizeWithSize3 != null && closestPhotoSizeWithSize3.location != null && !(closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoSizeEmpty) && !(closestPhotoSizeWithSize2 instanceof TLRPC$TL_photoSizeEmpty)) {
                    String str7 = closestPhotoSizeWithSize2.location.volume_id + "_" + closestPhotoSizeWithSize2.location.local_id;
                    String str8 = closestPhotoSizeWithSize3.location.volume_id + "_" + closestPhotoSizeWithSize3.location.local_id;
                    if (!str7.equals(str8)) {
                        new File(FileLoader.getDirectory(4), str7 + ".jpg").renameTo(new File(FileLoader.getDirectory(4), str8 + ".jpg"));
                        ImageLoader.getInstance().replaceImageInCache(str7, str8, ImageLocation.getForDocument(closestPhotoSizeWithSize3, tLRPC$Message.media.document), z);
                        closestPhotoSizeWithSize2.location = closestPhotoSizeWithSize3.location;
                        closestPhotoSizeWithSize2.size = closestPhotoSizeWithSize3.size;
                    }
                } else if (closestPhotoSizeWithSize3 != null && closestPhotoSizeWithSize2 != null && MessageObject.isStickerMessage(tLRPC$Message) && (tLRPC$FileLocation = closestPhotoSizeWithSize2.location) != null) {
                    closestPhotoSizeWithSize3.location = tLRPC$FileLocation;
                } else if (closestPhotoSizeWithSize2 == null || (closestPhotoSizeWithSize2.location instanceof TLRPC$TL_fileLocationUnavailable) || (closestPhotoSizeWithSize2 instanceof TLRPC$TL_photoSizeEmpty)) {
                    tLRPC$Message2.media.document.thumbs = tLRPC$Message.media.document.thumbs;
                }
                TLRPC$Document tLRPC$Document5 = tLRPC$Message2.media.document;
                TLRPC$Document tLRPC$Document6 = tLRPC$Message.media.document;
                tLRPC$Document5.dc_id = tLRPC$Document6.dc_id;
                tLRPC$Document5.id = tLRPC$Document6.id;
                tLRPC$Document5.access_hash = tLRPC$Document6.access_hash;
                int i5 = 0;
                while (true) {
                    if (i5 >= tLRPC$Message2.media.document.attributes.size()) {
                        bArr = null;
                        break;
                    }
                    TLRPC$DocumentAttribute tLRPC$DocumentAttribute = tLRPC$Message2.media.document.attributes.get(i5);
                    if (tLRPC$DocumentAttribute instanceof TLRPC$TL_documentAttributeAudio) {
                        bArr = tLRPC$DocumentAttribute.waveform;
                        break;
                    }
                    i5++;
                }
                tLRPC$Message2.media.document.attributes = tLRPC$Message.media.document.attributes;
                if (bArr != null) {
                    for (int i6 = 0; i6 < tLRPC$Message2.media.document.attributes.size(); i6++) {
                        TLRPC$DocumentAttribute tLRPC$DocumentAttribute2 = tLRPC$Message2.media.document.attributes.get(i6);
                        if (tLRPC$DocumentAttribute2 instanceof TLRPC$TL_documentAttributeAudio) {
                            tLRPC$DocumentAttribute2.waveform = bArr;
                            tLRPC$DocumentAttribute2.flags |= 4;
                        }
                    }
                }
                TLRPC$Document tLRPC$Document7 = tLRPC$Message2.media.document;
                TLRPC$Document tLRPC$Document8 = tLRPC$Message.media.document;
                tLRPC$Document7.size = tLRPC$Document8.size;
                tLRPC$Document7.mime_type = tLRPC$Document8.mime_type;
                if ((tLRPC$Message.flags & 4) == 0 && ((MessageObject.isOut(tLRPC$Message) || tLRPC$Message.dialog_id == getUserConfig().getClientUserId()) && !MessageObject.isQuickReply(tLRPC$Message))) {
                    if (MessageObject.isNewGifDocument(tLRPC$Message.media.document)) {
                        if (MessageObject.isDocumentHasAttachedStickers(tLRPC$Message.media.document) ? getMessagesController().saveGifsWithStickers : true) {
                            getMediaDataController().addRecentGif(tLRPC$Message.media.document, tLRPC$Message.date, true);
                        }
                    } else if (MessageObject.isStickerDocument(tLRPC$Message.media.document) || MessageObject.isAnimatedStickerDocument(tLRPC$Message.media.document, true)) {
                        z2 = true;
                        getMediaDataController().addRecentSticker(0, tLRPC$Message, tLRPC$Message.media.document, tLRPC$Message.date, false);
                        str2 = tLRPC$Message2.attachPath;
                        if (str2 == null && str2.startsWith(FileLoader.getDirectory(4).getAbsolutePath()) && !MessageObject.isGifDocument(tLRPC$Message.media.document)) {
                            File file3 = new File(tLRPC$Message2.attachPath);
                            FileLoader fileLoader = FileLoader.getInstance(this.currentAccount);
                            TLRPC$MessageMedia tLRPC$MessageMedia12 = tLRPC$Message.media;
                            File pathToAttach = fileLoader.getPathToAttach(tLRPC$MessageMedia12.document, tLRPC$MessageMedia12.ttl_seconds != 0);
                            if (!file3.renameTo(pathToAttach)) {
                                if (file3.exists()) {
                                    tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                                } else {
                                    messageObject.attachPathExists = false;
                                }
                                messageObject.mediaExists = pathToAttach.exists();
                                tLRPC$Message.message = tLRPC$Message2.message;
                                return;
                            } else if (MessageObject.isVideoMessage(tLRPC$Message)) {
                                messageObject.attachPathExists = z2;
                                return;
                            } else {
                                messageObject.mediaExists = messageObject.attachPathExists;
                                messageObject.attachPathExists = false;
                                tLRPC$Message2.attachPath = "";
                                if (str == null || !str.startsWith("http")) {
                                    return;
                                }
                                getMessagesStorage().addRecentLocalFile(str, pathToAttach.toString(), tLRPC$Message2.media.document);
                                return;
                            }
                        }
                        tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                        tLRPC$Message.message = tLRPC$Message2.message;
                        return;
                    }
                }
                z2 = true;
                str2 = tLRPC$Message2.attachPath;
                if (str2 == null) {
                }
                tLRPC$Message.attachPath = tLRPC$Message2.attachPath;
                tLRPC$Message.message = tLRPC$Message2.message;
                return;
            }
        }
        if ((tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaContact) && (tLRPC$Message2.media instanceof TLRPC$TL_messageMediaContact)) {
            tLRPC$Message2.media = tLRPC$MessageMedia8;
        } else if (tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaWebPage) {
            tLRPC$Message2.media = tLRPC$MessageMedia8;
        } else if (tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaGeo) {
            TLRPC$GeoPoint tLRPC$GeoPoint = tLRPC$MessageMedia8.geo;
            TLRPC$GeoPoint tLRPC$GeoPoint2 = tLRPC$Message2.media.geo;
            tLRPC$GeoPoint.lat = tLRPC$GeoPoint2.lat;
            tLRPC$GeoPoint._long = tLRPC$GeoPoint2._long;
        } else if ((tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaGame) || (tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaInvoice)) {
            tLRPC$Message2.media = tLRPC$MessageMedia8;
            if (!TextUtils.isEmpty(tLRPC$Message.message)) {
                tLRPC$Message2.entities = tLRPC$Message.entities;
                tLRPC$Message2.message = tLRPC$Message.message;
            }
            TLRPC$ReplyMarkup tLRPC$ReplyMarkup = tLRPC$Message.reply_markup;
            if (tLRPC$ReplyMarkup != null) {
                tLRPC$Message2.reply_markup = tLRPC$ReplyMarkup;
                tLRPC$Message2.flags |= 64;
            }
        } else if (tLRPC$MessageMedia8 instanceof TLRPC$TL_messageMediaPoll) {
            tLRPC$Message2.media = tLRPC$MessageMedia8;
        }
    }

    private void putToDelayedMessages(String str, DelayedMessage delayedMessage) {
        ArrayList<DelayedMessage> arrayList = this.delayedMessages.get(str);
        if (arrayList == null) {
            arrayList = new ArrayList<>();
            this.delayedMessages.put(str, arrayList);
        }
        arrayList.add(delayedMessage);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public ArrayList<DelayedMessage> getDelayedMessages(String str) {
        return this.delayedMessages.get(str);
    }

    public long getNextRandomId() {
        long j = 0;
        while (j == 0) {
            j = Utilities.random.nextLong();
        }
        return j;
    }

    public void checkUnsentMessages() {
        getMessagesStorage().getUnsentMessages(1000);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void processUnsentMessages(final ArrayList<TLRPC$Message> arrayList, final ArrayList<TLRPC$Message> arrayList2, final ArrayList<TLRPC$User> arrayList3, final ArrayList<TLRPC$Chat> arrayList4, final ArrayList<TLRPC$EncryptedChat> arrayList5) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda33
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$processUnsentMessages$65(arrayList3, arrayList4, arrayList5, arrayList, arrayList2);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$processUnsentMessages$65(ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, ArrayList arrayList4, ArrayList arrayList5) {
        HashMap<String, String> hashMap;
        getMessagesController().putUsers(arrayList, true);
        getMessagesController().putChats(arrayList2, true);
        getMessagesController().putEncryptedChats(arrayList3, true);
        int size = arrayList4.size();
        for (int i = 0; i < size; i++) {
            MessageObject messageObject = new MessageObject(this.currentAccount, (TLRPC$Message) arrayList4.get(i), false, true);
            long groupId = messageObject.getGroupId();
            if (groupId != 0 && (hashMap = messageObject.messageOwner.params) != null && !hashMap.containsKey("final") && (i == size - 1 || ((TLRPC$Message) arrayList4.get(i + 1)).grouped_id != groupId)) {
                messageObject.messageOwner.params.put("final", "1");
            }
            retrySendMessage(messageObject, true);
        }
        if (arrayList5 != null) {
            for (int i2 = 0; i2 < arrayList5.size(); i2++) {
                MessageObject messageObject2 = new MessageObject(this.currentAccount, (TLRPC$Message) arrayList5.get(i2), false, true);
                messageObject2.scheduled = true;
                retrySendMessage(messageObject2, true);
            }
        }
    }

    public ImportingStickers getImportingStickers(String str) {
        return this.importingStickersMap.get(str);
    }

    public ImportingHistory getImportingHistory(long j) {
        return this.importingHistoryMap.get(j);
    }

    public boolean isImportingStickers() {
        return this.importingStickersMap.size() != 0;
    }

    public boolean isImportingHistory() {
        return this.importingHistoryMap.size() != 0;
    }

    public void prepareImportHistory(final long j, final Uri uri, final ArrayList<Uri> arrayList, final MessagesStorage.LongCallback longCallback) {
        if (this.importingHistoryMap.get(j) != null) {
            longCallback.run(0L);
            return;
        }
        if (DialogObject.isChatDialog(j)) {
            long j2 = -j;
            TLRPC$Chat chat = getMessagesController().getChat(Long.valueOf(j2));
            if (chat != null && !chat.megagroup) {
                getMessagesController().convertToMegaGroup(null, j2, null, new MessagesStorage.LongCallback() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda79
                    @Override // org.telegram.messenger.MessagesStorage.LongCallback
                    public final void run(long j3) {
                        SendMessagesHelper.this.lambda$prepareImportHistory$66(uri, arrayList, longCallback, j3);
                    }
                });
                return;
            }
        }
        new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda32
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$prepareImportHistory$71(arrayList, j, uri, longCallback);
            }
        }).start();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportHistory$66(Uri uri, ArrayList arrayList, MessagesStorage.LongCallback longCallback, long j) {
        if (j != 0) {
            prepareImportHistory(-j, uri, arrayList, longCallback);
        } else {
            longCallback.run(0L);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportHistory$71(ArrayList arrayList, final long j, Uri uri, final MessagesStorage.LongCallback longCallback) {
        ArrayList arrayList2 = arrayList != null ? arrayList : new ArrayList();
        final ImportingHistory importingHistory = new ImportingHistory();
        importingHistory.mediaPaths = arrayList2;
        importingHistory.dialogId = j;
        importingHistory.peer = getMessagesController().getInputPeer(j);
        final HashMap hashMap = new HashMap();
        int i = 0;
        int size = arrayList2.size();
        while (i < size + 1) {
            Uri uri2 = i == 0 ? uri : (Uri) arrayList2.get(i - 1);
            if (uri2 != null && !AndroidUtilities.isInternalUri(uri2)) {
                String copyFileToCache = MediaController.copyFileToCache(uri2, "txt");
                if (copyFileToCache == null) {
                    continue;
                } else {
                    File file = new File(copyFileToCache);
                    if (file.exists()) {
                        long length = file.length();
                        if (length != 0) {
                            importingHistory.totalSize += length;
                            if (i != 0) {
                                importingHistory.uploadMedia.add(copyFileToCache);
                            } else if (length > 33554432) {
                                file.delete();
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda17
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareImportHistory$69(MessagesStorage.LongCallback.this);
                                    }
                                });
                                return;
                            } else {
                                importingHistory.historyPath = copyFileToCache;
                            }
                            importingHistory.uploadSet.add(copyFileToCache);
                            hashMap.put(copyFileToCache, importingHistory);
                        }
                    }
                    if (i == 0) {
                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda19
                            @Override // java.lang.Runnable
                            public final void run() {
                                MessagesStorage.LongCallback.this.run(0L);
                            }
                        });
                        return;
                    }
                }
            } else if (i == 0) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda18
                    @Override // java.lang.Runnable
                    public final void run() {
                        MessagesStorage.LongCallback.this.run(0L);
                    }
                });
                return;
            }
            i++;
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda36
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$prepareImportHistory$70(hashMap, j, importingHistory, longCallback);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareImportHistory$69(MessagesStorage.LongCallback longCallback) {
        Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("ImportFileTooLarge", R.string.ImportFileTooLarge), 0).show();
        longCallback.run(0L);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportHistory$70(HashMap hashMap, long j, ImportingHistory importingHistory, MessagesStorage.LongCallback longCallback) {
        this.importingHistoryFiles.putAll(hashMap);
        this.importingHistoryMap.put(j, importingHistory);
        getFileLoader().uploadFile(importingHistory.historyPath, false, true, 0L, ConnectionsManager.FileTypeFile, true);
        getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, Long.valueOf(j));
        longCallback.run(j);
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public void prepareImportStickers(final String str, final String str2, final String str3, final ArrayList<ImportingSticker> arrayList, final MessagesStorage.StringCallback stringCallback) {
        if (this.importingStickersMap.get(str2) != null) {
            stringCallback.run(null);
        } else {
            new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda28
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.this.lambda$prepareImportStickers$74(str, str2, str3, arrayList, stringCallback);
                }
            }).start();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportStickers$74(String str, final String str2, String str3, ArrayList arrayList, final MessagesStorage.StringCallback stringCallback) {
        final ImportingStickers importingStickers = new ImportingStickers();
        importingStickers.title = str;
        importingStickers.shortName = str2;
        importingStickers.software = str3;
        final HashMap hashMap = new HashMap();
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            ImportingSticker importingSticker = (ImportingSticker) arrayList.get(i);
            File file = new File(importingSticker.path);
            if (file.exists()) {
                long length = file.length();
                if (length != 0) {
                    importingStickers.totalSize += length;
                    importingStickers.uploadMedia.add(importingSticker);
                    importingStickers.uploadSet.put(importingSticker.path, importingSticker);
                    hashMap.put(importingSticker.path, importingStickers);
                }
            }
            if (i == 0) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda20
                    @Override // java.lang.Runnable
                    public final void run() {
                        MessagesStorage.StringCallback.this.run(null);
                    }
                });
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda41
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.this.lambda$prepareImportStickers$73(importingStickers, hashMap, str2, stringCallback);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public /* synthetic */ void lambda$prepareImportStickers$73(ImportingStickers importingStickers, HashMap hashMap, String str, MessagesStorage.StringCallback stringCallback) {
        if (importingStickers.uploadMedia.get(0).item != null) {
            importingStickers.startImport();
        } else {
            this.importingStickersFiles.putAll(hashMap);
            this.importingStickersMap.put(str, importingStickers);
            importingStickers.initImport();
            getNotificationCenter().lambda$postNotificationNameOnUIThread$1(NotificationCenter.historyImportProgressChanged, str);
            stringCallback.run(str);
        }
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public TLRPC$TL_photo generatePhotoSizes(String str, Uri uri) {
        return generatePhotoSizes(null, str, uri);
    }

    public TLRPC$TL_photo generatePhotoSizes(TLRPC$TL_photo tLRPC$TL_photo, String str, Uri uri) {
        Bitmap loadBitmap = ImageLoader.loadBitmap(str, uri, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true);
        if (loadBitmap == null) {
            loadBitmap = ImageLoader.loadBitmap(str, uri, 800.0f, 800.0f, true);
        }
        ArrayList<TLRPC$PhotoSize> arrayList = new ArrayList<>();
        TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, true);
        if (scaleAndSaveImage != null) {
            arrayList.add(scaleAndSaveImage);
        }
        TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(loadBitmap, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true, 80, false, 101, 101);
        if (scaleAndSaveImage2 != null) {
            arrayList.add(scaleAndSaveImage2);
        }
        if (loadBitmap != null) {
            loadBitmap.recycle();
        }
        if (arrayList.isEmpty()) {
            return null;
        }
        getUserConfig().saveConfig(false);
        if (tLRPC$TL_photo == null) {
            tLRPC$TL_photo = new TLRPC$TL_photo();
        }
        tLRPC$TL_photo.date = getConnectionsManager().getCurrentTime();
        tLRPC$TL_photo.sizes = arrayList;
        tLRPC$TL_photo.file_reference = new byte[0];
        return tLRPC$TL_photo;
    }

    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Can't wrap try/catch for region: R(28:(5:245|246|247|248|(10:250|251|252|253|254|255|256|257|258|259)(1:298))|(3:269|270|(28:272|273|(25:275|263|264|265|(7:53|(1:55)|56|(1:58)|59|(1:61)|62)(1:244)|(2:64|(18:66|67|(1:237)(7:70|(1:72)(1:236)|73|(1:235)(1:77)|(1:234)(4:82|(1:84)(1:233)|85|(2:89|90))|232|90)|91|(11:93|(1:95)|96|(3:98|99|101)(1:230)|(3:111|112|(10:114|115|116|117|(1:119)|120|121|(1:197)(8:124|125|126|127|128|129|130|(3:137|(1:139)|140))|190|140))|204|121|(0)|197|190|140)(1:231)|(1:142)(1:189)|143|(1:145)|146|(1:149)|(1:151)|152|(2:154|(2:174|(2:184|(1:186)(1:187))(1:180))(4:158|(1:173)(2:(1:172)(1:165)|(2:167|(1:169)))|170|171))(1:188)|181|(0)|173|170|171)(2:(1:239)(1:242)|240))(1:243)|241|67|(0)|237|91|(0)(0)|(0)(0)|143|(0)|146|(1:149)|(0)|152|(0)(0)|181|(0)|173|170|171)|262|263|264|265|(0)(0)|(0)(0)|241|67|(0)|237|91|(0)(0)|(0)(0)|143|(0)|146|(0)|(0)|152|(0)(0)|181|(0)|173|170|171))|261|262|263|264|265|(0)(0)|(0)(0)|241|67|(0)|237|91|(0)(0)|(0)(0)|143|(0)|146|(0)|(0)|152|(0)(0)|181|(0)|173|170|171) */
    /* JADX WARN: Code restructure failed: missing block: B:32:0x0058, code lost:
        if (r3 == false) goto L330;
     */
    /* JADX WARN: Code restructure failed: missing block: B:95:0x0149, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:96:0x014a, code lost:
        org.telegram.messenger.FileLog.e(r0);
     */
    /* JADX WARN: Removed duplicated region for block: B:124:0x019f  */
    /* JADX WARN: Removed duplicated region for block: B:127:0x01b7  */
    /* JADX WARN: Removed duplicated region for block: B:132:0x01c3  */
    /* JADX WARN: Removed duplicated region for block: B:142:0x01e7  */
    /* JADX WARN: Removed duplicated region for block: B:144:0x01ea  */
    /* JADX WARN: Removed duplicated region for block: B:151:0x0228  */
    /* JADX WARN: Removed duplicated region for block: B:155:0x022e A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:185:0x02dd  */
    /* JADX WARN: Removed duplicated region for block: B:252:0x03ea A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:272:0x0480  */
    /* JADX WARN: Removed duplicated region for block: B:276:0x0492  */
    /* JADX WARN: Removed duplicated region for block: B:278:0x049c  */
    /* JADX WARN: Removed duplicated region for block: B:279:0x04a2  */
    /* JADX WARN: Removed duplicated region for block: B:282:0x04ac  */
    /* JADX WARN: Removed duplicated region for block: B:285:0x04b5 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:288:0x04be  */
    /* JADX WARN: Removed duplicated region for block: B:291:0x04ca  */
    /* JADX WARN: Removed duplicated region for block: B:309:0x0524  */
    /* JADX WARN: Removed duplicated region for block: B:312:0x0529 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:348:0x0175 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private static int prepareSendingDocumentInternal(final AccountInstance accountInstance, String str, String str2, Uri uri, String str3, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final ArrayList<TLRPC$MessageEntity> arrayList, final MessageObject messageObject3, long[] jArr, boolean z, CharSequence charSequence, final boolean z2, final int i, Integer[] numArr, boolean z3, final String str4, final int i2, final long j2, final boolean z4) {
        String str5;
        String str6;
        String str7;
        String lowerCase;
        String str8;
        Object obj;
        Object obj2;
        AudioInfo audioInfo;
        String str9;
        int i3;
        String str10;
        String str11;
        boolean z5;
        TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio;
        String str12;
        boolean z6;
        String str13;
        boolean z7;
        String str14;
        Object obj3;
        String str15;
        Object obj4;
        String str16;
        int i4;
        MimeTypeMap mimeTypeMap;
        long j3;
        final String str17;
        TLRPC$TL_document tLRPC$TL_document;
        String str18;
        boolean z8;
        String str19;
        TLRPC$TL_document tLRPC$TL_document2;
        final HashMap hashMap;
        String str20;
        char c;
        boolean z9;
        int i5;
        int i6;
        TLRPC$PhotoSize scaleAndSaveImage;
        Bitmap loadBitmap;
        char c2;
        String str21;
        TLRPC$TL_document tLRPC$TL_document3;
        String str22;
        TLRPC$TL_document tLRPC$TL_document4;
        String str23;
        String str24;
        Throwable th;
        MediaMetadataRetriever mediaMetadataRetriever;
        MediaMetadataRetriever mediaMetadataRetriever2;
        int i7;
        String str25;
        String str26;
        String extractMetadata;
        String str27;
        String str28;
        boolean z10;
        boolean z11;
        if ((str == null || str.length() == 0) && uri == null) {
            return 1;
        }
        if (uri == null || !AndroidUtilities.isInternalUri(uri)) {
            if (str == null || !AndroidUtilities.isInternalUri(Uri.fromFile(new File(str)))) {
                MimeTypeMap singleton = MimeTypeMap.getSingleton();
                if (uri == null || str != null) {
                    str5 = str;
                } else if (checkFileSize(accountInstance, uri)) {
                    return 2;
                } else {
                    str6 = str3 != null ? singleton.getExtensionFromMimeType(str3) : null;
                    if (str6 == null) {
                        str6 = "txt";
                        z11 = false;
                    } else {
                        z11 = true;
                    }
                    String copyFileToCache = MediaController.copyFileToCache(uri, str6);
                    if (copyFileToCache == null) {
                        return 1;
                    }
                    str5 = copyFileToCache;
                }
                str6 = null;
                File file = new File(str5);
                if (!file.exists() || file.length() == 0) {
                    return 1;
                }
                if (FileLoader.checkUploadFileSize(accountInstance.getCurrentAccount(), file.length())) {
                    boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
                    String name = file.getName();
                    if (str6 == null) {
                        int lastIndexOf = str5.lastIndexOf(46);
                        if (lastIndexOf != -1) {
                            str6 = str5.substring(lastIndexOf + 1);
                        } else {
                            str7 = "";
                            lowerCase = str7.toLowerCase();
                            if (!lowerCase.equals("mp3") || lowerCase.equals("m4a")) {
                                str8 = name;
                                obj = "flac";
                                obj2 = "opus";
                                audioInfo = AudioInfo.getAudioInfo(file);
                                if (audioInfo == null) {
                                    long duration = audioInfo.getDuration();
                                    if (duration != 0) {
                                        str10 = audioInfo.getArtist();
                                        str9 = audioInfo.getTitle();
                                        i3 = (int) (duration / 1000);
                                        str11 = str10;
                                    }
                                }
                                str9 = null;
                                i3 = 0;
                                str10 = null;
                                str11 = str10;
                            } else if (lowerCase.equals("opus") || lowerCase.equals("ogg") || lowerCase.equals("flac")) {
                                try {
                                    mediaMetadataRetriever2 = new MediaMetadataRetriever();
                                    try {
                                        try {
                                            mediaMetadataRetriever2.setDataSource(file.getAbsolutePath());
                                            if (mediaMetadataRetriever2.extractMetadata(9) != null) {
                                                obj = "flac";
                                                obj2 = "opus";
                                                try {
                                                    i7 = (int) Math.ceil(((float) Long.parseLong(extractMetadata)) / 1000.0f);
                                                    try {
                                                        str25 = mediaMetadataRetriever2.extractMetadata(7);
                                                        str8 = name;
                                                    } catch (Exception e) {
                                                        e = e;
                                                        str8 = name;
                                                        str25 = null;
                                                        str26 = null;
                                                        FileLog.e(e);
                                                        if (mediaMetadataRetriever2 != null) {
                                                            try {
                                                                mediaMetadataRetriever2.release();
                                                            } catch (Exception e2) {
                                                                FileLog.e(e2);
                                                            }
                                                        }
                                                        i3 = i7;
                                                        str9 = str25;
                                                        str11 = str26;
                                                        z5 = false;
                                                        if (i3 != 0) {
                                                        }
                                                        if (str2 == null) {
                                                        }
                                                        z6 = false;
                                                        if (z6) {
                                                        }
                                                        str13 = "";
                                                        z7 = isEncryptedDialog;
                                                        str14 = str12;
                                                        obj3 = "m4a";
                                                        str15 = str5;
                                                        obj4 = obj;
                                                        str16 = str8;
                                                        i4 = -1;
                                                        mimeTypeMap = singleton;
                                                        j3 = 0;
                                                        str17 = null;
                                                        tLRPC$TL_document = null;
                                                        if (tLRPC$TL_document != null) {
                                                        }
                                                        if (charSequence != null) {
                                                        }
                                                        hashMap = new HashMap();
                                                        str20 = str14;
                                                        if (str20 != null) {
                                                        }
                                                        if (z3) {
                                                        }
                                                        if (str17 != null) {
                                                        }
                                                        int i8 = 0;
                                                        if (numArr != null) {
                                                        }
                                                        z9 = false;
                                                        if (z8) {
                                                        }
                                                        final TLRPC$TL_document tLRPC$TL_document5 = tLRPC$TL_document2;
                                                        final String str29 = str18;
                                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                            @Override // java.lang.Runnable
                                                            public final void run() {
                                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document5, str29, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                            }
                                                        });
                                                        return 0;
                                                    }
                                                    try {
                                                        str27 = mediaMetadataRetriever2.extractMetadata(2);
                                                    } catch (Exception e3) {
                                                        e = e3;
                                                        str26 = null;
                                                        FileLog.e(e);
                                                        if (mediaMetadataRetriever2 != null) {
                                                        }
                                                        i3 = i7;
                                                        str9 = str25;
                                                        str11 = str26;
                                                        z5 = false;
                                                        if (i3 != 0) {
                                                        }
                                                        if (str2 == null) {
                                                        }
                                                        z6 = false;
                                                        if (z6) {
                                                        }
                                                        str13 = "";
                                                        z7 = isEncryptedDialog;
                                                        str14 = str12;
                                                        obj3 = "m4a";
                                                        str15 = str5;
                                                        obj4 = obj;
                                                        str16 = str8;
                                                        i4 = -1;
                                                        mimeTypeMap = singleton;
                                                        j3 = 0;
                                                        str17 = null;
                                                        tLRPC$TL_document = null;
                                                        if (tLRPC$TL_document != null) {
                                                        }
                                                        if (charSequence != null) {
                                                        }
                                                        hashMap = new HashMap();
                                                        str20 = str14;
                                                        if (str20 != null) {
                                                        }
                                                        if (z3) {
                                                        }
                                                        if (str17 != null) {
                                                        }
                                                        int i82 = 0;
                                                        if (numArr != null) {
                                                        }
                                                        z9 = false;
                                                        if (z8) {
                                                        }
                                                        final TLRPC$TL_document tLRPC$TL_document52 = tLRPC$TL_document2;
                                                        final String str292 = str18;
                                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                            @Override // java.lang.Runnable
                                                            public final void run() {
                                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document52, str292, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                            }
                                                        });
                                                        return 0;
                                                    }
                                                } catch (Exception e4) {
                                                    e = e4;
                                                    str8 = name;
                                                    i7 = 0;
                                                    str25 = null;
                                                    str26 = null;
                                                    FileLog.e(e);
                                                    if (mediaMetadataRetriever2 != null) {
                                                    }
                                                    i3 = i7;
                                                    str9 = str25;
                                                    str11 = str26;
                                                    z5 = false;
                                                    if (i3 != 0) {
                                                    }
                                                    if (str2 == null) {
                                                    }
                                                    z6 = false;
                                                    if (z6) {
                                                    }
                                                    str13 = "";
                                                    z7 = isEncryptedDialog;
                                                    str14 = str12;
                                                    obj3 = "m4a";
                                                    str15 = str5;
                                                    obj4 = obj;
                                                    str16 = str8;
                                                    i4 = -1;
                                                    mimeTypeMap = singleton;
                                                    j3 = 0;
                                                    str17 = null;
                                                    tLRPC$TL_document = null;
                                                    if (tLRPC$TL_document != null) {
                                                    }
                                                    if (charSequence != null) {
                                                    }
                                                    hashMap = new HashMap();
                                                    str20 = str14;
                                                    if (str20 != null) {
                                                    }
                                                    if (z3) {
                                                    }
                                                    if (str17 != null) {
                                                    }
                                                    int i822 = 0;
                                                    if (numArr != null) {
                                                    }
                                                    z9 = false;
                                                    if (z8) {
                                                    }
                                                    final TLRPC$TL_document tLRPC$TL_document522 = tLRPC$TL_document2;
                                                    final String str2922 = str18;
                                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                        @Override // java.lang.Runnable
                                                        public final void run() {
                                                            SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document522, str2922, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                        }
                                                    });
                                                    return 0;
                                                }
                                            } else {
                                                str8 = name;
                                                obj = "flac";
                                                obj2 = "opus";
                                                str27 = null;
                                                i7 = 0;
                                                str25 = null;
                                            }
                                        } catch (Throwable th2) {
                                            th = th2;
                                            mediaMetadataRetriever = mediaMetadataRetriever2;
                                            if (mediaMetadataRetriever != null) {
                                                try {
                                                    mediaMetadataRetriever.release();
                                                } catch (Exception e5) {
                                                    FileLog.e(e5);
                                                }
                                            }
                                            throw th;
                                        }
                                    } catch (Exception e6) {
                                        e = e6;
                                        str8 = name;
                                        obj = "flac";
                                        obj2 = "opus";
                                    }
                                } catch (Exception e7) {
                                    e = e7;
                                    str8 = name;
                                    obj = "flac";
                                    obj2 = "opus";
                                    mediaMetadataRetriever2 = null;
                                } catch (Throwable th3) {
                                    th = th3;
                                    mediaMetadataRetriever = null;
                                }
                                if (messageObject3 == null) {
                                    try {
                                    } catch (Exception e8) {
                                        e = e8;
                                        str26 = str27;
                                        FileLog.e(e);
                                        if (mediaMetadataRetriever2 != null) {
                                        }
                                        i3 = i7;
                                        str9 = str25;
                                        str11 = str26;
                                        z5 = false;
                                        if (i3 != 0) {
                                        }
                                        if (str2 == null) {
                                        }
                                        z6 = false;
                                        if (z6) {
                                        }
                                        str13 = "";
                                        z7 = isEncryptedDialog;
                                        str14 = str12;
                                        obj3 = "m4a";
                                        str15 = str5;
                                        obj4 = obj;
                                        str16 = str8;
                                        i4 = -1;
                                        mimeTypeMap = singleton;
                                        j3 = 0;
                                        str17 = null;
                                        tLRPC$TL_document = null;
                                        if (tLRPC$TL_document != null) {
                                        }
                                        if (charSequence != null) {
                                        }
                                        hashMap = new HashMap();
                                        str20 = str14;
                                        if (str20 != null) {
                                        }
                                        if (z3) {
                                        }
                                        if (str17 != null) {
                                        }
                                        int i8222 = 0;
                                        if (numArr != null) {
                                        }
                                        z9 = false;
                                        if (z8) {
                                        }
                                        final TLRPC$TL_document tLRPC$TL_document5222 = tLRPC$TL_document2;
                                        final String str29222 = str18;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document5222, str29222, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                            }
                                        });
                                        return 0;
                                    }
                                    if (lowerCase.equals("ogg")) {
                                        str28 = str27;
                                        if (MediaController.isOpusFile(file.getAbsolutePath()) == 1) {
                                            z10 = true;
                                            mediaMetadataRetriever2.release();
                                            str9 = str25;
                                            str11 = str28;
                                            z5 = z10;
                                            i3 = i7;
                                            if (i3 != 0) {
                                                TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio2 = new TLRPC$TL_documentAttributeAudio();
                                                tLRPC$TL_documentAttributeAudio2.duration = i3;
                                                tLRPC$TL_documentAttributeAudio2.title = str9;
                                                tLRPC$TL_documentAttributeAudio2.performer = str11;
                                                if (str9 == null) {
                                                    tLRPC$TL_documentAttributeAudio2.title = "";
                                                }
                                                int i9 = tLRPC$TL_documentAttributeAudio2.flags | 1;
                                                tLRPC$TL_documentAttributeAudio2.flags = i9;
                                                if (str11 == null) {
                                                    tLRPC$TL_documentAttributeAudio2.performer = "";
                                                }
                                                tLRPC$TL_documentAttributeAudio2.flags = i9 | 2;
                                                if (z5) {
                                                    tLRPC$TL_documentAttributeAudio2.voice = true;
                                                }
                                                tLRPC$TL_documentAttributeAudio = tLRPC$TL_documentAttributeAudio2;
                                            } else {
                                                tLRPC$TL_documentAttributeAudio = null;
                                            }
                                            if (str2 == null) {
                                                str12 = str2;
                                            } else if (str2.endsWith("attheme")) {
                                                str12 = str2;
                                                z6 = true;
                                                if (!z6 || isEncryptedDialog) {
                                                    str13 = "";
                                                    z7 = isEncryptedDialog;
                                                    str14 = str12;
                                                    obj3 = "m4a";
                                                    str15 = str5;
                                                    obj4 = obj;
                                                    str16 = str8;
                                                    i4 = -1;
                                                    mimeTypeMap = singleton;
                                                    j3 = 0;
                                                    str17 = null;
                                                    tLRPC$TL_document = null;
                                                } else {
                                                    Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str12, !isEncryptedDialog ? 1 : 4);
                                                    if (sentFile == null || !(sentFile[0] instanceof TLRPC$TL_document)) {
                                                        str21 = null;
                                                        tLRPC$TL_document3 = null;
                                                    } else {
                                                        tLRPC$TL_document3 = (TLRPC$TL_document) sentFile[0];
                                                        str21 = (String) sentFile[1];
                                                    }
                                                    if (tLRPC$TL_document3 != null || str5.equals(str12) || isEncryptedDialog) {
                                                        str22 = str21;
                                                        tLRPC$TL_document4 = tLRPC$TL_document3;
                                                    } else {
                                                        MessagesStorage messagesStorage = accountInstance.getMessagesStorage();
                                                        StringBuilder sb = new StringBuilder();
                                                        sb.append(str5);
                                                        str22 = str21;
                                                        tLRPC$TL_document4 = tLRPC$TL_document3;
                                                        sb.append(file.length());
                                                        Object[] sentFile2 = messagesStorage.getSentFile(sb.toString(), !isEncryptedDialog ? 1 : 4);
                                                        if (sentFile2 != null && (sentFile2[0] instanceof TLRPC$TL_document)) {
                                                            str23 = (String) sentFile2[1];
                                                            tLRPC$TL_document = (TLRPC$TL_document) sentFile2[0];
                                                            i4 = -1;
                                                            str13 = "";
                                                            str16 = str8;
                                                            String str30 = str5;
                                                            str15 = str5;
                                                            str14 = str12;
                                                            obj3 = "m4a";
                                                            z7 = isEncryptedDialog;
                                                            obj4 = obj;
                                                            mimeTypeMap = singleton;
                                                            j3 = 0;
                                                            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str30, null, 0L);
                                                            str17 = str23;
                                                        }
                                                    }
                                                    tLRPC$TL_document = tLRPC$TL_document4;
                                                    str23 = str22;
                                                    i4 = -1;
                                                    str13 = "";
                                                    str16 = str8;
                                                    String str302 = str5;
                                                    str15 = str5;
                                                    str14 = str12;
                                                    obj3 = "m4a";
                                                    z7 = isEncryptedDialog;
                                                    obj4 = obj;
                                                    mimeTypeMap = singleton;
                                                    j3 = 0;
                                                    ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str302, null, 0L);
                                                    str17 = str23;
                                                }
                                                if (tLRPC$TL_document != null) {
                                                    TLRPC$TL_document tLRPC$TL_document6 = new TLRPC$TL_document();
                                                    tLRPC$TL_document6.id = j3;
                                                    tLRPC$TL_document6.date = accountInstance.getConnectionsManager().getCurrentTime();
                                                    TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                                                    tLRPC$TL_documentAttributeFilename.file_name = str16;
                                                    tLRPC$TL_document6.file_reference = new byte[0];
                                                    tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeFilename);
                                                    tLRPC$TL_document6.size = file.length();
                                                    tLRPC$TL_document6.dc_id = 0;
                                                    if (tLRPC$TL_documentAttributeAudio != null) {
                                                        tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeAudio);
                                                    }
                                                    if (str7.length() != 0) {
                                                        switch (lowerCase.hashCode()) {
                                                            case 106458:
                                                                if (lowerCase.equals(obj3)) {
                                                                    c2 = 0;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 108272:
                                                                if (lowerCase.equals("mp3")) {
                                                                    c2 = 1;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 109967:
                                                                if (lowerCase.equals("ogg")) {
                                                                    c2 = 2;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 3145576:
                                                                if (lowerCase.equals(obj4)) {
                                                                    c2 = 3;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 3418175:
                                                                if (lowerCase.equals(obj2)) {
                                                                    c2 = 4;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            case 3645340:
                                                                if (lowerCase.equals("webp")) {
                                                                    c2 = 5;
                                                                    break;
                                                                }
                                                                c2 = 65535;
                                                                break;
                                                            default:
                                                                c2 = 65535;
                                                                break;
                                                        }
                                                        switch (c2) {
                                                            case 0:
                                                                tLRPC$TL_document6.mime_type = "audio/m4a";
                                                                break;
                                                            case 1:
                                                                tLRPC$TL_document6.mime_type = "audio/mpeg";
                                                                break;
                                                            case 2:
                                                                tLRPC$TL_document6.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tLRPC$TL_document6.mime_type = "audio/flac";
                                                                break;
                                                            case 4:
                                                                tLRPC$TL_document6.mime_type = "audio/opus";
                                                                break;
                                                            case 5:
                                                                tLRPC$TL_document6.mime_type = "image/webp";
                                                                break;
                                                            default:
                                                                String mimeTypeFromExtension = mimeTypeMap.getMimeTypeFromExtension(lowerCase);
                                                                if (mimeTypeFromExtension != null) {
                                                                    tLRPC$TL_document6.mime_type = mimeTypeFromExtension;
                                                                    break;
                                                                } else {
                                                                    tLRPC$TL_document6.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                        }
                                                    } else {
                                                        tLRPC$TL_document6.mime_type = "application/octet-stream";
                                                    }
                                                    if (!z3 && tLRPC$TL_document6.mime_type.equals("image/gif") && (messageObject3 == null || messageObject3.getGroupIdForUse() == j3)) {
                                                        try {
                                                            loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                        } catch (Exception e9) {
                                                            e = e9;
                                                            z8 = z7;
                                                        }
                                                        if (loadBitmap != null) {
                                                            tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                                                            tLRPC$TL_document6.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                                            z8 = z7;
                                                            try {
                                                                TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z8);
                                                                if (scaleAndSaveImage2 != null) {
                                                                    tLRPC$TL_document6.thumbs.add(scaleAndSaveImage2);
                                                                    tLRPC$TL_document6.flags |= 1;
                                                                }
                                                                loadBitmap.recycle();
                                                            } catch (Exception e10) {
                                                                e = e10;
                                                                FileLog.e(e);
                                                                if (tLRPC$TL_document6.mime_type.equals("image/webp")) {
                                                                }
                                                                str18 = str15;
                                                                str19 = str13;
                                                                tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                if (charSequence != null) {
                                                                }
                                                                hashMap = new HashMap();
                                                                str20 = str14;
                                                                if (str20 != null) {
                                                                }
                                                                if (z3) {
                                                                }
                                                                if (str17 != null) {
                                                                }
                                                                int i82222 = 0;
                                                                if (numArr != null) {
                                                                }
                                                                z9 = false;
                                                                if (z8) {
                                                                }
                                                                final TLRPC$TL_document tLRPC$TL_document52222 = tLRPC$TL_document2;
                                                                final String str292222 = str18;
                                                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                                    @Override // java.lang.Runnable
                                                                    public final void run() {
                                                                        SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document52222, str292222, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                                    }
                                                                });
                                                                return 0;
                                                            }
                                                            if (tLRPC$TL_document6.mime_type.equals("image/webp") || messageObject3 != null) {
                                                                str18 = str15;
                                                            } else {
                                                                BitmapFactory.Options options = new BitmapFactory.Options();
                                                                try {
                                                                    options.inJustDecodeBounds = true;
                                                                    str18 = str15;
                                                                } catch (Exception e11) {
                                                                    e = e11;
                                                                    str18 = str15;
                                                                }
                                                                try {
                                                                    RandomAccessFile randomAccessFile = new RandomAccessFile(str18, "r");
                                                                    MappedByteBuffer map = randomAccessFile.getChannel().map(FileChannel.MapMode.READ_ONLY, 0L, str18.length());
                                                                    Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                                                    randomAccessFile.close();
                                                                } catch (Exception e12) {
                                                                    e = e12;
                                                                    FileLog.e(e);
                                                                    i5 = options.outWidth;
                                                                    if (i5 != 0) {
                                                                        TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                                                        str19 = str13;
                                                                        tLRPC$TL_documentAttributeSticker.alt = str19;
                                                                        tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                        tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeSticker);
                                                                        TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize = new TLRPC$TL_documentAttributeImageSize();
                                                                        tLRPC$TL_documentAttributeImageSize.w = options.outWidth;
                                                                        tLRPC$TL_documentAttributeImageSize.h = options.outHeight;
                                                                        tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeImageSize);
                                                                        scaleAndSaveImage = ImageLoader.scaleAndSaveImage(null, ImageLoader.loadBitmap(file.getAbsolutePath(), null, 400.0f, 400.0f, true), Bitmap.CompressFormat.PNG, false, 400.0f, 400.0f, 100, z8, 0, 0, false);
                                                                        if (scaleAndSaveImage != null) {
                                                                        }
                                                                        tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                        if (charSequence != null) {
                                                                        }
                                                                        hashMap = new HashMap();
                                                                        str20 = str14;
                                                                        if (str20 != null) {
                                                                        }
                                                                        if (z3) {
                                                                        }
                                                                        if (str17 != null) {
                                                                        }
                                                                        int i822222 = 0;
                                                                        if (numArr != null) {
                                                                        }
                                                                        z9 = false;
                                                                        if (z8) {
                                                                        }
                                                                        final TLRPC$TL_document tLRPC$TL_document522222 = tLRPC$TL_document2;
                                                                        final String str2922222 = str18;
                                                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                                            @Override // java.lang.Runnable
                                                                            public final void run() {
                                                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document522222, str2922222, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                                            }
                                                                        });
                                                                        return 0;
                                                                    }
                                                                    str19 = str13;
                                                                    tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                    if (charSequence != null) {
                                                                    }
                                                                    hashMap = new HashMap();
                                                                    str20 = str14;
                                                                    if (str20 != null) {
                                                                    }
                                                                    if (z3) {
                                                                    }
                                                                    if (str17 != null) {
                                                                    }
                                                                    int i8222222 = 0;
                                                                    if (numArr != null) {
                                                                    }
                                                                    z9 = false;
                                                                    if (z8) {
                                                                    }
                                                                    final TLRPC$TL_document tLRPC$TL_document5222222 = tLRPC$TL_document2;
                                                                    final String str29222222 = str18;
                                                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                                        @Override // java.lang.Runnable
                                                                        public final void run() {
                                                                            SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document5222222, str29222222, hashMap, str17, j, messageObject, messageObject2, r14, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                                        }
                                                                    });
                                                                    return 0;
                                                                }
                                                                i5 = options.outWidth;
                                                                if (i5 != 0 && (i6 = options.outHeight) != 0 && i5 <= 800 && i6 <= 800) {
                                                                    TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker2 = new TLRPC$TL_documentAttributeSticker();
                                                                    str19 = str13;
                                                                    tLRPC$TL_documentAttributeSticker2.alt = str19;
                                                                    tLRPC$TL_documentAttributeSticker2.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                                                    tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeSticker2);
                                                                    TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize2 = new TLRPC$TL_documentAttributeImageSize();
                                                                    tLRPC$TL_documentAttributeImageSize2.w = options.outWidth;
                                                                    tLRPC$TL_documentAttributeImageSize2.h = options.outHeight;
                                                                    tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeImageSize2);
                                                                    scaleAndSaveImage = ImageLoader.scaleAndSaveImage(null, ImageLoader.loadBitmap(file.getAbsolutePath(), null, 400.0f, 400.0f, true), Bitmap.CompressFormat.PNG, false, 400.0f, 400.0f, 100, z8, 0, 0, false);
                                                                    if (scaleAndSaveImage != null) {
                                                                        tLRPC$TL_document6.thumbs.add(scaleAndSaveImage);
                                                                        tLRPC$TL_document6.flags |= 1;
                                                                    }
                                                                    tLRPC$TL_document2 = tLRPC$TL_document6;
                                                                }
                                                            }
                                                            str19 = str13;
                                                            tLRPC$TL_document2 = tLRPC$TL_document6;
                                                        }
                                                    }
                                                    z8 = z7;
                                                    if (tLRPC$TL_document6.mime_type.equals("image/webp")) {
                                                    }
                                                    str18 = str15;
                                                    str19 = str13;
                                                    tLRPC$TL_document2 = tLRPC$TL_document6;
                                                } else {
                                                    str18 = str15;
                                                    z8 = z7;
                                                    str19 = str13;
                                                    tLRPC$TL_document2 = tLRPC$TL_document;
                                                }
                                                final String charSequence2 = charSequence != null ? charSequence.toString() : str19;
                                                hashMap = new HashMap();
                                                str20 = str14;
                                                if (str20 != null) {
                                                    hashMap.put("originalPath", str20);
                                                }
                                                if (z3 && tLRPC$TL_documentAttributeAudio == null) {
                                                    hashMap.put("forceDocument", "1");
                                                }
                                                if (str17 != null) {
                                                    hashMap.put("parentObject", str17);
                                                }
                                                int i82222222 = 0;
                                                if (numArr != null) {
                                                    i82222222 = numArr[0];
                                                    String str31 = tLRPC$TL_document2.mime_type;
                                                    if (str31 != null && str31.toLowerCase().startsWith("image/webp")) {
                                                        numArr[0] = Integer.valueOf(i4);
                                                        c = 0;
                                                        z9 = true;
                                                        if (z8 && jArr != null) {
                                                            if (numArr != null && i82222222 != null && i82222222 != numArr[c]) {
                                                                finishGroup(accountInstance, jArr[c], i);
                                                                jArr[c] = Utilities.random.nextLong();
                                                            }
                                                            if (!z9) {
                                                                hashMap.put("groupId", str19 + jArr[c]);
                                                                if (z) {
                                                                    hashMap.put("final", "1");
                                                                }
                                                            }
                                                        }
                                                        final TLRPC$TL_document tLRPC$TL_document52222222 = tLRPC$TL_document2;
                                                        final String str292222222 = str18;
                                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                            @Override // java.lang.Runnable
                                                            public final void run() {
                                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document52222222, str292222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                            }
                                                        });
                                                        return 0;
                                                    }
                                                    String str32 = tLRPC$TL_document2.mime_type;
                                                    if ((str32 == null || !(str32.toLowerCase().startsWith("image/") || tLRPC$TL_document2.mime_type.toLowerCase().startsWith("video/mp4"))) && !MessageObject.canPreviewDocument(tLRPC$TL_document2)) {
                                                        c = 0;
                                                        if (tLRPC$TL_documentAttributeAudio != null) {
                                                            numArr[0] = 2;
                                                        } else {
                                                            numArr[0] = 0;
                                                        }
                                                    } else {
                                                        c = 0;
                                                        numArr[0] = 1;
                                                    }
                                                } else {
                                                    c = 0;
                                                }
                                                z9 = false;
                                                if (z8) {
                                                }
                                                final TLRPC$TL_document tLRPC$TL_document522222222 = tLRPC$TL_document2;
                                                final String str2922222222 = str18;
                                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                    @Override // java.lang.Runnable
                                                    public final void run() {
                                                        SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document522222222, str2922222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                    }
                                                });
                                                return 0;
                                            } else {
                                                if (tLRPC$TL_documentAttributeAudio != null) {
                                                    str24 = str2 + MediaStreamTrack.AUDIO_TRACK_KIND + file.length();
                                                } else {
                                                    str24 = str2 + "" + file.length();
                                                }
                                                str12 = str24;
                                            }
                                            z6 = false;
                                            if (z6) {
                                            }
                                            str13 = "";
                                            z7 = isEncryptedDialog;
                                            str14 = str12;
                                            obj3 = "m4a";
                                            str15 = str5;
                                            obj4 = obj;
                                            str16 = str8;
                                            i4 = -1;
                                            mimeTypeMap = singleton;
                                            j3 = 0;
                                            str17 = null;
                                            tLRPC$TL_document = null;
                                            if (tLRPC$TL_document != null) {
                                            }
                                            if (charSequence != null) {
                                            }
                                            hashMap = new HashMap();
                                            str20 = str14;
                                            if (str20 != null) {
                                            }
                                            if (z3) {
                                                hashMap.put("forceDocument", "1");
                                            }
                                            if (str17 != null) {
                                            }
                                            int i822222222 = 0;
                                            if (numArr != null) {
                                            }
                                            z9 = false;
                                            if (z8) {
                                            }
                                            final TLRPC$TL_document tLRPC$TL_document5222222222 = tLRPC$TL_document2;
                                            final String str29222222222 = str18;
                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                                @Override // java.lang.Runnable
                                                public final void run() {
                                                    SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document5222222222, str29222222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                                }
                                            });
                                            return 0;
                                        }
                                        z10 = false;
                                        mediaMetadataRetriever2.release();
                                        str9 = str25;
                                        str11 = str28;
                                        z5 = z10;
                                        i3 = i7;
                                        if (i3 != 0) {
                                        }
                                        if (str2 == null) {
                                        }
                                        z6 = false;
                                        if (z6) {
                                        }
                                        str13 = "";
                                        z7 = isEncryptedDialog;
                                        str14 = str12;
                                        obj3 = "m4a";
                                        str15 = str5;
                                        obj4 = obj;
                                        str16 = str8;
                                        i4 = -1;
                                        mimeTypeMap = singleton;
                                        j3 = 0;
                                        str17 = null;
                                        tLRPC$TL_document = null;
                                        if (tLRPC$TL_document != null) {
                                        }
                                        if (charSequence != null) {
                                        }
                                        hashMap = new HashMap();
                                        str20 = str14;
                                        if (str20 != null) {
                                        }
                                        if (z3) {
                                        }
                                        if (str17 != null) {
                                        }
                                        int i8222222222 = 0;
                                        if (numArr != null) {
                                        }
                                        z9 = false;
                                        if (z8) {
                                        }
                                        final TLRPC$TL_document tLRPC$TL_document52222222222 = tLRPC$TL_document2;
                                        final String str292222222222 = str18;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document52222222222, str292222222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                            }
                                        });
                                        return 0;
                                    }
                                }
                                str28 = str27;
                                z10 = false;
                                mediaMetadataRetriever2.release();
                                str9 = str25;
                                str11 = str28;
                                z5 = z10;
                                i3 = i7;
                                if (i3 != 0) {
                                }
                                if (str2 == null) {
                                }
                                z6 = false;
                                if (z6) {
                                }
                                str13 = "";
                                z7 = isEncryptedDialog;
                                str14 = str12;
                                obj3 = "m4a";
                                str15 = str5;
                                obj4 = obj;
                                str16 = str8;
                                i4 = -1;
                                mimeTypeMap = singleton;
                                j3 = 0;
                                str17 = null;
                                tLRPC$TL_document = null;
                                if (tLRPC$TL_document != null) {
                                }
                                if (charSequence != null) {
                                }
                                hashMap = new HashMap();
                                str20 = str14;
                                if (str20 != null) {
                                }
                                if (z3) {
                                }
                                if (str17 != null) {
                                }
                                int i82222222222 = 0;
                                if (numArr != null) {
                                }
                                z9 = false;
                                if (z8) {
                                }
                                final TLRPC$TL_document tLRPC$TL_document522222222222 = tLRPC$TL_document2;
                                final String str2922222222222 = str18;
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document522222222222, str2922222222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                    }
                                });
                                return 0;
                            } else {
                                str8 = name;
                                obj = "flac";
                                obj2 = "opus";
                                str9 = null;
                                str11 = null;
                                i3 = 0;
                            }
                            z5 = false;
                            if (i3 != 0) {
                            }
                            if (str2 == null) {
                            }
                            z6 = false;
                            if (z6) {
                            }
                            str13 = "";
                            z7 = isEncryptedDialog;
                            str14 = str12;
                            obj3 = "m4a";
                            str15 = str5;
                            obj4 = obj;
                            str16 = str8;
                            i4 = -1;
                            mimeTypeMap = singleton;
                            j3 = 0;
                            str17 = null;
                            tLRPC$TL_document = null;
                            if (tLRPC$TL_document != null) {
                            }
                            if (charSequence != null) {
                            }
                            hashMap = new HashMap();
                            str20 = str14;
                            if (str20 != null) {
                            }
                            if (z3) {
                            }
                            if (str17 != null) {
                            }
                            int i822222222222 = 0;
                            if (numArr != null) {
                            }
                            z9 = false;
                            if (z8) {
                            }
                            final TLRPC$TL_document tLRPC$TL_document5222222222222 = tLRPC$TL_document2;
                            final String str29222222222222 = str18;
                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                                @Override // java.lang.Runnable
                                public final void run() {
                                    SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document5222222222222, str29222222222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                                }
                            });
                            return 0;
                        }
                    }
                    str7 = str6;
                    lowerCase = str7.toLowerCase();
                    if (!lowerCase.equals("mp3")) {
                    }
                    str8 = name;
                    obj = "flac";
                    obj2 = "opus";
                    audioInfo = AudioInfo.getAudioInfo(file);
                    if (audioInfo == null) {
                    }
                    str9 = null;
                    i3 = 0;
                    str10 = null;
                    str11 = str10;
                    z5 = false;
                    if (i3 != 0) {
                    }
                    if (str2 == null) {
                    }
                    z6 = false;
                    if (z6) {
                    }
                    str13 = "";
                    z7 = isEncryptedDialog;
                    str14 = str12;
                    obj3 = "m4a";
                    str15 = str5;
                    obj4 = obj;
                    str16 = str8;
                    i4 = -1;
                    mimeTypeMap = singleton;
                    j3 = 0;
                    str17 = null;
                    tLRPC$TL_document = null;
                    if (tLRPC$TL_document != null) {
                    }
                    if (charSequence != null) {
                    }
                    hashMap = new HashMap();
                    str20 = str14;
                    if (str20 != null) {
                    }
                    if (z3) {
                    }
                    if (str17 != null) {
                    }
                    int i8222222222222 = 0;
                    if (numArr != null) {
                    }
                    z9 = false;
                    if (z8) {
                    }
                    final TLRPC$TL_document tLRPC$TL_document52222222222222 = tLRPC$TL_document2;
                    final String str292222222222222 = str18;
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.lambda$prepareSendingDocumentInternal$75(MessageObject.this, accountInstance, tLRPC$TL_document52222222222222, str292222222222222, hashMap, str17, j, messageObject, messageObject2, charSequence2, arrayList, z2, i, tL_stories$StoryItem, replyQuote, str4, i2, j2, z4);
                        }
                    });
                    return 0;
                }
                return 2;
            }
            return 1;
        }
        return 1;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingDocumentInternal$75(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, String str, HashMap hashMap, String str2, long j, MessageObject messageObject2, MessageObject messageObject3, String str3, ArrayList arrayList, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str4, int i2, long j2, boolean z2) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, str, hashMap, false, false, str2);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, null, str, j, messageObject2, messageObject3, str3, arrayList, null, hashMap, z, i, 0, str2, null, false);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str4;
        of.quick_reply_shortcut_id = i2;
        of.effect_id = j2;
        of.invert_media = z2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    private static boolean checkFileSize(AccountInstance accountInstance, Uri uri) {
        long j = 0;
        if (Build.VERSION.SDK_INT >= 19) {
            try {
                AssetFileDescriptor openAssetFileDescriptor = ApplicationLoader.applicationContext.getContentResolver().openAssetFileDescriptor(uri, "r", null);
                if (openAssetFileDescriptor != null) {
                    openAssetFileDescriptor.getLength();
                }
                Cursor query = ApplicationLoader.applicationContext.getContentResolver().query(uri, new String[]{"_size"}, null, null, null);
                int columnIndex = query.getColumnIndex("_size");
                query.moveToFirst();
                j = query.getLong(columnIndex);
                query.close();
            } catch (Exception e) {
                FileLog.e(e);
            }
        }
        return !FileLoader.checkUploadFileSize(accountInstance.getCurrentAccount(), j);
    }

    public static void prepareSendingDocument(AccountInstance accountInstance, String str, String str2, Uri uri, String str3, String str4, long j, MessageObject messageObject, MessageObject messageObject2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, MessageObject messageObject3, boolean z, int i, InputContentInfoCompat inputContentInfoCompat, String str5, int i2, boolean z2) {
        if ((str == null || str2 == null) && uri == null) {
            return;
        }
        ArrayList arrayList = new ArrayList();
        ArrayList arrayList2 = new ArrayList();
        ArrayList arrayList3 = null;
        if (uri != null) {
            arrayList3 = new ArrayList();
            arrayList3.add(uri);
        }
        if (str != null) {
            arrayList.add(str);
            arrayList2.add(str2);
        }
        prepareSendingDocuments(accountInstance, arrayList, arrayList2, arrayList3, str3, str4, j, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, messageObject3, z, i, inputContentInfoCompat, str5, i2, 0L, z2);
    }

    public static void prepareSendingAudioDocuments(final AccountInstance accountInstance, final ArrayList<MessageObject> arrayList, final CharSequence charSequence, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final boolean z, final int i, final MessageObject messageObject3, final String str, final int i2, final long j2, final boolean z2) {
        new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda10
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingAudioDocuments$77(arrayList, j, accountInstance, charSequence, messageObject3, messageObject, messageObject2, z, i, tL_stories$StoryItem, str, i2, j2, z2);
            }
        }).start();
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:25:0x0082  */
    /* JADX WARN: Removed duplicated region for block: B:26:0x008b  */
    /* JADX WARN: Removed duplicated region for block: B:33:0x00a8  */
    /* JADX WARN: Removed duplicated region for block: B:34:0x00b3  */
    /* JADX WARN: Removed duplicated region for block: B:36:0x00b7  */
    /* JADX WARN: Removed duplicated region for block: B:39:0x00c6  */
    /* JADX WARN: Removed duplicated region for block: B:41:0x00cd  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingAudioDocuments$77(ArrayList arrayList, final long j, final AccountInstance accountInstance, CharSequence charSequence, final MessageObject messageObject, final MessageObject messageObject2, final MessageObject messageObject3, final boolean z, final int i, final TL_stories$StoryItem tL_stories$StoryItem, final String str, final int i2, final long j2, final boolean z2) {
        final String str2;
        TLRPC$TL_document tLRPC$TL_document;
        final TLRPC$TL_document tLRPC$TL_document2;
        final HashMap hashMap;
        int size = arrayList.size();
        long j3 = 0;
        int i3 = 0;
        int i4 = 0;
        while (i3 < size) {
            final MessageObject messageObject4 = (MessageObject) arrayList.get(i3);
            String str3 = messageObject4.messageOwner.attachPath;
            File file = new File(str3);
            boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
            if (!isEncryptedDialog && size > 1 && i4 % 10 == 0) {
                j3 = Utilities.random.nextLong();
                i4 = 0;
            }
            if (str3 != null) {
                str3 = str3 + MediaStreamTrack.AUDIO_TRACK_KIND + file.length();
            }
            if (!isEncryptedDialog) {
                Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str3, !isEncryptedDialog ? 1 : 4);
                if (sentFile != null && (sentFile[0] instanceof TLRPC$TL_document)) {
                    tLRPC$TL_document = (TLRPC$TL_document) sentFile[0];
                    ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str3, null, 0L);
                    str2 = (String) sentFile[1];
                    tLRPC$TL_document2 = tLRPC$TL_document != null ? (TLRPC$TL_document) messageObject4.messageOwner.media.document : tLRPC$TL_document;
                    if (!isEncryptedDialog && accountInstance.getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                        return;
                    }
                    CharSequence[] charSequenceArr = {charSequence};
                    final ArrayList<TLRPC$MessageEntity> entities = i3 != 0 ? accountInstance.getMediaDataController().getEntities(charSequenceArr, true) : null;
                    final String charSequence2 = i3 == 0 ? charSequenceArr[0].toString() : null;
                    hashMap = new HashMap();
                    if (str3 != null) {
                        hashMap.put("originalPath", str3);
                    }
                    if (str2 != null) {
                        hashMap.put("parentObject", str2);
                    }
                    i4++;
                    hashMap.put("groupId", "" + j3);
                    if (i4 != 10 || i3 == size - 1) {
                        hashMap.put("final", "1");
                    }
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda15
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.lambda$prepareSendingAudioDocuments$76(MessageObject.this, accountInstance, tLRPC$TL_document2, messageObject4, hashMap, str2, j, messageObject2, messageObject3, charSequence2, entities, z, i, tL_stories$StoryItem, str, i2, j2, z2);
                        }
                    });
                    i3++;
                }
            }
            str2 = null;
            tLRPC$TL_document = null;
            if (tLRPC$TL_document != null) {
            }
            if (!isEncryptedDialog) {
            }
            CharSequence[] charSequenceArr2 = {charSequence};
            if (i3 != 0) {
            }
            final String charSequence22 = i3 == 0 ? charSequenceArr2[0].toString() : null;
            hashMap = new HashMap();
            if (str3 != null) {
            }
            if (str2 != null) {
            }
            i4++;
            hashMap.put("groupId", "" + j3);
            if (i4 != 10) {
            }
            hashMap.put("final", "1");
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda15
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingAudioDocuments$76(MessageObject.this, accountInstance, tLRPC$TL_document2, messageObject4, hashMap, str2, j, messageObject2, messageObject3, charSequence22, entities, z, i, tL_stories$StoryItem, str, i2, j2, z2);
                }
            });
            i3++;
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingAudioDocuments$76(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, MessageObject messageObject2, HashMap hashMap, String str, long j, MessageObject messageObject3, MessageObject messageObject4, String str2, ArrayList arrayList, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, String str3, int i2, long j2, boolean z2) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, messageObject2.messageOwner.attachPath, hashMap, false, false, str);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, null, messageObject2.messageOwner.attachPath, j, messageObject3, messageObject4, str2, arrayList, null, hashMap, z, i, 0, str, null, false, false);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.quick_reply_shortcut = str3;
        of.quick_reply_shortcut_id = i2;
        of.effect_id = j2;
        of.invert_media = z2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    private static void finishGroup(final AccountInstance accountInstance, final long j, final int i) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda12
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$finishGroup$78(AccountInstance.this, j, i);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$finishGroup$78(AccountInstance accountInstance, long j, int i) {
        SendMessagesHelper sendMessagesHelper = accountInstance.getSendMessagesHelper();
        HashMap<String, ArrayList<DelayedMessage>> hashMap = sendMessagesHelper.delayedMessages;
        ArrayList<DelayedMessage> arrayList = hashMap.get("group_" + j);
        if (arrayList == null || arrayList.isEmpty()) {
            return;
        }
        DelayedMessage delayedMessage = arrayList.get(0);
        ArrayList<MessageObject> arrayList2 = delayedMessage.messageObjects;
        MessageObject messageObject = arrayList2.get(arrayList2.size() - 1);
        delayedMessage.finalGroupMessage = messageObject.getId();
        messageObject.messageOwner.params.put("final", "1");
        TLRPC$TL_messages_messages tLRPC$TL_messages_messages = new TLRPC$TL_messages_messages();
        tLRPC$TL_messages_messages.messages.add(messageObject.messageOwner);
        accountInstance.getMessagesStorage().putMessages((TLRPC$messages_Messages) tLRPC$TL_messages_messages, delayedMessage.peer, -2, 0, false, i != 0 ? 1 : 0, 0L);
        sendMessagesHelper.sendReadyToSendGroup(delayedMessage, true, true);
    }

    public static void prepareSendingDocuments(final AccountInstance accountInstance, final ArrayList<String> arrayList, final ArrayList<String> arrayList2, final ArrayList<Uri> arrayList3, final String str, final String str2, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final MessageObject messageObject3, final boolean z, final int i, final InputContentInfoCompat inputContentInfoCompat, final String str3, final int i2, final long j2, final boolean z2) {
        if (arrayList == null && arrayList2 == null && arrayList3 == null) {
            return;
        }
        if (arrayList == null || arrayList2 == null || arrayList.size() == arrayList2.size()) {
            Utilities.globalQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda3
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingDocuments$79(j, arrayList, str, accountInstance, i, arrayList2, str2, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, messageObject3, z, inputContentInfoCompat, str3, i2, j2, z2, arrayList3);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingDocuments$79(long j, ArrayList arrayList, String str, AccountInstance accountInstance, int i, ArrayList arrayList2, String str2, MessageObject messageObject, MessageObject messageObject2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, MessageObject messageObject3, boolean z, InputContentInfoCompat inputContentInfoCompat, String str3, int i2, long j2, boolean z2, ArrayList arrayList3) {
        Integer[] numArr;
        long[] jArr;
        ArrayList arrayList4;
        int i3;
        boolean z3;
        AccountInstance accountInstance2;
        AccountInstance accountInstance3 = accountInstance;
        int i4 = i;
        int i5 = 1;
        long[] jArr2 = new long[1];
        Integer[] numArr2 = new Integer[1];
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        int i6 = 10;
        if (arrayList != null) {
            int size = arrayList.size();
            i3 = 0;
            int i7 = 0;
            boolean z4 = true;
            int i8 = 0;
            while (i8 < size) {
                String str4 = i8 == 0 ? str : null;
                if (!isEncryptedDialog && size > i5 && i7 % 10 == 0) {
                    if (jArr2[0] != 0) {
                        finishGroup(accountInstance3, jArr2[0], i4);
                    }
                    jArr2[0] = Utilities.random.nextLong();
                    i7 = 0;
                }
                int i9 = i7 + 1;
                long j3 = jArr2[0];
                int i10 = i8;
                int i11 = size;
                Integer[] numArr3 = numArr2;
                long[] jArr3 = jArr2;
                i3 = prepareSendingDocumentInternal(accountInstance, (String) arrayList.get(i8), (String) arrayList2.get(i8), null, str2, j, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, null, messageObject3, jArr3, i9 == i6 || i8 == size + (-1), str4, z, i, numArr3, inputContentInfoCompat == null, str3, i2, z4 ? j2 : 0L, z2);
                i7 = (j3 != jArr3[0] || jArr3[0] == -1) ? 1 : i9;
                i8 = i10 + 1;
                accountInstance3 = accountInstance;
                i4 = i;
                size = i11;
                numArr2 = numArr3;
                jArr2 = jArr3;
                z4 = false;
                i6 = 10;
                i5 = 1;
            }
            numArr = numArr2;
            jArr = jArr2;
            arrayList4 = arrayList3;
            z3 = z4;
        } else {
            numArr = numArr2;
            jArr = jArr2;
            arrayList4 = arrayList3;
            i3 = 0;
            z3 = true;
        }
        if (arrayList4 != null) {
            jArr[0] = 0;
            int size2 = arrayList3.size();
            int i12 = 0;
            int i13 = 0;
            while (i13 < arrayList3.size()) {
                String str5 = (i13 == 0 && (arrayList == null || arrayList.size() == 0)) ? str : null;
                if (isEncryptedDialog) {
                    accountInstance2 = accountInstance;
                } else if (size2 <= 1 || i12 % 10 != 0) {
                    accountInstance2 = accountInstance;
                } else {
                    if (jArr[0] != 0) {
                        accountInstance2 = accountInstance;
                        finishGroup(accountInstance2, jArr[0], i);
                    } else {
                        accountInstance2 = accountInstance;
                    }
                    jArr[0] = Utilities.random.nextLong();
                    i12 = 0;
                }
                int i14 = i12 + 1;
                long j4 = jArr[0];
                int i15 = i13;
                int i16 = size2;
                i3 = prepareSendingDocumentInternal(accountInstance, null, null, (Uri) arrayList4.get(i13), str2, j, messageObject, messageObject2, tL_stories$StoryItem, replyQuote, null, messageObject3, jArr, i14 == 10 || i13 == size2 + (-1), str5, z, i, numArr, inputContentInfoCompat == null, str3, i2, z3 ? j2 : 0L, z2);
                i12 = (j4 != jArr[0] || jArr[0] == -1) ? 1 : i14;
                i13 = i15 + 1;
                arrayList4 = arrayList3;
                size2 = i16;
                z3 = false;
            }
        }
        if (inputContentInfoCompat != null) {
            inputContentInfoCompat.releasePermission();
        }
        handleError(i3, accountInstance);
    }

    private static void handleError(final int i, final AccountInstance accountInstance) {
        if (i != 0) {
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda2
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$handleError$80(i, accountInstance);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$handleError$80(int i, AccountInstance accountInstance) {
        try {
            if (i == 1) {
                NotificationCenter.getGlobalInstance().lambda$postNotificationNameOnUIThread$1(NotificationCenter.showBulletin, 1, LocaleController.getString("UnsupportedAttachment", R.string.UnsupportedAttachment));
            } else if (i != 2) {
            } else {
                NotificationCenter.getInstance(accountInstance.getCurrentAccount()).lambda$postNotificationNameOnUIThread$1(NotificationCenter.currentUserShowLimitReachedDialog, 6);
            }
        } catch (Exception e) {
            FileLog.e(e);
        }
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String str, Uri uri, long j, MessageObject messageObject, MessageObject messageObject2, ChatActivity.ReplyQuote replyQuote, CharSequence charSequence, ArrayList<TLRPC$MessageEntity> arrayList, ArrayList<TLRPC$InputDocument> arrayList2, InputContentInfoCompat inputContentInfoCompat, int i, MessageObject messageObject3, boolean z, int i2, int i3, String str2, int i4) {
        prepareSendingPhoto(accountInstance, str, null, uri, j, messageObject, messageObject2, null, null, arrayList, arrayList2, inputContentInfoCompat, i, messageObject3, null, z, i2, i3, false, charSequence, str2, i4, 0L);
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String str, String str2, Uri uri, long j, MessageObject messageObject, MessageObject messageObject2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, ArrayList<TLRPC$MessageEntity> arrayList, ArrayList<TLRPC$InputDocument> arrayList2, InputContentInfoCompat inputContentInfoCompat, int i, MessageObject messageObject3, VideoEditedInfo videoEditedInfo, boolean z, int i2, int i3, boolean z2, CharSequence charSequence, String str3, int i4, long j2) {
        SendingMediaInfo sendingMediaInfo = new SendingMediaInfo();
        sendingMediaInfo.path = str;
        sendingMediaInfo.thumbPath = str2;
        sendingMediaInfo.uri = uri;
        if (charSequence != null) {
            sendingMediaInfo.caption = charSequence.toString();
        }
        sendingMediaInfo.entities = arrayList;
        sendingMediaInfo.ttl = i;
        if (arrayList2 != null) {
            sendingMediaInfo.masks = new ArrayList<>(arrayList2);
        }
        sendingMediaInfo.videoEditedInfo = videoEditedInfo;
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(sendingMediaInfo);
        prepareSendingMedia(accountInstance, arrayList3, j, messageObject, messageObject2, null, replyQuote, z2, false, messageObject3, z, i2, i3, false, inputContentInfoCompat, str3, i4, j2, false);
    }

    public static void prepareSendingBotContextResult(final BaseFragment baseFragment, final AccountInstance accountInstance, final TLRPC$BotInlineResult tLRPC$BotInlineResult, final HashMap<String, String> hashMap, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final boolean z, final int i, final String str, final int i2) {
        SendMessageParams of;
        if (tLRPC$BotInlineResult == null) {
            return;
        }
        TLRPC$BotInlineMessage tLRPC$BotInlineMessage = tLRPC$BotInlineResult.send_message;
        if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaAuto) {
            new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda4
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingBotContextResult$84(j, tLRPC$BotInlineResult, accountInstance, hashMap, baseFragment, messageObject, messageObject2, z, i, str, i2, tL_stories$StoryItem, replyQuote);
                }
            }).run();
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageText) {
            TLRPC$TL_webPagePending tLRPC$TL_webPagePending = null;
            if (DialogObject.isEncryptedDialog(j)) {
                int i3 = 0;
                while (true) {
                    if (i3 >= tLRPC$BotInlineResult.send_message.entities.size()) {
                        break;
                    }
                    TLRPC$MessageEntity tLRPC$MessageEntity = tLRPC$BotInlineResult.send_message.entities.get(i3);
                    if (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityUrl) {
                        tLRPC$TL_webPagePending = new TLRPC$TL_webPagePending();
                        String str2 = tLRPC$BotInlineResult.send_message.message;
                        int i4 = tLRPC$MessageEntity.offset;
                        tLRPC$TL_webPagePending.url = str2.substring(i4, tLRPC$MessageEntity.length + i4);
                        break;
                    }
                    i3++;
                }
            }
            TLRPC$TL_webPagePending tLRPC$TL_webPagePending2 = tLRPC$TL_webPagePending;
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage2 = tLRPC$BotInlineResult.send_message;
            SendMessageParams of2 = SendMessageParams.of(tLRPC$BotInlineMessage2.message, j, messageObject, messageObject2, tLRPC$TL_webPagePending2, !tLRPC$BotInlineMessage2.no_webpage, tLRPC$BotInlineMessage2.entities, tLRPC$BotInlineMessage2.reply_markup, hashMap, z, i, null, false);
            of2.quick_reply_shortcut = str;
            of2.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of2);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaVenue) {
            TLRPC$TL_messageMediaVenue tLRPC$TL_messageMediaVenue = new TLRPC$TL_messageMediaVenue();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage3 = tLRPC$BotInlineResult.send_message;
            tLRPC$TL_messageMediaVenue.geo = tLRPC$BotInlineMessage3.geo;
            tLRPC$TL_messageMediaVenue.address = tLRPC$BotInlineMessage3.address;
            tLRPC$TL_messageMediaVenue.title = tLRPC$BotInlineMessage3.title;
            tLRPC$TL_messageMediaVenue.provider = tLRPC$BotInlineMessage3.provider;
            tLRPC$TL_messageMediaVenue.venue_id = tLRPC$BotInlineMessage3.venue_id;
            String str3 = tLRPC$BotInlineMessage3.venue_type;
            tLRPC$TL_messageMediaVenue.venue_id = str3;
            tLRPC$TL_messageMediaVenue.venue_type = str3;
            if (str3 == null) {
                tLRPC$TL_messageMediaVenue.venue_type = "";
            }
            SendMessageParams of3 = SendMessageParams.of(tLRPC$TL_messageMediaVenue, j, messageObject, messageObject2, tLRPC$BotInlineMessage3.reply_markup, hashMap, z, i);
            of3.quick_reply_shortcut = str;
            of3.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of3);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaGeo) {
            if (tLRPC$BotInlineMessage.period != 0 || tLRPC$BotInlineMessage.proximity_notification_radius != 0) {
                TLRPC$TL_messageMediaGeoLive tLRPC$TL_messageMediaGeoLive = new TLRPC$TL_messageMediaGeoLive();
                TLRPC$BotInlineMessage tLRPC$BotInlineMessage4 = tLRPC$BotInlineResult.send_message;
                int i5 = tLRPC$BotInlineMessage4.period;
                if (i5 == 0) {
                    i5 = 900;
                }
                tLRPC$TL_messageMediaGeoLive.period = i5;
                tLRPC$TL_messageMediaGeoLive.geo = tLRPC$BotInlineMessage4.geo;
                tLRPC$TL_messageMediaGeoLive.heading = tLRPC$BotInlineMessage4.heading;
                tLRPC$TL_messageMediaGeoLive.proximity_notification_radius = tLRPC$BotInlineMessage4.proximity_notification_radius;
                of = SendMessageParams.of(tLRPC$TL_messageMediaGeoLive, j, messageObject, messageObject2, tLRPC$BotInlineMessage4.reply_markup, hashMap, z, i);
            } else {
                TLRPC$TL_messageMediaGeo tLRPC$TL_messageMediaGeo = new TLRPC$TL_messageMediaGeo();
                TLRPC$BotInlineMessage tLRPC$BotInlineMessage5 = tLRPC$BotInlineResult.send_message;
                tLRPC$TL_messageMediaGeo.geo = tLRPC$BotInlineMessage5.geo;
                tLRPC$TL_messageMediaGeo.heading = tLRPC$BotInlineMessage5.heading;
                of = SendMessageParams.of(tLRPC$TL_messageMediaGeo, j, messageObject, messageObject2, tLRPC$BotInlineMessage5.reply_markup, hashMap, z, i);
            }
            of.quick_reply_shortcut = str;
            of.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaContact) {
            TLRPC$TL_user tLRPC$TL_user = new TLRPC$TL_user();
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage6 = tLRPC$BotInlineResult.send_message;
            tLRPC$TL_user.phone = tLRPC$BotInlineMessage6.phone_number;
            tLRPC$TL_user.first_name = tLRPC$BotInlineMessage6.first_name;
            tLRPC$TL_user.last_name = tLRPC$BotInlineMessage6.last_name;
            TLRPC$TL_restrictionReason tLRPC$TL_restrictionReason = new TLRPC$TL_restrictionReason();
            tLRPC$TL_restrictionReason.text = tLRPC$BotInlineResult.send_message.vcard;
            tLRPC$TL_restrictionReason.platform = "";
            tLRPC$TL_restrictionReason.reason = "";
            tLRPC$TL_user.restriction_reason.add(tLRPC$TL_restrictionReason);
            SendMessageParams of4 = SendMessageParams.of(tLRPC$TL_user, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
            of4.quick_reply_shortcut = str;
            of4.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of4);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaInvoice) {
            if (DialogObject.isEncryptedDialog(j)) {
                return;
            }
            TLRPC$TL_botInlineMessageMediaInvoice tLRPC$TL_botInlineMessageMediaInvoice = (TLRPC$TL_botInlineMessageMediaInvoice) tLRPC$BotInlineResult.send_message;
            TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice = new TLRPC$TL_messageMediaInvoice();
            tLRPC$TL_messageMediaInvoice.shipping_address_requested = tLRPC$TL_botInlineMessageMediaInvoice.shipping_address_requested;
            tLRPC$TL_messageMediaInvoice.test = tLRPC$TL_botInlineMessageMediaInvoice.test;
            tLRPC$TL_messageMediaInvoice.title = tLRPC$TL_botInlineMessageMediaInvoice.title;
            tLRPC$TL_messageMediaInvoice.description = tLRPC$TL_botInlineMessageMediaInvoice.description;
            TLRPC$WebDocument tLRPC$WebDocument = tLRPC$TL_botInlineMessageMediaInvoice.photo;
            if (tLRPC$WebDocument != null) {
                tLRPC$TL_messageMediaInvoice.webPhoto = tLRPC$WebDocument;
                tLRPC$TL_messageMediaInvoice.flags |= 1;
            }
            tLRPC$TL_messageMediaInvoice.currency = tLRPC$TL_botInlineMessageMediaInvoice.currency;
            tLRPC$TL_messageMediaInvoice.total_amount = tLRPC$TL_botInlineMessageMediaInvoice.total_amount;
            tLRPC$TL_messageMediaInvoice.start_param = "";
            SendMessageParams of5 = SendMessageParams.of(tLRPC$TL_messageMediaInvoice, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
            of5.quick_reply_shortcut = str;
            of5.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of5);
        } else if (tLRPC$BotInlineMessage instanceof TLRPC$TL_botInlineMessageMediaWebPage) {
            TLRPC$TL_webPagePending tLRPC$TL_webPagePending3 = new TLRPC$TL_webPagePending();
            tLRPC$TL_webPagePending3.url = ((TLRPC$TL_botInlineMessageMediaWebPage) tLRPC$BotInlineMessage).url;
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage7 = tLRPC$BotInlineResult.send_message;
            SendMessageParams of6 = SendMessageParams.of(tLRPC$BotInlineMessage7.message, j, messageObject, messageObject2, tLRPC$TL_webPagePending3, !tLRPC$BotInlineMessage7.no_webpage, tLRPC$BotInlineMessage7.entities, tLRPC$BotInlineMessage7.reply_markup, hashMap, z, i, null, false);
            of6.quick_reply_shortcut = str;
            of6.quick_reply_shortcut_id = i2;
            accountInstance.getSendMessagesHelper().sendMessage(of6);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Code restructure failed: missing block: B:81:0x01c5, code lost:
        if (r0.equals("voice") == false) goto L98;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:179:0x0452  */
    /* JADX WARN: Removed duplicated region for block: B:182:0x0458  */
    /* JADX WARN: Removed duplicated region for block: B:185:0x0464  */
    /* JADX WARN: Removed duplicated region for block: B:199:0x04b5  */
    /* JADX WARN: Removed duplicated region for block: B:205:0x04f2  */
    /* JADX WARN: Removed duplicated region for block: B:209:0x0534  */
    /* JADX WARN: Removed duplicated region for block: B:212:0x053c  */
    /* JADX WARN: Removed duplicated region for block: B:213:0x0547  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingBotContextResult$84(final long j, final TLRPC$BotInlineResult tLRPC$BotInlineResult, final AccountInstance accountInstance, final HashMap hashMap, final BaseFragment baseFragment, final MessageObject messageObject, final MessageObject messageObject2, final boolean z, final int i, final String str, final int i2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote) {
        String str2;
        char c;
        TLRPC$TL_photo tLRPC$TL_photo;
        Bitmap loadBitmap;
        boolean z2;
        int i3;
        int lastIndexOf;
        final TLRPC$TL_photo tLRPC$TL_photo2;
        final TLRPC$TL_game tLRPC$TL_game;
        String str3;
        Object obj;
        final Bitmap[] bitmapArr;
        final String[] strArr;
        TLRPC$InputPeer inputPeer;
        int i4;
        TLRPC$WebDocument tLRPC$WebDocument;
        TLRPC$BotInlineResult tLRPC$BotInlineResult2 = tLRPC$BotInlineResult;
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        TLRPC$TL_document tLRPC$TL_document = null;
        if ("game".equals(tLRPC$BotInlineResult2.type)) {
            if (isEncryptedDialog) {
                return;
            }
            TLRPC$TL_game tLRPC$TL_game2 = new TLRPC$TL_game();
            tLRPC$TL_game2.title = tLRPC$BotInlineResult2.title;
            tLRPC$TL_game2.description = tLRPC$BotInlineResult2.description;
            tLRPC$TL_game2.short_name = tLRPC$BotInlineResult2.id;
            TLRPC$Photo tLRPC$Photo = tLRPC$BotInlineResult2.photo;
            tLRPC$TL_game2.photo = tLRPC$Photo;
            if (tLRPC$Photo == null) {
                tLRPC$TL_game2.photo = new TLRPC$TL_photoEmpty();
            }
            TLRPC$Document tLRPC$Document = tLRPC$BotInlineResult2.document;
            if (tLRPC$Document instanceof TLRPC$TL_document) {
                tLRPC$TL_game2.document = tLRPC$Document;
                tLRPC$TL_game2.flags |= 1;
            }
            tLRPC$TL_game = tLRPC$TL_game2;
            str3 = null;
            tLRPC$TL_photo2 = null;
        } else if (tLRPC$BotInlineResult2 instanceof TLRPC$TL_botInlineMediaResult) {
            TLRPC$Document tLRPC$Document2 = tLRPC$BotInlineResult2.document;
            if (tLRPC$Document2 != null) {
                if (tLRPC$Document2 instanceof TLRPC$TL_document) {
                    tLRPC$TL_photo2 = null;
                    tLRPC$TL_game = 0;
                    tLRPC$TL_document = (TLRPC$TL_document) tLRPC$Document2;
                    str3 = null;
                }
            } else {
                TLRPC$Photo tLRPC$Photo2 = tLRPC$BotInlineResult2.photo;
                if (tLRPC$Photo2 != null && (tLRPC$Photo2 instanceof TLRPC$TL_photo)) {
                    tLRPC$TL_photo2 = (TLRPC$TL_photo) tLRPC$Photo2;
                    str3 = null;
                    obj = null;
                    tLRPC$TL_game = obj;
                }
            }
            str3 = null;
            tLRPC$TL_document = null;
            tLRPC$TL_photo2 = null;
            tLRPC$TL_game = tLRPC$TL_photo2;
        } else {
            TLRPC$WebDocument tLRPC$WebDocument2 = tLRPC$BotInlineResult2.content;
            if (tLRPC$WebDocument2 != null) {
                String httpUrlExtension = ImageLoader.getHttpUrlExtension(tLRPC$WebDocument2.url, null);
                File file = new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult2.content.url) + (TextUtils.isEmpty(httpUrlExtension) ? FileLoader.getExtensionByMimeType(tLRPC$BotInlineResult2.content.mime_type) : "." + httpUrlExtension));
                if (file.exists()) {
                    str2 = file.getAbsolutePath();
                } else {
                    str2 = tLRPC$BotInlineResult2.content.url;
                }
                String str4 = str2;
                String str5 = tLRPC$BotInlineResult2.type;
                str5.hashCode();
                char c2 = 5;
                switch (str5.hashCode()) {
                    case -1890252483:
                        if (str5.equals("sticker")) {
                            c = 0;
                            break;
                        }
                        c = 65535;
                        break;
                    case 102340:
                        if (str5.equals("gif")) {
                            c = 1;
                            break;
                        }
                        c = 65535;
                        break;
                    case 3143036:
                        if (str5.equals("file")) {
                            c = 2;
                            break;
                        }
                        c = 65535;
                        break;
                    case 93166550:
                        if (str5.equals(MediaStreamTrack.AUDIO_TRACK_KIND)) {
                            c = 3;
                            break;
                        }
                        c = 65535;
                        break;
                    case 106642994:
                        if (str5.equals("photo")) {
                            c = 4;
                            break;
                        }
                        c = 65535;
                        break;
                    case 112202875:
                        if (str5.equals(MediaStreamTrack.VIDEO_TRACK_KIND)) {
                            c = 5;
                            break;
                        }
                        c = 65535;
                        break;
                    case 112386354:
                        if (str5.equals("voice")) {
                            c = 6;
                            break;
                        }
                        c = 65535;
                        break;
                    default:
                        c = 65535;
                        break;
                }
                switch (c) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 5:
                    case 6:
                        TLRPC$TL_document tLRPC$TL_document2 = new TLRPC$TL_document();
                        tLRPC$TL_document2.id = 0L;
                        tLRPC$TL_document2.size = 0L;
                        tLRPC$TL_document2.dc_id = 0;
                        tLRPC$BotInlineResult2 = tLRPC$BotInlineResult;
                        tLRPC$TL_document2.mime_type = tLRPC$BotInlineResult2.content.mime_type;
                        tLRPC$TL_document2.file_reference = new byte[0];
                        tLRPC$TL_document2.date = accountInstance.getConnectionsManager().getCurrentTime();
                        TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                        tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeFilename);
                        String str6 = tLRPC$BotInlineResult2.type;
                        str6.hashCode();
                        switch (str6.hashCode()) {
                            case -1890252483:
                                if (str6.equals("sticker")) {
                                    c2 = 0;
                                    break;
                                }
                                c2 = 65535;
                                break;
                            case 102340:
                                if (str6.equals("gif")) {
                                    c2 = 1;
                                    break;
                                }
                                c2 = 65535;
                                break;
                            case 3143036:
                                if (str6.equals("file")) {
                                    c2 = 2;
                                    break;
                                }
                                c2 = 65535;
                                break;
                            case 93166550:
                                if (str6.equals(MediaStreamTrack.AUDIO_TRACK_KIND)) {
                                    c2 = 3;
                                    break;
                                }
                                c2 = 65535;
                                break;
                            case 112202875:
                                if (str6.equals(MediaStreamTrack.VIDEO_TRACK_KIND)) {
                                    c2 = 4;
                                    break;
                                }
                                c2 = 65535;
                                break;
                            case 112386354:
                                break;
                            default:
                                c2 = 65535;
                                break;
                        }
                        switch (c2) {
                            case 0:
                                TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                tLRPC$TL_documentAttributeSticker.alt = "";
                                tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeSticker);
                                TLRPC$TL_documentAttributeImageSize tLRPC$TL_documentAttributeImageSize = new TLRPC$TL_documentAttributeImageSize();
                                int[] inlineResultWidthAndHeight = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                tLRPC$TL_documentAttributeImageSize.w = inlineResultWidthAndHeight[0];
                                tLRPC$TL_documentAttributeImageSize.h = inlineResultWidthAndHeight[1];
                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeImageSize);
                                tLRPC$TL_documentAttributeFilename.file_name = "sticker.webp";
                                try {
                                    if (tLRPC$BotInlineResult2.thumb != null) {
                                        tLRPC$TL_photo = null;
                                        try {
                                            Bitmap loadBitmap2 = ImageLoader.loadBitmap(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult2.thumb.url) + "." + ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult2.thumb.url, "webp")).getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            if (loadBitmap2 != null) {
                                                TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap2, 90.0f, 90.0f, 55, false);
                                                if (scaleAndSaveImage != null) {
                                                    tLRPC$TL_document2.thumbs.add(scaleAndSaveImage);
                                                    tLRPC$TL_document2.flags |= 1;
                                                }
                                                loadBitmap2.recycle();
                                            }
                                        } catch (Throwable th) {
                                            th = th;
                                            FileLog.e(th);
                                            if (tLRPC$TL_documentAttributeFilename.file_name == null) {
                                            }
                                            if (tLRPC$TL_document2.mime_type == null) {
                                            }
                                            if (tLRPC$TL_document2.thumbs.isEmpty()) {
                                            }
                                            tLRPC$TL_photo2 = tLRPC$TL_photo;
                                            tLRPC$TL_game = tLRPC$TL_photo2;
                                            str3 = str4;
                                            tLRPC$TL_document = tLRPC$TL_document2;
                                            if (hashMap != null) {
                                                hashMap.put("originalPath", tLRPC$WebDocument.url);
                                                break;
                                            }
                                            bitmapArr = new Bitmap[1];
                                            strArr = new String[1];
                                            if (isEncryptedDialog) {
                                                while (i4 < tLRPC$TL_document.attributes.size()) {
                                                }
                                            }
                                            if (!MessageObject.isGifDocument(tLRPC$TL_document)) {
                                            }
                                            if (DialogObject.isEncryptedDialog(j)) {
                                            }
                                            if (inputPeer == null) {
                                                break;
                                            }
                                            final TLRPC$TL_document tLRPC$TL_document3 = tLRPC$TL_document;
                                            final String str7 = str3;
                                            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda75
                                                @Override // java.lang.Runnable
                                                public final void run() {
                                                    SendMessagesHelper.lambda$prepareSendingBotContextResult$83(TLRPC$TL_document.this, bitmapArr, strArr, str7, j, messageObject, messageObject2, tLRPC$BotInlineResult, hashMap, z, i, tLRPC$TL_photo2, tLRPC$TL_game, str, i2, tL_stories$StoryItem, replyQuote, accountInstance);
                                                }
                                            });
                                        }
                                    }
                                    tLRPC$TL_photo = null;
                                } catch (Throwable th2) {
                                    th = th2;
                                    tLRPC$TL_photo = null;
                                }
                                break;
                            case 1:
                                tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                                if (str4.endsWith("mp4")) {
                                    tLRPC$TL_document2.mime_type = "video/mp4";
                                    tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                } else {
                                    tLRPC$TL_document2.mime_type = "image/gif";
                                }
                                int i5 = isEncryptedDialog ? 90 : 320;
                                try {
                                    if (str4.endsWith("mp4")) {
                                        loadBitmap = createVideoThumbnail(str4, 1);
                                        if (loadBitmap == null) {
                                            TLRPC$WebDocument tLRPC$WebDocument3 = tLRPC$BotInlineResult2.thumb;
                                            if ((tLRPC$WebDocument3 instanceof TLRPC$TL_webDocument) && "video/mp4".equals(tLRPC$WebDocument3.mime_type)) {
                                                String httpUrlExtension2 = ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult2.thumb.url, null);
                                                loadBitmap = createVideoThumbnail(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult2.thumb.url) + (TextUtils.isEmpty(httpUrlExtension2) ? FileLoader.getExtensionByMimeType(tLRPC$BotInlineResult2.thumb.mime_type) : "." + httpUrlExtension2)).getAbsolutePath(), 1);
                                            }
                                        }
                                    } else {
                                        float f = i5;
                                        loadBitmap = ImageLoader.loadBitmap(str4, null, f, f, true);
                                    }
                                    if (loadBitmap != null) {
                                        float f2 = i5;
                                        if (i5 > 90) {
                                            z2 = false;
                                            i3 = 80;
                                        } else {
                                            z2 = false;
                                            i3 = 55;
                                        }
                                        TLRPC$PhotoSize scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(loadBitmap, f2, f2, i3, z2);
                                        if (scaleAndSaveImage2 != null) {
                                            tLRPC$TL_document2.thumbs.add(scaleAndSaveImage2);
                                            tLRPC$TL_document2.flags |= 1;
                                        }
                                        loadBitmap.recycle();
                                    }
                                } catch (Throwable th3) {
                                    FileLog.e(th3);
                                }
                                tLRPC$TL_photo = null;
                                break;
                            case 2:
                                if (tLRPC$BotInlineResult2.content.mime_type.lastIndexOf(47) != -1) {
                                    tLRPC$TL_documentAttributeFilename.file_name = "file." + tLRPC$BotInlineResult2.content.mime_type.substring(lastIndexOf + 1);
                                } else {
                                    tLRPC$TL_documentAttributeFilename.file_name = "file";
                                }
                                tLRPC$TL_photo = null;
                                break;
                            case 3:
                                TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio = new TLRPC$TL_documentAttributeAudio();
                                tLRPC$TL_documentAttributeAudio.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                tLRPC$TL_documentAttributeAudio.title = tLRPC$BotInlineResult2.title;
                                int i6 = tLRPC$TL_documentAttributeAudio.flags | 1;
                                tLRPC$TL_documentAttributeAudio.flags = i6;
                                String str8 = tLRPC$BotInlineResult2.description;
                                if (str8 != null) {
                                    tLRPC$TL_documentAttributeAudio.performer = str8;
                                    tLRPC$TL_documentAttributeAudio.flags = i6 | 2;
                                }
                                tLRPC$TL_documentAttributeFilename.file_name = "audio.mp3";
                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeAudio);
                                tLRPC$TL_photo = null;
                                break;
                            case 4:
                                tLRPC$TL_documentAttributeFilename.file_name = "video.mp4";
                                TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                int[] inlineResultWidthAndHeight2 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                                tLRPC$TL_documentAttributeVideo.w = inlineResultWidthAndHeight2[0];
                                tLRPC$TL_documentAttributeVideo.h = inlineResultWidthAndHeight2[1];
                                tLRPC$TL_documentAttributeVideo.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeVideo);
                                try {
                                    if (tLRPC$BotInlineResult2.thumb != null) {
                                        Bitmap loadBitmap3 = ImageLoader.loadBitmap(new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult2.thumb.url) + "." + ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult2.thumb.url, "jpg")).getAbsolutePath(), null, 90.0f, 90.0f, true);
                                        if (loadBitmap3 != null) {
                                            TLRPC$PhotoSize scaleAndSaveImage3 = ImageLoader.scaleAndSaveImage(loadBitmap3, 90.0f, 90.0f, 55, false);
                                            if (scaleAndSaveImage3 != null) {
                                                tLRPC$TL_document2.thumbs.add(scaleAndSaveImage3);
                                                tLRPC$TL_document2.flags |= 1;
                                            }
                                            loadBitmap3.recycle();
                                        }
                                    }
                                } catch (Throwable th4) {
                                    FileLog.e(th4);
                                }
                                tLRPC$TL_photo = null;
                                break;
                            case 5:
                                TLRPC$TL_documentAttributeAudio tLRPC$TL_documentAttributeAudio2 = new TLRPC$TL_documentAttributeAudio();
                                tLRPC$TL_documentAttributeAudio2.duration = MessageObject.getInlineResultDuration(tLRPC$BotInlineResult);
                                tLRPC$TL_documentAttributeAudio2.voice = true;
                                tLRPC$TL_documentAttributeFilename.file_name = "audio.ogg";
                                tLRPC$TL_document2.attributes.add(tLRPC$TL_documentAttributeAudio2);
                                tLRPC$TL_photo = null;
                                break;
                            default:
                                tLRPC$TL_photo = null;
                                break;
                        }
                        if (tLRPC$TL_documentAttributeFilename.file_name == null) {
                            tLRPC$TL_documentAttributeFilename.file_name = "file";
                        }
                        if (tLRPC$TL_document2.mime_type == null) {
                            tLRPC$TL_document2.mime_type = "application/octet-stream";
                        }
                        if (tLRPC$TL_document2.thumbs.isEmpty()) {
                            TLRPC$TL_photoSize tLRPC$TL_photoSize = new TLRPC$TL_photoSize();
                            int[] inlineResultWidthAndHeight3 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                            tLRPC$TL_photoSize.w = inlineResultWidthAndHeight3[0];
                            tLRPC$TL_photoSize.h = inlineResultWidthAndHeight3[1];
                            tLRPC$TL_photoSize.size = 0;
                            tLRPC$TL_photoSize.location = new TLRPC$TL_fileLocationUnavailable();
                            tLRPC$TL_photoSize.type = "x";
                            tLRPC$TL_document2.thumbs.add(tLRPC$TL_photoSize);
                            tLRPC$TL_document2.flags |= 1;
                        }
                        tLRPC$TL_photo2 = tLRPC$TL_photo;
                        tLRPC$TL_game = tLRPC$TL_photo2;
                        str3 = str4;
                        tLRPC$TL_document = tLRPC$TL_document2;
                        break;
                    case 4:
                        TLRPC$TL_photo generatePhotoSizes = file.exists() ? accountInstance.getSendMessagesHelper().generatePhotoSizes(str4, null) : null;
                        if (generatePhotoSizes == null) {
                            generatePhotoSizes = new TLRPC$TL_photo();
                            generatePhotoSizes.date = accountInstance.getConnectionsManager().getCurrentTime();
                            generatePhotoSizes.file_reference = new byte[0];
                            TLRPC$TL_photoSize tLRPC$TL_photoSize2 = new TLRPC$TL_photoSize();
                            int[] inlineResultWidthAndHeight4 = MessageObject.getInlineResultWidthAndHeight(tLRPC$BotInlineResult);
                            tLRPC$TL_photoSize2.w = inlineResultWidthAndHeight4[0];
                            tLRPC$TL_photoSize2.h = inlineResultWidthAndHeight4[1];
                            tLRPC$TL_photoSize2.size = 1;
                            tLRPC$TL_photoSize2.location = new TLRPC$TL_fileLocationUnavailable();
                            tLRPC$TL_photoSize2.type = "x";
                            generatePhotoSizes.sizes.add(tLRPC$TL_photoSize2);
                        }
                        tLRPC$TL_photo2 = generatePhotoSizes;
                        str3 = str4;
                        obj = null;
                        tLRPC$TL_game = obj;
                        break;
                    default:
                        str3 = str4;
                        tLRPC$TL_photo2 = null;
                        tLRPC$TL_game = tLRPC$TL_photo2;
                        break;
                }
            }
            str3 = null;
            tLRPC$TL_document = null;
            tLRPC$TL_photo2 = null;
            tLRPC$TL_game = tLRPC$TL_photo2;
        }
        if (hashMap != null && (tLRPC$WebDocument = tLRPC$BotInlineResult2.content) != null) {
            hashMap.put("originalPath", tLRPC$WebDocument.url);
        }
        bitmapArr = new Bitmap[1];
        strArr = new String[1];
        if (isEncryptedDialog && tLRPC$TL_document != null) {
            for (i4 = 0; i4 < tLRPC$TL_document.attributes.size(); i4++) {
                if (tLRPC$TL_document.attributes.get(i4) instanceof TLRPC$TL_documentAttributeVideo) {
                    TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo2 = (TLRPC$TL_documentAttributeVideo) tLRPC$TL_document.attributes.get(i4);
                    TLRPC$TL_documentAttributeVideo_layer159 tLRPC$TL_documentAttributeVideo_layer159 = new TLRPC$TL_documentAttributeVideo_layer159();
                    tLRPC$TL_documentAttributeVideo_layer159.flags = tLRPC$TL_documentAttributeVideo2.flags;
                    tLRPC$TL_documentAttributeVideo_layer159.round_message = tLRPC$TL_documentAttributeVideo2.round_message;
                    tLRPC$TL_documentAttributeVideo_layer159.supports_streaming = tLRPC$TL_documentAttributeVideo2.supports_streaming;
                    tLRPC$TL_documentAttributeVideo_layer159.duration = tLRPC$TL_documentAttributeVideo2.duration;
                    tLRPC$TL_documentAttributeVideo_layer159.w = tLRPC$TL_documentAttributeVideo2.w;
                    tLRPC$TL_documentAttributeVideo_layer159.h = tLRPC$TL_documentAttributeVideo2.h;
                    tLRPC$TL_document.attributes.set(i4, tLRPC$TL_documentAttributeVideo_layer159);
                }
            }
        }
        if (!MessageObject.isGifDocument(tLRPC$TL_document)) {
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_document.thumbs, 320);
            File pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document);
            if (!pathToAttach.exists()) {
                pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document, true);
            }
            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, pathToAttach.getAbsolutePath(), null, 0L);
            strArr[0] = getKeyForPhotoSize(accountInstance, closestPhotoSizeWithSize, bitmapArr, true, true);
        }
        inputPeer = DialogObject.isEncryptedDialog(j) ? accountInstance.getMessagesController().getInputPeer(j) : null;
        if (inputPeer == null && inputPeer.user_id != 0 && accountInstance.getMessagesController().getUserFull(inputPeer.user_id) != null && accountInstance.getMessagesController().getUserFull(inputPeer.user_id).voice_messages_forbidden && tLRPC$TL_document != null) {
            if (MessageObject.isVoiceDocument(tLRPC$TL_document)) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda77
                    @Override // java.lang.Runnable
                    public final void run() {
                        AlertsCreator.showSendMediaAlert(7, BaseFragment.this, null);
                    }
                });
                return;
            } else if (MessageObject.isRoundVideoDocument(tLRPC$TL_document)) {
                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda76
                    @Override // java.lang.Runnable
                    public final void run() {
                        AlertsCreator.showSendMediaAlert(8, BaseFragment.this, null);
                    }
                });
                return;
            } else {
                return;
            }
        }
        final TLRPC$TL_document tLRPC$TL_document32 = tLRPC$TL_document;
        final String str72 = str3;
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda75
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingBotContextResult$83(TLRPC$TL_document.this, bitmapArr, strArr, str72, j, messageObject, messageObject2, tLRPC$BotInlineResult, hashMap, z, i, tLRPC$TL_photo2, tLRPC$TL_game, str, i2, tL_stories$StoryItem, replyQuote, accountInstance);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingBotContextResult$83(TLRPC$TL_document tLRPC$TL_document, Bitmap[] bitmapArr, String[] strArr, String str, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$BotInlineResult tLRPC$BotInlineResult, HashMap hashMap, boolean z, int i, TLRPC$TL_photo tLRPC$TL_photo, TLRPC$TL_game tLRPC$TL_game, String str2, int i2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, AccountInstance accountInstance) {
        SendMessageParams sendMessageParams = null;
        if (tLRPC$TL_document != null) {
            if (bitmapArr[0] != null && strArr[0] != null) {
                ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
            }
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage = tLRPC$BotInlineResult.send_message;
            sendMessageParams = SendMessageParams.of(tLRPC$TL_document, null, str, j, messageObject, messageObject2, tLRPC$BotInlineMessage.message, tLRPC$BotInlineMessage.entities, tLRPC$BotInlineMessage.reply_markup, hashMap, z, i, 0, tLRPC$BotInlineResult, null, false);
        } else if (tLRPC$TL_photo != null) {
            TLRPC$WebDocument tLRPC$WebDocument = tLRPC$BotInlineResult.content;
            String str3 = tLRPC$WebDocument != null ? tLRPC$WebDocument.url : null;
            TLRPC$BotInlineMessage tLRPC$BotInlineMessage2 = tLRPC$BotInlineResult.send_message;
            sendMessageParams = SendMessageParams.of(tLRPC$TL_photo, str3, j, messageObject, messageObject2, tLRPC$BotInlineMessage2.message, tLRPC$BotInlineMessage2.entities, tLRPC$BotInlineMessage2.reply_markup, hashMap, z, i, 0, tLRPC$BotInlineResult, false);
        } else if (tLRPC$TL_game != null) {
            sendMessageParams = SendMessageParams.of(tLRPC$TL_game, j, messageObject, messageObject2, tLRPC$BotInlineResult.send_message.reply_markup, hashMap, z, i);
        }
        if (sendMessageParams != null) {
            sendMessageParams.quick_reply_shortcut = str2;
            sendMessageParams.quick_reply_shortcut_id = i2;
            sendMessageParams.replyToStoryItem = tL_stories$StoryItem;
            sendMessageParams.replyQuote = replyQuote;
            accountInstance.getSendMessagesHelper().sendMessage(sendMessageParams);
        }
    }

    private static String getTrimmedString(String str) {
        String trim = str.trim();
        if (trim.length() == 0) {
            return trim;
        }
        while (str.startsWith("\n")) {
            str = str.substring(1);
        }
        while (str.endsWith("\n")) {
            str = str.substring(0, str.length() - 1);
        }
        return str;
    }

    public static void prepareSendingText(AccountInstance accountInstance, String str, long j, boolean z, int i, long j2) {
        prepareSendingText(accountInstance, str, j, 0L, z, i, j2);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingText$86(final String str, final long j, final AccountInstance accountInstance, final long j2, final boolean z, final int i, final long j3) {
        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda9
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingText$85(str, j, accountInstance, j2, z, i, j3);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingText$87(final String str, final long j, final AccountInstance accountInstance, final long j2, final boolean z, final int i, final long j3) {
        Utilities.stageQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda8
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingText$86(str, j, accountInstance, j2, z, i, j3);
            }
        });
    }

    public static void prepareSendingText(final AccountInstance accountInstance, final String str, final long j, final long j2, final boolean z, final int i, final long j3) {
        accountInstance.getMessagesStorage().getStorageQueue().postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda7
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingText$87(str, j2, accountInstance, j, z, i, j3);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingText$85(String str, long j, AccountInstance accountInstance, long j2, boolean z, int i, long j3) {
        TLRPC$TL_forumTopic findTopic;
        String trimmedString = getTrimmedString(str);
        if (trimmedString.length() != 0) {
            int ceil = (int) Math.ceil(trimmedString.length() / 4096.0f);
            MessageObject messageObject = null;
            int i2 = 0;
            if (j != 0 && (findTopic = accountInstance.getMessagesController().getTopicsController().findTopic(-j2, j)) != null && findTopic.topicStartMessage != null) {
                messageObject = new MessageObject(accountInstance.getCurrentAccount(), findTopic.topicStartMessage, false, false);
                messageObject.isTopicMainMessage = true;
            }
            while (i2 < ceil) {
                int i3 = i2 + 1;
                SendMessageParams of = SendMessageParams.of(trimmedString.substring(i2 * LiteMode.FLAG_ANIMATED_EMOJI_CHAT_NOT_PREMIUM, Math.min(i3 * LiteMode.FLAG_ANIMATED_EMOJI_CHAT_NOT_PREMIUM, trimmedString.length())), j2, messageObject, messageObject, null, true, null, null, null, z, i, null, false);
                if (i2 == 0) {
                    of.effect_id = j3;
                }
                accountInstance.getSendMessagesHelper().sendMessage(of);
                i2 = i3;
            }
        }
    }

    public static void ensureMediaThumbExists(AccountInstance accountInstance, boolean z, TLObject tLObject, String str, Uri uri, long j) {
        TLRPC$PhotoSize scaleAndSaveImage;
        TLRPC$PhotoSize scaleAndSaveImage2;
        if (tLObject instanceof TLRPC$TL_photo) {
            TLRPC$TL_photo tLRPC$TL_photo = (TLRPC$TL_photo) tLObject;
            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo.sizes, 90);
            boolean exists = ((closestPhotoSizeWithSize instanceof TLRPC$TL_photoStrippedSize) || (closestPhotoSizeWithSize instanceof TLRPC$TL_photoPathSize)) ? true : FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize, true).exists();
            TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo.sizes, AndroidUtilities.getPhotoSize());
            boolean exists2 = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize2, false).exists();
            if (exists && exists2) {
                return;
            }
            Bitmap loadBitmap = ImageLoader.loadBitmap(str, uri, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), true);
            if (loadBitmap == null) {
                loadBitmap = ImageLoader.loadBitmap(str, uri, 800.0f, 800.0f, true);
            }
            Bitmap bitmap = loadBitmap;
            if (!exists2 && (scaleAndSaveImage2 = ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize2, bitmap, Bitmap.CompressFormat.JPEG, true, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), 80, false, 101, 101, false)) != closestPhotoSizeWithSize2) {
                tLRPC$TL_photo.sizes.add(0, scaleAndSaveImage2);
            }
            if (!exists && (scaleAndSaveImage = ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize, bitmap, 90.0f, 90.0f, 55, true, false)) != closestPhotoSizeWithSize) {
                tLRPC$TL_photo.sizes.add(0, scaleAndSaveImage);
            }
            if (bitmap != null) {
                bitmap.recycle();
            }
        } else if (tLObject instanceof TLRPC$TL_document) {
            TLRPC$TL_document tLRPC$TL_document = (TLRPC$TL_document) tLObject;
            if ((MessageObject.isVideoDocument(tLRPC$TL_document) || MessageObject.isNewGifDocument(tLRPC$TL_document)) && MessageObject.isDocumentHasThumb(tLRPC$TL_document)) {
                TLRPC$PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_document.thumbs, 320);
                if ((closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoStrippedSize) || (closestPhotoSizeWithSize3 instanceof TLRPC$TL_photoPathSize) || FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(closestPhotoSizeWithSize3, true).exists()) {
                    return;
                }
                Bitmap createVideoThumbnailAtTime = createVideoThumbnailAtTime(str, j);
                Bitmap createVideoThumbnail = createVideoThumbnailAtTime == null ? createVideoThumbnail(str, 1) : createVideoThumbnailAtTime;
                int i = z ? 90 : 320;
                float f = i;
                tLRPC$TL_document.thumbs.set(0, ImageLoader.scaleAndSaveImage(closestPhotoSizeWithSize3, createVideoThumbnail, f, f, i > 90 ? 80 : 55, false, true));
            }
        }
    }

    public static String getKeyForPhotoSize(AccountInstance accountInstance, TLRPC$PhotoSize tLRPC$PhotoSize, Bitmap[] bitmapArr, boolean z, boolean z2) {
        if (tLRPC$PhotoSize == null || tLRPC$PhotoSize.location == null) {
            return null;
        }
        Point messageSize = ChatMessageCell.getMessageSize(tLRPC$PhotoSize.w, tLRPC$PhotoSize.h);
        if (bitmapArr != null) {
            try {
                BitmapFactory.Options options = new BitmapFactory.Options();
                options.inJustDecodeBounds = true;
                File pathToAttach = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$PhotoSize, z2);
                FileInputStream fileInputStream = new FileInputStream(pathToAttach);
                BitmapFactory.decodeStream(fileInputStream, null, options);
                fileInputStream.close();
                float max = Math.max(options.outWidth / messageSize.x, options.outHeight / messageSize.y);
                if (max < 1.0f) {
                    max = 1.0f;
                }
                options.inJustDecodeBounds = false;
                options.inSampleSize = (int) max;
                options.inPreferredConfig = Bitmap.Config.RGB_565;
                if (Build.VERSION.SDK_INT >= 21) {
                    FileInputStream fileInputStream2 = new FileInputStream(pathToAttach);
                    bitmapArr[0] = BitmapFactory.decodeStream(fileInputStream2, null, options);
                    fileInputStream2.close();
                }
            } catch (Throwable unused) {
            }
        }
        return String.format(Locale.US, z ? "%d_%d@%d_%d_b" : "%d_%d@%d_%d", Long.valueOf(tLRPC$PhotoSize.location.volume_id), Integer.valueOf(tLRPC$PhotoSize.location.local_id), Integer.valueOf((int) (messageSize.x / AndroidUtilities.density)), Integer.valueOf((int) (messageSize.y / AndroidUtilities.density)));
    }

    public static boolean shouldSendWebPAsSticker(String str, Uri uri) {
        BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = true;
        if (str != null) {
            try {
                RandomAccessFile randomAccessFile = new RandomAccessFile(str, "r");
                MappedByteBuffer map = randomAccessFile.getChannel().map(FileChannel.MapMode.READ_ONLY, 0L, str.length());
                Utilities.loadWebpImage(null, map, map.limit(), options, true);
                randomAccessFile.close();
            } catch (Exception e) {
                FileLog.e(e);
            }
        } else {
            try {
                InputStream openInputStream = ApplicationLoader.applicationContext.getContentResolver().openInputStream(uri);
                BitmapFactory.decodeStream(openInputStream, null, options);
                if (openInputStream != null) {
                    openInputStream.close();
                }
            } catch (Exception unused) {
            }
        }
        return options.outWidth < 800 && options.outHeight < 800;
    }

    public static void prepareSendingMedia(final AccountInstance accountInstance, final ArrayList<SendingMediaInfo> arrayList, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final boolean z, boolean z2, final MessageObject messageObject3, final boolean z3, final int i, int i2, final boolean z4, final InputContentInfoCompat inputContentInfoCompat, final String str, final int i3, final long j2, final boolean z5) {
        final boolean z6;
        if (arrayList.isEmpty()) {
            return;
        }
        int size = arrayList.size();
        int i4 = 0;
        while (true) {
            if (i4 >= size) {
                z6 = z2;
                break;
            } else if (arrayList.get(i4).ttl > 0) {
                z6 = false;
                break;
            } else {
                i4++;
            }
        }
        mediaSendQueue.postRunnable(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda11
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingMedia$93(arrayList, j, z, z6, accountInstance, messageObject3, messageObject, messageObject2, z3, i, tL_stories$StoryItem, replyQuote, str, i3, j2, z5, inputContentInfoCompat, z4);
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x005d, code lost:
        if (r4 != false) goto L81;
     */
    /* JADX WARN: Code restructure failed: missing block: B:265:0x0656, code lost:
        if (r4 != null) goto L248;
     */
    /* JADX WARN: Code restructure failed: missing block: B:292:0x0698, code lost:
        if (r9.endsWith(r14) != false) goto L269;
     */
    /* JADX WARN: Code restructure failed: missing block: B:410:0x0916, code lost:
        if (r10 == (r15 - 1)) goto L314;
     */
    /* JADX WARN: Removed duplicated region for block: B:147:0x02f8 A[Catch: Exception -> 0x02e9, TryCatch #6 {Exception -> 0x02e9, blocks: (B:138:0x02e1, B:145:0x02ee, B:147:0x02f8, B:148:0x0303), top: B:672:0x02e1 }] */
    /* JADX WARN: Removed duplicated region for block: B:148:0x0303 A[Catch: Exception -> 0x02e9, TRY_LEAVE, TryCatch #6 {Exception -> 0x02e9, blocks: (B:138:0x02e1, B:145:0x02ee, B:147:0x02f8, B:148:0x0303), top: B:672:0x02e1 }] */
    /* JADX WARN: Removed duplicated region for block: B:166:0x033d  */
    /* JADX WARN: Removed duplicated region for block: B:167:0x0367  */
    /* JADX WARN: Removed duplicated region for block: B:173:0x0379  */
    /* JADX WARN: Removed duplicated region for block: B:176:0x0383  */
    /* JADX WARN: Removed duplicated region for block: B:193:0x0459  */
    /* JADX WARN: Removed duplicated region for block: B:315:0x06e8  */
    /* JADX WARN: Removed duplicated region for block: B:320:0x0739  */
    /* JADX WARN: Removed duplicated region for block: B:349:0x07ce  */
    /* JADX WARN: Removed duplicated region for block: B:407:0x08f6  */
    /* JADX WARN: Removed duplicated region for block: B:414:0x0921  */
    /* JADX WARN: Removed duplicated region for block: B:484:0x0b78  */
    /* JADX WARN: Removed duplicated region for block: B:567:0x0d17  */
    /* JADX WARN: Removed duplicated region for block: B:569:0x0d2d  */
    /* JADX WARN: Removed duplicated region for block: B:573:0x0d3a  */
    /* JADX WARN: Removed duplicated region for block: B:579:0x0d4c  */
    /* JADX WARN: Removed duplicated region for block: B:581:0x0d58  */
    /* JADX WARN: Removed duplicated region for block: B:587:0x0d66  */
    /* JADX WARN: Removed duplicated region for block: B:588:0x0d6a  */
    /* JADX WARN: Removed duplicated region for block: B:58:0x00bc  */
    /* JADX WARN: Removed duplicated region for block: B:592:0x0da4  */
    /* JADX WARN: Removed duplicated region for block: B:594:0x0da9  */
    /* JADX WARN: Removed duplicated region for block: B:596:0x0db0 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:59:0x00df  */
    /* JADX WARN: Removed duplicated region for block: B:607:0x0df2 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:617:0x0e2d A[LOOP:4: B:615:0x0e25->B:617:0x0e2d, LOOP_END] */
    /* JADX WARN: Removed duplicated region for block: B:662:0x0310 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:674:0x0651 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:700:0x0d49 A[SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:92:0x0176  */
    /* JADX WARN: Removed duplicated region for block: B:93:0x017b  */
    /* JADX WARN: Type inference failed for: r10v10 */
    /* JADX WARN: Type inference failed for: r10v15 */
    /* JADX WARN: Type inference failed for: r10v16 */
    /* JADX WARN: Type inference failed for: r13v12 */
    /* JADX WARN: Type inference failed for: r13v13, types: [boolean] */
    /* JADX WARN: Type inference failed for: r13v14 */
    /* JADX WARN: Type inference failed for: r13v37 */
    /* JADX WARN: Type inference failed for: r8v0 */
    /* JADX WARN: Type inference failed for: r8v40, types: [boolean] */
    /* JADX WARN: Type inference failed for: r8v42 */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingMedia$93(ArrayList arrayList, final long j, boolean z, boolean z2, final AccountInstance accountInstance, final MessageObject messageObject, final MessageObject messageObject2, final MessageObject messageObject3, final boolean z3, final int i, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final String str, final int i2, final long j2, final boolean z4, InputContentInfoCompat inputContentInfoCompat, final boolean z5) {
        int i3;
        HashMap hashMap;
        int i4;
        int i5;
        ArrayList arrayList2;
        boolean z6;
        int i6;
        long j3;
        ArrayList arrayList3;
        ArrayList arrayList4;
        int i7;
        String str2;
        String str3;
        HashMap hashMap2;
        String str4;
        long j4;
        ArrayList arrayList5;
        int i8;
        boolean z7;
        String str5;
        String str6;
        HashMap hashMap3;
        VideoEditedInfo videoEditedInfo;
        String str7;
        long j5;
        int i9;
        int i10;
        ArrayList arrayList6;
        ArrayList arrayList7;
        String str8;
        long j6;
        boolean z8;
        String str9;
        long j7;
        File file;
        String str10;
        Object obj;
        Object obj2;
        String str11;
        int i11;
        VideoEditedInfo videoEditedInfo2;
        String str12;
        TLRPC$TL_document tLRPC$TL_document;
        Object obj3;
        Object obj4;
        AccountInstance accountInstance2;
        String str13;
        final VideoEditedInfo videoEditedInfo3;
        SendingMediaInfo sendingMediaInfo;
        Object obj5;
        ArrayList arrayList8;
        Object obj6;
        Object obj7;
        VideoEditedInfo videoEditedInfo4;
        final Bitmap bitmap;
        final String str14;
        TLRPC$TL_document tLRPC$TL_document2;
        final HashMap hashMap4;
        String str15;
        long j8;
        int i12;
        int i13;
        int i14;
        ArrayList<TLRPC$InputDocument> arrayList9;
        int i15;
        int size;
        int i16;
        boolean z9;
        VideoEditedInfo videoEditedInfo5;
        SendingMediaInfo sendingMediaInfo2;
        Object obj8;
        String str16;
        Object obj9;
        Object obj10;
        int i17;
        ?? r13;
        String str17;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo;
        int i18;
        int i19;
        TLRPC$FileLocation tLRPC$FileLocation;
        int i20;
        MediaController.SearchImage searchImage;
        String str18;
        String str19;
        String str20;
        String str21;
        boolean z10;
        HashMap hashMap5;
        String str22;
        String str23;
        String str24;
        ArrayList arrayList10;
        String str25;
        String str26;
        String str27;
        int i21;
        Object obj11;
        Object obj12;
        Object obj13;
        TLRPC$TL_photo tLRPC$TL_photo;
        String str28;
        final TLRPC$TL_photo tLRPC$TL_photo2;
        String str29;
        Object obj14;
        String str30;
        TLRPC$TL_photo tLRPC$TL_photo3;
        Object obj15;
        Object obj16;
        Object obj17;
        Object obj18;
        int i22;
        int i23;
        String str31;
        ArrayList arrayList11;
        ArrayList arrayList12;
        ArrayList arrayList13;
        String str32;
        long j9;
        int i24;
        ArrayList arrayList14;
        ArrayList arrayList15;
        ArrayList arrayList16;
        Uri uri;
        InputStream inputStream;
        FileOutputStream fileOutputStream;
        Bitmap decodeStream;
        File file2;
        Uri uri2;
        final TLRPC$TL_photo tLRPC$TL_photo4;
        boolean z11;
        HashMap hashMap6;
        long j10;
        int i25;
        int i26;
        Uri uri3;
        File file3;
        TLRPC$TL_document tLRPC$TL_document3;
        Object obj19;
        final TLRPC$TL_document tLRPC$TL_document4;
        String str33;
        File file4;
        File file5;
        int i27;
        Bitmap loadBitmap;
        int i28;
        String str34;
        boolean z12;
        String str35;
        SendingMediaInfo sendingMediaInfo3;
        int i29;
        String str36;
        TLRPC$TL_photo tLRPC$TL_photo5;
        String str37;
        TLRPC$TL_photo tLRPC$TL_photo6;
        String str38;
        TLRPC$TL_photo tLRPC$TL_photo7;
        Uri uri4;
        Uri uri5;
        ArrayList arrayList17 = arrayList;
        long currentTimeMillis = System.currentTimeMillis();
        int size2 = arrayList.size();
        final boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        String str39 = ".gif";
        String str40 = "_";
        Uri uri6 = null;
        ?? r8 = 1;
        if (z || !z2) {
            i3 = 1;
            hashMap = null;
        } else {
            HashMap hashMap7 = new HashMap();
            int i30 = 0;
            while (i30 < size2) {
                SendingMediaInfo sendingMediaInfo4 = (SendingMediaInfo) arrayList17.get(i30);
                if (sendingMediaInfo4.searchImage == null && !sendingMediaInfo4.isVideo && sendingMediaInfo4.videoEditedInfo == null) {
                    String str41 = sendingMediaInfo4.path;
                    if (str41 != null || (uri5 = sendingMediaInfo4.uri) == null) {
                        str34 = str41;
                    } else {
                        str41 = AndroidUtilities.getPath(uri5);
                        str34 = sendingMediaInfo4.uri.toString();
                    }
                    if (str41 == null || sendingMediaInfo4.ttl > 0) {
                        z12 = false;
                    } else {
                        if (str41.endsWith(".gif")) {
                            z12 = false;
                        } else {
                            z12 = str41.endsWith(".webp");
                        }
                        if (arrayList.size() > r8 || ((z12 && !shouldSendWebPAsSticker(str41, uri6)) || !TextUtils.isEmpty(sendingMediaInfo4.caption))) {
                            sendingMediaInfo4.forceImage = r8;
                            if (str41 == null) {
                                File file6 = new File(str41);
                                str35 = str34 + file6.length() + "_" + file6.lastModified();
                            } else {
                                str35 = null;
                            }
                            if (isEncryptedDialog && sendingMediaInfo4.ttl == 0) {
                                Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str35, !isEncryptedDialog ? 0 : 3);
                                if (sentFile == null || !(sentFile[0] instanceof TLRPC$TL_photo)) {
                                    str37 = null;
                                    tLRPC$TL_photo6 = null;
                                } else {
                                    tLRPC$TL_photo6 = (TLRPC$TL_photo) sentFile[0];
                                    str37 = (String) sentFile[1];
                                }
                                if (tLRPC$TL_photo6 == null && sendingMediaInfo4.uri != null) {
                                    Object[] sentFile2 = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(sendingMediaInfo4.uri), !isEncryptedDialog ? 0 : 3);
                                    if (sentFile2 != null) {
                                        if (sentFile2[0] instanceof TLRPC$TL_photo) {
                                            tLRPC$TL_photo7 = (TLRPC$TL_photo) sentFile2[0];
                                            str38 = (String) sentFile2[1];
                                            TLRPC$TL_photo tLRPC$TL_photo8 = tLRPC$TL_photo7;
                                            sendingMediaInfo3 = sendingMediaInfo4;
                                            i28 = i30;
                                            TLRPC$TL_photo tLRPC$TL_photo9 = tLRPC$TL_photo7;
                                            i29 = 1;
                                            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo8, sendingMediaInfo4.path, sendingMediaInfo4.uri, 0L);
                                            str36 = str38;
                                            tLRPC$TL_photo5 = tLRPC$TL_photo9;
                                        } else {
                                            str38 = str37;
                                            tLRPC$TL_photo7 = tLRPC$TL_photo6;
                                            TLRPC$TL_photo tLRPC$TL_photo82 = tLRPC$TL_photo7;
                                            sendingMediaInfo3 = sendingMediaInfo4;
                                            i28 = i30;
                                            TLRPC$TL_photo tLRPC$TL_photo92 = tLRPC$TL_photo7;
                                            i29 = 1;
                                            ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo82, sendingMediaInfo4.path, sendingMediaInfo4.uri, 0L);
                                            str36 = str38;
                                            tLRPC$TL_photo5 = tLRPC$TL_photo92;
                                        }
                                    }
                                }
                                str38 = str37;
                                tLRPC$TL_photo7 = tLRPC$TL_photo6;
                                TLRPC$TL_photo tLRPC$TL_photo822 = tLRPC$TL_photo7;
                                sendingMediaInfo3 = sendingMediaInfo4;
                                i28 = i30;
                                TLRPC$TL_photo tLRPC$TL_photo922 = tLRPC$TL_photo7;
                                i29 = 1;
                                ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_photo822, sendingMediaInfo4.path, sendingMediaInfo4.uri, 0L);
                                str36 = str38;
                                tLRPC$TL_photo5 = tLRPC$TL_photo922;
                            } else {
                                sendingMediaInfo3 = sendingMediaInfo4;
                                i28 = i30;
                                i29 = 1;
                                str36 = null;
                                tLRPC$TL_photo5 = null;
                            }
                            final MediaSendPrepareWorker mediaSendPrepareWorker = new MediaSendPrepareWorker();
                            final SendingMediaInfo sendingMediaInfo5 = sendingMediaInfo3;
                            hashMap7.put(sendingMediaInfo5, mediaSendPrepareWorker);
                            if (tLRPC$TL_photo5 == null) {
                                mediaSendPrepareWorker.parentObject = str36;
                                mediaSendPrepareWorker.photo = tLRPC$TL_photo5;
                            } else {
                                mediaSendPrepareWorker.sync = new CountDownLatch(i29);
                                mediaSendThreadPool.execute(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda21
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingMedia$88(SendMessagesHelper.MediaSendPrepareWorker.this, accountInstance, sendingMediaInfo5, isEncryptedDialog);
                                    }
                                });
                            }
                            i30 = i28 + 1;
                            r8 = 1;
                            uri6 = null;
                        }
                    }
                    if (!ImageLoader.shouldSendImageAsDocument(sendingMediaInfo4.path, sendingMediaInfo4.uri)) {
                        if (str41 == null && (uri4 = sendingMediaInfo4.uri) != null && (MediaController.isGif(uri4) || (z12 = MediaController.isWebp(sendingMediaInfo4.uri)))) {
                            if (arrayList.size() > r8 || ((z12 && !shouldSendWebPAsSticker(null, sendingMediaInfo4.uri)) || !TextUtils.isEmpty(sendingMediaInfo4.caption))) {
                                sendingMediaInfo4.forceImage = r8;
                            }
                        }
                        if (str41 == null) {
                        }
                        if (isEncryptedDialog) {
                        }
                        sendingMediaInfo3 = sendingMediaInfo4;
                        i28 = i30;
                        i29 = 1;
                        str36 = null;
                        tLRPC$TL_photo5 = null;
                        final MediaSendPrepareWorker mediaSendPrepareWorker2 = new MediaSendPrepareWorker();
                        final SendingMediaInfo sendingMediaInfo52 = sendingMediaInfo3;
                        hashMap7.put(sendingMediaInfo52, mediaSendPrepareWorker2);
                        if (tLRPC$TL_photo5 == null) {
                        }
                        i30 = i28 + 1;
                        r8 = 1;
                        uri6 = null;
                    }
                }
                i28 = i30;
                i30 = i28 + 1;
                r8 = 1;
                uri6 = null;
            }
            i3 = 1;
            hashMap = hashMap7;
        }
        String str42 = ".webp";
        int i31 = 0;
        ArrayList arrayList18 = null;
        ArrayList arrayList19 = null;
        ArrayList arrayList20 = null;
        int i32 = 0;
        long j11 = 0;
        String str43 = null;
        ArrayList arrayList21 = null;
        ArrayList arrayList22 = null;
        long j12 = 0;
        while (i32 < size2) {
            String str44 = str40;
            final SendingMediaInfo sendingMediaInfo6 = (SendingMediaInfo) arrayList17.get(i32);
            final boolean z13 = i31 == 0;
            if (z2 && size2 > i3 && i31 % 10 == 0) {
                j12 = Utilities.random.nextLong();
                j3 = j12;
                i6 = 0;
            } else {
                i6 = i31;
                j3 = j11;
            }
            MediaController.SearchImage searchImage2 = sendingMediaInfo6.searchImage;
            String str45 = str39;
            HashMap hashMap8 = hashMap;
            ArrayList arrayList23 = arrayList18;
            int i33 = size2;
            if (searchImage2 != null) {
                ArrayList arrayList24 = arrayList19;
                if (sendingMediaInfo6.videoEditedInfo == null) {
                    ArrayList arrayList25 = arrayList20;
                    if (searchImage2.type == 1) {
                        final HashMap hashMap9 = new HashMap();
                        TLRPC$Document tLRPC$Document = sendingMediaInfo6.searchImage.document;
                        if (tLRPC$Document instanceof TLRPC$TL_document) {
                            tLRPC$TL_document3 = (TLRPC$TL_document) tLRPC$Document;
                            file3 = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(tLRPC$TL_document3, true);
                        } else {
                            file3 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo6.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo6.searchImage.imageUrl, "jpg"));
                            tLRPC$TL_document3 = null;
                        }
                        if (tLRPC$TL_document3 == null) {
                            TLRPC$TL_document tLRPC$TL_document5 = new TLRPC$TL_document();
                            i9 = i32;
                            tLRPC$TL_document5.id = 0L;
                            tLRPC$TL_document5.file_reference = new byte[0];
                            tLRPC$TL_document5.date = accountInstance.getConnectionsManager().getCurrentTime();
                            TLRPC$TL_documentAttributeFilename tLRPC$TL_documentAttributeFilename = new TLRPC$TL_documentAttributeFilename();
                            tLRPC$TL_documentAttributeFilename.file_name = "animation.gif";
                            tLRPC$TL_document5.attributes.add(tLRPC$TL_documentAttributeFilename);
                            tLRPC$TL_document5.size = sendingMediaInfo6.searchImage.size;
                            tLRPC$TL_document5.dc_id = 0;
                            if (!z && file3.toString().endsWith("mp4")) {
                                tLRPC$TL_document5.mime_type = "video/mp4";
                                tLRPC$TL_document5.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                            } else {
                                tLRPC$TL_document5.mime_type = "image/gif";
                            }
                            if (file3.exists()) {
                                file4 = file3;
                            } else {
                                file3 = null;
                                file4 = null;
                            }
                            if (file3 == null) {
                                file5 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo6.searchImage.thumbUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo6.searchImage.thumbUrl, "jpg"));
                                if (!file5.exists()) {
                                    file5 = null;
                                }
                            } else {
                                file5 = file3;
                            }
                            if (file5 != null) {
                                if (!isEncryptedDialog) {
                                    try {
                                        if (sendingMediaInfo6.ttl == 0) {
                                            i27 = 320;
                                            if (!file5.getAbsolutePath().endsWith("mp4")) {
                                                loadBitmap = createVideoThumbnail(file5.getAbsolutePath(), 1);
                                                obj19 = null;
                                            } else {
                                                float f = i27;
                                                obj19 = null;
                                                loadBitmap = ImageLoader.loadBitmap(file5.getAbsolutePath(), null, f, f, true);
                                            }
                                            if (loadBitmap != null) {
                                                try {
                                                    float f2 = i27;
                                                    TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(loadBitmap, f2, f2, i27 > 90 ? 80 : 55, isEncryptedDialog);
                                                    if (scaleAndSaveImage != null) {
                                                        tLRPC$TL_document5.thumbs.add(scaleAndSaveImage);
                                                        tLRPC$TL_document5.flags |= 1;
                                                    }
                                                    loadBitmap.recycle();
                                                } catch (Exception e) {
                                                    e = e;
                                                    FileLog.e(e);
                                                    if (tLRPC$TL_document5.thumbs.isEmpty()) {
                                                    }
                                                    file3 = file4;
                                                    tLRPC$TL_document4 = tLRPC$TL_document5;
                                                    String str46 = sendingMediaInfo6.searchImage.imageUrl;
                                                    if (file3 != null) {
                                                    }
                                                    str33 = sendingMediaInfo6.searchImage.imageUrl;
                                                    if (str33 != null) {
                                                    }
                                                    final String str47 = str46;
                                                    z7 = isEncryptedDialog;
                                                    i10 = i33;
                                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda14
                                                        @Override // java.lang.Runnable
                                                        public final void run() {
                                                            SendMessagesHelper.lambda$prepareSendingMedia$89(MessageObject.this, accountInstance, tLRPC$TL_document4, str47, hashMap9, sendingMediaInfo6, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, z13, j2, z4);
                                                        }
                                                    });
                                                    i31 = i6;
                                                    arrayList20 = arrayList25;
                                                    arrayList19 = arrayList24;
                                                    str5 = str45;
                                                    str7 = str44;
                                                    arrayList18 = arrayList23;
                                                    j5 = j3;
                                                    str6 = str42;
                                                    hashMap3 = hashMap8;
                                                    i32 = i9 + 1;
                                                    arrayList17 = arrayList;
                                                    hashMap = hashMap3;
                                                    str42 = str6;
                                                    isEncryptedDialog = z7;
                                                    str39 = str5;
                                                    str40 = str7;
                                                    j11 = j5;
                                                    size2 = i10;
                                                    i3 = 1;
                                                }
                                            }
                                        }
                                    } catch (Exception e2) {
                                        e = e2;
                                        obj19 = null;
                                        FileLog.e(e);
                                        if (tLRPC$TL_document5.thumbs.isEmpty()) {
                                        }
                                        file3 = file4;
                                        tLRPC$TL_document4 = tLRPC$TL_document5;
                                        String str462 = sendingMediaInfo6.searchImage.imageUrl;
                                        if (file3 != null) {
                                        }
                                        str33 = sendingMediaInfo6.searchImage.imageUrl;
                                        if (str33 != null) {
                                        }
                                        final String str472 = str462;
                                        z7 = isEncryptedDialog;
                                        i10 = i33;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda14
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingMedia$89(MessageObject.this, accountInstance, tLRPC$TL_document4, str472, hashMap9, sendingMediaInfo6, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, z13, j2, z4);
                                            }
                                        });
                                        i31 = i6;
                                        arrayList20 = arrayList25;
                                        arrayList19 = arrayList24;
                                        str5 = str45;
                                        str7 = str44;
                                        arrayList18 = arrayList23;
                                        j5 = j3;
                                        str6 = str42;
                                        hashMap3 = hashMap8;
                                        i32 = i9 + 1;
                                        arrayList17 = arrayList;
                                        hashMap = hashMap3;
                                        str42 = str6;
                                        isEncryptedDialog = z7;
                                        str39 = str5;
                                        str40 = str7;
                                        j11 = j5;
                                        size2 = i10;
                                        i3 = 1;
                                    }
                                }
                                i27 = 90;
                                if (!file5.getAbsolutePath().endsWith("mp4")) {
                                }
                                if (loadBitmap != null) {
                                }
                            } else {
                                obj19 = null;
                            }
                            if (tLRPC$TL_document5.thumbs.isEmpty()) {
                                TLRPC$TL_photoSize tLRPC$TL_photoSize = new TLRPC$TL_photoSize();
                                MediaController.SearchImage searchImage3 = sendingMediaInfo6.searchImage;
                                tLRPC$TL_photoSize.w = searchImage3.width;
                                tLRPC$TL_photoSize.h = searchImage3.height;
                                tLRPC$TL_photoSize.size = 0;
                                tLRPC$TL_photoSize.location = new TLRPC$TL_fileLocationUnavailable();
                                tLRPC$TL_photoSize.type = "x";
                                tLRPC$TL_document5.thumbs.add(tLRPC$TL_photoSize);
                                tLRPC$TL_document5.flags |= 1;
                            }
                            file3 = file4;
                            tLRPC$TL_document4 = tLRPC$TL_document5;
                        } else {
                            i9 = i32;
                            obj19 = null;
                            tLRPC$TL_document4 = tLRPC$TL_document3;
                        }
                        String str4622 = sendingMediaInfo6.searchImage.imageUrl;
                        if (file3 != null) {
                            str4622 = file3.toString();
                        }
                        str33 = sendingMediaInfo6.searchImage.imageUrl;
                        if (str33 != null) {
                            hashMap9.put("originalPath", str33);
                        }
                        final String str4722 = str4622;
                        z7 = isEncryptedDialog;
                        i10 = i33;
                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda14
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.lambda$prepareSendingMedia$89(MessageObject.this, accountInstance, tLRPC$TL_document4, str4722, hashMap9, sendingMediaInfo6, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, z13, j2, z4);
                            }
                        });
                        i31 = i6;
                        arrayList20 = arrayList25;
                        arrayList19 = arrayList24;
                        str5 = str45;
                        str7 = str44;
                        arrayList18 = arrayList23;
                        j5 = j3;
                        str6 = str42;
                        hashMap3 = hashMap8;
                        i32 = i9 + 1;
                        arrayList17 = arrayList;
                        hashMap = hashMap3;
                        str42 = str6;
                        isEncryptedDialog = z7;
                        str39 = str5;
                        str40 = str7;
                        j11 = j5;
                        size2 = i10;
                        i3 = 1;
                    } else {
                        int i34 = i32;
                        String str48 = str42;
                        z7 = isEncryptedDialog;
                        TLRPC$Photo tLRPC$Photo = searchImage2.photo;
                        TLRPC$TL_photo tLRPC$TL_photo10 = tLRPC$Photo instanceof TLRPC$TL_photo ? (TLRPC$TL_photo) tLRPC$Photo : null;
                        if (tLRPC$TL_photo10 == null) {
                            File file7 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo6.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo6.searchImage.imageUrl, "jpg"));
                            if (!file7.exists() || file7.length() == 0) {
                                uri3 = null;
                            } else {
                                uri3 = null;
                                tLRPC$TL_photo10 = accountInstance.getSendMessagesHelper().generatePhotoSizes(file7.toString(), null);
                                if (tLRPC$TL_photo10 != null) {
                                    z11 = false;
                                    if (tLRPC$TL_photo10 == null) {
                                        File file8 = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo6.searchImage.thumbUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo6.searchImage.thumbUrl, "jpg"));
                                        if (file8.exists()) {
                                            tLRPC$TL_photo10 = accountInstance.getSendMessagesHelper().generatePhotoSizes(file8.toString(), uri3);
                                        }
                                        if (tLRPC$TL_photo10 == null) {
                                            TLRPC$TL_photo tLRPC$TL_photo11 = new TLRPC$TL_photo();
                                            tLRPC$TL_photo11.date = accountInstance.getConnectionsManager().getCurrentTime();
                                            tLRPC$TL_photo11.file_reference = new byte[0];
                                            TLRPC$TL_photoSize tLRPC$TL_photoSize2 = new TLRPC$TL_photoSize();
                                            MediaController.SearchImage searchImage4 = sendingMediaInfo6.searchImage;
                                            tLRPC$TL_photoSize2.w = searchImage4.width;
                                            tLRPC$TL_photoSize2.h = searchImage4.height;
                                            tLRPC$TL_photoSize2.size = 0;
                                            tLRPC$TL_photoSize2.location = new TLRPC$TL_fileLocationUnavailable();
                                            tLRPC$TL_photoSize2.type = "x";
                                            tLRPC$TL_photo11.sizes.add(tLRPC$TL_photoSize2);
                                            tLRPC$TL_photo4 = tLRPC$TL_photo11;
                                        }
                                    }
                                    tLRPC$TL_photo4 = tLRPC$TL_photo10;
                                }
                            }
                            z11 = true;
                            if (tLRPC$TL_photo10 == null) {
                            }
                            tLRPC$TL_photo4 = tLRPC$TL_photo10;
                        } else {
                            tLRPC$TL_photo4 = tLRPC$TL_photo10;
                            z11 = true;
                        }
                        HashMap hashMap10 = new HashMap();
                        String str49 = sendingMediaInfo6.searchImage.imageUrl;
                        if (str49 != null) {
                            hashMap10.put("originalPath", str49);
                        }
                        if (z2) {
                            int i35 = i6 + 1;
                            StringBuilder sb = new StringBuilder();
                            sb.append("");
                            j10 = j3;
                            sb.append(j10);
                            hashMap6 = hashMap10;
                            hashMap6.put("groupId", sb.toString());
                            if (i35 != 10) {
                                i26 = i33;
                                i25 = i34;
                                if (i25 != i26 - 1) {
                                    i6 = i35;
                                }
                            } else {
                                i25 = i34;
                                i26 = i33;
                            }
                            hashMap6.put("final", "1");
                            i6 = i35;
                            j12 = 0;
                        } else {
                            hashMap6 = hashMap10;
                            j10 = j3;
                            i25 = i34;
                            i26 = i33;
                        }
                        j4 = j10;
                        int i36 = i25;
                        final boolean z14 = z11;
                        final HashMap hashMap11 = hashMap6;
                        i7 = i36;
                        hashMap2 = hashMap8;
                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda16
                            @Override // java.lang.Runnable
                            public final void run() {
                                SendMessagesHelper.lambda$prepareSendingMedia$90(MessageObject.this, accountInstance, tLRPC$TL_photo4, z14, sendingMediaInfo6, hashMap11, r10, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, i2, str, j2, z4);
                            }
                        });
                        i10 = i26;
                        i31 = i6;
                        arrayList20 = arrayList25;
                        arrayList19 = arrayList24;
                        str5 = str45;
                        str7 = str44;
                        str6 = str48;
                        arrayList18 = arrayList23;
                        j5 = j4;
                        i9 = i7;
                        hashMap3 = hashMap2;
                        i32 = i9 + 1;
                        arrayList17 = arrayList;
                        hashMap = hashMap3;
                        str42 = str6;
                        isEncryptedDialog = z7;
                        str39 = str5;
                        str40 = str7;
                        j11 = j5;
                        size2 = i10;
                        i3 = 1;
                    }
                } else {
                    arrayList4 = arrayList20;
                    i7 = i32;
                    str2 = str42;
                    str3 = str45;
                    hashMap2 = hashMap8;
                    str4 = str44;
                    j4 = j3;
                    arrayList5 = arrayList23;
                    i8 = i33;
                    arrayList3 = arrayList24;
                }
            } else {
                arrayList3 = arrayList19;
                arrayList4 = arrayList20;
                i7 = i32;
                str2 = str42;
                str3 = str45;
                hashMap2 = hashMap8;
                str4 = str44;
                j4 = j3;
                arrayList5 = arrayList23;
                i8 = i33;
            }
            z7 = isEncryptedDialog;
            if (sendingMediaInfo6.isVideo || sendingMediaInfo6.videoEditedInfo != null) {
                int i37 = i8;
                ArrayList arrayList26 = arrayList4;
                str5 = str3;
                String str50 = str4;
                str6 = str2;
                long j13 = j4;
                int i38 = i7;
                hashMap3 = hashMap2;
                if (z) {
                    videoEditedInfo = null;
                } else {
                    VideoEditedInfo videoEditedInfo6 = sendingMediaInfo6.videoEditedInfo;
                    if (videoEditedInfo6 == null) {
                        videoEditedInfo6 = createCompressionSettings(sendingMediaInfo6.path);
                    }
                    videoEditedInfo = videoEditedInfo6;
                }
                if (!z && (videoEditedInfo != null || sendingMediaInfo6.path.endsWith("mp4"))) {
                    if (sendingMediaInfo6.path == null && (searchImage = sendingMediaInfo6.searchImage) != null) {
                        if (searchImage.photo instanceof TLRPC$TL_photo) {
                            sendingMediaInfo6.path = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(sendingMediaInfo6.searchImage.photo, true).getAbsolutePath();
                        } else {
                            sendingMediaInfo6.path = new File(FileLoader.getDirectory(4), Utilities.MD5(sendingMediaInfo6.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(sendingMediaInfo6.searchImage.imageUrl, "jpg")).getAbsolutePath();
                        }
                    }
                    String str51 = sendingMediaInfo6.path;
                    File file9 = new File(str51);
                    StringBuilder sb2 = new StringBuilder();
                    sb2.append(str51);
                    sb2.append(file9.length());
                    sb2.append(str50);
                    String str52 = str51;
                    sb2.append(file9.lastModified());
                    String sb3 = sb2.toString();
                    if (videoEditedInfo != null) {
                        boolean z15 = videoEditedInfo.muted;
                        StringBuilder sb4 = new StringBuilder();
                        sb4.append(sb3);
                        sb4.append(videoEditedInfo.estimatedDuration);
                        sb4.append(str50);
                        sb4.append(videoEditedInfo.startTime);
                        sb4.append(str50);
                        sb4.append(videoEditedInfo.endTime);
                        sb4.append(videoEditedInfo.muted ? "_m" : "");
                        String sb5 = sb4.toString();
                        if (videoEditedInfo.resultWidth != videoEditedInfo.originalWidth) {
                            sb5 = sb5 + str50 + videoEditedInfo.resultWidth;
                        }
                        String str53 = sb5;
                        j6 = videoEditedInfo.startTime;
                        if (j6 < 0) {
                            j6 = 0;
                        }
                        z8 = z15;
                        str8 = str53;
                    } else {
                        str8 = sb3;
                        j6 = 0;
                        z8 = false;
                    }
                    if (!z7 && sendingMediaInfo6.ttl == 0 && (videoEditedInfo == null || (videoEditedInfo.filterState == null && videoEditedInfo.paintPath == null && videoEditedInfo.mediaEntities == null && videoEditedInfo.cropState == null))) {
                        MessagesStorage messagesStorage = accountInstance.getMessagesStorage();
                        if (z7) {
                            str9 = "video/mp4";
                            i20 = 5;
                        } else {
                            str9 = "video/mp4";
                            i20 = 2;
                        }
                        Object[] sentFile3 = messagesStorage.getSentFile(str8, i20);
                        if (sentFile3 != null) {
                            long j14 = j6;
                            if (sentFile3[0] instanceof TLRPC$TL_document) {
                                tLRPC$TL_document = (TLRPC$TL_document) sentFile3[0];
                                str12 = (String) sentFile3[1];
                                j7 = j14;
                                file = file9;
                                str10 = str8;
                                obj4 = "final";
                                i11 = 1;
                                str7 = str50;
                                obj3 = "groupId";
                                str11 = ".";
                                videoEditedInfo2 = videoEditedInfo;
                                ensureMediaThumbExists(accountInstance, z7, tLRPC$TL_document, sendingMediaInfo6.path, null, j7);
                                if (tLRPC$TL_document == null) {
                                    String str54 = sendingMediaInfo6.thumbPath;
                                    Bitmap decodeFile = str54 != null ? BitmapFactory.decodeFile(str54) : null;
                                    if (decodeFile == null && (decodeFile = createVideoThumbnailAtTime(sendingMediaInfo6.path, j7)) == null) {
                                        decodeFile = createVideoThumbnail(sendingMediaInfo6.path, i11);
                                    }
                                    Bitmap bitmap2 = decodeFile;
                                    if (bitmap2 != null) {
                                        int max = (z7 || sendingMediaInfo6.ttl != 0) ? 90 : Math.max(bitmap2.getWidth(), bitmap2.getHeight());
                                        float f3 = max;
                                        str13 = "mp4";
                                        videoEditedInfo5 = videoEditedInfo2;
                                        str16 = str9;
                                        Object obj20 = obj3;
                                        sendingMediaInfo2 = sendingMediaInfo6;
                                        Object obj21 = "1";
                                        arrayList8 = arrayList26;
                                        Object obj22 = obj4;
                                        r13 = 1;
                                        r13 = 1;
                                        tLRPC$PhotoSize = ImageLoader.scaleAndSaveImage(null, bitmap2, (videoEditedInfo2 == null || !videoEditedInfo2.isSticker) ? Bitmap.CompressFormat.JPEG : Bitmap.CompressFormat.WEBP, false, f3, f3, max > 90 ? 80 : 55, z7, 0, 0, false);
                                        if (tLRPC$PhotoSize == null || tLRPC$PhotoSize.location == null) {
                                            accountInstance2 = accountInstance;
                                            i17 = 0;
                                            videoEditedInfo4 = null;
                                            str17 = null;
                                            obj9 = obj22;
                                            obj8 = obj21;
                                            obj10 = obj20;
                                        } else {
                                            accountInstance2 = accountInstance;
                                            i17 = 0;
                                            videoEditedInfo4 = null;
                                            str17 = getKeyForPhotoSize(accountInstance2, tLRPC$PhotoSize, null, true, false);
                                            obj9 = obj22;
                                            obj8 = obj21;
                                            obj10 = obj20;
                                        }
                                    } else {
                                        accountInstance2 = accountInstance;
                                        str13 = "mp4";
                                        videoEditedInfo5 = videoEditedInfo2;
                                        sendingMediaInfo2 = sendingMediaInfo6;
                                        obj8 = "1";
                                        arrayList8 = arrayList26;
                                        str16 = str9;
                                        obj9 = obj4;
                                        obj10 = obj3;
                                        i17 = 0;
                                        videoEditedInfo4 = null;
                                        r13 = 1;
                                        str17 = null;
                                        tLRPC$PhotoSize = null;
                                    }
                                    TLRPC$TL_document tLRPC$TL_document6 = new TLRPC$TL_document();
                                    tLRPC$TL_document6.file_reference = new byte[i17];
                                    if (tLRPC$PhotoSize != null) {
                                        tLRPC$TL_document6.thumbs.add(tLRPC$PhotoSize);
                                        tLRPC$TL_document6.flags |= r13;
                                    }
                                    sendingMediaInfo = sendingMediaInfo2;
                                    VideoEditedInfo videoEditedInfo7 = sendingMediaInfo.videoEditedInfo;
                                    if (videoEditedInfo7 != null && videoEditedInfo7.isSticker) {
                                        tLRPC$TL_document6.mime_type = "video/webm";
                                    } else {
                                        tLRPC$TL_document6.mime_type = str16;
                                    }
                                    accountInstance.getUserConfig().saveConfig(i17);
                                    VideoEditedInfo videoEditedInfo8 = sendingMediaInfo.videoEditedInfo;
                                    if (videoEditedInfo8 != null && videoEditedInfo8.isSticker) {
                                        tLRPC$TL_document6.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                        TLRPC$TL_documentAttributeSticker tLRPC$TL_documentAttributeSticker = new TLRPC$TL_documentAttributeSticker();
                                        tLRPC$TL_documentAttributeSticker.alt = "👍";
                                        tLRPC$TL_documentAttributeSticker.stickerset = new TLRPC$TL_inputStickerSetEmpty();
                                        tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeSticker);
                                        if (tLRPC$PhotoSize != null && (tLRPC$FileLocation = tLRPC$PhotoSize.location) != null) {
                                            Locale locale = Locale.US;
                                            Object[] objArr = new Object[2];
                                            objArr[i17] = Long.valueOf(tLRPC$FileLocation.volume_id);
                                            objArr[r13] = Integer.valueOf(tLRPC$PhotoSize.location.local_id);
                                            str17 = String.format(locale, "%d_%d@b1", objArr);
                                        }
                                    }
                                    if (z7) {
                                        tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo_layer159();
                                    } else {
                                        tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                        tLRPC$TL_documentAttributeVideo.supports_streaming = r13;
                                    }
                                    tLRPC$TL_document6.attributes.add(tLRPC$TL_documentAttributeVideo);
                                    videoEditedInfo3 = videoEditedInfo5;
                                    if (videoEditedInfo3 != null && (videoEditedInfo3.needConvert() || !sendingMediaInfo.isVideo)) {
                                        if (sendingMediaInfo.isVideo && videoEditedInfo3.muted) {
                                            fillVideoAttribute(sendingMediaInfo.path, tLRPC$TL_documentAttributeVideo, videoEditedInfo3);
                                            videoEditedInfo3.originalWidth = tLRPC$TL_documentAttributeVideo.w;
                                            videoEditedInfo3.originalHeight = tLRPC$TL_documentAttributeVideo.h;
                                        } else {
                                            tLRPC$TL_documentAttributeVideo.duration = (int) (videoEditedInfo3.estimatedDuration / 1000);
                                        }
                                        int i39 = videoEditedInfo3.rotationValue;
                                        MediaController.CropState cropState = videoEditedInfo3.cropState;
                                        if (cropState != null) {
                                            i18 = cropState.transformWidth;
                                            i19 = cropState.transformHeight;
                                        } else {
                                            i18 = videoEditedInfo3.resultWidth;
                                            i19 = videoEditedInfo3.resultHeight;
                                        }
                                        if (i39 == 90 || i39 == 270) {
                                            tLRPC$TL_documentAttributeVideo.w = i19;
                                            tLRPC$TL_documentAttributeVideo.h = i18;
                                        } else {
                                            tLRPC$TL_documentAttributeVideo.w = i18;
                                            tLRPC$TL_documentAttributeVideo.h = i19;
                                        }
                                        tLRPC$TL_document6.size = videoEditedInfo3.estimatedSize;
                                    } else {
                                        if (file.exists()) {
                                            tLRPC$TL_document6.size = (int) file.length();
                                        }
                                        fillVideoAttribute(sendingMediaInfo.path, tLRPC$TL_documentAttributeVideo, videoEditedInfo4);
                                    }
                                    str14 = str17;
                                    tLRPC$TL_document2 = tLRPC$TL_document6;
                                    bitmap = bitmap2;
                                    obj6 = obj9;
                                    obj5 = obj8;
                                    obj7 = obj10;
                                } else {
                                    accountInstance2 = accountInstance;
                                    str13 = "mp4";
                                    videoEditedInfo3 = videoEditedInfo2;
                                    sendingMediaInfo = sendingMediaInfo6;
                                    obj5 = "1";
                                    arrayList8 = arrayList26;
                                    obj6 = obj4;
                                    obj7 = obj3;
                                    videoEditedInfo4 = null;
                                    bitmap = null;
                                    str14 = null;
                                    tLRPC$TL_document2 = tLRPC$TL_document;
                                }
                                if (videoEditedInfo3 != null && videoEditedInfo3.muted) {
                                    size = tLRPC$TL_document2.attributes.size();
                                    i16 = 0;
                                    while (true) {
                                        if (i16 < size) {
                                            z9 = false;
                                            break;
                                        } else if (tLRPC$TL_document2.attributes.get(i16) instanceof TLRPC$TL_documentAttributeAnimated) {
                                            z9 = true;
                                            break;
                                        } else {
                                            i16++;
                                        }
                                    }
                                    if (!z9) {
                                        tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                    }
                                }
                                if (videoEditedInfo3 != null && (videoEditedInfo3.needConvert() || !sendingMediaInfo.isVideo)) {
                                    File file10 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + str11 + (!videoEditedInfo3.isSticker ? "webm" : str13));
                                    SharedConfig.saveConfig();
                                    str52 = file10.getAbsolutePath();
                                }
                                hashMap4 = new HashMap();
                                str15 = str10;
                                if (str15 != null) {
                                    hashMap4.put("originalPath", str15);
                                }
                                if (str12 != null) {
                                    hashMap4.put("parentObject", str12);
                                }
                                if (z8 && z2) {
                                    int i40 = i6 + 1;
                                    StringBuilder sb6 = new StringBuilder();
                                    sb6.append("");
                                    j8 = j13;
                                    sb6.append(j8);
                                    hashMap4.put(obj7, sb6.toString());
                                    if (i40 != 10) {
                                        i13 = i37;
                                        i12 = i38;
                                        if (i12 != i13 - 1) {
                                            i14 = i40;
                                        }
                                    } else {
                                        i12 = i38;
                                        i13 = i37;
                                    }
                                    hashMap4.put(obj6, obj5);
                                    i14 = i40;
                                    j12 = 0;
                                } else {
                                    j8 = j13;
                                    i12 = i38;
                                    i13 = i37;
                                    i14 = i6;
                                }
                                if (!z7 && ((videoEditedInfo3 == null || !videoEditedInfo3.isSticker) && (arrayList9 = sendingMediaInfo.masks) != null && !arrayList9.isEmpty())) {
                                    tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeHasStickers());
                                    SerializedData serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                    serializedData.writeInt32(sendingMediaInfo.masks.size());
                                    for (i15 = 0; i15 < sendingMediaInfo.masks.size(); i15++) {
                                        sendingMediaInfo.masks.get(i15).serializeToStream(serializedData);
                                    }
                                    hashMap4.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                    serializedData.cleanup();
                                }
                                i9 = i12;
                                final SendingMediaInfo sendingMediaInfo7 = sendingMediaInfo;
                                final TLRPC$TL_document tLRPC$TL_document7 = tLRPC$TL_document2;
                                final String str55 = str52;
                                final String str56 = str12;
                                i10 = i13;
                                j5 = j8;
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda5
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingMedia$91(bitmap, str14, messageObject, accountInstance, videoEditedInfo3, tLRPC$TL_document7, str55, hashMap4, sendingMediaInfo7, str56, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                    }
                                });
                                arrayList20 = arrayList8;
                                i6 = i14;
                                arrayList19 = arrayList3;
                                arrayList18 = arrayList5;
                            } else {
                                str10 = str8;
                                str7 = str50;
                                obj = "groupId";
                                str11 = ".";
                                j7 = j14;
                                file = file9;
                                videoEditedInfo2 = videoEditedInfo;
                                obj2 = "final";
                                i11 = 1;
                                str12 = null;
                                tLRPC$TL_document = null;
                                obj4 = obj2;
                                obj3 = obj;
                                if (tLRPC$TL_document == null) {
                                }
                                if (videoEditedInfo3 != null) {
                                    size = tLRPC$TL_document2.attributes.size();
                                    i16 = 0;
                                    while (true) {
                                        if (i16 < size) {
                                        }
                                        i16++;
                                    }
                                    if (!z9) {
                                    }
                                }
                                if (videoEditedInfo3 != null) {
                                    if (!videoEditedInfo3.isSticker) {
                                    }
                                    File file102 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + str11 + (!videoEditedInfo3.isSticker ? "webm" : str13));
                                    SharedConfig.saveConfig();
                                    str52 = file102.getAbsolutePath();
                                }
                                hashMap4 = new HashMap();
                                str15 = str10;
                                if (str15 != null) {
                                }
                                if (str12 != null) {
                                }
                                if (z8) {
                                }
                                j8 = j13;
                                i12 = i38;
                                i13 = i37;
                                i14 = i6;
                                if (!z7) {
                                    tLRPC$TL_document2.attributes.add(new TLRPC$TL_documentAttributeHasStickers());
                                    SerializedData serializedData2 = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                    serializedData2.writeInt32(sendingMediaInfo.masks.size());
                                    while (i15 < sendingMediaInfo.masks.size()) {
                                    }
                                    hashMap4.put("masks", Utilities.bytesToHex(serializedData2.toByteArray()));
                                    serializedData2.cleanup();
                                }
                                i9 = i12;
                                final SendingMediaInfo sendingMediaInfo72 = sendingMediaInfo;
                                final TLRPC$TL_document tLRPC$TL_document72 = tLRPC$TL_document2;
                                final String str552 = str52;
                                final String str562 = str12;
                                i10 = i13;
                                j5 = j8;
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda5
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingMedia$91(bitmap, str14, messageObject, accountInstance, videoEditedInfo3, tLRPC$TL_document72, str552, hashMap4, sendingMediaInfo72, str562, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                    }
                                });
                                arrayList20 = arrayList8;
                                i6 = i14;
                                arrayList19 = arrayList3;
                                arrayList18 = arrayList5;
                            }
                        }
                    } else {
                        str9 = "video/mp4";
                    }
                    j7 = j6;
                    file = file9;
                    str10 = str8;
                    str7 = str50;
                    obj = "groupId";
                    obj2 = "final";
                    str11 = ".";
                    i11 = 1;
                    videoEditedInfo2 = videoEditedInfo;
                    str12 = null;
                    tLRPC$TL_document = null;
                    obj4 = obj2;
                    obj3 = obj;
                    if (tLRPC$TL_document == null) {
                    }
                    if (videoEditedInfo3 != null) {
                    }
                    if (videoEditedInfo3 != null) {
                    }
                    hashMap4 = new HashMap();
                    str15 = str10;
                    if (str15 != null) {
                    }
                    if (str12 != null) {
                    }
                    if (z8) {
                    }
                    j8 = j13;
                    i12 = i38;
                    i13 = i37;
                    i14 = i6;
                    if (!z7) {
                    }
                    i9 = i12;
                    final SendingMediaInfo sendingMediaInfo722 = sendingMediaInfo;
                    final TLRPC$TL_document tLRPC$TL_document722 = tLRPC$TL_document2;
                    final String str5522 = str52;
                    final String str5622 = str12;
                    i10 = i13;
                    j5 = j8;
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda5
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.lambda$prepareSendingMedia$91(bitmap, str14, messageObject, accountInstance, videoEditedInfo3, tLRPC$TL_document722, str5522, hashMap4, sendingMediaInfo722, str5622, j, messageObject2, messageObject3, z3, i, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                        }
                    });
                    arrayList20 = arrayList8;
                    i6 = i14;
                    arrayList19 = arrayList3;
                    arrayList18 = arrayList5;
                } else {
                    str7 = str50;
                    j5 = j13;
                    i9 = i38;
                    i10 = i37;
                    if (arrayList26 == null) {
                        ArrayList arrayList27 = new ArrayList();
                        arrayList19 = new ArrayList();
                        ArrayList arrayList28 = new ArrayList();
                        ArrayList arrayList29 = new ArrayList();
                        arrayList18 = new ArrayList();
                        arrayList20 = arrayList27;
                        arrayList6 = arrayList28;
                        arrayList7 = arrayList29;
                    } else {
                        arrayList20 = arrayList26;
                        arrayList6 = arrayList21;
                        arrayList7 = arrayList22;
                        arrayList19 = arrayList3;
                        arrayList18 = arrayList5;
                    }
                    arrayList20.add(sendingMediaInfo6.path);
                    arrayList19.add(sendingMediaInfo6.path);
                    arrayList18.add(sendingMediaInfo6.uri);
                    arrayList6.add(sendingMediaInfo6.caption);
                    arrayList7.add(sendingMediaInfo6.entities);
                    arrayList21 = arrayList6;
                    arrayList22 = arrayList7;
                }
                i31 = i6;
                i32 = i9 + 1;
                arrayList17 = arrayList;
                hashMap = hashMap3;
                str42 = str6;
                isEncryptedDialog = z7;
                str39 = str5;
                str40 = str7;
                j11 = j5;
                size2 = i10;
                i3 = 1;
            } else {
                String str57 = sendingMediaInfo6.path;
                if (str57 != null || (uri2 = sendingMediaInfo6.uri) == null) {
                    str18 = str57;
                    str19 = str18;
                } else {
                    str19 = (Build.VERSION.SDK_INT < 30 || !"content".equals(uri2.getScheme())) ? AndroidUtilities.getPath(sendingMediaInfo6.uri) : null;
                    str18 = sendingMediaInfo6.uri.toString();
                }
                if (inputContentInfoCompat == null || sendingMediaInfo6.uri == null || !inputContentInfoCompat.getDescription().hasMimeType("image/png")) {
                    str20 = str2;
                } else {
                    try {
                        BitmapFactory.Options options = new BitmapFactory.Options();
                        inputStream = ApplicationLoader.applicationContext.getContentResolver().openInputStream(sendingMediaInfo6.uri);
                        try {
                            decodeStream = BitmapFactory.decodeStream(inputStream, null, options);
                            StringBuilder sb7 = new StringBuilder();
                            sb7.append("-2147483648_");
                            sb7.append(SharedConfig.getLastLocalId());
                            str20 = str2;
                            try {
                                sb7.append(str20);
                                file2 = new File(FileLoader.getDirectory(4), sb7.toString());
                                fileOutputStream = new FileOutputStream(file2);
                            } catch (Throwable th) {
                                th = th;
                                fileOutputStream = null;
                                try {
                                    FileLog.e(th);
                                    if (inputStream != null) {
                                        try {
                                            inputStream.close();
                                        } catch (Exception unused) {
                                        }
                                    }
                                } catch (Throwable th2) {
                                    if (inputStream != null) {
                                        try {
                                            inputStream.close();
                                        } catch (Exception unused2) {
                                        }
                                    }
                                    if (fileOutputStream != null) {
                                        try {
                                            fileOutputStream.close();
                                        } catch (Exception unused3) {
                                        }
                                    }
                                    throw th2;
                                }
                            }
                        } catch (Throwable th3) {
                            th = th3;
                            str20 = str2;
                        }
                    } catch (Throwable th4) {
                        th = th4;
                        str20 = str2;
                        inputStream = null;
                    }
                    try {
                        decodeStream.compress(Bitmap.CompressFormat.WEBP, 100, fileOutputStream);
                        SharedConfig.saveConfig();
                        sendingMediaInfo6.uri = Uri.fromFile(file2);
                        if (inputStream != null) {
                            try {
                                inputStream.close();
                            } catch (Exception unused4) {
                            }
                        }
                    } catch (Throwable th5) {
                        th = th5;
                        FileLog.e(th);
                        if (inputStream != null) {
                        }
                    }
                    try {
                        fileOutputStream.close();
                    } catch (Exception unused5) {
                    }
                }
                String str58 = "webp";
                if (z || ImageLoader.shouldSendImageAsDocument(sendingMediaInfo6.path, sendingMediaInfo6.uri)) {
                    str21 = str3;
                    if (str19 != null) {
                        str58 = FileLoader.getFileExtension(new File(str19));
                        str43 = str58;
                        z10 = true;
                        if (z10) {
                            ArrayList arrayList30 = arrayList4;
                            if (arrayList30 == null) {
                                arrayList20 = new ArrayList();
                                arrayList19 = new ArrayList();
                                ArrayList arrayList31 = new ArrayList();
                                ArrayList arrayList32 = new ArrayList();
                                arrayList16 = new ArrayList();
                                arrayList14 = arrayList31;
                                arrayList15 = arrayList32;
                            } else {
                                arrayList20 = arrayList30;
                                arrayList14 = arrayList21;
                                arrayList15 = arrayList22;
                                arrayList19 = arrayList3;
                                arrayList16 = arrayList5;
                            }
                            arrayList20.add(str19);
                            arrayList19.add(str18);
                            arrayList16.add(sendingMediaInfo6.uri);
                            arrayList14.add(sendingMediaInfo6.caption);
                            arrayList15.add(sendingMediaInfo6.entities);
                            arrayList18 = arrayList16;
                            arrayList21 = arrayList14;
                            arrayList22 = arrayList15;
                            str6 = str20;
                            str5 = str21;
                            i10 = i8;
                            i31 = i6;
                            str7 = str4;
                            j5 = j4;
                            i9 = i7;
                            hashMap3 = hashMap2;
                        } else {
                            ArrayList arrayList33 = arrayList4;
                            if (str19 != null) {
                                File file11 = new File(str19);
                                str22 = str18 + file11.length() + str4 + file11.lastModified();
                                hashMap5 = hashMap2;
                            } else {
                                hashMap5 = hashMap2;
                                str22 = null;
                            }
                            if (hashMap5 != null) {
                                MediaSendPrepareWorker mediaSendPrepareWorker3 = (MediaSendPrepareWorker) hashMap5.get(sendingMediaInfo6);
                                TLRPC$TL_photo tLRPC$TL_photo12 = mediaSendPrepareWorker3.photo;
                                String str59 = mediaSendPrepareWorker3.parentObject;
                                if (tLRPC$TL_photo12 == null) {
                                    try {
                                        mediaSendPrepareWorker3.sync.await();
                                    } catch (Exception e3) {
                                        FileLog.e(e3);
                                    }
                                    tLRPC$TL_photo12 = mediaSendPrepareWorker3.photo;
                                    str59 = mediaSendPrepareWorker3.parentObject;
                                }
                                hashMap3 = hashMap5;
                                str23 = str22;
                                str24 = str19;
                                arrayList10 = arrayList33;
                                str25 = str20;
                                str26 = str21;
                                str27 = str4;
                                i21 = 1;
                                obj18 = "groupId";
                                obj16 = "originalPath";
                                obj17 = "1";
                                tLRPC$TL_photo2 = tLRPC$TL_photo12;
                                str29 = str59;
                            } else {
                                if (z7 || sendingMediaInfo6.ttl != 0) {
                                    hashMap3 = hashMap5;
                                    str23 = str22;
                                    str24 = str19;
                                    arrayList10 = arrayList33;
                                    str25 = str20;
                                    str26 = str21;
                                    str27 = str4;
                                    i21 = 1;
                                    obj11 = "groupId";
                                    obj12 = "originalPath";
                                    obj13 = "1";
                                    tLRPC$TL_photo = null;
                                    str28 = null;
                                } else {
                                    Object[] sentFile4 = accountInstance.getMessagesStorage().getSentFile(str22, !z7 ? 0 : 3);
                                    if (sentFile4 == null) {
                                        obj14 = "originalPath";
                                    } else if (sentFile4[0] instanceof TLRPC$TL_photo) {
                                        tLRPC$TL_photo3 = (TLRPC$TL_photo) sentFile4[0];
                                        obj15 = "originalPath";
                                        str30 = (String) sentFile4[1];
                                        if (tLRPC$TL_photo3 == null) {
                                            if (sendingMediaInfo6.uri != null) {
                                                str28 = str30;
                                                Object[] sentFile5 = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(sendingMediaInfo6.uri), !z7 ? 0 : 3);
                                                if (sentFile5 != null && (sentFile5[0] instanceof TLRPC$TL_photo)) {
                                                    tLRPC$TL_photo3 = (TLRPC$TL_photo) sentFile5[0];
                                                    str30 = (String) sentFile5[1];
                                                }
                                            } else {
                                                str28 = str30;
                                            }
                                            tLRPC$TL_photo = tLRPC$TL_photo3;
                                            hashMap3 = hashMap5;
                                            str23 = str22;
                                            str27 = str4;
                                            arrayList10 = arrayList33;
                                            obj11 = "groupId";
                                            str25 = str20;
                                            str26 = str21;
                                            obj12 = obj15;
                                            obj13 = "1";
                                            str24 = str19;
                                            i21 = 1;
                                            ensureMediaThumbExists(accountInstance, z7, tLRPC$TL_photo, sendingMediaInfo6.path, sendingMediaInfo6.uri, 0L);
                                        }
                                        str28 = str30;
                                        tLRPC$TL_photo = tLRPC$TL_photo3;
                                        hashMap3 = hashMap5;
                                        str23 = str22;
                                        str27 = str4;
                                        arrayList10 = arrayList33;
                                        obj11 = "groupId";
                                        str25 = str20;
                                        str26 = str21;
                                        obj12 = obj15;
                                        obj13 = "1";
                                        str24 = str19;
                                        i21 = 1;
                                        ensureMediaThumbExists(accountInstance, z7, tLRPC$TL_photo, sendingMediaInfo6.path, sendingMediaInfo6.uri, 0L);
                                    } else {
                                        obj14 = "originalPath";
                                    }
                                    str30 = null;
                                    tLRPC$TL_photo3 = null;
                                    obj15 = obj14;
                                    if (tLRPC$TL_photo3 == null) {
                                    }
                                    str28 = str30;
                                    tLRPC$TL_photo = tLRPC$TL_photo3;
                                    hashMap3 = hashMap5;
                                    str23 = str22;
                                    str27 = str4;
                                    arrayList10 = arrayList33;
                                    obj11 = "groupId";
                                    str25 = str20;
                                    str26 = str21;
                                    obj12 = obj15;
                                    obj13 = "1";
                                    str24 = str19;
                                    i21 = 1;
                                    ensureMediaThumbExists(accountInstance, z7, tLRPC$TL_photo, sendingMediaInfo6.path, sendingMediaInfo6.uri, 0L);
                                }
                                if (tLRPC$TL_photo == null) {
                                    tLRPC$TL_photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(sendingMediaInfo6.path, sendingMediaInfo6.uri);
                                    if (z7 && sendingMediaInfo6.canDeleteAfter) {
                                        new File(sendingMediaInfo6.path).delete();
                                    }
                                }
                                tLRPC$TL_photo2 = tLRPC$TL_photo;
                                str29 = str28;
                                obj18 = obj11;
                                obj17 = obj13;
                                obj16 = obj12;
                            }
                            if (tLRPC$TL_photo2 != null) {
                                final HashMap hashMap12 = new HashMap();
                                final Bitmap[] bitmapArr = new Bitmap[i21];
                                final String[] strArr = new String[i21];
                                ArrayList<TLRPC$InputDocument> arrayList34 = sendingMediaInfo6.masks;
                                boolean z16 = (arrayList34 == null || arrayList34.isEmpty()) ? false : true;
                                tLRPC$TL_photo2.has_stickers = z16;
                                if (z16) {
                                    SerializedData serializedData3 = new SerializedData((sendingMediaInfo6.masks.size() * 20) + 4);
                                    serializedData3.writeInt32(sendingMediaInfo6.masks.size());
                                    for (int i41 = 0; i41 < sendingMediaInfo6.masks.size(); i41++) {
                                        sendingMediaInfo6.masks.get(i41).serializeToStream(serializedData3);
                                    }
                                    hashMap12.put("masks", Utilities.bytesToHex(serializedData3.toByteArray()));
                                    serializedData3.cleanup();
                                }
                                String str60 = str23;
                                if (str60 != null) {
                                    hashMap12.put(obj16, str60);
                                }
                                if (str29 != null) {
                                    hashMap12.put("parentObject", str29);
                                }
                                if (z2) {
                                    try {
                                        if (arrayList.size() == i21) {
                                        }
                                    } catch (Exception e4) {
                                        e = e4;
                                        FileLog.e(e);
                                        if (z2) {
                                        }
                                        int i42 = i24;
                                        final String str61 = str32;
                                        i23 = i42;
                                        str6 = str25;
                                        str5 = str26;
                                        i22 = i8;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda78
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingMedia$92(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo6, str61, j, messageObject2, messageObject3, z3, i, z5, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                            }
                                        });
                                        arrayList19 = arrayList3;
                                        arrayList18 = arrayList5;
                                        str7 = str27;
                                        j5 = j9;
                                        arrayList20 = arrayList10;
                                        i9 = i23;
                                        i10 = i22;
                                        i32 = i9 + 1;
                                        arrayList17 = arrayList;
                                        hashMap = hashMap3;
                                        str42 = str6;
                                        isEncryptedDialog = z7;
                                        str39 = str5;
                                        str40 = str7;
                                        j11 = j5;
                                        size2 = i10;
                                        i3 = 1;
                                    }
                                    if (z2) {
                                        i31 = i6 + 1;
                                        StringBuilder sb8 = new StringBuilder();
                                        sb8.append("");
                                        str32 = str29;
                                        j9 = j4;
                                        sb8.append(j9);
                                        hashMap12.put(obj18, sb8.toString());
                                        if (i31 != 10) {
                                            i24 = i7;
                                        } else {
                                            i24 = i7;
                                        }
                                        hashMap12.put("final", obj17);
                                        j12 = 0;
                                    } else {
                                        str32 = str29;
                                        j9 = j4;
                                        i24 = i7;
                                        i31 = i6;
                                    }
                                    int i422 = i24;
                                    final String str612 = str32;
                                    i23 = i422;
                                    str6 = str25;
                                    str5 = str26;
                                    i22 = i8;
                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda78
                                        @Override // java.lang.Runnable
                                        public final void run() {
                                            SendMessagesHelper.lambda$prepareSendingMedia$92(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo6, str612, j, messageObject2, messageObject3, z3, i, z5, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                        }
                                    });
                                    arrayList19 = arrayList3;
                                    arrayList18 = arrayList5;
                                    str7 = str27;
                                    j5 = j9;
                                    arrayList20 = arrayList10;
                                }
                                TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(tLRPC$TL_photo2.sizes, AndroidUtilities.getPhotoSize());
                                if (closestPhotoSizeWithSize != null) {
                                    try {
                                        strArr[0] = getKeyForPhotoSize(accountInstance, closestPhotoSizeWithSize, bitmapArr, false, false);
                                    } catch (Exception e5) {
                                        e = e5;
                                        FileLog.e(e);
                                        if (z2) {
                                        }
                                        int i4222 = i24;
                                        final String str6122 = str32;
                                        i23 = i4222;
                                        str6 = str25;
                                        str5 = str26;
                                        i22 = i8;
                                        AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda78
                                            @Override // java.lang.Runnable
                                            public final void run() {
                                                SendMessagesHelper.lambda$prepareSendingMedia$92(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo6, str6122, j, messageObject2, messageObject3, z3, i, z5, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                            }
                                        });
                                        arrayList19 = arrayList3;
                                        arrayList18 = arrayList5;
                                        str7 = str27;
                                        j5 = j9;
                                        arrayList20 = arrayList10;
                                        i9 = i23;
                                        i10 = i22;
                                        i32 = i9 + 1;
                                        arrayList17 = arrayList;
                                        hashMap = hashMap3;
                                        str42 = str6;
                                        isEncryptedDialog = z7;
                                        str39 = str5;
                                        str40 = str7;
                                        j11 = j5;
                                        size2 = i10;
                                        i3 = 1;
                                    }
                                    if (z2) {
                                    }
                                    int i42222 = i24;
                                    final String str61222 = str32;
                                    i23 = i42222;
                                    str6 = str25;
                                    str5 = str26;
                                    i22 = i8;
                                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda78
                                        @Override // java.lang.Runnable
                                        public final void run() {
                                            SendMessagesHelper.lambda$prepareSendingMedia$92(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo6, str61222, j, messageObject2, messageObject3, z3, i, z5, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                        }
                                    });
                                    arrayList19 = arrayList3;
                                    arrayList18 = arrayList5;
                                    str7 = str27;
                                    j5 = j9;
                                    arrayList20 = arrayList10;
                                }
                                if (z2) {
                                }
                                int i422222 = i24;
                                final String str612222 = str32;
                                i23 = i422222;
                                str6 = str25;
                                str5 = str26;
                                i22 = i8;
                                AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda78
                                    @Override // java.lang.Runnable
                                    public final void run() {
                                        SendMessagesHelper.lambda$prepareSendingMedia$92(bitmapArr, strArr, messageObject, accountInstance, tLRPC$TL_photo2, hashMap12, sendingMediaInfo6, str612222, j, messageObject2, messageObject3, z3, i, z5, tL_stories$StoryItem, replyQuote, str, i2, j2, z4);
                                    }
                                });
                                arrayList19 = arrayList3;
                                arrayList18 = arrayList5;
                                str7 = str27;
                                j5 = j9;
                                arrayList20 = arrayList10;
                            } else {
                                i22 = i8;
                                ArrayList arrayList35 = arrayList10;
                                str5 = str26;
                                str6 = str25;
                                long j15 = j4;
                                i23 = i7;
                                String str62 = str23;
                                if (arrayList35 == null) {
                                    arrayList20 = new ArrayList();
                                    arrayList19 = new ArrayList();
                                    ArrayList arrayList36 = new ArrayList();
                                    ArrayList arrayList37 = new ArrayList();
                                    arrayList13 = new ArrayList();
                                    str31 = str24;
                                    arrayList11 = arrayList36;
                                    arrayList12 = arrayList37;
                                } else {
                                    arrayList20 = arrayList35;
                                    str31 = str24;
                                    arrayList11 = arrayList21;
                                    arrayList12 = arrayList22;
                                    arrayList19 = arrayList3;
                                    arrayList13 = arrayList5;
                                }
                                arrayList20.add(str31);
                                arrayList19.add(str62);
                                arrayList13.add(sendingMediaInfo6.uri);
                                arrayList11.add(sendingMediaInfo6.caption);
                                arrayList12.add(sendingMediaInfo6.entities);
                                arrayList18 = arrayList13;
                                arrayList21 = arrayList11;
                                arrayList22 = arrayList12;
                                i31 = i6;
                                str7 = str27;
                                j5 = j15;
                            }
                            i9 = i23;
                            i10 = i22;
                        }
                    } else {
                        str43 = "";
                        z10 = true;
                        if (z10) {
                        }
                    }
                } else {
                    if (sendingMediaInfo6.forceImage || str19 == null) {
                        str21 = str3;
                    } else {
                        str21 = str3;
                        if ((str19.endsWith(str21) || str19.endsWith(str20)) && sendingMediaInfo6.ttl <= 0) {
                        }
                    }
                    if (!sendingMediaInfo6.forceImage && str19 == null && (uri = sendingMediaInfo6.uri) != null) {
                        if (MediaController.isGif(uri)) {
                            str18 = sendingMediaInfo6.uri.toString();
                            str19 = MediaController.copyFileToCache(sendingMediaInfo6.uri, "gif");
                            str43 = "gif";
                            z10 = true;
                            if (z10) {
                            }
                        } else if (MediaController.isWebp(sendingMediaInfo6.uri)) {
                            str18 = sendingMediaInfo6.uri.toString();
                            str19 = MediaController.copyFileToCache(sendingMediaInfo6.uri, "webp");
                            str43 = str58;
                            z10 = true;
                            if (z10) {
                            }
                        }
                    }
                    z10 = false;
                    if (z10) {
                    }
                }
                i32 = i9 + 1;
                arrayList17 = arrayList;
                hashMap = hashMap3;
                str42 = str6;
                isEncryptedDialog = z7;
                str39 = str5;
                str40 = str7;
                j11 = j5;
                size2 = i10;
                i3 = 1;
            }
        }
        ArrayList arrayList38 = arrayList18;
        ArrayList arrayList39 = arrayList19;
        boolean z17 = isEncryptedDialog;
        int i43 = size2;
        long j16 = j12;
        ArrayList arrayList40 = arrayList20;
        AccountInstance accountInstance3 = accountInstance;
        if (j16 != 0) {
            finishGroup(accountInstance3, j16, i);
        }
        if (inputContentInfoCompat != null) {
            inputContentInfoCompat.releasePermission();
        }
        if (arrayList40 != null && !arrayList40.isEmpty()) {
            int i44 = 1;
            long[] jArr = new long[1];
            int size3 = arrayList40.size();
            int i45 = i31;
            int i46 = 0;
            while (i46 < size3) {
                if (!z || z17) {
                    i4 = i43;
                } else {
                    i4 = i43;
                    if (i4 > i44 && i45 % 10 == 0) {
                        jArr[0] = Utilities.random.nextLong();
                        i45 = 0;
                        i5 = i45 + 1;
                        String str63 = (String) arrayList40.get(i46);
                        ArrayList arrayList41 = arrayList39;
                        String str64 = (String) arrayList41.get(i46);
                        ArrayList arrayList42 = arrayList38;
                        Uri uri7 = (Uri) arrayList42.get(i46);
                        ArrayList arrayList43 = arrayList22;
                        ArrayList arrayList44 = (ArrayList) arrayList43.get(i46);
                        if (i5 != 10 || i46 == size3 - 1) {
                            arrayList2 = arrayList21;
                            z6 = true;
                        } else {
                            arrayList2 = arrayList21;
                            z6 = false;
                        }
                        long[] jArr2 = jArr;
                        handleError(prepareSendingDocumentInternal(accountInstance, str63, str64, uri7, str43, j, messageObject2, messageObject3, tL_stories$StoryItem, replyQuote, arrayList44, messageObject, jArr2, z6, (CharSequence) arrayList2.get(i46), z3, i, null, z, str, i2, j2, z4), accountInstance);
                        i46++;
                        accountInstance3 = accountInstance;
                        i43 = i4;
                        arrayList21 = arrayList2;
                        arrayList22 = arrayList43;
                        arrayList38 = arrayList42;
                        arrayList39 = arrayList41;
                        i45 = i5;
                        size3 = size3;
                        jArr = jArr2;
                        arrayList40 = arrayList40;
                        i44 = 1;
                    }
                }
                i5 = i45 + 1;
                String str632 = (String) arrayList40.get(i46);
                ArrayList arrayList412 = arrayList39;
                String str642 = (String) arrayList412.get(i46);
                ArrayList arrayList422 = arrayList38;
                Uri uri72 = (Uri) arrayList422.get(i46);
                ArrayList arrayList432 = arrayList22;
                ArrayList arrayList442 = (ArrayList) arrayList432.get(i46);
                if (i5 != 10) {
                }
                arrayList2 = arrayList21;
                z6 = true;
                long[] jArr22 = jArr;
                handleError(prepareSendingDocumentInternal(accountInstance, str632, str642, uri72, str43, j, messageObject2, messageObject3, tL_stories$StoryItem, replyQuote, arrayList442, messageObject, jArr22, z6, (CharSequence) arrayList2.get(i46), z3, i, null, z, str, i2, j2, z4), accountInstance);
                i46++;
                accountInstance3 = accountInstance;
                i43 = i4;
                arrayList21 = arrayList2;
                arrayList22 = arrayList432;
                arrayList38 = arrayList422;
                arrayList39 = arrayList412;
                i45 = i5;
                size3 = size3;
                jArr = jArr22;
                arrayList40 = arrayList40;
                i44 = 1;
            }
        }
        if (BuildVars.LOGS_ENABLED) {
            FileLog.d("total send time = " + (System.currentTimeMillis() - currentTimeMillis));
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$88(MediaSendPrepareWorker mediaSendPrepareWorker, AccountInstance accountInstance, SendingMediaInfo sendingMediaInfo, boolean z) {
        mediaSendPrepareWorker.photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
        if (z && sendingMediaInfo.canDeleteAfter) {
            new File(sendingMediaInfo.path).delete();
        }
        mediaSendPrepareWorker.sync.countDown();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$89(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_document tLRPC$TL_document, String str, HashMap hashMap, SendingMediaInfo sendingMediaInfo, String str2, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str3, int i2, boolean z2, long j2, boolean z3) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, null, tLRPC$TL_document, str, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str2);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, null, str, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, 0, str2, null, false, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str3;
        of.quick_reply_shortcut_id = i2;
        if (z2) {
            of.effect_id = j2;
        }
        of.invert_media = z3;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$90(MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_photo tLRPC$TL_photo, boolean z, SendingMediaInfo sendingMediaInfo, HashMap hashMap, String str, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z2, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, int i2, String str2, long j2, boolean z3) {
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, tLRPC$TL_photo, null, null, z ? sendingMediaInfo.searchImage.imageUrl : null, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_photo, z ? sendingMediaInfo.searchImage.imageUrl : null, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z2, i, sendingMediaInfo.ttl, str, false, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut_id = i2;
        of.quick_reply_shortcut = str2;
        of.effect_id = j2;
        of.invert_media = z3;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$91(Bitmap bitmap, String str, MessageObject messageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str2, HashMap hashMap, SendingMediaInfo sendingMediaInfo, String str3, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str4, int i2, long j2, boolean z2) {
        if (bitmap != null && str != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, videoEditedInfo, tLRPC$TL_document, str2, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str3);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, videoEditedInfo, str2, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, sendingMediaInfo.ttl, str3, null, false, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str4;
        of.quick_reply_shortcut_id = i2;
        of.effect_id = j2;
        of.invert_media = z2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingMedia$92(Bitmap[] bitmapArr, String[] strArr, MessageObject messageObject, AccountInstance accountInstance, TLRPC$TL_photo tLRPC$TL_photo, HashMap hashMap, SendingMediaInfo sendingMediaInfo, String str, long j, MessageObject messageObject2, MessageObject messageObject3, boolean z, int i, boolean z2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, String str2, int i2, long j2, boolean z3) {
        if (bitmapArr[0] != null && strArr[0] != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapArr[0]), strArr[0], false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, tLRPC$TL_photo, null, null, null, hashMap, false, sendingMediaInfo.hasMediaSpoilers, str);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_photo, null, j, messageObject2, messageObject3, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap, z, i, sendingMediaInfo.ttl, str, z2, sendingMediaInfo.hasMediaSpoilers);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut = str2;
        of.quick_reply_shortcut_id = i2;
        of.effect_id = j2;
        of.invert_media = z3;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* JADX WARN: Removed duplicated region for block: B:67:0x008b A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:74:? A[RETURN, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static void fillVideoAttribute(String str, TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo, VideoEditedInfo videoEditedInfo) {
        boolean z;
        MediaMetadataRetriever mediaMetadataRetriever;
        String extractMetadata;
        MediaMetadataRetriever mediaMetadataRetriever2 = null;
        try {
            try {
                mediaMetadataRetriever = new MediaMetadataRetriever();
            } catch (Exception e) {
                e = e;
            }
        } catch (Throwable th) {
            th = th;
        }
        try {
            mediaMetadataRetriever.setDataSource(str);
            String extractMetadata2 = mediaMetadataRetriever.extractMetadata(18);
            if (extractMetadata2 != null) {
                tLRPC$TL_documentAttributeVideo.w = Integer.parseInt(extractMetadata2);
            }
            String extractMetadata3 = mediaMetadataRetriever.extractMetadata(19);
            if (extractMetadata3 != null) {
                tLRPC$TL_documentAttributeVideo.h = Integer.parseInt(extractMetadata3);
            }
            String extractMetadata4 = mediaMetadataRetriever.extractMetadata(9);
            if (extractMetadata4 != null) {
                double parseLong = Long.parseLong(extractMetadata4);
                Double.isNaN(parseLong);
                tLRPC$TL_documentAttributeVideo.duration = parseLong / 1000.0d;
            }
            if (Build.VERSION.SDK_INT >= 17 && (extractMetadata = mediaMetadataRetriever.extractMetadata(24)) != null) {
                int intValue = Utilities.parseInt((CharSequence) extractMetadata).intValue();
                if (videoEditedInfo != null) {
                    videoEditedInfo.rotationValue = intValue;
                } else if (intValue == 90 || intValue == 270) {
                    int i = tLRPC$TL_documentAttributeVideo.w;
                    tLRPC$TL_documentAttributeVideo.w = tLRPC$TL_documentAttributeVideo.h;
                    tLRPC$TL_documentAttributeVideo.h = i;
                }
            }
            z = true;
            try {
                mediaMetadataRetriever.release();
            } catch (Exception e2) {
                FileLog.e(e2);
            }
        } catch (Exception e3) {
            e = e3;
            mediaMetadataRetriever2 = mediaMetadataRetriever;
            FileLog.e(e);
            if (mediaMetadataRetriever2 != null) {
                try {
                    mediaMetadataRetriever2.release();
                } catch (Exception e4) {
                    FileLog.e(e4);
                }
            }
            z = false;
            if (z) {
            }
        } catch (Throwable th2) {
            th = th2;
            mediaMetadataRetriever2 = mediaMetadataRetriever;
            if (mediaMetadataRetriever2 != null) {
                try {
                    mediaMetadataRetriever2.release();
                } catch (Exception e5) {
                    FileLog.e(e5);
                }
            }
            throw th;
        }
        if (z) {
            try {
                MediaPlayer create = MediaPlayer.create(ApplicationLoader.applicationContext, Uri.fromFile(new File(str)));
                if (create != null) {
                    double duration = create.getDuration();
                    Double.isNaN(duration);
                    tLRPC$TL_documentAttributeVideo.duration = duration / 1000.0d;
                    tLRPC$TL_documentAttributeVideo.w = create.getVideoWidth();
                    tLRPC$TL_documentAttributeVideo.h = create.getVideoHeight();
                    create.release();
                }
            } catch (Exception e6) {
                FileLog.e(e6);
            }
        }
    }

    public static Bitmap createVideoThumbnail(String str, int i) {
        float f = i == 2 ? 1920.0f : i == 3 ? 96.0f : 512.0f;
        Bitmap createVideoThumbnailAtTime = createVideoThumbnailAtTime(str, 0L);
        if (createVideoThumbnailAtTime != null) {
            int width = createVideoThumbnailAtTime.getWidth();
            int height = createVideoThumbnailAtTime.getHeight();
            float f2 = width;
            if (f2 > f || height > f) {
                float max = Math.max(width, height) / f;
                return Bitmap.createScaledBitmap(createVideoThumbnailAtTime, (int) (f2 / max), (int) (height / max), true);
            }
            return createVideoThumbnailAtTime;
        }
        return createVideoThumbnailAtTime;
    }

    public static Bitmap createVideoThumbnailAtTime(String str, long j) {
        return createVideoThumbnailAtTime(str, j, null, false);
    }

    public static Bitmap createVideoThumbnailAtTime(String str, long j, int[] iArr, boolean z) {
        Bitmap bitmap;
        if (z) {
            AnimatedFileDrawable animatedFileDrawable = new AnimatedFileDrawable(new File(str), true, 0L, 0, null, null, null, 0L, 0, true, null);
            bitmap = animatedFileDrawable.getFrameAtTime(j, z);
            if (iArr != null) {
                iArr[0] = animatedFileDrawable.getOrientation();
            }
            animatedFileDrawable.recycle();
            if (bitmap == null) {
                return createVideoThumbnailAtTime(str, j, iArr, false);
            }
        } else {
            MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever();
            bitmap = null;
            try {
                try {
                    mediaMetadataRetriever.setDataSource(str);
                    Bitmap frameAtTime = mediaMetadataRetriever.getFrameAtTime(j, 1);
                    if (frameAtTime == null) {
                        try {
                            frameAtTime = mediaMetadataRetriever.getFrameAtTime(j, 3);
                        } catch (Exception unused) {
                        }
                    }
                    bitmap = frameAtTime;
                } finally {
                    try {
                        mediaMetadataRetriever.release();
                    } catch (Throwable unused2) {
                    }
                }
            } catch (Exception unused3) {
            }
        }
        return bitmap;
    }

    private static VideoEditedInfo createCompressionSettings(String str) {
        MediaCodecInfo selectCodec;
        int[] iArr = new int[11];
        AnimatedFileDrawable.getVideoInfo(str, iArr);
        if (iArr[0] == 0) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("video hasn't avc1 atom");
            }
            return null;
        }
        long length = new File(str).length();
        int videoBitrate = MediaController.getVideoBitrate(str);
        if (videoBitrate == -1) {
            videoBitrate = iArr[3];
        }
        float f = iArr[4];
        int i = iArr[6];
        long j = iArr[5];
        int i2 = iArr[7];
        if (Build.VERSION.SDK_INT < 18) {
            try {
                selectCodec = MediaController.selectCodec(MediaController.VIDEO_MIME_TYPE);
            } catch (Exception unused) {
            }
            if (selectCodec == null) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("no codec info for video/avc");
                }
                return null;
            }
            String name = selectCodec.getName();
            if (!name.equals("OMX.google.h264.encoder") && !name.equals("OMX.ST.VFM.H264Enc") && !name.equals("OMX.Exynos.avc.enc") && !name.equals("OMX.MARVELL.VIDEO.HW.CODA7542ENCODER") && !name.equals("OMX.MARVELL.VIDEO.H264ENCODER") && !name.equals("OMX.k3.video.encoder.avc") && !name.equals("OMX.TI.DUCATI1.VIDEO.H264E")) {
                if (MediaController.selectColorFormat(selectCodec, MediaController.VIDEO_MIME_TYPE) == 0) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("no color format for video/avc");
                    }
                    return null;
                }
            }
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("unsupported encoder = " + name);
            }
            return null;
        }
        VideoEditedInfo videoEditedInfo = new VideoEditedInfo();
        videoEditedInfo.startTime = -1L;
        videoEditedInfo.endTime = -1L;
        videoEditedInfo.bitrate = videoBitrate;
        videoEditedInfo.originalPath = str;
        videoEditedInfo.framerate = i2;
        videoEditedInfo.estimatedDuration = (long) Math.ceil(f);
        boolean z = true;
        int i3 = iArr[1];
        videoEditedInfo.originalWidth = i3;
        videoEditedInfo.resultWidth = i3;
        int i4 = iArr[2];
        videoEditedInfo.originalHeight = i4;
        videoEditedInfo.resultHeight = i4;
        videoEditedInfo.rotationValue = iArr[8];
        videoEditedInfo.originalDuration = f * 1000.0f;
        float max = Math.max(i3, i4);
        int i5 = max > 1280.0f ? 4 : max > 854.0f ? 3 : max > 640.0f ? 2 : 1;
        int round = Math.round(DownloadController.getInstance(UserConfig.selectedAccount).getMaxVideoBitrate() / (100.0f / i5));
        if (round > i5) {
            round = i5;
        }
        if (new File(str).length() < 1048576000) {
            if (round != i5 || Math.max(videoEditedInfo.originalWidth, videoEditedInfo.originalHeight) > 1280) {
                float f2 = round != 1 ? round != 2 ? round != 3 ? 1280.0f : 848.0f : 640.0f : 432.0f;
                int i6 = videoEditedInfo.originalWidth;
                int i7 = videoEditedInfo.originalHeight;
                float f3 = f2 / (i6 > i7 ? i6 : i7);
                videoEditedInfo.resultWidth = Math.round((i6 * f3) / 2.0f) * 2;
                videoEditedInfo.resultHeight = Math.round((videoEditedInfo.originalHeight * f3) / 2.0f) * 2;
            } else {
                z = false;
            }
            videoBitrate = MediaController.makeVideoBitrate(videoEditedInfo.originalHeight, videoEditedInfo.originalWidth, videoBitrate, videoEditedInfo.resultHeight, videoEditedInfo.resultWidth);
        } else {
            z = false;
        }
        if (!z) {
            videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
            videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
            videoEditedInfo.bitrate = videoBitrate;
            videoEditedInfo.estimatedSize = length;
        } else {
            videoEditedInfo.bitrate = videoBitrate;
            videoEditedInfo.estimatedSize = ((float) j) + (((f / 1000.0f) * MediaController.extractRealEncoderBitrate(videoEditedInfo.resultWidth, videoEditedInfo.resultHeight, videoBitrate, false)) / 8.0f);
        }
        if (videoEditedInfo.estimatedSize == 0) {
            videoEditedInfo.estimatedSize = 1L;
        }
        return videoEditedInfo;
    }

    public static void prepareSendingVideo(final AccountInstance accountInstance, final String str, final VideoEditedInfo videoEditedInfo, final long j, final MessageObject messageObject, final MessageObject messageObject2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final ArrayList<TLRPC$MessageEntity> arrayList, final int i, final MessageObject messageObject3, final boolean z, final int i2, final boolean z2, final boolean z3, final CharSequence charSequence, final String str2, final int i3, final long j2) {
        if (str == null || str.length() == 0) {
            return;
        }
        new Thread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda74
            @Override // java.lang.Runnable
            public final void run() {
                SendMessagesHelper.lambda$prepareSendingVideo$95(VideoEditedInfo.this, str, j, i, accountInstance, charSequence, messageObject3, z3, messageObject, messageObject2, arrayList, z, i2, tL_stories$StoryItem, replyQuote, i3, str2, j2, z2);
            }
        }).start();
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Removed duplicated region for block: B:101:0x0262  */
    /* JADX WARN: Removed duplicated region for block: B:104:0x027f  */
    /* JADX WARN: Removed duplicated region for block: B:108:0x0298  */
    /* JADX WARN: Removed duplicated region for block: B:134:0x031f  */
    /* JADX WARN: Removed duplicated region for block: B:137:0x032f  */
    /* JADX WARN: Removed duplicated region for block: B:144:0x036e  */
    /* JADX WARN: Removed duplicated region for block: B:147:0x0377  */
    /* JADX WARN: Removed duplicated region for block: B:149:0x037e  */
    /* JADX WARN: Removed duplicated region for block: B:54:0x012c  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void lambda$prepareSendingVideo$95(VideoEditedInfo videoEditedInfo, String str, final long j, final int i, final AccountInstance accountInstance, CharSequence charSequence, final MessageObject messageObject, final boolean z, final MessageObject messageObject2, final MessageObject messageObject3, final ArrayList arrayList, final boolean z2, final int i2, final TL_stories$StoryItem tL_stories$StoryItem, final ChatActivity.ReplyQuote replyQuote, final int i3, final String str2, final long j2, boolean z3) {
        long j3;
        String str3;
        int i4;
        TLRPC$TL_document tLRPC$TL_document;
        String str4;
        final Bitmap bitmap;
        TLRPC$TL_document tLRPC$TL_document2;
        final String str5;
        String str6;
        String str7;
        TLRPC$TL_documentAttributeVideo tLRPC$TL_documentAttributeVideo;
        int i5;
        int i6;
        final String str8 = str;
        VideoEditedInfo createCompressionSettings = videoEditedInfo != null ? videoEditedInfo : createCompressionSettings(str);
        boolean isEncryptedDialog = DialogObject.isEncryptedDialog(j);
        boolean z4 = createCompressionSettings != null && createCompressionSettings.roundVideo;
        if (createCompressionSettings != null || str8.endsWith("mp4") || z4) {
            File file = new File(str8);
            String str9 = str8 + file.length() + "_" + file.lastModified();
            long j4 = 0;
            if (createCompressionSettings != null) {
                if (!z4) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(str9);
                    sb.append(createCompressionSettings.estimatedDuration);
                    sb.append("_");
                    sb.append(createCompressionSettings.startTime);
                    sb.append("_");
                    sb.append(createCompressionSettings.endTime);
                    sb.append(createCompressionSettings.muted ? "_m" : "");
                    str9 = sb.toString();
                    if (createCompressionSettings.resultWidth != createCompressionSettings.originalWidth) {
                        str9 = str9 + "_" + createCompressionSettings.resultWidth;
                    }
                }
                long j5 = createCompressionSettings.startTime;
                if (j5 >= 0) {
                    j4 = j5;
                }
            }
            String str10 = str9;
            long j6 = j4;
            if (!isEncryptedDialog && i == 0 && (createCompressionSettings == null || (createCompressionSettings.filterState == null && createCompressionSettings.paintPath == null && createCompressionSettings.mediaEntities == null && createCompressionSettings.cropState == null))) {
                Object[] sentFile = accountInstance.getMessagesStorage().getSentFile(str10, !isEncryptedDialog ? 2 : 5);
                if (sentFile != null && (sentFile[0] instanceof TLRPC$TL_document)) {
                    tLRPC$TL_document = (TLRPC$TL_document) sentFile[0];
                    j3 = j6;
                    str3 = str10;
                    i4 = 2;
                    ensureMediaThumbExists(accountInstance, isEncryptedDialog, tLRPC$TL_document, str, null, j3);
                    str4 = (String) sentFile[1];
                    if (tLRPC$TL_document != null) {
                        Bitmap bitmap2 = (createCompressionSettings == null || !createCompressionSettings.notReadyYet) ? null : createCompressionSettings.thumb;
                        if (bitmap2 == null) {
                            bitmap2 = createVideoThumbnailAtTime(str8, j3);
                        }
                        if (bitmap2 == null) {
                            bitmap2 = createVideoThumbnail(str8, 1);
                        }
                        int i7 = (isEncryptedDialog || i != 0) ? 90 : 320;
                        float f = i7;
                        TLRPC$PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(bitmap2, f, f, i7 > 90 ? 80 : 55, isEncryptedDialog);
                        if (bitmap2 != null && scaleAndSaveImage != null) {
                            if (z4) {
                                if (isEncryptedDialog) {
                                    bitmap2 = Bitmap.createScaledBitmap(bitmap2, 90, 90, true);
                                    int i8 = Build.VERSION.SDK_INT;
                                    Utilities.blurBitmap(bitmap2, 7, i8 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Utilities.blurBitmap(bitmap2, 7, i8 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Utilities.blurBitmap(bitmap2, 7, i8 < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Object[] objArr = new Object[i4];
                                    objArr[0] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    objArr[1] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    str7 = String.format(scaleAndSaveImage.location.volume_id + "_" + scaleAndSaveImage.location.local_id + "@%d_%d_b2", objArr);
                                } else {
                                    Utilities.blurBitmap(bitmap2, 3, Build.VERSION.SDK_INT < 21 ? 0 : 1, bitmap2.getWidth(), bitmap2.getHeight(), bitmap2.getRowBytes());
                                    Object[] objArr2 = new Object[i4];
                                    objArr2[0] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    objArr2[1] = Integer.valueOf((int) (AndroidUtilities.roundMessageSize / AndroidUtilities.density));
                                    str7 = String.format(scaleAndSaveImage.location.volume_id + "_" + scaleAndSaveImage.location.local_id + "@%d_%d_b", objArr2);
                                }
                                TLRPC$TL_document tLRPC$TL_document3 = new TLRPC$TL_document();
                                if (scaleAndSaveImage != null) {
                                    tLRPC$TL_document3.thumbs.add(scaleAndSaveImage);
                                    tLRPC$TL_document3.flags |= 1;
                                }
                                tLRPC$TL_document3.file_reference = new byte[0];
                                tLRPC$TL_document3.mime_type = "video/mp4";
                                accountInstance.getUserConfig().saveConfig(false);
                                if (!isEncryptedDialog) {
                                    if (accountInstance.getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(j))) == null) {
                                        return;
                                    }
                                    tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo_layer159();
                                } else {
                                    tLRPC$TL_documentAttributeVideo = new TLRPC$TL_documentAttributeVideo();
                                    tLRPC$TL_documentAttributeVideo.supports_streaming = true;
                                }
                                tLRPC$TL_documentAttributeVideo.round_message = z4;
                                tLRPC$TL_document3.attributes.add(tLRPC$TL_documentAttributeVideo);
                                if (createCompressionSettings == null && createCompressionSettings.notReadyYet) {
                                    tLRPC$TL_documentAttributeVideo.w = createCompressionSettings.resultWidth;
                                    tLRPC$TL_documentAttributeVideo.h = createCompressionSettings.resultHeight;
                                    double d = createCompressionSettings.estimatedDuration;
                                    Double.isNaN(d);
                                    tLRPC$TL_documentAttributeVideo.duration = d / 1000.0d;
                                    tLRPC$TL_document3.size = createCompressionSettings.estimatedSize;
                                } else if (createCompressionSettings == null && createCompressionSettings.needConvert()) {
                                    if (createCompressionSettings.muted) {
                                        tLRPC$TL_document3.attributes.add(new TLRPC$TL_documentAttributeAnimated());
                                        fillVideoAttribute(str8, tLRPC$TL_documentAttributeVideo, createCompressionSettings);
                                        createCompressionSettings.originalWidth = tLRPC$TL_documentAttributeVideo.w;
                                        createCompressionSettings.originalHeight = tLRPC$TL_documentAttributeVideo.h;
                                    } else {
                                        double d2 = createCompressionSettings.estimatedDuration;
                                        Double.isNaN(d2);
                                        tLRPC$TL_documentAttributeVideo.duration = d2 / 1000.0d;
                                    }
                                    int i9 = createCompressionSettings.rotationValue;
                                    MediaController.CropState cropState = createCompressionSettings.cropState;
                                    if (cropState != null) {
                                        i5 = cropState.transformWidth;
                                        i6 = cropState.transformHeight;
                                        i9 += cropState.transformRotation;
                                    } else {
                                        i5 = createCompressionSettings.resultWidth;
                                        i6 = createCompressionSettings.resultHeight;
                                    }
                                    if (i9 == 90 || i9 == 270) {
                                        tLRPC$TL_documentAttributeVideo.w = i6;
                                        tLRPC$TL_documentAttributeVideo.h = i5;
                                    } else {
                                        tLRPC$TL_documentAttributeVideo.w = i5;
                                        tLRPC$TL_documentAttributeVideo.h = i6;
                                    }
                                    tLRPC$TL_document3.size = createCompressionSettings.estimatedSize;
                                } else {
                                    if (file.exists()) {
                                        tLRPC$TL_document3.size = (int) file.length();
                                    }
                                    fillVideoAttribute(str8, tLRPC$TL_documentAttributeVideo, null);
                                }
                                bitmap = bitmap2;
                                str5 = str7;
                                tLRPC$TL_document2 = tLRPC$TL_document3;
                            } else {
                                bitmap2 = null;
                            }
                        }
                        str7 = null;
                        TLRPC$TL_document tLRPC$TL_document32 = new TLRPC$TL_document();
                        if (scaleAndSaveImage != null) {
                        }
                        tLRPC$TL_document32.file_reference = new byte[0];
                        tLRPC$TL_document32.mime_type = "video/mp4";
                        accountInstance.getUserConfig().saveConfig(false);
                        if (!isEncryptedDialog) {
                        }
                        tLRPC$TL_documentAttributeVideo.round_message = z4;
                        tLRPC$TL_document32.attributes.add(tLRPC$TL_documentAttributeVideo);
                        if (createCompressionSettings == null) {
                        }
                        if (createCompressionSettings == null) {
                        }
                        if (file.exists()) {
                        }
                        fillVideoAttribute(str8, tLRPC$TL_documentAttributeVideo, null);
                        bitmap = bitmap2;
                        str5 = str7;
                        tLRPC$TL_document2 = tLRPC$TL_document32;
                    } else {
                        bitmap = null;
                        tLRPC$TL_document2 = tLRPC$TL_document;
                        str5 = null;
                    }
                    if (createCompressionSettings != null && createCompressionSettings.needConvert()) {
                        File file2 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + ".mp4");
                        SharedConfig.saveConfig();
                        str8 = file2.getAbsolutePath();
                    }
                    final HashMap hashMap = new HashMap();
                    final String charSequence2 = charSequence != null ? charSequence.toString() : "";
                    str6 = str3;
                    if (str6 != null) {
                        hashMap.put("originalPath", str6);
                    }
                    if (str4 != null) {
                        hashMap.put("parentObject", str4);
                    }
                    final VideoEditedInfo videoEditedInfo2 = createCompressionSettings;
                    final String str11 = str4;
                    final TLRPC$TL_document tLRPC$TL_document4 = tLRPC$TL_document2;
                    AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda6
                        @Override // java.lang.Runnable
                        public final void run() {
                            SendMessagesHelper.lambda$prepareSendingVideo$94(bitmap, str5, messageObject, accountInstance, videoEditedInfo2, tLRPC$TL_document4, str8, hashMap, z, str11, j, messageObject2, messageObject3, charSequence2, arrayList, z2, i2, i, tL_stories$StoryItem, replyQuote, i3, str2, j2);
                        }
                    });
                    return;
                }
            }
            j3 = j6;
            str3 = str10;
            i4 = 2;
            tLRPC$TL_document = null;
            str4 = null;
            if (tLRPC$TL_document != null) {
            }
            if (createCompressionSettings != null) {
                File file22 = new File(FileLoader.getDirectory(4), "-2147483648_" + SharedConfig.getLastLocalId() + ".mp4");
                SharedConfig.saveConfig();
                str8 = file22.getAbsolutePath();
            }
            final HashMap hashMap2 = new HashMap();
            if (charSequence != null) {
            }
            str6 = str3;
            if (str6 != null) {
            }
            if (str4 != null) {
            }
            final VideoEditedInfo videoEditedInfo22 = createCompressionSettings;
            final String str112 = str4;
            final TLRPC$TL_document tLRPC$TL_document42 = tLRPC$TL_document2;
            AndroidUtilities.runOnUIThread(new Runnable() { // from class: org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda6
                @Override // java.lang.Runnable
                public final void run() {
                    SendMessagesHelper.lambda$prepareSendingVideo$94(bitmap, str5, messageObject, accountInstance, videoEditedInfo22, tLRPC$TL_document42, str8, hashMap2, z, str112, j, messageObject2, messageObject3, charSequence2, arrayList, z2, i2, i, tL_stories$StoryItem, replyQuote, i3, str2, j2);
                }
            });
            return;
        }
        prepareSendingDocumentInternal(accountInstance, str, str, null, null, j, messageObject2, messageObject3, tL_stories$StoryItem, replyQuote, arrayList, messageObject, null, false, charSequence, z2, i2, null, z3, str2, i3, 0L, false);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static /* synthetic */ void lambda$prepareSendingVideo$94(Bitmap bitmap, String str, MessageObject messageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC$TL_document tLRPC$TL_document, String str2, HashMap hashMap, boolean z, String str3, long j, MessageObject messageObject2, MessageObject messageObject3, String str4, ArrayList arrayList, boolean z2, int i, int i2, TL_stories$StoryItem tL_stories$StoryItem, ChatActivity.ReplyQuote replyQuote, int i3, String str5, long j2) {
        if (bitmap != null && str != null) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (messageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(messageObject, null, videoEditedInfo, tLRPC$TL_document, str2, hashMap, false, z, str3);
            return;
        }
        SendMessageParams of = SendMessageParams.of(tLRPC$TL_document, videoEditedInfo, str2, j, messageObject2, messageObject3, str4, arrayList, null, hashMap, z2, i, i2, str3, null, false, z);
        of.replyToStoryItem = tL_stories$StoryItem;
        of.replyQuote = replyQuote;
        of.quick_reply_shortcut_id = i3;
        of.quick_reply_shortcut = str5;
        of.effect_id = j2;
        accountInstance.getSendMessagesHelper().sendMessage(of);
    }

    /* loaded from: classes3.dex */
    public static class SendMessageParams {
        public String caption;
        public TLRPC$TL_document document;
        public long effect_id;
        public ArrayList<TLRPC$MessageEntity> entities;
        public TLRPC$TL_game game;
        public boolean hasMediaSpoilers;
        public boolean invert_media;
        public TLRPC$TL_messageMediaInvoice invoice;
        public TLRPC$MessageMedia location;
        public TLRPC$TL_messageMediaWebPage mediaWebPage;
        public String message;
        public boolean notify;
        public HashMap<String, String> params;
        public Object parentObject;
        public String path;
        public long peer;
        public TLRPC$TL_photo photo;
        public TLRPC$TL_messageMediaPoll poll;
        public String quick_reply_shortcut;
        public int quick_reply_shortcut_id;
        public TLRPC$ReplyMarkup replyMarkup;
        public ChatActivity.ReplyQuote replyQuote;
        public MessageObject replyToMsg;
        public TL_stories$StoryItem replyToStoryItem;
        public MessageObject replyToTopMsg;
        public MessageObject retryMessageObject;
        public int scheduleDate;
        public boolean searchLinks = true;
        public MessageObject.SendAnimationData sendAnimationData;
        public TL_stories$StoryItem sendingStory;
        public int ttl;
        public boolean updateStickersOrder;
        public TLRPC$User user;
        public VideoEditedInfo videoEditedInfo;
        public TLRPC$WebPage webPage;

        public static SendMessageParams of(String str, long j) {
            return of(str, null, null, null, null, null, null, null, null, null, j, null, null, null, null, true, null, null, null, null, false, 0, 0, null, null, false);
        }

        public static SendMessageParams of(MessageObject messageObject) {
            long dialogId = messageObject.getDialogId();
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            SendMessageParams of = of(null, null, null, null, null, null, null, null, null, null, dialogId, tLRPC$Message.attachPath, null, null, null, true, messageObject, null, tLRPC$Message.reply_markup, tLRPC$Message.params, !tLRPC$Message.silent, messageObject.scheduled ? tLRPC$Message.date : 0, 0, null, null, false);
            TLRPC$Message tLRPC$Message2 = messageObject.messageOwner;
            if (tLRPC$Message2 != null) {
                TLRPC$InputQuickReplyShortcut tLRPC$InputQuickReplyShortcut = tLRPC$Message2.quick_reply_shortcut;
                if (tLRPC$InputQuickReplyShortcut instanceof TLRPC$TL_inputQuickReplyShortcut) {
                    of.quick_reply_shortcut = ((TLRPC$TL_inputQuickReplyShortcut) tLRPC$InputQuickReplyShortcut).shortcut;
                }
                of.quick_reply_shortcut_id = messageObject.getQuickReplyId();
            }
            return of;
        }

        public static SendMessageParams of(TLRPC$User tLRPC$User, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, tLRPC$User, null, null, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, null, null, null, null, tLRPC$TL_messageMediaInvoice, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_document tLRPC$TL_document, VideoEditedInfo videoEditedInfo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z2) {
            return of(null, str2, null, null, videoEditedInfo, null, tLRPC$TL_document, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, sendAnimationData, z2);
        }

        public static SendMessageParams of(TLRPC$TL_document tLRPC$TL_document, VideoEditedInfo videoEditedInfo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z2, boolean z3) {
            return of(null, str2, null, null, videoEditedInfo, null, tLRPC$TL_document, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, sendAnimationData, z2, z3);
        }

        public static SendMessageParams of(String str, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, MessageObject.SendAnimationData sendAnimationData, boolean z3) {
            return of(str, null, null, null, null, null, null, null, null, null, j, null, messageObject, messageObject2, tLRPC$WebPage, z, null, arrayList, tLRPC$ReplyMarkup, hashMap, z2, i, 0, null, sendAnimationData, z3);
        }

        public static SendMessageParams of(TLRPC$MessageMedia tLRPC$MessageMedia, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, tLRPC$MessageMedia, null, null, null, null, null, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, null, null, null, tLRPC$TL_messageMediaPoll, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_game tLRPC$TL_game, long j, MessageObject messageObject, MessageObject messageObject2, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i) {
            return of(null, null, null, null, null, null, null, tLRPC$TL_game, null, null, j, null, messageObject, messageObject2, null, true, null, null, tLRPC$ReplyMarkup, hashMap, z, i, 0, null, null, false);
        }

        public static SendMessageParams of(TLRPC$TL_photo tLRPC$TL_photo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, boolean z2, boolean z3) {
            return of(null, str2, null, tLRPC$TL_photo, null, null, null, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, null, z2, z3);
        }

        public static SendMessageParams of(TLRPC$TL_photo tLRPC$TL_photo, String str, long j, MessageObject messageObject, MessageObject messageObject2, String str2, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z, int i, int i2, Object obj, boolean z2) {
            return of(null, str2, null, tLRPC$TL_photo, null, null, null, null, null, null, j, str, messageObject, messageObject2, null, true, null, arrayList, tLRPC$ReplyMarkup, hashMap, z, i, i2, obj, null, z2);
        }

        private static SendMessageParams of(String str, String str2, TLRPC$MessageMedia tLRPC$MessageMedia, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$User tLRPC$User, TLRPC$TL_document tLRPC$TL_document, TLRPC$TL_game tLRPC$TL_game, TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, String str3, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, MessageObject messageObject3, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z3) {
            return of(str, str2, tLRPC$MessageMedia, tLRPC$TL_photo, videoEditedInfo, tLRPC$User, tLRPC$TL_document, tLRPC$TL_game, tLRPC$TL_messageMediaPoll, tLRPC$TL_messageMediaInvoice, j, str3, messageObject, messageObject2, tLRPC$WebPage, z, messageObject3, arrayList, tLRPC$ReplyMarkup, hashMap, z2, i, i2, obj, sendAnimationData, z3, false);
        }

        public static SendMessageParams of(String str, String str2, TLRPC$MessageMedia tLRPC$MessageMedia, TLRPC$TL_photo tLRPC$TL_photo, VideoEditedInfo videoEditedInfo, TLRPC$User tLRPC$User, TLRPC$TL_document tLRPC$TL_document, TLRPC$TL_game tLRPC$TL_game, TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, TLRPC$TL_messageMediaInvoice tLRPC$TL_messageMediaInvoice, long j, String str3, MessageObject messageObject, MessageObject messageObject2, TLRPC$WebPage tLRPC$WebPage, boolean z, MessageObject messageObject3, ArrayList<TLRPC$MessageEntity> arrayList, TLRPC$ReplyMarkup tLRPC$ReplyMarkup, HashMap<String, String> hashMap, boolean z2, int i, int i2, Object obj, MessageObject.SendAnimationData sendAnimationData, boolean z3, boolean z4) {
            SendMessageParams sendMessageParams = new SendMessageParams();
            sendMessageParams.message = str;
            sendMessageParams.caption = str2;
            sendMessageParams.location = tLRPC$MessageMedia;
            sendMessageParams.photo = tLRPC$TL_photo;
            sendMessageParams.videoEditedInfo = videoEditedInfo;
            sendMessageParams.user = tLRPC$User;
            sendMessageParams.document = tLRPC$TL_document;
            sendMessageParams.game = tLRPC$TL_game;
            sendMessageParams.poll = tLRPC$TL_messageMediaPoll;
            sendMessageParams.invoice = tLRPC$TL_messageMediaInvoice;
            sendMessageParams.peer = j;
            sendMessageParams.path = str3;
            sendMessageParams.replyToMsg = messageObject;
            sendMessageParams.replyToTopMsg = messageObject2;
            sendMessageParams.webPage = tLRPC$WebPage;
            sendMessageParams.searchLinks = z;
            sendMessageParams.retryMessageObject = messageObject3;
            sendMessageParams.entities = arrayList;
            sendMessageParams.replyMarkup = tLRPC$ReplyMarkup;
            sendMessageParams.params = hashMap;
            sendMessageParams.notify = z2;
            sendMessageParams.scheduleDate = i;
            sendMessageParams.ttl = i2;
            sendMessageParams.parentObject = obj;
            sendMessageParams.sendAnimationData = sendAnimationData;
            sendMessageParams.updateStickersOrder = z3;
            sendMessageParams.hasMediaSpoilers = z4;
            return sendMessageParams;
        }
    }
}
